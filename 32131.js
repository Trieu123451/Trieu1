function initScript() {
    window.Timeouts = Date.now(),
    function(e, t) {
        "use strict";
        "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function(e) {
            if (e.document)
                return t(e);
            throw new Error("jQuery requires a window with a document")
        }
        : t(e)
    }("undefined" != typeof window ? window : this, function(b, B) {
        "use strict";
        var e = []
          , m = b.document
          , w = Object.getPrototypeOf
          , s = e.slice
          , z = e.concat
          , k = e.push
          , r = e.indexOf
          , i = {}
          , W = i.toString
          , V = i.hasOwnProperty
          , U = V.toString
          , K = U.call(Object)
          , T = {};
        function x(e, t) {
            var i = (t = t || m).createElement("script");
            i.text = e,
            t.head.appendChild(i).parentNode.removeChild(i)
        }
        function F(e, t) {
            return t.toUpperCase()
        }
        var C = function(e, t) {
            return new C.fn.init(e,t)
        }
          , Y = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g
          , J = /^-ms-/
          , X = /-([a-z])/g;
        function j(e) {
            var t = !!e && "length"in e && e.length
              , i = C.type(e);
            return "function" !== i && !C.isWindow(e) && ("array" === i || 0 === t || "number" == typeof t && 0 < t && t - 1 in e)
        }
        C.fn = C.prototype = {
            jquery: "3.2.1",
            constructor: C,
            length: 0,
            toArray: function() {
                return s.call(this)
            },
            get: function(e) {
                return null == e ? s.call(this) : e < 0 ? this[e + this.length] : this[e]
            },
            pushStack: function(e) {
                e = C.merge(this.constructor(), e);
                return e.prevObject = this,
                e
            },
            each: function(e) {
                return C.each(this, e)
            },
            map: function(i) {
                return this.pushStack(C.map(this, function(e, t) {
                    return i.call(e, t, e)
                }))
            },
            slice: function() {
                return this.pushStack(s.apply(this, arguments))
            },
            first: function() {
                return this.eq(0)
            },
            last: function() {
                return this.eq(-1)
            },
            eq: function(e) {
                var t = this.length
                  , e = +e + (e < 0 ? t : 0);
                return this.pushStack(0 <= e && e < t ? [this[e]] : [])
            },
            end: function() {
                return this.prevObject || this.constructor()
            },
            push: k,
            sort: e.sort,
            splice: e.splice
        },
        C.extend = C.fn.extend = function() {
            var e, t, i, n, r, o = arguments[0] || {}, a = 1, s = arguments.length, d = !1;
            for ("boolean" == typeof o && (d = o,
            o = arguments[a] || {},
            a++),
            "object" == typeof o || C.isFunction(o) || (o = {}),
            a === s && (o = this,
            a--); a < s; a++)
                if (null != (e = arguments[a]))
                    for (t in e)
                        r = o[t],
                        i = e[t],
                        o !== i && (d && i && (C.isPlainObject(i) || (n = Array.isArray(i))) ? (r = n ? (n = !1,
                        r && Array.isArray(r) ? r : []) : r && C.isPlainObject(r) ? r : {},
                        o[t] = C.extend(d, r, i)) : void 0 !== i && (o[t] = i));
            return o
        }
        ,
        C.extend({
            expando: "jQuery" + ("3.2.1" + Math.random()).replace(/\D/g, ""),
            isReady: !0,
            error: function(e) {
                throw new Error(e)
            },
            noop: function() {},
            isFunction: function(e) {
                return "function" === C.type(e)
            },
            isWindow: function(e) {
                return null != e && e === e.window
            },
            isNumeric: function(e) {
                var t = C.type(e);
                return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e))
            },
            isPlainObject: function(e) {
                return !(!e || "[object Object]" !== W.call(e) || (e = w(e)) && ("function" != typeof (e = V.call(e, "constructor") && e.constructor) || U.call(e) !== K))
            },
            isEmptyObject: function(e) {
                for (var t in e)
                    return !1;
                return !0
            },
            type: function(e) {
                return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? i[W.call(e)] || "object" : typeof e
            },
            globalEval: function(e) {
                x(e)
            },
            camelCase: function(e) {
                return e.replace(J, "ms-").replace(X, F)
            },
            each: function(e, t) {
                var i, n = 0;
                if (j(e))
                    for (i = e.length; n < i && !1 !== t.call(e[n], n, e[n]); n++)
                        ;
                else
                    for (n in e)
                        if (!1 === t.call(e[n], n, e[n]))
                            break;
                return e
            },
            trim: function(e) {
                return null == e ? "" : (e + "").replace(Y, "")
            },
            makeArray: function(e, t) {
                t = t || [];
                return null != e && (j(Object(e)) ? C.merge(t, "string" == typeof e ? [e] : e) : k.call(t, e)),
                t
            },
            inArray: function(e, t, i) {
                return null == t ? -1 : r.call(t, e, i)
            },
            merge: function(e, t) {
                for (var i = +t.length, n = 0, r = e.length; n < i; n++)
                    e[r++] = t[n];
                return e.length = r,
                e
            },
            grep: function(e, t, i) {
                for (var n = [], r = 0, o = e.length, a = !i; r < o; r++)
                    !t(e[r], r) != a && n.push(e[r]);
                return n
            },
            map: function(e, t, i) {
                var n, r, o = 0, a = [];
                if (j(e))
                    for (n = e.length; o < n; o++)
                        null != (r = t(e[o], o, i)) && a.push(r);
                else
                    for (o in e)
                        r = t(e[o], o, i),
                        null != r && a.push(r);
                return z.apply([], a)
            },
            guid: 1,
            proxy: function(e, t) {
                var i, n;
                if ("string" == typeof t && (n = e[t],
                t = e,
                e = n),
                C.isFunction(e))
                    return i = s.call(arguments, 2),
                    (n = function() {
                        return e.apply(t || this, i.concat(s.call(arguments)))
                    }
                    ).guid = e.guid = e.guid || C.guid++,
                    n
            },
            now: Date.now,
            support: T
        }),
        "function" == typeof Symbol && (C.fn[Symbol.iterator] = e[Symbol.iterator]),
        C.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e, t) {
            i["[object " + t + "]"] = t.toLowerCase()
        });
        function n(e, t, i) {
            for (var n = [], r = void 0 !== i; (e = e[t]) && 9 !== e.nodeType; )
                if (1 === e.nodeType) {
                    if (r && C(e).is(i))
                        break;
                    n.push(e)
                }
            return n
        }
        function q(e, t) {
            for (var i = []; e; e = e.nextSibling)
                1 === e.nodeType && e !== t && i.push(e);
            return i
        }
        var e = function(B) {
            function l(e, t, i) {
                var n = "0x" + t - 65536;
                return n != n || i ? t : n < 0 ? String.fromCharCode(65536 + n) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320)
            }
            function w() {
                m()
            }
            var e, h, O, o, z, E, k, W, b, d, _, m, C, i, R, T, n, r, A, S = "sizzle" + +new Date, I = B.document, N = 0, V = 0, U = le(), K = le(), p = le(), x = function(e, t) {
                return e === t && (_ = !0),
                0
            }, F = {}.hasOwnProperty, t = [], Y = t.pop, J = t.push, D = t.push, X = t.slice, g = function(e, t) {
                for (var i = 0, n = e.length; i < n; i++)
                    if (e[i] === t)
                        return i;
                return -1
            }, j = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", a = "[\\x20\\t\\r\\n\\f]", s = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+", q = "\\[" + a + "*(" + s + ")(?:" + a + "*([*^$|!~]?=)" + a + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + s + "))|)" + a + "*\\]", Z = ":(" + s + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + q + ")*)|.*)\\)|)", $ = new RegExp(a + "+","g"), f = new RegExp("^" + a + "+|((?:^|[^\\\\])(?:\\\\.)*)" + a + "+$","g"), Q = new RegExp("^" + a + "*," + a + "*"), ee = new RegExp("^" + a + "*([>+~]|" + a + ")" + a + "*"), te = new RegExp("=" + a + "*([^\\]'\"]*?)" + a + "*\\]","g"), ie = new RegExp(Z), ne = new RegExp("^" + s + "$"), c = {
                ID: new RegExp("^#(" + s + ")"),
                CLASS: new RegExp("^\\.(" + s + ")"),
                TAG: new RegExp("^(" + s + "|[*])"),
                ATTR: new RegExp("^" + q),
                PSEUDO: new RegExp("^" + Z),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + a + "*(even|odd|(([+-]|)(\\d*)n|)" + a + "*(?:([+-]|)" + a + "*(\\d+)|))" + a + "*\\)|)","i"),
                bool: new RegExp("^(?:" + j + ")$","i"),
                needsContext: new RegExp("^" + a + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + a + "*((?:-\\d)?\\d*)" + a + "*\\)|)(?=[^-]|$)","i")
            }, re = /^(?:input|select|textarea|button)$/i, oe = /^h\d$/i, u = /^[^{]+\{\s*\[native \w/, ae = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, se = /[+~]/, v = new RegExp("\\\\([\\da-f]{1,6}" + a + "?|(" + a + ")|.)","ig"), de = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, _e = function(e, t) {
                return t ? "\0" === e ? "ï¿½" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e
            }, ue = P(function(e) {
                return !0 === e.disabled && ("form"in e || "label"in e)
            }, {
                dir: "parentNode",
                next: "legend"
            });
            try {
                D.apply(t = X.call(I.childNodes), I.childNodes),
                t[I.childNodes.length].nodeType
            } catch (e) {
                D = {
                    apply: t.length ? function(e, t) {
                        J.apply(e, X.call(t))
                    }
                    : function(e, t) {
                        for (var i = e.length, n = 0; e[i++] = t[n++]; )
                            ;
                        e.length = i - 1
                    }
                }
            }
            function M(e, t, i, n) {
                var r, o, a, s, d, _, u, l = t && t.ownerDocument, c = t ? t.nodeType : 9;
                if (i = i || [],
                "string" != typeof e || !e || 1 !== c && 9 !== c && 11 !== c)
                    return i;
                if (!n && ((t ? t.ownerDocument || t : I) !== C && m(t),
                t = t || C,
                R)) {
                    if (11 !== c && (d = ae.exec(e)))
                        if (r = d[1]) {
                            if (9 === c) {
                                if (!(a = t.getElementById(r)))
                                    return i;
                                if (a.id === r)
                                    return i.push(a),
                                    i
                            } else if (l && (a = l.getElementById(r)) && A(t, a) && a.id === r)
                                return i.push(a),
                                i
                        } else {
                            if (d[2])
                                return D.apply(i, t.getElementsByTagName(e)),
                                i;
                            if ((r = d[3]) && h.getElementsByClassName && t.getElementsByClassName)
                                return D.apply(i, t.getElementsByClassName(r)),
                                i
                        }
                    if (h.qsa && !p[e + " "] && (!T || !T.test(e))) {
                        if (1 !== c)
                            l = t,
                            u = e;
                        else if ("object" !== t.nodeName.toLowerCase()) {
                            for ((s = t.getAttribute("id")) ? s = s.replace(de, _e) : t.setAttribute("id", s = S),
                            o = (_ = E(e)).length; o--; )
                                _[o] = "#" + s + " " + H(_[o]);
                            u = _.join(","),
                            l = se.test(e) && Te(t.parentNode) || t
                        }
                        if (u)
                            try {
                                return D.apply(i, l.querySelectorAll(u)),
                                i
                            } catch (e) {} finally {
                                s === S && t.removeAttribute("id")
                            }
                    }
                }
                return W(e.replace(f, "$1"), t, i, n)
            }
            function le() {
                var i = [];
                function n(e, t) {
                    return i.push(e + " ") > O.cacheLength && delete n[i.shift()],
                    n[e + " "] = t
                }
                return n
            }
            function y(e) {
                return e[S] = !0,
                e
            }
            function L(e) {
                var t = C.createElement("fieldset");
                try {
                    return !!e(t)
                } catch (e) {
                    return !1
                } finally {
                    t.parentNode && t.parentNode.removeChild(t)
                }
            }
            function ce(e, t) {
                for (var i = e.split("|"), n = i.length; n--; )
                    O.attrHandle[i[n]] = t
            }
            function he(e, t) {
                var i = t && e
                  , n = i && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
                if (n)
                    return n;
                if (i)
                    for (; i = i.nextSibling; )
                        if (i === t)
                            return -1;
                return e ? 1 : -1
            }
            function Ee(t) {
                return function(e) {
                    return "form"in e ? e.parentNode && !1 === e.disabled ? "label"in e ? "label"in e.parentNode ? e.parentNode.disabled === t : e.disabled === t : e.isDisabled === t || e.isDisabled !== !t && ue(e) === t : e.disabled === t : "label"in e && e.disabled === t
                }
            }
            function G(a) {
                return y(function(o) {
                    return o = +o,
                    y(function(e, t) {
                        for (var i, n = a([], e.length, o), r = n.length; r--; )
                            e[i = n[r]] && (e[i] = !(t[i] = e[i]))
                    })
                })
            }
            function Te(e) {
                return e && void 0 !== e.getElementsByTagName && e
            }
            for (e in h = M.support = {},
            z = M.isXML = function(e) {
                e = e && (e.ownerDocument || e).documentElement;
                return !!e && "HTML" !== e.nodeName
            }
            ,
            m = M.setDocument = function(e) {
                var e = e ? e.ownerDocument || e : I;
                return e !== C && 9 === e.nodeType && e.documentElement && (i = (C = e).documentElement,
                R = !z(C),
                I !== C && (e = C.defaultView) && e.top !== e && (e.addEventListener ? e.addEventListener("unload", w, !1) : e.attachEvent && e.attachEvent("onunload", w)),
                h.attributes = L(function(e) {
                    return e.className = "i",
                    !e.getAttribute("className")
                }),
                h.getElementsByTagName = L(function(e) {
                    return e.appendChild(C.createComment("")),
                    !e.getElementsByTagName("*").length
                }),
                h.getElementsByClassName = u.test(C.getElementsByClassName),
                h.getById = L(function(e) {
                    return i.appendChild(e).id = S,
                    !C.getElementsByName || !C.getElementsByName(S).length
                }),
                h.getById ? (O.filter.ID = function(e) {
                    var t = e.replace(v, l);
                    return function(e) {
                        return e.getAttribute("id") === t
                    }
                }
                ,
                O.find.ID = function(e, t) {
                    if (void 0 !== t.getElementById && R)
                        return (t = t.getElementById(e)) ? [t] : []
                }
                ) : (O.filter.ID = function(e) {
                    var t = e.replace(v, l);
                    return function(e) {
                        e = void 0 !== e.getAttributeNode && e.getAttributeNode("id");
                        return e && e.value === t
                    }
                }
                ,
                O.find.ID = function(e, t) {
                    if (void 0 !== t.getElementById && R) {
                        var i, n, r, o = t.getElementById(e);
                        if (o) {
                            if ((i = o.getAttributeNode("id")) && i.value === e)
                                return [o];
                            for (r = t.getElementsByName(e),
                            n = 0; o = r[n++]; )
                                if ((i = o.getAttributeNode("id")) && i.value === e)
                                    return [o]
                        }
                        return []
                    }
                }
                ),
                O.find.TAG = h.getElementsByTagName ? function(e, t) {
                    return void 0 !== t.getElementsByTagName ? t.getElementsByTagName(e) : h.qsa ? t.querySelectorAll(e) : void 0
                }
                : function(e, t) {
                    var i, n = [], r = 0, o = t.getElementsByTagName(e);
                    if ("*" !== e)
                        return o;
                    for (; i = o[r++]; )
                        1 === i.nodeType && n.push(i);
                    return n
                }
                ,
                O.find.CLASS = h.getElementsByClassName && function(e, t) {
                    if (void 0 !== t.getElementsByClassName && R)
                        return t.getElementsByClassName(e)
                }
                ,
                n = [],
                T = [],
                (h.qsa = u.test(C.querySelectorAll)) && (L(function(e) {
                    i.appendChild(e).innerHTML = "<a id='" + S + "'></a><select id='" + S + "-\r\\' msallowcapture=''><option selected=''></option></select>",
                    e.querySelectorAll("[msallowcapture^='']").length && T.push("[*^$]=" + a + "*(?:''|\"\")"),
                    e.querySelectorAll("[selected]").length || T.push("\\[" + a + "*(?:value|" + j + ")"),
                    e.querySelectorAll("[id~=" + S + "-]").length || T.push("~="),
                    e.querySelectorAll(":checked").length || T.push(":checked"),
                    e.querySelectorAll("a#" + S + "+*").length || T.push(".#.+[+~]")
                }),
                L(function(e) {
                    e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                    var t = C.createElement("input");
                    t.setAttribute("type", "hidden"),
                    e.appendChild(t).setAttribute("name", "D"),
                    e.querySelectorAll("[name=d]").length && T.push("name" + a + "*[*^$|!~]?="),
                    2 !== e.querySelectorAll(":enabled").length && T.push(":enabled", ":disabled"),
                    i.appendChild(e).disabled = !0,
                    2 !== e.querySelectorAll(":disabled").length && T.push(":enabled", ":disabled"),
                    e.querySelectorAll("*,:x"),
                    T.push(",.*:")
                })),
                (h.matchesSelector = u.test(r = i.matches || i.webkitMatchesSelector || i.mozMatchesSelector || i.oMatchesSelector || i.msMatchesSelector)) && L(function(e) {
                    h.disconnectedMatch = r.call(e, "*"),
                    r.call(e, "[s!='']:x"),
                    n.push("!=", Z)
                }),
                T = T.length && new RegExp(T.join("|")),
                n = n.length && new RegExp(n.join("|")),
                e = u.test(i.compareDocumentPosition),
                A = e || u.test(i.contains) ? function(e, t) {
                    var i = 9 === e.nodeType ? e.documentElement : e
                      , t = t && t.parentNode;
                    return e === t || !(!t || 1 !== t.nodeType || !(i.contains ? i.contains(t) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(t)))
                }
                : function(e, t) {
                    if (t)
                        for (; t = t.parentNode; )
                            if (t === e)
                                return !0;
                    return !1
                }
                ,
                x = e ? function(e, t) {
                    var i;
                    return e === t ? (_ = !0,
                    0) : (i = !e.compareDocumentPosition - !t.compareDocumentPosition) || (1 & (i = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !h.sortDetached && t.compareDocumentPosition(e) === i ? e === C || e.ownerDocument === I && A(I, e) ? -1 : t === C || t.ownerDocument === I && A(I, t) ? 1 : d ? g(d, e) - g(d, t) : 0 : 4 & i ? -1 : 1)
                }
                : function(e, t) {
                    if (e === t)
                        return _ = !0,
                        0;
                    var i, n = 0, r = e.parentNode, o = t.parentNode, a = [e], s = [t];
                    if (!r || !o)
                        return e === C ? -1 : t === C ? 1 : r ? -1 : o ? 1 : d ? g(d, e) - g(d, t) : 0;
                    if (r === o)
                        return he(e, t);
                    for (i = e; i = i.parentNode; )
                        a.unshift(i);
                    for (i = t; i = i.parentNode; )
                        s.unshift(i);
                    for (; a[n] === s[n]; )
                        n++;
                    return n ? he(a[n], s[n]) : a[n] === I ? -1 : s[n] === I ? 1 : 0
                }
                ),
                C
            }
            ,
            M.matches = function(e, t) {
                return M(e, null, null, t)
            }
            ,
            M.matchesSelector = function(e, t) {
                if ((e.ownerDocument || e) !== C && m(e),
                t = t.replace(te, "='$1']"),
                h.matchesSelector && R && !p[t + " "] && (!n || !n.test(t)) && (!T || !T.test(t)))
                    try {
                        var i = r.call(e, t);
                        if (i || h.disconnectedMatch || e.document && 11 !== e.document.nodeType)
                            return i
                    } catch (e) {}
                return 0 < M(t, C, null, [e]).length
            }
            ,
            M.contains = function(e, t) {
                return (e.ownerDocument || e) !== C && m(e),
                A(e, t)
            }
            ,
            M.attr = function(e, t) {
                (e.ownerDocument || e) !== C && m(e);
                var i = O.attrHandle[t.toLowerCase()]
                  , i = i && F.call(O.attrHandle, t.toLowerCase()) ? i(e, t, !R) : void 0;
                return void 0 !== i ? i : h.attributes || !R ? e.getAttribute(t) : (i = e.getAttributeNode(t)) && i.specified ? i.value : null
            }
            ,
            M.escape = function(e) {
                return (e + "").replace(de, _e)
            }
            ,
            M.error = function(e) {
                throw new Error("Syntax error, unrecognized expression: " + e)
            }
            ,
            M.uniqueSort = function(e) {
                var t, i = [], n = 0, r = 0;
                if (_ = !h.detectDuplicates,
                d = !h.sortStable && e.slice(0),
                e.sort(x),
                _) {
                    for (; t = e[r++]; )
                        t === e[r] && (n = i.push(r));
                    for (; n--; )
                        e.splice(i[n], 1)
                }
                return d = null,
                e
            }
            ,
            o = M.getText = function(e) {
                var t, i = "", n = 0, r = e.nodeType;
                if (r) {
                    if (1 === r || 9 === r || 11 === r) {
                        if ("string" == typeof e.textContent)
                            return e.textContent;
                        for (e = e.firstChild; e; e = e.nextSibling)
                            i += o(e)
                    } else if (3 === r || 4 === r)
                        return e.nodeValue
                } else
                    for (; t = e[n++]; )
                        i += o(t);
                return i
            }
            ,
            (O = M.selectors = {
                cacheLength: 50,
                createPseudo: y,
                match: c,
                attrHandle: {},
                find: {},
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: !0
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: !0
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(e) {
                        return e[1] = e[1].replace(v, l),
                        e[3] = (e[3] || e[4] || e[5] || "").replace(v, l),
                        "~=" === e[2] && (e[3] = " " + e[3] + " "),
                        e.slice(0, 4)
                    },
                    CHILD: function(e) {
                        return e[1] = e[1].toLowerCase(),
                        "nth" === e[1].slice(0, 3) ? (e[3] || M.error(e[0]),
                        e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])),
                        e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && M.error(e[0]),
                        e
                    },
                    PSEUDO: function(e) {
                        var t, i = !e[6] && e[2];
                        return c.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : i && ie.test(i) && (t = (t = E(i, !0)) && i.indexOf(")", i.length - t) - i.length) && (e[0] = e[0].slice(0, t),
                        e[2] = i.slice(0, t)),
                        e.slice(0, 3))
                    }
                },
                filter: {
                    TAG: function(e) {
                        var t = e.replace(v, l).toLowerCase();
                        return "*" === e ? function() {
                            return !0
                        }
                        : function(e) {
                            return e.nodeName && e.nodeName.toLowerCase() === t
                        }
                    },
                    CLASS: function(e) {
                        var t = U[e + " "];
                        return t || (t = new RegExp("(^|" + a + ")" + e + "(" + a + "|$)")) && U(e, function(e) {
                            return t.test("string" == typeof e.className && e.className || void 0 !== e.getAttribute && e.getAttribute("class") || "")
                        })
                    },
                    ATTR: function(t, i, n) {
                        return function(e) {
                            e = M.attr(e, t);
                            return null == e ? "!=" === i : !i || (e += "",
                            "=" === i ? e === n : "!=" === i ? e !== n : "^=" === i ? n && 0 === e.indexOf(n) : "*=" === i ? n && -1 < e.indexOf(n) : "$=" === i ? n && e.slice(-n.length) === n : "~=" === i ? -1 < (" " + e.replace($, " ") + " ").indexOf(n) : "|=" === i && (e === n || e.slice(0, n.length + 1) === n + "-"))
                        }
                    },
                    CHILD: function(E, e, t, T, A) {
                        var I = "nth" !== E.slice(0, 3)
                          , p = "last" !== E.slice(-4)
                          , g = "of-type" === e;
                        return 1 === T && 0 === A ? function(e) {
                            return !!e.parentNode
                        }
                        : function(e, t, i) {
                            var n, r, o, a, s, d, _ = I != p ? "nextSibling" : "previousSibling", u = e.parentNode, l = g && e.nodeName.toLowerCase(), c = !i && !g, h = !1;
                            if (u) {
                                if (I) {
                                    for (; _; ) {
                                        for (a = e; a = a[_]; )
                                            if (g ? a.nodeName.toLowerCase() === l : 1 === a.nodeType)
                                                return !1;
                                        d = _ = "only" === E && !d && "nextSibling"
                                    }
                                    return !0
                                }
                                if (d = [p ? u.firstChild : u.lastChild],
                                p && c) {
                                    for (h = (s = (n = (r = (o = (a = u)[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[E] || [])[0] === N && n[1]) && n[2],
                                    a = s && u.childNodes[s]; a = ++s && a && a[_] || (h = s = 0,
                                    d.pop()); )
                                        if (1 === a.nodeType && ++h && a === e) {
                                            r[E] = [N, s, h];
                                            break
                                        }
                                } else if (!1 === (h = c ? s = (n = (r = (o = (a = e)[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[E] || [])[0] === N && n[1] : h))
                                    for (; (a = ++s && a && a[_] || (h = s = 0,
                                    d.pop())) && ((g ? a.nodeName.toLowerCase() !== l : 1 !== a.nodeType) || !++h || (c && ((r = (o = a[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[E] = [N, h]),
                                    a !== e)); )
                                        ;
                                return (h -= A) === T || h % T == 0 && 0 <= h / T
                            }
                        }
                    },
                    PSEUDO: function(e, o) {
                        var t, a = O.pseudos[e] || O.setFilters[e.toLowerCase()] || M.error("unsupported pseudo: " + e);
                        return a[S] ? a(o) : 1 < a.length ? (t = [e, e, "", o],
                        O.setFilters.hasOwnProperty(e.toLowerCase()) ? y(function(e, t) {
                            for (var i, n = a(e, o), r = n.length; r--; )
                                e[i = g(e, n[r])] = !(t[i] = n[r])
                        }) : function(e) {
                            return a(e, 0, t)
                        }
                        ) : a
                    }
                },
                pseudos: {
                    not: y(function(e) {
                        var n = []
                          , r = []
                          , s = k(e.replace(f, "$1"));
                        return s[S] ? y(function(e, t, i, n) {
                            for (var r, o = s(e, null, n, []), a = e.length; a--; )
                                (r = o[a]) && (e[a] = !(t[a] = r))
                        }) : function(e, t, i) {
                            return n[0] = e,
                            s(n, null, i, r),
                            n[0] = null,
                            !r.pop()
                        }
                    }),
                    has: y(function(t) {
                        return function(e) {
                            return 0 < M(t, e).length
                        }
                    }),
                    contains: y(function(t) {
                        return t = t.replace(v, l),
                        function(e) {
                            return -1 < (e.textContent || e.innerText || o(e)).indexOf(t)
                        }
                    }),
                    lang: y(function(i) {
                        return ne.test(i || "") || M.error("unsupported lang: " + i),
                        i = i.replace(v, l).toLowerCase(),
                        function(e) {
                            var t;
                            do {
                                if (t = R ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang"))
                                    return (t = t.toLowerCase()) === i || 0 === t.indexOf(i + "-")
                            } while ((e = e.parentNode) && 1 === e.nodeType);
                            return !1
                        }
                    }),
                    target: function(e) {
                        var t = B.location && B.location.hash;
                        return t && t.slice(1) === e.id
                    },
                    root: function(e) {
                        return e === i
                    },
                    focus: function(e) {
                        return e === C.activeElement && (!C.hasFocus || C.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                    },
                    enabled: Ee(!1),
                    disabled: Ee(!0),
                    checked: function(e) {
                        var t = e.nodeName.toLowerCase();
                        return "input" === t && !!e.checked || "option" === t && !!e.selected
                    },
                    selected: function(e) {
                        return e.parentNode && e.parentNode.selectedIndex,
                        !0 === e.selected
                    },
                    empty: function(e) {
                        for (e = e.firstChild; e; e = e.nextSibling)
                            if (e.nodeType < 6)
                                return !1;
                        return !0
                    },
                    parent: function(e) {
                        return !O.pseudos.empty(e)
                    },
                    header: function(e) {
                        return oe.test(e.nodeName)
                    },
                    input: function(e) {
                        return re.test(e.nodeName)
                    },
                    button: function(e) {
                        var t = e.nodeName.toLowerCase();
                        return "input" === t && "button" === e.type || "button" === t
                    },
                    text: function(e) {
                        return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (e = e.getAttribute("type")) || "text" === e.toLowerCase())
                    },
                    first: G(function() {
                        return [0]
                    }),
                    last: G(function(e, t) {
                        return [t - 1]
                    }),
                    eq: G(function(e, t, i) {
                        return [i < 0 ? i + t : i]
                    }),
                    even: G(function(e, t) {
                        for (var i = 0; i < t; i += 2)
                            e.push(i);
                        return e
                    }),
                    odd: G(function(e, t) {
                        for (var i = 1; i < t; i += 2)
                            e.push(i);
                        return e
                    }),
                    lt: G(function(e, t, i) {
                        for (var n = i < 0 ? i + t : i; 0 <= --n; )
                            e.push(n);
                        return e
                    }),
                    gt: G(function(e, t, i) {
                        for (var n = i < 0 ? i + t : i; ++n < t; )
                            e.push(n);
                        return e
                    })
                }
            }).pseudos.nth = O.pseudos.eq,
            {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            })
                O.pseudos[e] = function(t) {
                    return function(e) {
                        return "input" === e.nodeName.toLowerCase() && e.type === t
                    }
                }(e);
            for (e in {
                submit: !0,
                reset: !0
            })
                O.pseudos[e] = function(i) {
                    return function(e) {
                        var t = e.nodeName.toLowerCase();
                        return ("input" === t || "button" === t) && e.type === i
                    }
                }(e);
            function Ae() {}
            function H(e) {
                for (var t = 0, i = e.length, n = ""; t < i; t++)
                    n += e[t].value;
                return n
            }
            function P(a, e, t) {
                var s = e.dir
                  , d = e.next
                  , _ = d || s
                  , u = t && "parentNode" === _
                  , l = V++;
                return e.first ? function(e, t, i) {
                    for (; e = e[s]; )
                        if (1 === e.nodeType || u)
                            return a(e, t, i);
                    return !1
                }
                : function(e, t, i) {
                    var n, r, o = [N, l];
                    if (i) {
                        for (; e = e[s]; )
                            if ((1 === e.nodeType || u) && a(e, t, i))
                                return !0
                    } else
                        for (; e = e[s]; )
                            if (1 === e.nodeType || u)
                                if (r = (r = e[S] || (e[S] = {}))[e.uniqueID] || (r[e.uniqueID] = {}),
                                d && d === e.nodeName.toLowerCase())
                                    e = e[s] || e;
                                else {
                                    if ((n = r[_]) && n[0] === N && n[1] === l)
                                        return o[2] = n[2];
                                    if ((r[_] = o)[2] = a(e, t, i))
                                        return !0
                                }
                    return !1
                }
            }
            function Ie(r) {
                return 1 < r.length ? function(e, t, i) {
                    for (var n = r.length; n--; )
                        if (!r[n](e, t, i))
                            return !1;
                    return !0
                }
                : r[0]
            }
            function pe(e, t, i, n, r) {
                for (var o, a = [], s = 0, d = e.length, _ = null != t; s < d; s++)
                    !(o = e[s]) || i && !i(o, n, r) || (a.push(o),
                    _ && t.push(s));
                return a
            }
            function ge(h, E, T, A, I, e) {
                return A && !A[S] && (A = ge(A)),
                I && !I[S] && (I = ge(I, e)),
                y(function(e, t, i, n) {
                    var r, o, a, s = [], d = [], _ = t.length, u = e || function(e, t, i) {
                        for (var n = 0, r = t.length; n < r; n++)
                            M(e, t[n], i);
                        return i
                    }(E || "*", i.nodeType ? [i] : i, []), l = !h || !e && E ? u : pe(u, s, h, i, n), c = T ? I || (e ? h : _ || A) ? [] : t : l;
                    if (T && T(l, c, i, n),
                    A)
                        for (r = pe(c, d),
                        A(r, [], i, n),
                        o = r.length; o--; )
                            (a = r[o]) && (c[d[o]] = !(l[d[o]] = a));
                    if (e) {
                        if (I || h) {
                            if (I) {
                                for (r = [],
                                o = c.length; o--; )
                                    (a = c[o]) && r.push(l[o] = a);
                                I(null, c = [], r, n)
                            }
                            for (o = c.length; o--; )
                                (a = c[o]) && -1 < (r = I ? g(e, a) : s[o]) && (e[r] = !(t[r] = a))
                        }
                    } else
                        c = pe(c === t ? c.splice(_, c.length) : c),
                        I ? I(null, t, c, n) : D.apply(t, c)
                })
            }
            function Oe(A, I) {
                function e(e, t, i, n, r) {
                    var o, a, s, d = 0, _ = "0", u = e && [], l = [], c = b, h = e || g && O.find.TAG("*", r), E = N += null == c ? 1 : Math.random() || .1, T = h.length;
                    for (r && (b = t === C || t || r); _ !== T && null != (o = h[_]); _++) {
                        if (g && o) {
                            for (a = 0,
                            t || o.ownerDocument === C || (m(o),
                            i = !R); s = A[a++]; )
                                if (s(o, t || C, i)) {
                                    n.push(o);
                                    break
                                }
                            r && (N = E)
                        }
                        p && ((o = !s && o) && d--,
                        e) && u.push(o)
                    }
                    if (d += _,
                    p && _ !== d) {
                        for (a = 0; s = I[a++]; )
                            s(u, l, t, i);
                        if (e) {
                            if (0 < d)
                                for (; _--; )
                                    u[_] || l[_] || (l[_] = Y.call(n));
                            l = pe(l)
                        }
                        D.apply(n, l),
                        r && !e && 0 < l.length && 1 < d + I.length && M.uniqueSort(n)
                    }
                    return r && (N = E,
                    b = c),
                    u
                }
                var p = 0 < I.length
                  , g = 0 < A.length;
                return p ? y(e) : e
            }
            return Ae.prototype = O.filters = O.pseudos,
            O.setFilters = new Ae,
            E = M.tokenize = function(e, t) {
                var i, n, r, o, a, s, d, _ = K[e + " "];
                if (_)
                    return t ? 0 : _.slice(0);
                for (a = e,
                s = [],
                d = O.preFilter; a; ) {
                    for (o in i && !(n = Q.exec(a)) || (n && (a = a.slice(n[0].length) || a),
                    s.push(r = [])),
                    i = !1,
                    (n = ee.exec(a)) && (i = n.shift(),
                    r.push({
                        value: i,
                        type: n[0].replace(f, " ")
                    }),
                    a = a.slice(i.length)),
                    O.filter)
                        !(n = c[o].exec(a)) || d[o] && !(n = d[o](n)) || (i = n.shift(),
                        r.push({
                            value: i,
                            type: o,
                            matches: n
                        }),
                        a = a.slice(i.length));
                    if (!i)
                        break
                }
                return t ? a.length : a ? M.error(e) : K(e, s).slice(0)
            }
            ,
            k = M.compile = function(e, t) {
                var i, n = [], r = [], o = p[e + " "];
                if (!o) {
                    for (i = (t = t || E(e)).length; i--; )
                        ((o = function e(t) {
                            for (var n, i, r, o = t.length, a = O.relative[t[0].type], s = a || O.relative[" "], d = a ? 1 : 0, _ = P(function(e) {
                                return e === n
                            }, s, !0), u = P(function(e) {
                                return -1 < g(n, e)
                            }, s, !0), l = [function(e, t, i) {
                                return e = !a && (i || t !== b) || ((n = t).nodeType ? _ : u)(e, t, i),
                                n = null,
                                e
                            }
                            ]; d < o; d++)
                                if (i = O.relative[t[d].type])
                                    l = [P(Ie(l), i)];
                                else {
                                    if ((i = O.filter[t[d].type].apply(null, t[d].matches))[S]) {
                                        for (r = ++d; r < o && !O.relative[t[r].type]; r++)
                                            ;
                                        return ge(1 < d && Ie(l), 1 < d && H(t.slice(0, d - 1).concat({
                                            value: " " === t[d - 2].type ? "*" : ""
                                        })).replace(f, "$1"), i, d < r && e(t.slice(d, r)), r < o && e(t = t.slice(r)), r < o && H(t))
                                    }
                                    l.push(i)
                                }
                            return Ie(l)
                        }(t[i]))[S] ? n : r).push(o);
                    (o = p(e, Oe(r, n))).selector = e
                }
                return o
            }
            ,
            W = M.select = function(e, t, i, n) {
                var r, o, a, s, d, _ = "function" == typeof e && e, u = !n && E(e = _.selector || e);
                if (i = i || [],
                1 === u.length) {
                    if (2 < (o = u[0] = u[0].slice(0)).length && "ID" === (a = o[0]).type && 9 === t.nodeType && R && O.relative[o[1].type]) {
                        if (!(t = (O.find.ID(a.matches[0].replace(v, l), t) || [])[0]))
                            return i;
                        _ && (t = t.parentNode),
                        e = e.slice(o.shift().value.length)
                    }
                    for (r = c.needsContext.test(e) ? 0 : o.length; r-- && (a = o[r],
                    !O.relative[s = a.type]); )
                        if ((d = O.find[s]) && (n = d(a.matches[0].replace(v, l), se.test(o[0].type) && Te(t.parentNode) || t))) {
                            if (o.splice(r, 1),
                            e = n.length && H(o))
                                break;
                            return D.apply(i, n),
                            i
                        }
                }
                return (_ || k(e, u))(n, t, !R, i, !t || se.test(e) && Te(t.parentNode) || t),
                i
            }
            ,
            h.sortStable = S.split("").sort(x).join("") === S,
            h.detectDuplicates = !!_,
            m(),
            h.sortDetached = L(function(e) {
                return 1 & e.compareDocumentPosition(C.createElement("fieldset"))
            }),
            L(function(e) {
                return e.innerHTML = "<a href='#'></a>",
                "#" === e.firstChild.getAttribute("href")
            }) || ce("type|href|height|width", function(e, t, i) {
                if (!i)
                    return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2)
            }),
            h.attributes && L(function(e) {
                return e.innerHTML = "<input/>",
                e.firstChild.setAttribute("value", ""),
                "" === e.firstChild.getAttribute("value")
            }) || ce("value", function(e, t, i) {
                if (!i && "input" === e.nodeName.toLowerCase())
                    return e.defaultValue
            }),
            L(function(e) {
                return null == e.getAttribute("disabled")
            }) || ce(j, function(e, t, i) {
                if (!i)
                    return !0 === e[t] ? t.toLowerCase() : (i = e.getAttributeNode(t)) && i.specified ? i.value : null
            }),
            M
        }(b)
          , Z = (C.find = e,
        C.expr = e.selectors,
        C.expr[":"] = C.expr.pseudos,
        C.uniqueSort = C.unique = e.uniqueSort,
        C.text = e.getText,
        C.isXMLDoc = e.isXML,
        C.contains = e.contains,
        C.escapeSelector = e.escape,
        C.expr.match.needsContext);
        function d(e, t) {
            return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
        }
        var $ = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i
          , Q = /^.[^:#\[\.,]*$/;
        function ee(e, i, n) {
            return C.isFunction(i) ? C.grep(e, function(e, t) {
                return !!i.call(e, t, e) !== n
            }) : i.nodeType ? C.grep(e, function(e) {
                return e === i !== n
            }) : "string" != typeof i ? C.grep(e, function(e) {
                return -1 < r.call(i, e) !== n
            }) : Q.test(i) ? C.filter(i, e, n) : (i = C.filter(i, e),
            C.grep(e, function(e) {
                return -1 < r.call(i, e) !== n && 1 === e.nodeType
            }))
        }
        C.filter = function(e, t, i) {
            var n = t[0];
            return i && (e = ":not(" + e + ")"),
            1 === t.length && 1 === n.nodeType ? C.find.matchesSelector(n, e) ? [n] : [] : C.find.matches(e, C.grep(t, function(e) {
                return 1 === e.nodeType
            }))
        }
        ,
        C.fn.extend({
            find: function(e) {
                var t, i, n = this.length, r = this;
                if ("string" != typeof e)
                    return this.pushStack(C(e).filter(function() {
                        for (t = 0; t < n; t++)
                            if (C.contains(r[t], this))
                                return !0
                    }));
                for (i = this.pushStack([]),
                t = 0; t < n; t++)
                    C.find(e, r[t], i);
                return 1 < n ? C.uniqueSort(i) : i
            },
            filter: function(e) {
                return this.pushStack(ee(this, e || [], !1))
            },
            not: function(e) {
                return this.pushStack(ee(this, e || [], !0))
            },
            is: function(e) {
                return !!ee(this, "string" == typeof e && Z.test(e) ? C(e) : e || [], !1).length
            }
        });
        var te, ie = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, ne = ((C.fn.init = function(e, t, i) {
            if (e) {
                if (i = i || te,
                "string" != typeof e)
                    return e.nodeType ? (this[0] = e,
                    this.length = 1,
                    this) : C.isFunction(e) ? void 0 !== i.ready ? i.ready(e) : e(C) : C.makeArray(e, this);
                if (!(n = "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length ? [null, e, null] : ie.exec(e)) || !n[1] && t)
                    return (!t || t.jquery ? t || i : this.constructor(t)).find(e);
                if (n[1]) {
                    if (t = t instanceof C ? t[0] : t,
                    C.merge(this, C.parseHTML(n[1], t && t.nodeType ? t.ownerDocument || t : m, !0)),
                    $.test(n[1]) && C.isPlainObject(t))
                        for (var n in t)
                            C.isFunction(this[n]) ? this[n](t[n]) : this.attr(n, t[n])
                } else
                    (i = m.getElementById(n[2])) && (this[0] = i,
                    this.length = 1)
            }
            return this
        }
        ).prototype = C.fn,
        te = C(m),
        /^(?:parents|prev(?:Until|All))/), re = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
        function oe(e, t) {
            for (; (e = e[t]) && 1 !== e.nodeType; )
                ;
            return e
        }
        C.fn.extend({
            has: function(e) {
                var t = C(e, this)
                  , i = t.length;
                return this.filter(function() {
                    for (var e = 0; e < i; e++)
                        if (C.contains(this, t[e]))
                            return !0
                })
            },
            closest: function(e, t) {
                var i, n = 0, r = this.length, o = [], a = "string" != typeof e && C(e);
                if (!Z.test(e))
                    for (; n < r; n++)
                        for (i = this[n]; i && i !== t; i = i.parentNode)
                            if (i.nodeType < 11 && (a ? -1 < a.index(i) : 1 === i.nodeType && C.find.matchesSelector(i, e))) {
                                o.push(i);
                                break
                            }
                return this.pushStack(1 < o.length ? C.uniqueSort(o) : o)
            },
            index: function(e) {
                return e ? "string" == typeof e ? r.call(C(e), this[0]) : r.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
            },
            add: function(e, t) {
                return this.pushStack(C.uniqueSort(C.merge(this.get(), C(e, t))))
            },
            addBack: function(e) {
                return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
            }
        }),
        C.each({
            parent: function(e) {
                e = e.parentNode;
                return e && 11 !== e.nodeType ? e : null
            },
            parents: function(e) {
                return n(e, "parentNode")
            },
            parentsUntil: function(e, t, i) {
                return n(e, "parentNode", i)
            },
            next: function(e) {
                return oe(e, "nextSibling")
            },
            prev: function(e) {
                return oe(e, "previousSibling")
            },
            nextAll: function(e) {
                return n(e, "nextSibling")
            },
            prevAll: function(e) {
                return n(e, "previousSibling")
            },
            nextUntil: function(e, t, i) {
                return n(e, "nextSibling", i)
            },
            prevUntil: function(e, t, i) {
                return n(e, "previousSibling", i)
            },
            siblings: function(e) {
                return q((e.parentNode || {}).firstChild, e)
            },
            children: function(e) {
                return q(e.firstChild)
            },
            contents: function(e) {
                return d(e, "iframe") ? e.contentDocument : (d(e, "template") && (e = e.content || e),
                C.merge([], e.childNodes))
            }
        }, function(n, r) {
            C.fn[n] = function(e, t) {
                var i = C.map(this, r, e);
                return (t = "Until" !== n.slice(-5) ? e : t) && "string" == typeof t && (i = C.filter(t, i)),
                1 < this.length && (re[n] || C.uniqueSort(i),
                ne.test(n)) && i.reverse(),
                this.pushStack(i)
            }
        });
        var R = /[^\x20\t\r\n\f]+/g;
        function u(e) {
            return e
        }
        function ae(e) {
            throw e
        }
        function se(e, t, i, n) {
            var r;
            try {
                e && C.isFunction(r = e.promise) ? r.call(e).done(t).fail(i) : e && C.isFunction(r = e.then) ? r.call(e, t, i) : t.apply(void 0, [e].slice(n))
            } catch (e) {
                i.apply(void 0, [e])
            }
        }
        C.Callbacks = function(n) {
            var e, i;
            n = "string" == typeof n ? (e = n,
            i = {},
            C.each(e.match(R) || [], function(e, t) {
                i[t] = !0
            }),
            i) : C.extend({}, n);
            function r() {
                for (s = s || n.once,
                a = o = !0; _.length; u = -1)
                    for (t = _.shift(); ++u < d.length; )
                        !1 === d[u].apply(t[0], t[1]) && n.stopOnFalse && (u = d.length,
                        t = !1);
                n.memory || (t = !1),
                o = !1,
                s && (d = t ? [] : "")
            }
            var o, t, a, s, d = [], _ = [], u = -1, l = {
                add: function() {
                    return d && (t && !o && (u = d.length - 1,
                    _.push(t)),
                    function i(e) {
                        C.each(e, function(e, t) {
                            C.isFunction(t) ? n.unique && l.has(t) || d.push(t) : t && t.length && "string" !== C.type(t) && i(t)
                        })
                    }(arguments),
                    t) && !o && r(),
                    this
                },
                remove: function() {
                    return C.each(arguments, function(e, t) {
                        for (var i; -1 < (i = C.inArray(t, d, i)); )
                            d.splice(i, 1),
                            i <= u && u--
                    }),
                    this
                },
                has: function(e) {
                    return e ? -1 < C.inArray(e, d) : 0 < d.length
                },
                empty: function() {
                    return d = d && [],
                    this
                },
                disable: function() {
                    return s = _ = [],
                    d = t = "",
                    this
                },
                disabled: function() {
                    return !d
                },
                lock: function() {
                    return s = _ = [],
                    t || o || (d = t = ""),
                    this
                },
                locked: function() {
                    return !!s
                },
                fireWith: function(e, t) {
                    return s || (t = [e, (t = t || []).slice ? t.slice() : t],
                    _.push(t),
                    o) || r(),
                    this
                },
                fire: function() {
                    return l.fireWith(this, arguments),
                    this
                },
                fired: function() {
                    return !!a
                }
            };
            return l
        }
        ,
        C.extend({
            Deferred: function(e) {
                var o = [["notify", "progress", C.Callbacks("memory"), C.Callbacks("memory"), 2], ["resolve", "done", C.Callbacks("once memory"), C.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", C.Callbacks("once memory"), C.Callbacks("once memory"), 1, "rejected"]]
                  , r = "pending"
                  , a = {
                    state: function() {
                        return r
                    },
                    always: function() {
                        return s.done(arguments).fail(arguments),
                        this
                    },
                    catch: function(e) {
                        return a.then(null, e)
                    },
                    pipe: function() {
                        var r = arguments;
                        return C.Deferred(function(n) {
                            C.each(o, function(e, t) {
                                var i = C.isFunction(r[t[4]]) && r[t[4]];
                                s[t[1]](function() {
                                    var e = i && i.apply(this, arguments);
                                    e && C.isFunction(e.promise) ? e.promise().progress(n.notify).done(n.resolve).fail(n.reject) : n[t[0] + "With"](this, i ? [e] : arguments)
                                })
                            }),
                            r = null
                        }).promise()
                    },
                    then: function(t, i, n) {
                        var d = 0;
                        function _(r, o, a, s) {
                            return function() {
                                function e() {
                                    var e, t;
                                    if (!(r < d)) {
                                        if ((e = a.apply(i, n)) === o.promise())
                                            throw new TypeError("Thenable self-resolution");
                                        t = e && ("object" == typeof e || "function" == typeof e) && e.then,
                                        C.isFunction(t) ? s ? t.call(e, _(d, o, u, s), _(d, o, ae, s)) : (d++,
                                        t.call(e, _(d, o, u, s), _(d, o, ae, s), _(d, o, u, o.notifyWith))) : (a !== u && (i = void 0,
                                        n = [e]),
                                        (s || o.resolveWith)(i, n))
                                    }
                                }
                                var i = this
                                  , n = arguments
                                  , t = s ? e : function() {
                                    try {
                                        e()
                                    } catch (e) {
                                        C.Deferred.exceptionHook && C.Deferred.exceptionHook(e, t.stackTrace),
                                        d <= r + 1 && (a !== ae && (i = void 0,
                                        n = [e]),
                                        o.rejectWith(i, n))
                                    }
                                }
                                ;
                                r ? t() : (C.Deferred.getStackHook && (t.stackTrace = C.Deferred.getStackHook()),
                                b.setTimeout(t))
                            }
                        }
                        return C.Deferred(function(e) {
                            o[0][3].add(_(0, e, C.isFunction(n) ? n : u, e.notifyWith)),
                            o[1][3].add(_(0, e, C.isFunction(t) ? t : u)),
                            o[2][3].add(_(0, e, C.isFunction(i) ? i : ae))
                        }).promise()
                    },
                    promise: function(e) {
                        return null != e ? C.extend(e, a) : a
                    }
                }
                  , s = {};
                return C.each(o, function(e, t) {
                    var i = t[2]
                      , n = t[5];
                    a[t[1]] = i.add,
                    n && i.add(function() {
                        r = n
                    }, o[3 - e][2].disable, o[0][2].lock),
                    i.add(t[3].fire),
                    s[t[0]] = function() {
                        return s[t[0] + "With"](this === s ? void 0 : this, arguments),
                        this
                    }
                    ,
                    s[t[0] + "With"] = i.fireWith
                }),
                a.promise(s),
                e && e.call(s, s),
                s
            },
            when: function(e) {
                function t(t) {
                    return function(e) {
                        r[t] = this,
                        o[t] = 1 < arguments.length ? s.call(arguments) : e,
                        --i || a.resolveWith(r, o)
                    }
                }
                var i = arguments.length
                  , n = i
                  , r = Array(n)
                  , o = s.call(arguments)
                  , a = C.Deferred();
                if (i <= 1 && (se(e, a.done(t(n)).resolve, a.reject, !i),
                "pending" === a.state() || C.isFunction(o[n] && o[n].then)))
                    return a.then();
                for (; n--; )
                    se(o[n], t(n), a.reject);
                return a.promise()
            }
        });
        var de = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/
          , _e = (C.Deferred.exceptionHook = function(e, t) {
            b.console && b.console.warn && e && de.test(e.name) && b.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t)
        }
        ,
        C.readyException = function(e) {
            b.setTimeout(function() {
                throw e
            })
        }
        ,
        C.Deferred());
        function ue() {
            m.removeEventListener("DOMContentLoaded", ue),
            b.removeEventListener("load", ue),
            C.ready()
        }
        C.fn.ready = function(e) {
            return _e.then(e).catch(function(e) {
                C.readyException(e)
            }),
            this
        }
        ,
        C.extend({
            isReady: !1,
            readyWait: 1,
            ready: function(e) {
                (!0 === e ? --C.readyWait : C.isReady) || (C.isReady = !0) !== e && 0 < --C.readyWait || _e.resolveWith(m, [C])
            }
        }),
        C.ready.then = _e.then,
        "complete" === m.readyState || "loading" !== m.readyState && !m.documentElement.doScroll ? b.setTimeout(C.ready) : (m.addEventListener("DOMContentLoaded", ue),
        b.addEventListener("load", ue));
        function le(e) {
            return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType
        }
        var l = function(e, t, i, n, r, o, a) {
            var s = 0
              , d = e.length
              , _ = null == i;
            if ("object" === C.type(i))
                for (s in r = !0,
                i)
                    l(e, t, s, i[s], !0, o, a);
            else if (void 0 !== n && (r = !0,
            C.isFunction(n) || (a = !0),
            t = _ ? a ? (t.call(e, n),
            null) : (_ = t,
            function(e, t, i) {
                return _.call(C(e), i)
            }
            ) : t))
                for (; s < d; s++)
                    t(e[s], i, a ? n : n.call(e[s], s, t(e[s], i)));
            return r ? e : _ ? t.call(e) : d ? t(e[0], i) : o
        };
        function t() {
            this.expando = C.expando + t.uid++
        }
        t.uid = 1,
        t.prototype = {
            cache: function(e) {
                var t = e[this.expando];
                return t || (t = {},
                le(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                    value: t,
                    configurable: !0
                }))),
                t
            },
            set: function(e, t, i) {
                var n, r = this.cache(e);
                if ("string" == typeof t)
                    r[C.camelCase(t)] = i;
                else
                    for (n in t)
                        r[C.camelCase(n)] = t[n];
                return r
            },
            get: function(e, t) {
                return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][C.camelCase(t)]
            },
            access: function(e, t, i) {
                return void 0 === t || t && "string" == typeof t && void 0 === i ? this.get(e, t) : (this.set(e, t, i),
                void 0 !== i ? i : t)
            },
            remove: function(e, t) {
                var i, n = e[this.expando];
                if (void 0 !== n) {
                    if (void 0 !== t) {
                        i = (t = Array.isArray(t) ? t.map(C.camelCase) : (t = C.camelCase(t))in n ? [t] : t.match(R) || []).length;
                        for (; i--; )
                            delete n[t[i]]
                    }
                    void 0 !== t && !C.isEmptyObject(n) || (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando])
                }
            },
            hasData: function(e) {
                e = e[this.expando];
                return void 0 !== e && !C.isEmptyObject(e)
            }
        };
        var I = new t
          , _ = new t
          , ce = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/
          , he = /[A-Z]/g;
        function Ee(e, t, i) {
            var n, r;
            if (void 0 === i && 1 === e.nodeType)
                if (n = "data-" + t.replace(he, "-$&").toLowerCase(),
                "string" == typeof (i = e.getAttribute(n))) {
                    try {
                        i = "true" === (r = i) || "false" !== r && ("null" === r ? null : r === +r + "" ? +r : ce.test(r) ? JSON.parse(r) : r)
                    } catch (e) {}
                    _.set(e, t, i)
                } else
                    i = void 0;
            return i
        }
        C.extend({
            hasData: function(e) {
                return _.hasData(e) || I.hasData(e)
            },
            data: function(e, t, i) {
                return _.access(e, t, i)
            },
            removeData: function(e, t) {
                _.remove(e, t)
            },
            _data: function(e, t, i) {
                return I.access(e, t, i)
            },
            _removeData: function(e, t) {
                I.remove(e, t)
            }
        }),
        C.fn.extend({
            data: function(i, e) {
                var t, n, r, o = this[0], a = o && o.attributes;
                if (void 0 !== i)
                    return "object" == typeof i ? this.each(function() {
                        _.set(this, i)
                    }) : l(this, function(e) {
                        var t;
                        if (o && void 0 === e)
                            return void 0 !== (t = _.get(o, i)) || void 0 !== (t = Ee(o, i)) ? t : void 0;
                        this.each(function() {
                            _.set(this, i, e)
                        })
                    }, null, e, 1 < arguments.length, null, !0);
                if (this.length && (r = _.get(o),
                1 === o.nodeType) && !I.get(o, "hasDataAttrs")) {
                    for (t = a.length; t--; )
                        a[t] && 0 === (n = a[t].name).indexOf("data-") && (n = C.camelCase(n.slice(5)),
                        Ee(o, n, r[n]));
                    I.set(o, "hasDataAttrs", !0)
                }
                return r
            },
            removeData: function(e) {
                return this.each(function() {
                    _.remove(this, e)
                })
            }
        }),
        C.extend({
            queue: function(e, t, i) {
                var n;
                if (e)
                    return n = I.get(e, t = (t || "fx") + "queue"),
                    i && (!n || Array.isArray(i) ? n = I.access(e, t, C.makeArray(i)) : n.push(i)),
                    n || []
            },
            dequeue: function(e, t) {
                t = t || "fx";
                var i = C.queue(e, t)
                  , n = i.length
                  , r = i.shift()
                  , o = C._queueHooks(e, t);
                "inprogress" === r && (r = i.shift(),
                n--),
                r && ("fx" === t && i.unshift("inprogress"),
                delete o.stop,
                r.call(e, function() {
                    C.dequeue(e, t)
                }, o)),
                !n && o && o.empty.fire()
            },
            _queueHooks: function(e, t) {
                var i = t + "queueHooks";
                return I.get(e, i) || I.access(e, i, {
                    empty: C.Callbacks("once memory").add(function() {
                        I.remove(e, [t + "queue", i])
                    })
                })
            }
        }),
        C.fn.extend({
            queue: function(t, i) {
                var e = 2;
                return "string" != typeof t && (i = t,
                t = "fx",
                e--),
                arguments.length < e ? C.queue(this[0], t) : void 0 === i ? this : this.each(function() {
                    var e = C.queue(this, t, i);
                    C._queueHooks(this, t),
                    "fx" === t && "inprogress" !== e[0] && C.dequeue(this, t)
                })
            },
            dequeue: function(e) {
                return this.each(function() {
                    C.dequeue(this, e)
                })
            },
            clearQueue: function(e) {
                return this.queue(e || "fx", [])
            },
            promise: function(e, t) {
                function i() {
                    --r || o.resolveWith(a, [a])
                }
                var n, r = 1, o = C.Deferred(), a = this, s = this.length;
                for ("string" != typeof e && (t = e,
                e = void 0),
                e = e || "fx"; s--; )
                    (n = I.get(a[s], e + "queueHooks")) && n.empty && (r++,
                    n.empty.add(i));
                return i(),
                o.promise(t)
            }
        });
        function Te(e, t, i, n) {
            var r, o = {};
            for (r in t)
                o[r] = e.style[r],
                e.style[r] = t[r];
            for (r in i = i.apply(e, n || []),
            t)
                e.style[r] = o[r];
            return i
        }
        var e = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source
          , c = new RegExp("^(?:([+-])=|)(" + e + ")([a-z%]*)$","i")
          , h = ["Top", "Right", "Bottom", "Left"]
          , Ae = function(e, t) {
            return "none" === (e = t || e).style.display || "" === e.style.display && C.contains(e.ownerDocument, e) && "none" === C.css(e, "display")
        };
        function Ie(e, t, i, n) {
            var r, o = 1, a = 20, s = n ? function() {
                return n.cur()
            }
            : function() {
                return C.css(e, t, "")
            }
            , d = s(), _ = i && i[3] || (C.cssNumber[t] ? "" : "px"), u = (C.cssNumber[t] || "px" !== _ && +d) && c.exec(C.css(e, t));
            if (u && u[3] !== _)
                for (_ = _ || u[3],
                i = i || [],
                u = +d || 1; u /= o = o || ".5",
                C.style(e, t, u + _),
                o !== (o = s() / d) && 1 !== o && --a; )
                    ;
            return i && (u = +u || +d || 0,
            r = i[1] ? u + (i[1] + 1) * i[2] : +i[2],
            n) && (n.unit = _,
            n.start = u,
            n.end = r),
            r
        }
        var pe = {};
        function A(e, t) {
            for (var i, n, r, o, a, s = [], d = 0, _ = e.length; d < _; d++)
                (n = e[d]).style && (i = n.style.display,
                t ? ("none" === i && (s[d] = I.get(n, "display") || null,
                s[d] || (n.style.display = "")),
                "" === n.style.display && Ae(n) && (s[d] = (a = o = void 0,
                o = (r = n).ownerDocument,
                r = r.nodeName,
                (a = pe[r]) || (o = o.body.appendChild(o.createElement(r)),
                a = C.css(o, "display"),
                o.parentNode.removeChild(o),
                pe[r] = a = "none" === a ? "block" : a)))) : "none" !== i && (s[d] = "none",
                I.set(n, "display", i)));
            for (d = 0; d < _; d++)
                null != s[d] && (e[d].style.display = s[d]);
            return e
        }
        C.fn.extend({
            show: function() {
                return A(this, !0)
            },
            hide: function() {
                return A(this)
            },
            toggle: function(e) {
                return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function() {
                    Ae(this) ? C(this).show() : C(this).hide()
                })
            }
        });
        var ge = /^(?:checkbox|radio)$/i
          , Oe = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i
          , be = /^$|\/(?:java|ecma)script/i
          , E = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""]
        };
        function p(e, t) {
            var i = void 0 !== e.getElementsByTagName ? e.getElementsByTagName(t || "*") : void 0 !== e.querySelectorAll ? e.querySelectorAll(t || "*") : [];
            return void 0 === t || t && d(e, t) ? C.merge([e], i) : i
        }
        function me(e, t) {
            for (var i = 0, n = e.length; i < n; i++)
                I.set(e[i], "globalEval", !t || I.get(t[i], "globalEval"))
        }
        E.optgroup = E.option,
        E.tbody = E.tfoot = E.colgroup = E.caption = E.thead,
        E.th = E.td;
        var Ce = /<|&#?\w+;/;
        function Re(e, t, i, n, r) {
            for (var o, a, s, d, _, u = t.createDocumentFragment(), l = [], c = 0, h = e.length; c < h; c++)
                if ((o = e[c]) || 0 === o)
                    if ("object" === C.type(o))
                        C.merge(l, o.nodeType ? [o] : o);
                    else if (Ce.test(o)) {
                        for (a = a || u.appendChild(t.createElement("div")),
                        s = (Oe.exec(o) || ["", ""])[1].toLowerCase(),
                        s = E[s] || E._default,
                        a.innerHTML = s[1] + C.htmlPrefilter(o) + s[2],
                        _ = s[0]; _--; )
                            a = a.lastChild;
                        C.merge(l, a.childNodes),
                        (a = u.firstChild).textContent = ""
                    } else
                        l.push(t.createTextNode(o));
            for (u.textContent = "",
            c = 0; o = l[c++]; )
                if (n && -1 < C.inArray(o, n))
                    r && r.push(o);
                else if (d = C.contains(o.ownerDocument, o),
                a = p(u.appendChild(o), "script"),
                d && me(a),
                i)
                    for (_ = 0; o = a[_++]; )
                        be.test(o.type || "") && i.push(o);
            return u
        }
        v = m.createDocumentFragment().appendChild(m.createElement("div")),
        (f = m.createElement("input")).setAttribute("type", "radio"),
        f.setAttribute("checked", "checked"),
        f.setAttribute("name", "t"),
        v.appendChild(f),
        T.checkClone = v.cloneNode(!0).cloneNode(!0).lastChild.checked,
        v.innerHTML = "<textarea>x</textarea>",
        T.noCloneChecked = !!v.cloneNode(!0).lastChild.defaultValue;
        var Se = m.documentElement
          , Ne = /^key/
          , De = /^(?:mouse|pointer|contextmenu|drag|drop)|click/
          , fe = /^([^.]*)(?:\.(.+)|)/;
        function ve() {
            return !0
        }
        function g() {
            return !1
        }
        function Me() {
            try {
                return m.activeElement
            } catch (e) {}
        }
        function ye(e, t, i, n, r, o) {
            var a, s;
            if ("object" == typeof t) {
                for (s in "string" != typeof i && (n = n || i,
                i = void 0),
                t)
                    ye(e, s, i, n, t[s], o);
                return e
            }
            if (null == n && null == r ? (r = i,
            n = i = void 0) : null == r && ("string" == typeof i ? (r = n,
            n = void 0) : (r = n,
            n = i,
            i = void 0)),
            !1 === r)
                r = g;
            else if (!r)
                return e;
            return 1 === o && (a = r,
            (r = function(e) {
                return C().off(e),
                a.apply(this, arguments)
            }
            ).guid = a.guid || (a.guid = C.guid++)),
            e.each(function() {
                C.event.add(this, t, r, n, i)
            })
        }
        C.event = {
            global: {},
            add: function(t, e, i, n, r) {
                var o, a, s, d, _, u, l, c, h, E = I.get(t);
                if (E)
                    for (i.handler && (i = (o = i).handler,
                    r = o.selector),
                    r && C.find.matchesSelector(Se, r),
                    i.guid || (i.guid = C.guid++),
                    s = (s = E.events) || (E.events = {}),
                    a = (a = E.handle) || (E.handle = function(e) {
                        return void 0 !== C && C.event.triggered !== e.type ? C.event.dispatch.apply(t, arguments) : void 0
                    }
                    ),
                    d = (e = (e || "").match(R) || [""]).length; d--; )
                        l = h = (c = fe.exec(e[d]) || [])[1],
                        c = (c[2] || "").split(".").sort(),
                        l && (_ = C.event.special[l] || {},
                        l = (r ? _.delegateType : _.bindType) || l,
                        _ = C.event.special[l] || {},
                        h = C.extend({
                            type: l,
                            origType: h,
                            data: n,
                            handler: i,
                            guid: i.guid,
                            selector: r,
                            needsContext: r && C.expr.match.needsContext.test(r),
                            namespace: c.join(".")
                        }, o),
                        (u = s[l]) || ((u = s[l] = []).delegateCount = 0,
                        _.setup && !1 !== _.setup.call(t, n, c, a)) || t.addEventListener && t.addEventListener(l, a),
                        _.add && (_.add.call(t, h),
                        h.handler.guid || (h.handler.guid = i.guid)),
                        r ? u.splice(u.delegateCount++, 0, h) : u.push(h),
                        C.event.global[l] = !0)
            },
            remove: function(e, t, i, n, r) {
                var o, a, s, d, _, u, l, c, h, E, T, A = I.hasData(e) && I.get(e);
                if (A && (d = A.events)) {
                    for (_ = (t = (t || "").match(R) || [""]).length; _--; )
                        if (h = T = (s = fe.exec(t[_]) || [])[1],
                        E = (s[2] || "").split(".").sort(),
                        h) {
                            for (l = C.event.special[h] || {},
                            c = d[h = (n ? l.delegateType : l.bindType) || h] || [],
                            s = s[2] && new RegExp("(^|\\.)" + E.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                            a = o = c.length; o--; )
                                u = c[o],
                                !r && T !== u.origType || i && i.guid !== u.guid || s && !s.test(u.namespace) || n && n !== u.selector && ("**" !== n || !u.selector) || (c.splice(o, 1),
                                u.selector && c.delegateCount--,
                                l.remove && l.remove.call(e, u));
                            a && !c.length && (l.teardown && !1 !== l.teardown.call(e, E, A.handle) || C.removeEvent(e, h, A.handle),
                            delete d[h])
                        } else
                            for (h in d)
                                C.event.remove(e, h + t[_], i, n, !0);
                    C.isEmptyObject(d) && I.remove(e, "handle events")
                }
            },
            dispatch: function(e) {
                var t, i, n, r, o, a = C.event.fix(e), s = new Array(arguments.length), e = (I.get(this, "events") || {})[a.type] || [], d = C.event.special[a.type] || {};
                for (s[0] = a,
                t = 1; t < arguments.length; t++)
                    s[t] = arguments[t];
                if (a.delegateTarget = this,
                !d.preDispatch || !1 !== d.preDispatch.call(this, a)) {
                    for (o = C.event.handlers.call(this, a, e),
                    t = 0; (n = o[t++]) && !a.isPropagationStopped(); )
                        for (a.currentTarget = n.elem,
                        i = 0; (r = n.handlers[i++]) && !a.isImmediatePropagationStopped(); )
                            a.rnamespace && !a.rnamespace.test(r.namespace) || (a.handleObj = r,
                            a.data = r.data,
                            void 0 !== (r = ((C.event.special[r.origType] || {}).handle || r.handler).apply(n.elem, s)) && !1 === (a.result = r) && (a.preventDefault(),
                            a.stopPropagation()));
                    return d.postDispatch && d.postDispatch.call(this, a),
                    a.result
                }
            },
            handlers: function(e, t) {
                var i, n, r, o, a, s = [], d = t.delegateCount, _ = e.target;
                if (d && _.nodeType && !("click" === e.type && 1 <= e.button))
                    for (; _ !== this; _ = _.parentNode || this)
                        if (1 === _.nodeType && ("click" !== e.type || !0 !== _.disabled)) {
                            for (o = [],
                            a = {},
                            i = 0; i < d; i++)
                                void 0 === a[r = (n = t[i]).selector + " "] && (a[r] = n.needsContext ? -1 < C(r, this).index(_) : C.find(r, this, null, [_]).length),
                                a[r] && o.push(n);
                            o.length && s.push({
                                elem: _,
                                handlers: o
                            })
                        }
                return _ = this,
                d < t.length && s.push({
                    elem: _,
                    handlers: t.slice(d)
                }),
                s
            },
            addProp: function(t, e) {
                Object.defineProperty(C.Event.prototype, t, {
                    enumerable: !0,
                    configurable: !0,
                    get: C.isFunction(e) ? function() {
                        if (this.originalEvent)
                            return e(this.originalEvent)
                    }
                    : function() {
                        if (this.originalEvent)
                            return this.originalEvent[t]
                    }
                    ,
                    set: function(e) {
                        Object.defineProperty(this, t, {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: e
                        })
                    }
                })
            },
            fix: function(e) {
                return e[C.expando] ? e : new C.Event(e)
            },
            special: {
                load: {
                    noBubble: !0
                },
                focus: {
                    trigger: function() {
                        if (this !== Me() && this.focus)
                            return this.focus(),
                            !1
                    },
                    delegateType: "focusin"
                },
                blur: {
                    trigger: function() {
                        if (this === Me() && this.blur)
                            return this.blur(),
                            !1
                    },
                    delegateType: "focusout"
                },
                click: {
                    trigger: function() {
                        if ("checkbox" === this.type && this.click && d(this, "input"))
                            return this.click(),
                            !1
                    },
                    _default: function(e) {
                        return d(e.target, "a")
                    }
                },
                beforeunload: {
                    postDispatch: function(e) {
                        void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
                    }
                }
            }
        },
        C.removeEvent = function(e, t, i) {
            e.removeEventListener && e.removeEventListener(t, i)
        }
        ,
        C.Event = function(e, t) {
            return this instanceof C.Event ? (e && e.type ? (this.originalEvent = e,
            this.type = e.type,
            this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? ve : g,
            this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target,
            this.currentTarget = e.currentTarget,
            this.relatedTarget = e.relatedTarget) : this.type = e,
            t && C.extend(this, t),
            this.timeStamp = e && e.timeStamp || C.now(),
            void (this[C.expando] = !0)) : new C.Event(e,t)
        }
        ,
        C.Event.prototype = {
            constructor: C.Event,
            isDefaultPrevented: g,
            isPropagationStopped: g,
            isImmediatePropagationStopped: g,
            isSimulated: !1,
            preventDefault: function() {
                var e = this.originalEvent;
                this.isDefaultPrevented = ve,
                e && !this.isSimulated && e.preventDefault()
            },
            stopPropagation: function() {
                var e = this.originalEvent;
                this.isPropagationStopped = ve,
                e && !this.isSimulated && e.stopPropagation()
            },
            stopImmediatePropagation: function() {
                var e = this.originalEvent;
                this.isImmediatePropagationStopped = ve,
                e && !this.isSimulated && e.stopImmediatePropagation(),
                this.stopPropagation()
            }
        },
        C.each({
            altKey: !0,
            bubbles: !0,
            cancelable: !0,
            changedTouches: !0,
            ctrlKey: !0,
            detail: !0,
            eventPhase: !0,
            metaKey: !0,
            pageX: !0,
            pageY: !0,
            shiftKey: !0,
            view: !0,
            char: !0,
            charCode: !0,
            key: !0,
            keyCode: !0,
            button: !0,
            buttons: !0,
            clientX: !0,
            clientY: !0,
            offsetX: !0,
            offsetY: !0,
            pointerId: !0,
            pointerType: !0,
            screenX: !0,
            screenY: !0,
            targetTouches: !0,
            toElement: !0,
            touches: !0,
            which: function(e) {
                var t = e.button;
                return null == e.which && Ne.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && De.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which
            }
        }, C.event.addProp),
        C.each({
            mouseenter: "mouseover",
            mouseleave: "mouseout",
            pointerenter: "pointerover",
            pointerleave: "pointerout"
        }, function(e, r) {
            C.event.special[e] = {
                delegateType: r,
                bindType: r,
                handle: function(e) {
                    var t, i = e.relatedTarget, n = e.handleObj;
                    return i && (i === this || C.contains(this, i)) || (e.type = n.origType,
                    t = n.handler.apply(this, arguments),
                    e.type = r),
                    t
                }
            }
        }),
        C.fn.extend({
            on: function(e, t, i, n) {
                return ye(this, e, t, i, n)
            },
            one: function(e, t, i, n) {
                return ye(this, e, t, i, n, 1)
            },
            off: function(e, t, i) {
                var n, r;
                if (e && e.preventDefault && e.handleObj)
                    n = e.handleObj,
                    C(e.delegateTarget).off(n.namespace ? n.origType + "." + n.namespace : n.origType, n.selector, n.handler);
                else {
                    if ("object" != typeof e)
                        return !1 !== t && "function" != typeof t || (i = t,
                        t = void 0),
                        !1 === i && (i = g),
                        this.each(function() {
                            C.event.remove(this, e, i, t)
                        });
                    for (r in e)
                        this.off(r, t, e[r])
                }
                return this
            }
        });
        var Le = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi
          , Ge = /<script|<style|<link/i
          , He = /checked\s*(?:[^=]|=\s*.checked.)/i
          , Pe = /^true\/(.*)/
          , Be = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
        function we(e, t) {
            return d(e, "table") && d(11 !== t.nodeType ? t : t.firstChild, "tr") && C(">tbody", e)[0] || e
        }
        function ze(e) {
            return e.type = (null !== e.getAttribute("type")) + "/" + e.type,
            e
        }
        function ke(e) {
            var t = Pe.exec(e.type);
            return t ? e.type = t[1] : e.removeAttribute("type"),
            e
        }
        function We(e, t) {
            var i, n, r, o, a, s;
            if (1 === t.nodeType) {
                if (I.hasData(e) && (o = I.access(e),
                a = I.set(t, o),
                s = o.events))
                    for (r in delete a.handle,
                    a.events = {},
                    s)
                        for (i = 0,
                        n = s[r].length; i < n; i++)
                            C.event.add(t, r, s[r][i]);
                _.hasData(e) && (o = _.access(e),
                a = C.extend({}, o),
                _.set(t, a))
            }
        }
        function O(i, n, r, o) {
            n = z.apply([], n);
            var e, t, a, s, d, _, u = 0, l = i.length, c = l - 1, h = n[0], E = C.isFunction(h);
            if (E || 1 < l && "string" == typeof h && !T.checkClone && He.test(h))
                return i.each(function(e) {
                    var t = i.eq(e);
                    E && (n[0] = h.call(this, e, t.html())),
                    O(t, n, r, o)
                });
            if (l && (t = (e = Re(n, i[0].ownerDocument, !1, i, o)).firstChild,
            1 === e.childNodes.length && (e = t),
            t || o)) {
                for (s = (a = C.map(p(e, "script"), ze)).length; u < l; u++)
                    d = e,
                    u !== c && (d = C.clone(d, !0, !0),
                    s) && C.merge(a, p(d, "script")),
                    r.call(i[u], d, u);
                if (s)
                    for (_ = a[a.length - 1].ownerDocument,
                    C.map(a, ke),
                    u = 0; u < s; u++)
                        d = a[u],
                        be.test(d.type || "") && !I.access(d, "globalEval") && C.contains(_, d) && (d.src ? C._evalUrl && C._evalUrl(d.src) : x(d.textContent.replace(Be, ""), _))
            }
            return i
        }
        function Ve(e, t, i) {
            for (var n, r = t ? C.filter(t, e) : e, o = 0; null != (n = r[o]); o++)
                i || 1 !== n.nodeType || C.cleanData(p(n)),
                n.parentNode && (i && C.contains(n.ownerDocument, n) && me(p(n, "script")),
                n.parentNode.removeChild(n));
            return e
        }
        C.extend({
            htmlPrefilter: function(e) {
                return e.replace(Le, "<$1></$2>")
            },
            clone: function(e, t, i) {
                var n, r, o, a, s, d, _, u = e.cloneNode(!0), l = C.contains(e.ownerDocument, e);
                if (!(T.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || C.isXMLDoc(e)))
                    for (a = p(u),
                    n = 0,
                    r = (o = p(e)).length; n < r; n++)
                        s = o[n],
                        d = a[n],
                        _ = void 0,
                        "input" === (_ = d.nodeName.toLowerCase()) && ge.test(s.type) ? d.checked = s.checked : "input" !== _ && "textarea" !== _ || (d.defaultValue = s.defaultValue);
                if (t)
                    if (i)
                        for (o = o || p(e),
                        a = a || p(u),
                        n = 0,
                        r = o.length; n < r; n++)
                            We(o[n], a[n]);
                    else
                        We(e, u);
                return 0 < (a = p(u, "script")).length && me(a, !l && p(e, "script")),
                u
            },
            cleanData: function(e) {
                for (var t, i, n, r = C.event.special, o = 0; void 0 !== (i = e[o]); o++)
                    if (le(i)) {
                        if (t = i[I.expando]) {
                            if (t.events)
                                for (n in t.events)
                                    r[n] ? C.event.remove(i, n) : C.removeEvent(i, n, t.handle);
                            i[I.expando] = void 0
                        }
                        i[_.expando] && (i[_.expando] = void 0)
                    }
            }
        }),
        C.fn.extend({
            detach: function(e) {
                return Ve(this, e, !0)
            },
            remove: function(e) {
                return Ve(this, e)
            },
            text: function(e) {
                return l(this, function(e) {
                    return void 0 === e ? C.text(this) : this.empty().each(function() {
                        1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e)
                    })
                }, null, e, arguments.length)
            },
            append: function() {
                return O(this, arguments, function(e) {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || we(this, e).appendChild(e)
                })
            },
            prepend: function() {
                return O(this, arguments, function(e) {
                    var t;
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (t = we(this, e)).insertBefore(e, t.firstChild)
                })
            },
            before: function() {
                return O(this, arguments, function(e) {
                    this.parentNode && this.parentNode.insertBefore(e, this)
                })
            },
            after: function() {
                return O(this, arguments, function(e) {
                    this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
                })
            },
            empty: function() {
                for (var e, t = 0; null != (e = this[t]); t++)
                    1 === e.nodeType && (C.cleanData(p(e, !1)),
                    e.textContent = "");
                return this
            },
            clone: function(e, t) {
                return e = null != e && e,
                t = null == t ? e : t,
                this.map(function() {
                    return C.clone(this, e, t)
                })
            },
            html: function(e) {
                return l(this, function(e) {
                    var t = this[0] || {}
                      , i = 0
                      , n = this.length;
                    if (void 0 === e && 1 === t.nodeType)
                        return t.innerHTML;
                    if ("string" == typeof e && !Ge.test(e) && !E[(Oe.exec(e) || ["", ""])[1].toLowerCase()]) {
                        e = C.htmlPrefilter(e);
                        try {
                            for (; i < n; i++)
                                1 === (t = this[i] || {}).nodeType && (C.cleanData(p(t, !1)),
                                t.innerHTML = e);
                            t = 0
                        } catch (e) {}
                    }
                    t && this.empty().append(e)
                }, null, e, arguments.length)
            },
            replaceWith: function() {
                var i = [];
                return O(this, arguments, function(e) {
                    var t = this.parentNode;
                    C.inArray(this, i) < 0 && (C.cleanData(p(this)),
                    t) && t.replaceChild(e, this)
                }, i)
            }
        }),
        C.each({
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith"
        }, function(e, a) {
            C.fn[e] = function(e) {
                for (var t, i = [], n = C(e), r = n.length - 1, o = 0; o <= r; o++)
                    t = o === r ? this : this.clone(!0),
                    C(n[o])[a](t),
                    k.apply(i, t.get());
                return this.pushStack(i)
            }
        });
        var Ue, Ke, xe, Fe, o, a, Ye = /^margin/, Je = new RegExp("^(" + e + ")(?!px)[a-z%]+$","i"), Xe = function(e) {
            var t = e.ownerDocument.defaultView;
            return (t = t && t.opener ? t : b).getComputedStyle(e)
        };
        function je() {
            var e;
            a && (a.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",
            a.innerHTML = "",
            Se.appendChild(o),
            e = b.getComputedStyle(a),
            Ue = "1%" !== e.top,
            Fe = "2px" === e.marginLeft,
            Ke = "4px" === e.width,
            a.style.marginRight = "50%",
            xe = "4px" === e.marginRight,
            Se.removeChild(o),
            a = null)
        }
        function S(e, t, i) {
            var n, r, o = e.style;
            return (i = i || Xe(e)) && ("" !== (r = i.getPropertyValue(t) || i[t]) || C.contains(e.ownerDocument, e) || (r = C.style(e, t)),
            !T.pixelMarginRight()) && Je.test(r) && Ye.test(t) && (e = o.width,
            t = o.minWidth,
            n = o.maxWidth,
            o.minWidth = o.maxWidth = o.width = r,
            r = i.width,
            o.width = e,
            o.minWidth = t,
            o.maxWidth = n),
            void 0 !== r ? r + "" : r
        }
        function qe(e, t) {
            return {
                get: function() {
                    return e() ? void delete this.get : (this.get = t).apply(this, arguments)
                }
            }
        }
        o = m.createElement("div"),
        (a = m.createElement("div")).style && (a.style.backgroundClip = "content-box",
        a.cloneNode(!0).style.backgroundClip = "",
        T.clearCloneStyle = "content-box" === a.style.backgroundClip,
        o.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",
        o.appendChild(a),
        C.extend(T, {
            pixelPosition: function() {
                return je(),
                Ue
            },
            boxSizingReliable: function() {
                return je(),
                Ke
            },
            pixelMarginRight: function() {
                return je(),
                xe
            },
            reliableMarginLeft: function() {
                return je(),
                Fe
            }
        }));
        var Ze = /^(none|table(?!-c[ea]).+)/
          , $e = /^--/
          , Qe = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        }
          , e1 = {
            letterSpacing: "0",
            fontWeight: "400"
        }
          , t1 = ["Webkit", "Moz", "ms"]
          , i1 = m.createElement("div").style;
        function n1(e) {
            return C.cssProps[e] || (C.cssProps[e] = function(e) {
                if (e in i1)
                    return e;
                for (var t = e[0].toUpperCase() + e.slice(1), i = t1.length; i--; )
                    if ((e = t1[i] + t)in i1)
                        return e
            }(e) || e)
        }
        function r1(e, t, i) {
            var n = c.exec(t);
            return n ? Math.max(0, n[2] - (i || 0)) + (n[3] || "px") : t
        }
        function o1(e, t, i, n, r) {
            for (var o = 0, a = i === (n ? "border" : "content") ? 4 : "width" === t ? 1 : 0; a < 4; a += 2)
                "margin" === i && (o += C.css(e, i + h[a], !0, r)),
                n ? ("content" === i && (o -= C.css(e, "padding" + h[a], !0, r)),
                "margin" !== i && (o -= C.css(e, "border" + h[a] + "Width", !0, r))) : (o += C.css(e, "padding" + h[a], !0, r),
                "padding" !== i && (o += C.css(e, "border" + h[a] + "Width", !0, r)));
            return o
        }
        function a1(e, t, i) {
            var n, r = Xe(e), o = S(e, t, r), a = "border-box" === C.css(e, "boxSizing", !1, r);
            return Je.test(o) ? o : (n = a && (T.boxSizingReliable() || o === e.style[t]),
            "auto" === o && (o = e["offset" + t[0].toUpperCase() + t.slice(1)]),
            (o = parseFloat(o) || 0) + o1(e, t, i || (a ? "border" : "content"), n, r) + "px")
        }
        function N(e, t, i, n, r) {
            return new N.prototype.init(e,t,i,n,r)
        }
        C.extend({
            cssHooks: {
                opacity: {
                    get: function(e, t) {
                        if (t)
                            return "" === (t = S(e, "opacity")) ? "1" : t
                    }
                }
            },
            cssNumber: {
                animationIterationCount: !0,
                columnCount: !0,
                fillOpacity: !0,
                flexGrow: !0,
                flexShrink: !0,
                fontWeight: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0
            },
            cssProps: {
                float: "cssFloat"
            },
            style: function(e, t, i, n) {
                var r, o, a, s, d, _;
                if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style)
                    return s = C.camelCase(t),
                    d = $e.test(t),
                    _ = e.style,
                    d || (t = n1(s)),
                    a = C.cssHooks[t] || C.cssHooks[s],
                    void 0 === i ? a && "get"in a && void 0 !== (r = a.get(e, !1, n)) ? r : _[t] : ("string" === (o = typeof i) && (r = c.exec(i)) && r[1] && (i = Ie(e, t, r),
                    o = "number"),
                    void (null != i && i == i && ("number" === o && (i += r && r[3] || (C.cssNumber[s] ? "" : "px")),
                    T.clearCloneStyle || "" !== i || 0 !== t.indexOf("background") || (_[t] = "inherit"),
                    a && "set"in a && void 0 === (i = a.set(e, i, n)) || (d ? _.setProperty(t, i) : _[t] = i))))
            },
            css: function(e, t, i, n) {
                var r, o = C.camelCase(t);
                return $e.test(t) || (t = n1(o)),
                "normal" === (r = void 0 === (r = (o = C.cssHooks[t] || C.cssHooks[o]) && "get"in o ? o.get(e, !0, i) : r) ? S(e, t, n) : r) && t in e1 && (r = e1[t]),
                ("" === i || i) && (o = parseFloat(r),
                !0 === i || isFinite(o)) ? o || 0 : r
            }
        }),
        C.each(["height", "width"], function(e, r) {
            C.cssHooks[r] = {
                get: function(e, t, i) {
                    if (t)
                        return !Ze.test(C.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? a1(e, r, i) : Te(e, Qe, function() {
                            return a1(e, r, i)
                        })
                },
                set: function(e, t, i) {
                    var n = i && Xe(e)
                      , i = i && o1(e, r, i, "border-box" === C.css(e, "boxSizing", !1, n), n);
                    return i && (n = c.exec(t)) && "px" !== (n[3] || "px") && (e.style[r] = t,
                    t = C.css(e, r)),
                    r1(0, t, i)
                }
            }
        }),
        C.cssHooks.marginLeft = qe(T.reliableMarginLeft, function(e, t) {
            if (t)
                return (parseFloat(S(e, "marginLeft")) || e.getBoundingClientRect().left - Te(e, {
                    marginLeft: 0
                }, function() {
                    return e.getBoundingClientRect().left
                })) + "px"
        }),
        C.each({
            margin: "",
            padding: "",
            border: "Width"
        }, function(r, o) {
            C.cssHooks[r + o] = {
                expand: function(e) {
                    for (var t = 0, i = {}, n = "string" == typeof e ? e.split(" ") : [e]; t < 4; t++)
                        i[r + h[t] + o] = n[t] || n[t - 2] || n[0];
                    return i
                }
            },
            Ye.test(r) || (C.cssHooks[r + o].set = r1)
        }),
        C.fn.extend({
            css: function(e, t) {
                return l(this, function(e, t, i) {
                    var n, r, o = {}, a = 0;
                    if (Array.isArray(t)) {
                        for (n = Xe(e),
                        r = t.length; a < r; a++)
                            o[t[a]] = C.css(e, t[a], !1, n);
                        return o
                    }
                    return void 0 !== i ? C.style(e, t, i) : C.css(e, t)
                }, e, t, 1 < arguments.length)
            }
        }),
        (C.Tween = N).prototype = {
            constructor: N,
            init: function(e, t, i, n, r, o) {
                this.elem = e,
                this.prop = i,
                this.easing = r || C.easing._default,
                this.options = t,
                this.start = this.now = this.cur(),
                this.end = n,
                this.unit = o || (C.cssNumber[i] ? "" : "px")
            },
            cur: function() {
                var e = N.propHooks[this.prop];
                return (e && e.get ? e : N.propHooks._default).get(this)
            },
            run: function(e) {
                var t, i = N.propHooks[this.prop];
                return this.options.duration ? this.pos = t = C.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e,
                this.now = (this.end - this.start) * t + this.start,
                this.options.step && this.options.step.call(this.elem, this.now, this),
                (i && i.set ? i : N.propHooks._default).set(this),
                this
            }
        },
        N.prototype.init.prototype = N.prototype,
        N.propHooks = {
            _default: {
                get: function(e) {
                    return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (e = C.css(e.elem, e.prop, "")) && "auto" !== e ? e : 0
                },
                set: function(e) {
                    C.fx.step[e.prop] ? C.fx.step[e.prop](e) : 1 !== e.elem.nodeType || null == e.elem.style[C.cssProps[e.prop]] && !C.cssHooks[e.prop] ? e.elem[e.prop] = e.now : C.style(e.elem, e.prop, e.now + e.unit)
                }
            }
        },
        N.propHooks.scrollTop = N.propHooks.scrollLeft = {
            set: function(e) {
                e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
            }
        },
        C.easing = {
            linear: function(e) {
                return e
            },
            swing: function(e) {
                return .5 - Math.cos(e * Math.PI) / 2
            },
            _default: "swing"
        },
        C.fx = N.prototype.init,
        C.fx.step = {};
        var D, s1, f, v, d1 = /^(?:toggle|show|hide)$/, _1 = /queueHooks$/;
        function u1() {
            s1 && (!1 === m.hidden && b.requestAnimationFrame ? b.requestAnimationFrame(u1) : b.setTimeout(u1, C.fx.interval),
            C.fx.tick())
        }
        function l1() {
            return b.setTimeout(function() {
                D = void 0
            }),
            D = C.now()
        }
        function c1(e, t) {
            var i, n = 0, r = {
                height: e
            };
            for (t = t ? 1 : 0; n < 4; n += 2 - t)
                r["margin" + (i = h[n])] = r["padding" + i] = e;
            return t && (r.opacity = r.width = e),
            r
        }
        function h1(e, t, i) {
            for (var n, r = (M.tweeners[t] || []).concat(M.tweeners["*"]), o = 0, a = r.length; o < a; o++)
                if (n = r[o].call(i, t, e))
                    return n
        }
        function M(r, e, t) {
            var i, o, n, a, s, d, _, u = 0, l = M.prefilters.length, c = C.Deferred().always(function() {
                delete h.elem
            }), h = function() {
                if (o)
                    return !1;
                for (var e = D || l1(), e = Math.max(0, E.startTime + E.duration - e), t = 1 - (e / E.duration || 0), i = 0, n = E.tweens.length; i < n; i++)
                    E.tweens[i].run(t);
                return c.notifyWith(r, [E, t, e]),
                t < 1 && n ? e : (n || c.notifyWith(r, [E, 1, 0]),
                c.resolveWith(r, [E]),
                !1)
            }, E = c.promise({
                elem: r,
                props: C.extend({}, e),
                opts: C.extend(!0, {
                    specialEasing: {},
                    easing: C.easing._default
                }, t),
                originalProperties: e,
                originalOptions: t,
                startTime: D || l1(),
                duration: t.duration,
                tweens: [],
                createTween: function(e, t) {
                    t = C.Tween(r, E.opts, e, t, E.opts.specialEasing[e] || E.opts.easing);
                    return E.tweens.push(t),
                    t
                },
                stop: function(e) {
                    var t = 0
                      , i = e ? E.tweens.length : 0;
                    if (!o) {
                        for (o = !0; t < i; t++)
                            E.tweens[t].run(1);
                        e ? (c.notifyWith(r, [E, 1, 0]),
                        c.resolveWith(r, [E, e])) : c.rejectWith(r, [E, e])
                    }
                    return this
                }
            }), T = E.props, A = T, I = E.opts.specialEasing;
            for (n in A)
                if (a = C.camelCase(n),
                s = I[a],
                d = A[n],
                Array.isArray(d) && (s = d[1],
                d = A[n] = d[0]),
                n !== a && (A[a] = d,
                delete A[n]),
                _ = C.cssHooks[a],
                _ && "expand"in _)
                    for (n in d = _.expand(d),
                    delete A[a],
                    d)
                        n in A || (A[n] = d[n],
                        I[n] = s);
                else
                    I[a] = s;
            for (; u < l; u++)
                if (i = M.prefilters[u].call(E, r, T, E.opts))
                    return C.isFunction(i.stop) && (C._queueHooks(E.elem, E.opts.queue).stop = C.proxy(i.stop, i)),
                    i;
            return C.map(T, h1, E),
            C.isFunction(E.opts.start) && E.opts.start.call(r, E),
            E.progress(E.opts.progress).done(E.opts.done, E.opts.complete).fail(E.opts.fail).always(E.opts.always),
            C.fx.timer(C.extend(h, {
                elem: r,
                anim: E,
                queue: E.opts.queue
            })),
            E
        }
        C.Animation = C.extend(M, {
            tweeners: {
                "*": [function(e, t) {
                    var i = this.createTween(e, t);
                    return Ie(i.elem, e, c.exec(t), i),
                    i
                }
                ]
            },
            tweener: function(e, t) {
                for (var i, n = 0, r = (e = C.isFunction(e) ? (t = e,
                ["*"]) : e.match(R)).length; n < r; n++)
                    i = e[n],
                    M.tweeners[i] = M.tweeners[i] || [],
                    M.tweeners[i].unshift(t)
            },
            prefilters: [function(e, t, i) {
                var n, r, o, a, s, d, _, u = "width"in t || "height"in t, l = this, c = {}, h = e.style, E = e.nodeType && Ae(e), T = I.get(e, "fxshow");
                for (n in i.queue || (null == (a = C._queueHooks(e, "fx")).unqueued && (a.unqueued = 0,
                s = a.empty.fire,
                a.empty.fire = function() {
                    a.unqueued || s()
                }
                ),
                a.unqueued++,
                l.always(function() {
                    l.always(function() {
                        a.unqueued--,
                        C.queue(e, "fx").length || a.empty.fire()
                    })
                })),
                t)
                    if (r = t[n],
                    d1.test(r)) {
                        if (delete t[n],
                        o = o || "toggle" === r,
                        r === (E ? "hide" : "show")) {
                            if ("show" !== r || !T || void 0 === T[n])
                                continue;
                            E = !0
                        }
                        c[n] = T && T[n] || C.style(e, n)
                    }
                if ((d = !C.isEmptyObject(t)) || !C.isEmptyObject(c))
                    for (n in u && 1 === e.nodeType && (i.overflow = [h.overflow, h.overflowX, h.overflowY],
                    null == (_ = T && T.display) && (_ = I.get(e, "display")),
                    "none" === (u = C.css(e, "display")) && (_ ? u = _ : (A([e], !0),
                    _ = e.style.display || _,
                    u = C.css(e, "display"),
                    A([e]))),
                    "inline" === u || "inline-block" === u && null != _) && "none" === C.css(e, "float") && (d || (l.done(function() {
                        h.display = _
                    }),
                    null == _ && (u = h.display,
                    _ = "none" === u ? "" : u)),
                    h.display = "inline-block"),
                    i.overflow && (h.overflow = "hidden",
                    l.always(function() {
                        h.overflow = i.overflow[0],
                        h.overflowX = i.overflow[1],
                        h.overflowY = i.overflow[2]
                    })),
                    d = !1,
                    c)
                        d || (T ? "hidden"in T && (E = T.hidden) : T = I.access(e, "fxshow", {
                            display: _
                        }),
                        o && (T.hidden = !E),
                        E && A([e], !0),
                        l.done(function() {
                            for (n in E || A([e]),
                            I.remove(e, "fxshow"),
                            c)
                                C.style(e, n, c[n])
                        })),
                        d = h1(E ? T[n] : 0, n, l),
                        n in T || (T[n] = d.start,
                        E && (d.end = d.start,
                        d.start = 0))
            }
            ],
            prefilter: function(e, t) {
                t ? M.prefilters.unshift(e) : M.prefilters.push(e)
            }
        }),
        C.speed = function(e, t, i) {
            var n = e && "object" == typeof e ? C.extend({}, e) : {
                complete: i || !i && t || C.isFunction(e) && e,
                duration: e,
                easing: i && t || t && !C.isFunction(t) && t
            };
            return C.fx.off ? n.duration = 0 : "number" != typeof n.duration && (n.duration in C.fx.speeds ? n.duration = C.fx.speeds[n.duration] : n.duration = C.fx.speeds._default),
            null != n.queue && !0 !== n.queue || (n.queue = "fx"),
            n.old = n.complete,
            n.complete = function() {
                C.isFunction(n.old) && n.old.call(this),
                n.queue && C.dequeue(this, n.queue)
            }
            ,
            n
        }
        ,
        C.fn.extend({
            fadeTo: function(e, t, i, n) {
                return this.filter(Ae).css("opacity", 0).show().end().animate({
                    opacity: t
                }, e, i, n)
            },
            animate: function(t, e, i, n) {
                function r() {
                    var e = M(this, C.extend({}, t), a);
                    (o || I.get(this, "finish")) && e.stop(!0)
                }
                var o = C.isEmptyObject(t)
                  , a = C.speed(e, i, n);
                return r.finish = r,
                o || !1 === a.queue ? this.each(r) : this.queue(a.queue, r)
            },
            stop: function(r, e, o) {
                function a(e) {
                    var t = e.stop;
                    delete e.stop,
                    t(o)
                }
                return "string" != typeof r && (o = e,
                e = r,
                r = void 0),
                e && !1 !== r && this.queue(r || "fx", []),
                this.each(function() {
                    var e = !0
                      , t = null != r && r + "queueHooks"
                      , i = C.timers
                      , n = I.get(this);
                    if (t)
                        n[t] && n[t].stop && a(n[t]);
                    else
                        for (t in n)
                            n[t] && n[t].stop && _1.test(t) && a(n[t]);
                    for (t = i.length; t--; )
                        i[t].elem !== this || null != r && i[t].queue !== r || (i[t].anim.stop(o),
                        e = !1,
                        i.splice(t, 1));
                    !e && o || C.dequeue(this, r)
                })
            },
            finish: function(a) {
                return !1 !== a && (a = a || "fx"),
                this.each(function() {
                    var e, t = I.get(this), i = t[a + "queue"], n = t[a + "queueHooks"], r = C.timers, o = i ? i.length : 0;
                    for (t.finish = !0,
                    C.queue(this, a, []),
                    n && n.stop && n.stop.call(this, !0),
                    e = r.length; e--; )
                        r[e].elem === this && r[e].queue === a && (r[e].anim.stop(!0),
                        r.splice(e, 1));
                    for (e = 0; e < o; e++)
                        i[e] && i[e].finish && i[e].finish.call(this);
                    delete t.finish
                })
            }
        }),
        C.each(["toggle", "show", "hide"], function(e, n) {
            var r = C.fn[n];
            C.fn[n] = function(e, t, i) {
                return null == e || "boolean" == typeof e ? r.apply(this, arguments) : this.animate(c1(n, !0), e, t, i)
            }
        }),
        C.each({
            slideDown: c1("show"),
            slideUp: c1("hide"),
            slideToggle: c1("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, function(e, n) {
            C.fn[e] = function(e, t, i) {
                return this.animate(n, e, t, i)
            }
        }),
        C.timers = [],
        C.fx.tick = function() {
            var e, t = 0, i = C.timers;
            for (D = C.now(); t < i.length; t++)
                (e = i[t])() || i[t] !== e || i.splice(t--, 1);
            i.length || C.fx.stop(),
            D = void 0
        }
        ,
        C.fx.timer = function(e) {
            C.timers.push(e),
            C.fx.start()
        }
        ,
        C.fx.interval = 13,
        C.fx.start = function() {
            s1 || (s1 = !0,
            u1())
        }
        ,
        C.fx.stop = function() {
            s1 = null
        }
        ,
        C.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        },
        C.fn.delay = function(n, e) {
            return n = C.fx && C.fx.speeds[n] || n,
            this.queue(e = e || "fx", function(e, t) {
                var i = b.setTimeout(e, n);
                t.stop = function() {
                    b.clearTimeout(i)
                }
            })
        }
        ,
        f = m.createElement("input"),
        v = m.createElement("select").appendChild(m.createElement("option")),
        f.type = "checkbox",
        T.checkOn = "" !== f.value,
        T.optSelected = v.selected,
        (f = m.createElement("input")).value = "t",
        f.type = "radio",
        T.radioValue = "t" === f.value;
        var E1, y = C.expr.attrHandle, T1 = (C.fn.extend({
            attr: function(e, t) {
                return l(this, C.attr, e, t, 1 < arguments.length)
            },
            removeAttr: function(e) {
                return this.each(function() {
                    C.removeAttr(this, e)
                })
            }
        }),
        C.extend({
            attr: function(e, t, i) {
                var n, r, o = e.nodeType;
                if (3 !== o && 8 !== o && 2 !== o)
                    return void 0 === e.getAttribute ? C.prop(e, t, i) : (1 === o && C.isXMLDoc(e) || (r = C.attrHooks[t.toLowerCase()] || (C.expr.match.bool.test(t) ? E1 : void 0)),
                    void 0 !== i ? null === i ? void C.removeAttr(e, t) : r && "set"in r && void 0 !== (n = r.set(e, i, t)) ? n : (e.setAttribute(t, i + ""),
                    i) : !(r && "get"in r && null !== (n = r.get(e, t))) && null == (n = C.find.attr(e, t)) ? void 0 : n)
            },
            attrHooks: {
                type: {
                    set: function(e, t) {
                        var i;
                        if (!T.radioValue && "radio" === t && d(e, "input"))
                            return i = e.value,
                            e.setAttribute("type", t),
                            i && (e.value = i),
                            t
                    }
                }
            },
            removeAttr: function(e, t) {
                var i, n = 0, r = t && t.match(R);
                if (r && 1 === e.nodeType)
                    for (; i = r[n++]; )
                        e.removeAttribute(i)
            }
        }),
        E1 = {
            set: function(e, t, i) {
                return !1 === t ? C.removeAttr(e, i) : e.setAttribute(i, i),
                i
            }
        },
        C.each(C.expr.match.bool.source.match(/\w+/g), function(e, t) {
            var a = y[t] || C.find.attr;
            y[t] = function(e, t, i) {
                var n, r, o = t.toLowerCase();
                return i || (r = y[o],
                y[o] = n,
                n = null != a(e, t, i) ? o : null,
                y[o] = r),
                n
            }
        }),
        /^(?:input|select|textarea|button)$/i), A1 = /^(?:a|area)$/i;
        function L(e) {
            return (e.match(R) || []).join(" ")
        }
        function G(e) {
            return e.getAttribute && e.getAttribute("class") || ""
        }
        C.fn.extend({
            prop: function(e, t) {
                return l(this, C.prop, e, t, 1 < arguments.length)
            },
            removeProp: function(e) {
                return this.each(function() {
                    delete this[C.propFix[e] || e]
                })
            }
        }),
        C.extend({
            prop: function(e, t, i) {
                var n, r, o = e.nodeType;
                if (3 !== o && 8 !== o && 2 !== o)
                    return 1 === o && C.isXMLDoc(e) || (t = C.propFix[t] || t,
                    r = C.propHooks[t]),
                    void 0 !== i ? r && "set"in r && void 0 !== (n = r.set(e, i, t)) ? n : e[t] = i : r && "get"in r && null !== (n = r.get(e, t)) ? n : e[t]
            },
            propHooks: {
                tabIndex: {
                    get: function(e) {
                        var t = C.find.attr(e, "tabindex");
                        return t ? parseInt(t, 10) : T1.test(e.nodeName) || A1.test(e.nodeName) && e.href ? 0 : -1
                    }
                }
            },
            propFix: {
                for: "htmlFor",
                class: "className"
            }
        }),
        T.optSelected || (C.propHooks.selected = {
            get: function(e) {
                e = e.parentNode;
                return e && e.parentNode && e.parentNode.selectedIndex,
                null
            },
            set: function(e) {
                e = e.parentNode;
                e && (e.selectedIndex,
                e.parentNode) && e.parentNode.selectedIndex
            }
        }),
        C.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
            C.propFix[this.toLowerCase()] = this
        }),
        C.fn.extend({
            addClass: function(t) {
                var e, i, n, r, o, a, s = 0;
                if (C.isFunction(t))
                    return this.each(function(e) {
                        C(this).addClass(t.call(this, e, G(this)))
                    });
                if ("string" == typeof t && t)
                    for (e = t.match(R) || []; i = this[s++]; )
                        if (a = G(i),
                        n = 1 === i.nodeType && " " + L(a) + " ") {
                            for (o = 0; r = e[o++]; )
                                n.indexOf(" " + r + " ") < 0 && (n += r + " ");
                            a !== (a = L(n)) && i.setAttribute("class", a)
                        }
                return this
            },
            removeClass: function(t) {
                var e, i, n, r, o, a, s = 0;
                if (C.isFunction(t))
                    return this.each(function(e) {
                        C(this).removeClass(t.call(this, e, G(this)))
                    });
                if (!arguments.length)
                    return this.attr("class", "");
                if ("string" == typeof t && t)
                    for (e = t.match(R) || []; i = this[s++]; )
                        if (a = G(i),
                        n = 1 === i.nodeType && " " + L(a) + " ") {
                            for (o = 0; r = e[o++]; )
                                for (; -1 < n.indexOf(" " + r + " "); )
                                    n = n.replace(" " + r + " ", " ");
                            a !== (a = L(n)) && i.setAttribute("class", a)
                        }
                return this
            },
            toggleClass: function(r, t) {
                var o = typeof r;
                return "boolean" == typeof t && "string" == o ? t ? this.addClass(r) : this.removeClass(r) : C.isFunction(r) ? this.each(function(e) {
                    C(this).toggleClass(r.call(this, e, G(this), t), t)
                }) : this.each(function() {
                    var e, t, i, n;
                    if ("string" == o)
                        for (t = 0,
                        i = C(this),
                        n = r.match(R) || []; e = n[t++]; )
                            i.hasClass(e) ? i.removeClass(e) : i.addClass(e);
                    else
                        void 0 !== r && "boolean" != o || ((e = G(this)) && I.set(this, "__className__", e),
                        this.setAttribute && this.setAttribute("class", !e && !1 !== r && I.get(this, "__className__") || ""))
                })
            },
            hasClass: function(e) {
                for (var t, i = 0, n = " " + e + " "; t = this[i++]; )
                    if (1 === t.nodeType && -1 < (" " + L(G(t)) + " ").indexOf(n))
                        return !0;
                return !1
            }
        });
        var I1 = /\r/g
          , p1 = (C.fn.extend({
            val: function(t) {
                var i, e, n, r = this[0];
                return arguments.length ? (n = C.isFunction(t),
                this.each(function(e) {
                    1 === this.nodeType && (null == (e = n ? t.call(this, e, C(this).val()) : t) ? e = "" : "number" == typeof e ? e += "" : Array.isArray(e) && (e = C.map(e, function(e) {
                        return null == e ? "" : e + ""
                    })),
                    (i = C.valHooks[this.type] || C.valHooks[this.nodeName.toLowerCase()]) && "set"in i && void 0 !== i.set(this, e, "value") || (this.value = e))
                })) : r ? (i = C.valHooks[r.type] || C.valHooks[r.nodeName.toLowerCase()]) && "get"in i && void 0 !== (e = i.get(r, "value")) ? e : "string" == typeof (e = r.value) ? e.replace(I1, "") : null == e ? "" : e : void 0
            }
        }),
        C.extend({
            valHooks: {
                option: {
                    get: function(e) {
                        var t = C.find.attr(e, "value");
                        return null != t ? t : L(C.text(e))
                    }
                },
                select: {
                    get: function(e) {
                        for (var t, i = e.options, n = e.selectedIndex, r = "select-one" === e.type, o = r ? null : [], a = r ? n + 1 : i.length, s = n < 0 ? a : r ? n : 0; s < a; s++)
                            if (((t = i[s]).selected || s === n) && !t.disabled && (!t.parentNode.disabled || !d(t.parentNode, "optgroup"))) {
                                if (t = C(t).val(),
                                r)
                                    return t;
                                o.push(t)
                            }
                        return o
                    },
                    set: function(e, t) {
                        for (var i, n, r = e.options, o = C.makeArray(t), a = r.length; a--; )
                            ((n = r[a]).selected = -1 < C.inArray(C.valHooks.option.get(n), o)) && (i = !0);
                        return i || (e.selectedIndex = -1),
                        o
                    }
                }
            }
        }),
        C.each(["radio", "checkbox"], function() {
            C.valHooks[this] = {
                set: function(e, t) {
                    if (Array.isArray(t))
                        return e.checked = -1 < C.inArray(C(e).val(), t)
                }
            },
            T.checkOn || (C.valHooks[this].get = function(e) {
                return null === e.getAttribute("value") ? "on" : e.value
            }
            )
        }),
        /^(?:focusinfocus|focusoutblur)$/)
          , H = (C.extend(C.event, {
            trigger: function(e, t, i, n) {
                var r, o, a, s, d, _, u = [i || m], l = V.call(e, "type") ? e.type : e, c = V.call(e, "namespace") ? e.namespace.split(".") : [], h = o = i = i || m;
                if (3 !== i.nodeType && 8 !== i.nodeType && !p1.test(l + C.event.triggered) && (-1 < l.indexOf(".") && (l = (c = l.split(".")).shift(),
                c.sort()),
                s = l.indexOf(":") < 0 && "on" + l,
                (e = e[C.expando] ? e : new C.Event(l,"object" == typeof e && e)).isTrigger = n ? 2 : 3,
                e.namespace = c.join("."),
                e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + c.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
                e.result = void 0,
                e.target || (e.target = i),
                t = null == t ? [e] : C.makeArray(t, [e]),
                _ = C.event.special[l] || {},
                n || !_.trigger || !1 !== _.trigger.apply(i, t))) {
                    if (!n && !_.noBubble && !C.isWindow(i)) {
                        for (a = _.delegateType || l,
                        p1.test(a + l) || (h = h.parentNode); h; h = h.parentNode)
                            u.push(h),
                            o = h;
                        o === (i.ownerDocument || m) && u.push(o.defaultView || o.parentWindow || b)
                    }
                    for (r = 0; (h = u[r++]) && !e.isPropagationStopped(); )
                        e.type = 1 < r ? a : _.bindType || l,
                        (d = (I.get(h, "events") || {})[e.type] && I.get(h, "handle")) && d.apply(h, t),
                        (d = s && h[s]) && d.apply && le(h) && (e.result = d.apply(h, t),
                        !1 === e.result) && e.preventDefault();
                    return e.type = l,
                    n || e.isDefaultPrevented() || _._default && !1 !== _._default.apply(u.pop(), t) || !le(i) || s && C.isFunction(i[l]) && !C.isWindow(i) && ((o = i[s]) && (i[s] = null),
                    i[C.event.triggered = l](),
                    C.event.triggered = void 0,
                    o) && (i[s] = o),
                    e.result
                }
            },
            simulate: function(e, t, i) {
                i = C.extend(new C.Event, i, {
                    type: e,
                    isSimulated: !0
                });
                C.event.trigger(i, null, t)
            }
        }),
        C.fn.extend({
            trigger: function(e, t) {
                return this.each(function() {
                    C.event.trigger(e, t, this)
                })
            },
            triggerHandler: function(e, t) {
                var i = this[0];
                if (i)
                    return C.event.trigger(e, t, i, !0)
            }
        }),
        C.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(e, i) {
            C.fn[i] = function(e, t) {
                return 0 < arguments.length ? this.on(i, null, e, t) : this.trigger(i)
            }
        }),
        C.fn.extend({
            hover: function(e, t) {
                return this.mouseenter(e).mouseleave(t || e)
            }
        }),
        T.focusin = "onfocusin"in b,
        T.focusin || C.each({
            focus: "focusin",
            blur: "focusout"
        }, function(i, n) {
            function r(e) {
                C.event.simulate(n, e.target, C.event.fix(e))
            }
            C.event.special[n] = {
                setup: function() {
                    var e = this.ownerDocument || this
                      , t = I.access(e, n);
                    t || e.addEventListener(i, r, !0),
                    I.access(e, n, (t || 0) + 1)
                },
                teardown: function() {
                    var e = this.ownerDocument || this
                      , t = I.access(e, n) - 1;
                    t ? I.access(e, n, t) : (e.removeEventListener(i, r, !0),
                    I.remove(e, n))
                }
            }
        }),
        b.location)
          , g1 = C.now()
          , O1 = /\?/
          , b1 = (C.parseXML = function(e) {
            var t;
            if (!e || "string" != typeof e)
                return null;
            try {
                t = (new b.DOMParser).parseFromString(e, "text/xml")
            } catch (e) {
                t = void 0
            }
            return t && !t.getElementsByTagName("parsererror").length || C.error("Invalid XML: " + e),
            t
        }
        ,
        /\[\]$/)
          , m1 = /\r?\n/g
          , C1 = /^(?:submit|button|image|reset|file)$/i
          , R1 = /^(?:input|select|textarea|keygen)/i;
        C.param = function(e, t) {
            function i(e, t) {
                t = C.isFunction(t) ? t() : t,
                r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == t ? "" : t)
            }
            var n, r = [];
            if (Array.isArray(e) || e.jquery && !C.isPlainObject(e))
                C.each(e, function() {
                    i(this.name, this.value)
                });
            else
                for (n in e)
                    !function i(n, e, r, o) {
                        if (Array.isArray(e))
                            C.each(e, function(e, t) {
                                r || b1.test(n) ? o(n, t) : i(n + "[" + ("object" == typeof t && null != t ? e : "") + "]", t, r, o)
                            });
                        else if (r || "object" !== C.type(e))
                            o(n, e);
                        else
                            for (var t in e)
                                i(n + "[" + t + "]", e[t], r, o)
                    }(n, e[n], t, i);
            return r.join("&")
        }
        ,
        C.fn.extend({
            serialize: function() {
                return C.param(this.serializeArray())
            },
            serializeArray: function() {
                return this.map(function() {
                    var e = C.prop(this, "elements");
                    return e ? C.makeArray(e) : this
                }).filter(function() {
                    var e = this.type;
                    return this.name && !C(this).is(":disabled") && R1.test(this.nodeName) && !C1.test(e) && (this.checked || !ge.test(e))
                }).map(function(e, t) {
                    var i = C(this).val();
                    return null == i ? null : Array.isArray(i) ? C.map(i, function(e) {
                        return {
                            name: t.name,
                            value: e.replace(m1, "\r\n")
                        }
                    }) : {
                        name: t.name,
                        value: i.replace(m1, "\r\n")
                    }
                }).get()
            }
        });
        var S1 = /%20/g
          , N1 = /#.*$/
          , D1 = /([?&])_=[^&]*/
          , f1 = /^(.*?):[ \t]*([^\r\n]*)$/gm
          , v1 = /^(?:GET|HEAD)$/
          , M1 = /^\/\//
          , y1 = {}
          , L1 = {}
          , G1 = "*/".concat("*")
          , H1 = m.createElement("a");
        function P1(o) {
            return function(e, t) {
                "string" != typeof e && (t = e,
                e = "*");
                var i, n = 0, r = e.toLowerCase().match(R) || [];
                if (C.isFunction(t))
                    for (; i = r[n++]; )
                        "+" === i[0] ? (i = i.slice(1) || "*",
                        (o[i] = o[i] || []).unshift(t)) : (o[i] = o[i] || []).push(t)
            }
        }
        function B1(t, n, r, o) {
            var a = {}
              , s = t === L1;
            function d(e) {
                var i;
                return a[e] = !0,
                C.each(t[e] || [], function(e, t) {
                    t = t(n, r, o);
                    return "string" != typeof t || s || a[t] ? s ? !(i = t) : void 0 : (n.dataTypes.unshift(t),
                    d(t),
                    !1)
                }),
                i
            }
            return d(n.dataTypes[0]) || !a["*"] && d("*")
        }
        function w1(e, t) {
            var i, n, r = C.ajaxSettings.flatOptions || {};
            for (i in t)
                void 0 !== t[i] && ((r[i] ? e : n = n || {})[i] = t[i]);
            return n && C.extend(!0, e, n),
            e
        }
        H1.href = H.href,
        C.extend({
            active: 0,
            lastModified: {},
            etag: {},
            ajaxSettings: {
                url: H.href,
                type: "GET",
                isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(H.protocol),
                global: !0,
                processData: !0,
                async: !0,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                accepts: {
                    "*": G1,
                    text: "text/plain",
                    html: "text/html",
                    xml: "application/xml, text/xml",
                    json: "application/json, text/javascript"
                },
                contents: {
                    xml: /\bxml\b/,
                    html: /\bhtml/,
                    json: /\bjson\b/
                },
                responseFields: {
                    xml: "responseXML",
                    text: "responseText",
                    json: "responseJSON"
                },
                converters: {
                    "* text": String,
                    "text html": !0,
                    "text json": JSON.parse,
                    "text xml": C.parseXML
                },
                flatOptions: {
                    url: !0,
                    context: !0
                }
            },
            ajaxSetup: function(e, t) {
                return t ? w1(w1(e, C.ajaxSettings), t) : w1(C.ajaxSettings, e)
            },
            ajaxPrefilter: P1(y1),
            ajaxTransport: P1(L1),
            ajax: function(e, t) {
                "object" == typeof e && (t = e,
                e = void 0);
                var d, _, u, i, l, c, h, n, E = C.ajaxSetup({}, t = t || {}), T = E.context || E, A = E.context && (T.nodeType || T.jquery) ? C(T) : C.event, I = C.Deferred(), p = C.Callbacks("once memory"), g = E.statusCode || {}, r = {}, o = {}, a = "canceled", O = {
                    readyState: 0,
                    getResponseHeader: function(e) {
                        var t;
                        if (c) {
                            if (!i)
                                for (i = {}; t = f1.exec(u); )
                                    i[t[1].toLowerCase()] = t[2];
                            t = i[e.toLowerCase()]
                        }
                        return null == t ? null : t
                    },
                    getAllResponseHeaders: function() {
                        return c ? u : null
                    },
                    setRequestHeader: function(e, t) {
                        return null == c && (e = o[e.toLowerCase()] = o[e.toLowerCase()] || e,
                        r[e] = t),
                        this
                    },
                    overrideMimeType: function(e) {
                        return null == c && (E.mimeType = e),
                        this
                    },
                    statusCode: function(e) {
                        if (e)
                            if (c)
                                O.always(e[O.status]);
                            else
                                for (var t in e)
                                    g[t] = [g[t], e[t]];
                        return this
                    },
                    abort: function(e) {
                        e = e || a;
                        return d && d.abort(e),
                        s(0, e),
                        this
                    }
                };
                if (I.promise(O),
                E.url = ((e || E.url || H.href) + "").replace(M1, H.protocol + "//"),
                E.type = t.method || t.type || E.method || E.type,
                E.dataTypes = (E.dataType || "*").toLowerCase().match(R) || [""],
                null == E.crossDomain) {
                    e = m.createElement("a");
                    try {
                        e.href = E.url,
                        e.href = e.href,
                        E.crossDomain = H1.protocol + "//" + H1.host != e.protocol + "//" + e.host
                    } catch (e) {
                        E.crossDomain = !0
                    }
                }
                if (E.data && E.processData && "string" != typeof E.data && (E.data = C.param(E.data, E.traditional)),
                B1(y1, E, t, O),
                !c) {
                    for (n in (h = C.event && E.global) && 0 == C.active++ && C.event.trigger("ajaxStart"),
                    E.type = E.type.toUpperCase(),
                    E.hasContent = !v1.test(E.type),
                    _ = E.url.replace(N1, ""),
                    E.hasContent ? E.data && E.processData && 0 === (E.contentType || "").indexOf("application/x-www-form-urlencoded") && (E.data = E.data.replace(S1, "+")) : (e = E.url.slice(_.length),
                    E.data && (_ += (O1.test(_) ? "&" : "?") + E.data,
                    delete E.data),
                    !1 === E.cache && (_ = _.replace(D1, "$1"),
                    e = (O1.test(_) ? "&" : "?") + "_=" + g1++ + e),
                    E.url = _ + e),
                    E.ifModified && (C.lastModified[_] && O.setRequestHeader("If-Modified-Since", C.lastModified[_]),
                    C.etag[_]) && O.setRequestHeader("If-None-Match", C.etag[_]),
                    (E.data && E.hasContent && !1 !== E.contentType || t.contentType) && O.setRequestHeader("Content-Type", E.contentType),
                    O.setRequestHeader("Accept", E.dataTypes[0] && E.accepts[E.dataTypes[0]] ? E.accepts[E.dataTypes[0]] + ("*" !== E.dataTypes[0] ? ", " + G1 + "; q=0.01" : "") : E.accepts["*"]),
                    E.headers)
                        O.setRequestHeader(n, E.headers[n]);
                    if (E.beforeSend && (!1 === E.beforeSend.call(T, O, E) || c))
                        return O.abort();
                    if (a = "abort",
                    p.add(E.complete),
                    O.done(E.success),
                    O.fail(E.error),
                    d = B1(L1, E, t, O)) {
                        if (O.readyState = 1,
                        h && A.trigger("ajaxSend", [O, E]),
                        c)
                            return O;
                        E.async && 0 < E.timeout && (l = b.setTimeout(function() {
                            O.abort("timeout")
                        }, E.timeout));
                        try {
                            c = !1,
                            d.send(r, s)
                        } catch (e) {
                            if (c)
                                throw e;
                            s(-1, e)
                        }
                    } else
                        s(-1, "No Transport")
                }
                return O;
                function s(e, t, i, n) {
                    var r, o, a, s = t;
                    c || (c = !0,
                    l && b.clearTimeout(l),
                    d = void 0,
                    u = n || "",
                    O.readyState = 0 < e ? 4 : 0,
                    n = 200 <= e && e < 300 || 304 === e,
                    i && (a = function(e, t, i) {
                        for (var n, r, o, a, s = e.contents, d = e.dataTypes; "*" === d[0]; )
                            d.shift(),
                            void 0 === n && (n = e.mimeType || t.getResponseHeader("Content-Type"));
                        if (n)
                            for (r in s)
                                if (s[r] && s[r].test(n)) {
                                    d.unshift(r);
                                    break
                                }
                        if (d[0]in i)
                            o = d[0];
                        else {
                            for (r in i) {
                                if (!d[0] || e.converters[r + " " + d[0]]) {
                                    o = r;
                                    break
                                }
                                a = a || r
                            }
                            o = o || a
                        }
                        if (o)
                            return o !== d[0] && d.unshift(o),
                            i[o]
                    }(E, O, i)),
                    a = function(e, t, i, n) {
                        var r, o, a, s, d, _ = {}, u = e.dataTypes.slice();
                        if (u[1])
                            for (a in e.converters)
                                _[a.toLowerCase()] = e.converters[a];
                        for (o = u.shift(); o; )
                            if (e.responseFields[o] && (i[e.responseFields[o]] = t),
                            !d && n && e.dataFilter && (t = e.dataFilter(t, e.dataType)),
                            d = o,
                            o = u.shift())
                                if ("*" === o)
                                    o = d;
                                else if ("*" !== d && d !== o) {
                                    if (!(a = _[d + " " + o] || _["* " + o]))
                                        for (r in _)
                                            if (s = r.split(" "),
                                            s[1] === o && (a = _[d + " " + s[0]] || _["* " + s[0]])) {
                                                !0 === a ? a = _[r] : !0 !== _[r] && (o = s[0],
                                                u.unshift(s[1]));
                                                break
                                            }
                                    if (!0 !== a)
                                        if (a && e.throws)
                                            t = a(t);
                                        else
                                            try {
                                                t = a(t)
                                            } catch (e) {
                                                return {
                                                    state: "parsererror",
                                                    error: a ? e : "No conversion from " + d + " to " + o
                                                }
                                            }
                                }
                        return {
                            state: "success",
                            data: t
                        }
                    }(E, a, O, n),
                    n ? (E.ifModified && ((i = O.getResponseHeader("Last-Modified")) && (C.lastModified[_] = i),
                    i = O.getResponseHeader("etag")) && (C.etag[_] = i),
                    204 === e || "HEAD" === E.type ? s = "nocontent" : 304 === e ? s = "notmodified" : (s = a.state,
                    r = a.data,
                    n = !(o = a.error))) : (o = s,
                    !e && s || (s = "error",
                    e < 0 && (e = 0))),
                    O.status = e,
                    O.statusText = (t || s) + "",
                    n ? I.resolveWith(T, [r, s, O]) : I.rejectWith(T, [O, s, o]),
                    O.statusCode(g),
                    g = void 0,
                    h && A.trigger(n ? "ajaxSuccess" : "ajaxError", [O, E, n ? r : o]),
                    p.fireWith(T, [O, s]),
                    h && (A.trigger("ajaxComplete", [O, E]),
                    --C.active || C.event.trigger("ajaxStop")))
                }
            },
            getJSON: function(e, t, i) {
                return C.get(e, t, i, "json")
            },
            getScript: function(e, t) {
                return C.get(e, void 0, t, "script")
            }
        }),
        C.each(["get", "post"], function(e, r) {
            C[r] = function(e, t, i, n) {
                return C.isFunction(t) && (n = n || i,
                i = t,
                t = void 0),
                C.ajax(C.extend({
                    url: e,
                    type: r,
                    dataType: n,
                    data: t,
                    success: i
                }, C.isPlainObject(e) && e))
            }
        }),
        C._evalUrl = function(e) {
            return C.ajax({
                url: e,
                type: "GET",
                dataType: "script",
                cache: !0,
                async: !1,
                global: !1,
                throws: !0
            })
        }
        ,
        C.fn.extend({
            wrapAll: function(e) {
                return this[0] && (C.isFunction(e) && (e = e.call(this[0])),
                e = C(e, this[0].ownerDocument).eq(0).clone(!0),
                this[0].parentNode && e.insertBefore(this[0]),
                e.map(function() {
                    for (var e = this; e.firstElementChild; )
                        e = e.firstElementChild;
                    return e
                }).append(this)),
                this
            },
            wrapInner: function(i) {
                return C.isFunction(i) ? this.each(function(e) {
                    C(this).wrapInner(i.call(this, e))
                }) : this.each(function() {
                    var e = C(this)
                      , t = e.contents();
                    t.length ? t.wrapAll(i) : e.append(i)
                })
            },
            wrap: function(t) {
                var i = C.isFunction(t);
                return this.each(function(e) {
                    C(this).wrapAll(i ? t.call(this, e) : t)
                })
            },
            unwrap: function(e) {
                return this.parent(e).not("body").each(function() {
                    C(this).replaceWith(this.childNodes)
                }),
                this
            }
        }),
        C.expr.pseudos.hidden = function(e) {
            return !C.expr.pseudos.visible(e)
        }
        ,
        C.expr.pseudos.visible = function(e) {
            return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
        }
        ,
        C.ajaxSettings.xhr = function() {
            try {
                return new b.XMLHttpRequest
            } catch (e) {}
        }
        ;
        var z1 = {
            0: 200,
            1223: 204
        }
          , P = C.ajaxSettings.xhr()
          , k1 = (T.cors = !!P && "withCredentials"in P,
        T.ajax = P = !!P,
        C.ajaxTransport(function(r) {
            var o, a;
            if (T.cors || P && !r.crossDomain)
                return {
                    send: function(e, t) {
                        var i, n = r.xhr();
                        if (n.open(r.type, r.url, r.async, r.username, r.password),
                        r.xhrFields)
                            for (i in r.xhrFields)
                                n[i] = r.xhrFields[i];
                        for (i in r.mimeType && n.overrideMimeType && n.overrideMimeType(r.mimeType),
                        r.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest"),
                        e)
                            n.setRequestHeader(i, e[i]);
                        o = function(e) {
                            return function() {
                                o && (o = a = n.onload = n.onerror = n.onabort = n.onreadystatechange = null,
                                "abort" === e ? n.abort() : "error" === e ? "number" != typeof n.status ? t(0, "error") : t(n.status, n.statusText) : t(z1[n.status] || n.status, n.statusText, "text" !== (n.responseType || "text") || "string" != typeof n.responseText ? {
                                    binary: n.response
                                } : {
                                    text: n.responseText
                                }, n.getAllResponseHeaders()))
                            }
                        }
                        ,
                        n.onload = o(),
                        a = n.onerror = o("error"),
                        void 0 !== n.onabort ? n.onabort = a : n.onreadystatechange = function() {
                            4 === n.readyState && b.setTimeout(function() {
                                o && a()
                            })
                        }
                        ,
                        o = o("abort");
                        try {
                            n.send(r.hasContent && r.data || null)
                        } catch (e) {
                            if (o)
                                throw e
                        }
                    },
                    abort: function() {
                        o && o()
                    }
                }
        }),
        C.ajaxPrefilter(function(e) {
            e.crossDomain && (e.contents.script = !1)
        }),
        C.ajaxSetup({
            accepts: {
                script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
            },
            contents: {
                script: /\b(?:java|ecma)script\b/
            },
            converters: {
                "text script": function(e) {
                    return C.globalEval(e),
                    e
                }
            }
        }),
        C.ajaxPrefilter("script", function(e) {
            void 0 === e.cache && (e.cache = !1),
            e.crossDomain && (e.type = "GET")
        }),
        C.ajaxTransport("script", function(i) {
            var n, r;
            if (i.crossDomain)
                return {
                    send: function(e, t) {
                        n = C("<script>").prop({
                            charset: i.scriptCharset,
                            src: i.url
                        }).on("load error", r = function(e) {
                            n.remove(),
                            r = null,
                            e && t("error" === e.type ? 404 : 200, e.type)
                        }
                        ),
                        m.head.appendChild(n[0])
                    },
                    abort: function() {
                        r && r()
                    }
                }
        }),
        [])
          , W1 = /(=)\?(?=&|$)|\?\?/
          , V1 = (C.ajaxSetup({
            jsonp: "callback",
            jsonpCallback: function() {
                var e = k1.pop() || C.expando + "_" + g1++;
                return this[e] = !0,
                e
            }
        }),
        C.ajaxPrefilter("json jsonp", function(e, t, i) {
            var n, r, o, a = !1 !== e.jsonp && (W1.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && W1.test(e.data) && "data");
            if (a || "jsonp" === e.dataTypes[0])
                return n = e.jsonpCallback = C.isFunction(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback,
                a ? e[a] = e[a].replace(W1, "$1" + n) : !1 !== e.jsonp && (e.url += (O1.test(e.url) ? "&" : "?") + e.jsonp + "=" + n),
                e.converters["script json"] = function() {
                    return o || C.error(n + " was not called"),
                    o[0]
                }
                ,
                e.dataTypes[0] = "json",
                r = b[n],
                b[n] = function() {
                    o = arguments
                }
                ,
                i.always(function() {
                    void 0 === r ? C(b).removeProp(n) : b[n] = r,
                    e[n] && (e.jsonpCallback = t.jsonpCallback,
                    k1.push(n)),
                    o && C.isFunction(r) && r(o[0]),
                    o = r = void 0
                }),
                "script"
        }),
        T.createHTMLDocument = ((e = m.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>",
        2 === e.childNodes.length),
        C.parseHTML = function(e, t, i) {
            var n;
            return "string" != typeof e ? [] : ("boolean" == typeof t && (i = t,
            t = !1),
            t || (T.createHTMLDocument ? ((n = (t = m.implementation.createHTMLDocument("")).createElement("base")).href = m.location.href,
            t.head.appendChild(n)) : t = m),
            n = !i && [],
            (i = $.exec(e)) ? [t.createElement(i[1])] : (i = Re([e], t, n),
            n && n.length && C(n).remove(),
            C.merge([], i.childNodes)))
        }
        ,
        C.fn.load = function(e, t, i) {
            var n, r, o, a = this, s = e.indexOf(" ");
            return -1 < s && (n = L(e.slice(s)),
            e = e.slice(0, s)),
            C.isFunction(t) ? (i = t,
            t = void 0) : t && "object" == typeof t && (r = "POST"),
            0 < a.length && C.ajax({
                url: e,
                type: r || "GET",
                dataType: "html",
                data: t
            }).done(function(e) {
                o = arguments,
                a.html(n ? C("<div>").append(C.parseHTML(e)).find(n) : e)
            }).always(i && function(e, t) {
                a.each(function() {
                    i.apply(this, o || [e.responseText, t, e])
                })
            }
            ),
            this
        }
        ,
        C.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(e, t) {
            C.fn[t] = function(e) {
                return this.on(t, e)
            }
        }),
        C.expr.pseudos.animated = function(t) {
            return C.grep(C.timers, function(e) {
                return t === e.elem
            }).length
        }
        ,
        C.offset = {
            setOffset: function(e, t, i) {
                var n, r, o, a, s = C.css(e, "position"), d = C(e), _ = {};
                "static" === s && (e.style.position = "relative"),
                o = d.offset(),
                n = C.css(e, "top"),
                a = C.css(e, "left"),
                s = ("absolute" === s || "fixed" === s) && -1 < (n + a).indexOf("auto") ? (r = (s = d.position()).top,
                s.left) : (r = parseFloat(n) || 0,
                parseFloat(a) || 0),
                null != (t = C.isFunction(t) ? t.call(e, i, C.extend({}, o)) : t).top && (_.top = t.top - o.top + r),
                null != t.left && (_.left = t.left - o.left + s),
                "using"in t ? t.using.call(e, _) : d.css(_)
            }
        },
        C.fn.extend({
            offset: function(t) {
                var e, i, n;
                return arguments.length ? void 0 === t ? this : this.each(function(e) {
                    C.offset.setOffset(this, t, e)
                }) : (n = this[0]) ? n.getClientRects().length ? (i = n.getBoundingClientRect(),
                e = (n = n.ownerDocument).documentElement,
                n = n.defaultView,
                {
                    top: i.top + n.pageYOffset - e.clientTop,
                    left: i.left + n.pageXOffset - e.clientLeft
                }) : {
                    top: 0,
                    left: 0
                } : void 0
            },
            position: function() {
                var e, t, i, n;
                if (this[0])
                    return i = this[0],
                    n = {
                        top: 0,
                        left: 0
                    },
                    "fixed" === C.css(i, "position") ? t = i.getBoundingClientRect() : (e = this.offsetParent(),
                    t = this.offset(),
                    n = {
                        top: (n = d(e[0], "html") ? n : e.offset()).top + C.css(e[0], "borderTopWidth", !0),
                        left: n.left + C.css(e[0], "borderLeftWidth", !0)
                    }),
                    {
                        top: t.top - n.top - C.css(i, "marginTop", !0),
                        left: t.left - n.left - C.css(i, "marginLeft", !0)
                    }
            },
            offsetParent: function() {
                return this.map(function() {
                    for (var e = this.offsetParent; e && "static" === C.css(e, "position"); )
                        e = e.offsetParent;
                    return e || Se
                })
            }
        }),
        C.each({
            scrollLeft: "pageXOffset",
            scrollTop: "pageYOffset"
        }, function(t, r) {
            var o = "pageYOffset" === r;
            C.fn[t] = function(e) {
                return l(this, function(e, t, i) {
                    var n;
                    return C.isWindow(e) ? n = e : 9 === e.nodeType && (n = e.defaultView),
                    void 0 === i ? n ? n[r] : e[t] : void (n ? n.scrollTo(o ? n.pageXOffset : i, o ? i : n.pageYOffset) : e[t] = i)
                }, t, e, arguments.length)
            }
        }),
        C.each(["top", "left"], function(e, i) {
            C.cssHooks[i] = qe(T.pixelPosition, function(e, t) {
                if (t)
                    return t = S(e, i),
                    Je.test(t) ? C(e).position()[i] + "px" : t
            })
        }),
        C.each({
            Height: "height",
            Width: "width"
        }, function(a, s) {
            C.each({
                padding: "inner" + a,
                content: s,
                "": "outer" + a
            }, function(n, o) {
                C.fn[o] = function(e, t) {
                    var i = arguments.length && (n || "boolean" != typeof e)
                      , r = n || (!0 === e || !0 === t ? "margin" : "border");
                    return l(this, function(e, t, i) {
                        var n;
                        return C.isWindow(e) ? 0 === o.indexOf("outer") ? e["inner" + a] : e.document.documentElement["client" + a] : 9 === e.nodeType ? (n = e.documentElement,
                        Math.max(e.body["scroll" + a], n["scroll" + a], e.body["offset" + a], n["offset" + a], n["client" + a])) : void 0 === i ? C.css(e, t, r) : C.style(e, t, i, r)
                    }, s, i ? e : void 0, i)
                }
            })
        }),
        C.fn.extend({
            bind: function(e, t, i) {
                return this.on(e, null, t, i)
            },
            unbind: function(e, t) {
                return this.off(e, null, t)
            },
            delegate: function(e, t, i, n) {
                return this.on(t, e, i, n)
            },
            undelegate: function(e, t, i) {
                return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", i)
            }
        }),
        C.holdReady = function(e) {
            e ? C.readyWait++ : C.ready(!0)
        }
        ,
        C.isArray = Array.isArray,
        C.parseJSON = JSON.parse,
        C.nodeName = d,
        "function" == typeof define && define.amd && define("jquery", [], function() {
            return C
        }),
        b.jQuery)
          , U1 = b.$;
        return C.noConflict = function(e) {
            return b.$ === C && (b.$ = U1),
            e && b.jQuery === C && (b.jQuery = V1),
            C
        }
        ,
        B || (b.jQuery = b.$ = C),
        C
    }),
    function() {
        {
            let c = (...e)=>new Uint8Array(...e)
              , e = (...e)=>new Uint16Array(...e);
            function o(t) {
                let i = "";
                for (let e = 0; e < t.length; e += 3) {
                    var n = parseInt(t.substr(e, 3), 10);
                    i += String.fromCharCode(n)
                }
                return i
            }
            function i() {
                this.t = e(16),
                this.o = e(288)
            }
            function p(e, t) {
                this.i = e,
                this.u = 0,
                this.l = 0,
                this.k = 0,
                this.h = t,
                this.Z = 0,
                this.v = new i,
                this.H = new i
            }
            function t(e, t, i, n) {
                for (var r, o = 0; o < i; ++o)
                    e[o] = 0;
                for (o = 0; o < 30 - i; ++o)
                    e[o + i] = o / i | 0;
                for (r = n,
                o = 0; o < 30; ++o)
                    t[o] = r,
                    r += 1 << e[o]
            }
            function g(e, t, i, n) {
                for (var r, o = 0; o < 16; ++o)
                    e.t[o] = 0;
                for (o = 0; o < n; ++o)
                    e.t[t[i + o]]++;
                for (o = r = e.t[0] = 0; o < 16; ++o)
                    l[o] = r,
                    r += e.t[o];
                for (o = 0; o < n; ++o)
                    t[i + o] && (e.o[l[t[i + o]]++] = o)
            }
            function O(e, t, i) {
                if (!t)
                    return i;
                for (; e.k < 24; )
                    e.l |= e.i[e.u++] << e.k,
                    e.k += 8;
                var n = e.l & 65535 >>> 16 - t;
                return e.l >>>= t,
                e.k -= t,
                n + i
            }
            function b(e, t) {
                for (var i, n, r, o; e.k < 24; )
                    e.l |= e.i[e.u++] << e.k,
                    e.k += 8;
                for (r = n = i = 0,
                o = e.l; n = 2 * n + (1 & o),
                o >>>= 1,
                i += t.t[++r],
                0 <= (n -= t.t[r]); )
                    ;
                return e.l = o,
                e.k -= r,
                t.o[i + n]
            }
            function m(e, t, i) {
                for (var n, r, o, a; ; ) {
                    if (256 === (r = b(e, t)))
                        return C;
                    if (r < 256)
                        e.h[e.Z++] = r;
                    else
                        for (n = O(e, s[r -= 257], d[r]),
                        r = b(e, i),
                        a = o = e.Z - O(e, _[r], u[r]); a < o + n; ++a)
                            e.h[e.Z++] = e.h[a]
                }
            }
            function a(e, t) {
                var i, n, r, o = new p(e,t);
                do {
                    switch (r = void 0,
                    (n = o).k-- || (n.l = n.i[n.u++],
                    n.k = 7),
                    r = 1 & n.l,
                    n.l >>>= 1,
                    n = r,
                    O(o, 2, 0)) {
                    case 0:
                        i = function(e) {
                            for (var t, i; 8 < e.k; )
                                e.u--,
                                e.k -= 8;
                            if ((t = 256 * e.i[e.u + 1] + e.i[e.u]) !== (65535 & ~(256 * e.i[e.u + 3] + e.i[e.u + 2])))
                                return R;
                            for (e.u += 4,
                            i = t; i; --i)
                                e.h[e.Z++] = e.i[e.u++];
                            return e.k = 0,
                            C
                        }(o);
                        break;
                    case 1:
                        i = m(o, S, N);
                        break;
                    case 2:
                        A = T = E = u = _ = d = s = a = I = h = c = l = void 0;
                        for (var a, s, d, _, u, l = o, c = o.v, h = o.H, E = O(l, 5, 257), T = O(l, 5, 1), A = O(l, 4, 4), I = 0; I < 19; ++I)
                            v[I] = 0;
                        for (I = 0; I < A; ++I)
                            d = O(l, 3, 0),
                            v[D[I]] = d;
                        for (g(f, v, 0, 19),
                        a = 0; a < E + T; )
                            switch (_ = b(l, f)) {
                            case 16:
                                for (u = v[a - 1],
                                s = O(l, 2, 3); s; --s)
                                    v[a++] = u;
                                break;
                            case 17:
                                for (s = O(l, 3, 3); s; --s)
                                    v[a++] = 0;
                                break;
                            case 18:
                                for (s = O(l, 7, 11); s; --s)
                                    v[a++] = 0;
                                break;
                            default:
                                v[a++] = _
                            }
                        g(c, v, 0, E),
                        g(h, v, E, T),
                        i = m(o, o.v, o.H);
                        break;
                    default:
                        i = R
                    }
                    if (i !== C)
                        throw Error("Data error")
                } while (!n);
                o.Z < o.h.length ? "function" == typeof o.h.slice ? o.h.slice(0, o.Z) : o.h.subarray(0, o.Z) : o.h
            }
            for (var C = 0, R = -3, S = new i, N = new i, s = c(30), d = e(30), _ = c(30), u = e(30), D = c([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), f = new i, v = c(320), l = e(16), n = S, r = N, h = 0; h < 7; ++h)
                n.t[h] = 0;
            for (n.t[7] = 24,
            n.t[8] = 152,
            n.t[9] = 112,
            h = 0; h < 24; ++h)
                n.o[h] = 256 + h;
            for (h = 0; h < 144; ++h)
                n.o[24 + h] = h;
            for (h = 0; h < 8; ++h)
                n.o[168 + h] = 280 + h;
            for (h = 0; h < 112; ++h)
                n.o[176 + h] = 144 + h;
            for (h = 0; h < 5; ++h)
                r.t[h] = 0;
            for (r.t[5] = 32,
            h = 0; h < 32; ++h)
                r.o[h] = h;
            t(s, d, 4, 3),
            t(_, u, 2, 1),
            s[28] = 0,
            d[28] = 258,
            function(C) {
                let R = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : C
                  , S = R
                  , e = "undefined" != typeof require ? require : null
                  , t = function(e, t=0) {
                    for (var i, n, r, o = e.replace(/[^A-Za-z0-9+/]/g, ""), a = o.length, s = t ? Math.ceil((3 * a + 1 >> 2) / t) * t : 3 * a + 1 >> 2, d = c(s), _ = 0, u = 0, l = 0; l < a; l++)
                        if (n = 3 & l,
                        _ |= (64 < (r = o.charCodeAt(l)) && r < 91 ? r - 65 : 96 < r && r < 123 ? r - 71 : 47 < r && r < 58 ? r + 4 : 43 === r ? 62 : 47 === r ? 63 : 0) << 6 * (3 - n),
                        3 == n || a - l == 1) {
                            for (i = 0; i < 3 && u < s; i++,
                            u++)
                                d[u] = _ >>> (16 >>> i & 24) & 255;
                            _ = 0
                        }
                    return d
                }("ARsLAABtVd9vXFcRPmdmzjm71+u7pVs2aVqH2yV18+M6xrnaqCJSncQUy0QV0aa4EgjEevc6XrB3rbvXjSxFAol/AJ4Qjzwg8QT0hUeekKB/AGqfi+CpL/AX8M1Z2w2IOOfu3Jlv5sx8Z+bctPn+6XH5blXNqvRndmf64fBwMs6GdV0eHddZPcvmx1U5HGfT2XRtUpfVcO+wzCbTeT2cjsrbyc40m1XjslLkHgxniDzih1U1PM1mez8qR/U8OzqZ19nB8MMyG2bfe3J6tDc7vB3x9az6/vUb2VFZH8zGt1M/r6vJ9Gnqvx0d0+ZxNatnNbJMG/XsycIoo+HhYermh5NRmS6NZkioOhkhUirT4VGZ8nvD45SflHXqHmgWqexXs6O0+aB6enJUTut5ev0H1ze//p3J850b0xrS28837j4v7tyAuHU4PDouxzc2o+e11KRSl3MkcjIdl/uTaTlO/SL/tHFeQJrcv38hh8l8sak/LKdP64P0ja3hdDqrM00a1Y8Oh/N5NsT/bP9kOqons2malFMkFslLW6hnf/L0ZPHmcCQnqP1ZNamjIl1k8biaHZdVfZryj8vTNDmZl5kyB8b8s8l0PHuWvrRbVpP9STl+jP2e4ZzS1vxgsl+X462DYTVP/TfK0WxcpskIr1uQHtSpHJ/MD1DfguaWsrZ1Zk3d8Pj4EFSiyL00KOkzza+MzZPGHspiSHUN4xi8Sv2707iL7NWz4Tks6iKsjNZq15hda80uYTGWYDksjxWwGlhNrARriRKz29LHMt5SWja7bTxWrP0FG9M3xq5Y+lcULURmUZEgytCpyBDdp1EUiH7Zq+ggho+i6CE2/h7FALH5+6Biw+b2K+vWZjm9gXC0StShn2OfFUq2G8bcNUR906R1AsSuFWyadwxzj8nyCi9/1FQIc98kvM4K2SjIJHfg1SO21NVQjWCcsdBLYa0d2LuWKLG0Yf8EI9RcMNR8pk7IbtCnarGGzi3WQh19Pl/4WE1M0cauIT4qMDnZAd0B9LJd7OgsFUiiQz8ELTkhGNtbzJeIuEPflBjHqXKADJiwDyGmobWuGlEx56CZiXNyhphy9oUALRkyhS1sS2Mg22K3RKCEM/cRJycNx5t4TZg6/Ou4E9tcGkZIEpZEuCN/VjU2z6mxCN7UrQSeDHvOCXx4E/ES4g36J9A5LxUu6lyiJbCLWbZyXobeDlzMq/uBVsvpBdTxhsuhe4XbL+X+S0VgHoQMLeRh6rhHMBXuf4lwrvs+DNtsriAfxwm5yIxSuWA3p5fXxXRuidwnVCXUkV/B+DYVTix6oZP7V4xnb7zzQHggEpIN+qOCpPBic/dl47y7L4J6pEOfnNcjyxpjUY/EbT+52HYB6BbOnQM61PJnZylQSuwjdVL1RScgL/F0aZHqhrwTXTyS9Tb3lzTJ5YskO/RdNcuZSfDnYSO/TabvWYehVUA18HewV98L+syzah4hRod+uwiOIqFFFGzCxonrOfJux4GV7lwhzqM6t/ZFt7pgCx/osXN+1bmO+wyodVwZub+sezl32XU/e7GqbW/6DbSlb3BBDcrlkrbYI++l43+HAYcBdTfYoIZ+QwSy5P5VYCXnV7XhYndtBj1qu8r62iMQBUfJ5QrOf1Wn3aMj6TX1fvn8sH+i4TWOf307mNUQeoF8SCTg7DkPK4hgBz7GoasGVA9I4QPK0OFhh02Du/9+sRanc9OkOBz/0OBsQhGaaDQxFKJ7E8+7FAcEUI5T0Gx8AR3oE90dMcTroiO8srDkQQbhIeIu/qni9UHY9nbV+4FvWjwyFgSmptX2QV4rtPQbRO8nepGYRiEJ2uuhXIQAQ68NZIVbfwFqwA/5woJtr+IhXx1Ik3A53LR46PWiMRIjGr0Q4+/FshAWZYncwy3Qu2l8zxP7BS/tX+KGvedz6ekRoh1xIj0Wz/jttxg0tNB4LRtP3ssjfBg6/F5TKVHlNdgYhekHY1v+9lf6IAo/pXfw228J3+MYmtEObwIrigUJO2Ja3P0cZYHD1ZzfMriZcrm+Drr0UJET5aFnAgWwbZXBjGJI0u/AjUJapJOIYzC8ttT9AzK6rrfCzVxu5T7XGC175qRMc9pOwPSyRUXK9PL/Zdq3N4Aa+If+wuJzfxUPuf3fTIMZxHiRadbLbVm/Jso05x5Mo2fZhzOm7RKqDXa9kHa8RULotyncC5GgIHm4hGnreQlep66tU9fmIrQXUxfOpu7jRKdOlddgizct9JH7b0UB3OO33xb/wrG+CawoVsSD+zZ3D5Iz7v1begMp9wHco8HBPYaxpx8NtA3ShB95vUo8mL6yFJn2C6bD19QD9Swgjf8A")
                  , i = !!t[0]
                  , n = i ? t[1] | t[2] << 8 | t[3] << 16 | t[4] << 24 : t.length
                  , N = i ? c(n) : c(t.buffer, 5, t.length - 5)
                  , D = (i && a(c(t.buffer, 5, t.length - 5), N),
                0)
                  , f = {}
                  , v = []
                  , M = []
                  , y = []
                  , O = []
                  , L = 0
                  , b = null
                  , G = null
                  , H = []
                  , P = null
                  , B = (C._$EXPORTS = {},
                e && (C.require = e),
                0)
                  , w = new Float64Array(1)
                  , z = c(w.buffer);
                function k() {
                    let e = 0, t = 0, i;
                    for (; i = N[D++],
                    e |= (127 & i) << t,
                    0 != (128 & i); )
                        t += 7;
                    return e
                }
                function W() {
                    return N[D++] | N[D++] << 8 | N[D++] << 16 | N[D++] << 24
                }
                function r() {
                    var t = k();
                    let i = "";
                    for (let e = 0; t > e; e++)
                        i += function(e) {
                            return function() {
                                return this
                            }()[o(e)]
                        }("083116114105110103")[o("102114111109067104097114067111100101")](k());
                    return i
                }
                function V(I, p) {
                    let g = f;
                    return function e() {
                        var t = L
                          , i = {}
                          , n = (L = I,
                        f)
                          , r = ((f = i)[I] = {},
                        O[I])
                          , o = r.length;
                        for (let e = 0; o > e; e++) {
                            var a = r[e]
                              , s = g[a];
                            i[a] = s
                        }
                        var d, _ = v, u = D, l = b, c = G, h = S, E = H;
                        let T = null
                          , A = null;
                        v = [],
                        H = [],
                        D = p,
                        b = e,
                        G = arguments,
                        S = this;
                        try {
                            T = m()
                        } catch (e) {
                            H.length ? (d = H.pop(),
                            D = d,
                            P = e,
                            T = m()) : A = e
                        }
                        if (H = E,
                        D = u,
                        v = _,
                        b = l,
                        f = n,
                        L = t,
                        G = c,
                        S = h,
                        A)
                            throw A;
                        return T
                    }
                }
                function m() {
                    for (; ; ) {
                        var e = N[D++];
                        switch (e) {
                        case 7:
                            f[L][k()] = G;
                            break;
                        case 80:
                            v[N[D++]] = v[N[D++]]instanceof v[N[D++]];
                            break;
                        case 18:
                            v[N[D++]] = v[N[D++]]in v[N[D++]];
                            break;
                        case 71:
                            v[N[D++]] = k();
                            break;
                        case 73:
                            v[N[D++]] = N[D++] ? ++f[k()][k()] : f[k()][k()]++;
                            break;
                        case 66:
                            v[N[D++]] = (z[0] = N[D++],
                            z[1] = N[D++],
                            z[2] = N[D++],
                            z[3] = N[D++],
                            z[4] = N[D++],
                            z[5] = N[D++],
                            z[6] = N[D++],
                            z[7] = N[D++],
                            w[0]);
                            break;
                        case 5:
                            var t = k()
                              , i = k();
                            f[L][i] = G[t];
                            break;
                        case 10:
                            v[N[D++]] = v[N[D++]];
                            break;
                        case 59:
                            v[N[D++]] = S;
                            break;
                        case 29:
                            v[N[D++]] = V(k(), W());
                            break;
                        case 44:
                            v[N[D++]] = M[k()];
                            break;
                        case 20:
                            v[N[D++]] = RegExp(M[k()], M[k()]);
                            break;
                        case 38:
                            v[N[D++]] = !v[N[D++]];
                            break;
                        case 26:
                            v[N[D++]] = void v[N[D++]];
                            break;
                        case 67:
                            v[N[D++]] = -v[N[D++]];
                            break;
                        case 43:
                            v[N[D++]] = typeof v[N[D++]];
                            break;
                        case 87:
                            v[N[D++]] = v[N[D++]] + v[N[D++]];
                            break;
                        case 74:
                            v[N[D++]] = v[N[D++]] - v[N[D++]];
                            break;
                        case 62:
                            v[N[D++]] = v[N[D++]] % v[N[D++]];
                            break;
                        case 64:
                            v[N[D++]] = v[N[D++]] != v[N[D++]];
                            break;
                        case 63:
                        case 23:
                            v[N[D++]] = v[N[D++]] == v[N[D++]];
                            break;
                        case 75:
                            v[N[D++]] = v[N[D++]] < v[N[D++]];
                            break;
                        case 13:
                            v[N[D++]] = v[N[D++]] > v[N[D++]];
                            break;
                        case 82:
                            y.push(v[N[D++]]);
                            break;
                        case 54:
                            var n = k()
                              , r = Array(n);
                            for (let e = 0; n > e; e++)
                                r[n - e - 1] = y.pop();
                            i = N[D++],
                            t = N[D++];
                            v[i] = v[t].apply(R, r);
                            break;
                        case 50:
                            var o = k()
                              , a = Array(o);
                            for (let e = 0; o > e; e++)
                                a[o - e - 1] = y.pop();
                            var s = N[D++]
                              , d = N[D++];
                            v[d] = Reflect.construct(v[s], a);
                            break;
                        case 34:
                            v[N[D++]] = v[N[D++]][v[N[D++]]] = v[N[D++]];
                            break;
                        case 0:
                            v[N[D++]] = v[N[D++]][v[N[D++]]];
                            break;
                        case 32:
                            var _ = k()
                              , u = Array(_);
                            for (let e = 0; _ > e; e++)
                                u[_ - e - 1] = y.pop();
                            var d = N[D++]
                              , s = N[D++]
                              , l = N[D++]
                              , c = v[s]
                              , l = v[l];
                            v[d] = c[l].apply(c, u);
                            break;
                        case 24:
                            throw v[N[D++]];
                        case 47:
                            var l = N[D++]
                              , c = !!N[D++]
                              , h = k()
                              , h = M[h];
                            if (h in C)
                                v[l] = C[h];
                            else {
                                if (c && !(h in R))
                                    throw new ReferenceError(h + " is not defined");
                                v[l] = R[h]
                            }
                            break;
                        case 42:
                            var E = k()
                              , T = Array(E);
                            for (let e = 0; E > e; e++)
                                T[E - e - 1] = y.pop();
                            v[N[D++]] = T;
                            break;
                        case 9:
                            var A = {}
                              , I = k()
                              , h = N[D++];
                            for (let e = 0; I > e; e++) {
                                var p = y.pop()
                                  , g = y.pop();
                                switch (y.pop()) {
                                case 0:
                                    A[g] = p;
                                    break;
                                case 1:
                                    Object.defineProperty(A, g, {
                                        get: p
                                    });
                                    break;
                                case 2:
                                    Object.defineProperty(A, g, {
                                        set: p
                                    })
                                }
                            }
                            v[h] = A;
                            break;
                        case 56:
                            v[N[D++]] = null;
                            break;
                        case 51:
                            v[N[D++]] = f[k()][k()];
                            break;
                        case 4:
                            v[N[D++]] = f[k()][k()] = v[N[D++]];
                            break;
                        case 53:
                            f[k()][k()] = v[N[D++]];
                            break;
                        case 19:
                            var O = N[D++]
                              , b = W();
                            v[O] || (D = b);
                            break;
                        case 49:
                            O = N[D++],
                            b = W();
                            v[O] && (D = b);
                            break;
                        case 22:
                            var m = W();
                            D = m;
                            break;
                        case 8:
                        case 45:
                            return v[B];
                        case 15:
                            H.push(W());
                            break;
                        case 11:
                            H.pop();
                            break;
                        case 40:
                            f[L][k()] = P;
                            break;
                        default:
                            throw "u" + e
                        }
                    }
                }
                (()=>{
                    for (D = 0; ; ) {
                        var e = N[D++];
                        if (14 === e)
                            M.push(r());
                        else {
                            if (86 !== e)
                                return D--;
                            var e = k()
                              , t = k()
                              , i = [];
                            for (let e = 0; t > e; e++)
                                i.push(k());
                            O[e] = i
                        }
                    }
                }
                )(),
                V(0, D).call(this)
            }({})
        }
        var e, c, E;
        !function() {
            "use strict";
            function e() {
                this.init()
            }
            function t(e) {
                e.src && 0 !== e.src.length ? this.init(e) : console.error("An array of source files must be passed with any new Howl.")
            }
            e.prototype = {
                init: function() {
                    var e = this || A;
                    return e._counter = 1e3,
                    e._codecs = {},
                    e._howls = [],
                    e._muted = !1,
                    e._volume = 1,
                    e._canPlayEvent = "canplaythrough",
                    e._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null,
                    e.masterGain = null,
                    e.noAudio = !1,
                    e.usingWebAudio = !0,
                    e.autoSuspend = !0,
                    e.ctx = null,
                    e.mobileAutoEnable = !0,
                    e._setup(),
                    e
                },
                volume: function(e) {
                    var t = this || A;
                    if (e = parseFloat(e),
                    t.ctx || l(),
                    void 0 !== e && 0 <= e && e <= 1) {
                        if (t._volume = e,
                        !t._muted) {
                            t.usingWebAudio && (t.masterGain.gain.value = e);
                            for (var i = 0; i < t._howls.length; i++)
                                if (!t._howls[i]._webAudio)
                                    for (var n = t._howls[i]._getSoundIds(), r = 0; r < n.length; r++) {
                                        var o = t._howls[i]._soundById(n[r]);
                                        o && o._node && (o._node.volume = o._volume * e)
                                    }
                        }
                        return t
                    }
                    return t._volume
                },
                mute: function(e) {
                    var t = this || A;
                    t.ctx || l(),
                    t._muted = e,
                    t.usingWebAudio && (t.masterGain.gain.value = e ? 0 : t._volume);
                    for (var i = 0; i < t._howls.length; i++)
                        if (!t._howls[i]._webAudio)
                            for (var n = t._howls[i]._getSoundIds(), r = 0; r < n.length; r++) {
                                var o = t._howls[i]._soundById(n[r]);
                                o && o._node && (o._node.muted = !!e || o._muted)
                            }
                    return t
                },
                unload: function() {
                    for (var e = this || A, t = e._howls.length - 1; 0 <= t; t--)
                        e._howls[t].unload();
                    return e.usingWebAudio && e.ctx && void 0 !== e.ctx.close && (e.ctx.close(),
                    e.ctx = null,
                    l()),
                    e
                },
                codecs: function(e) {
                    return (this || A)._codecs[e.replace(/^x-/, "")]
                },
                _setup: function() {
                    var t = this || A;
                    if (t.state = t.ctx && t.ctx.state || "running",
                    t._autoSuspend(),
                    !t.usingWebAudio)
                        if ("undefined" != typeof Audio)
                            try {
                                void 0 === (new Audio).oncanplaythrough && (t._canPlayEvent = "canplay")
                            } catch (e) {
                                t.noAudio = !0
                            }
                        else
                            t.noAudio = !0;
                    try {
                        (new Audio).muted && (t.noAudio = !0)
                    } catch (t) {}
                    return t.noAudio || t._setupCodecs(),
                    t
                },
                _setupCodecs: function() {
                    var e, t, i = this || A, n = null;
                    try {
                        n = "undefined" != typeof Audio ? new Audio : null
                    } catch (e) {
                        return i
                    }
                    return n && "function" == typeof n.canPlayType && (e = n.canPlayType("audio/mpeg;").replace(/^no$/, ""),
                    t = (t = i._navigator && i._navigator.userAgent.match(/OPR\/([0-6].)/g)) && parseInt(t[0].split("/")[1], 10) < 33,
                    i._codecs = {
                        mp3: !(t || !e && !n.canPlayType("audio/mp3;").replace(/^no$/, "")),
                        mpeg: !!e,
                        opus: !!n.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
                        ogg: !!n.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                        oga: !!n.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                        wav: !!n.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
                        aac: !!n.canPlayType("audio/aac;").replace(/^no$/, ""),
                        caf: !!n.canPlayType("audio/x-caf;").replace(/^no$/, ""),
                        m4a: !!(n.canPlayType("audio/x-m4a;") || n.canPlayType("audio/m4a;") || n.canPlayType("audio/aac;")).replace(/^no$/, ""),
                        mp4: !!(n.canPlayType("audio/x-mp4;") || n.canPlayType("audio/mp4;") || n.canPlayType("audio/aac;")).replace(/^no$/, ""),
                        weba: !!n.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                        webm: !!n.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                        dolby: !!n.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
                        flac: !!(n.canPlayType("audio/x-flac;") || n.canPlayType("audio/flac;")).replace(/^no$/, "")
                    }),
                    i
                },
                _enableMobileAudio: function() {
                    var t, i = this || A, e = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(i._navigator && i._navigator.userAgent), n = !!("ontouchend"in window || i._navigator && 0 < i._navigator.maxTouchPoints || i._navigator && 0 < i._navigator.msMaxTouchPoints);
                    if (!i._mobileEnabled && i.ctx && (e || n))
                        return i._mobileEnabled = !1,
                        i._mobileUnloaded || 44100 === i.ctx.sampleRate || (i._mobileUnloaded = !0,
                        i.unload()),
                        i._scratchBuffer = i.ctx.createBuffer(1, 1, 22050),
                        t = function() {
                            A._autoResume();
                            var e = i.ctx.createBufferSource();
                            e.buffer = i._scratchBuffer,
                            e.connect(i.ctx.destination),
                            void 0 === e.start ? e.noteOn(0) : e.start(0),
                            "function" == typeof i.ctx.resume && i.ctx.resume(),
                            e.onended = function() {
                                e.disconnect(0),
                                i._mobileEnabled = !0,
                                i.mobileAutoEnable = !1,
                                document.removeEventListener("touchend", t, !0)
                            }
                        }
                        ,
                        document.addEventListener("touchend", t, !0),
                        i
                },
                _autoSuspend: function() {
                    var e = this;
                    if (e.autoSuspend && e.ctx && void 0 !== e.ctx.suspend && A.usingWebAudio) {
                        for (var t = 0; t < e._howls.length; t++)
                            if (e._howls[t]._webAudio)
                                for (var i = 0; i < e._howls[t]._sounds.length; i++)
                                    if (!e._howls[t]._sounds[i]._paused)
                                        return e;
                        return e._suspendTimer && clearTimeout(e._suspendTimer),
                        e._suspendTimer = setTimeout(function() {
                            e.autoSuspend && (e._suspendTimer = null,
                            e.state = "suspending",
                            e.ctx.suspend().then(function() {
                                e.state = "suspended",
                                e._resumeAfterSuspend && (delete e._resumeAfterSuspend,
                                e._autoResume())
                            }))
                        }, 3e4),
                        e
                    }
                },
                _autoResume: function() {
                    var t = this;
                    if (t.ctx && void 0 !== t.ctx.resume && A.usingWebAudio)
                        return "running" === t.state && t._suspendTimer ? (clearTimeout(t._suspendTimer),
                        t._suspendTimer = null) : "suspended" === t.state ? (t.ctx.resume().then(function() {
                            t.state = "running";
                            for (var e = 0; e < t._howls.length; e++)
                                t._howls[e]._emit("resume")
                        }),
                        t._suspendTimer && (clearTimeout(t._suspendTimer),
                        t._suspendTimer = null)) : "suspending" === t.state && (t._resumeAfterSuspend = !0),
                        t
                }
            };
            var A = new e
              , o = (t.prototype = {
                init: function(e) {
                    var t = this;
                    return A.ctx || l(),
                    t._autoplay = e.autoplay || !1,
                    t._format = "string" != typeof e.format ? e.format : [e.format],
                    t._html5 = e.html5 || !1,
                    t._muted = e.mute || !1,
                    t._loop = e.loop || !1,
                    t._pool = e.pool || 5,
                    t._preload = "boolean" != typeof e.preload || e.preload,
                    t._rate = e.rate || 1,
                    t._sprite = e.sprite || {},
                    t._src = "string" != typeof e.src ? e.src : [e.src],
                    t._volume = void 0 !== e.volume ? e.volume : 1,
                    t._duration = 0,
                    t._state = "unloaded",
                    t._sounds = [],
                    t._endTimers = {},
                    t._queue = [],
                    t._onend = e.onend ? [{
                        fn: e.onend
                    }] : [],
                    t._onfade = e.onfade ? [{
                        fn: e.onfade
                    }] : [],
                    t._onload = e.onload ? [{
                        fn: e.onload
                    }] : [],
                    t._onloaderror = e.onloaderror ? [{
                        fn: e.onloaderror
                    }] : [],
                    t._onpause = e.onpause ? [{
                        fn: e.onpause
                    }] : [],
                    t._onplay = e.onplay ? [{
                        fn: e.onplay
                    }] : [],
                    t._onstop = e.onstop ? [{
                        fn: e.onstop
                    }] : [],
                    t._onmute = e.onmute ? [{
                        fn: e.onmute
                    }] : [],
                    t._onvolume = e.onvolume ? [{
                        fn: e.onvolume
                    }] : [],
                    t._onrate = e.onrate ? [{
                        fn: e.onrate
                    }] : [],
                    t._onseek = e.onseek ? [{
                        fn: e.onseek
                    }] : [],
                    t._onresume = [],
                    t._webAudio = A.usingWebAudio && !t._html5,
                    void 0 !== A.ctx && A.ctx && A.mobileAutoEnable && A._enableMobileAudio(),
                    A._howls.push(t),
                    t._autoplay && t._queue.push({
                        event: "play",
                        action: function() {
                            t.play()
                        }
                    }),
                    t._preload && t.load(),
                    t
                },
                load: function() {
                    var e = this
                      , t = null;
                    if (!A.noAudio) {
                        "string" == typeof e._src && (e._src = [e._src]);
                        for (var i, n, r = 0; r < e._src.length; r++) {
                            if (e._format && e._format[r])
                                i = e._format[r];
                            else {
                                if ("string" != typeof (n = e._src[r])) {
                                    e._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
                                    continue
                                }
                                i = (i = (i = /^data:audio\/([^;,]+);/i.exec(n)) || /\.([^.]+)$/.exec(n.split("?", 1)[0])) && i[1].toLowerCase()
                            }
                            if (i || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),
                            i && A.codecs(i)) {
                                t = e._src[r];
                                break
                            }
                        }
                        return t ? (e._src = t,
                        e._state = "loading",
                        "https:" === window.location.protocol && "http:" === t.slice(0, 5) && (e._html5 = !0,
                        e._webAudio = !1),
                        new o(e),
                        e._webAudio && s(e),
                        e) : void e._emit("loaderror", null, "No codec support for selected audio sources.")
                    }
                    e._emit("loaderror", null, "No audio support.")
                },
                play: function(e, t) {
                    var i = this
                      , n = null;
                    if ("number" == typeof e)
                        n = e,
                        e = null;
                    else {
                        if ("string" == typeof e && "loaded" === i._state && !i._sprite[e])
                            return null;
                        if (void 0 === e) {
                            e = "__default";
                            for (var r = 0, o = 0; o < i._sounds.length; o++)
                                i._sounds[o]._paused && !i._sounds[o]._ended && (r++,
                                n = i._sounds[o]._id);
                            1 === r ? e = null : n = null
                        }
                    }
                    var a, s, d, _, u, l, c, h, E, T = n ? i._soundById(n) : i._inactiveSound();
                    return T ? (n && !e && (e = T._sprite || "__default"),
                    "loaded" !== i._state ? (T._sprite = e,
                    T._ended = !1,
                    a = T._id,
                    i._queue.push({
                        event: "play",
                        action: function() {
                            i.play(a)
                        }
                    }),
                    a) : (n && !T._paused ? t || setTimeout(function() {
                        i._emit("play", T._id)
                    }, 0) : (i._webAudio && A._autoResume(),
                    s = Math.max(0, 0 < T._seek ? T._seek : i._sprite[e][0] / 1e3),
                    d = Math.max(0, (i._sprite[e][0] + i._sprite[e][1]) / 1e3 - s),
                    _ = 1e3 * d / Math.abs(T._rate),
                    T._paused = !1,
                    T._ended = !1,
                    T._sprite = e,
                    T._seek = s,
                    T._start = i._sprite[e][0] / 1e3,
                    T._stop = (i._sprite[e][0] + i._sprite[e][1]) / 1e3,
                    T._loop = !(!T._loop && !i._sprite[e][2]),
                    u = T._node,
                    i._webAudio ? (e = function() {
                        i._refreshBuffer(T);
                        var e = T._muted || i._muted ? 0 : T._volume;
                        u.gain.setValueAtTime(e, A.ctx.currentTime),
                        T._playStart = A.ctx.currentTime,
                        void 0 === u.bufferSource.start ? T._loop ? u.bufferSource.noteGrainOn(0, s, 86400) : u.bufferSource.noteGrainOn(0, s, d) : T._loop ? u.bufferSource.start(0, s, 86400) : u.bufferSource.start(0, s, d),
                        _ !== 1 / 0 && (i._endTimers[T._id] = setTimeout(i._ended.bind(i, T), _)),
                        t || setTimeout(function() {
                            i._emit("play", T._id)
                        }, 0)
                    }
                    ,
                    l = "running" === A.state,
                    "loaded" === i._state && l ? e() : (h = l || "loaded" !== i._state ? "load" : "resume",
                    i.once(h, e, l ? T._id : null),
                    i._clearTimer(T._id))) : (c = function() {
                        u.currentTime = s,
                        u.muted = T._muted || i._muted || A._muted || u.muted,
                        u.volume = T._volume * A.volume(),
                        u.playbackRate = T._rate,
                        u.play(),
                        _ !== 1 / 0 && (i._endTimers[T._id] = setTimeout(i._ended.bind(i, T), _)),
                        t || i._emit("play", T._id)
                    }
                    ,
                    h = "loaded" === i._state && (window && window.ejecta || !u.readyState && A._navigator.isCocoonJS),
                    4 === u.readyState || h ? c() : (E = function() {
                        c(),
                        u.removeEventListener(A._canPlayEvent, E, !1)
                    }
                    ,
                    u.addEventListener(A._canPlayEvent, E, !1),
                    i._clearTimer(T._id)))),
                    T._id)) : null
                },
                pause: function(e) {
                    var t = this;
                    if ("loaded" !== t._state)
                        t._queue.push({
                            event: "pause",
                            action: function() {
                                t.pause(e)
                            }
                        });
                    else
                        for (var i = t._getSoundIds(e), n = 0; n < i.length; n++) {
                            t._clearTimer(i[n]);
                            var r = t._soundById(i[n]);
                            if (r && !r._paused && (r._seek = t.seek(i[n]),
                            r._rateSeek = 0,
                            r._paused = !0,
                            t._stopFade(i[n]),
                            r._node))
                                if (t._webAudio) {
                                    if (!r._node.bufferSource)
                                        continue;
                                    void 0 === r._node.bufferSource.stop ? r._node.bufferSource.noteOff(0) : r._node.bufferSource.stop(0),
                                    t._cleanBuffer(r._node)
                                } else
                                    isNaN(r._node.duration) && r._node.duration !== 1 / 0 || r._node.pause();
                            arguments[1] || t._emit("pause", r ? r._id : null)
                        }
                    return t
                },
                stop: function(e, t) {
                    var i = this;
                    if ("loaded" !== i._state)
                        i._queue.push({
                            event: "stop",
                            action: function() {
                                i.stop(e)
                            }
                        });
                    else
                        for (var n = i._getSoundIds(e), r = 0; r < n.length; r++) {
                            i._clearTimer(n[r]);
                            var o = i._soundById(n[r]);
                            o && (o._seek = o._start || 0,
                            o._rateSeek = 0,
                            o._paused = !0,
                            o._ended = !0,
                            i._stopFade(n[r]),
                            o._node && (i._webAudio ? o._node.bufferSource && (void 0 === o._node.bufferSource.stop ? o._node.bufferSource.noteOff(0) : o._node.bufferSource.stop(0),
                            i._cleanBuffer(o._node)) : isNaN(o._node.duration) && o._node.duration !== 1 / 0 || (o._node.currentTime = o._start || 0,
                            o._node.pause())),
                            t || i._emit("stop", o._id))
                        }
                    return i
                },
                mute: function(e, t) {
                    var i = this;
                    if ("loaded" !== i._state)
                        i._queue.push({
                            event: "mute",
                            action: function() {
                                i.mute(e, t)
                            }
                        });
                    else {
                        if (void 0 === t) {
                            if ("boolean" != typeof e)
                                return i._muted;
                            i._muted = e
                        }
                        for (var n = i._getSoundIds(t), r = 0; r < n.length; r++) {
                            var o = i._soundById(n[r]);
                            o && (o._muted = e,
                            i._webAudio && o._node ? o._node.gain.setValueAtTime(e ? 0 : o._volume, A.ctx.currentTime) : o._node && (o._node.muted = !!A._muted || e),
                            i._emit("mute", o._id))
                        }
                    }
                    return i
                },
                volume: function() {
                    var e, t, i = this, n = arguments;
                    if (0 === n.length)
                        return i._volume;
                    if (1 === n.length || 2 === n.length && void 0 === n[1] ? 0 <= i._getSoundIds().indexOf(n[0]) ? r = parseInt(n[0], 10) : e = parseFloat(n[0]) : 2 <= n.length && (e = parseFloat(n[0]),
                    r = parseInt(n[1], 10)),
                    !(void 0 !== e && 0 <= e && e <= 1))
                        return (t = r ? i._soundById(r) : i._sounds[0]) ? t._volume : 0;
                    if ("loaded" !== i._state)
                        i._queue.push({
                            event: "volume",
                            action: function() {
                                i.volume.apply(i, n)
                            }
                        });
                    else {
                        void 0 === r && (i._volume = e);
                        for (var r = i._getSoundIds(r), o = 0; o < r.length; o++)
                            (t = i._soundById(r[o])) && (t._volume = e,
                            n[2] || i._stopFade(r[o]),
                            i._webAudio && t._node && !t._muted ? t._node.gain.setValueAtTime(e, A.ctx.currentTime) : t._node && !t._muted && (t._node.volume = e * A.volume()),
                            i._emit("volume", t._id))
                    }
                    return i
                },
                fade: function(i, n, e, r) {
                    var o = this
                      , t = Math.abs(i - n)
                      , a = n < i ? "out" : "in"
                      , s = t / .01
                      , d = 0 < s ? e / s : e;
                    if (d < 4 && (s = Math.ceil(s / (4 / d)),
                    d = 4),
                    "loaded" !== o._state)
                        o._queue.push({
                            event: "fade",
                            action: function() {
                                o.fade(i, n, e, r)
                            }
                        });
                    else {
                        o.volume(i, r);
                        for (var _ = o._getSoundIds(r), u = 0; u < _.length; u++) {
                            var l, c, h, E = o._soundById(_[u]);
                            E && (r || o._stopFade(_[u]),
                            o._webAudio && !E._muted && (c = (l = A.ctx.currentTime) + e / 1e3,
                            E._volume = i,
                            E._node.gain.setValueAtTime(i, l),
                            E._node.gain.linearRampToValueAtTime(n, c)),
                            h = i,
                            E._interval = setInterval(function(e, t) {
                                0 < s && (h += "in" == a ? .01 : -.01),
                                h = Math.max(0, h),
                                h = Math.min(1, h),
                                h = Math.round(100 * h) / 100,
                                o._webAudio ? (void 0 === r && (o._volume = h),
                                t._volume = h) : o.volume(h, e, !0),
                                (n < i && h <= n || i < n && n <= h) && (clearInterval(t._interval),
                                t._interval = null,
                                o.volume(n, e),
                                o._emit("fade", e))
                            }
                            .bind(o, _[u], E), d))
                        }
                    }
                    return o
                },
                _stopFade: function(e) {
                    var t = this._soundById(e);
                    return t && t._interval && (this._webAudio && t._node.gain.cancelScheduledValues(A.ctx.currentTime),
                    clearInterval(t._interval),
                    t._interval = null,
                    this._emit("fade", e)),
                    this
                },
                loop: function() {
                    var e, t, i, n = this, r = arguments;
                    if (0 === r.length)
                        return n._loop;
                    if (1 === r.length) {
                        if ("boolean" != typeof r[0])
                            return !!(i = n._soundById(parseInt(r[0], 10))) && i._loop;
                        n._loop = e = r[0]
                    } else
                        2 === r.length && (e = r[0],
                        t = parseInt(r[1], 10));
                    for (var o = n._getSoundIds(t), a = 0; a < o.length; a++)
                        (i = n._soundById(o[a])) && (i._loop = e,
                        n._webAudio) && i._node && i._node.bufferSource && (i._node.bufferSource.loop = e) && (i._node.bufferSource.loopStart = i._start || 0,
                        i._node.bufferSource.loopEnd = i._stop);
                    return n
                },
                rate: function() {
                    var e, t, i = this, n = arguments;
                    if (0 === n.length ? o = i._sounds[0]._id : 1 === n.length ? 0 <= i._getSoundIds().indexOf(n[0]) ? o = parseInt(n[0], 10) : e = parseFloat(n[0]) : 2 === n.length && (e = parseFloat(n[0]),
                    o = parseInt(n[1], 10)),
                    "number" != typeof e)
                        return ((t = i._soundById(o)) || i)._rate;
                    if ("loaded" !== i._state)
                        i._queue.push({
                            event: "rate",
                            action: function() {
                                i.rate.apply(i, n)
                            }
                        });
                    else {
                        void 0 === o && (i._rate = e);
                        for (var r, o = i._getSoundIds(o), a = 0; a < o.length; a++)
                            (t = i._soundById(o[a])) && (t._rateSeek = i.seek(o[a]),
                            t._playStart = i._webAudio ? A.ctx.currentTime : t._playStart,
                            t._rate = e,
                            i._webAudio && t._node && t._node.bufferSource ? t._node.bufferSource.playbackRate.value = e : t._node && (t._node.playbackRate = e),
                            r = i.seek(o[a]),
                            r = 1e3 * ((i._sprite[t._sprite][0] + i._sprite[t._sprite][1]) / 1e3 - r) / Math.abs(t._rate),
                            !i._endTimers[o[a]] && t._paused || (i._clearTimer(o[a]),
                            i._endTimers[o[a]] = setTimeout(i._ended.bind(i, t), r)),
                            i._emit("rate", t._id))
                    }
                    return i
                },
                seek: function() {
                    var e, t, i = this, n = arguments;
                    if (0 === n.length ? t = i._sounds[0]._id : 1 === n.length ? 0 <= i._getSoundIds().indexOf(n[0]) ? t = parseInt(n[0], 10) : (t = i._sounds[0]._id,
                    e = parseFloat(n[0])) : 2 === n.length && (e = parseFloat(n[0]),
                    t = parseInt(n[1], 10)),
                    void 0 !== t)
                        if ("loaded" !== i._state)
                            i._queue.push({
                                event: "seek",
                                action: function() {
                                    i.seek.apply(i, n)
                                }
                            });
                        else {
                            var r, o = i._soundById(t);
                            if (o) {
                                if (!("number" == typeof e && 0 <= e))
                                    return i._webAudio ? (r = i.playing(t) ? A.ctx.currentTime - o._playStart : 0,
                                    a = o._rateSeek ? o._rateSeek - o._seek : 0,
                                    o._seek + (a + r * Math.abs(o._rate))) : o._node.currentTime;
                                var a = i.playing(t);
                                a && i.pause(t, !0),
                                o._seek = e,
                                o._ended = !1,
                                i._clearTimer(t),
                                a && i.play(t, !0),
                                !i._webAudio && o._node && (o._node.currentTime = e),
                                i._emit("seek", t)
                            }
                        }
                    return i
                },
                playing: function(e) {
                    if ("number" == typeof e)
                        return !!(e = this._soundById(e)) && !e._paused;
                    for (var t = 0; t < this._sounds.length; t++)
                        if (!this._sounds[t]._paused)
                            return !0;
                    return !1
                },
                duration: function(e) {
                    var t = this._duration
                      , e = this._soundById(e);
                    return t = e ? this._sprite[e._sprite][1] / 1e3 : t
                },
                state: function() {
                    return this._state
                },
                unload: function() {
                    for (var e = this, t = e._sounds, i = 0; i < t.length; i++) {
                        t[i]._paused || e.stop(t[i]._id),
                        e._webAudio || (/MSIE |Trident\//.test(A._navigator && A._navigator.userAgent) || (t[i]._node.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"),
                        t[i]._node.removeEventListener("error", t[i]._errorFn, !1),
                        t[i]._node.removeEventListener(A._canPlayEvent, t[i]._loadFn, !1)),
                        delete t[i]._node,
                        e._clearTimer(t[i]._id);
                        var n = A._howls.indexOf(e);
                        0 <= n && A._howls.splice(n, 1)
                    }
                    for (var r = !0, i = 0; i < A._howls.length; i++)
                        if (A._howls[i]._src === e._src) {
                            r = !1;
                            break
                        }
                    return a && r && delete a[e._src],
                    A.noAudio = !1,
                    e._state = "unloaded",
                    e._sounds = [],
                    null
                },
                on: function(e, t, i, n) {
                    e = this["_on" + e];
                    return "function" == typeof t && e.push(n ? {
                        id: i,
                        fn: t,
                        once: n
                    } : {
                        id: i,
                        fn: t
                    }),
                    this
                },
                off: function(e, t, i) {
                    var n = this
                      , r = n["_on" + e]
                      , o = 0;
                    if ("number" == typeof t && (i = t,
                    t = null),
                    t || i)
                        for (o = 0; o < r.length; o++) {
                            var a = i === r[o].id;
                            if (t === r[o].fn && a || !t && a) {
                                r.splice(o, 1);
                                break
                            }
                        }
                    else if (e)
                        n["_on" + e] = [];
                    else
                        for (var s = Object.keys(n), o = 0; o < s.length; o++)
                            0 === s[o].indexOf("_on") && Array.isArray(n[s[o]]) && (n[s[o]] = []);
                    return n
                },
                once: function(e, t, i) {
                    return this.on(e, t, i, 1),
                    this
                },
                _emit: function(e, t, i) {
                    for (var n = this["_on" + e], r = n.length - 1; 0 <= r; r--)
                        n[r].id && n[r].id !== t && "load" !== e || (setTimeout(function(e) {
                            e.call(this, t, i)
                        }
                        .bind(this, n[r].fn), 0),
                        n[r].once && this.off(e, n[r].fn, n[r].id));
                    return this
                },
                _loadQueue: function() {
                    var e, t = this;
                    return 0 < t._queue.length && (e = t._queue[0],
                    t.once(e.event, function() {
                        t._queue.shift(),
                        t._loadQueue()
                    }),
                    e.action()),
                    t
                },
                _ended: function(e) {
                    var t, i = this, n = e._sprite;
                    return i._webAudio || !i._node || i._node.ended ? (n = !(!e._loop && !i._sprite[n][2]),
                    i._emit("end", e._id),
                    !i._webAudio && n && i.stop(e._id, !0).play(e._id),
                    i._webAudio && n && (i._emit("play", e._id),
                    e._seek = e._start || 0,
                    e._rateSeek = 0,
                    e._playStart = A.ctx.currentTime,
                    t = 1e3 * (e._stop - e._start) / Math.abs(e._rate),
                    i._endTimers[e._id] = setTimeout(i._ended.bind(i, e), t)),
                    i._webAudio && !n && (e._paused = !0,
                    e._ended = !0,
                    e._seek = e._start || 0,
                    e._rateSeek = 0,
                    i._clearTimer(e._id),
                    i._cleanBuffer(e._node),
                    A._autoSuspend()),
                    i._webAudio || n || i.stop(e._id)) : setTimeout(i._ended.bind(i, e), 100),
                    i
                },
                _clearTimer: function(e) {
                    return this._endTimers[e] && (clearTimeout(this._endTimers[e]),
                    delete this._endTimers[e]),
                    this
                },
                _soundById: function(e) {
                    for (var t = 0; t < this._sounds.length; t++)
                        if (e === this._sounds[t]._id)
                            return this._sounds[t];
                    return null
                },
                _inactiveSound: function() {
                    var e = this;
                    e._drain();
                    for (var t = 0; t < e._sounds.length; t++)
                        if (e._sounds[t]._ended)
                            return e._sounds[t].reset();
                    return new o(e)
                },
                _drain: function() {
                    var e = this
                      , t = e._pool
                      , i = 0
                      , n = 0;
                    if (!(e._sounds.length < t)) {
                        for (n = 0; n < e._sounds.length; n++)
                            e._sounds[n]._ended && i++;
                        for (n = e._sounds.length - 1; 0 <= n; n--) {
                            if (i <= t)
                                return;
                            e._sounds[n]._ended && (e._webAudio && e._sounds[n]._node && e._sounds[n]._node.disconnect(0),
                            e._sounds.splice(n, 1),
                            i--)
                        }
                    }
                },
                _getSoundIds: function(e) {
                    if (void 0 !== e)
                        return [e];
                    for (var t = [], i = 0; i < this._sounds.length; i++)
                        t.push(this._sounds[i]._id);
                    return t
                },
                _refreshBuffer: function(e) {
                    return e._node.bufferSource = A.ctx.createBufferSource(),
                    e._node.bufferSource.buffer = a[this._src],
                    e._panner ? e._node.bufferSource.connect(e._panner) : e._node.bufferSource.connect(e._node),
                    e._node.bufferSource.loop = e._loop,
                    e._loop && (e._node.bufferSource.loopStart = e._start || 0,
                    e._node.bufferSource.loopEnd = e._stop),
                    e._node.bufferSource.playbackRate.value = e._rate,
                    this
                },
                _cleanBuffer: function(e) {
                    if (this._scratchBuffer) {
                        e.bufferSource.onended = null,
                        e.bufferSource.disconnect(0);
                        try {
                            e.bufferSource.buffer = this._scratchBuffer
                        } catch (e) {}
                    }
                    return e.bufferSource = null,
                    this
                }
            },
            function(e) {
                this._parent = e,
                this.init()
            }
            )
              , a = (o.prototype = {
                init: function() {
                    var e = this
                      , t = e._parent;
                    return e._muted = t._muted,
                    e._loop = t._loop,
                    e._volume = t._volume,
                    e._rate = t._rate,
                    e._seek = 0,
                    e._paused = !0,
                    e._ended = !0,
                    e._sprite = "__default",
                    e._id = ++A._counter,
                    t._sounds.push(e),
                    e.create(),
                    e
                },
                create: function() {
                    var e = this
                      , t = e._parent
                      , i = A._muted || e._muted || e._parent._muted ? 0 : e._volume;
                    return t._webAudio ? (e._node = void 0 === A.ctx.createGain ? A.ctx.createGainNode() : A.ctx.createGain(),
                    e._node.gain.setValueAtTime(i, A.ctx.currentTime),
                    e._node.paused = !0,
                    e._node.connect(A.masterGain)) : (e._node = new Audio,
                    e._errorFn = e._errorListener.bind(e),
                    e._node.addEventListener("error", e._errorFn, !1),
                    e._loadFn = e._loadListener.bind(e),
                    e._node.addEventListener(A._canPlayEvent, e._loadFn, !1),
                    e._node.src = t._src,
                    e._node.preload = "auto",
                    e._node.volume = i * A.volume(),
                    e._node.load()),
                    e
                },
                reset: function() {
                    var e = this
                      , t = e._parent;
                    return e._muted = t._muted,
                    e._loop = t._loop,
                    e._volume = t._volume,
                    e._rate = t._rate,
                    e._seek = 0,
                    e._rateSeek = 0,
                    e._paused = !0,
                    e._ended = !0,
                    e._sprite = "__default",
                    e._id = ++A._counter,
                    e
                },
                _errorListener: function() {
                    var e = this;
                    e._parent._emit("loaderror", e._id, e._node.error ? e._node.error.code : 0),
                    e._node.removeEventListener("error", e._errorFn, !1)
                },
                _loadListener: function() {
                    var e = this._parent;
                    e._duration = Math.ceil(10 * this._node.duration) / 10,
                    0 === Object.keys(e._sprite).length && (e._sprite = {
                        __default: [0, 1e3 * e._duration]
                    }),
                    "loaded" !== e._state && (e._state = "loaded",
                    e._emit("load"),
                    e._loadQueue()),
                    this._node.removeEventListener(A._canPlayEvent, this._loadFn, !1)
                }
            },
            {})
              , s = function(t) {
                var e = t._src;
                if (a[e])
                    t._duration = a[e].duration,
                    u(t);
                else if (/^data:[^;]+;base64,/.test(e)) {
                    for (var i = atob(e.split(",")[1]), n = new Uint8Array(i.length), r = 0; r < i.length; ++r)
                        n[r] = i.charCodeAt(r);
                    _(n.buffer, t)
                } else {
                    var o = new XMLHttpRequest;
                    o.open("GET", e, !0),
                    o.responseType = "arraybuffer",
                    o.onload = function() {
                        var e = (o.status + "")[0];
                        "0" !== e && "2" !== e && "3" !== e ? t._emit("loaderror", null, "Failed loading audio file with status: " + o.status + ".") : _(o.response, t)
                    }
                    ,
                    o.onerror = function() {
                        t._webAudio && (t._html5 = !0,
                        t._webAudio = !1,
                        t._sounds = [],
                        delete a[e],
                        t.load())
                    }
                    ,
                    d(o)
                }
            }
              , d = function(t) {
                try {
                    t.send()
                } catch (e) {
                    t.onerror()
                }
            }
              , _ = function(e, t) {
                A.ctx.decodeAudioData(e, function(e) {
                    e && 0 < t._sounds.length && (a[t._src] = e,
                    u(t, e))
                }, function() {
                    t._emit("loaderror", null, "Decoding audio data failed.")
                })
            }
              , u = function(e, t) {
                t && !e._duration && (e._duration = t.duration),
                0 === Object.keys(e._sprite).length && (e._sprite = {
                    __default: [0, 1e3 * e._duration]
                }),
                "loaded" !== e._state && (e._state = "loaded",
                e._emit("load"),
                e._loadQueue())
            }
              , l = function() {
                try {
                    "undefined" != typeof AudioContext ? A.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? A.ctx = new webkitAudioContext : A.usingWebAudio = !1
                } catch (e) {
                    A.usingWebAudio = !1
                }
                var e = /iP(hone|od|ad)/.test(A._navigator && A._navigator.platform)
                  , t = A._navigator && A._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/)
                  , t = t ? parseInt(t[1], 10) : null;
                e && t && t < 9 && (t = /safari/.test(A._navigator && A._navigator.userAgent.toLowerCase()),
                A._navigator && A._navigator.standalone && !t || A._navigator && !A._navigator.standalone && !t) && (A.usingWebAudio = !1),
                A.usingWebAudio && (A.masterGain = void 0 === A.ctx.createGain ? A.ctx.createGainNode() : A.ctx.createGain(),
                A.masterGain.gain.value = A._muted ? 0 : 1,
                A.masterGain.connect(A.ctx.destination)),
                A._setup()
            };
            "function" == typeof define && define.amd && define([], function() {
                return {
                    Howler: A,
                    Howl: t
                }
            }),
            "undefined" != typeof exports && (exports.Howler = A,
            exports.Howl = t),
            "undefined" != typeof window ? (window.HowlerGlobal = e,
            window.Howler = A,
            window.Howl = t,
            window.Sound = o) : "undefined" != typeof global && (global.HowlerGlobal = e,
            global.Howler = A,
            global.Howl = t,
            global.Sound = o)
        }(),
        function() {
            "use strict";
            HowlerGlobal.prototype._pos = [0, 0, 0],
            HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0],
            HowlerGlobal.prototype.stereo = function(e) {
                var t = this;
                if (t.ctx && t.ctx.listener)
                    for (var i = t._howls.length - 1; 0 <= i; i--)
                        t._howls[i].stereo(e);
                return t
            }
            ,
            HowlerGlobal.prototype.pos = function(e, t, i) {
                var n = this;
                return n.ctx && n.ctx.listener ? (t = "number" != typeof t ? n._pos[1] : t,
                i = "number" != typeof i ? n._pos[2] : i,
                "number" != typeof e ? n._pos : (n._pos = [e, t, i],
                n.ctx.listener.setPosition(n._pos[0], n._pos[1], n._pos[2]),
                n)) : n
            }
            ,
            HowlerGlobal.prototype.orientation = function(e, t, i, n, r, o) {
                var a, s = this;
                return s.ctx && s.ctx.listener ? (a = s._orientation,
                t = "number" != typeof t ? a[1] : t,
                i = "number" != typeof i ? a[2] : i,
                n = "number" != typeof n ? a[3] : n,
                r = "number" != typeof r ? a[4] : r,
                o = "number" != typeof o ? a[5] : o,
                "number" != typeof e ? a : (s._orientation = [e, t, i, n, r, o],
                s.ctx.listener.setOrientation(e, t, i, n, r, o),
                s)) : s
            }
            ,
            Howl.prototype.init = (n = Howl.prototype.init,
            function(e) {
                var t = this;
                return t._orientation = e.orientation || [1, 0, 0],
                t._stereo = e.stereo || null,
                t._pos = e.pos || null,
                t._pannerAttr = {
                    coneInnerAngle: void 0 !== e.coneInnerAngle ? e.coneInnerAngle : 360,
                    coneOuterAngle: void 0 !== e.coneOuterAngle ? e.coneOuterAngle : 360,
                    coneOuterGain: void 0 !== e.coneOuterGain ? e.coneOuterGain : 0,
                    distanceModel: void 0 !== e.distanceModel ? e.distanceModel : "inverse",
                    maxDistance: void 0 !== e.maxDistance ? e.maxDistance : 1e4,
                    panningModel: void 0 !== e.panningModel ? e.panningModel : "HRTF",
                    refDistance: void 0 !== e.refDistance ? e.refDistance : 1,
                    rolloffFactor: void 0 !== e.rolloffFactor ? e.rolloffFactor : 1
                },
                t._onstereo = e.onstereo ? [{
                    fn: e.onstereo
                }] : [],
                t._onpos = e.onpos ? [{
                    fn: e.onpos
                }] : [],
                t._onorientation = e.onorientation ? [{
                    fn: e.onorientation
                }] : [],
                n.call(this, e)
            }
            ),
            Howl.prototype.stereo = function(e, t) {
                var i = this;
                if (i._webAudio)
                    if ("loaded" !== i._state)
                        i._queue.push({
                            event: "stereo",
                            action: function() {
                                i.stereo(e, t)
                            }
                        });
                    else {
                        var n = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
                        if (void 0 === t) {
                            if ("number" != typeof e)
                                return i._stereo;
                            i._stereo = e,
                            i._pos = [e, 0, 0]
                        }
                        for (var r = i._getSoundIds(t), o = 0; o < r.length; o++) {
                            var a = i._soundById(r[o]);
                            if (a) {
                                if ("number" != typeof e)
                                    return a._stereo;
                                a._stereo = e,
                                a._pos = [e, 0, 0],
                                a._node && (a._pannerAttr.panningModel = "equalpower",
                                a._panner && a._panner.pan || _(a, n),
                                "spatial" == n ? a._panner.setPosition(e, 0, 0) : a._panner.pan.value = e),
                                i._emit("stereo", a._id)
                            }
                        }
                    }
                return i
            }
            ,
            Howl.prototype.pos = function(e, t, i, n) {
                var r = this;
                if (r._webAudio)
                    if ("loaded" !== r._state)
                        r._queue.push({
                            event: "pos",
                            action: function() {
                                r.pos(e, t, i, n)
                            }
                        });
                    else {
                        if (t = "number" != typeof t ? 0 : t,
                        i = "number" != typeof i ? -.5 : i,
                        void 0 === n) {
                            if ("number" != typeof e)
                                return r._pos;
                            r._pos = [e, t, i]
                        }
                        for (var o = r._getSoundIds(n), a = 0; a < o.length; a++) {
                            var s = r._soundById(o[a]);
                            if (s) {
                                if ("number" != typeof e)
                                    return s._pos;
                                s._pos = [e, t, i],
                                s._node && (s._panner && !s._panner.pan || _(s, "spatial"),
                                s._panner.setPosition(e, t, i)),
                                r._emit("pos", s._id)
                            }
                        }
                    }
                return r
            }
            ,
            Howl.prototype.orientation = function(e, t, i, n) {
                var r = this;
                if (r._webAudio)
                    if ("loaded" !== r._state)
                        r._queue.push({
                            event: "orientation",
                            action: function() {
                                r.orientation(e, t, i, n)
                            }
                        });
                    else {
                        if (t = "number" != typeof t ? r._orientation[1] : t,
                        i = "number" != typeof i ? r._orientation[2] : i,
                        void 0 === n) {
                            if ("number" != typeof e)
                                return r._orientation;
                            r._orientation = [e, t, i]
                        }
                        for (var o = r._getSoundIds(n), a = 0; a < o.length; a++) {
                            var s = r._soundById(o[a]);
                            if (s) {
                                if ("number" != typeof e)
                                    return s._orientation;
                                s._orientation = [e, t, i],
                                s._node && (s._panner || (s._pos || (s._pos = r._pos || [0, 0, -.5]),
                                _(s, "spatial")),
                                s._panner.setOrientation(e, t, i)),
                                r._emit("orientation", s._id)
                            }
                        }
                    }
                return r
            }
            ,
            Howl.prototype.pannerAttr = function() {
                var e, t, i, n = this, r = arguments;
                if (n._webAudio) {
                    if (0 === r.length)
                        return n._pannerAttr;
                    if (1 === r.length) {
                        if ("object" != typeof r[0])
                            return ((i = n._soundById(parseInt(r[0], 10))) || n)._pannerAttr;
                        e = r[0],
                        void 0 === t && (n._pannerAttr = {
                            coneInnerAngle: void 0 !== e.coneInnerAngle ? e.coneInnerAngle : n._coneInnerAngle,
                            coneOuterAngle: void 0 !== e.coneOuterAngle ? e.coneOuterAngle : n._coneOuterAngle,
                            coneOuterGain: void 0 !== e.coneOuterGain ? e.coneOuterGain : n._coneOuterGain,
                            distanceModel: void 0 !== e.distanceModel ? e.distanceModel : n._distanceModel,
                            maxDistance: void 0 !== e.maxDistance ? e.maxDistance : n._maxDistance,
                            panningModel: void 0 !== e.panningModel ? e.panningModel : n._panningModel,
                            refDistance: void 0 !== e.refDistance ? e.refDistance : n._refDistance,
                            rolloffFactor: void 0 !== e.rolloffFactor ? e.rolloffFactor : n._rolloffFactor
                        })
                    } else
                        2 === r.length && (e = r[0],
                        t = parseInt(r[1], 10));
                    for (var o, a, s = n._getSoundIds(t), d = 0; d < s.length; d++)
                        (i = n._soundById(s[d])) && (o = i._pannerAttr,
                        o = {
                            coneInnerAngle: (void 0 !== e.coneInnerAngle ? e : o).coneInnerAngle,
                            coneOuterAngle: (void 0 !== e.coneOuterAngle ? e : o).coneOuterAngle,
                            coneOuterGain: (void 0 !== e.coneOuterGain ? e : o).coneOuterGain,
                            distanceModel: (void 0 !== e.distanceModel ? e : o).distanceModel,
                            maxDistance: (void 0 !== e.maxDistance ? e : o).maxDistance,
                            panningModel: (void 0 !== e.panningModel ? e : o).panningModel,
                            refDistance: (void 0 !== e.refDistance ? e : o).refDistance,
                            rolloffFactor: (void 0 !== e.rolloffFactor ? e : o).rolloffFactor
                        },
                        (a = i._panner) ? (a.coneInnerAngle = o.coneInnerAngle,
                        a.coneOuterAngle = o.coneOuterAngle,
                        a.coneOuterGain = o.coneOuterGain,
                        a.distanceModel = o.distanceModel,
                        a.maxDistance = o.maxDistance,
                        a.panningModel = o.panningModel,
                        a.refDistance = o.refDistance,
                        a.rolloffFactor = o.rolloffFactor) : (i._pos || (i._pos = n._pos || [0, 0, -.5]),
                        _(i, "spatial")))
                }
                return n
            }
            ,
            Sound.prototype.init = (i = Sound.prototype.init,
            function() {
                var e = this
                  , t = e._parent;
                e._orientation = t._orientation,
                e._stereo = t._stereo,
                e._pos = t._pos,
                e._pannerAttr = t._pannerAttr,
                i.call(this),
                e._stereo ? t.stereo(e._stereo) : e._pos && t.pos(e._pos[0], e._pos[1], e._pos[2], e._id)
            }
            ),
            Sound.prototype.reset = (t = Sound.prototype.reset,
            function() {
                var e = this._parent;
                return this._orientation = e._orientation,
                this._pos = e._pos,
                this._pannerAttr = e._pannerAttr,
                t.call(this)
            }
            );
            var t, i, n, _ = function(e, t) {
                "spatial" === (t = t || "spatial") ? (e._panner = Howler.ctx.createPanner(),
                e._panner.coneInnerAngle = e._pannerAttr.coneInnerAngle,
                e._panner.coneOuterAngle = e._pannerAttr.coneOuterAngle,
                e._panner.coneOuterGain = e._pannerAttr.coneOuterGain,
                e._panner.distanceModel = e._pannerAttr.distanceModel,
                e._panner.maxDistance = e._pannerAttr.maxDistance,
                e._panner.panningModel = e._pannerAttr.panningModel,
                e._panner.refDistance = e._pannerAttr.refDistance,
                e._panner.rolloffFactor = e._pannerAttr.rolloffFactor,
                e._panner.setPosition(e._pos[0], e._pos[1], e._pos[2]),
                e._panner.setOrientation(e._orientation[0], e._orientation[1], e._orientation[2])) : (e._panner = Howler.ctx.createStereoPanner(),
                e._panner.pan.value = e._stereo),
                e._panner.connect(e._node),
                e._paused || e._parent.pause(e._id, !0).play(e._id)
            }
        }(),
        e = this,
        c = function(e) {
            "use strict";
            function t(e) {
                var t = a.get(e)
                  , i = void 0 === t ? e.size : t < 1073741824 ? t + 1 : 0;
                if (e.has(i))
                    if (e.size < 536870912)
                        for (; e.has(i); )
                            i = Math.floor(1073741824 * Math.random());
                    else {
                        if (e.size > s)
                            throw new Error("Congratulations, you created a collection of unique numbers which uses all available integers!");
                        for (; e.has(i); )
                            i = Math.floor(Math.random() * s)
                    }
                return o(e, i)
            }
            function i(e) {
                var t = r(e);
                return e.add(t),
                t
            }
            var n, r, o, a, s = void 0 === Number.MAX_SAFE_INTEGER ? 9007199254740991 : Number.MAX_SAFE_INTEGER, d = new WeakMap;
            o = function(e, t) {
                return n.set(e, t),
                t
            }
            ,
            a = n = d,
            r = t;
            e.addUniqueNumber = i,
            e.generateUniqueNumber = t,
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }
        ,
        "object" == typeof exports && "undefined" != typeof module ? c(exports) : "function" == typeof define && define.amd ? define(["exports"], c) : c((e = "undefined" != typeof globalThis ? globalThis : e || self).fastUniqueNumbers = {}),
        c = this,
        e = function(e, r) {
            "use strict";
            e.load = function(e) {
                var o = new Map([[0, function() {}
                ]])
                  , a = new Map([[0, function() {}
                ]])
                  , s = new Map
                  , n = new Worker(e);
                return n.addEventListener("message", function(e) {
                    e = e.data;
                    if (void 0 !== e.method && "call" === e.method) {
                        var t = e.params
                          , i = t.timerId
                          , t = t.timerType;
                        if ("interval" === t) {
                            var n = o.get(i);
                            if ("number" == typeof n) {
                                var r = s.get(n);
                                if (void 0 === r || r.timerId !== i || r.timerType !== t)
                                    throw new Error("The timer is in an undefined state.")
                            } else {
                                if (void 0 === n)
                                    throw new Error("The timer is in an undefined state.");
                                n()
                            }
                        } else if ("timeout" === t) {
                            r = a.get(i);
                            if ("number" == typeof r) {
                                var n = s.get(r);
                                if (void 0 === n || n.timerId !== i || n.timerType !== t)
                                    throw new Error("The timer is in an undefined state.")
                            } else {
                                if (void 0 === r)
                                    throw new Error("The timer is in an undefined state.");
                                r(),
                                a.delete(i)
                            }
                        }
                    } else {
                        if (null !== e.error || "number" != typeof e.id)
                            throw n = e.error.message,
                            new Error(n);
                        t = e.id,
                        r = s.get(t);
                        if (void 0 === r)
                            throw new Error("The timer is in an undefined state.");
                        i = r.timerId,
                        n = r.timerType;
                        s.delete(t),
                        ("interval" === n ? o : a).delete(i)
                    }
                }),
                {
                    clearInterval: function(e) {
                        var t = r.generateUniqueNumber(s);
                        s.set(t, {
                            timerId: e,
                            timerType: "interval"
                        }),
                        o.set(e, t),
                        n.postMessage({
                            id: t,
                            method: "clear",
                            params: {
                                timerId: e,
                                timerType: "interval"
                            }
                        })
                    },
                    clearTimeout: function(e) {
                        var t = r.generateUniqueNumber(s);
                        s.set(t, {
                            timerId: e,
                            timerType: "timeout"
                        }),
                        a.set(e, t),
                        n.postMessage({
                            id: t,
                            method: "clear",
                            params: {
                                timerId: e,
                                timerType: "timeout"
                            }
                        })
                    },
                    setInterval: function(e, t) {
                        var i = r.generateUniqueNumber(o);
                        return o.set(i, function() {
                            e(),
                            "function" == typeof o.get(i) && n.postMessage({
                                id: null,
                                method: "set",
                                params: {
                                    delay: t,
                                    now: performance.now(),
                                    timerId: i,
                                    timerType: "interval"
                                }
                            })
                        }),
                        n.postMessage({
                            id: null,
                            method: "set",
                            params: {
                                delay: t,
                                now: performance.now(),
                                timerId: i,
                                timerType: "interval"
                            }
                        }),
                        i
                    },
                    setTimeout: function(e, t) {
                        var i = r.generateUniqueNumber(a);
                        return a.set(i, e),
                        n.postMessage({
                            id: null,
                            method: "set",
                            params: {
                                delay: t,
                                now: performance.now(),
                                timerId: i,
                                timerType: "timeout"
                            }
                        }),
                        i
                    }
                }
            }
            ,
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }
        ,
        "object" == typeof exports && "undefined" != typeof module ? e(exports, require("fast-unique-numbers")) : "function" == typeof define && define.amd ? define(["exports", "fast-unique-numbers"], e) : e((c = "undefined" != typeof globalThis ? globalThis : c || self).workerTimersBroker = {}, c.fastUniqueNumbers),
        e = this,
        c = function(e, t) {
            "use strict";
            var i, n = null, r = (i = t.load,
            function() {
                var e, t;
                return null === n && (e = new Blob(['(()=>{var e={67:(e,t,r)=>{var o,i;void 0===(i="function"==typeof(o=function(){"use strict";var e=new Map,t=new Map,r=function(t){var r=e.get(t);if(void 0===r)throw new Error(\'There is no interval scheduled with the given id "\'.concat(t,\'".\'));clearTimeout(r),e.delete(t)},o=function(e){var r=t.get(e);if(void 0===r)throw new Error(\'There is no timeout scheduled with the given id "\'.concat(e,\'".\'));clearTimeout(r),t.delete(e)},i=function(e,t){var r,o=performance.now();return{expected:o+(r=e-Math.max(0,o-t)),remainingDelay:r}},n=function e(t,r,o,i){var n=performance.now();n>o?postMessage({id:null,method:"call",params:{timerId:r,timerType:i}}):t.set(r,setTimeout(e,o-n,t,r,o,i))},a=function(t,r,o){var a=i(t,o),s=a.expected,d=a.remainingDelay;e.set(r,setTimeout(n,d,e,r,s,"interval"))},s=function(e,r,o){var a=i(e,o),s=a.expected,d=a.remainingDelay;t.set(r,setTimeout(n,d,t,r,s,"timeout"))};addEventListener("message",(function(e){var t=e.data;try{if("clear"===t.method){var i=t.id,n=t.params,d=n.timerId,c=n.timerType;if("interval"===c)r(d),postMessage({error:null,id:i});else{if("timeout"!==c)throw new Error(\'The given type "\'.concat(c,\'" is not supported\'));o(d),postMessage({error:null,id:i})}}else{if("set"!==t.method)throw new Error(\'The given method "\'.concat(t.method,\'" is not supported\'));var u=t.params,l=u.delay,p=u.now,m=u.timerId,v=u.timerType;if("interval"===v)a(l,m,p);else{if("timeout"!==v)throw new Error(\'The given type "\'.concat(v,\'" is not supported\'));s(l,m,p)}}}catch(e){postMessage({error:{message:e.message},id:t.id,result:null})}}))})?o.call(t,r,t,e):o)||(e.exports=i)}},t={};function r(o){var i=t[o];if(void 0!==i)return i.exports;var n=t[o]={exports:{}};return e[o](n,n.exports,r),n.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";r(67)})()})();'],{
                    type: "application/javascript; charset=utf-8"
                }),
                t = URL.createObjectURL(e),
                (n = i(t)).setTimeout(function() {
                    return URL.revokeObjectURL(t)
                }, 0)),
                n
            }
            );
            e.clearInterval = function(e) {
                return r().clearInterval(e)
            }
            ,
            e.clearTimeout = function(e) {
                return r().clearTimeout(e)
            }
            ,
            e.setInterval = function(e, t) {
                return r().setInterval(e, t)
            }
            ,
            e.setTimeout = function(e, t) {
                return r().setTimeout(e, t)
            }
            ,
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }
        ,
        "object" == typeof exports && "undefined" != typeof module ? c(exports, require("worker-timers-broker")) : "function" == typeof define && define.amd ? define(["exports", "worker-timers-broker"], c) : c((e = "undefined" != typeof globalThis ? globalThis : e || self).workerTimers = {}, e.workerTimersBroker),
        c = this,
        e = function() {
            return i = [function(e, t, i) {
                function n(e, t, i) {
                    var n, r, o = d[t];
                    if (void 0 === o && (n = s(t = t),
                    r = a(n),
                    o = d[n] = d[t] = d[r] = r),
                    o) {
                        if (void 0 === i)
                            return e.style[o];
                        e.style[o] = _(o, i)
                    }
                }
                function r() {
                    if (2 === arguments.length)
                        if ("string" == typeof arguments[1])
                            arguments[0].style.cssText = arguments[1];
                        else {
                            var e, t = arguments[0], i = arguments[1];
                            for (e in i)
                                i.hasOwnProperty(e) && n(t, e, i[e])
                        }
                    else
                        n(arguments[0], arguments[1], arguments[2])
                }
                var a = i(18)
                  , s = i(19)
                  , d = {
                    float: "cssFloat"
                }
                  , _ = i(22);
                e.exports = r,
                e.exports.set = r,
                e.exports.get = function(i, e) {
                    return Array.isArray(e) ? e.reduce(function(e, t) {
                        return e[t] = n(i, t || ""),
                        e
                    }, {}) : n(i, e || "")
                }
            }
            , function(e, t, i) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                t.theme = void 0;
                var n = function(e, t, i) {
                    return t && a(e.prototype, t),
                    i && a(e, i),
                    e
                }
                  , i = i(9)
                  , i = (i && i.__esModule,
                n(o, [{
                    key: "Set",
                    value: function(e) {
                        Object.assign(this, r, e)
                    }
                }]),
                o)
                  , r = {
                    name: "BaseTheme",
                    colors: {
                        menuBarBackground: "black",
                        menuBarText: "black",
                        panelBackground: "black",
                        componentBackground: "black",
                        componentBackgroundHover: "black",
                        componentForeground: "black",
                        componentActive: "black",
                        textPrimary: "black",
                        textSecondary: "black",
                        textHover: "black",
                        textActive: "black"
                    },
                    sizing: {
                        menuBarHeight: "25px",
                        componentHeight: "20px",
                        componentSpacing: "5px",
                        labelWidth: "42%"
                    }
                };
                function o() {
                    if (!(this instanceof o))
                        throw new TypeError("Cannot call a class as a function")
                }
                function a(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.theme = new i
            }
            , function(e, t, i) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var i = i(0)
                  , n = i && i.__esModule ? i : {
                    default: i
                };
                t.default = function(e, t, i) {
                    e = e.appendChild(document.createElement("div"));
                    return e.classList.add("OtterGui-component-container"),
                    (0,
                    n.default)(e, {
                        position: "relative",
                        "min-height": i.sizing.componentHeight,
                        "margin-bottom": i.sizing.componentSpacing
                    }),
                    e
                }
                ,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                var n = i(31);
                e.exports = n,
                e.exports.csjs = n,
                e.exports.getCss = i(45)
            }
            , function(a, e, s) {
                var d;
                !function(e) {
                    "use strict";
                    function t() {}
                    function o(e, t) {
                        for (var i = e.length; i--; )
                            if (e[i].listener === t)
                                return i;
                        return -1
                    }
                    function i(e) {
                        return function() {
                            return this[e].apply(this, arguments)
                        }
                    }
                    var n = t.prototype
                      , r = e.EventEmitter;
                    n.getListeners = function(e) {
                        var t, i, n = this._getEvents();
                        if (e instanceof RegExp)
                            for (i in t = {},
                            n)
                                n.hasOwnProperty(i) && e.test(i) && (t[i] = n[i]);
                        else
                            t = n[e] || (n[e] = []);
                        return t
                    }
                    ,
                    n.flattenListeners = function(e) {
                        for (var t = [], i = 0; i < e.length; i += 1)
                            t.push(e[i].listener);
                        return t
                    }
                    ,
                    n.getListenersAsObject = function(e) {
                        var t, i = this.getListeners(e);
                        return i instanceof Array && ((t = {})[e] = i),
                        t || i
                    }
                    ,
                    n.addListener = function(e, t) {
                        if (!function e(t) {
                            return "function" == typeof t || t instanceof RegExp || !(!t || "object" != typeof t) && e(t.listener)
                        }(t))
                            throw new TypeError("listener must be a function");
                        var i, n = this.getListenersAsObject(e), r = "object" == typeof t;
                        for (i in n)
                            n.hasOwnProperty(i) && -1 === o(n[i], t) && n[i].push(r ? t : {
                                listener: t,
                                once: !1
                            });
                        return this
                    }
                    ,
                    n.on = i("addListener"),
                    n.addOnceListener = function(e, t) {
                        return this.addListener(e, {
                            listener: t,
                            once: !0
                        })
                    }
                    ,
                    n.once = i("addOnceListener"),
                    n.defineEvent = function(e) {
                        return this.getListeners(e),
                        this
                    }
                    ,
                    n.defineEvents = function(e) {
                        for (var t = 0; t < e.length; t += 1)
                            this.defineEvent(e[t]);
                        return this
                    }
                    ,
                    n.removeListener = function(e, t) {
                        var i, n, r = this.getListenersAsObject(e);
                        for (n in r)
                            r.hasOwnProperty(n) && -1 !== (i = o(r[n], t)) && r[n].splice(i, 1);
                        return this
                    }
                    ,
                    n.off = i("removeListener"),
                    n.addListeners = function(e, t) {
                        return this.manipulateListeners(!1, e, t)
                    }
                    ,
                    n.removeListeners = function(e, t) {
                        return this.manipulateListeners(!0, e, t)
                    }
                    ,
                    n.manipulateListeners = function(e, t, i) {
                        var n, r, o = e ? this.removeListener : this.addListener, a = e ? this.removeListeners : this.addListeners;
                        if ("object" != typeof t || t instanceof RegExp)
                            for (n = i.length; n--; )
                                o.call(this, t, i[n]);
                        else
                            for (n in t)
                                t.hasOwnProperty(n) && (r = t[n]) && ("function" == typeof r ? o : a).call(this, n, r);
                        return this
                    }
                    ,
                    n.removeEvent = function(e) {
                        var t, i = typeof e, n = this._getEvents();
                        if ("string" == i)
                            delete n[e];
                        else if (e instanceof RegExp)
                            for (t in n)
                                n.hasOwnProperty(t) && e.test(t) && delete n[t];
                        else
                            delete this._events;
                        return this
                    }
                    ,
                    n.removeAllListeners = i("removeEvent"),
                    n.emitEvent = function(e, t) {
                        var i, n, r, o, a = this.getListenersAsObject(e);
                        for (o in a)
                            if (a.hasOwnProperty(o))
                                for (i = a[o].slice(0),
                                r = 0; r < i.length; r++)
                                    n = i[r],
                                    !0 === n.once && this.removeListener(e, n.listener),
                                    n.listener.apply(this, t || []) === this._getOnceReturnValue() && this.removeListener(e, n.listener);
                        return this
                    }
                    ,
                    n.trigger = i("emitEvent"),
                    n.emit = function(e) {
                        var t = Array.prototype.slice.call(arguments, 1);
                        return this.emitEvent(e, t)
                    }
                    ,
                    n.setOnceReturnValue = function(e) {
                        return this._onceReturnValue = e,
                        this
                    }
                    ,
                    n._getOnceReturnValue = function() {
                        return !this.hasOwnProperty("_onceReturnValue") || this._onceReturnValue
                    }
                    ,
                    n._getEvents = function() {
                        return this._events || (this._events = {})
                    }
                    ,
                    t.noConflict = function() {
                        return e.EventEmitter = r,
                        t
                    }
                    ,
                    void 0 !== (d = function() {
                        return t
                    }
                    .call(e, s, e, a)) && (a.exports = d)
                }("undefined" != typeof window ? window : this || {})
            }
            , function(e, t, i) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var i = i(0)
                  , n = i && i.__esModule ? i : {
                    default: i
                };
                t.default = function(e, t, i) {
                    e = e.appendChild(document.createElement("div")),
                    (0,
                    n.default)(e, {
                        left: 0,
                        width: "calc(" + i.sizing.labelWidth + " - 2%)",
                        display: "inline-block",
                        "margin-right": "2%",
                        verticalAlign: "top"
                    }),
                    e = e.appendChild(document.createElement("div"));
                    return e.innerHTML = t,
                    (0,
                    n.default)(e, {
                        color: i.colors.textPrimary,
                        display: "inline-block",
                        verticalAlign: "sub",
                        "min-height": i.sizing.componentHeight,
                        "line-height": i.sizing.componentHeight
                    }),
                    e
                }
                ,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var i = i(0)
                  , o = i && i.__esModule ? i : {
                    default: i
                };
                t.default = function(e, t, i, n, r) {
                    e = e.appendChild(document.createElement("input")),
                    e.type = "text",
                    e.value = t,
                    t = {
                        position: "absolute",
                        backgroundColor: i.colors.componentBackground,
                        paddingLeft: "1%",
                        height: i.sizing.componentHeight,
                        width: n,
                        display: "inline-block",
                        overflow: "hidden",
                        border: "none",
                        "font-family": "'Hack', monospace",
                        "font-size": "11px",
                        color: i.colors.textSecondary,
                        userSelect: "text",
                        cursor: "text",
                        lineHeight: i.sizing.componentHeight,
                        wordBreak: "break-all",
                        "box-sizing": "border-box",
                        "-moz-box-sizing": "border-box",
                        "-webkit-box-sizing": "border-box"
                    };
                    return r || (t.right = 0),
                    (0,
                    o.default)(e, t),
                    e
                }
                ,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                function r(e) {
                    return e instanceof o
                }
                function o() {}
                e.exports = {
                    makeComposition: function(e, t, i) {
                        var n = e.join(" ");
                        return Object.create(o.prototype, {
                            classNames: {
                                value: Object.freeze(e),
                                configurable: !1,
                                writable: !1,
                                enumerable: !0
                            },
                            unscoped: {
                                value: Object.freeze(t),
                                configurable: !1,
                                writable: !1,
                                enumerable: !0
                            },
                            className: {
                                value: n,
                                configurable: !1,
                                writable: !1,
                                enumerable: !0
                            },
                            selector: {
                                value: e.map(function(e) {
                                    return i ? e : "." + e
                                }).join(", "),
                                configurable: !1,
                                writable: !1,
                                enumerable: !0
                            },
                            toString: {
                                value: function() {
                                    return n
                                },
                                configurable: !1,
                                writeable: !1,
                                enumerable: !1
                            }
                        })
                    },
                    isComposition: r,
                    ignoreComposition: function(e) {
                        return e.reduce(function(i, n) {
                            return r(n) && n.classNames.forEach(function(e, t) {
                                i[e] = n.unscoped[t]
                            }),
                            i
                        }, {})
                    }
                }
            }
            , function(e, t, i) {
                "use strict";
                var n = /(@\S*keyframes\s*)([^{\s]*)/.source
                  , r = /(?!(?:[^*\/]|\*[^\/]|\/[^*])*\*+\/)/.source
                  , o = new RegExp(/(\.)(?!\d)([^\s\.,{\[>+~#:)]*)(?![^{]*})/.source + r,"g")
                  , n = new RegExp(n + r,"g");
                e.exports = {
                    classRegex: o,
                    keyframesRegex: n,
                    ignoreComments: r
                }
            }
            , function(e, t, i) {
                "use strict";
                e.exports = {
                    light: {
                        name: "Light",
                        colors: {
                            menuBarBackground: "rgb(227, 227, 227)",
                            menuBarText: "rgb(36, 36, 36)",
                            panelBackground: "rgb(227, 227, 227)",
                            componentBackground: "rgb(204, 204, 204)",
                            componentBackgroundHover: "rgb(190, 190, 190)",
                            componentForeground: "rgb(105, 105, 105)",
                            componentActive: "rgb(36, 36, 36)",
                            textPrimary: "rgb(36, 36, 36)",
                            textSecondary: "rgb(87, 87, 87)",
                            textHover: "rgb(204, 204, 204)",
                            textActive: "rgb(204, 204, 204)"
                        }
                    },
                    dark: {
                        name: "Dark",
                        colors: {
                            menuBarBackground: "rgb(35, 35, 35)",
                            menuBarText: "rgb(235, 235, 235)",
                            panelBackground: "rgb(35, 35, 35)",
                            componentBackground: "rgb(54, 54, 54)",
                            componentBackgroundHover: "rgb(76, 76, 76)",
                            componentForeground: "rgb(112, 112, 112)",
                            componentActive: "rgb(202, 202, 202)",
                            textPrimary: "rgb(235, 235, 235)",
                            textSecondary: "rgb(181, 181, 181)",
                            textHover: "rgb(235, 235, 235)",
                            textActive: "rgb(54, 54, 54)"
                        }
                    },
                    yorha: {
                        name: "YoRHa",
                        colors: {
                            menuBarBackground: "#CCC8B1",
                            menuBarText: "#454138",
                            panelBackground: "#CCC8B1",
                            componentBackground: "#BAB5A1",
                            componentBackgroundHover: "#877F6E",
                            componentForeground: "#454138",
                            componentActive: "#978F7E",
                            textPrimary: "#454138",
                            textSecondary: "#454138",
                            textHover: "#CCC8B1",
                            textActive: "#CCC8B1"
                        },
                        font: {
                            fontFamily: "helvetica, sans-serif",
                            fontSize: "14px",
                            fontWeight: "100"
                        }
                    }
                }
            }
            , function(t, i, e) {
                !function() {
                    "use strict";
                    function e(e) {
                        return "number" == typeof e && !isNaN(e) || !!(e = (e || "").toString().trim()) && !isNaN(e)
                    }
                    (i = void 0 !== t && t.exports ? t.exports = e : i).isNumeric = e
                }()
            }
            , function(e, t, i) {
                "use strict";
                e.exports = " css "
            }
            , function(e, t, i) {
                "use strict";
                e.exports = i(44)
            }
            , function(e, t) {
                function i(e, t) {
                    if (t = t || {},
                    void 0 === e)
                        throw new Error(s);
                    var i, n = !0 === t.prepend ? "prepend" : "append", t = void 0 !== t.container ? t.container : document.querySelector("head"), r = o.indexOf(t);
                    return -1 === r && (r = o.push(t) - 1,
                    a[r] = {}),
                    void 0 !== a[r] && void 0 !== a[r][n] ? i = a[r][n] : (i = a[r][n] = ((r = document.createElement("style")).setAttribute("type", "text/css"),
                    r),
                    "prepend" == n ? t.insertBefore(i, t.childNodes[0]) : t.appendChild(i)),
                    65279 === e.charCodeAt(0) && (e = e.substr(1, e.length)),
                    i.styleSheet ? i.styleSheet.cssText += e : i.textContent += e,
                    i
                }
                var o = []
                  , a = []
                  , s = "insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).";
                e.exports = i,
                e.exports.insertCss = i
            }
            , function(e, t, i) {
                var u, n, r, o, l, c, h, E, T, A, a, I, s, p;
                function g(e, t) {
                    var i, n, r, o, a, s, d, _;
                    return t = t || {},
                    (e = e || "")instanceof g ? e : this instanceof g ? (n = {
                        r: 0,
                        g: 0,
                        b: 0
                    },
                    s = a = o = null,
                    _ = d = !(r = 1),
                    r = D(r = "object" == typeof (i = "string" == typeof (i = e) ? function(e) {
                        e = e.replace(l, "").replace(c, "").toLowerCase();
                        var t, i = !1;
                        if (I[e])
                            e = I[e],
                            i = !0;
                        else if ("transparent" == e)
                            return {
                                r: 0,
                                g: 0,
                                b: 0,
                                a: 0,
                                format: "name"
                            };
                        return (t = p.rgb.exec(e)) ? {
                            r: t[1],
                            g: t[2],
                            b: t[3]
                        } : (t = p.rgba.exec(e)) ? {
                            r: t[1],
                            g: t[2],
                            b: t[3],
                            a: t[4]
                        } : (t = p.hsl.exec(e)) ? {
                            h: t[1],
                            s: t[2],
                            l: t[3]
                        } : (t = p.hsla.exec(e)) ? {
                            h: t[1],
                            s: t[2],
                            l: t[3],
                            a: t[4]
                        } : (t = p.hsv.exec(e)) ? {
                            h: t[1],
                            s: t[2],
                            v: t[3]
                        } : (t = p.hsva.exec(e)) ? {
                            h: t[1],
                            s: t[2],
                            v: t[3],
                            a: t[4]
                        } : (t = p.hex8.exec(e)) ? {
                            r: M(t[1]),
                            g: M(t[2]),
                            b: M(t[3]),
                            a: H(t[4]),
                            format: i ? "name" : "hex8"
                        } : (t = p.hex6.exec(e)) ? {
                            r: M(t[1]),
                            g: M(t[2]),
                            b: M(t[3]),
                            format: i ? "name" : "hex"
                        } : (t = p.hex4.exec(e)) ? {
                            r: M(t[1] + "" + t[1]),
                            g: M(t[2] + "" + t[2]),
                            b: M(t[3] + "" + t[3]),
                            a: H(t[4] + "" + t[4]),
                            format: i ? "name" : "hex8"
                        } : !!(t = p.hex3.exec(e)) && {
                            r: M(t[1] + "" + t[1]),
                            g: M(t[2] + "" + t[2]),
                            b: M(t[3] + "" + t[3]),
                            format: i ? "name" : "hex"
                        }
                    }(i) : i) && (P(i.r) && P(i.g) && P(i.b) ? (n = function(e, t, i) {
                        return {
                            r: 255 * f(e, 255),
                            g: 255 * f(t, 255),
                            b: 255 * f(i, 255)
                        }
                    }(i.r, i.g, i.b),
                    d = !0,
                    _ = "%" === String(i.r).substr(-1) ? "prgb" : "rgb") : P(i.h) && P(i.s) && P(i.v) ? (o = L(i.s),
                    a = L(i.v),
                    n = function(e, t, i) {
                        e = 6 * f(e, 360),
                        t = f(t, 100),
                        i = f(i, 100);
                        var n = u.floor(e)
                          , e = e - n
                          , r = i * (1 - t)
                          , o = i * (1 - e * t)
                          , e = i * (1 - (1 - e) * t)
                          , t = n % 6;
                        return {
                            r: 255 * [i, o, r, r, e, i][t],
                            g: 255 * [e, i, i, o, r, r][t],
                            b: 255 * [r, r, e, i, i, o][t]
                        }
                    }(i.h, o, a),
                    d = !0,
                    _ = "hsv") : P(i.h) && P(i.s) && P(i.l) && (o = L(i.s),
                    s = L(i.l),
                    n = function(e, t, i) {
                        function n(e, t, i) {
                            return i < 0 && (i += 1),
                            1 < i && --i,
                            i < 1 / 6 ? e + 6 * (t - e) * i : i < .5 ? t : i < 2 / 3 ? e + (t - e) * (2 / 3 - i) * 6 : e
                        }
                        var r, o, a;
                        e = f(e, 360),
                        t = f(t, 100),
                        i = f(i, 100),
                        0 === t ? r = o = a = i : (r = n(t = 2 * i - (i = i < .5 ? i * (1 + t) : i + t - i * t), i, e + 1 / 3),
                        o = n(t, i, e),
                        a = n(t, i, e - 1 / 3));
                        return {
                            r: 255 * r,
                            g: 255 * o,
                            b: 255 * a
                        }
                    }(i.h, o, s),
                    d = !0,
                    _ = "hsl"),
                    i.hasOwnProperty("a")) ? i.a : r),
                    a = {
                        ok: d,
                        format: i.format || _,
                        r: T(255, A(n.r, 0)),
                        g: T(255, A(n.g, 0)),
                        b: T(255, A(n.b, 0)),
                        a: r
                    },
                    this._originalInput = e,
                    this._r = a.r,
                    this._g = a.g,
                    this._b = a.b,
                    this._a = a.a,
                    this._roundA = E(100 * this._a) / 100,
                    this._format = t.format || a.format,
                    this._gradientType = t.gradientType,
                    this._r < 1 && (this._r = E(this._r)),
                    this._g < 1 && (this._g = E(this._g)),
                    this._b < 1 && (this._b = E(this._b)),
                    this._ok = a.ok,
                    void (this._tc_id = h++)) : new g(e,t)
                }
                function d(e, t, i) {
                    e = f(e, 255),
                    t = f(t, 255),
                    i = f(i, 255);
                    var n, r = A(e, t, i), o = T(e, t, i), a = (r + o) / 2;
                    if (r == o)
                        n = d = 0;
                    else {
                        var s = r - o
                          , d = .5 < a ? s / (2 - r - o) : s / (r + o);
                        switch (r) {
                        case e:
                            n = (t - i) / s + (t < i ? 6 : 0);
                            break;
                        case t:
                            n = (i - e) / s + 2;
                            break;
                        case i:
                            n = (e - t) / s + 4
                        }
                        n /= 6
                    }
                    return {
                        h: n,
                        s: d,
                        l: a
                    }
                }
                function _(e, t, i) {
                    e = f(e, 255),
                    t = f(t, 255),
                    i = f(i, 255);
                    var n, r = A(e, t, i), o = T(e, t, i), a = r, s = r - o, d = 0 === r ? 0 : s / r;
                    if (r == o)
                        n = 0;
                    else {
                        switch (r) {
                        case e:
                            n = (t - i) / s + (t < i ? 6 : 0);
                            break;
                        case t:
                            n = (i - e) / s + 2;
                            break;
                        case i:
                            n = (e - t) / s + 4
                        }
                        n /= 6
                    }
                    return {
                        h: n,
                        s: d,
                        v: a
                    }
                }
                function O(e, t, i, n) {
                    e = [y(E(e).toString(16)), y(E(t).toString(16)), y(E(i).toString(16))];
                    return n && e[0].charAt(0) == e[0].charAt(1) && e[1].charAt(0) == e[1].charAt(1) && e[2].charAt(0) == e[2].charAt(1) ? e[0].charAt(0) + e[1].charAt(0) + e[2].charAt(0) : e.join("")
                }
                function b(e, t, i, n) {
                    return [y(G(n)), y(E(e).toString(16)), y(E(t).toString(16)), y(E(i).toString(16))].join("")
                }
                function m(e, t) {
                    t = 0 === t ? 0 : t || 10;
                    e = g(e).toHsl();
                    return e.s -= t / 100,
                    e.s = v(e.s),
                    g(e)
                }
                function C(e, t) {
                    t = 0 === t ? 0 : t || 10;
                    e = g(e).toHsl();
                    return e.s += t / 100,
                    e.s = v(e.s),
                    g(e)
                }
                function R(e) {
                    return g(e).desaturate(100)
                }
                function S(e, t) {
                    t = 0 === t ? 0 : t || 10;
                    e = g(e).toHsl();
                    return e.l += t / 100,
                    e.l = v(e.l),
                    g(e)
                }
                function N(e, t) {
                    t = 0 === t ? 0 : t || 10;
                    e = g(e).toRgb();
                    return e.r = A(0, T(255, e.r - E(-t / 100 * 255))),
                    e.g = A(0, T(255, e.g - E(-t / 100 * 255))),
                    e.b = A(0, T(255, e.b - E(-t / 100 * 255))),
                    g(e)
                }
                function B(e, t) {
                    t = 0 === t ? 0 : t || 10;
                    e = g(e).toHsl();
                    return e.l -= t / 100,
                    e.l = v(e.l),
                    g(e)
                }
                function w(e, t) {
                    e = g(e).toHsl(),
                    t = (e.h + t) % 360;
                    return e.h = t < 0 ? 360 + t : t,
                    g(e)
                }
                function z(e) {
                    e = g(e).toHsl();
                    return e.h = (e.h + 180) % 360,
                    g(e)
                }
                function k(e) {
                    var t = g(e).toHsl()
                      , i = t.h;
                    return [g(e), g({
                        h: (i + 120) % 360,
                        s: t.s,
                        l: t.l
                    }), g({
                        h: (i + 240) % 360,
                        s: t.s,
                        l: t.l
                    })]
                }
                function W(e) {
                    var t = g(e).toHsl()
                      , i = t.h;
                    return [g(e), g({
                        h: (i + 90) % 360,
                        s: t.s,
                        l: t.l
                    }), g({
                        h: (i + 180) % 360,
                        s: t.s,
                        l: t.l
                    }), g({
                        h: (i + 270) % 360,
                        s: t.s,
                        l: t.l
                    })]
                }
                function V(e) {
                    var t = g(e).toHsl()
                      , i = t.h;
                    return [g(e), g({
                        h: (i + 72) % 360,
                        s: t.s,
                        l: t.l
                    }), g({
                        h: (i + 216) % 360,
                        s: t.s,
                        l: t.l
                    })]
                }
                function U(e, t, i) {
                    t = t || 6,
                    i = i || 30;
                    var n = g(e).toHsl()
                      , r = 360 / i
                      , o = [g(e)];
                    for (n.h = (n.h - (r * t >> 1) + 720) % 360; --t; )
                        n.h = (n.h + r) % 360,
                        o.push(g(n));
                    return o
                }
                function K(e, t) {
                    t = t || 6;
                    for (var e = g(e).toHsv(), i = e.h, n = e.s, r = e.v, o = [], a = 1 / t; t--; )
                        o.push(g({
                            h: i,
                            s: n,
                            v: r
                        })),
                        r = (r + a) % 1;
                    return o
                }
                function D(e) {
                    return e = parseFloat(e),
                    e = isNaN(e) || e < 0 || 1 < e ? 1 : e
                }
                function f(e, t) {
                    "string" == typeof (i = e) && -1 != i.indexOf(".") && 1 === parseFloat(i) && (e = "100%");
                    var i = "string" == typeof (i = e) && -1 != i.indexOf("%");
                    return e = T(t, A(0, parseFloat(e))),
                    i && (e = parseInt(e * t, 10) / 100),
                    u.abs(e - t) < 1e-6 ? 1 : e % t / parseFloat(t)
                }
                function v(e) {
                    return T(1, A(0, e))
                }
                function M(e) {
                    return parseInt(e, 16)
                }
                function y(e) {
                    return 1 == e.length ? "0" + e : "" + e
                }
                function L(e) {
                    return e = e <= 1 ? 100 * e + "%" : e
                }
                function G(e) {
                    return u.round(255 * parseFloat(e)).toString(16)
                }
                function H(e) {
                    return M(e) / 255
                }
                function P(e) {
                    return p.CSS_UNIT.exec(e)
                }
                u = Math,
                l = /^\s+/,
                c = /\s+$/,
                h = 0,
                E = u.round,
                T = u.min,
                A = u.max,
                a = u.random,
                g.prototype = {
                    isDark: function() {
                        return this.getBrightness() < 128
                    },
                    isLight: function() {
                        return !this.isDark()
                    },
                    isValid: function() {
                        return this._ok
                    },
                    getOriginalInput: function() {
                        return this._originalInput
                    },
                    getFormat: function() {
                        return this._format
                    },
                    getAlpha: function() {
                        return this._a
                    },
                    getBrightness: function() {
                        var e = this.toRgb();
                        return (299 * e.r + 587 * e.g + 114 * e.b) / 1e3
                    },
                    getLuminance: function() {
                        var e = this.toRgb()
                          , t = e.r / 255
                          , i = e.g / 255
                          , e = e.b / 255;
                        return .2126 * (t <= .03928 ? t / 12.92 : u.pow((.055 + t) / 1.055, 2.4)) + .7152 * (i <= .03928 ? i / 12.92 : u.pow((.055 + i) / 1.055, 2.4)) + .0722 * (e <= .03928 ? e / 12.92 : u.pow((.055 + e) / 1.055, 2.4))
                    },
                    setAlpha: function(e) {
                        return this._a = D(e),
                        this._roundA = E(100 * this._a) / 100,
                        this
                    },
                    toHsv: function() {
                        var e = _(this._r, this._g, this._b);
                        return {
                            h: 360 * e.h,
                            s: e.s,
                            v: e.v,
                            a: this._a
                        }
                    },
                    toHsvString: function() {
                        var e = _(this._r, this._g, this._b)
                          , t = E(360 * e.h)
                          , i = E(100 * e.s)
                          , e = E(100 * e.v);
                        return 1 == this._a ? "hsv(" + t + ", " + i + "%, " + e + "%)" : "hsva(" + t + ", " + i + "%, " + e + "%, " + this._roundA + ")"
                    },
                    toHsl: function() {
                        var e = d(this._r, this._g, this._b);
                        return {
                            h: 360 * e.h,
                            s: e.s,
                            l: e.l,
                            a: this._a
                        }
                    },
                    toHslString: function() {
                        var e = d(this._r, this._g, this._b)
                          , t = E(360 * e.h)
                          , i = E(100 * e.s)
                          , e = E(100 * e.l);
                        return 1 == this._a ? "hsl(" + t + ", " + i + "%, " + e + "%)" : "hsla(" + t + ", " + i + "%, " + e + "%, " + this._roundA + ")"
                    },
                    toHex: function(e) {
                        return O(this._r, this._g, this._b, e)
                    },
                    toHexString: function(e) {
                        return "#" + this.toHex(e)
                    },
                    toHex8: function(e) {
                        return t = this._r,
                        i = this._g,
                        n = this._b,
                        r = this._a,
                        e = e,
                        t = [y(E(t).toString(16)), y(E(i).toString(16)), y(E(n).toString(16)), y(G(r))],
                        e && t[0].charAt(0) == t[0].charAt(1) && t[1].charAt(0) == t[1].charAt(1) && t[2].charAt(0) == t[2].charAt(1) && t[3].charAt(0) == t[3].charAt(1) ? t[0].charAt(0) + t[1].charAt(0) + t[2].charAt(0) + t[3].charAt(0) : t.join("");
                        var t, i, n, r
                    },
                    toHex8String: function(e) {
                        return "#" + this.toHex8(e)
                    },
                    toRgb: function() {
                        return {
                            r: E(this._r),
                            g: E(this._g),
                            b: E(this._b),
                            a: this._a
                        }
                    },
                    toRgbString: function() {
                        return 1 == this._a ? "rgb(" + E(this._r) + ", " + E(this._g) + ", " + E(this._b) + ")" : "rgba(" + E(this._r) + ", " + E(this._g) + ", " + E(this._b) + ", " + this._roundA + ")"
                    },
                    toPercentageRgb: function() {
                        return {
                            r: E(100 * f(this._r, 255)) + "%",
                            g: E(100 * f(this._g, 255)) + "%",
                            b: E(100 * f(this._b, 255)) + "%",
                            a: this._a
                        }
                    },
                    toPercentageRgbString: function() {
                        return 1 == this._a ? "rgb(" + E(100 * f(this._r, 255)) + "%, " + E(100 * f(this._g, 255)) + "%, " + E(100 * f(this._b, 255)) + "%)" : "rgba(" + E(100 * f(this._r, 255)) + "%, " + E(100 * f(this._g, 255)) + "%, " + E(100 * f(this._b, 255)) + "%, " + this._roundA + ")"
                    },
                    toName: function() {
                        return 0 === this._a ? "transparent" : !(this._a < 1) && (s[O(this._r, this._g, this._b, !0)] || !1)
                    },
                    toFilter: function(e) {
                        var t = "#" + b(this._r, this._g, this._b, this._a)
                          , i = t;
                        return "progid:DXImageTransform.Microsoft.gradient(" + (this._gradientType ? "GradientType = 1, " : "") + "startColorstr=" + t + ",endColorstr=" + (i = e ? "#" + b((t = g(e))._r, t._g, t._b, t._a) : i) + ")"
                    },
                    toString: function(e) {
                        var t = !!e
                          , i = (e = e || this._format,
                        !1)
                          , n = this._a < 1 && 0 <= this._a;
                        return t || !n || "hex" !== e && "hex6" !== e && "hex3" !== e && "hex4" !== e && "hex8" !== e && "name" !== e ? ("rgb" === e && (i = this.toRgbString()),
                        "prgb" === e && (i = this.toPercentageRgbString()),
                        "hex" !== e && "hex6" !== e || (i = this.toHexString()),
                        "hex3" === e && (i = this.toHexString(!0)),
                        "hex4" === e && (i = this.toHex8String(!0)),
                        "hex8" === e && (i = this.toHex8String()),
                        "name" === e && (i = this.toName()),
                        "hsl" === e && (i = this.toHslString()),
                        (i = "hsv" === e ? this.toHsvString() : i) || this.toHexString()) : "name" === e && 0 === this._a ? this.toName() : this.toRgbString()
                    },
                    clone: function() {
                        return g(this.toString())
                    },
                    _applyModification: function(e, t) {
                        e = e.apply(null, [this].concat([].slice.call(t)));
                        return this._r = e._r,
                        this._g = e._g,
                        this._b = e._b,
                        this.setAlpha(e._a),
                        this
                    },
                    lighten: function() {
                        return this._applyModification(S, arguments)
                    },
                    brighten: function() {
                        return this._applyModification(N, arguments)
                    },
                    darken: function() {
                        return this._applyModification(B, arguments)
                    },
                    desaturate: function() {
                        return this._applyModification(m, arguments)
                    },
                    saturate: function() {
                        return this._applyModification(C, arguments)
                    },
                    greyscale: function() {
                        return this._applyModification(R, arguments)
                    },
                    spin: function() {
                        return this._applyModification(w, arguments)
                    },
                    _applyCombination: function(e, t) {
                        return e.apply(null, [this].concat([].slice.call(t)))
                    },
                    analogous: function() {
                        return this._applyCombination(U, arguments)
                    },
                    complement: function() {
                        return this._applyCombination(z, arguments)
                    },
                    monochromatic: function() {
                        return this._applyCombination(K, arguments)
                    },
                    splitcomplement: function() {
                        return this._applyCombination(V, arguments)
                    },
                    triad: function() {
                        return this._applyCombination(k, arguments)
                    },
                    tetrad: function() {
                        return this._applyCombination(W, arguments)
                    }
                },
                g.fromRatio = function(e, t) {
                    if ("object" == typeof e) {
                        var i, n = {};
                        for (i in e)
                            e.hasOwnProperty(i) && (n[i] = "a" === i ? e[i] : L(e[i]));
                        e = n
                    }
                    return g(e, t)
                }
                ,
                g.equals = function(e, t) {
                    return !(!e || !t) && g(e).toRgbString() == g(t).toRgbString()
                }
                ,
                g.random = function() {
                    return g.fromRatio({
                        r: a(),
                        g: a(),
                        b: a()
                    })
                }
                ,
                g.mix = function(e, t, i) {
                    i = 0 === i ? 0 : i || 50;
                    e = g(e).toRgb(),
                    t = g(t).toRgb(),
                    i /= 100;
                    return g({
                        r: (t.r - e.r) * i + e.r,
                        g: (t.g - e.g) * i + e.g,
                        b: (t.b - e.b) * i + e.b,
                        a: (t.a - e.a) * i + e.a
                    })
                }
                ,
                g.readability = function(e, t) {
                    e = g(e),
                    t = g(t);
                    return (u.max(e.getLuminance(), t.getLuminance()) + .05) / (u.min(e.getLuminance(), t.getLuminance()) + .05)
                }
                ,
                g.isReadable = function(e, t, i) {
                    var n = g.readability(e, t)
                      , r = !1;
                    switch ((i = {
                        level: t = "AA" !== (t = ((e = (e = i) || {
                            level: "AA",
                            size: "small"
                        }).level || "AA").toUpperCase()) && "AAA" !== t ? "AA" : t,
                        size: t = "small" !== (t = (e.size || "small").toLowerCase()) && "large" !== t ? "small" : t
                    }).level + i.size) {
                    case "AAsmall":
                    case "AAAlarge":
                        r = 4.5 <= n;
                        break;
                    case "AAlarge":
                        r = 3 <= n;
                        break;
                    case "AAAsmall":
                        r = 7 <= n
                    }
                    return r
                }
                ,
                g.mostReadable = function(e, t, i) {
                    for (var n, r = null, o = 0, a = (i = i || {}).includeFallbackColors, s = i.level, d = i.size, _ = 0; _ < t.length; _++)
                        (n = g.readability(e, t[_])) > o && (o = n,
                        r = g(t[_]));
                    return g.isReadable(e, r, {
                        level: s,
                        size: d
                    }) || !a ? r : (i.includeFallbackColors = !1,
                    g.mostReadable(e, ["#fff", "#000"], i))
                }
                ,
                I = g.names = {
                    aliceblue: "f0f8ff",
                    antiquewhite: "faebd7",
                    aqua: "0ff",
                    aquamarine: "7fffd4",
                    azure: "f0ffff",
                    beige: "f5f5dc",
                    bisque: "ffe4c4",
                    black: "000",
                    blanchedalmond: "ffebcd",
                    blue: "00f",
                    blueviolet: "8a2be2",
                    brown: "a52a2a",
                    burlywood: "deb887",
                    burntsienna: "ea7e5d",
                    cadetblue: "5f9ea0",
                    chartreuse: "7fff00",
                    chocolate: "d2691e",
                    coral: "ff7f50",
                    cornflowerblue: "6495ed",
                    cornsilk: "fff8dc",
                    crimson: "dc143c",
                    cyan: "0ff",
                    darkblue: "00008b",
                    darkcyan: "008b8b",
                    darkgoldenrod: "b8860b",
                    darkgray: "a9a9a9",
                    darkgreen: "006400",
                    darkgrey: "a9a9a9",
                    darkkhaki: "bdb76b",
                    darkmagenta: "8b008b",
                    darkolivegreen: "556b2f",
                    darkorange: "ff8c00",
                    darkorchid: "9932cc",
                    darkred: "8b0000",
                    darksalmon: "e9967a",
                    darkseagreen: "8fbc8f",
                    darkslateblue: "483d8b",
                    darkslategray: "2f4f4f",
                    darkslategrey: "2f4f4f",
                    darkturquoise: "00ced1",
                    darkviolet: "9400d3",
                    deeppink: "ff1493",
                    deepskyblue: "00bfff",
                    dimgray: "696969",
                    dimgrey: "696969",
                    dodgerblue: "1e90ff",
                    firebrick: "b22222",
                    floralwhite: "fffaf0",
                    forestgreen: "228b22",
                    fuchsia: "f0f",
                    gainsboro: "dcdcdc",
                    ghostwhite: "f8f8ff",
                    gold: "ffd700",
                    goldenrod: "daa520",
                    gray: "808080",
                    green: "008000",
                    greenyellow: "adff2f",
                    grey: "808080",
                    honeydew: "f0fff0",
                    hotpink: "ff69b4",
                    indianred: "cd5c5c",
                    indigo: "4b0082",
                    ivory: "fffff0",
                    khaki: "f0e68c",
                    lavender: "e6e6fa",
                    lavenderblush: "fff0f5",
                    lawngreen: "7cfc00",
                    lemonchiffon: "fffacd",
                    lightblue: "add8e6",
                    lightcoral: "f08080",
                    lightcyan: "e0ffff",
                    lightgoldenrodyellow: "fafad2",
                    lightgray: "d3d3d3",
                    lightgreen: "90ee90",
                    lightgrey: "d3d3d3",
                    lightpink: "ffb6c1",
                    lightsalmon: "ffa07a",
                    lightseagreen: "20b2aa",
                    lightskyblue: "87cefa",
                    lightslategray: "789",
                    lightslategrey: "789",
                    lightsteelblue: "b0c4de",
                    lightyellow: "ffffe0",
                    lime: "0f0",
                    limegreen: "32cd32",
                    linen: "faf0e6",
                    magenta: "f0f",
                    maroon: "800000",
                    mediumaquamarine: "66cdaa",
                    mediumblue: "0000cd",
                    mediumorchid: "ba55d3",
                    mediumpurple: "9370db",
                    mediumseagreen: "3cb371",
                    mediumslateblue: "7b68ee",
                    mediumspringgreen: "00fa9a",
                    mediumturquoise: "48d1cc",
                    mediumvioletred: "c71585",
                    midnightblue: "191970",
                    mintcream: "f5fffa",
                    mistyrose: "ffe4e1",
                    moccasin: "ffe4b5",
                    navajowhite: "ffdead",
                    navy: "000080",
                    oldlace: "fdf5e6",
                    olive: "808000",
                    olivedrab: "6b8e23",
                    orange: "ffa500",
                    orangered: "ff4500",
                    orchid: "da70d6",
                    palegoldenrod: "eee8aa",
                    palegreen: "98fb98",
                    paleturquoise: "afeeee",
                    palevioletred: "db7093",
                    papayawhip: "ffefd5",
                    peachpuff: "ffdab9",
                    peru: "cd853f",
                    pink: "ffc0cb",
                    plum: "dda0dd",
                    powderblue: "b0e0e6",
                    purple: "800080",
                    rebeccapurple: "663399",
                    red: "f00",
                    rosybrown: "bc8f8f",
                    royalblue: "4169e1",
                    saddlebrown: "8b4513",
                    salmon: "fa8072",
                    sandybrown: "f4a460",
                    seagreen: "2e8b57",
                    seashell: "fff5ee",
                    sienna: "a0522d",
                    silver: "c0c0c0",
                    skyblue: "87ceeb",
                    slateblue: "6a5acd",
                    slategray: "708090",
                    slategrey: "708090",
                    snow: "fffafa",
                    springgreen: "00ff7f",
                    steelblue: "4682b4",
                    tan: "d2b48c",
                    teal: "008080",
                    thistle: "d8bfd8",
                    tomato: "ff6347",
                    turquoise: "40e0d0",
                    violet: "ee82ee",
                    wheat: "f5deb3",
                    white: "fff",
                    whitesmoke: "f5f5f5",
                    yellow: "ff0",
                    yellowgreen: "9acd32"
                },
                s = g.hexNames = function(e) {
                    var t, i = {};
                    for (t in e)
                        e.hasOwnProperty(t) && (i[e[t]] = t);
                    return i
                }(I),
                r = "[\\s|\\(]+(" + (n = "(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)") + ")[,|\\s]+(" + n + ")[,|\\s]+(" + n + ")\\s*\\)?",
                o = "[\\s|\\(]+(" + n + ")[,|\\s]+(" + n + ")[,|\\s]+(" + n + ")[,|\\s]+(" + n + ")\\s*\\)?",
                p = {
                    CSS_UNIT: new RegExp(n),
                    rgb: new RegExp("rgb" + r),
                    rgba: new RegExp("rgba" + o),
                    hsl: new RegExp("hsl" + r),
                    hsla: new RegExp("hsla" + o),
                    hsv: new RegExp("hsv" + r),
                    hsva: new RegExp("hsva" + o),
                    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
                    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
                    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
                },
                void 0 !== e && e.exports ? e.exports = g : void 0 !== (n = function() {
                    return g
                }
                .call(t, i, t, e)) && (e.exports = n)
            }
            , function(n, e) {
                !function() {
                    "use strict";
                    var o = "undefined" != typeof window && void 0 !== window.document ? window.document : {}
                      , e = void 0 !== n && n.exports
                      , r = function() {
                        for (var e, t = [["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"], ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"], ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"], ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"], ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]], i = 0, n = t.length, r = {}; i < n; i++)
                            if ((e = t[i]) && e[1]in o) {
                                for (i = 0; i < e.length; i++)
                                    r[t[0][i]] = e[i];
                                return r
                            }
                        return !1
                    }()
                      , i = {
                        change: r.fullscreenchange,
                        error: r.fullscreenerror
                    }
                      , t = {
                        request: function(n) {
                            return new Promise(function(e, t) {
                                var i = function() {
                                    this.off("change", i),
                                    e()
                                }
                                .bind(this);
                                this.on("change", i),
                                n = n || o.documentElement,
                                Promise.resolve(n[r.requestFullscreen]()).catch(t)
                            }
                            .bind(this))
                        },
                        exit: function() {
                            return new Promise(function(e, t) {
                                var i;
                                this.isFullscreen ? (i = function() {
                                    this.off("change", i),
                                    e()
                                }
                                .bind(this),
                                this.on("change", i),
                                Promise.resolve(o[r.exitFullscreen]()).catch(t)) : e()
                            }
                            .bind(this))
                        },
                        toggle: function(e) {
                            return this.isFullscreen ? this.exit() : this.request(e)
                        },
                        onchange: function(e) {
                            this.on("change", e)
                        },
                        onerror: function(e) {
                            this.on("error", e)
                        },
                        on: function(e, t) {
                            e = i[e];
                            e && o.addEventListener(e, t, !1)
                        },
                        off: function(e, t) {
                            e = i[e];
                            e && o.removeEventListener(e, t, !1)
                        },
                        raw: r
                    };
                    if (!r)
                        return e ? n.exports = {
                            isEnabled: !1
                        } : window.screenfull = {
                            isEnabled: !1
                        };
                    Object.defineProperties(t, {
                        isFullscreen: {
                            get: function() {
                                return Boolean(o[r.fullscreenElement])
                            }
                        },
                        element: {
                            enumerable: !0,
                            get: function() {
                                return o[r.fullscreenElement]
                            }
                        },
                        isEnabled: {
                            enumerable: !0,
                            get: function() {
                                return Boolean(o[r.fullscreenEnabled])
                            }
                        }
                    }),
                    e ? n.exports = t : window.screenfull = t
                }()
            }
            , function(e, t, i) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                i = i(17),
                i = i && i.__esModule ? i : {
                    default: i
                };
                t.default = i.default,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                function n(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var r = function(e, t, i) {
                    return t && A(e.prototype, t),
                    i && A(e, i),
                    e
                }
                  , o = n(i(0))
                  , a = n(i(23))
                  , s = n(i(9))
                  , d = i(1)
                  , _ = i(24)
                  , u = i(72)
                  , l = i(74)
                  , c = i(77)
                  , h = n(i(15))
                  , E = i(79)
                  , i = (r(T, [{
                    key: "_LoadStyles",
                    value: function() {
                        function e(e) {
                            var t = document.createElement("style");
                            t.setAttribute("type", "text/css"),
                            t.setAttribute("rel", "stylesheet"),
                            t.setAttribute("href", e),
                            document.getElementsByTagName("head")[0].appendChild(t)
                        }
                        e("//cdn.jsdelivr.net/font-hack/2.019/css/hack.min.css"),
                        d.theme.font ? (d.theme.font.fontURL && e(d.theme.font.fontURL),
                        d.theme.font.fontFamily && (0,
                        o.default)(this.container, "font-family", d.theme.font.fontFamily),
                        d.theme.font.fontSize && (0,
                        o.default)(this.container, "font-size", d.theme.font.fontSize),
                        d.theme.font.fontWeight && (0,
                        o.default)(this.container, "font-weight", d.theme.font.fontWeight)) : (0,
                        o.default)(this.container, "font-family", "'Hack', monospace")
                    }
                }, {
                    key: "_ConstructElements",
                    value: function() {
                        var e = this
                          , t = (this.container = document.createElement("div"),
                        this.container.classList.add(E["OtterGui-container"]),
                        {});
                        "overlay" != this.opts.barMode && "above" != this.opts.barMode && "none" != this.opts.barMode || (t.position = "absolute"),
                        this.hasRoot && "above" == this.opts.barMode && (t.top = "-" + d.theme.sizing.menuBarHeight),
                        (0,
                        o.default)(this.container, t),
                        this.opts.root.insertBefore(this.container, this.opts.root.childNodes[0]),
                        "none" !== this.opts.barMode && (this.bar = new u.MenuBar(this.container,this.opts),
                        this.bar.addListener("ontogglepanel", function() {
                            e.panel.ToggleVisible()
                        }),
                        this.bar.addListener("onfullscreenrequested", function() {
                            e.ToggleFullscreen()
                        })),
                        this.panel = new l.Panel(this.container,this.opts),
                        "none" === this.opts.barMode || !0 === this.opts.open ? this.panel.SetVisible(!0) : this.panel.SetVisible(!1),
                        this.toaster = new c.ToastArea(this.container,this.opts)
                    }
                }, {
                    key: "_UpdateComponents",
                    value: function() {
                        var e = this;
                        this.loadedComponents.forEach(function(e) {
                            e.binding && e.binding.object[e.binding.property] != e.oldValue && (e.SetValue(e.binding.object[e.binding.property]),
                            e.oldValue = e.binding.object[e.binding.property])
                        }),
                        setTimeout(function() {
                            window.requestAnimationFrame(function() {
                                e._UpdateComponents()
                            })
                        }, this.opts.pollRateMS)
                    }
                }, {
                    key: "Register",
                    value: function(e) {
                        var t, i = this, n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
                        if (!Array.isArray(e))
                            return t = Object.assign(e, n),
                            this._Register(t);
                        e.forEach(function(e) {
                            e = Object.assign(e, n);
                            i._Register(e)
                        })
                    }
                }, {
                    key: "Remove",
                    value: function(t) {
                        t.Remove(),
                        this.loadedComponents = this.loadedComponents.filter(function(e) {
                            return e !== t
                        })
                    }
                }, {
                    key: "_Register",
                    value: function(t) {
                        if (t.object && t.property && void 0 === t.object[t.property])
                            throw new Error("Object " + t.object + " has no property '" + t.property + "'");
                        t.object && t.property && (t.initial = t.object[t.property]);
                        var e = this.panel.panel;
                        if (t.folder) {
                            var i = this.loadedComponents.find(function(e) {
                                return "folder" === e.opts.type && e.opts.label === t.folder
                            });
                            if (!i)
                                throw new Error("No folder exists with the name " + t.folder);
                            e = i.folderContainer
                        }
                        i = this.componentManager.Create(e, t);
                        return t.object && t.property && (i.binding = {
                            object: t.object,
                            property: t.property
                        }),
                        i.on && (i.on("initialized", function(e) {
                            t.onInitialize && t.onInitialize(e)
                        }),
                        i.on("input", function(e) {
                            t.object && t.property && (t.object[t.property] = e),
                            t.onChange && t.onChange(e)
                        })),
                        this.loadedComponents.push(i),
                        i
                    }
                }, {
                    key: "Toast",
                    value: function(e) {
                        this.toaster.CreateToast(e, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 5e3, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0)
                    }
                }, {
                    key: "ToggleFullscreen",
                    value: function() {
                        h.default.isFullscreen ? h.default.exit() : (console.log("Request fullscreen"),
                        h.default.request(this.opts.root))
                    }
                }]),
                T);
                function T(e) {
                    if (!(this instanceof T))
                        throw new TypeError("Cannot call a class as a function");
                    this.opts = e,
                    this.hasRoot = void 0 !== e.root,
                    e.width = e.width || 300,
                    e.root = e.root || document.body,
                    e.align = e.align || "left",
                    e.opacity = e.opacity || 1,
                    e.barMode = e.barMode || "offset",
                    e.panelMode = e.panelMode || "inner",
                    e.pollRateMS = e.pollRateMS || 100,
                    e.open = e.open || !1;
                    var t = e.theme;
                    void 0 === e.theme && (t = s.default.dark),
                    (0,
                    a.default)(e.theme) && (t = void 0 === s.default[e.theme] ? (console.error("There is no theme preset with the name '" + e.theme + "'! Defaulting to dark theme."),
                    s.default.dark) : s.default[e.theme]),
                    d.theme.Set(t),
                    this._ConstructElements(),
                    this._LoadStyles(),
                    this.componentManager = new _.ComponentManager,
                    this.loadedComponents = [],
                    this._UpdateComponents()
                }
                function A(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.default = i,
                e.exports = t.default
            }
            , function(e, t) {
                var o = null
                  , a = ["Webkit", "Moz", "O", "ms"];
                e.exports = function(e) {
                    var t = (o = o || document.createElement("div")).style;
                    if (e in t)
                        return e;
                    for (var i = e.charAt(0).toUpperCase() + e.slice(1), n = a.length; 0 <= n; n--) {
                        var r = a[n] + i;
                        if (r in t)
                            return r
                    }
                    return !1
                }
            }
            , function(e, t, i) {
                var n = i(20);
                e.exports = function(e) {
                    return n(e).replace(/\s(\w)/g, function(e, t) {
                        return t.toUpperCase()
                    })
                }
            }
            , function(e, t, i) {
                var n = i(21);
                e.exports = function(e) {
                    return n(e).replace(/[\W_]+(.|$)/g, function(e, t) {
                        return t ? " " + t : ""
                    }).trim()
                }
            }
            , function(e, t) {
                e.exports = function(e) {
                    return (i.test(e) ? e : n.test(e) ? e.replace(o, function(e, t) {
                        return t ? " " + t : ""
                    }) || e : r.test(e) ? e.replace(a, function(e, t, i) {
                        return t + " " + i.toLowerCase().split("").join(" ")
                    }) : e).toLowerCase()
                }
                ;
                var i = /\s/
                  , n = /(_|-|\.|:)/
                  , r = /([a-z][A-Z]|[A-Z][a-z])/
                  , o = /[\W_]+(.|$)/g
                  , a = /(.)([A-Z]+)/g
            }
            , function(e, t) {
                var i = {
                    animationIterationCount: !0,
                    boxFlex: !0,
                    boxFlexGroup: !0,
                    boxOrdinalGroup: !0,
                    columnCount: !0,
                    flex: !0,
                    flexGrow: !0,
                    flexPositive: !0,
                    flexShrink: !0,
                    flexNegative: !0,
                    flexOrder: !0,
                    gridRow: !0,
                    gridColumn: !0,
                    fontWeight: !0,
                    lineClamp: !0,
                    lineHeight: !0,
                    opacity: !0,
                    order: !0,
                    orphans: !0,
                    tabSize: !0,
                    widows: !0,
                    zIndex: !0,
                    zoom: !0,
                    fillOpacity: !0,
                    stopOpacity: !0,
                    strokeDashoffset: !0,
                    strokeOpacity: !0,
                    strokeWidth: !0
                };
                e.exports = function(e, t) {
                    return "number" != typeof t || i[e] ? t : t + "px"
                }
            }
            , function(e, t, i) {
                "use strict";
                var n = String.prototype.valueOf
                  , r = Object.prototype.toString
                  , o = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag;
                e.exports = function(e) {
                    return "string" == typeof e || "object" == typeof e && (o ? function(e) {
                        try {
                            return n.call(e),
                            !0
                        } catch (e) {
                            return !1
                        }
                    }(e) : "[object String]" === r.call(e))
                }
            }
            , function(e, t, i) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                t.ComponentManager = void 0;
                var n = function(e, t, i) {
                    return t && s(e.prototype, t),
                    i && s(e, i),
                    e
                }
                  , r = i(25)
                  , o = r && r.__esModule ? r : {
                    default: r
                }
                  , a = i(1);
                function s(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                function d() {
                    if (!(this instanceof d))
                        throw new TypeError("Cannot call a class as a function");
                    this.uuid = (0,
                    o.default)(),
                    this.components = {
                        title: i(28),
                        range: i(29),
                        button: i(46),
                        checkbox: i(48),
                        select: i(50),
                        text: i(52),
                        color: i(53),
                        folder: i(65),
                        file: i(67),
                        display: i(69),
                        interval: i(70)
                    }
                }
                t.ComponentManager = (n(d, [{
                    key: "Create",
                    value: function(e, t) {
                        if (void 0 === this.components[t.type])
                            throw new Error("No component type named '" + t.type + "' exists.");
                        e = new this.components[t.type](e,t,a.theme,this.uuid);
                        return Object.assign(e, {
                            Remove: function() {
                                this.container.parentNode.removeChild(this.container)
                            }
                        }),
                        e
                    }
                }]),
                d)
            }
            , function(e, t, i) {
                var a = i(26)
                  , s = i(27);
                e.exports = function(e, t, i) {
                    var n = t && i || 0
                      , r = ("string" == typeof e && (t = "binary" === e ? new Array(16) : null,
                    e = null),
                    (e = e || {}).random || (e.rng || a)());
                    if (r[6] = 15 & r[6] | 64,
                    r[8] = 63 & r[8] | 128,
                    t)
                        for (var o = 0; o < 16; ++o)
                            t[n + o] = r[o];
                    return t || s(r)
                }
            }
            , function(e, t) {
                var i, n, r = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof window.msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto);
                r ? (i = new Uint8Array(16),
                e.exports = function() {
                    return r(i),
                    i
                }
                ) : (n = new Array(16),
                e.exports = function() {
                    for (var e, t = 0; t < 16; t++)
                        0 == (3 & t) && (e = 4294967296 * Math.random()),
                        n[t] = e >>> ((3 & t) << 3) & 255;
                    return n
                }
                )
            }
            , function(e, t) {
                for (var n = [], i = 0; i < 256; ++i)
                    n[i] = (i + 256).toString(16).substr(1);
                e.exports = function(e, t) {
                    var t = t || 0
                      , i = n;
                    return [i[e[t++]], i[e[t++]], i[e[t++]], i[e[t++]], "-", i[e[t++]], i[e[t++]], "-", i[e[t++]], i[e[t++]], "-", i[e[t++]], i[e[t++]], "-", i[e[t++]], i[e[t++]], i[e[t++]], i[e[t++]], i[e[t++]], i[e[+t]]].join("")
                }
            }
            , function(e, t, r) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var i = r(0)
                  , o = i && i.__esModule ? i : {
                    default: i
                };
                t.default = function e(t, i, n) {
                    if (!(this instanceof e))
                        throw new TypeError("Cannot call a class as a function");
                    this.opts = i,
                    this.container = r(2)(t, i.label, n),
                    (0,
                    o.default)(this.container, {});
                    t = this.container.appendChild(document.createElement("div")),
                    (0,
                    o.default)(t, {
                        "box-sizing": "border-box",
                        width: "100%",
                        display: "inline-block",
                        height: n.sizing.componentHeight,
                        verticalAlign: "top"
                    }),
                    t = t.appendChild(document.createElement("div"));
                    t.innerHTML = "&#9632; " + i.label + " &#9632;",
                    (0,
                    o.default)(t, {
                        display: "inline-block",
                        verticalAlign: "sub",
                        height: n.sizing.componentHeight,
                        "line-height": n.sizing.componentHeight,
                        "padding-left": "5px",
                        "padding-right": "5px",
                        "background-color": n.colors.textPrimary,
                        color: n.colors.panelBackground
                    })
                }
                ,
                e.exports = t.default
            }
            , function(e, t, a) {
                "use strict";
                function i(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = function(e, t, i) {
                    return t && o(e.prototype, t),
                    i && o(e, i),
                    e
                }
                  , r = i(a(4))
                  , s = i(a(0))
                  , d = i(a(10))
                  , _ = a(30)
                  , r = function(e) {
                    function o(e, t, i, n) {
                        if (!(this instanceof o))
                            throw new TypeError("Cannot call a class as a function");
                        var r = function(e, t) {
                            if (e)
                                return !t || "object" != typeof t && "function" != typeof t ? e : t;
                            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                        }(this, (o.__proto__ || Object.getPrototypeOf(o)).call(this));
                        if (r.opts = t,
                        r.container = a(2)(e, t.label, i),
                        a(5)(r.container, t.label, i),
                        t.step && t.steps)
                            throw new Error("Cannot specify both step and steps. Got step = " + t.step + ", steps = ",t.steps);
                        if (r.input = r.container.appendChild(document.createElement("input")),
                        r.input.type = "range",
                        r.input.className = _["OtterGui-range"],
                        t.label && r.input.setAttribute("aria-label", t.label + " input"),
                        "log" === t.scale) {
                            if (t.max = (0,
                            d.default)(t.max) ? t.max : 100,
                            t.min = (0,
                            d.default)(t.min) ? t.min : .1,
                            t.min * t.max <= 0)
                                throw new Error("Log range min/max must have the same sign and not equal zero. Got min = " + t.min + ", max = " + t.max);
                            if (r.logmin = t.min,
                            r.logmax = t.max,
                            r.logsign = 0 < t.min ? 1 : -1,
                            r.logmin = Math.abs(r.logmin),
                            r.logmax = Math.abs(r.logmax),
                            t.min = 0,
                            t.max = 100,
                            (0,
                            d.default)(t.step))
                                throw new Error("Log may only use steps (integer number of steps), not a step value. Got step =" + t.step);
                            if (t.step = 1,
                            t.initial = r.InverseScaleValue((0,
                            d.default)(t.initial) ? t.initial : scaleValue(.5 * (t.min + t.max))),
                            t.initial * r.InverseScaleValue(t.max) <= 0)
                                throw new Error("Log range initial value must have the same sign as min/max and must not equal zero. Got initial value = " + t.initial)
                        } else
                            t.max = (0,
                            d.default)(t.max) ? t.max : 100,
                            t.min = (0,
                            d.default)(t.min) ? t.min : 0,
                            t.step = (0,
                            d.default)(t.step) ? t.step : .01,
                            t.initial = (0,
                            d.default)(t.initial) ? t.initial : .5 * (t.min + t.max);
                        (0,
                        d.default)(t.steps) && (t.step = (0,
                        d.default)(t.steps) ? (t.max - t.min) / t.steps : t.step);
                        e = Math.round((t.initial - t.min) / t.step);
                        return t.initial = t.min + t.step * e,
                        r.input.min = t.min,
                        r.input.max = t.max,
                        r.input.step = t.step,
                        r.input.value = t.initial,
                        (0,
                        s.default)(r.input, {
                            width: "calc(100% - " + i.sizing.labelWidth + " - 16% - 0.5em)"
                        }),
                        r.valueComponent = a(6)(r.container, r.ScaleValue(t.initial), i, "16%"),
                        t.label && r.valueComponent.setAttribute("aria-label", t.label + " value"),
                        setTimeout(function() {
                            r.emit("initialized", parseFloat(r.input.value))
                        }),
                        r.userIsModifying = !1,
                        r.input.addEventListener("focus", function() {
                            r.focused = !0
                        }),
                        r.input.addEventListener("blur", function() {
                            r.focused = !1
                        }),
                        r.input.addEventListener("mouseup", function() {
                            r.input.blur()
                        }),
                        r.input.oninput = function(e) {
                            e = r.ScaleValue(parseFloat(e.target.value));
                            r.valueComponent.value = r.FormatNumber(e),
                            r.lastValue = e,
                            r.emit("input", e)
                        }
                        ,
                        r.valueComponent.onchange = function() {
                            var e = r.valueComponent.value;
                            Number(parseFloat(e)) == e ? (e = parseFloat(e),
                            e = Math.min(Math.max(e, t.min), t.max),
                            e = Math.ceil((e - t.min) / t.step) * t.step + t.min,
                            r.valueComponent.value = e,
                            r.emit("input", e)) : r.valueComponent.value = r.lastValue
                        }
                        ,
                        r
                    }
                    var t = o;
                    if ("function" != typeof e && null !== e)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    return t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e),
                    n(o, [{
                        key: "ScaleValue",
                        value: function(e) {
                            return "log" === this.opts.scale ? this.logsign * Math.exp(Math.log(this.logmin) + (Math.log(this.logmax) - Math.log(this.logmin)) * e / 100) : e
                        }
                    }, {
                        key: "InverseScaleValue",
                        value: function(e) {
                            return "log" === this.opts.scale ? 100 * (Math.log(e * this.logsign) - Math.log(this.logmin)) / (Math.log(this.logmax) - Math.log(this.logmin)) : e
                        }
                    }, {
                        key: "SetValue",
                        value: function(e) {
                            !0 !== this.focused && (this.valueComponent.value = this.FormatNumber(e),
                            this.input.value = this.InverseScaleValue(e),
                            this.lastValue = this.input.value)
                        }
                    }, {
                        key: "GetValue",
                        value: function() {
                            return this.input.value
                        }
                    }, {
                        key: "FormatNumber",
                        value: function(e) {
                            return e.toFixed(3).replace(/\.?0*$/, "")
                        }
                    }]),
                    o
                }(r.default);
                function o(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.default = r,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(["\n\ninput[type=range].OtterGui-range {\n -webkit-appearance: none;\n width: 100%;\n height: ", ";\n margin: 0px 0;\n padding: 0;\n display: inline-block;\n}\n\n\ninput[type=range].OtterGui-range:focus {\n outline: none;\n}\ninput[type=range].OtterGui-range::-moz-focus-outer {\n border: 0;\n}\n\n\ninput[type=range].OtterGui-range::-webkit-slider-runnable-track {\n width: 100%;\n height: ", ";\n cursor: ew-resize;\n background: ", ";\n}\ninput[type=range].OtterGui-range::-webkit-slider-thumb {\n height: ", ";\n width: 10px;\n background: ", ";\n cursor: ew-resize;\n -webkit-appearance: none;\n margin-top: 0px;\n}\ninput[type=range].OtterGui-range:focus::-webkit-slider-runnable-track {\n background: ", ";\n outline: none;\n}\n\n\ninput[type=range].OtterGui-range::-moz-range-track {\n width: 100%;\n height: ", ";\n cursor: ew-resize;\n background: ", ";\n}\ninput[type=range].OtterGui-range:focus::-moz-range-track {\n background: ", ";\n}\ninput[type=range].OtterGui-range::-moz-range-thumb {\n height: ", ";\n width: 10px;\n background: ", ";\n cursor: ew-resize;\n border: none;\n border-radius: 0;\n}\n\n\ninput[type=range].OtterGui-range::-ms-track {\n width: 100%;\n height: ", ";\n cursor: ew-resize;\n background: transparent;\n border-color: transparent;\n color: transparent;\n}\ninput[type=range].OtterGui-range::-ms-fill-lower {\n background: ", ";\n}\ninput[type=range].OtterGui-range::-ms-fill-upper {\n background: ", ";\n}\ninput[type=range].OtterGui-range:focus::-ms-fill-lower {\n background: ", ";\n}\ninput[type=range].OtterGui-range:focus::-ms-fill-upper {\n background: ", ";\n}\ninput[type=range].OtterGui-range::-ms-thumb {\n width: 10px;\n border-radius: 0px;\n background: ", ";\n cursor: ew-resize;\n height: ", ";\n}\ninput[type=range].OtterGui-range:focus::-ms-fill-lower {\n background: ", ";\n outline: none;\n}\ninput[type=range].OtterGui-range:focus::-ms-fill-upper {\n background: ", ";\n outline: none;\n}\n\n"], {
                    raw: {
                        value: Object.freeze(["\n\ninput[type=range].OtterGui-range {\n -webkit-appearance: none;\n width: 100%;\n height: ", ";\n margin: 0px 0;\n padding: 0;\n display: inline-block;\n}\n\n\ninput[type=range].OtterGui-range:focus {\n outline: none;\n}\ninput[type=range].OtterGui-range::-moz-focus-outer {\n border: 0;\n}\n\n\ninput[type=range].OtterGui-range::-webkit-slider-runnable-track {\n width: 100%;\n height: ", ";\n cursor: ew-resize;\n background: ", ";\n}\ninput[type=range].OtterGui-range::-webkit-slider-thumb {\n height: ", ";\n width: 10px;\n background: ", ";\n cursor: ew-resize;\n -webkit-appearance: none;\n margin-top: 0px;\n}\ninput[type=range].OtterGui-range:focus::-webkit-slider-runnable-track {\n background: ", ";\n outline: none;\n}\n\n\ninput[type=range].OtterGui-range::-moz-range-track {\n width: 100%;\n height: ", ";\n cursor: ew-resize;\n background: ", ";\n}\ninput[type=range].OtterGui-range:focus::-moz-range-track {\n background: ", ";\n}\ninput[type=range].OtterGui-range::-moz-range-thumb {\n height: ", ";\n width: 10px;\n background: ", ";\n cursor: ew-resize;\n border: none;\n border-radius: 0;\n}\n\n\ninput[type=range].OtterGui-range::-ms-track {\n width: 100%;\n height: ", ";\n cursor: ew-resize;\n background: transparent;\n border-color: transparent;\n color: transparent;\n}\ninput[type=range].OtterGui-range::-ms-fill-lower {\n background: ", ";\n}\ninput[type=range].OtterGui-range::-ms-fill-upper {\n background: ", ";\n}\ninput[type=range].OtterGui-range:focus::-ms-fill-lower {\n background: ", ";\n}\ninput[type=range].OtterGui-range:focus::-ms-fill-upper {\n background: ", ";\n}\ninput[type=range].OtterGui-range::-ms-thumb {\n width: 10px;\n border-radius: 0px;\n background: ", ";\n cursor: ew-resize;\n height: ", ";\n}\ninput[type=range].OtterGui-range:focus::-ms-fill-lower {\n background: ", ";\n outline: none;\n}\ninput[type=range].OtterGui-range:focus::-ms-fill-upper {\n background: ", ";\n outline: none;\n}\n\n"])
                    }
                }))
                  , r = i(1)
                  , i = i(3)
                  , o = r.theme.colors.componentBackground
                  , a = r.theme.colors.componentForeground
                  , s = r.theme.colors.componentActive;
                e.exports = i(n, r.theme.sizing.componentHeight, r.theme.sizing.componentHeight, o, r.theme.sizing.componentHeight, a, s, r.theme.sizing.componentHeight, o, s, r.theme.sizing.componentHeight, a, r.theme.sizing.componentHeight, o, o, s, s, a, r.theme.sizing.componentHeight, s, s)
            }
            , function(e, t, r) {
                "use strict";
                !function(t) {
                    var i = r(33)
                      , n = r(13);
                    e.exports = function() {
                        var e = Array.prototype.slice.call(arguments)
                          , e = i.apply(null, e);
                        return t.document && n(i.getCss(e)),
                        e
                    }
                }
                .call(t, r(32))
            }
            , function(e, t) {
                var i = function() {
                    return this
                }();
                try {
                    i = i || Function("return this")() || (0,
                    eval)("this")
                } catch (e) {
                    "object" == typeof window && (i = window)
                }
                e.exports = i
            }
            , function(e, t, i) {
                "use strict";
                var n = i(34);
                e.exports = n(),
                e.exports.csjs = n,
                e.exports.noScope = n({
                    noscope: !0
                }),
                e.exports.getCss = i(12)
            }
            , function(e, t, i) {
                "use strict";
                e.exports = i(35)
            }
            , function(e, t, i) {
                "use strict";
                function d(e) {
                    return r(e) ? e.selector : e
                }
                function _(i, n) {
                    return Object.keys(i).reduce(function(e, t) {
                        return n[t] || (e[t] = i[t]),
                        e
                    }, {})
                }
                var u = i(36)
                  , n = i(7)
                  , r = n.isComposition
                  , l = n.ignoreComposition
                  , c = i(37)
                  , h = i(38)
                  , E = i(11)
                  , T = i(43);
                e.exports = function(e) {
                    var s = void 0 !== (e = void 0 === e ? {} : e).noscope && e.noscope;
                    return function(e, t) {
                        for (var t = Array(arguments.length - 1), i = 1; i < arguments.length; i++)
                            t[i - 1] = arguments[i];
                        e = e,
                        n = t.map(d);
                        var n, e = e.map(function(e, t) {
                            return t !== n.length ? e + n[t] : e
                        }).join(""), r = l(t), e = s ? T(e) : h(e, r), o = u(e.css), a = _(e.classes, r), e = _(e.keyframes, r), r = o.compositions, a = c(a, e, r);
                        return Object.defineProperty(a, E, {
                            enumerable: !1,
                            configurable: !1,
                            writeable: !1,
                            value: o.css
                        })
                    }
                }
            }
            , function(e, t, i) {
                "use strict";
                function o(e) {
                    e = e.trim();
                    return "." === e[0] ? e.substr(1) : e
                }
                i(7).makeComposition;
                var n = /\.([^\s]+)(\s+)(extends\s+)(\.[^{]+)/g;
                e.exports = function(e) {
                    for (var t, i = []; t = n.exec(e); )
                        i.unshift(t);
                    return i.reduce(function(t, e) {
                        var i = o(e[1])
                          , n = e[3]
                          , r = e[4]
                          , e = e.index + e[1].length + e[2].length
                          , n = n.length + r.length;
                        return t.css = t.css.slice(0, e) + " " + t.css.slice(e + n + 1),
                        r.split(",").map(o).forEach(function(e) {
                            t.compositions[i] || (t.compositions[i] = {}),
                            t.compositions[e] || (t.compositions[e] = {}),
                            t.compositions[i][e] = t.compositions[e]
                        }),
                        t
                    }, {
                        css: e,
                        compositions: {}
                    })
                }
            }
            , function(e, t, i) {
                "use strict";
                function a(e) {
                    var n = {}
                      , r = [];
                    return function t(i) {
                        Object.keys(i).forEach(function(e) {
                            n[e] || (n[e] = !0,
                            r.push(e),
                            t(i[e]))
                        })
                    }(e),
                    r
                }
                var s = i(7).makeComposition;
                e.exports = function(r, n, o) {
                    var e = Object.keys(n).reduce(function(e, t) {
                        var i = n[t];
                        return e[i] = s([t], [i], !0),
                        e
                    }, {});
                    return Object.keys(r).reduce(function(e, t) {
                        var i = r[t]
                          , n = o[t]
                          , n = n ? a(n) : []
                          , t = [t].concat(n)
                          , n = t.map(function(e) {
                            return r[e] || e
                        });
                        return e[i] = s(t, n),
                        e
                    }, e)
                }
            }
            , function(e, t, i) {
                "use strict";
                var n = i(39)
                  , r = i(42)
                  , i = i(8)
                  , o = i.classRegex
                  , d = i.keyframesRegex;
                e.exports = function(e, a) {
                    var s = n(e)
                      , t = {
                        classes: o,
                        keyframes: d
                    }
                      , e = Object.keys(t).reduce(function(r, o) {
                        return {
                            css: r.css.replace(t[o], function(e, t, i) {
                                var n = a[i] ? i : s(i);
                                return r[o][n] = i,
                                t + n
                            }),
                            keyframes: r.keyframes,
                            classes: r.classes
                        }
                    }, {
                        css: e,
                        keyframes: {},
                        classes: {}
                    });
                    return r(e)
                }
            }
            , function(e, t, i) {
                "use strict";
                var n = i(40)
                  , r = i(41);
                e.exports = function(e) {
                    var t = n(r(e));
                    return function(e) {
                        return e + "_" + t
                    }
                }
            }
            , function(e, t, i) {
                "use strict";
                e.exports = function(e) {
                    if (0 === e)
                        return "0";
                    for (var t = ""; 0 < e; )
                        t = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"[e % 62] + t,
                        e = Math.floor(e / 62);
                    return t
                }
            }
            , function(e, t, i) {
                "use strict";
                e.exports = function(e) {
                    for (var t = 5381, i = e.length; i; )
                        t = 33 * t ^ e.charCodeAt(--i);
                    return t >>> 0
                }
            }
            , function(e, t, i) {
                var n = i(8).ignoreComments;
                e.exports = function(i) {
                    var r = Object.keys(i.keyframes).reduce(function(e, t) {
                        return e[i.keyframes[t]] = t,
                        e
                    }, {})
                      , e = Object.keys(r);
                    return e.length ? (e = "((?:animation|animation-name)\\s*:[^};]*)(" + e.join("|") + ")([;\\s])" + n,
                    e = new RegExp(e,"g"),
                    {
                        css: i.css.replace(e, function(e, t, i, n) {
                            return t + r[i] + n
                        }),
                        keyframes: i.keyframes,
                        classes: i.classes
                    }) : i
                }
            }
            , function(e, t, i) {
                "use strict";
                function n(e, t) {
                    for (var i = {}; null !== (n = t.exec(e)); ) {
                        var n = n[2];
                        i[n] = n
                    }
                    return i
                }
                var i = i(8)
                  , r = i.classRegex
                  , o = i.keyframesRegex;
                e.exports = function(e) {
                    return {
                        css: e,
                        keyframes: n(e, o),
                        classes: n(e, r)
                    }
                }
            }
            , function(e, t, i) {
                "use strict";
                var n = i(11);
                e.exports = function(e) {
                    return e[n]
                }
            }
            , function(e, t, i) {
                "use strict";
                e.exports = i(12)
            }
            , function(e, t, s) {
                "use strict";
                function i(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = i(s(4))
                  , d = (i(s(0)),
                s(47))
                  , n = function(e) {
                    function a(e, t, i, n) {
                        var r, o;
                        if (this instanceof a)
                            return (r = function(e, t) {
                                if (e)
                                    return !t || "object" != typeof t && "function" != typeof t ? e : t;
                                throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                            }(this, (a.__proto__ || Object.getPrototypeOf(a)).call(this))).opts = t,
                            r.container = s(2)(e, t.label, i),
                            s(5)(r.container, "", i),
                            (o = r.container.appendChild(document.createElement("button"))).className = d["OtterGui-button"],
                            o.textContent = t.label,
                            o.addEventListener("click", t.action),
                            o.addEventListener("mouseup", function() {
                                o.blur()
                            }),
                            r;
                        throw new TypeError("Cannot call a class as a function")
                    }
                    var t = a;
                    if ("function" != typeof e && null !== e)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    return t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e),
                    a
                }(n.default);
                t.default = n,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(["\n\n.OtterGui-button {\n box-sizing: border-box !important;\n color: ", ";\n background-color: ", ";\n\n position: absolute;\n text-align: center;\n height: ", ";\n line-height: ", ";\n padding-top: 0px;\n padding-bottom: 0px;\n width: calc(100% - ", ");\n border: none;\n cursor: pointer;\n right: 0;\n font-family: inherit;\n}\n\n\n.OtterGui-button:focus {\n outline:none;\n}\n.OtterGui-button::-moz-focus-inner {\n border:0;\n}\n\n.OtterGui-button:hover,\n.OtterGui-button:focus {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-button:active {\n color: ", " !important;\n background-color: ", " !important;\n}\n\n"], {
                    raw: {
                        value: Object.freeze(["\n\n.OtterGui-button {\n box-sizing: border-box !important;\n color: ", ";\n background-color: ", ";\n\n position: absolute;\n text-align: center;\n height: ", ";\n line-height: ", ";\n padding-top: 0px;\n padding-bottom: 0px;\n width: calc(100% - ", ");\n border: none;\n cursor: pointer;\n right: 0;\n font-family: inherit;\n}\n\n\n.OtterGui-button:focus {\n outline:none;\n}\n.OtterGui-button::-moz-focus-inner {\n border:0;\n}\n\n.OtterGui-button:hover,\n.OtterGui-button:focus {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-button:active {\n color: ", " !important;\n background-color: ", " !important;\n}\n\n"])
                    }
                }))
                  , r = i(1)
                  , i = i(3);
                e.exports = i(n, r.theme.colors.textSecondary, r.theme.colors.componentBackground, r.theme.sizing.componentHeight, r.theme.sizing.componentHeight, r.theme.sizing.labelWidth, r.theme.colors.textHover, r.theme.colors.componentForeground, r.theme.colors.textActive, r.theme.colors.componentActive)
            }
            , function(e, t, a) {
                "use strict";
                function i(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = function(e, t, i) {
                    return t && o(e.prototype, t),
                    i && o(e, i),
                    e
                }
                  , r = i(a(4))
                  , s = (i(a(0)),
                a(49))
                  , r = function(e) {
                    function o(e, t, i, n) {
                        var r;
                        if (this instanceof o)
                            return (r = function(e, t) {
                                if (e)
                                    return !t || "object" != typeof t && "function" != typeof t ? e : t;
                                throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                            }(this, (o.__proto__ || Object.getPrototypeOf(o)).call(this))).opts = t,
                            r.container = a(2)(e, t.label, i),
                            a(5)(r.container, t.label, i),
                            r.input = r.container.appendChild(document.createElement("input")),
                            r.input.id = "checkbox-" + t.label + n,
                            r.input.type = "checkbox",
                            r.input.checked = t.initial,
                            r.input.className = s["OtterGui-checkbox"],
                            t.label && r.input.setAttribute("aria-label", t.label),
                            r.container.appendChild(document.createElement("label")).htmlFor = r.input.id,
                            setTimeout(function() {
                                r.emit("initialized", r.input.checked)
                            }),
                            r.input.onchange = function(e) {
                                r.emit("input", e.target.checked)
                            }
                            ,
                            r;
                        throw new TypeError("Cannot call a class as a function")
                    }
                    var t = o;
                    if ("function" != typeof e && null !== e)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    return t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e),
                    n(o, [{
                        key: "SetValue",
                        value: function(e) {
                            this.input.checked = e
                        }
                    }, {
                        key: "GetValue",
                        value: function() {
                            return this.input.checked
                        }
                    }]),
                    o
                }(r.default);
                function o(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.default = r,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(['\n\ninput[type=checkbox].OtterGui-checkbox {\n opacity: 0;\n appearance: none;\n -moz-appearance: none;\n -webkit-appearance: none;\n margin: 0;\n border-radius: 0;\n cursor: pointer;\n}\n\ninput[type=checkbox].OtterGui-checkbox + label {\n margin: 0;\n}\n\ninput[type=checkbox].OtterGui-checkbox + label:before {\n content: "";\n display: inline-block;\n width: ', ";\n height: ", ";\n padding: 0;\n margin: 0;\n vertical-align: middle;\n background-color: ", ";\n border-radius: 0px;\n cursor: pointer;\n box-sizing: content-box;\n -moz-box-sizing: content-box;\n -webkit-box-sizing: content-box;\n\n}\n\n\ninput[type=checkbox].OtterGui-checkbox:hover + label:before {\n width: calc(", " - (", " * 2));\n height: calc(", " - (", " * 2));\n background-color: ", ";\n border: solid 4px ", ";\n}\n\n\ninput[type=checkbox]:checked.OtterGui-checkbox + label:before {\n width: calc(", " - (", " * 2));\n height: calc(", " - (", " * 2));\n background-color: ", ";\n border: solid ", " ", ";\n}\n\n\ninput[type=checkbox]:checked.OtterGui-checkbox:focus + label:before {\n width: calc(", " - (", " * 2));\n height: calc(", " - (", " * 2));\n background-color: ", ";\n border: solid ", " ", ";\n}\n\n\ninput[type=checkbox].OtterGui-checkbox:focus + label:before {\n background-color: ", ";\n}\n\n"], {
                    raw: {
                        value: Object.freeze(['\n\ninput[type=checkbox].OtterGui-checkbox {\n opacity: 0;\n appearance: none;\n -moz-appearance: none;\n -webkit-appearance: none;\n margin: 0;\n border-radius: 0;\n cursor: pointer;\n}\n\ninput[type=checkbox].OtterGui-checkbox + label {\n margin: 0;\n}\n\ninput[type=checkbox].OtterGui-checkbox + label:before {\n content: "";\n display: inline-block;\n width: ', ";\n height: ", ";\n padding: 0;\n margin: 0;\n vertical-align: middle;\n background-color: ", ";\n border-radius: 0px;\n cursor: pointer;\n box-sizing: content-box;\n -moz-box-sizing: content-box;\n -webkit-box-sizing: content-box;\n\n}\n\n\ninput[type=checkbox].OtterGui-checkbox:hover + label:before {\n width: calc(", " - (", " * 2));\n height: calc(", " - (", " * 2));\n background-color: ", ";\n border: solid 4px ", ";\n}\n\n\ninput[type=checkbox]:checked.OtterGui-checkbox + label:before {\n width: calc(", " - (", " * 2));\n height: calc(", " - (", " * 2));\n background-color: ", ";\n border: solid ", " ", ";\n}\n\n\ninput[type=checkbox]:checked.OtterGui-checkbox:focus + label:before {\n width: calc(", " - (", " * 2));\n height: calc(", " - (", " * 2));\n background-color: ", ";\n border: solid ", " ", ";\n}\n\n\ninput[type=checkbox].OtterGui-checkbox:focus + label:before {\n background-color: ", ";\n}\n\n"])
                    }
                }))
                  , r = i(1)
                  , i = i(3);
                e.exports = i(n, r.theme.sizing.componentHeight, r.theme.sizing.componentHeight, r.theme.colors.componentBackground, r.theme.sizing.componentHeight, "4px", r.theme.sizing.componentHeight, "4px", r.theme.colors.componentBackgroundHover, r.theme.colors.componentBackground, r.theme.sizing.componentHeight, "4px", r.theme.sizing.componentHeight, "4px", r.theme.colors.componentForeground, "4px", r.theme.colors.componentBackground, r.theme.sizing.componentHeight, "4px", r.theme.sizing.componentHeight, "4px", r.theme.colors.componentForeground, "4px", r.theme.colors.componentBackgroundHover, r.theme.colors.componentBackgroundHover)
            }
            , function(e, t, A) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var i = function(e, t, i) {
                    return t && r(e.prototype, t),
                    i && r(e, i),
                    e
                }
                  , n = A(4)
                  , n = n && n.__esModule ? n : {
                    default: n
                }
                  , I = A(51)
                  , n = function(e) {
                    function T(e, t, i, n) {
                        if (!(this instanceof T))
                            throw new TypeError("Cannot call a class as a function");
                        var r, o, a, s, d, _, u, l = function(e, t) {
                            if (e)
                                return !t || "object" != typeof t && "function" != typeof t ? e : t;
                            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                        }(this, (T.__proto__ || Object.getPrototypeOf(T)).call(this));
                        if (l.opts = t,
                        l.container = A(2)(e, t.label, i),
                        A(5)(l.container, t.label, i),
                        l.input = document.createElement("select"),
                        l.input.className = I["OtterGui-select-dropdown"],
                        t.label && l.input.setAttribute("aria-label", t.label),
                        (o = document.createElement("span")).classList.add(I["OtterGui-select-triangle"], I["OtterGui-select-triangle--down"]),
                        (a = document.createElement("span")).classList.add(I["OtterGui-select-triangle"], I["OtterGui-select-triangle--up"]),
                        l.container.appendChild(o),
                        l.container.appendChild(a),
                        Array.isArray(t.options))
                            for (r = 0; r < t.options.length; r++)
                                d = t.options[r],
                                (_ = document.createElement("option")).value = _.textContent = d,
                                t.initial === d && (_.selected = "selected"),
                                l.input.appendChild(_);
                        else
                            for (u = Object.keys(t.options),
                            r = 0; r < u.length; r++)
                                s = u[r],
                                (_ = document.createElement("option")).value = s,
                                t.initial === s && (_.selected = "selected"),
                                _.textContent = t.options[s],
                                l.input.appendChild(_);
                        l.container.appendChild(l.input),
                        l.input.onchange = function(e) {
                            l.emit("input", e.target.value)
                        }
                        ;
                        function c() {
                            o.classList.add(I["OtterGui-select-triangle--down-highlight"]),
                            a.classList.add(I["OtterGui-select-triangle--up-highlight"])
                        }
                        function h() {
                            o.classList.remove(I["OtterGui-select-triangle--down-highlight"]),
                            a.classList.remove(I["OtterGui-select-triangle--up-highlight"])
                        }
                        var E = !1;
                        return l.input.addEventListener("mouseover", c),
                        l.input.addEventListener("focus", function() {
                            E = !0,
                            c()
                        }),
                        l.input.addEventListener("blur", function() {
                            E = !1,
                            h()
                        }),
                        l.input.addEventListener("mouseleave", function() {
                            E || h()
                        }),
                        l
                    }
                    var t = T;
                    if ("function" != typeof e && null !== e)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    return t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e),
                    i(T, [{
                        key: "SetValue",
                        value: function(e) {
                            this.input.value = e
                        }
                    }, {
                        key: "GetValue",
                        value: function() {
                            return this.input.value
                        }
                    }]),
                    T
                }(n.default);
                function r(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.default = n,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(["\n\n.OtterGui-select-dropdown {\n display: inline-block;\n position: absolute;\n width: calc(100% - ", ");\n padding-left: 1.5%;\n height: ", ";\n border: none;\n border-radius: 0;\n -webkit-appearance: none;\n -moz-appearance: none;\n -o-appearance:none;\n appearance: none;\n font-family: inherit;\n background-color: ", ";\n color: ", ";\n box-sizing: border-box !important;\n -moz-box-sizing: border-box !important;\n -webkit-box-sizing: border-box !important;\n}\n\n\n.OtterGui-select-dropdown:focus {\n outline: none;\n}\n.OtterGui-select-dropdown::-moz-focus-inner {\n border: 0;\n}\n\n\n.OtterGui-select-dropdown:focus,\n.OtterGui-select-dropdown:hover {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-select-dropdown::-ms-expand {\n display:none;\n}\n.OtterGui-select-triangle {\n content: ' ';\n border-right: 3px solid transparent;\n border-left: 3px solid transparent;\n line-height: ", ";\n position: absolute;\n right: 2.5%;\n z-index: 1;\n pointer-events: none;\n}\n\n.OtterGui-select-triangle--up {\n bottom: 55%;\n border-bottom: 5px solid ", ";\n border-top: 0px transparent;\n}\n\n.OtterGui-select-triangle--down {\n top: 55%;\n border-top: 5px solid ", ";\n border-bottom: 0px transparent;\n}\n\n.OtterGui-select-triangle--up-highlight {\n border-bottom-color: ", ";\n}\n\n.OtterGui-select-triangle--down-highlight {\n border-top-color: ", ";\n}\n\n"], {
                    raw: {
                        value: Object.freeze(["\n\n.OtterGui-select-dropdown {\n display: inline-block;\n position: absolute;\n width: calc(100% - ", ");\n padding-left: 1.5%;\n height: ", ";\n border: none;\n border-radius: 0;\n -webkit-appearance: none;\n -moz-appearance: none;\n -o-appearance:none;\n appearance: none;\n font-family: inherit;\n background-color: ", ";\n color: ", ";\n box-sizing: border-box !important;\n -moz-box-sizing: border-box !important;\n -webkit-box-sizing: border-box !important;\n}\n\n\n.OtterGui-select-dropdown:focus {\n outline: none;\n}\n.OtterGui-select-dropdown::-moz-focus-inner {\n border: 0;\n}\n\n\n.OtterGui-select-dropdown:focus,\n.OtterGui-select-dropdown:hover {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-select-dropdown::-ms-expand {\n display:none;\n}\n.OtterGui-select-triangle {\n content: ' ';\n border-right: 3px solid transparent;\n border-left: 3px solid transparent;\n line-height: ", ";\n position: absolute;\n right: 2.5%;\n z-index: 1;\n pointer-events: none;\n}\n\n.OtterGui-select-triangle--up {\n bottom: 55%;\n border-bottom: 5px solid ", ";\n border-top: 0px transparent;\n}\n\n.OtterGui-select-triangle--down {\n top: 55%;\n border-top: 5px solid ", ";\n border-bottom: 0px transparent;\n}\n\n.OtterGui-select-triangle--up-highlight {\n border-bottom-color: ", ";\n}\n\n.OtterGui-select-triangle--down-highlight {\n border-top-color: ", ";\n}\n\n"])
                    }
                }))
                  , r = i(1)
                  , i = i(3);
                e.exports = i(n, r.theme.sizing.labelWidth, r.theme.sizing.componentHeight, r.theme.colors.componentBackground, r.theme.colors.textSecondary, r.theme.colors.textHover, r.theme.colors.componentForeground, r.theme.sizing.componentHeight, r.theme.colors.textSecondary, r.theme.colors.textSecondary, r.theme.colors.textHover, r.theme.colors.textHover)
            }
            , function(e, t, a) {
                "use strict";
                function i(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = function(e, t, i) {
                    return t && o(e.prototype, t),
                    i && o(e, i),
                    e
                }
                  , r = i(a(4))
                  , s = i(a(0))
                  , r = function(e) {
                    function o(e, t, i, n) {
                        var r;
                        if (this instanceof o)
                            return (r = function(e, t) {
                                if (e)
                                    return !t || "object" != typeof t && "function" != typeof t ? e : t;
                                throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                            }(this, (o.__proto__ || Object.getPrototypeOf(o)).call(this))).opts = t,
                            r.container = a(2)(e, t.label, i),
                            a(5)(r.container, t.label, i),
                            r.input = r.container.appendChild(document.createElement("input")),
                            r.input.type = "text",
                            r.input.className = "OtterGui-text",
                            t.initial && (r.input.value = t.initial),
                            t.label && r.input.setAttribute("aria-label", t.label),
                            (0,
                            s.default)(r.input, {
                                position: "absolute",
                                paddingLeft: "6px",
                                height: i.sizing.componentHeight,
                                width: "calc(100% - " + i.sizing.labelWidth + ")",
                                border: "none",
                                background: i.colors.componentBackground,
                                color: i.colors.textSecondary,
                                fontFamily: "inherit",
                                "box-sizing": "border-box",
                                "-moz-box-sizing": "border-box",
                                "-webkit-box-sizing": "border-box",
                                resize: "vertical"
                            }),
                            setTimeout(function() {
                                r.emit("initialized", r.input.value)
                            }),
                            r.input.oninput = function(e) {
                                r.emit("input", e.target.value)
                            }
                            ,
                            r.input.addEventListener("focus", function() {
                                (0,
                                s.default)(r.input, {
                                    outline: "none"
                                }),
                                r.focused = !0
                            }),
                            r.input.addEventListener("blur", function() {
                                r.focused = !1
                            }),
                            r;
                        throw new TypeError("Cannot call a class as a function")
                    }
                    var t = o;
                    if ("function" != typeof e && null !== e)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    return t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e),
                    n(o, [{
                        key: "SetValue",
                        value: function(e) {
                            !0 !== this.focused && (this.input.value = e)
                        }
                    }, {
                        key: "GetValue",
                        value: function() {
                            return this.input.value
                        }
                    }]),
                    o
                }(r.default);
                function o(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.default = r,
                e.exports = t.default
            }
            , function(e, t, _) {
                "use strict";
                function i(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = function(e, t, i) {
                    return t && a(e.prototype, t),
                    i && a(e, i),
                    e
                }
                  , r = i(_(4))
                  , u = i(_(54))
                  , l = i(_(0))
                  , c = i(_(14))
                  , o = i(_(13))
                  , r = function(e) {
                    function d(e, t, i, n) {
                        if (!(this instanceof d))
                            throw new TypeError("Cannot call a class as a function");
                        var r = function(e, t) {
                            if (e)
                                return !t || "object" != typeof t && "function" != typeof t ? e : t;
                            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                        }(this, (d.__proto__ || Object.getPrototypeOf(d)).call(this))
                          , o = (r.opts = t,
                        r.theme = i,
                        t.format = t.format || "rgb",
                        t.initial = t.initial || "#123456",
                        r.container = _(2)(e, t.label, i),
                        _(5)(r.container, t.label, i),
                        r.container.appendChild(document.createElement("span")))
                          , a = (o.className = "OtterGui-color-" + n,
                        _(6)(r.container, "", i, "calc(100% - " + i.sizing.labelWidth + " - 12% - 0.5em)"))
                          , s = (a.setAttribute("readonly", "true"),
                        o.onmouseover = function() {
                            r.picker.$el.style.display = ""
                        }
                        ,
                        t.initial);
                        switch (t.format) {
                        case "rgb":
                        case "hex":
                            s = (0,
                            c.default)(s).toHexString();
                            break;
                        case "array":
                            s = c.default.fromRatio({
                                r: s[0],
                                g: s[1],
                                b: s[2]
                            }).toHexString()
                        }
                        return r.picker = new u.default({
                            el: o,
                            color: s,
                            background: i.colors.componentBackground,
                            width: 125,
                            height: 100
                        }),
                        (0,
                        l.default)(r.picker.$el, {
                            marginTop: i.sizing.componentHeight,
                            display: "none",
                            position: "absolute"
                        }),
                        (0,
                        l.default)(o, {
                            position: "relative",
                            display: "inline-block",
                            width: "12.5%",
                            height: i.sizing.componentHeight,
                            backgroundColor: r.picker.getHexString()
                        }),
                        r.InjectStyles(),
                        o.onmouseout = function(e) {
                            r.picker.$el.style.display = "none"
                        }
                        ,
                        setTimeout(function() {
                            r.emit("initialized", s)
                        }),
                        r.picker.onChange(function(e) {
                            a.value = r.Format(e),
                            (0,
                            l.default)(o, {
                                backgroundColor: e
                            }),
                            r.emit("input", r.Format(e))
                        }),
                        r
                    }
                    var t = d;
                    if ("function" != typeof e && null !== e)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    return t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e),
                    n(d, [{
                        key: "Format",
                        value: function(e) {
                            switch (this.opts.format) {
                            case "rgb":
                                return (0,
                                c.default)(e).toRgbString();
                            case "hex":
                                return (0,
                                c.default)(e).toHexString();
                            case "array":
                                var t = (0,
                                c.default)(e).toRgb();
                                return [t.r / 255, t.g / 255, t.b / 255].map(function(e) {
                                    return e.toFixed(2)
                                });
                            default:
                                return e
                            }
                        }
                    }, {
                        key: "SetValue",
                        value: function(e) {
                            this.picker.setColor(e)
                        }
                    }, {
                        key: "GetValue",
                        value: function() {
                            return this.Format(this.picker.getColor())
                        }
                    }, {
                        key: "InjectStyles",
                        value: function() {
                            (0,
                            o.default)("\n\n .Scp {\n width: 125px;\n height: 100px;\n -webkit-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n position: relative;\n z-index: 1000;\n cursor: pointer;\n }\n .Scp-saturation {\n position: relative;\n width: calc(100% - 25px);\n height: 100%;\n background: linear-gradient(to right, #fff 0%, #f00 100%);\n float: left;\n margin-right: 5px;\n }\n .Scp-brightness {\n width: 100%;\n height: 100%;\n background: linear-gradient(to top, #000 0%, rgba(255,255,255,0) 100%);\n }\n .Scp-sbSelector {\n border: 1px solid;\n position: absolute;\n width: 14px;\n height: 14px;\n background: #fff;\n border-radius: 10px;\n top: -7px;\n left: -7px;\n box-sizing: border-box;\n z-index: 10;\n }\n .Scp-hue {\n width: 20px;\n height: 100%;\n position: relative;\n float: left;\n background: linear-gradient(to bottom, #f00 0%, #f0f 17%, #00f 34%, #0ff 50%, #0f0 67%, #ff0 84%, #f00 100%);\n }\n .Scp-hSelector {\n position: absolute;\n background: #fff;\n border-bottom: 1px solid #000;\n right: -3px;\n width: 10px;\n height: 2px;\n }\n\n ")
                        }
                    }]),
                    d
                }(r.default);
                function a(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.default = r,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                function n(e) {
                    return e = e || {},
                    this.color = null,
                    this.width = 0,
                    this.widthUnits = "px",
                    this.height = 0,
                    this.heightUnits = "px",
                    this.hue = 0,
                    this.position = {
                        x: 0,
                        y: 0
                    },
                    this.huePosition = 0,
                    this.saturationWidth = 0,
                    this.hueHeight = 0,
                    this.maxHue = 0,
                    this.inputIsNumber = !1,
                    this._onSaturationMouseDown = this._onSaturationMouseDown.bind(this),
                    this._onSaturationMouseMove = this._onSaturationMouseMove.bind(this),
                    this._onSaturationMouseUp = this._onSaturationMouseUp.bind(this),
                    this._onHueMouseDown = this._onHueMouseDown.bind(this),
                    this._onHueMouseMove = this._onHueMouseMove.bind(this),
                    this._onHueMouseUp = this._onHueMouseUp.bind(this),
                    this.$el = document.createElement("div"),
                    this.$el.className = "Scp",
                    this.$el.innerHTML = ['<div class="Scp-saturation">', '<div class="Scp-brightness"></div>', '<div class="Scp-sbSelector"></div>', "</div>", '<div class="Scp-hue">', '<div class="Scp-hSelector"></div>', "</div>"].join(""),
                    this.$saturation = this.$el.querySelector(".Scp-saturation"),
                    this.$hue = this.$el.querySelector(".Scp-hue"),
                    this.$sbSelector = this.$el.querySelector(".Scp-sbSelector"),
                    this.$hSelector = this.$el.querySelector(".Scp-hSelector"),
                    this.$saturation.addEventListener("mousedown", this._onSaturationMouseDown),
                    this.$saturation.addEventListener("touchstart", this._onSaturationMouseDown),
                    this.$hue.addEventListener("mousedown", this._onHueMouseDown),
                    this.$hue.addEventListener("touchstart", this._onHueMouseDown),
                    e.el && this.appendTo(e.el),
                    e.background && this.setBackgroundColor(e.background),
                    e.widthUnits && (this.widthUnits = e.widthUnits),
                    e.heightUnits && (this.heightUnits = e.heightUnits),
                    this.setSize(e.width || 175, e.height || 150),
                    this.setColor(e.color),
                    this
                }
                function r(e, t, i) {
                    return Math.min(Math.max(e, t), i)
                }
                function o(e) {
                    return {
                        x: (e = 0 === e.type.indexOf("touch") ? e.touches[0] : e).clientX,
                        y: e.clientY
                    }
                }
                function a(e) {
                    return "#" + ("00000" + (0 | e).toString(16)).substr(-6)
                }
                var s, d, _, u;
                s = i(55),
                d = i(56),
                _ = i(14),
                u = i(59),
                s(n.prototype),
                n.prototype.appendTo = function(e) {
                    return e.appendChild(this.$el),
                    this
                }
                ,
                n.prototype.remove = function() {
                    this._onSaturationMouseUp(),
                    this._onHueMouseUp(),
                    this.$saturation.removeEventListener("mousedown", this._onSaturationMouseDown),
                    this.$saturation.removeEventListener("touchstart", this._onSaturationMouseDown),
                    this.$hue.removeEventListener("mousedown", this._onHueMouseDown),
                    this.$hue.removeEventListener("touchstart", this._onHueMouseDown),
                    this.off(),
                    this.$el.parentNode && this.$el.parentNode.removeChild(this.$el)
                }
                ,
                n.prototype.setColor = function(e) {
                    d(e) ? (this.inputIsNumber = !0,
                    e = a(e)) : this.inputIsNumber = !1,
                    this.color = _(e);
                    e = this.color.toHsv();
                    return isNaN(e.h) || (this.hue = e.h),
                    this._moveSelectorTo(this.saturationWidth * e.s, (1 - e.v) * this.hueHeight),
                    this._moveHueTo((1 - this.hue / 360) * this.hueHeight),
                    this._updateHue(),
                    this
                }
                ,
                n.prototype.setSize = function(e, t) {
                    return this.width = e,
                    this.height = t,
                    this.$el.style.width = this.width + this.widthUnits,
                    this.$el.style.height = this.height + this.heightUnits,
                    this.saturationWidth = this.width - 25,
                    this.$saturation.style.width = this.saturationWidth + "px",
                    this.hueHeight = this.height,
                    this.maxHue = this.hueHeight - 2,
                    this
                }
                ,
                n.prototype.setBackgroundColor = function(e) {
                    return d(e) && (e = a(e)),
                    this.$el.style.padding = "5px",
                    this.$el.style.background = _(e).toHexString(),
                    this
                }
                ,
                n.prototype.setNoBackground = function() {
                    this.$el.style.padding = "0px",
                    this.$el.style.background = "none"
                }
                ,
                n.prototype.onChange = function(e) {
                    return this.on("update", e),
                    this.emit("update", this.getHexString()),
                    this
                }
                ,
                n.prototype.getColor = function() {
                    return this.inputIsNumber ? this.getHexNumber() : this.color.toString()
                }
                ,
                n.prototype.getHexString = function() {
                    return this.color.toHexString().toUpperCase()
                }
                ,
                n.prototype.getHexNumber = function() {
                    return parseInt(this.color.toHex(), 16)
                }
                ,
                n.prototype.getRGB = function() {
                    return this.color.toRgb()
                }
                ,
                n.prototype.getHSV = function() {
                    return this.color.toHsv()
                }
                ,
                n.prototype.isDark = function() {
                    return this.color.isDark()
                }
                ,
                n.prototype.isLight = function() {
                    return this.color.isLight()
                }
                ,
                n.prototype._moveSelectorTo = function(e, t) {
                    this.position.x = r(e, 0, this.saturationWidth),
                    this.position.y = r(t, 0, this.hueHeight),
                    u(this.$sbSelector, {
                        x: this.position.x,
                        y: this.position.y
                    })
                }
                ,
                n.prototype._updateColorFromPosition = function() {
                    this.color = _({
                        h: this.hue,
                        s: this.position.x / this.saturationWidth,
                        v: 1 - this.position.y / this.hueHeight
                    }),
                    this._updateColor()
                }
                ,
                n.prototype._moveHueTo = function(e) {
                    this.huePosition = r(e, 0, this.maxHue),
                    u(this.$hSelector, {
                        y: this.huePosition
                    })
                }
                ,
                n.prototype._updateHueFromPosition = function() {
                    var e = this.color.toHsv();
                    this.hue = 360 * (1 - this.huePosition / this.maxHue),
                    this.color = _({
                        h: this.hue,
                        s: e.s,
                        v: e.v
                    }),
                    this._updateHue()
                }
                ,
                n.prototype._updateHue = function() {
                    var e = _({
                        h: this.hue,
                        s: 1,
                        v: 1
                    });
                    this.$saturation.style.background = "linear-gradient(to right, #fff, " + e.toHexString() + ")",
                    this._updateColor()
                }
                ,
                n.prototype._updateColor = function() {
                    this.$sbSelector.style.background = this.color.toHexString(),
                    this.$sbSelector.style.borderColor = this.color.isDark() ? "#fff" : "#000",
                    this.emit("update", this.color.toHexString())
                }
                ,
                n.prototype._onSaturationMouseDown = function(e) {
                    var t = this.$saturation.getBoundingClientRect()
                      , i = o(e).x
                      , n = o(e).y;
                    this._moveSelectorTo(i - t.left, n - t.top),
                    this._updateColorFromPosition(),
                    window.addEventListener("mouseup", this._onSaturationMouseUp),
                    window.addEventListener("touchend", this._onSaturationMouseUp),
                    window.addEventListener("mousemove", this._onSaturationMouseMove),
                    window.addEventListener("touchmove", this._onSaturationMouseMove),
                    e.preventDefault()
                }
                ,
                n.prototype._onSaturationMouseMove = function(e) {
                    var t = this.$saturation.getBoundingClientRect()
                      , i = o(e).x
                      , e = o(e).y;
                    this._moveSelectorTo(i - t.left, e - t.top),
                    this._updateColorFromPosition()
                }
                ,
                n.prototype._onSaturationMouseUp = function() {
                    window.removeEventListener("mouseup", this._onSaturationMouseUp),
                    window.removeEventListener("touchend", this._onSaturationMouseUp),
                    window.removeEventListener("mousemove", this._onSaturationMouseMove),
                    window.removeEventListener("touchmove", this._onSaturationMouseMove)
                }
                ,
                n.prototype._onHueMouseDown = function(e) {
                    var t = this.$hue.getBoundingClientRect()
                      , i = o(e).y;
                    this._moveHueTo(i - t.top),
                    this._updateHueFromPosition(),
                    window.addEventListener("mouseup", this._onHueMouseUp),
                    window.addEventListener("touchend", this._onHueMouseUp),
                    window.addEventListener("mousemove", this._onHueMouseMove),
                    window.addEventListener("touchmove", this._onHueMouseMove),
                    e.preventDefault()
                }
                ,
                n.prototype._onHueMouseMove = function(e) {
                    var t = this.$hue.getBoundingClientRect()
                      , e = o(e).y;
                    this._moveHueTo(e - t.top),
                    this._updateHueFromPosition()
                }
                ,
                n.prototype._onHueMouseUp = function() {
                    window.removeEventListener("mouseup", this._onHueMouseUp),
                    window.removeEventListener("touchend", this._onHueMouseUp),
                    window.removeEventListener("mousemove", this._onHueMouseMove),
                    window.removeEventListener("touchmove", this._onHueMouseMove)
                }
                ,
                void 0 !== e && e.exports && (e.exports = n)
            }
            , function(e, t, i) {
                function n(e) {
                    if (e) {
                        var t, i = e;
                        for (t in n.prototype)
                            i[t] = n.prototype[t];
                        return i
                    }
                }
                (e.exports = n).prototype.on = n.prototype.addEventListener = function(e, t) {
                    return this._callbacks = this._callbacks || {},
                    (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t),
                    this
                }
                ,
                n.prototype.once = function(e, t) {
                    function i() {
                        this.off(e, i),
                        t.apply(this, arguments)
                    }
                    return i.fn = t,
                    this.on(e, i),
                    this
                }
                ,
                n.prototype.off = n.prototype.removeListener = n.prototype.removeAllListeners = n.prototype.removeEventListener = function(e, t) {
                    if (this._callbacks = this._callbacks || {},
                    0 == arguments.length)
                        this._callbacks = {};
                    else {
                        var i = this._callbacks["$" + e];
                        if (i)
                            if (1 == arguments.length)
                                delete this._callbacks["$" + e];
                            else
                                for (var n, r = 0; r < i.length; r++)
                                    if ((n = i[r]) === t || n.fn === t) {
                                        i.splice(r, 1);
                                        break
                                    }
                    }
                    return this
                }
                ,
                n.prototype.emit = function(e) {
                    this._callbacks = this._callbacks || {};
                    var t = [].slice.call(arguments, 1)
                      , i = this._callbacks["$" + e];
                    if (i)
                        for (var n = 0, r = (i = i.slice(0)).length; n < r; ++n)
                            i[n].apply(this, t);
                    return this
                }
                ,
                n.prototype.listeners = function(e) {
                    return this._callbacks = this._callbacks || {},
                    this._callbacks["$" + e] || []
                }
                ,
                n.prototype.hasListeners = function(e) {
                    return !!this.listeners(e).length
                }
            }
            , function(e, t, i) {
                "use strict";
                var n = i(57);
                e.exports = function(e) {
                    var t = n(e);
                    if ("string" === t) {
                        if (!e.trim())
                            return !1
                    } else if ("number" !== t)
                        return !1;
                    return 0 <= e - e + 1
                }
            }
            , function(e, t, i) {
                var n = i(58)
                  , r = Object.prototype.toString;
                e.exports = function(e) {
                    var t;
                    return void 0 === e ? "undefined" : null === e ? "null" : !0 === e || !1 === e || e instanceof Boolean ? "boolean" : "string" == typeof e || e instanceof String ? "string" : "number" == typeof e || e instanceof Number ? "number" : "function" == typeof e || e instanceof Function ? "function" : void 0 !== Array.isArray && Array.isArray(e) ? "array" : e instanceof RegExp ? "regexp" : e instanceof Date ? "date" : "[object RegExp]" === (t = r.call(e)) ? "regexp" : "[object Date]" === t ? "date" : "[object Arguments]" === t ? "arguments" : "[object Error]" === t ? "error" : n(e) ? "buffer" : "[object Set]" === t ? "set" : "[object WeakSet]" === t ? "weakset" : "[object Map]" === t ? "map" : "[object WeakMap]" === t ? "weakmap" : "[object Symbol]" === t ? "symbol" : "[object Int8Array]" === t ? "int8array" : "[object Uint8Array]" === t ? "uint8array" : "[object Uint8ClampedArray]" === t ? "uint8clampedarray" : "[object Int16Array]" === t ? "int16array" : "[object Uint16Array]" === t ? "uint16array" : "[object Int32Array]" === t ? "int32array" : "[object Uint32Array]" === t ? "uint32array" : "[object Float32Array]" === t ? "float32array" : "[object Float64Array]" === t ? "float64array" : "object"
                }
            }
            , function(e, t) {
                function i(e) {
                    return !!e.constructor && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
                }
                e.exports = function(e) {
                    return null != e && (i(e) || "function" == typeof (t = e).readFloatLE && "function" == typeof t.slice && i(t.slice(0, 0)) || !!e._isBuffer);
                    var t
                }
            }
            , function(e, t, i) {
                "use strict";
                function r() {
                    return Object.keys(u).map(function(e) {
                        return e
                    })
                }
                var d = i(60)
                  , _ = i(61)
                  , u = i(62)
                  , l = i(63)
                  , c = Object.prototype.hasOwnProperty
                  , h = d("transform")
                  , E = {
                    x: "translateX",
                    y: "translateY",
                    z: "translateZ",
                    origin: "transformOrigin"
                };
                (t = e.exports = function(e, t) {
                    var i, n, r, o, a = [], s = t;
                    for (o in s)
                        c.call(E, o) && (s[E[o]] = s[o],
                        delete s[o]);
                    for (i in t)
                        c.call(t, i) && (n = t[i],
                        c.call(u.transform, i) ? (r = u.transform[i],
                        _(n) && (n = n.join(r.separator)),
                        a.push(i + "(" + l(n, r.defaultUnit, r.separator) + ")")) : c.call(u, i) ? (r = u[i],
                        _(n) && (n = n.join(r.separator)),
                        e.style[d(i)] = l(n, r.defaultUnit, r.separator)) : console.warn("dom-transform: this property (`" + i + "`) is not supported."));
                    e.style[h] = a.join(" ")
                }
                ).get = function(e, t) {
                    var i = e.style;
                    if ("string" == typeof t)
                        return c.call(u.transform, t) ? i[h] : i[d(t)];
                    t = t || r();
                    var n = {};
                    return t.forEach(function(e) {
                        n[e] = i[d(e)]
                    }),
                    n
                }
                ,
                t.reset = function(e, t) {
                    var i = e.style;
                    "string" == typeof t ? i[d(t)] = null : (t = t || r()).forEach(function(e) {
                        i[d(e)] = null
                    })
                }
                ,
                t.isSupported = function() {
                    return 0 < h.length
                }
            }
            , function(e, t) {
                function i(e) {
                    if (e = e.replace(/-([a-z])/g, function(e, t) {
                        return t.toUpperCase()
                    }),
                    void 0 === r[e])
                        for (var t = e.charAt(0).toUpperCase() + e.slice(1), i = o.length; i--; ) {
                            var n = o[i] + t;
                            if (void 0 !== r[n])
                                return n
                        }
                    return e
                }
                var r = "undefined" != typeof document ? document.createElement("p").style : {}
                  , o = ["O", "ms", "Moz", "Webkit"]
                  , n = /([A-Z])/g
                  , a = {};
                e.exports = function(e) {
                    return e in a ? a[e] : a[e] = i(e)
                }
                ,
                e.exports.dash = function(e) {
                    return e = i(e),
                    n.test(e) && (e = "-" + e.replace(n, "-$1"),
                    n.lastIndex = 0),
                    e.toLowerCase()
                }
            }
            , function(e, t) {
                var i = Array.isArray
                  , n = Object.prototype.toString;
                e.exports = i || function(e) {
                    return !!e && "[object Array]" == n.call(e)
                }
            }
            , function(e, t, i) {
                "use strict";
                e.exports = {
                    transform: {
                        translate: {
                            defaultUnit: "px"
                        },
                        translate3d: {
                            defaultUnit: "px"
                        },
                        translateX: {
                            defaultUnit: "px"
                        },
                        translateY: {
                            defaultUnit: "px"
                        },
                        translateZ: {
                            defaultUnit: "px"
                        },
                        scale: {
                            defaultUnit: ""
                        },
                        scale3d: {
                            defaultUnit: ""
                        },
                        scaleX: {
                            defaultUnit: ""
                        },
                        scaleY: {
                            defaultUnit: ""
                        },
                        scaleZ: {
                            defaultUnit: ""
                        },
                        rotate: {
                            defaultUnit: "deg"
                        },
                        rotate3d: {
                            defaultUnit: ""
                        },
                        rotateX: {
                            defaultUnit: "deg"
                        },
                        rotateY: {
                            defaultUnit: "deg"
                        },
                        rotateZ: {
                            defaultUnit: "deg"
                        },
                        skew: {
                            defaultUnit: "deg"
                        },
                        skewX: {
                            defaultUnit: "deg"
                        },
                        skewY: {
                            defaultUnit: "deg"
                        },
                        perspective: {
                            defaultUnit: "px"
                        },
                        matrix: {
                            defaultUnit: ""
                        },
                        matrix3d: {
                            defaultUnit: ""
                        }
                    },
                    transformOrigin: {
                        defaultUnit: "px",
                        separator: " "
                    }
                }
            }
            , function(e, t, i) {
                "use strict";
                var r = i(64)
                  , o = /^-?\d+(\.\d+)?$/;
                e.exports = function(e, t, i) {
                    var n;
                    return i = i || ",",
                    "number" == typeof e ? "" + e + t : (n = new RegExp(i,"g"),
                    e.split(n.test(e) ? i : " ").map(function(e) {
                        return e = r(e),
                        o.test(e) && (e += t),
                        e
                    }).join(i))
                }
            }
            , function(e, t) {
                (t = e.exports = function(e) {
                    return e.replace(/^\s*|\s*$/g, "")
                }
                ).left = function(e) {
                    return e.replace(/^\s*/, "")
                }
                ,
                t.right = function(e) {
                    return e.replace(/\s*$/, "")
                }
            }
            , function(e, t, o) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var i = function(e, t, i) {
                    return t && r(e.prototype, t),
                    i && r(e, i),
                    e
                }
                  , n = o(0)
                  , a = n && n.__esModule ? n : {
                    default: n
                }
                  , s = o(66)
                  , n = (i(d, [{
                    key: "Toggle",
                    value: function() {
                        this.open = !this.open,
                        this.SetOpen(this.open)
                    }
                }, {
                    key: "SetOpen",
                    value: function(e) {
                        (this.open = e) ? (this.folderContainer.classList.remove(s["OtterGui-folder-closed"]),
                        this.arrow.innerHTML = "&#9662;") : (this.folderContainer.classList.add(s["OtterGui-folder-closed"]),
                        this.arrow.innerHTML = "&#9656;")
                    }
                }]),
                d);
                function d(e, t, i, n) {
                    var r = this;
                    if (!(this instanceof d))
                        throw new TypeError("Cannot call a class as a function");
                    this.opts = t,
                    this.container = o(2)(e, t.label, i),
                    this.container.classList.add(s["OtterGui-folder"]),
                    this.container.setAttribute("role", "button"),
                    this.container.setAttribute("tabIndex", "0"),
                    this.arrow = this.container.appendChild(document.createElement("div")),
                    this.arrow.innerHTML = "&#9662;",
                    (0,
                    a.default)(this.arrow, {
                        width: "1.5em"
                    }),
                    this.label = this.container.appendChild(document.createElement("div")),
                    this.label.innerHTML = t.label,
                    this.container.onclick = function() {
                        r.Toggle()
                    }
                    ,
                    this.container.addEventListener("mouseup", function() {
                        r.container.blur()
                    }),
                    this.container.addEventListener("keydown", function(e) {
                        13 !== e.which && 32 !== e.which || r.Toggle()
                    }),
                    this.folderContainer = e.appendChild(document.createElement("div")),
                    this.folderContainer.classList.add(s["OtterGui-folder-contents"]),
                    this.open = this.opts.open || !1,
                    this.SetOpen(this.open)
                }
                function r(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.default = n,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(["\n\n.OtterGui-folder {\n cursor: pointer;\n padding-left: 0.5em;\n color: ", ";\n}\n\n.OtterGui-folder div {\n display: inline-block;\n vertical-align: sub;\n line-height: calc(", " + 5px);\n}\n\n.OtterGui-folder:hover,\n.OtterGui-folder:focus {\n color: ", ";\n background-color: ", ";\n outline: none;\n}\n\n\n.OtterGui-folder-contents {\n display: block;\n box-sizing: border-box;\n padding-left: 14px;\n margin-bottom: 5px;\n border-left: 2px solid ", ";\n}\n\n.OtterGui-folder-contents.OtterGui-folder-closed {\n height: 0;\n display: none;\n}\n\n\n"], {
                    raw: {
                        value: Object.freeze(["\n\n.OtterGui-folder {\n cursor: pointer;\n padding-left: 0.5em;\n color: ", ";\n}\n\n.OtterGui-folder div {\n display: inline-block;\n vertical-align: sub;\n line-height: calc(", " + 5px);\n}\n\n.OtterGui-folder:hover,\n.OtterGui-folder:focus {\n color: ", ";\n background-color: ", ";\n outline: none;\n}\n\n\n.OtterGui-folder-contents {\n display: block;\n box-sizing: border-box;\n padding-left: 14px;\n margin-bottom: 5px;\n border-left: 2px solid ", ";\n}\n\n.OtterGui-folder-contents.OtterGui-folder-closed {\n height: 0;\n display: none;\n}\n\n\n"])
                    }
                }))
                  , r = i(1)
                  , i = i(3);
                e.exports = i(n, r.theme.colors.textPrimary, r.theme.sizing.componentHeight, r.theme.colors.textHover, r.theme.colors.componentForeground, r.theme.colors.componentBackground)
            }
            , function(e, t, d) {
                "use strict";
                function i(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = function(e, t, i) {
                    return t && o(e.prototype, t),
                    i && o(e, i),
                    e
                }
                  , r = i(d(4))
                  , _ = i(d(0))
                  , u = d(68)
                  , r = function(e) {
                    function s(e, t, i, n) {
                        var r, o, a;
                        if (this instanceof s)
                            return (r = function(e, t) {
                                if (e)
                                    return !t || "object" != typeof t && "function" != typeof t ? e : t;
                                throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                            }(this, (s.__proto__ || Object.getPrototypeOf(s)).call(this))).opts = t,
                            r.opts.fileReadFunc = r.opts.fileReadFunc || "readAsDataURL",
                            r.file = null,
                            r.fileName = null,
                            r.container = d(2)(e, t.label, i),
                            r.container.classList.add(u["OtterGui-file-container"]),
                            r.container.setAttribute("role", "button"),
                            r.container.setAttribute("tabIndex", "0"),
                            (0,
                            _.default)(r.container, {
                                width: "100%",
                                "box-sizing": "border-box",
                                "-moz-box-sizing": "border-box",
                                "-webkit-box-sizing": "border-box",
                                height: "unset",
                                padding: "8px"
                            }),
                            (e = r.container.appendChild(document.createElement("div"))).innerHTML = t.label,
                            (0,
                            _.default)(e, "padding-bottom", "5px"),
                            (o = r.container.appendChild(document.createElement("input"))).setAttribute("type", "file"),
                            o.setAttribute("multiple", !1),
                            o.style.display = "none",
                            t.label && o.setAttribute("aria-label", t.label),
                            r.fileLabel = r.container.appendChild(document.createElement("div")),
                            r.fileLabel.innerHTML = "Choose a file...",
                            o.addEventListener("change", a = function(e) {
                                e.dataTransfer ? t = e.dataTransfer.files : e.target && (t = e.target.files),
                                t[0];
                                var t, i = new FileReader;
                                i.onload = function() {
                                    r.file = i.result,
                                    r.fileLabel.innerHTML = t[0].name,
                                    r.emit("input", r.file)
                                }
                                ,
                                i[r.opts.fileReadFunc](t[0])
                            }
                            ),
                            r.container.addEventListener("dragover", function(e) {
                                e.preventDefault(),
                                e.stopPropagation(),
                                r.container.classList.add(u["OtterGui-dragover"])
                            }),
                            r.container.addEventListener("dragleave", function(e) {
                                e.preventDefault(),
                                e.stopPropagation(),
                                r.container.classList.remove(u["OtterGui-dragover"])
                            }),
                            r.container.addEventListener("drop", function(e) {
                                e.preventDefault(),
                                e.stopPropagation(),
                                r.container.classList.remove(u["OtterGui-dragover"]),
                                a(e)
                            }),
                            r.container.onclick = function() {
                                o.click()
                            }
                            ,
                            r.container.addEventListener("keydown", function(e) {
                                13 !== e.which && 32 !== e.which || o.click()
                            }),
                            r.container.addEventListener("mouseup", function() {
                                r.container.blur()
                            }),
                            r;
                        throw new TypeError("Cannot call a class as a function")
                    }
                    var t = s;
                    if ("function" != typeof e && null !== e)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    return t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e),
                    n(s, [{
                        key: "SetValue",
                        value: function(e) {}
                    }, {
                        key: "GetValue",
                        value: function() {
                            return this.file
                        }
                    }]),
                    s
                }(r.default);
                function o(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.default = r,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(["\n\n.OtterGui-file-container {\n display: inline-block;\n outline: none;\n padding-top: 8px;\n padding-bottom: 8px;\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-file-container:hover,\n.OtterGui-file-container:focus {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-file-container:active {\n color: ", " !important;\n background-color: ", " !important;\n}\n\n.OtterGui-dragover {\n background-color: ", ";\n box-shadow: inset 0 0 0 3px ", ";\n}\n\n\n"], {
                    raw: {
                        value: Object.freeze(["\n\n.OtterGui-file-container {\n display: inline-block;\n outline: none;\n padding-top: 8px;\n padding-bottom: 8px;\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-file-container:hover,\n.OtterGui-file-container:focus {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-file-container:active {\n color: ", " !important;\n background-color: ", " !important;\n}\n\n.OtterGui-dragover {\n background-color: ", ";\n box-shadow: inset 0 0 0 3px ", ";\n}\n\n\n"])
                    }
                }))
                  , r = i(1)
                  , i = i(3);
                e.exports = i(n, r.theme.colors.textPrimary, r.theme.colors.componentBackground, r.theme.colors.textHover, r.theme.colors.componentForeground, r.theme.colors.textActive, r.theme.colors.componentActive, r.theme.colors.componentBackground, r.theme.colors.componentForeground)
            }
            , function(e, t, r) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var i = function(e, t, i) {
                    return t && s(e.prototype, t),
                    i && s(e, i),
                    e
                }
                  , n = r(0)
                  , o = n && n.__esModule ? n : {
                    default: n
                };
                function a(e, t, i, n) {
                    if (!(this instanceof a))
                        throw new TypeError("Cannot call a class as a function");
                    this.opts = t,
                    this.container = r(2)(e, t.label, i),
                    r(5)(this.container, t.label, i),
                    this.text = this.container.appendChild(document.createElement("div")),
                    (0,
                    o.default)(this.text, {
                        display: "inline-block",
                        height: "unset",
                        width: "calc(100% - " + i.sizing.labelWidth + ")",
                        border: "none",
                        color: i.colors.textSecondary,
                        fontFamily: "inherit",
                        "box-sizing": "border-box",
                        "-moz-box-sizing": "border-box",
                        "-webkit-box-sizing": "border-box",
                        verticalAlign: "sub",
                        "line-height": i.sizing.componentHeight,
                        "user-select": "text"
                    }),
                    t.label && this.text.setAttribute("aria-label", t.label)
                }
                function s(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                i(a, [{
                    key: "SetValue",
                    value: function(e) {
                        this.text.innerHTML = e.toString()
                    }
                }, {
                    key: "GetValue",
                    value: function() {
                        return this.text.innerHTML.toString()
                    }
                }]),
                t.default = a,
                e.exports = t.default
            }
            , function(e, t, _) {
                "use strict";
                function i(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                function u(e, t, i) {
                    return Math.min(Math.max(e, t), i)
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = function(e, t, i) {
                    return t && o(e.prototype, t),
                    i && o(e, i),
                    e
                }
                  , r = i(_(4))
                  , l = i(_(0))
                  , c = i(_(10))
                  , h = _(71)
                  , r = function(e) {
                    function d(e, n, t, i) {
                        if (!(this instanceof d))
                            throw new TypeError("Cannot call a class as a function");
                        var r = function(e, t) {
                            if (e)
                                return !t || "object" != typeof t && "function" != typeof t ? e : t;
                            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                        }(this, (d.__proto__ || Object.getPrototypeOf(d)).call(this));
                        if (r.opts = n,
                        r.container = _(2)(e, n.label, t),
                        _(5)(r.container, n.label, t),
                        n.step && n.steps)
                            throw new Error("Cannot specify both step and steps. Got step = " + n.step + ", steps = ",n.steps);
                        if (r.input = r.container.appendChild(document.createElement("span")),
                        r.input.className = h["OtterGui-interval"],
                        r.handle = document.createElement("span"),
                        r.handle.className = h["OtterGui-interval-handle"],
                        r.input.appendChild(r.handle),
                        Array.isArray(n.initial) || (n.initial = []),
                        "log" === n.scale) {
                            if (n.max = (0,
                            c.default)(n.max) ? n.max : 100,
                            n.min = (0,
                            c.default)(n.min) ? n.min : .1,
                            n.min * n.max <= 0)
                                throw new Error("Log range min/max must have the same sign and not equal zero. Got min = " + n.min + ", max = " + n.max);
                            if (r.logmin = n.min,
                            r.logmax = n.max,
                            r.logsign = 0 < n.min ? 1 : -1,
                            r.logmin = Math.abs(r.logmin),
                            r.logmax = Math.abs(r.logmax),
                            n.min = 0,
                            n.max = 100,
                            (0,
                            c.default)(n.step))
                                throw new Error("Log may only use steps (integer number of steps), not a step value. Got step =" + n.step);
                            if (n.step = 1,
                            n.initial = [r.InverseScaleValue((0,
                            c.default)(n.initial) ? n.initial[0] : scaleValue(n.min + .25 * (n.max - n.min))), r.InverseScaleValue((0,
                            c.default)(n.initial) ? n.initial[1] : scaleValue(n.min + .75 * (n.max - n.min)))],
                            r.ScaleValue(n.initial[0]) * r.ScaleValue(n.max) <= 0 || scaleValue(n.initial[1]) * r.ScaleValue(n.max) <= 0)
                                throw new Error("Log range initial value must have the same sign as min/max and must not equal zero. Got initial value = [" + r.ScaleValue(n.initial[0]) + ", " + r.ScaleValue(n.initial[1]) + "]")
                        } else
                            n.max = (0,
                            c.default)(n.max) ? n.max : 100,
                            n.min = (0,
                            c.default)(n.min) ? n.min : 0,
                            n.step = (0,
                            c.default)(n.step) ? n.step : .01,
                            n.initial = [(0,
                            c.default)(n.initial[0]) ? n.initial[0] : .25 * (n.min + n.max), (0,
                            c.default)(n.initial[1]) ? n.initial[1] : .75 * (n.min + n.max)];
                        (0,
                        c.default)(n.steps) && (n.step = (0,
                        c.default)(n.steps) ? (n.max - n.min) / n.steps : n.step),
                        n.initial[0] = n.min + n.step * Math.round((n.initial[0] - n.min) / n.step),
                        n.initial[1] = n.min + n.step * Math.round((n.initial[1] - n.min) / n.step),
                        r.value = n.initial,
                        (0,
                        l.default)(r.handle, {
                            left: (r.value[0] - n.min) / (n.max - n.min) * 100 + "%",
                            right: 100 - (r.value[1] - n.min) / (n.max - n.min) * 100 + "%"
                        }),
                        r.lValue = _(6)(r.container, r.ScaleValue(n.initial[0]), t, "11%", !0),
                        r.rValue = _(6)(r.container, r.ScaleValue(n.initial[1]), t, "11%"),
                        n.label && r.lValue.setAttribute("aria-label", n.label + " lower value"),
                        n.label && r.lValue.setAttribute("aria-label", n.label + " upper value"),
                        r.activeIndex = -1,
                        setTimeout(function() {
                            var e = r.ScaleValue(r.value[0])
                              , t = r.ScaleValue(r.value[1]);
                            r.lValue.innerHTML = e,
                            r.rValue.innerHTML = t,
                            r.emit("initialized", [e, t])
                        }),
                        r.input.addEventListener("focus", function() {
                            r.focused = !0
                        }),
                        r.input.addEventListener("blur", function() {
                            r.focused = !1
                        });
                        function o(e) {
                            e = u(a(e) / r.input.offsetWidth, 0, 1),
                            r.setActiveValue(e),
                            document.removeEventListener("mousemove", s),
                            document.removeEventListener("mouseup", o),
                            r.activeIndex = -1
                        }
                        var a = function(e) {
                            return e.pageX - r.input.getBoundingClientRect().left
                        }
                          , s = function(e) {
                            e = u(a(e) / r.input.offsetWidth, 0, 1);
                            r.setActiveValue(e)
                        };
                        return r.input.addEventListener("mousedown", function(e) {
                            var e = u(a(e) / r.input.offsetWidth, 0, 1)
                              , t = (r.value[0] - n.min) / (n.max - n.min)
                              , i = (r.value[1] - n.min) / (n.max - n.min)
                              , t = (t -= 1e-15 * Math.abs(n.max - n.min),
                            i += 1e-15 * Math.abs(n.max - n.min),
                            Math.abs(t - e))
                              , i = Math.abs(i - e);
                            r.activeIndex = t < i ? 0 : 1,
                            console.log(r.activeIndex),
                            document.addEventListener("mousemove", s),
                            document.addEventListener("mouseup", o)
                        }),
                        r.input.addEventListener("mouseup", function() {
                            r.input.blur()
                        }),
                        r.input.oninput = function() {
                            var e = r.ScaleValue(r.value[0])
                              , t = r.ScaleValue(r.value[1]);
                            r.lValue.value = e,
                            r.rValue.value = t,
                            r.emit("input", [e, t])
                        }
                        ,
                        r.lValue.onchange = function() {
                            var e = r.lValue.value
                              , t = parseFloat(r.rValue.value);
                            Number(parseFloat(e)) == e ? (e = parseFloat(e),
                            e = Math.min(Math.max(e, n.min), n.max),
                            e = Math.ceil((e - n.min) / n.step) * n.step + n.min,
                            e = Math.min(e, t),
                            r.lValue.value = e,
                            r.emit("input", [e, t]),
                            r.RefreshHandle([e, t])) : r.lValue.value = r.lastValue[0]
                        }
                        ,
                        r.rValue.onchange = function() {
                            var e = r.rValue.value
                              , t = parseFloat(r.lValue.value);
                            Number(parseFloat(e)) == e ? (e = parseFloat(e),
                            e = Math.min(Math.max(e, n.min), n.max),
                            e = Math.ceil((e - n.min) / n.step) * n.step + n.min,
                            e = Math.max(e, t),
                            r.rValue.value = e,
                            r.emit("input", [t, e]),
                            r.RefreshHandle([t, e])) : r.rValue.value = r.lastValue[1]
                        }
                        ,
                        r
                    }
                    var t = d;
                    if ("function" != typeof e && null !== e)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    return t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e),
                    n(d, [{
                        key: "ScaleValue",
                        value: function(e) {
                            return "log" === this.opts.scale ? this.logsign * Math.exp(Math.log(this.logmin) + (Math.log(this.logmax) - Math.log(this.logmin)) * e / 100) : e
                        }
                    }, {
                        key: "InverseScaleValue",
                        value: function(e) {
                            return "log" === this.opts.scale ? 100 * (Math.log(e * this.logsign) - Math.log(this.logmin)) / (Math.log(this.logmax) - Math.log(this.logmin)) : e
                        }
                    }, {
                        key: "setActiveValue",
                        value: function(e) {
                            var t, i, n;
                            -1 !== this.activeIndex && (t = this.opts,
                            i = (this.value[0] - t.min) / (t.max - t.min),
                            n = (this.value[1] - t.min) / (t.max - t.min),
                            e = 0 === this.activeIndex ? Math.min(n, e) : Math.max(i, e),
                            n = t.min + Math.round((t.max - t.min) * e / t.step) * t.step,
                            this.value[this.activeIndex] = n,
                            (0,
                            l.default)(this.handle, {
                                left: (this.value[0] - t.min) / (t.max - t.min) * 100 + "%",
                                right: 100 - (this.value[1] - t.min) / (t.max - t.min) * 100 + "%"
                            }),
                            this.input.oninput())
                        }
                    }, {
                        key: "SetValue",
                        value: function(e) {
                            !0 !== this.focused && (this.lValue.value = this.FormatNumber(e[0]),
                            this.rValue.value = this.FormatNumber(e[1]),
                            this.lastValue = [this.lValue.value, this.rValue.value])
                        }
                    }, {
                        key: "FormatNumber",
                        value: function(e) {
                            return e.toFixed(3).replace(/\.?0*$/, "")
                        }
                    }, {
                        key: "GetValue",
                        value: function() {
                            return [this.lValue.value, this.rValue.value]
                        }
                    }, {
                        key: "RefreshHandle",
                        value: function(e) {
                            var t = (parseFloat(e[0]) - this.opts.min) / (this.opts.max - this.opts.min) * 100
                              , e = 100 - (parseFloat(e[1]) - this.opts.min) / (this.opts.max - this.opts.min) * 100;
                            (0,
                            l.default)(this.handle, {
                                left: t + "%",
                                right: e + "%"
                            })
                        }
                    }]),
                    d
                }(r.default);
                function o(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.default = r,
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(["\n.OtterGui-interval {\n -webkit-appearance: none;\n position: absolute;\n height: 20px;\n margin: 0px 0;\n width: 33%;\n left: 54.5%;\n background-color: ", ";\n cursor: ew-resize;\n\n -webkit-touch-callout: none;\n -webkit-user-select: none;\n -khtml-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n}\n.OtterGui-interval-handle {\n background-color: ", ";\n position: absolute;\n height: ", ";\n min-width: 1px;\n}\n.OtterGui-interval-handle:focus {\n background: ", ";\n}\n"], {
                    raw: {
                        value: Object.freeze(["\n.OtterGui-interval {\n -webkit-appearance: none;\n position: absolute;\n height: 20px;\n margin: 0px 0;\n width: 33%;\n left: 54.5%;\n background-color: ", ";\n cursor: ew-resize;\n\n -webkit-touch-callout: none;\n -webkit-user-select: none;\n -khtml-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n}\n.OtterGui-interval-handle {\n background-color: ", ";\n position: absolute;\n height: ", ";\n min-width: 1px;\n}\n.OtterGui-interval-handle:focus {\n background: ", ";\n}\n"])
                    }
                }))
                  , r = i(1)
                  , i = i(3)
                  , o = r.theme.colors.componentBackground
                  , a = r.theme.colors.componentForeground
                  , s = r.theme.colors.componentActive;
                e.exports = i(n, o, a, r.theme.sizing.componentHeight, s)
            }
            , function(e, t, o) {
                "use strict";
                function i(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                t.MenuBar = void 0;
                var n = function(e, t, i) {
                    return t && d(e.prototype, t),
                    i && d(e, i),
                    e
                }
                  , a = i(o(0))
                  , r = i(o(4));
                o(1);
                var s = i(o(15));
                function d(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                t.MenuBar = function(e) {
                    function r(e, t) {
                        var i, n;
                        if (this instanceof r)
                            return i = function(e, t) {
                                if (e)
                                    return !t || "object" != typeof t && "function" != typeof t ? e : t;
                                throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                            }(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this)),
                            n = o(73),
                            i.element = document.createElement("div"),
                            i.element.className = n["OtterGui-bar"],
                            e.appendChild(i.element),
                            t.title && ((e = i.element.appendChild(document.createElement("div"))).className = n["OtterGui-bar-title"],
                            e.innerHTML = t.title),
                            (e = i.element.appendChild(document.createElement("button"))).className = n["OtterGui-bar-button"],
                            e.innerHTML = "Controls",
                            (0,
                            a.default)(e, {
                                left: "left" == t.align ? "0" : "unset",
                                right: "left" == t.align ? "unset" : "0"
                            }),
                            e.onclick = function() {
                                i.emit("ontogglepanel")
                            }
                            ,
                            s.default.isEnabled && ((e = i.element.appendChild(document.createElement("button"))).className = n["OtterGui-bar-button"],
                            e.innerHTML = "ã€Œ ã€",
                            e.setAttribute("aria-label", "Toggle Fullscreen"),
                            (0,
                            a.default)(e, {
                                left: "left" == t.align ? "unset" : "0",
                                right: "left" == t.align ? "0" : "unset"
                            }),
                            e.onclick = function() {
                                i.emit("onfullscreenrequested")
                            }
                            ),
                            i;
                        throw new TypeError("Cannot call a class as a function")
                    }
                    var t = r;
                    if ("function" != typeof e && null !== e)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    return t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e),
                    n(r, [{
                        key: "SetVisible",
                        value: function(e) {
                            this.element.style.display = e ? "block" : "none"
                        }
                    }]),
                    r
                }(r.default)
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(["\n\n.OtterGui-bar {\n background-color: ", ";\n height: ", ";\n width: 100%;\n opacity: 1.0;\n position: relative;\n cursor: default;\n}\n\n.OtterGui-bar-title {\n color: ", ";\n text-align: center;\n width: 100%;\n position: absolute;\n top: 0;\n line-height: ", ";\n color: ", ";\n -webkit-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n}\n\n.OtterGui-bar-button {\n text-align: center;\n border: none;\n cursor: pointer;\n font-family: inherit;\n height: 100%;\n position: absolute;\n top: 0;\n color: ", ";\n background-color: ", ";\n -webkit-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n margin: 0;\n\n}\n\n\n.OtterGui-bar-button:focus {\n outline:none;\n}\n.OtterGui-bar-button::-moz-focus-inner {\n border:0;\n}\n\n.OtterGui-bar-button:hover,\n.OtterGui-bar-button:focus {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-bar-button:active {\n color: ", " !important;\n background-color: ", " !important;\n}\n\n\n"], {
                    raw: {
                        value: Object.freeze(["\n\n.OtterGui-bar {\n background-color: ", ";\n height: ", ";\n width: 100%;\n opacity: 1.0;\n position: relative;\n cursor: default;\n}\n\n.OtterGui-bar-title {\n color: ", ";\n text-align: center;\n width: 100%;\n position: absolute;\n top: 0;\n line-height: ", ";\n color: ", ";\n -webkit-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n}\n\n.OtterGui-bar-button {\n text-align: center;\n border: none;\n cursor: pointer;\n font-family: inherit;\n height: 100%;\n position: absolute;\n top: 0;\n color: ", ";\n background-color: ", ";\n -webkit-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n margin: 0;\n\n}\n\n\n.OtterGui-bar-button:focus {\n outline:none;\n}\n.OtterGui-bar-button::-moz-focus-inner {\n border:0;\n}\n\n.OtterGui-bar-button:hover,\n.OtterGui-bar-button:focus {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-bar-button:active {\n color: ", " !important;\n background-color: ", " !important;\n}\n\n\n"])
                    }
                }))
                  , r = i(1)
                  , i = i(3);
                e.exports = i(n, r.theme.colors.menuBarBackground, r.theme.sizing.menuBarHeight, r.theme.colors.text1, r.theme.sizing.menuBarHeight, r.theme.colors.menuBarText, r.theme.colors.textPrimary, r.theme.colors.componentBackground, r.theme.colors.textHover, r.theme.colors.componentForeground, r.theme.colors.textActive, r.theme.colors.componentActive)
            }
            , function(e, t, i) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                t.Panel = void 0;
                var n = function(e, t, i) {
                    return t && s(e.prototype, t),
                    i && s(e, i),
                    e
                }
                  , r = i(0)
                  , o = r && r.__esModule ? r : {
                    default: r
                }
                  , a = i(1);
                function s(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                function d(e, t) {
                    if (!(this instanceof d))
                        throw new TypeError("Cannot call a class as a function");
                    this.opts = t,
                    this.styles = i(75),
                    this.container = e.appendChild(document.createElement("div")),
                    this.container.className = this.styles["OtterGui-panel-container"],
                    (0,
                    o.default)(this.container, {
                        width: t.width,
                        opacity: t.opacity || 1,
                        left: "left" == t.align ? "0" : "unset",
                        right: "left" == t.align ? "unset" : "0"
                    }),
                    "outer" == t.panelMode && (0,
                    o.default)(this.container, {
                        left: "left" == t.align ? "unset" : "100%",
                        right: "left" == t.align ? "100%" : "unset"
                    }),
                    "none" === t.barMode && this._MakeToggleButton(),
                    this.panel = this.container.appendChild(document.createElement("div")),
                    this.panel.className = this.styles["OtterGui-panel"],
                    "none" === t.barMode && t.title && i(76)(this.panel, t.title, a.theme)
                }
                t.Panel = (n(d, [{
                    key: "SetVisible",
                    value: function(e) {
                        e ? (this.panel.classList.remove(this.styles["OtterGui-panel-hidden"]),
                        this.menuButton && this.menuButton.setAttribute("alt", "Close GUI")) : (this.panel.classList.add(this.styles["OtterGui-panel-hidden"]),
                        this.menuButton && this.menuButton.setAttribute("alt", "Open GUI"))
                    }
                }, {
                    key: "ToggleVisible",
                    value: function() {
                        this.panel.classList.contains(this.styles["OtterGui-panel-hidden"]) ? this.SetVisible(!0) : this.SetVisible(!1)
                    }
                }, {
                    key: "_MakeToggleButton",
                    value: function() {
                        var e = this;
                        this.menuButton = this.container.appendChild(document.createElement("button")),
                        this.menuButton.className = this.styles["OtterGui-panel-toggle-button"],
                        (0,
                        o.default)(this.menuButton, {
                            left: "left" == this.opts.align ? "0px" : "unset",
                            right: "left" == this.opts.align ? "unset" : "0px"
                        }),
                        this.menuButton.onclick = function() {
                            e.ToggleVisible()
                        }
                        ,
                        this.menuButton.addEventListener("mouseup", function() {
                            e.menuButton.blur()
                        }),
                        this.menuButton.innerHTML = '\n <svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg">\n <rect x="10%" y="10%" width="80%" height="80%"/>\n </svg>\n '
                    }
                }]),
                d)
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(["\n\n.OtterGui-panel-container {\n position: absolute;\n background: ", ";\n}\n\n.OtterGui-panel {\n padding: 14px;\n \n padding-bottom: calc(14px - ", ");\n\n \n -webkit-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n cursor: default;\n text-align: left;\n box-sizing: border-box;\n}\n\n.OtterGui-panel.OtterGui-panel-hidden {\n height: 0px;\n display: none;\n}\n\n.OtterGui-panel * {\n box-sizing: initial;\n -webkit-box-sizing: initial;\n -moz-box-sizing: initial;\n}\n\n.OtterGui-panel input {\n font-family: 'Hack';\n font-size: 11px;\n display: inline;\n}\n\n.OtterGui-panel a {\n color: inherit;\n text-decoration: none;\n}\n\n.OtterGui-panel-toggle-button {\n position: absolute;\n top: 0;\n margin: 0;\n padding: 0;\n width: 15px;\n height: 15px;\n line-height: 15px;\n text-align: center;\n border: none;\n cursor: pointer;\n font-family: inherit;\n color: ", ";\n background-color: ", ";\n\n -webkit-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n\n}\n\n\n.OtterGui-panel-toggle-button svg {\n fill-opacity: 0;\n stroke-width: 3;\n stroke: ", ";\n}\n\n\n.OtterGui-panel-toggle-button:focus {\n outline:none;\n}\n.OtterGui-panel-toggle-button::-moz-focus-inner {\n border: 0;\n}\n\n.OtterGui-panel-toggle-button:hover,\n.OtterGui-panel-toggle-button:focus {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-panel-toggle-button:active {\n color: ", ";\n background-color: ", ";\n}\n\n"], {
                    raw: {
                        value: Object.freeze(["\n\n.OtterGui-panel-container {\n position: absolute;\n background: ", ";\n}\n\n.OtterGui-panel {\n padding: 14px;\n \n padding-bottom: calc(14px - ", ");\n\n \n -webkit-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n cursor: default;\n text-align: left;\n box-sizing: border-box;\n}\n\n.OtterGui-panel.OtterGui-panel-hidden {\n height: 0px;\n display: none;\n}\n\n.OtterGui-panel * {\n box-sizing: initial;\n -webkit-box-sizing: initial;\n -moz-box-sizing: initial;\n}\n\n.OtterGui-panel input {\n font-family: 'Hack';\n font-size: 11px;\n display: inline;\n}\n\n.OtterGui-panel a {\n color: inherit;\n text-decoration: none;\n}\n\n.OtterGui-panel-toggle-button {\n position: absolute;\n top: 0;\n margin: 0;\n padding: 0;\n width: 15px;\n height: 15px;\n line-height: 15px;\n text-align: center;\n border: none;\n cursor: pointer;\n font-family: inherit;\n color: ", ";\n background-color: ", ";\n\n -webkit-user-select: none;\n -moz-user-select: none;\n -ms-user-select: none;\n user-select: none;\n\n}\n\n\n.OtterGui-panel-toggle-button svg {\n fill-opacity: 0;\n stroke-width: 3;\n stroke: ", ";\n}\n\n\n.OtterGui-panel-toggle-button:focus {\n outline:none;\n}\n.OtterGui-panel-toggle-button::-moz-focus-inner {\n border: 0;\n}\n\n.OtterGui-panel-toggle-button:hover,\n.OtterGui-panel-toggle-button:focus {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-panel-toggle-button:active {\n color: ", ";\n background-color: ", ";\n}\n\n"])
                    }
                }))
                  , r = i(1)
                  , i = i(3);
                e.exports = i(n, r.theme.colors.panelBackground, r.theme.sizing.componentSpacing, r.theme.colors.textPrimary, r.theme.colors.componentBackground, r.theme.colors.componentForeground, r.theme.colors.textHover, r.theme.colors.componentForeground, r.theme.colors.textActive, r.theme.colors.componentActive)
            }
            , function(e, t, i) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                t.default = function(e, t, i) {
                    e = e.appendChild(document.createElement("div"));
                    return e.innerHTML = t,
                    (0,
                    n.default)(e, {
                        width: "100%",
                        textAlign: "center",
                        color: i.colors.textSecondary,
                        height: "20px",
                        marginBottom: "4px"
                    }),
                    e
                }
                ;
                var i = i(0)
                  , n = i && i.__esModule ? i : {
                    default: i
                };
                e.exports = t.default
            }
            , function(e, t, i) {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                t.ToastArea = void 0;
                var n = function(e, t, i) {
                    return t && o(e.prototype, t),
                    i && o(e, i),
                    e
                }
                  , r = i(0)
                  , a = r && r.__esModule ? r : {
                    default: r
                };
                function o(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i];
                        n.enumerable = n.enumerable || !1,
                        n.configurable = !0,
                        "value"in n && (n.writable = !0),
                        Object.defineProperty(e, n.key, n)
                    }
                }
                function s(e, t) {
                    if (!(this instanceof s))
                        throw new TypeError("Cannot call a class as a function");
                    this.opts = t,
                    this.styles = i(78),
                    this.element = e.appendChild(document.createElement("div")),
                    this.element.classList.add(this.styles["OtterGui-toast-area"]),
                    (0,
                    a.default)(this.element, {
                        position: "absolute",
                        width: "100%"
                    })
                }
                i(1),
                t.ToastArea = (n(s, [{
                    key: "CreateToast",
                    value: function(e) {
                        function t() {
                            r.blur(),
                            (0,
                            a.default)(r, {
                                opacity: "0"
                            }),
                            clearTimeout(o),
                            o = setTimeout(function() {
                                r && r.parentNode.removeChild(r)
                            }, n)
                        }
                        var i = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 5e3
                          , n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0
                          , r = (console.log("[Toast] " + e),
                        this.element.appendChild(document.createElement("div")))
                          , e = (r.classList.add(this.styles["OtterGui-toast-notification"]),
                        r.setAttribute("aria-live", "polite"),
                        r.innerHTML = e,
                        (0,
                        a.default)(r, {}),
                        r.appendChild(document.createElement("button")))
                          , o = (e.innerHTML = "&#10006;",
                        e.classList.add(this.styles["OtterGui-toast-close-button"]),
                        void 0)
                          , o = setTimeout(t, i);
                        e.onclick = t
                    }
                }]),
                s)
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(["\n\n.OtterGui-toast-notification {\n box-sizing: border-box;\n color: theme.colors.text1;\n position: relative;\n width: 100%;\n \n padding: 8px;\n padding-left: 20px;\n padding-right: 20px;\n text-align: center;\n font-family: 'Hack', monospace;\n font-size: 11px;\n}\n\n.OtterGui-toast-area .OtterGui-toast-notification:nth-child(odd) {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-toast-area .OtterGui-toast-notification:nth-child(even) {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-toast-close-button {\n color: ", ";\n background: transparent;\n position: absolute;\n textAlign: center;\n margin-top: auto;\n margin-bottom: auto;\n border: none;\n cursor: pointer;\n top: 0;\n bottom: 0;\n right: 8px;\n}\n\n"], {
                    raw: {
                        value: Object.freeze(["\n\n.OtterGui-toast-notification {\n box-sizing: border-box;\n color: theme.colors.text1;\n position: relative;\n width: 100%;\n \n padding: 8px;\n padding-left: 20px;\n padding-right: 20px;\n text-align: center;\n font-family: 'Hack', monospace;\n font-size: 11px;\n}\n\n.OtterGui-toast-area .OtterGui-toast-notification:nth-child(odd) {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-toast-area .OtterGui-toast-notification:nth-child(even) {\n color: ", ";\n background-color: ", ";\n}\n\n.OtterGui-toast-close-button {\n color: ", ";\n background: transparent;\n position: absolute;\n textAlign: center;\n margin-top: auto;\n margin-bottom: auto;\n border: none;\n cursor: pointer;\n top: 0;\n bottom: 0;\n right: 8px;\n}\n\n"])
                    }
                }))
                  , r = i(1)
                  , i = i(3);
                e.exports = i(n, r.theme.colors.textPrimary, r.theme.colors.panelBackground, r.theme.colors.textPrimary, r.theme.colors.menuBarBackground, r.theme.colors.textPrimary)
            }
            , function(e, t, i) {
                "use strict";
                var n = Object.freeze(Object.defineProperties(["\n\n.OtterGui-container {\n position: relative;\n left: 0;\n width: 100%;\n font-size: 11px;\n z-index: 9999;\n}\n\n"], {
                    raw: {
                        value: Object.freeze(["\n\n.OtterGui-container {\n position: relative;\n left: 0;\n width: 100%;\n font-size: 11px;\n z-index: 9999;\n}\n\n"])
                    }
                }))
                  , i = (i(1),
                i(3));
                e.exports = i(n)
            }
            ],
            r = {},
            n.m = i,
            n.c = r,
            n.d = function(e, t, i) {
                n.o(e, t) || Object.defineProperty(e, t, {
                    configurable: !1,
                    enumerable: !0,
                    get: i
                })
            }
            ,
            n.n = function(e) {
                var t = e && e.__esModule ? function() {
                    return e.default
                }
                : function() {
                    return e
                }
                ;
                return n.d(t, "a", t),
                t
            }
            ,
            n.o = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
            ,
            n.p = "",
            n(n.s = 16);
            function n(e) {
                var t;
                return (r[e] || (t = r[e] = {
                    i: e,
                    l: !1,
                    exports: {}
                },
                i[e].call(t.exports, t, t.exports, n),
                t.l = !0,
                t)).exports
            }
            var i, r
        }
        ,
        "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define("OtterGui", [], e) : "object" == typeof exports ? exports.OtterGui = e() : c.OtterGui = e(),
        c = function() {
            return function n(r, o, a) {
                function s(i, e) {
                    if (!o[i]) {
                        if (!r[i]) {
                            var t = "function" == typeof require && require;
                            if (!e && t)
                                return t(i, !0);
                            if (d)
                                return d(i, !0);
                            throw new Error("Cannot find module '" + i + "'")
                        }
                        e = o[i] = {
                            exports: {}
                        };
                        r[i][0].call(e.exports, function(e) {
                            var t = r[i][1][e];
                            return s(t || e)
                        }, e, e.exports, n, r, o, a)
                    }
                    return o[i].exports
                }
                for (var d = "function" == typeof require && require, e = 0; e < a.length; e++)
                    s(a[e]);
                return s
            }({
                1: [function(e, t, i) {
                    t.exports = e("./lib/heap")
                }
                , {
                    "./lib/heap": 2
                }],
                2: [function(e, a, t) {
                    !function() {
                        var c, d, h, E, t, _, i, T, A, e, n, r, u, l;
                        function o(e) {
                            this.cmp = null != e ? e : c,
                            this.nodes = []
                        }
                        d = Math.floor,
                        A = Math.min,
                        c = function(e, t) {
                            return e < t ? -1 : t < e ? 1 : 0
                        }
                        ,
                        T = function(e, t, i, n, r) {
                            var o;
                            if (null == r && (r = c),
                            (i = null == i ? 0 : i) < 0)
                                throw new Error("lo must be non-negative");
                            for (null == n && (n = e.length); i < n; )
                                r(t, e[o = d((i + n) / 2)]) < 0 ? n = o : i = o + 1;
                            return [].splice.apply(e, [i, i - i].concat(t)),
                            t
                        }
                        ,
                        E = function(e, t) {
                            var i, n;
                            return null == t && (t = c),
                            i = e.pop(),
                            e.length ? (n = e[0],
                            e[0] = i,
                            l(e, 0, t)) : n = i,
                            n
                        }
                        ,
                        i = function(e, t, i) {
                            var n;
                            return null == i && (i = c),
                            n = e[0],
                            e[0] = t,
                            l(e, 0, i),
                            n
                        }
                        ,
                        _ = function(e, t, i) {
                            var n;
                            return null == i && (i = c),
                            e.length && i(e[0], t) < 0 && (t = (n = [e[0], t])[0],
                            e[0] = n[1],
                            l(e, 0, i)),
                            t
                        }
                        ,
                        h = function(i, e) {
                            var t, n, r, o, a, s;
                            for (null == e && (e = c),
                            a = [],
                            n = 0,
                            r = (o = function() {
                                s = [];
                                for (var e = 0, t = d(i.length / 2); 0 <= t ? e < t : t < e; 0 <= t ? e++ : e--)
                                    s.push(e);
                                return s
                            }
                            .apply(this).reverse()).length; n < r; n++)
                                t = o[n],
                                a.push(l(i, t, e));
                            return a
                        }
                        ,
                        r = function(e, t, i) {
                            return null == i && (i = c),
                            -1 !== (t = e.indexOf(t)) ? (u(e, 0, t, i),
                            l(e, t, i)) : void 0
                        }
                        ,
                        e = function(e, t, i) {
                            var n, r, o, a, s;
                            if (null == i && (i = c),
                            !(r = e.slice(0, t)).length)
                                return r;
                            for (h(r, i),
                            o = 0,
                            a = (s = e.slice(t)).length; o < a; o++)
                                n = s[o],
                                _(r, n, i);
                            return r.sort(i).reverse()
                        }
                        ,
                        n = function(e, t, i) {
                            var n, r, o, a, s, d, _, u, l;
                            if (null == i && (i = c),
                            10 * t <= e.length) {
                                if ((o = e.slice(0, t).sort(i)).length)
                                    for (r = o[o.length - 1],
                                    a = 0,
                                    d = (_ = e.slice(t)).length; a < d; a++)
                                        i(n = _[a], r) < 0 && (T(o, n, 0, null, i),
                                        o.pop(),
                                        r = o[o.length - 1]);
                                return o
                            }
                            for (h(e, i),
                            l = [],
                            s = 0,
                            u = A(t, e.length); 0 <= u ? s < u : u < s; 0 <= u ? ++s : --s)
                                l.push(E(e, i));
                            return l
                        }
                        ,
                        u = function(e, t, i, n) {
                            var r, o, a;
                            for (null == n && (n = c),
                            r = e[i]; t < i && n(r, o = e[a = i - 1 >> 1]) < 0; )
                                e[i] = o,
                                i = a;
                            return e[i] = r
                        }
                        ,
                        l = function(e, t, i) {
                            var n, r, o, a, s;
                            for (null == i && (i = c),
                            r = e.length,
                            o = e[s = t],
                            n = 2 * t + 1; n < r; )
                                (a = n + 1) < r && !(i(e[n], e[a]) < 0) && (n = a),
                                e[t] = e[n],
                                n = 2 * (t = n) + 1;
                            return e[t] = o,
                            u(e, s, t, i)
                        }
                        ,
                        o.push = t = function(e, t, i) {
                            return null == i && (i = c),
                            e.push(t),
                            u(e, 0, e.length - 1, i)
                        }
                        ,
                        o.pop = E,
                        o.replace = i,
                        o.pushpop = _,
                        o.heapify = h,
                        o.updateItem = r,
                        o.nlargest = e,
                        o.nsmallest = n,
                        o.prototype.push = function(e) {
                            return t(this.nodes, e, this.cmp)
                        }
                        ,
                        o.prototype.pop = function() {
                            return E(this.nodes, this.cmp)
                        }
                        ,
                        o.prototype.peek = function() {
                            return this.nodes[0]
                        }
                        ,
                        o.prototype.contains = function(e) {
                            return -1 !== this.nodes.indexOf(e)
                        }
                        ,
                        o.prototype.replace = function(e) {
                            return i(this.nodes, e, this.cmp)
                        }
                        ,
                        o.prototype.pushpop = function(e) {
                            return _(this.nodes, e, this.cmp)
                        }
                        ,
                        o.prototype.heapify = function() {
                            return h(this.nodes, this.cmp)
                        }
                        ,
                        o.prototype.updateItem = function(e) {
                            return r(this.nodes, e, this.cmp)
                        }
                        ,
                        o.prototype.clear = function() {
                            return this.nodes = []
                        }
                        ,
                        o.prototype.empty = function() {
                            return 0 === this.nodes.length
                        }
                        ,
                        o.prototype.size = function() {
                            return this.nodes.length
                        }
                        ,
                        o.prototype.clone = function() {
                            var e = new o;
                            return e.nodes = this.nodes.slice(0),
                            e
                        }
                        ,
                        o.prototype.toArray = function() {
                            return this.nodes.slice(0)
                        }
                        ,
                        o.prototype.insert = o.prototype.push,
                        o.prototype.top = o.prototype.peek,
                        o.prototype.front = o.prototype.peek,
                        o.prototype.has = o.prototype.contains,
                        o.prototype.copy = o.prototype.clone,
                        e = o,
                        null != a && a.exports ? a.exports = e : window.Heap = e
                    }
                    .call(this)
                }
                , {}],
                3: [function(e, t, i) {
                    t.exports = {
                        Always: 1,
                        Never: 2,
                        IfAtMostOneObstacle: 3,
                        OnlyWhenNoObstacles: 4
                    }
                }
                , {}],
                4: [function(e, t, i) {
                    function s(e, t, i) {
                        var n;
                        "object" != typeof e ? n = e : (t = e.length,
                        n = e[0].length,
                        i = e),
                        this.width = n,
                        this.height = t,
                        this.nodes = this._buildNodes(n, t, i)
                    }
                    var d = e("./Node")
                      , h = e("./DiagonalMovement");
                    s.prototype._buildNodes = function(e, t, i) {
                        for (var n, r = new Array(t), o = 0; o < t; ++o)
                            for (r[o] = new Array(e),
                            n = 0; n < e; ++n)
                                r[o][n] = new d(n,o);
                        if (void 0 !== i) {
                            if (i.length !== t || i[0].length !== e)
                                throw new Error("Matrix size does not fit");
                            for (o = 0; o < t; ++o)
                                for (n = 0; n < e; ++n)
                                    i[o][n] && (r[o][n].walkable = !1)
                        }
                        return r
                    }
                    ,
                    s.prototype.getNodeAt = function(e, t) {
                        return this.nodes[t][e]
                    }
                    ,
                    s.prototype.isWalkableAt = function(e, t) {
                        return this.isInside(e, t) && this.nodes[t][e].walkable
                    }
                    ,
                    s.prototype.isInside = function(e, t) {
                        return 0 <= e && e < this.width && 0 <= t && t < this.height
                    }
                    ,
                    s.prototype.setWalkableAt = function(e, t, i) {
                        this.nodes[t][e].walkable = i
                    }
                    ,
                    s.prototype.getNeighbors = function(e, t) {
                        var i = e.x
                          , e = e.y
                          , n = []
                          , r = !1
                          , o = !1
                          , a = !1
                          , s = !1
                          , d = !1
                          , _ = !1
                          , u = !1
                          , l = !1
                          , c = this.nodes;
                        if (this.isWalkableAt(i, e - 1) && (n.push(c[e - 1][i]),
                        r = !0),
                        this.isWalkableAt(i + 1, e) && (n.push(c[e][i + 1]),
                        a = !0),
                        this.isWalkableAt(i, e + 1) && (n.push(c[e + 1][i]),
                        d = !0),
                        this.isWalkableAt(i - 1, e) && (n.push(c[e][i - 1]),
                        u = !0),
                        t !== h.Never) {
                            if (t === h.OnlyWhenNoObstacles)
                                o = u && r,
                                s = r && a,
                                _ = a && d,
                                l = d && u;
                            else if (t === h.IfAtMostOneObstacle)
                                o = u || r,
                                s = r || a,
                                _ = a || d,
                                l = d || u;
                            else {
                                if (t !== h.Always)
                                    throw new Error("Incorrect value of diagonalMovement");
                                l = _ = s = o = !0
                            }
                            o && this.isWalkableAt(i - 1, e - 1) && n.push(c[e - 1][i - 1]),
                            s && this.isWalkableAt(i + 1, e - 1) && n.push(c[e - 1][i + 1]),
                            _ && this.isWalkableAt(i + 1, e + 1) && n.push(c[e + 1][i + 1]),
                            l && this.isWalkableAt(i - 1, e + 1) && n.push(c[e + 1][i - 1])
                        }
                        return n
                    }
                    ,
                    s.prototype.clone = function() {
                        for (var e, t = this.width, i = this.height, n = this.nodes, r = new s(t,i), o = new Array(i), a = 0; a < i; ++a)
                            for (o[a] = new Array(t),
                            e = 0; e < t; ++e)
                                o[a][e] = new d(e,a,n[a][e].walkable);
                        return r.nodes = o,
                        r
                    }
                    ,
                    t.exports = s
                }
                , {
                    "./DiagonalMovement": 3,
                    "./Node": 6
                }],
                5: [function(e, t, i) {
                    t.exports = {
                        manhattan: function(e, t) {
                            return e + t
                        },
                        euclidean: function(e, t) {
                            return Math.sqrt(e * e + t * t)
                        },
                        octile: function(e, t) {
                            var i = Math.SQRT2 - 1;
                            return e < t ? i * e + t : i * t + e
                        },
                        chebyshev: function(e, t) {
                            return Math.max(e, t)
                        }
                    }
                }
                , {}],
                6: [function(e, t, i) {
                    t.exports = function(e, t, i) {
                        this.x = e,
                        this.y = t,
                        this.walkable = void 0 === i || i
                    }
                }
                , {}],
                7: [function(e, t, i) {
                    function n(e) {
                        for (var t = [[e.x, e.y]]; e.parent; )
                            e = e.parent,
                            t.push([e.x, e.y]);
                        return t.reverse()
                    }
                    function A(e, t, i, n) {
                        for (var r, o = Math.abs, a = [], s = o(i - e), d = o(n - t), _ = e < i ? 1 : -1, u = t < n ? 1 : -1, l = s - d; a.push([e, t]),
                        e !== i || t !== n; )
                            -d < (r = 2 * l) && (l -= d,
                            e += _),
                            r < s && (l += s,
                            t += u);
                        return a
                    }
                    i.backtrace = n,
                    i.biBacktrace = function(e, t) {
                        return e = n(e),
                        t = n(t),
                        e.concat(t.reverse())
                    }
                    ,
                    i.pathLength = function(e) {
                        for (var t, i, n, r = 0, o = 1; o < e.length; ++o)
                            n = e[o - 1],
                            t = e[o],
                            i = n[0] - t[0],
                            n = n[1] - t[1],
                            r += Math.sqrt(i * i + n * n);
                        return r
                    }
                    ,
                    i.interpolate = A,
                    i.expandPath = function(e) {
                        var t, i, n, r, o, a, s = [], d = e.length;
                        if (!(d < 2)) {
                            for (o = 0; o < d - 1; ++o)
                                for (t = e[o],
                                i = e[o + 1],
                                r = (n = A(t[0], t[1], i[0], i[1])).length,
                                a = 0; a < r - 1; ++a)
                                    s.push(n[a]);
                            s.push(e[d - 1])
                        }
                        return s
                    }
                    ,
                    i.smoothenPath = function(e, t) {
                        for (var i, n, r, o, a, s = t.length, d = t[0][0], _ = t[0][1], u = t[s - 1][0], l = t[s - 1][1], c = d, h = _, E = [[c, h]], T = 2; T < s; ++T) {
                            for (r = A(c, h, (n = t[T])[0], n[1]),
                            a = !1,
                            i = 1; i < r.length; ++i)
                                if (o = r[i],
                                !e.isWalkableAt(o[0], o[1])) {
                                    a = !0;
                                    break
                                }
                            a && (lastValidCoord = t[T - 1],
                            E.push(lastValidCoord),
                            c = lastValidCoord[0],
                            h = lastValidCoord[1])
                        }
                        return E.push([u, l]),
                        E
                    }
                    ,
                    i.compressPath = function(e) {
                        if (e.length < 3)
                            return e;
                        var t, i, n, r, o, a = [], s = e[0][0], d = e[0][1], _ = e[1][0], u = e[1][1], l = _ - s, c = u - d, h = Math.sqrt(l * l + c * c);
                        for (l /= h,
                        c /= h,
                        a.push([s, d]),
                        o = 2; o < e.length; o++)
                            t = _,
                            i = u,
                            n = l,
                            r = c,
                            l = (_ = e[o][0]) - t,
                            c = (u = e[o][1]) - i,
                            c /= h = Math.sqrt(l * l + c * c),
                            (l /= h) === n && c === r || a.push([t, i]);
                        return a.push([_, u]),
                        a
                    }
                }
                , {}],
                8: [function(e, t, i) {
                    t.exports = {
                        Heap: e("heap"),
                        Node: e("./core/Node"),
                        Grid: e("./core/Grid"),
                        Util: e("./core/Util"),
                        DiagonalMovement: e("./core/DiagonalMovement"),
                        Heuristic: e("./core/Heuristic"),
                        AStarFinder: e("./finders/AStarFinder"),
                        BestFirstFinder: e("./finders/BestFirstFinder"),
                        BreadthFirstFinder: e("./finders/BreadthFirstFinder"),
                        DijkstraFinder: e("./finders/DijkstraFinder"),
                        BiAStarFinder: e("./finders/BiAStarFinder"),
                        BiBestFirstFinder: e("./finders/BiBestFirstFinder"),
                        BiBreadthFirstFinder: e("./finders/BiBreadthFirstFinder"),
                        BiDijkstraFinder: e("./finders/BiDijkstraFinder"),
                        IDAStarFinder: e("./finders/IDAStarFinder"),
                        JumpPointFinder: e("./finders/JumpPointFinder")
                    }
                }
                , {
                    "./core/DiagonalMovement": 3,
                    "./core/Grid": 4,
                    "./core/Heuristic": 5,
                    "./core/Node": 6,
                    "./core/Util": 7,
                    "./finders/AStarFinder": 9,
                    "./finders/BestFirstFinder": 10,
                    "./finders/BiAStarFinder": 11,
                    "./finders/BiBestFirstFinder": 12,
                    "./finders/BiBreadthFirstFinder": 13,
                    "./finders/BiDijkstraFinder": 14,
                    "./finders/BreadthFirstFinder": 15,
                    "./finders/DijkstraFinder": 16,
                    "./finders/IDAStarFinder": 17,
                    "./finders/JumpPointFinder": 22,
                    heap: 1
                }],
                9: [function(e, t, i) {
                    function n(e) {
                        this.allowDiagonal = (e = e || {}).allowDiagonal,
                        this.dontCrossCorners = e.dontCrossCorners,
                        this.heuristic = e.heuristic || r.manhattan,
                        this.weight = e.weight || 1,
                        this.diagonalMovement = e.diagonalMovement,
                        this.diagonalMovement || (this.allowDiagonal ? this.dontCrossCorners ? this.diagonalMovement = o.OnlyWhenNoObstacles : this.diagonalMovement = o.IfAtMostOneObstacle : this.diagonalMovement = o.Never),
                        this.diagonalMovement === o.Never ? this.heuristic = e.heuristic || r.manhattan : this.heuristic = e.heuristic || r.octile
                    }
                    var O = e("heap")
                      , b = e("../core/Util")
                      , r = e("../core/Heuristic")
                      , o = e("../core/DiagonalMovement");
                    n.prototype.findPath = function(e, t, i, n, r) {
                        var o, a, s, d, _, u, l, c, h = new O(function(e, t) {
                            return e.f - t.f
                        }
                        ), e = r.getNodeAt(e, t), E = r.getNodeAt(i, n), T = this.heuristic, A = this.diagonalMovement, I = this.weight, p = Math.abs, g = Math.SQRT2;
                        for (e.g = 0,
                        e.f = 0,
                        h.push(e),
                        e.opened = !0; !h.empty(); ) {
                            if ((o = h.pop()).closed = !0,
                            o === E)
                                return b.backtrace(E);
                            for (d = 0,
                            _ = (a = r.getNeighbors(o, A)).length; d < _; ++d)
                                !(s = a[d]).closed && (u = s.x,
                                l = s.y,
                                c = o.g + (u - o.x == 0 || l - o.y == 0 ? 1 : g),
                                !s.opened || c < s.g) && (s.g = c,
                                s.h = s.h || I * T(p(u - i), p(l - n)),
                                s.f = s.g + s.h,
                                s.parent = o,
                                s.opened ? h.updateItem(s) : (h.push(s),
                                s.opened = !0))
                        }
                        return []
                    }
                    ,
                    t.exports = n
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "../core/Heuristic": 5,
                    "../core/Util": 7,
                    heap: 1
                }],
                10: [function(e, t, i) {
                    function n(e) {
                        r.call(this, e);
                        var i = this.heuristic;
                        this.heuristic = function(e, t) {
                            return 1e6 * i(e, t)
                        }
                    }
                    var r = e("./AStarFinder");
                    n.prototype = new r,
                    t.exports = n.prototype.constructor = n
                }
                , {
                    "./AStarFinder": 9
                }],
                11: [function(e, t, i) {
                    function n(e) {
                        this.allowDiagonal = (e = e || {}).allowDiagonal,
                        this.dontCrossCorners = e.dontCrossCorners,
                        this.diagonalMovement = e.diagonalMovement,
                        this.heuristic = e.heuristic || r.manhattan,
                        this.weight = e.weight || 1,
                        this.diagonalMovement || (this.allowDiagonal ? this.dontCrossCorners ? this.diagonalMovement = o.OnlyWhenNoObstacles : this.diagonalMovement = o.IfAtMostOneObstacle : this.diagonalMovement = o.Never),
                        this.diagonalMovement === o.Never ? this.heuristic = e.heuristic || r.manhattan : this.heuristic = e.heuristic || r.octile
                    }
                    var C = e("heap")
                      , R = e("../core/Util")
                      , r = e("../core/Heuristic")
                      , o = e("../core/DiagonalMovement");
                    n.prototype.findPath = function(e, t, i, n, r) {
                        function o(e, t) {
                            return e.f - t.f
                        }
                        var a, s, d, _, u, l, c, h, E = new C(o), T = new C(o), A = r.getNodeAt(e, t), I = r.getNodeAt(i, n), p = this.heuristic, g = this.diagonalMovement, O = this.weight, b = Math.abs, m = Math.SQRT2;
                        for (A.g = 0,
                        A.f = 0,
                        E.push(A),
                        A.opened = 1,
                        I.g = 0,
                        I.f = 0,
                        T.push(I),
                        I.opened = 2; !E.empty() && !T.empty(); ) {
                            for ((a = E.pop()).closed = !0,
                            _ = 0,
                            u = (s = r.getNeighbors(a, g)).length; _ < u; ++_)
                                if (!(d = s[_]).closed) {
                                    if (2 === d.opened)
                                        return R.biBacktrace(a, d);
                                    l = d.x,
                                    c = d.y,
                                    h = a.g + (l - a.x == 0 || c - a.y == 0 ? 1 : m),
                                    (!d.opened || h < d.g) && (d.g = h,
                                    d.h = d.h || O * p(b(l - i), b(c - n)),
                                    d.f = d.g + d.h,
                                    d.parent = a,
                                    d.opened ? E.updateItem(d) : (E.push(d),
                                    d.opened = 1))
                                }
                            for ((a = T.pop()).closed = !0,
                            _ = 0,
                            u = (s = r.getNeighbors(a, g)).length; _ < u; ++_)
                                if (!(d = s[_]).closed) {
                                    if (1 === d.opened)
                                        return R.biBacktrace(d, a);
                                    l = d.x,
                                    c = d.y,
                                    h = a.g + (l - a.x == 0 || c - a.y == 0 ? 1 : m),
                                    (!d.opened || h < d.g) && (d.g = h,
                                    d.h = d.h || O * p(b(l - e), b(c - t)),
                                    d.f = d.g + d.h,
                                    d.parent = a,
                                    d.opened ? T.updateItem(d) : (T.push(d),
                                    d.opened = 2))
                                }
                        }
                        return []
                    }
                    ,
                    t.exports = n
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "../core/Heuristic": 5,
                    "../core/Util": 7,
                    heap: 1
                }],
                12: [function(e, t, i) {
                    function n(e) {
                        r.call(this, e);
                        var i = this.heuristic;
                        this.heuristic = function(e, t) {
                            return 1e6 * i(e, t)
                        }
                    }
                    var r = e("./BiAStarFinder");
                    n.prototype = new r,
                    t.exports = n.prototype.constructor = n
                }
                , {
                    "./BiAStarFinder": 11
                }],
                13: [function(e, t, i) {
                    function n(e) {
                        this.allowDiagonal = (e = e || {}).allowDiagonal,
                        this.dontCrossCorners = e.dontCrossCorners,
                        this.diagonalMovement = e.diagonalMovement,
                        this.diagonalMovement || (this.allowDiagonal ? this.dontCrossCorners ? this.diagonalMovement = r.OnlyWhenNoObstacles : this.diagonalMovement = r.IfAtMostOneObstacle : this.diagonalMovement = r.Never)
                    }
                    var h = e("../core/Util")
                      , r = e("../core/DiagonalMovement");
                    n.prototype.findPath = function(e, t, i, n, r) {
                        var o, a, s, d, _, e = r.getNodeAt(e, t), t = r.getNodeAt(i, n), u = [], l = [], c = this.diagonalMovement;
                        for (u.push(e),
                        e.opened = !0,
                        e.by = 0,
                        l.push(t),
                        t.opened = !0,
                        t.by = 1; u.length && l.length; ) {
                            for ((s = u.shift()).closed = !0,
                            d = 0,
                            _ = (o = r.getNeighbors(s, c)).length; d < _; ++d)
                                if (!(a = o[d]).closed)
                                    if (a.opened) {
                                        if (1 === a.by)
                                            return h.biBacktrace(s, a)
                                    } else
                                        u.push(a),
                                        a.parent = s,
                                        a.opened = !0,
                                        a.by = 0;
                            for ((s = l.shift()).closed = !0,
                            d = 0,
                            _ = (o = r.getNeighbors(s, c)).length; d < _; ++d)
                                if (!(a = o[d]).closed)
                                    if (a.opened) {
                                        if (0 === a.by)
                                            return h.biBacktrace(a, s)
                                    } else
                                        l.push(a),
                                        a.parent = s,
                                        a.opened = !0,
                                        a.by = 1
                        }
                        return []
                    }
                    ,
                    t.exports = n
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "../core/Util": 7
                }],
                14: [function(e, t, i) {
                    function n(e) {
                        r.call(this, e),
                        this.heuristic = function(e, t) {
                            return 0
                        }
                    }
                    var r = e("./BiAStarFinder");
                    n.prototype = new r,
                    t.exports = n.prototype.constructor = n
                }
                , {
                    "./BiAStarFinder": 11
                }],
                15: [function(e, t, i) {
                    function n(e) {
                        this.allowDiagonal = (e = e || {}).allowDiagonal,
                        this.dontCrossCorners = e.dontCrossCorners,
                        this.diagonalMovement = e.diagonalMovement,
                        this.diagonalMovement || (this.allowDiagonal ? this.dontCrossCorners ? this.diagonalMovement = r.OnlyWhenNoObstacles : this.diagonalMovement = r.IfAtMostOneObstacle : this.diagonalMovement = r.Never)
                    }
                    var h = e("../core/Util")
                      , r = e("../core/DiagonalMovement");
                    n.prototype.findPath = function(e, t, i, n, r) {
                        var o, a, s, d, _, u = [], l = this.diagonalMovement, e = r.getNodeAt(e, t), c = r.getNodeAt(i, n);
                        for (u.push(e),
                        e.opened = !0; u.length; ) {
                            if ((s = u.shift()).closed = !0,
                            s === c)
                                return h.backtrace(c);
                            for (d = 0,
                            _ = (o = r.getNeighbors(s, l)).length; d < _; ++d)
                                (a = o[d]).closed || a.opened || (u.push(a),
                                a.opened = !0,
                                a.parent = s)
                        }
                        return []
                    }
                    ,
                    t.exports = n
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "../core/Util": 7
                }],
                16: [function(e, t, i) {
                    function n(e) {
                        r.call(this, e),
                        this.heuristic = function(e, t) {
                            return 0
                        }
                    }
                    var r = e("./AStarFinder");
                    n.prototype = new r,
                    t.exports = n.prototype.constructor = n
                }
                , {
                    "./AStarFinder": 9
                }],
                17: [function(e, t, i) {
                    function n(e) {
                        this.allowDiagonal = (e = e || {}).allowDiagonal,
                        this.dontCrossCorners = e.dontCrossCorners,
                        this.diagonalMovement = e.diagonalMovement,
                        this.heuristic = e.heuristic || r.manhattan,
                        this.weight = e.weight || 1,
                        this.trackRecursion = e.trackRecursion || !1,
                        this.timeLimit = e.timeLimit || 1 / 0,
                        this.diagonalMovement || (this.allowDiagonal ? this.dontCrossCorners ? this.diagonalMovement = o.OnlyWhenNoObstacles : this.diagonalMovement = o.IfAtMostOneObstacle : this.diagonalMovement = o.Never),
                        this.diagonalMovement === o.Never ? this.heuristic = e.heuristic || r.manhattan : this.heuristic = e.heuristic || r.octile
                    }
                    e("../core/Util");
                    var r = e("../core/Heuristic")
                      , I = e("../core/Node")
                      , o = e("../core/DiagonalMovement");
                    n.prototype.findPath = function(e, t, i, n, c) {
                        for (var r, o, h = (new Date).getTime(), E = function(e, t) {
                            return this.heuristic(Math.abs(t.x - e.x), Math.abs(t.y - e.y))
                        }
                        .bind(this), T = function(e, t, i, n, r) {
                            if (0 < this.timeLimit && (new Date).getTime() - h > 1e3 * this.timeLimit)
                                return 1 / 0;
                            var o = t + E(e, A) * this.weight;
                            if (i < o)
                                return o;
                            if (e == A)
                                return n[r] = [e.x, e.y],
                                e;
                            for (var a, s, d, _ = c.getNeighbors(e, this.diagonalMovement), u = 0, l = 1 / 0; a = _[u]; ++u) {
                                if (this.trackRecursion && (a.retainCount = a.retainCount + 1 || 1,
                                !0 !== a.tested) && (a.tested = !0),
                                (s = T(a, t + (d = a,
                                (s = e).x === d.x || s.y === d.y ? 1 : Math.SQRT2), i, n, r + 1))instanceof I)
                                    return n[r] = [e.x, e.y],
                                    s;
                                this.trackRecursion && 0 == --a.retainCount && (a.tested = !1),
                                s < l && (l = s)
                            }
                            return l
                        }
                        .bind(this), a = c.getNodeAt(e, t), A = c.getNodeAt(i, n), s = E(a, A); ; ) {
                            if ((o = T(a, 0, s, r = [], 0)) === 1 / 0)
                                return [];
                            if (o instanceof I)
                                return r;
                            s = o
                        }
                        return []
                    }
                    ,
                    t.exports = n
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "../core/Heuristic": 5,
                    "../core/Node": 6,
                    "../core/Util": 7
                }],
                18: [function(e, t, i) {
                    function n(e) {
                        r.call(this, e)
                    }
                    var r = e("./JumpPointFinderBase")
                      , l = e("../core/DiagonalMovement");
                    ((n.prototype = new r).constructor = n).prototype._jump = function(e, t, i, n) {
                        var r = this.grid
                          , i = e - i
                          , n = t - n;
                        if (!r.isWalkableAt(e, t))
                            return null;
                        if (!0 === this.trackJumpRecursion && (r.getNodeAt(e, t).tested = !0),
                        r.getNodeAt(e, t) === this.endNode)
                            return [e, t];
                        if (0 != i && 0 != n) {
                            if (r.isWalkableAt(e - i, t + n) && !r.isWalkableAt(e - i, t) || r.isWalkableAt(e + i, t - n) && !r.isWalkableAt(e, t - n))
                                return [e, t];
                            if (this._jump(e + i, t, e, t) || this._jump(e, t + n, e, t))
                                return [e, t]
                        } else if (0 != i) {
                            if (r.isWalkableAt(e + i, t + 1) && !r.isWalkableAt(e, t + 1) || r.isWalkableAt(e + i, t - 1) && !r.isWalkableAt(e, t - 1))
                                return [e, t]
                        } else if (r.isWalkableAt(e + 1, t + n) && !r.isWalkableAt(e + 1, t) || r.isWalkableAt(e - 1, t + n) && !r.isWalkableAt(e - 1, t))
                            return [e, t];
                        return this._jump(e + i, t + n, e, t)
                    }
                    ,
                    n.prototype._findNeighbors = function(e) {
                        var t, i, n, r, o, a = e.parent, s = e.x, d = e.y, _ = this.grid, u = [];
                        if (a)
                            t = a.x,
                            a = a.y,
                            t = (s - t) / Math.max(Math.abs(s - t), 1),
                            a = (d - a) / Math.max(Math.abs(d - a), 1),
                            0 != t && 0 != a ? (_.isWalkableAt(s, d + a) && u.push([s, d + a]),
                            _.isWalkableAt(s + t, d) && u.push([s + t, d]),
                            _.isWalkableAt(s + t, d + a) && u.push([s + t, d + a]),
                            _.isWalkableAt(s - t, d) || u.push([s - t, d + a]),
                            _.isWalkableAt(s, d - a) || u.push([s + t, d - a])) : 0 == t ? (_.isWalkableAt(s, d + a) && u.push([s, d + a]),
                            _.isWalkableAt(s + 1, d) || u.push([s + 1, d + a]),
                            _.isWalkableAt(s - 1, d) || u.push([s - 1, d + a])) : (_.isWalkableAt(s + t, d) && u.push([s + t, d]),
                            _.isWalkableAt(s, d + 1) || u.push([s + t, d + 1]),
                            _.isWalkableAt(s, d - 1) || u.push([s + t, d - 1]));
                        else
                            for (r = 0,
                            o = (i = _.getNeighbors(e, l.Always)).length; r < o; ++r)
                                n = i[r],
                                u.push([n.x, n.y]);
                        return u
                    }
                    ,
                    t.exports = n
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "./JumpPointFinderBase": 23
                }],
                19: [function(e, t, i) {
                    function n(e) {
                        r.call(this, e)
                    }
                    var r = e("./JumpPointFinderBase")
                      , l = e("../core/DiagonalMovement");
                    ((n.prototype = new r).constructor = n).prototype._jump = function(e, t, i, n) {
                        var r = this.grid
                          , i = e - i
                          , n = t - n;
                        if (!r.isWalkableAt(e, t))
                            return null;
                        if (!0 === this.trackJumpRecursion && (r.getNodeAt(e, t).tested = !0),
                        r.getNodeAt(e, t) === this.endNode)
                            return [e, t];
                        if (0 != i && 0 != n) {
                            if (r.isWalkableAt(e - i, t + n) && !r.isWalkableAt(e - i, t) || r.isWalkableAt(e + i, t - n) && !r.isWalkableAt(e, t - n))
                                return [e, t];
                            if (this._jump(e + i, t, e, t) || this._jump(e, t + n, e, t))
                                return [e, t]
                        } else if (0 != i) {
                            if (r.isWalkableAt(e + i, t + 1) && !r.isWalkableAt(e, t + 1) || r.isWalkableAt(e + i, t - 1) && !r.isWalkableAt(e, t - 1))
                                return [e, t]
                        } else if (r.isWalkableAt(e + 1, t + n) && !r.isWalkableAt(e + 1, t) || r.isWalkableAt(e - 1, t + n) && !r.isWalkableAt(e - 1, t))
                            return [e, t];
                        return r.isWalkableAt(e + i, t) || r.isWalkableAt(e, t + n) ? this._jump(e + i, t + n, e, t) : null
                    }
                    ,
                    n.prototype._findNeighbors = function(e) {
                        var t, i, n, r, o, a = e.parent, s = e.x, d = e.y, _ = this.grid, u = [];
                        if (a)
                            t = a.x,
                            a = a.y,
                            t = (s - t) / Math.max(Math.abs(s - t), 1),
                            a = (d - a) / Math.max(Math.abs(d - a), 1),
                            0 != t && 0 != a ? (_.isWalkableAt(s, d + a) && u.push([s, d + a]),
                            _.isWalkableAt(s + t, d) && u.push([s + t, d]),
                            (_.isWalkableAt(s, d + a) || _.isWalkableAt(s + t, d)) && u.push([s + t, d + a]),
                            !_.isWalkableAt(s - t, d) && _.isWalkableAt(s, d + a) && u.push([s - t, d + a]),
                            !_.isWalkableAt(s, d - a) && _.isWalkableAt(s + t, d) && u.push([s + t, d - a])) : 0 == t ? _.isWalkableAt(s, d + a) && (u.push([s, d + a]),
                            _.isWalkableAt(s + 1, d) || u.push([s + 1, d + a]),
                            _.isWalkableAt(s - 1, d) || u.push([s - 1, d + a])) : _.isWalkableAt(s + t, d) && (u.push([s + t, d]),
                            _.isWalkableAt(s, d + 1) || u.push([s + t, d + 1]),
                            _.isWalkableAt(s, d - 1) || u.push([s + t, d - 1]));
                        else
                            for (r = 0,
                            o = (i = _.getNeighbors(e, l.IfAtMostOneObstacle)).length; r < o; ++r)
                                n = i[r],
                                u.push([n.x, n.y]);
                        return u
                    }
                    ,
                    t.exports = n
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "./JumpPointFinderBase": 23
                }],
                20: [function(e, t, i) {
                    function n(e) {
                        r.call(this, e)
                    }
                    var r = e("./JumpPointFinderBase")
                      , E = e("../core/DiagonalMovement");
                    ((n.prototype = new r).constructor = n).prototype._jump = function(e, t, i, n) {
                        var r = this.grid
                          , i = e - i
                          , n = t - n;
                        if (!r.isWalkableAt(e, t))
                            return null;
                        if (!0 === this.trackJumpRecursion && (r.getNodeAt(e, t).tested = !0),
                        r.getNodeAt(e, t) === this.endNode)
                            return [e, t];
                        if (0 != i && 0 != n) {
                            if (this._jump(e + i, t, e, t) || this._jump(e, t + n, e, t))
                                return [e, t]
                        } else if (0 != i) {
                            if (r.isWalkableAt(e, t - 1) && !r.isWalkableAt(e - i, t - 1) || r.isWalkableAt(e, t + 1) && !r.isWalkableAt(e - i, t + 1))
                                return [e, t]
                        } else if (0 != n && (r.isWalkableAt(e - 1, t) && !r.isWalkableAt(e - 1, t - n) || r.isWalkableAt(e + 1, t) && !r.isWalkableAt(e + 1, t - n)))
                            return [e, t];
                        return r.isWalkableAt(e + i, t) && r.isWalkableAt(e, t + n) ? this._jump(e + i, t + n, e, t) : null
                    }
                    ,
                    n.prototype._findNeighbors = function(e) {
                        var t, i, n, r, o, a, s, d, _ = e.parent, u = e.x, l = e.y, c = this.grid, h = [];
                        if (_)
                            s = _.x,
                            _ = _.y,
                            s = (u - s) / Math.max(Math.abs(u - s), 1),
                            _ = (l - _) / Math.max(Math.abs(l - _), 1),
                            0 != s && 0 != _ ? (c.isWalkableAt(u, l + _) && h.push([u, l + _]),
                            c.isWalkableAt(u + s, l) && h.push([u + s, l]),
                            c.isWalkableAt(u, l + _) && c.isWalkableAt(u + s, l) && h.push([u + s, l + _])) : 0 != s ? (o = c.isWalkableAt(u + s, l),
                            d = c.isWalkableAt(u, l + 1),
                            a = c.isWalkableAt(u, l - 1),
                            o && (h.push([u + s, l]),
                            d && h.push([u + s, l + 1]),
                            a) && h.push([u + s, l - 1]),
                            d && h.push([u, l + 1]),
                            a && h.push([u, l - 1])) : 0 != _ && (o = c.isWalkableAt(u, l + _),
                            s = c.isWalkableAt(u + 1, l),
                            d = c.isWalkableAt(u - 1, l),
                            o && (h.push([u, l + _]),
                            s && h.push([u + 1, l + _]),
                            d) && h.push([u - 1, l + _]),
                            s && h.push([u + 1, l]),
                            d) && h.push([u - 1, l]);
                        else
                            for (n = 0,
                            r = (t = c.getNeighbors(e, E.OnlyWhenNoObstacles)).length; n < r; ++n)
                                i = t[n],
                                h.push([i.x, i.y]);
                        return h
                    }
                    ,
                    t.exports = n
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "./JumpPointFinderBase": 23
                }],
                21: [function(e, t, i) {
                    function n(e) {
                        r.call(this, e)
                    }
                    var r = e("./JumpPointFinderBase")
                      , l = e("../core/DiagonalMovement");
                    ((n.prototype = new r).constructor = n).prototype._jump = function(e, t, i, n) {
                        var r = this.grid
                          , i = e - i
                          , n = t - n;
                        if (!r.isWalkableAt(e, t))
                            return null;
                        if (!0 === this.trackJumpRecursion && (r.getNodeAt(e, t).tested = !0),
                        r.getNodeAt(e, t) === this.endNode)
                            return [e, t];
                        if (0 != i) {
                            if (r.isWalkableAt(e, t - 1) && !r.isWalkableAt(e - i, t - 1) || r.isWalkableAt(e, t + 1) && !r.isWalkableAt(e - i, t + 1))
                                return [e, t]
                        } else {
                            if (0 == n)
                                throw new Error("Only horizontal and vertical movements are allowed");
                            if (r.isWalkableAt(e - 1, t) && !r.isWalkableAt(e - 1, t - n) || r.isWalkableAt(e + 1, t) && !r.isWalkableAt(e + 1, t - n))
                                return [e, t];
                            if (this._jump(e + 1, t, e, t) || this._jump(e - 1, t, e, t))
                                return [e, t]
                        }
                        return this._jump(e + i, t + n, e, t)
                    }
                    ,
                    n.prototype._findNeighbors = function(e) {
                        var t, i, n, r, o, a = e.parent, s = e.x, d = e.y, _ = this.grid, u = [];
                        if (a)
                            t = a.x,
                            a = a.y,
                            t = (s - t) / Math.max(Math.abs(s - t), 1),
                            a = (d - a) / Math.max(Math.abs(d - a), 1),
                            0 != t ? (_.isWalkableAt(s, d - 1) && u.push([s, d - 1]),
                            _.isWalkableAt(s, d + 1) && u.push([s, d + 1]),
                            _.isWalkableAt(s + t, d) && u.push([s + t, d])) : 0 != a && (_.isWalkableAt(s - 1, d) && u.push([s - 1, d]),
                            _.isWalkableAt(s + 1, d) && u.push([s + 1, d]),
                            _.isWalkableAt(s, d + a)) && u.push([s, d + a]);
                        else
                            for (r = 0,
                            o = (i = _.getNeighbors(e, l.Never)).length; r < o; ++r)
                                n = i[r],
                                u.push([n.x, n.y]);
                        return u
                    }
                    ,
                    t.exports = n
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "./JumpPointFinderBase": 23
                }],
                22: [function(e, t, i) {
                    var n = e("../core/DiagonalMovement")
                      , r = e("./JPFNeverMoveDiagonally")
                      , o = e("./JPFAlwaysMoveDiagonally")
                      , a = e("./JPFMoveDiagonallyIfNoObstacles")
                      , s = e("./JPFMoveDiagonallyIfAtMostOneObstacle");
                    t.exports = function(e) {
                        return new ((e = e || {}).diagonalMovement === n.Never ? r : e.diagonalMovement === n.Always ? o : e.diagonalMovement === n.OnlyWhenNoObstacles ? a : s)(e)
                    }
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "./JPFAlwaysMoveDiagonally": 18,
                    "./JPFMoveDiagonallyIfAtMostOneObstacle": 19,
                    "./JPFMoveDiagonallyIfNoObstacles": 20,
                    "./JPFNeverMoveDiagonally": 21
                }],
                23: [function(e, t, i) {
                    function n(e) {
                        this.heuristic = (e = e || {}).heuristic || A.manhattan,
                        this.trackJumpRecursion = e.trackJumpRecursion || !1
                    }
                    var d = e("heap")
                      , _ = e("../core/Util")
                      , A = e("../core/Heuristic");
                    e("../core/DiagonalMovement"),
                    n.prototype.findPath = function(e, t, i, n, r) {
                        var o, a = this.openList = new d(function(e, t) {
                            return e.f - t.f
                        }
                        ), e = this.startNode = r.getNodeAt(e, t), s = this.endNode = r.getNodeAt(i, n);
                        for (this.grid = r,
                        e.g = 0,
                        e.f = 0,
                        a.push(e),
                        e.opened = !0; !a.empty(); ) {
                            if ((o = a.pop()).closed = !0,
                            o === s)
                                return _.expandPath(_.backtrace(s));
                            this._identifySuccessors(o)
                        }
                        return []
                    }
                    ,
                    n.prototype._identifySuccessors = function(e) {
                        var t, i, n, r, o, a, s, d = this.grid, _ = this.heuristic, u = this.openList, l = this.endNode.x, c = this.endNode.y, h = e.x, E = e.y, T = Math.abs;
                        for (Math.max,
                        i = 0,
                        n = (t = this._findNeighbors(e)).length; i < n; ++i)
                            if (o = t[i],
                            o = this._jump(o[0], o[1], h, E)) {
                                if (r = o[0],
                                o = o[1],
                                (s = d.getNodeAt(r, o)).closed)
                                    continue;
                                a = A.octile(T(r - h), T(o - E)),
                                a = e.g + a,
                                (!s.opened || a < s.g) && (s.g = a,
                                s.h = s.h || _(T(r - l), T(o - c)),
                                s.f = s.g + s.h,
                                s.parent = e,
                                s.opened ? u.updateItem(s) : (u.push(s),
                                s.opened = !0))
                            }
                    }
                    ,
                    t.exports = n
                }
                , {
                    "../core/DiagonalMovement": 3,
                    "../core/Heuristic": 5,
                    "../core/Util": 7,
                    heap: 1
                }]
            }, {}, [8])(8)
        }
        ,
        "object" == typeof exports ? module.exports = c() : "function" == typeof define && define.amd ? define(c) : ("undefined" != typeof window ? E = window : "undefined" != typeof global ? E = global : "undefined" != typeof self && (E = self),
        E.PF = c())
    }(),
    window.Timers = Date.now(),
    window.Candrink = !0,
    window.Chinko = [],
    window.FixArray = 0,
    window.FixStop = !1,
    window.bruh = 0,
    window.Caneat = !0;
    let r, o, z = [], k = [], W = !1, V = !1;
    const U = {
        "Reidite Spike": 213,
        "Amethyst Spike": 117,
        "Diamond Spike": 164,
        "Gold Spike": 163,
        "Stone Spike": 162,
        "Wood Spike": 154,
        "Wood Wall": 156,
        Nothing: -1
    };
    let K = []
      , F = []
      , O = !1
      , d = 0;
    function t() {
        Pe[Ge.DRAGON_CUBE] = ["You feel a great power emanating from this orb"],
        n[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."],
        Pe[Ge.CRAB_STICK] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"],
        Pe[TEXT.BACK_TO_THE_GAME] = " BACK TO THE GAME",
        Pe[TEXT.TWITTER] = " Share on Twitter",
        Pe[TEXT.FACEBOOK] = " Share on Facebook",
        Pe[TEXT.KIT_NEXT] = "You can buy items on the shop in the next game with your points",
        Pe[TEXT.POINTS] = "points",
        Pe[TEXT.SCORE] = "Score",
        Pe[TEXT.KILL] = "Kill",
        Pe[TEXT.DAYS_SURVIVED] = "Days survived",
        Pe[TEXT.MODE_FREE] = "Building method: Free. Press G to change",
        Pe[TEXT.MODE_GRID] = "Building method: Grid. Press G to change",
        Pe[Ge.CRAB_LOOT] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"],
        Pe[Ge.CRAB_SPEAR] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"],
        Pe[Ge.CROWN_CRAB] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"],
        Pe[Ge.BED] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"],
        document.getElementById("typequest").innerHTML = "Chrono Quests",
        document.getElementById("timeremainingquest").innerHTML = "Time Remaining",
        document.getElementById("constraintquest").innerHTML = " Constraints",
        document.getElementById("claim_rewards").innerHTML = " Claim rewards",
        document.getElementById("rewardquest").innerHTML = " Reward",
        document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart",
        document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst",
        document.getElementById("survive20min_3").innerHTML = "Survive without losing life",
        document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests",
        document.getElementById("dont_hit_5").innerHTML = " Be peaceful",
        document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter",
        document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
        for (var e = 0; e < 7; e++)
            document.getElementById("claim_reward_" + e).innerHTML = "CLAIM REWARD!";
        document.getElementById("quit_chronoquest").innerHTML = " QUIT",
        Pe[Ge.HAND] = ["Ð ÑƒÐºÐ°"],
        Pe[Ge.GROUND] = ["Ð—ÐµÐ¼Ð»Ñ", "Ð“Ñ€ÑÐ·Ð½Ð¾!"],
        Pe[Ge.SAND] = ["ÐŸÐµÑÐ¾Ðº", "ÐžÐ½ Ð² Ð¼Ð¾Ð¸Ñ… Ð³Ð»Ð°Ð·Ð°Ñ…!"],
        Pe[Ge.WOOD] = ["Ð”ÐµÑ€ÐµÐ²Ð¾", "ÐŸÐ¾ÑÑ‚Ð¾ÑÐ½Ð½Ð¾ Ð½ÑƒÐ¶Ð½Ð¾ Ð±Ð¾Ð»ÑŒÑˆÐµ!"],
        Pe[Ge.STONE] = ["ÐšÐ°Ð¼ÐµÐ½ÑŒ", "Ð¢Ð²ÐµÑ€Ð´Ñ‹Ð¹"],
        Pe[Ge.GOLD] = ["Ð—Ð¾Ð»Ð¾Ñ‚Ð¾", "Ð‘ÑƒÐ´ÑŒÑ‚Ðµ Ñ‰ÐµÐ´Ñ€Ñ‹, Ð´Ð°Ð²Ð°Ð¹Ñ‚Ðµ ÐµÐ³Ð¾ Ð´Ñ€ÑƒÐ³Ð¸Ð¼"],
        Pe[Ge.DIAMOND] = ["ÐÐ»Ð¼Ð°Ð·", "Ð§Ñ‚Ð¾ Ð²Ñ‹ ÑÐ¾Ð·Ð´Ð°Ð´Ð¸Ñ‚Ðµ Ñ Ð¿Ð¾Ð¼Ð¾Ñ‰ÑŒÑŽ Ð½ÐµÐ³Ð¾?"],
        Pe[Ge.AMETHYST] = ["ÐÐ¼ÐµÑ‚Ð¸ÑÑ‚", "ÐžÐ½ ÑÐ¸Ñ€ÐµÐ½ÐµÐ²Ñ‹Ð¹, ÐºÐ°Ðº Lapa"],
        Pe[Ge.FLOUR] = ["ÐœÑƒÐºÐ°", "Ð˜ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð² Ð³Ð¾Ñ‚Ð¾Ð²ÐºÐµ"],
        Pe[Ge.COOKIE] = ["ÐŸÐµÑ‡ÐµÐ½ÑŒÐµ", "ÐŸÑ€ÐµÐ²Ð¾ÑÑ…Ð¾Ð´Ð½Ð¾Ðµ Ð±Ð°Ð±ÑƒÑˆÐºÐ¸Ð½Ð¾ Ð¿ÐµÑ‡ÐµÐ½ÑŒÐµ", "Ð•Ð´Ð°: 50"],
        Pe[Ge.CAKE] = ["Ð¢Ð¾Ñ€Ñ‚", "Ð¢Ð¾Ñ€Ñ‚ Ð¼ÐµÑ‡Ñ‚Ñ‹ Ð´Ð»Ñ Ð³ÑƒÑ€Ð¼Ð°Ð½Ð¾Ð²", "Ð•Ð´Ð°: 100"],
        Pe[Ge.MEAT] = ["Ð¡Ñ‹Ñ€Ð¾Ðµ ÐœÑÑÐ¾", "Ð¢Ñ‹ Ð¼Ð¾Ð¶ÐµÑˆÑŒ Ð¿Ð¾Ð¶Ð°Ñ€Ð¸Ñ‚ÑŒ ÐµÐ³Ð¾ Ñ Ð¿Ð¾Ð¼Ð¾Ñ‰ÑŒÑŽ Ð¾Ð³Ð½Ñ", "Ð’Ñ‹Ð·Ñ‹Ð²Ð°ÐµÑ‚ Ð¾Ñ‚Ñ€Ð°Ð²Ð»ÐµÐ½Ð¸Ðµ: 10", "Ð•Ð´Ð°: 15"],
        Pe[Ge.COOKED_MEAT] = ["Ð–Ð°Ñ€ÐµÐ½Ð¾Ðµ ÐœÑÑÐ¾", "ÐŸÑ€ÐµÐ²Ð¾ÑÑ…Ð¾Ð´Ð½Ñ‹Ð¹ ÑÑ‚ÐµÐ¹Ðº, Ð¿Ð¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°", "Ð•Ð´Ð°: 35"],
        Pe[Ge.FOODFISH] = ["Ð¡Ñ‹Ñ€Ð°Ñ Ð Ñ‹Ð±Ð°", "Ð¯ Ð´ÑƒÐ¼Ð°ÑŽ Ð¾Ð½Ð° Ð²ÑÑ‘ ÐµÑ‰Ñ‘ Ð¶Ð¸Ð²Ð°", "Ð’Ñ‹Ð·Ñ‹Ð²Ð°ÐµÑ‚ Ð¾Ñ‚Ñ€Ð°Ð²Ð»ÐµÐ½Ð¸Ðµ: 10", "Ð•Ð´Ð°: 18"],
        Pe[Ge.FOODFISH_COOKED] = ["Ð–Ð°Ñ€ÐµÐ½Ð°Ñ Ñ€Ñ‹Ð±Ð°", "Ð¡ Ð»Ð¸Ð¼Ð¾Ð½Ð¾Ð¼ Ð¾Ð½Ð° Ð¿Ñ€ÐµÐºÑ€Ð°ÑÐ½Ð°", "Ð•Ð´Ð°: 35"],
        Pe[Ge.BREAD] = ["Ð¥Ð»ÐµÐ±", "ÐŸÑ€ÐµÐºÑ€Ð°ÑÐ½Ñ‹Ð¹ Ñ„Ñ€Ð°Ð½Ñ†ÑƒÐ·ÑÐºÐ¸Ð¹ Ñ…Ð»ÐµÐ±", "Ð­Ñ‚Ð¾ Ð²Ð°Ð»ÑŽÑ‚Ð°, Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÐ¼Ð°Ñ Ð½Ð° Ñ€Ñ‹Ð½ÐºÐµ", "Ð•Ð´Ð°: 15"],
        Pe[Ge.SANDWICH] = ["Ð‘ÑƒÑ‚ÐµÑ€Ð±Ñ€Ð¾Ð´", "ÐÐ° Ð²ÐºÑƒÑ ÐºÐ°Ðº ÐšÑ€Ð°Ð±ÑÐ±ÑƒÑ€Ð³ÐµÑ€", "Ð•Ð´Ð°: 100"],
        Pe[Ge.CANDY] = ["ÐšÐ¾Ð½Ñ„ÐµÑ‚Ñ‹", "Ð¢Ð¾Ð»ÑŒÐºÐ¾ Ð´Ð»Ñ Ð´ÐµÑ‚ÐµÐ¹!", "Ð•Ð´Ð°: 20"],
        Pe[Ge.SUGAR_CAN] = ["Ð¡Ð°Ñ…Ð°Ñ€Ð½Ð°Ñ Ð¢Ñ€Ð¾ÑÑ‚ÑŒ", "ÐŸÐ¾Ð¿Ñ€Ð¾Ð±ÑƒÐ¹Ñ‚Ðµ ÑÑ‚Ð¾, ÑÑ‚Ð¾ Ð²ÐºÑƒÑÐ½Ð¾", "Ð•Ð´Ð°: 100"],
        Pe[Ge.GARLAND] = ["Ð“Ð¸Ñ€Ð»ÑÐ½Ð´Ð°", "ÐŸÑ€ÐµÐºÑ€Ð°ÑÐ½Ð°Ñ Ð´ÐµÐºÐ¾Ñ€Ð°Ñ†Ð¸Ñ Ð´Ð»Ñ ÐºÑ€Ñ‹ÑˆÐ¸"],
        Pe[Ge.SEED] = ["Ð¡ÐµÐ¼Ñ Ð¯Ð³Ð¾Ð´Ñ‹", "Ð’Ñ‹Ñ€Ð°ÑÑ‚Ð°ÐµÑ‚ Ð² ÑÐ³Ð¾Ð´Ñ‹", "Ð Ð¾Ð¶Ð´ÐµÐ½Ð¸Ðµ: 2Ð¼Ð¸Ð½", "Ð Ð¾ÑÑ‚: 55ÑÐµÐº", "ÐÑƒÐ¶Ð½Ð° Ð²Ð¾Ð´Ð°: 3Ð¼Ð¸Ð½ 20ÑÐµÐº", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 700", "ÐŸÑ€Ð¾Ð´Ð¾Ð»Ð¶Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ÑÑ‚ÑŒ: 8 Ð´Ð½ÐµÐ¹"],
        Pe[Ge.PLANT] = ["Ð¯Ð³Ð¾Ð´Ð°", "Ð¯Ð³Ð¾Ð´Ð° Ð²ÐºÑƒÑÐ½Ð°Ñ!", "Ð•Ð´Ð°: 10"],
        Pe[Ge.WHEAT_SEED] = ["ÐŸÑˆÐµÐ½Ð¸Ñ‡Ð½Ð¾Ðµ Ð¡ÐµÐ¼Ñ", "Ð’Ñ‹Ñ€Ð°ÑÑ‚Ð°ÐµÑ‚ Ð² Ð¿ÑˆÐµÐ½Ð¸Ñ†Ñƒ", "Ð Ð¾Ð¶Ð´ÐµÐ½Ð¸Ðµ: 2Ð¼Ð¸Ð½", "Ð Ð¾ÑÑ‚: 16ÑÐµÐº", "ÐÑƒÐ¶Ð½Ð° Ð²Ð¾Ð´Ð°: 2Ð¼Ð¸Ð½", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 700", "ÐŸÑ€Ð¾Ð´Ð¾Ð»Ð¶Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ÑÑ‚ÑŒ: 8 Ð´Ð½ÐµÐ¹"],
        Pe[Ge.WILD_WHEAT] = ["Ð”Ð¸ÐºÐ°Ñ ÐŸÑˆÐµÐ½Ð¸Ñ†Ð°", "ÐŸÐµÑ€ÐµÐ¼Ð°Ð»Ñ‹Ð²Ð°ÐµÑ‚ÑÑ Ð² Ð¼ÑƒÐºÑƒ, ÐºÐ¾Ð³Ð´Ð° Ð¿Ð¾Ð¼ÐµÑ‰Ð°ÐµÑ‚ÑÑ Ð² Ð¼ÐµÐ»ÑŒÐ½Ð¸Ñ†Ñƒ"],
        Pe[Ge.PUMPKIN_SEED] = ["Ð¡ÐµÐ¼ÐµÐ½Ð° Ð¢Ñ‹ÐºÐ²Ñ‹", "Ð’Ñ‹Ñ€Ð°ÑÑ‚Ð°ÐµÑ‚ Ð² Ñ‚Ñ‹ÐºÐ²Ñƒ", "Ð Ð¾Ð¶Ð´ÐµÐ½Ð¸Ðµ: 2Ð¼Ð¸Ð½ 40ÑÐµÐº", "Ð Ð¾ÑÑ‚: 2Ð¼Ð¸Ð½", "ÐÑƒÐ¶Ð½Ð° Ð²Ð¾Ð´Ð°: 2Ð¼Ð¸Ð½", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 700", "ÐŸÑ€Ð¾Ð´Ð¾Ð»Ð¶Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ÑÑ‚ÑŒ: 8 Ð´Ð½ÐµÐ¹"],
        Pe[Ge.PUMPKIN] = ["Ð¢Ñ‹ÐºÐ²Ð°", "Ð­Ñ‚Ð¾ Ð½Ð°Ð¿Ð¾Ð¼Ð¸Ð½Ð°ÐµÑ‚ Ð¼Ð½Ðµ Ð¥ÐµÐ»Ð»Ð¾ÑƒÐ¸Ð½", "Ð•Ð´Ð°: 30"],
        Pe[Ge.GARLIC_SEED] = ["Ð¡ÐµÐ¼ÐµÐ½Ð° Ð§ÐµÑÐ½Ð¾ÐºÐ°", "ÐžÑ‡ÐµÐ½ÑŒ Ð¾Ð¿Ð°ÑÐ½Ð¾ Ð´Ð»Ñ Ð²Ð°Ð¼Ð¿Ð¸Ñ€Ð¾Ð²", "Ð£Ñ€Ð¾Ð½: 20", "Ð Ð¾Ð¶Ð´ÐµÐ½Ð¸Ðµ: 4Ð¼Ð¸Ð½", "Ð Ð¾ÑÑ‚: 4 Ð¼Ð¸Ð½", "ÐÑƒÐ¶Ð½Ð° Ð²Ð¾Ð´Ð°: 1Ð¼Ð¸Ð½ 40ÑÐµÐº", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 700", "ÐŸÑ€Ð¾Ð´Ð¾Ð»Ð¶Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ÑÑ‚ÑŒ: 8 Ð´Ð½ÐµÐ¹"],
        Pe[Ge.GARLIC] = ["Ð§ÐµÑÐ½Ð¾Ðº", "Ð›ÐµÑ‡Ð¸Ñ‚ Ð¸ ÑÐ½Ð¸Ð¶Ð°ÐµÑ‚ Ð¿Ð¾Ð»ÑƒÑ‡Ð°ÐµÐ¼Ñ‹Ð¹ Ñ…Ð¾Ð»Ð¾Ð´", "Ð•Ð´Ð°: 14", "Ð›ÐµÑ‡Ð¸Ñ‚: 30", "Ð­Ñ„Ñ„ÐµÐºÑ‚: 1"],
        Pe[Ge.THORNBUSH_SEED] = ["Ð¡ÐµÐ¼ÐµÐ½Ð° ÐšÐ¾Ð»ÑŽÑ‡ÐµÐ³Ð¾ ÐšÑƒÑÑ‚Ð°", "ÐœÐ¾Ð¶ÐµÑ‚ Ð½Ð°Ð½ÐµÑÑ‚Ð¸ ÑƒÑ€Ð¾Ð½ Ð²Ñ€Ð°Ð³Ð°Ð¼", "Ð£Ñ€Ð¾Ð½: 20", "Ð Ð¾Ð¶Ð´ÐµÐ½Ð¸Ðµ: 4Ð¼Ð¸Ð½", "Ð Ð¾ÑÑ‚: 15ÑÐµÐº", "ÐÑƒÐ¶Ð½Ð° Ð²Ð¾Ð´Ð°: 3Ð¼Ð¸Ð½", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 1000", "ÐŸÑ€Ð¾Ð´Ð¾Ð»Ð¶Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ÑÑ‚ÑŒ: 8 Ð´Ð½ÐµÐ¹"],
        Pe[Ge.THORNBUSH] = ["ÐšÐ¾Ð»ÑŽÑ‡Ð¸Ð¹ ÐšÑƒÑÑ‚", "Ð­Ñ‚Ð¾ Ð±Ð¾Ð»ÑŒÐ½Ð¾!"],
        Pe[Ge.PLOT] = ["Ð“Ñ€ÑÐ´ÐºÐ°", "Ð¡ÐµÑ€ÑŒÐµÐ·Ð½Ð¾, Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐ¹Ñ‚Ðµ ÑÑ‚Ð¾.", "Ð¡ ÑÑ‚Ð¸Ð¼ Ð“ÐœÐž ÑƒÐ´Ð¾Ð±Ñ€ÐµÐ½Ð¸ÐµÐ¼ Ð²Ð°ÑˆÐ¸ Ñ€Ð°ÑÑ‚ÐµÐ½Ð¸Ñ", "Ð±ÑƒÐ´ÑƒÑ‚ Ñ€Ð°ÑÑ‚Ð¸ Ð±Ñ‹ÑÑ‚Ñ€ÐµÐµ Ð¸ Ð¿Ð¾Ñ‚Ñ€ÐµÐ±ÑƒÑŽÑ‚ Ð¼ÐµÐ½ÑŒÑˆÐµ Ð²Ð¾Ð´Ñ‹", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 2000"],
        Pe[Ge.ICE] = ["Ð›Ñ‘Ð´", "Ð˜ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð´Ð»Ñ Ð¸Ð·Ð³Ð¾Ñ‚Ð¾Ð²Ð»ÐµÐ½Ð¸Ñ Ñ‚Ð¾Ñ€Ñ‚Ð¾Ð² Ð¸ Ð²Ð¾Ð´Ñ‹"],
        Pe[Ge.SPANNER] = ["Ð“Ð°ÐµÑ‡Ð½Ñ‹Ð¹ ÐšÐ»ÑŽÑ‡", "Ð”Ð»Ñ Ð¿Ð¾Ñ‡Ð¸Ð½ÐºÐ¸ Ð´Ð²ÐµÑ€ÐµÐ¹, ÑÑ‚ÐµÐ½, ÐºÐ¾Ð»ÑŽÑ‡ÐµÐº", "Ð£Ñ€Ð¾Ð½: 2"],
        Pe[Ge.FUR_WOLF] = ["Ð¨ÐºÑƒÑ€Ð° Ð’Ð¾Ð»ÐºÐ°", "Ð©ÐµÐ½Ð¾Ðº? ÐÐ¾ Ð³Ð´Ðµ Ð¶Ðµ Ð©ÐµÐ½Ð¾Ðº?!"],
        Pe[Ge.FUR] = ["Ð¨ÐºÑƒÑ€Ð° Ð—Ð°Ð¹Ñ†Ð°", "Ð­Ñ‚Ð¾Ñ‚ ÐºÑ€Ð¾Ð»Ð¸Ðº Ð±Ñ‹Ð» Ñ‚Ð°ÐºÐ¸Ð¼ Ð¼Ð¸Ð»Ñ‹Ð¼..."],
        Pe[Ge.SPECIAL_FUR] = ["Ð§Ð¸ÑÑ‚Ð°Ñ Ð¨ÐºÑƒÑ€Ð°", "Ð’Ñ‹ - Ñ„Ð°Ð±Ñ€Ð¸ÐºÐ° Ñ…Ð»ÐµÐ±Ð°"],
        Pe[Ge.SPECIAL_FUR_2] = ["Ð§Ñ‘Ñ€Ð½Ð°Ñ Ð¨ÐºÑƒÑ€Ð°", "Ð’Ñ‹ Ð³Ð¾Ñ‚Ð¾Ð²Ñ‹ Ð´ÐµÐ»Ð°Ñ‚ÑŒ Ð·Ð»Ð¾."],
        Pe[Ge.FUR_WINTER] = ["Ð—Ð¸Ð¼Ð½ÑÑ Ð¨ÐºÑƒÑ€Ð°", "Ð­Ñ‚Ð¸ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ðµ Ð¿Ñ€Ð¾ÑÑ‚Ð¾ Ñ…Ð¾Ñ‚ÐµÐ»Ð¸ Ð¾Ð±Ð½ÑÑ‚ÑŒ Ñ‚ÐµÐ±Ñ..."],
        Pe[Ge.SCALES] = ["Ð§ÐµÑˆÑƒÑ", "ÐžÐ½Ð° Ð¿Ð°Ñ…Ð½ÐµÑ‚ Ñ€Ñ‹Ð±Ð¾Ð¹!"],
        Pe[Ge.KRAKEN_SKIN] = ["Ð¨ÐºÑƒÑ€Ð° ÐšÑ€Ð°ÐºÐµÐ½Ð°", "Ð’Ñ‹ Ð½Ðµ Ð¸ÑÐ¿ÑƒÐ³Ð°Ð»Ð¸ÑÑŒ?"],
        Pe[Ge.FIRE] = ["ÐšÐ¾ÑÑ‚Ñ‘Ñ€", "Ð¡Ð¾Ð³Ñ€ÐµÐ¹Ñ‚ÐµÑÑŒ!", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 150", "ÐŸÑ€Ð¾Ð´Ð¾Ð»Ð¶Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ÑÑ‚ÑŒ: 2Ð¼Ð¸Ð½"],
        Pe[Ge.BIG_FIRE] = ["Ð‘Ð¾Ð»ÑŒÑˆÐ¾Ð¹ ÐšÐ¾ÑÑ‚Ñ‘Ñ€", "Ð¡Ð¾Ð³Ñ€ÐµÐ¹Ñ‚ÐµÑÑŒ Ð±Ð¾Ð»ÑŒÑˆÐµ!", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 400", "ÐŸÑ€Ð¾Ð´Ð¾Ð»Ð¶Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ÑÑ‚ÑŒ: 6Ð¼Ð¸Ð½"],
        Pe[Ge.WORKBENCH] = ["Ð’ÐµÑ€ÑÑ‚Ð°Ðº", "ÐÐµÐ¾Ð±Ñ…Ð¾Ð´Ð¸Ð¼ Ð´Ð»Ñ ÑÐ¾Ð·Ð´Ð°Ð½Ð¸Ñ Ð¼Ð½Ð¾Ð³Ð¸Ñ… Ð¿Ñ€ÐµÐ´Ð¼ÐµÑ‚Ð¾Ð²"],
        Pe[Ge.CORD] = ["ÐÐ¸Ñ‚ÑŒ", "Ð˜ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð² Ð¸Ð·Ð³Ð¾Ñ‚Ð¾Ð²Ð»ÐµÐ½Ð¸Ð¸ Ð¨Ð°Ð¿Ð¾Ðº Ð¸ Ð ÑŽÐºÐ·Ð°ÐºÐ°"],
        Pe[Ge.BLUE_CORD] = ["ÐÐ»Ð¼Ð°Ð·Ð½Ð°Ñ ÐÐ¸Ñ‚ÑŒ", "Ð˜ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð² Ð¸Ð·Ð³Ð¾Ñ‚Ð¾Ð²Ð»ÐµÐ½Ð¸Ð¸ ÑÐ¿ÐµÑ†Ð¸Ð°Ð»ÑŒÐ½Ñ‹Ñ… ÑˆÐ°Ð¿Ð¾Ðº"],
        Pe[Ge.CHEST] = ["Ð¡ÑƒÐ½Ð´ÑƒÐº", "ÐŸÐ¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ Ñ…Ñ€Ð°Ð½Ð¸Ñ‚ÑŒ Ð¿Ñ€ÐµÐ´Ð¼ÐµÑ‚Ñ‹", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 500"],
        Pe[Ge.SWORD_WOOD] = ["Ð”ÐµÑ€ÐµÐ²ÑÐ½Ð½Ñ‹Ð¹ ÐœÐµÑ‡", "Ð­Ñ‚Ð¾ Ñ€Ð°Ð±Ð¾Ñ‚Ð°ÐµÑ‚?", "Ð£Ñ€Ð¾Ð½: 12", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 4"],
        Pe[Ge.SWORD] = ["ÐšÐ°Ð¼ÐµÐ½Ð½Ñ‹Ð¹ ÐœÐµÑ‡", "Ð‘ÑƒÐ´ÑŒÑ‚Ðµ Ð´Ð¾Ð±Ñ€Ñ‹ Ðº Ð´Ñ€ÑƒÐ³Ð¸Ð¼", "Ð£Ñ€Ð¾Ð½: 19", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 6"],
        Pe[Ge.SWORD_GOLD] = ["Ð—Ð¾Ð»Ð¾Ñ‚Ð¾Ð¹ ÐœÐµÑ‡", "ÐšÐ¾Ñ€Ð¾Ð»ÑŒ Ð»ÐµÑÐ°", "Ð£Ñ€Ð¾Ð½: 22", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 7"],
        Pe[Ge.SWORD_DIAMOND] = ["ÐÐ»Ð¼Ð°Ð·Ð½Ñ‹Ð¹ ÐœÐµÑ‡", "Ð¢Ñ‹ Ð¼Ð¾Ð¶ÐµÑˆÑŒ Ð¿Ð¾Ñ‡ÑƒÐ²ÑÑ‚Ð²Ð¾Ð²Ð°Ñ‚ÑŒ ÑÐ¸Ð»Ñƒ", "Ð£Ñ€Ð¾Ð½: 24", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 8"],
        Pe[Ge.PIRATE_SWORD] = ["ÐŸÐ¸Ñ€Ð°Ñ‚ÑÐºÐ¸Ð¹ ÐœÐµÑ‡", "AÑ€Ñ€Ñ€Ñ€Ñ€!", "Ð”Ð°Ð»ÑŒÐ½Ð¾ÑÑ‚ÑŒ Ð°Ñ‚Ð°ÐºÐ¸ Ð±Ð¾Ð»ÑŒÑˆÐµ Ñ‡ÐµÐ¼ Ñƒ Ð½Ð¾Ñ€Ð¼Ð°Ð»ÑŒÐ½Ð¾Ð³Ð¾ Ð¼ÐµÑ‡Ð°", "Ð£Ñ€Ð¾Ð½: 24", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 8"],
        Pe[Ge.SWORD_AMETHYST] = ["ÐÐ¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ñ‹Ð¹ ÐœÐµÑ‡", "Ð¡Ð¸Ñ€ÐµÐ½ÐµÐ²Ñ‹Ð¹ - ÑÐ°Ð¼Ñ‹Ð¹ ÐºÑ€Ð°ÑÐ¸Ð²Ñ‹Ð¹ Ñ†Ð²ÐµÑ‚ Ð² Ð¼Ð¸Ñ€Ðµ", "Ð£Ñ€Ð¾Ð½: 27", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 9"],
        Pe[Ge.DRAGON_SWORD] = ["ÐœÐµÑ‡ Ð”Ñ€Ð°ÐºÐ¾Ð½Ð°", "Ð‘ÐµÐ· Ð¿Ð¾Ñ‰Ð°Ð´Ñ‹!", "Ð£Ñ€Ð¾Ð½: 30", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 10"],
        Pe[Ge.DRAGON_SPEAR] = ["ÐšÐ¾Ð¿ÑŒÑ‘ Ð”Ñ€Ð°ÐºÐ¾Ð½Ð°", "Ð£Ð±Ð¸Ð²Ð°Ð¹ Ð²ÑÐµÑ…!", "Ð£Ñ€Ð¾Ð½: 22", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 6"],
        Pe[Ge.PICK_WOOD] = ["Ð”ÐµÑ€ÐµÐ²ÑÐ½Ð½Ð°Ñ ÐšÐ¸Ñ€ÐºÐ°", "ÐœÐ¾Ð¶ÐµÑ‚ Ð´Ð¾Ð±Ñ‹Ð²Ð°Ñ‚ÑŒ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ð´ÐµÑ€ÐµÐ²Ð¾ Ð¸ ÐºÐ°Ð¼ÐµÐ½ÑŒ", "Ð£Ñ€Ð¾Ð½: 1"],
        Pe[Ge.PICK] = ["ÐšÐ°Ð¼ÐµÐ½Ð½Ð°Ñ ÐšÐ¸Ñ€ÐºÐ°", "ÐœÐ¾Ð¶ÐµÑ‚ Ð´Ð¾Ð±Ñ‹Ð²Ð°Ñ‚ÑŒ Ð´ÐµÑ€ÐµÐ²Ð¾, ÐºÐ°Ð¼ÐµÐ½ÑŒ Ð¸ Ð·Ð¾Ð»Ð¾Ñ‚Ð¾", "Ð£Ñ€Ð¾Ð½: 2"],
        Pe[Ge.PICK_GOLD] = ["Ð—Ð¾Ð»Ð¾Ñ‚Ð°Ñ ÐšÐ¸Ñ€ÐºÐ°", "Ð¢Ð°ÐºÐ¶Ðµ Ð¼Ð¾Ð¶ÐµÑ‚ Ð´Ð¾Ð±Ñ‹Ð²Ð°Ñ‚ÑŒ Ð°Ð»Ð¼Ð°Ð·Ñ‹", "Ð£Ñ€Ð¾Ð½: 3", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 1"],
        Pe[Ge.PICK_DIAMOND] = ["ÐÐ»Ð¼Ð°Ð·Ð½Ð°Ñ ÐšÐ¸Ñ€ÐºÐ°", "ÐœÐ¾Ð¶Ð½Ð¾ Ð´Ð¾Ð±Ñ‹Ð²Ð°Ñ‚ÑŒ Ð²ÑÑ‘", "Ð£Ñ€Ð¾Ð½: 4", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 1"],
        Pe[Ge.PICK_AMETHYST] = ["ÐÐ¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ð°Ñ ÐšÐ¸Ñ€ÐºÐ°", "ÐœÐ¾Ð¶Ð½Ð¾ Ð´Ð¾Ð±Ñ‹Ð²Ð°Ñ‚ÑŒ Ð²ÑÑ‘, ÐµÑ‰Ñ‘ Ð¸ Ð²Ñ‹Ð³Ð»ÑÐ´Ð¸Ñ‚ ÐºÑ€Ð°ÑÐ¸Ð²Ð¾!", "Ð£Ñ€Ð¾Ð½: 5", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 1"],
        Pe[Ge.HAMMER] = ["ÐšÐ°Ð¼ÐµÐ½Ð½Ñ‹Ð¹ Ð¼Ð¾Ð»Ð¾Ñ‚", "Ð˜ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð´Ð»Ñ Ñ€Ð°Ð·Ñ€ÑƒÑˆÐµÐ½Ð¸Ñ Ð·Ð´Ð°Ð½Ð¸Ð¹", "ÐŸÐ»Ð¾Ñ…Ð¾ Ñ€Ð°Ð·Ñ€ÑƒÑˆÐ°ÐµÑ‚ Ð°Ð»Ð¼Ð°Ð·Ð½Ñ‹Ðµ Ð¸ Ð°Ð¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ñ‹Ðµ Ð·Ð´Ð°Ð½Ð¸Ñ", "Ð£Ñ€Ð¾Ð½: 2", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 20"],
        Pe[Ge.HAMMER_GOLD] = ["Ð—Ð¾Ð»Ð¾Ñ‚Ð¾Ð¹ ÐœÐ¾Ð»Ð¾Ñ‚", "Ð˜ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð´Ð»Ñ Ñ€Ð°Ð·Ñ€ÑƒÑˆÐµÐ½Ð¸Ñ Ð·Ð´Ð°Ð½Ð¸Ð¹", "ÐŸÐ»Ð¾Ñ…Ð¾ Ñ€Ð°Ð·Ñ€ÑƒÑˆÐ°ÐµÑ‚ Ð°Ð¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ñ‹Ðµ Ð·Ð´Ð°Ð½Ð¸Ñ", "Ð£Ñ€Ð¾Ð½: 3", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 30"],
        Pe[Ge.HAMMER_DIAMOND] = ["ÐÐ»Ð¼Ð°Ð·Ð½Ñ‹Ð¹ ÐœÐ¾Ð»Ð¾Ñ‚", "Ð˜ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð´Ð»Ñ Ñ€Ð°Ð·Ñ€ÑƒÑˆÐµÐ½Ð¸Ñ Ð·Ð´Ð°Ð½Ð¸Ð¹", "Ð£Ñ€Ð¾Ð½: 4", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 40"],
        Pe[Ge.HAMMER_AMETHYST] = ["ÐÐ¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ñ‹Ð¹ ÐœÐ¾Ð»Ð¾Ñ‚", "Ð˜ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð´Ð»Ñ Ñ€Ð°Ð·Ñ€ÑƒÑˆÐµÐ½Ð¸Ñ Ð·Ð´Ð°Ð½Ð¸Ð¹", "Ð£Ñ€Ð¾Ð½: 5", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 50"],
        Pe[Ge.SUPER_HAMMER] = ["Ð¡ÑƒÐ¿ÐµÑ€ ÐœÐ¾Ð»Ð¾Ñ‚", "Ð£ Ð²Ð°Ñ ÐµÑÑ‚ÑŒ Ð¿Ð»Ð°Ð½Ñ‹ Ñ€Ð°Ð·Ñ€ÑƒÑˆÐ¸Ñ‚ÑŒ Ð¼Ð¸Ñ€?", "Ð£Ñ€Ð¾Ð½: 12", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 70"],
        Pe[Ge.WOOD_SPEAR] = ["Ð”ÐµÑ€ÐµÐ²ÑÐ½Ð½Ð¾Ðµ ÐšÐ¾Ð¿ÑŒÑ‘", "Ð’Ñ‹Ð³Ð»ÑÐ´Ð¸Ñ‚ ÐºÐ°Ðº Ð´ÐµÑ€ÐµÐ²ÑÐ½Ð½Ð°Ñ Ð¿Ð°Ð»Ð¾Ñ‡ÐºÐ°, Ð½Ð¾ Ð´ÐµÐ»Ð°ÐµÑ‚ Ð±Ð¾Ð»ÑŒÐ½Ð¾.", "Ð£Ñ€Ð¾Ð½: 10", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 2"],
        Pe[Ge.SPEAR] = ["ÐšÐ°Ð¼ÐµÐ½Ð½Ð¾Ðµ ÐšÐ¾Ð¿ÑŒÑ‘", "ÐÐ°Ñ‡Ð°Ð»Ð¾ ÑÐ²Ð¾Ð»ÑŽÑ†Ð¸Ð¸!", "Ð£Ñ€Ð¾Ð½: 14", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 4"],
        Pe[Ge.GOLD_SPEAR] = ["Ð—Ð¾Ð»Ð¾Ñ‚Ð¾Ðµ ÐšÐ¾Ð¿ÑŒÑ‘", "ÐžÑÑ‚Ð¾Ñ€Ð¾Ð¶Ð½Ð¾, ÑÑ‚Ð¾ Ð±Ð¾Ð»ÑŒÐ½Ð¾!", "Ð£Ñ€Ð¾Ð½: 15", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 5"],
        Pe[Ge.DIAMOND_SPEAR] = ["ÐÐ»Ð¼Ð°Ð·Ð½Ð¾Ðµ ÐšÐ¾Ð¿ÑŒÑ‘", "Ð’Ñ‹ Ð³Ð¾Ñ‚Ð¾Ð²Ñ‹ ÑƒÐ±Ð¸Ð²Ð°Ñ‚ÑŒ Ð´Ñ€Ð°ÐºÐ¾Ð½Ð°.", "Ð£Ñ€Ð¾Ð½: 17", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 5"],
        Pe[Ge.AMETHYST_SPEAR] = ["ÐÐ¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ð¾Ðµ ÐšÐ¾Ð¿ÑŒÑ‘", "Ð”Ñ€Ð°ÐºÐ¾Ð½Ñ‹ Ð±Ð¾Ð»ÑŒÑˆÐµ Ð½Ðµ Ð¿ÑƒÐ³Ð°ÑŽÑ‚ Ð²Ð°Ñ", "Ð£Ñ€Ð¾Ð½: 18", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 6"],
        Pe[Ge.SHOVEL] = ["ÐšÐ°Ð¼ÐµÐ½Ð½Ð°Ñ Ð›Ð¾Ð¿Ð°Ñ‚Ð°", "ÐšÐ¾Ð¿Ð°Ð¹Ñ‚Ðµ Ð·ÐµÐ¼Ð»ÑŽ, Ñ‡Ñ‚Ð¾Ð±Ñ‹ Ð¿Ð¾Ð»ÑƒÑ‡Ð¸Ñ‚ÑŒ Ð³Ñ€ÑÐ·ÑŒ, Ð»ÐµÐ´ Ð¸ Ð¿ÐµÑÐ¾Ðº", "Ð¢Ð°Ðº Ð¶Ðµ Ð²Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð¿Ð¾Ð»ÑƒÑ‡Ð¸Ñ‚ÑŒ Ñ€ÐµÑÑƒÑ€ÑÑ‹", "Ð£Ñ€Ð¾Ð½: 2"],
        Pe[Ge.SHOVEL_GOLD] = ["Ð—Ð¾Ð»Ð¾Ñ‚Ð°Ñ Ð›Ð¾Ð¿Ð°Ñ‚Ð°", "ÐšÐ¾Ð¿Ð°Ð¹Ñ‚Ðµ Ð·ÐµÐ¼Ð»ÑŽ, Ñ‡Ñ‚Ð¾Ð±Ñ‹ Ð¿Ð¾Ð»ÑƒÑ‡Ð¸Ñ‚ÑŒ Ð³Ñ€ÑÐ·ÑŒ, Ð»ÐµÐ´ Ð¸ Ð¿ÐµÑÐ¾Ðº", "Ð¢Ð°Ðº Ð¶Ðµ Ð²Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð¿Ð¾Ð»ÑƒÑ‡Ð¸Ñ‚ÑŒ Ñ€ÐµÑÑƒÑ€ÑÑ‹", "Ð£Ñ€Ð¾Ð½: 3", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 1"],
        Pe[Ge.SHOVEL_DIAMOND] = ["ÐÐ»Ð¼Ð°Ð·Ð½Ð°Ñ Ð›Ð¾Ð¿Ð°Ñ‚Ð°", "ÐšÐ¾Ð¿Ð°Ð¹Ñ‚Ðµ Ð·ÐµÐ¼Ð»ÑŽ, Ñ‡Ñ‚Ð¾Ð±Ñ‹ Ð¿Ð¾Ð»ÑƒÑ‡Ð¸Ñ‚ÑŒ Ð³Ñ€ÑÐ·ÑŒ, Ð»ÐµÐ´ Ð¸ Ð¿ÐµÑÐ¾Ðº", "Ð¢Ð°Ðº Ð¶Ðµ Ð²Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð¿Ð¾Ð»ÑƒÑ‡Ð¸Ñ‚ÑŒ Ñ€ÐµÑÑƒÑ€ÑÑ‹", "Ð£Ñ€Ð¾Ð½: 4", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€Ð¾ÐµÐ½Ð¸ÑÐ¼: 1"],
        Pe[Ge.SHOVEL_AMETHYST] = ["ÐÐ¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ð°Ñ Ð›Ð¾Ð¿Ð°Ñ‚Ð°", "ÐšÐ¾Ð¿Ð°Ð¹Ñ‚Ðµ Ð·ÐµÐ¼Ð»ÑŽ, Ñ‡Ñ‚Ð¾Ð±Ñ‹ Ð¿Ð¾Ð»ÑƒÑ‡Ð¸Ñ‚ÑŒ Ð³Ñ€ÑÐ·ÑŒ, Ð»ÐµÐ´ Ð¸ Ð¿ÐµÑÐ¾Ðº", "Ð¢Ð°Ðº Ð¶Ðµ Ð²Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð¿Ð¾Ð»ÑƒÑ‡Ð¸Ñ‚ÑŒ Ñ€ÐµÑÑƒÑ€ÑÑ‹", "Ð£Ñ€Ð¾Ð½: 5", "Ð£Ñ€Ð¾Ð½ Ð¿Ð¾ ÑÑ‚Ñ€ÐµÐ¾Ð½Ð¸ÑÐ¼: 1"],
        Pe[Ge.WOOD_HELMET] = ["Ð”ÐµÑ€ÐµÐ²ÑÐ½Ð½Ñ‹Ð¹ Ð¨Ð»ÐµÐ¼", "Ð›ÑƒÑ‡ÑˆÐµ Ñ‡ÐµÐ¼ Ð½Ð¸Ñ‡ÐµÐ³Ð¾", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 1", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 4"],
        Pe[Ge.STONE_HELMET] = ["ÐšÐ°Ð¼ÐµÐ½Ð½Ñ‹Ð¹ Ð¨Ð»ÐµÐ¼", "Ð’Ñ‹ Ð³Ð¾Ñ‚Ð¾Ð²Ñ‹ Ðº Ð±Ð¸Ñ‚Ð²Ðµ!", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 2", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 8"],
        Pe[Ge.GOLD_HELMET] = ["Ð—Ð¾Ð»Ð¾Ñ‚Ð¾Ð¹ Ð¨Ð»ÐµÐ¼", "Ð¢Ð°ÐºÐ¶Ðµ Ð¸Ð·Ð²ÐµÑÑ‚ÐµÐ½ ÐºÐ°Ðº ÑˆÐ»ÐµÐ¼ Ð¶ÐµÑÑ‚Ð¾ÐºÐ¸Ñ… Ð»ÑŽÐ´ÐµÐ¹", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 4", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 13"],
        Pe[Ge.DIAMOND_HELMET] = ["ÐÐ»Ð¼Ð°Ð·Ð½Ñ‹Ð¹ Ð¨Ð»ÐµÐ¼", "ÐÐµ ÑÐ»Ð¸ÑˆÐºÐ¾Ð¼ Ñ…Ð²Ð°ÑÑ‚Ð°Ð¹Ñ‚ÐµÑÑŒ", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 5", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 19"],
        Pe[Ge.AMETHYST_HELMET] = ["ÐÐ¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ñ‹Ð¹ Ð¨Ð»ÐµÐ¼", "Ð¢Ñ‹ Ð±Ð¾Ð»ÑŒÑˆÐµ Ð½Ð¸Ñ‡ÐµÐ³Ð¾ Ð½Ðµ Ð±Ð¾Ð¸ÑˆÑŒÑÑ", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 6", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 23"],
        Pe[Ge.DRAGON_HELMET] = ["Ð¨Ð»ÐµÐ¼ Ð”Ñ€Ð°ÐºÐ¾Ð½Ð°", "Ð¢Ñ‹ Ð¿Ð¾ÐºÐ¾Ñ€Ð¸ÑˆÑŒ Ð¼Ð¸Ñ€", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 8", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 27"],
        Pe[Ge.EXPLORER_HAT] = ["Ð¨Ð°Ð¿ÐºÐ° Ð˜ÑÑÐ»ÐµÐ´Ð¾Ð²Ð°Ñ‚ÐµÐ»Ñ", "Ð–Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ðµ Ð½Ðµ Ð¾Ð±Ñ€Ð°Ñ‰Ð°ÑŽÑ‚ Ð½Ð° Ð²Ð°Ñ Ð²Ð½Ð¸Ð¼Ð°Ð½Ð¸Ñ", "Ð½Ð¾ Ð½Ðµ ÑˆÑƒÐ¼Ð¸Ñ‚Ðµ!", "Ð—Ð°Ñ‰Ð¸Ñ‰Ð°ÐµÑ‚ Ð¾Ñ‚ Ñ…Ð¾Ð»Ð¾Ð´Ð° Ð²Ð½Ðµ Ð²Ð¾Ð´Ñ‹."],
        Pe[Ge.CHRISTMAS_HAT] = ["Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²ÐµÐ½ÑÐºÐ°Ñ Ð¨Ð°Ð¿ÐºÐ°", "ÐžÑ…-Ñ…Ð¾-Ñ…Ð¾, Ð¡Ñ‡Ð°ÑÑ‚Ð»Ð¸Ð²Ð¾Ð³Ð¾ Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð°", "Ð—Ð°Ñ‰Ð¸Ñ‰Ð°ÐµÑ‚ Ð¾Ñ‚ Ñ…Ð¾Ð»Ð¾Ð´Ð° Ð²Ð½Ðµ Ð²Ð¾Ð´Ñ‹."],
        Pe[Ge.ELF_HAT] = ["Ð¨Ð°Ð¿ÐºÐ° Ð­Ð»ÑŒÑ„Ð°", "ÐÐµ Ð¿Ð¾Ð·Ð²Ð¾Ð»ÑÐ¹Ñ‚Ðµ ÑÐµÐ±Ðµ ÑÐºÑÐ¿Ð»ÑƒÐ°Ñ‚Ð¸Ñ€Ð¾Ð²Ð°Ñ‚ÑŒÑÑ, Ð²ÐµÐ´ÑŒ Ð²Ñ‹ Ð¼Ð°Ð»ÐµÐ½ÑŒÐºÐ¸Ð¹ ÑÐ½ÐµÐ¶Ð½Ñ‹Ð¹ ÑÐ»ÑŒÑ„!", "Ð—Ð°Ñ‰Ð¸Ñ‰Ð°ÐµÑ‚ Ð¾Ñ‚ Ñ…Ð¾Ð»Ð¾Ð´Ð° Ð²Ð½Ðµ Ð²Ð¾Ð´Ñ‹."],
        Pe[Ge.HOOD] = ["ÐšÐ°Ð¿ÑŽÑˆÐ¾Ð½", "Ð’Ñ‹ Ñ€Ð°Ð·Ð±Ð¾Ð¹Ð½Ð¸Ðº", "Ð’Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ ÑƒÐºÑ€Ð°ÑÑ‚ÑŒ Ñ‡Ñ‚Ð¾-Ñ‚Ð¾, ÐµÑÐ»Ð¸", "1) ÐÐ¾Ñ‡ÑŒ", "2) Ð’Ñ‹ Ð½Ð¸Ñ‡ÐµÐ³Ð¾ Ð½Ðµ Ð½Ð¾ÑÐ¸Ñ‚Ðµ", "3)Ð•ÑÐ»Ð¸ Ð²Ð°Ñ Ð½Ðµ Ñ‚Ñ€Ð¾Ð½ÑƒÐ»Ð¸ Ð² Ñ‚ÐµÑ‡ÐµÐ½Ð¸Ðµ Ð²Ð¾ÑÑŒÐ¼Ð¸ ÑÐµÐºÑƒÐ½Ð´", "4) Ð’Ñ‹ Ð½Ðµ Ñ€ÑÐ´Ð¾Ð¼ Ñ Ð¾Ð³Ð½Ñ‘Ð¼", "5) Ð’Ñ‹ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð½Ð¸Ñ‡ÐµÐ³Ð¾ ÑƒÐºÑ€Ð°ÑÑ‚ÑŒ Ñƒ ÐºÑ€ÐµÑÑ‚ÑŒÑÐ½ÑÐºÐ¾Ð¹ Ñ‚ÑƒÐ½Ð¸ÐºÐ¸", "Ð—Ð°Ñ‰Ð¸Ñ‰Ð°ÐµÑ‚ Ð¾Ñ‚ Ñ…Ð¾Ð»Ð¾Ð´Ð° Ð²Ð½Ðµ Ð²Ð¾Ð´Ñ‹."],
        Pe[Ge.EARMUFFS] = ["Ð¢ÐµÐ¿Ð»Ñ‹Ðµ ÐÐ°ÑƒÑˆÐ½Ð¸ÐºÐ¸", "ÐšÐ°ÐºÐ°Ñ-Ñ‚Ð¾ Ð¼Ð°Ð»ÐµÐ½ÑŒÐºÐ°Ñ ÑˆÐ°Ð¿ÐºÐ°.", "Ð—Ð°Ñ‰Ð¸Ñ‰Ð°ÐµÑ‚ Ð¾Ñ‚ Ñ…Ð¾Ð»Ð¾Ð´Ð° Ð²Ð½Ðµ Ð²Ð¾Ð´Ñ‹."],
        Pe[Ge.COAT] = ["Ð¨Ð°Ð¿ÐºÐ°", "Ð¢Ð°Ðº Ð¶Ðµ Ð½Ð°Ð·Ñ‹Ð²Ð°ÐµÑ‚ÑÑ Ð¿Ð°Ð»ÑŒÑ‚Ð¾Ð¼.", "Ð—Ð°Ñ‰Ð¸Ñ‰Ð°ÐµÑ‚ Ð¾Ñ‚ Ñ…Ð¾Ð»Ð¾Ð´Ð° Ð²Ð½Ðµ Ð²Ð¾Ð´Ñ‹."],
        Pe[Ge.CAP_SCARF] = ["Ð—Ð¸Ð¼Ð½Ð¸Ð¹ Ð¨Ð°Ñ€Ñ„ Ð¸ Ð¨Ð°Ð¿ÐºÐ°", "ÐžÑ‡ÐµÐ½ÑŒ ÐºÐ¾Ð¼Ñ„Ð¾Ñ€Ñ‚Ð½Ð¾", "ÐžÑ‡ÐµÐ½ÑŒ Ñ‚ÐµÐ¿Ð»Ð¾"],
        Pe[Ge.PEASANT] = ["ÐšÑ€ÐµÑÑ‚ÑŒÑÐ½ÑÐºÐ°Ñ Ð¢ÑƒÐ½Ð¸ÐºÐ°", "Ð’Ð°ÑˆÐ¸ Ñ€Ð°ÑÑ‚ÐµÐ½Ð¸Ñ Ñ€Ð°ÑÑ‚ÑƒÑ‚ Ð±Ñ‹ÑÑ‚Ñ€ÐµÐµ", "Ð—Ð°Ñ‰Ð¸Ñ‰Ð°ÐµÑ‚ Ð¾Ñ‚ Ñ…Ð¾Ð»Ð¾Ð´Ð° Ð²Ð½Ðµ Ð²Ð¾Ð´Ñ‹."],
        Pe[Ge.WINTER_HOOD] = ["Ð—Ð¸Ð¼Ð½Ð¸Ð¹ ÐšÐ°Ð¿ÑŽÑˆÐ¾Ð½", "Ð’Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ ÑƒÐºÑ€Ð°ÑÑ‚ÑŒ Ñ‡Ñ‚Ð¾-Ñ‚Ð¾, ÐµÑÐ»Ð¸", "- ÐÐ¾Ñ‡ÑŒ", "- Ð’Ñ‹ Ð½Ð¸Ñ‡ÐµÐ³Ð¾ Ð½Ðµ Ð½Ð¾ÑÐ¸Ñ‚Ðµ", "- Ð•ÑÐ»Ð¸ Ð²Ð°Ñ Ð½Ðµ Ñ‚Ñ€Ð¾Ð½ÑƒÐ»Ð¸ Ð² Ñ‚ÐµÑ‡ÐµÐ½Ð¸Ðµ Ñ‡ÐµÑ‚Ñ‹Ñ€Ñ‘Ñ… ÑÐµÐºÑƒÐ½Ð´", "- Ð’Ñ‹ Ð½Ðµ Ñ€ÑÐ´Ð¾Ð¼ Ñ Ð¾Ð³Ð½Ñ‘Ð¼", "- Ð’Ñ‹ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð½Ð¸Ñ‡ÐµÐ³Ð¾ ÑƒÐºÑ€Ð°ÑÑ‚ÑŒ Ñƒ ÐºÑ€ÐµÑÑ‚ÑŒÑÐ½ÑÐºÐ¾Ð¹ Ñ‚ÑƒÐ½Ð¸ÐºÐ¸", "Ð—Ð°Ñ‰Ð¸Ñ‰Ð°ÐµÑ‚ Ð¾Ñ‚ Ñ…Ð¾Ð»Ð¾Ð´Ð° Ð²Ð½Ðµ Ð²Ð¾Ð´Ñ‹."],
        Pe[Ge.WINTER_PEASANT] = ["Ð—Ð¸Ð¼Ð½ÑÑ ÐšÑ€ÐµÑÑ‚ÑŒÑÐ½ÑÐºÐ°Ñ Ð¢ÑƒÐ½Ð¸ÐºÐ°", "Ð’Ð°ÑˆÐ¸ Ñ€Ð°ÑÑ‚ÐµÐ½Ð¸Ñ Ñ€Ð°ÑÑ‚ÑƒÑ‚ Ð±Ñ‹ÑÑ‚Ñ€ÐµÐµ", "Ð—Ð°Ñ‰Ð¸Ñ‰Ð°ÐµÑ‚ Ð¾Ñ‚ Ñ…Ð¾Ð»Ð¾Ð´Ð° Ð²Ð½Ðµ Ð²Ð¾Ð´Ñ‹."],
        Pe[Ge.DIVING_MASK] = ["ÐÐºÐ²Ð°Ð»Ð°Ð½Ð³", "Ð’Ñ‹ Ð±Ñ‹ÑÑ‚Ñ€ÐµÐµ Ð¿ÐµÑ€ÐµÐ´Ð²Ð¸Ð³Ð°ÐµÑ‚ÐµÑÑŒ Ð¿Ð¾ Ð²Ð¾Ð´Ðµ", "Ð¢ÐµÐ¿Ð»Ð¾ Ð² Ð²Ð¾Ð´Ðµ", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 2, Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 8"],
        Pe[Ge.SUPER_DIVING_SUIT] = ["Ð¡ÑƒÐ¿ÐµÑ€ ÐÐºÐ²Ð°Ð»Ð°Ð½Ð³", "Ð’Ñ‹ Ð¾Ñ‡ÐµÐ½ÑŒ Ð±Ñ‹ÑÑ‚Ñ€Ð¾ Ð¿ÐµÑ€ÐµÐ´Ð²Ð¸Ð³Ð°ÐµÑ‚ÐµÑÑŒ Ð¿Ð¾ Ð²Ð¾Ð´Ðµ", "Ð¢ÐµÐ¿Ð»Ð¾ Ð² Ð²Ð¾Ð´Ðµ", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 4, Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 16"],
        Pe[Ge.DRAGON_ORB] = ["Ð¨Ð°Ñ€ Ð”Ñ€Ð°ÐºÐ¾Ð½Ð°", "Ð”Ð°Ñ‘Ñ‚ÑÑ Ð·Ð° ÐºÐ²ÐµÑÑ‚"],
        Pe[Ge.DRAGON_HEART] = ["Ð¡ÐµÑ€Ð´Ñ†Ðµ Ð”Ñ€Ð°ÐºÐ¾Ð½Ð°", "ÐŸÑ€ÐµÐ²Ñ€Ð°Ñ‰Ð°ÐµÑ‚ Ð²Ð°Ñ Ð² Ð¿Ñ€Ð¸Ð·Ñ€Ð°ÐºÐ° Ð¿Ð¾ÑÐ»Ðµ ÑÐ¼ÐµÑ€Ñ‚Ð¸!", "Ð’Ñ‹ Ð¿Ñ€Ð¸Ð·Ñ€Ð°Ðº Ð½Ð° 60 ÑÐµÐºÑƒÐ½Ð´", "ÐÐ°Ð¹Ð´Ð¸Ñ‚Ðµ ÐºÐ°Ð¼ÐµÐ½ÑŒ Ð²Ð¾ÑÐºÑ€ÐµÑˆÐµÐ½Ð¸Ñ"],
        Pe[Ge.GEMME_GREEN] = ["Ð—ÐµÐ»Ñ‘Ð½Ñ‹Ð¹ Ð”Ñ€Ð°Ð³Ð¾Ñ†ÐµÐ½Ð½Ñ‹Ð¹ ÐšÐ°Ð¼ÐµÐ½ÑŒ", "Ð’Ñ‹ Ð±ÐµÐ· Ñ‡Ð¸Ñ‚Ð¾Ð², Ð¿Ñ€Ð°Ð²Ð¸Ð»ÑŒÐ½Ð¾?"],
        Pe[Ge.GEMME_ORANGE] = ["ÐžÑ€Ð°Ð½Ð¶ÐµÐ²Ñ‹Ð¹ Ð”Ñ€Ð°Ð³Ð¾Ñ†ÐµÐ½Ð½Ñ‹Ð¹ ÐšÐ°Ð¼ÐµÐ½ÑŒ", "Ð¢Ð¾Ð»ÑŒÐºÐ¾ Ð½Ð°ÑÑ‚Ð¾ÑÑ‰Ð¸Ð¹ Ð¿Ð¸Ñ€Ð°Ñ‚ Ð½Ð°Ð¹Ð´Ñ‘Ñ‚ ÑÑ‚Ð¾!"],
        Pe[Ge.GEMME_BLUE] = ["Ð¡Ð¸Ð½Ð¸Ð¹ Ð”Ñ€Ð°Ð³Ð¾Ñ†ÐµÐ½Ð½Ñ‹Ð¹ ÐšÐ°Ð¼ÐµÐ½ÑŒ", "Ð”Ð»Ñ Ð¾Ñ‡ÐµÐ½ÑŒ Ð´Ð¾Ð±Ñ€Ñ‹Ñ… Ð»ÑŽÐ´ÐµÐ¹"],
        Pe[Ge.CROWN_GREEN] = ["Ð—ÐµÐ»ÐµÐ½Ð°Ñ ÐºÐ¾Ñ€Ð¾Ð½Ð°", "Ð’Ñ‹ Ð»ÐµÑ‡Ð¸Ñ‚Ðµ ÑÐµÐ±Ñ Ð¾Ñ‡ÐµÐ½ÑŒ Ð±Ñ‹ÑÑ‚Ñ€Ð¾", "Ð›ÐµÑ‡Ð¸Ñ‚: 40", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 4, Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 16"],
        Pe[Ge.CROWN_ORANGE] = ["ÐžÑ€Ð°Ð½Ð¶ÐµÐ²Ð°Ñ ÐšÐ¾Ñ€Ð¾Ð½Ð°", "Ð’Ð°Ð¼ Ð¾Ñ‡ÐµÐ½ÑŒ Ð¿Ð¾Ð²ÐµÐ·Ð»Ð¾", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 4, Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 16"],
        Pe[Ge.CROWN_BLUE] = ["Ð¡Ð¸Ð½ÑÑ ÐšÐ¾Ñ€Ð¾Ð½Ð°", "ÐšÐ°Ðº Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ð²Ñ‹ ÑƒÐ¼Ñ€Ñ‘Ñ‚Ðµ, Ð²Ñ‹ ÑÑ‚Ð°Ð½ÐµÑ‚Ðµ Ð¿Ñ€Ð¸Ð·Ñ€Ð°ÐºÐ¾Ð¼", "ÐÐ¾ Ð²Ñ‹ Ð¿Ð¾Ñ‚ÐµÑ€ÑÐµÑ‚Ðµ ÑÐ²Ð¾Ñ‘ Ð¾Ñ€ÑƒÐ¶Ð¸Ðµ", "Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²: 4, Ð—Ð°Ñ‰Ð¸Ñ‚Ð° Ð¾Ñ‚ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ñ…: 16"],
        Pe[Ge.BUCKET_FULL] = ["Ð’ÐµÐ´Ñ€Ð¾", "Ð˜ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð´Ð»Ñ Ð·Ð°Ð¿Ð¾Ð»Ð½ÐµÐ½Ð¸Ñ ÐºÐ¾Ð»Ð¾Ð´Ñ†Ð°", "ÐžÐ´Ð½Ð¾ Ð²ÐµÐ´Ñ€Ð¾ Ñ€Ð°Ð²Ð½ÑÐµÑ‚ÑÑ Ð´Ð²ÐµÐ½Ð°Ð´Ñ†Ð°Ñ‚Ð¸ Ð±ÑƒÑ‚Ñ‹Ð»ÐºÐ°Ð¼"],
        Pe[Ge.BUCKET_EMPTY] = ["ÐŸÑƒÑÑ‚Ð¾Ðµ Ð²ÐµÐ´Ñ€Ð¾", "Ð’Ð°Ð¼ Ð½Ð°Ð´Ð¾ Ð·Ð°Ð¿Ð¾Ð»Ð½Ð¸Ñ‚ÑŒ ÑÑ‚Ð¾ Ð²ÐµÐ´Ñ€Ð¾ Ð²Ð¾Ð·Ð»Ðµ Ð²Ð¾Ð´Ñ‹"],
        Pe[Ge.BOTTLE_FULL] = ["Ð‘ÑƒÑ‚Ñ‹Ð»ÐºÐ°", "ÐŸÐ¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ Ð¿Ð¸Ñ‚ÑŒ Ð²Ð¾Ð´Ñƒ Ð² Ð»ÑŽÐ±Ð¾Ð¼ Ð¼ÐµÑÑ‚Ðµ", "Ð’Ð¾Ð´Ð°: 50"],
        Pe[Ge.BOTTLE_EMPTY] = ["ÐŸÑƒÑÑ‚Ð°Ñ Ð±ÑƒÑ‚Ñ‹Ð»ÐºÐ°", "Ð’Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð·Ð°Ð¿Ð¾Ð»Ð½Ð¸Ñ‚ÑŒ Ð±ÑƒÑ‚Ñ‹Ð»ÐºÑƒ Ð²Ð¾Ð·Ð»Ðµ Ð²Ð¾Ð´Ñ‹"],
        Pe[Ge.WATERING_CAN] = ["ÐŸÑƒÑÑ‚Ð°Ñ Ð›ÐµÐ¹ÐºÐ°", "Ð’Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð·Ð°Ð¿Ð¾Ð»Ð½Ð¸Ñ‚ÑŒ Ð»ÐµÐ¹ÐºÑƒ Ð²Ð¾Ð·Ð»Ðµ Ð²Ð¾Ð´Ñ‹"],
        Pe[Ge.WATERING_CAN_FULL] = ["Ð›ÐµÐ¹ÐºÐ°", "ÐŸÐ¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ Ð¿Ð¾Ð»Ð¸Ð²Ð°Ñ‚ÑŒ Ñ€Ð°ÑÑ‚ÐµÐ½Ð¸Ñ", "Ð£Ñ€Ð¾Ð½: 1"],
        Pe[Ge.BAG] = ["Ð ÑŽÐºÐ·Ð°Ðº", "Ð‘Ð¾Ð»ÑŒÑˆÐµ Ð¼ÐµÑÑ‚Ð° Ð´Ð»Ñ Ð²Ð°ÑˆÐ¸Ñ… Ð¿Ñ€ÐµÐ´Ð¼ÐµÑ‚Ð¾Ð²!"],
        Pe[Ge.PAPER] = ["Ð‘ÑƒÐ¼Ð°Ð³Ð°", "Ð˜ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð¿Ñ€Ð¸ ÑÐ¾Ð·Ð´Ð°Ð½Ð¸Ð¸ ÐºÐ½Ð¸Ð³Ð¸"],
        Pe[Ge.BOOK] = ["ÐšÐ½Ð¸Ð³Ð°", "Ð¡Ð¾ÐºÑ€Ð°Ñ‰Ð°ÐµÑ‚ Ð²Ñ€ÐµÐ¼Ñ Ð¸Ð·Ð³Ð¾Ñ‚Ð¾Ð²Ð»ÐµÐ½Ð¸Ñ Ð¿Ñ€ÐµÐ´Ð¼ÐµÑ‚Ð¾Ð²", "Ð”Ð¾Ð»Ð¶Ð½Ð¾ Ð±Ñ‹Ñ‚ÑŒ Ð¾Ð´ÐµÑ‚Ð¾ Ð´Ð»Ñ Ñ€Ð°Ð±Ð¾Ñ‚Ñ‹", "Ð£Ñ€Ð¾Ð½: 1"],
        Pe[Ge.BANDAGE] = ["Ð‘Ð¸Ð½Ñ‚", "Ð’Ð¾ÑÑÑ‚Ð°Ð½Ð°Ð²Ð»Ð¸Ð²Ð°ÐµÑ‚ Ð²Ð°ÑˆÐµ Ð·Ð´Ð¾Ñ€Ð¾Ð²ÑŒÐµ Ð±Ñ‹ÑÑ‚Ñ€ÐµÐµ", "Ð›ÐµÑ‡Ð¸Ñ‚: 30", "Ð­Ñ„Ñ„ÐµÐºÑ‚: 5"],
        Pe[Ge.LOCK] = ["Ð—Ð°Ð¼Ð¾Ðº", "ÐŸÐ¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ Ð²Ð°Ð¼ Ð·Ð°ÐºÑ€Ñ‹Ñ‚ÑŒ Ð²Ð°Ñˆ ÑÑƒÐ½Ð´ÑƒÐº"],
        Pe[Ge.LOCKPICK] = ["ÐšÐ»ÑŽÑ‡", "Ð”Ð°Ñ‘Ñ‚ Ð²Ð°Ð¼ Ð¾Ñ‚ÐºÑ€Ñ‹Ñ‚ÑŒ Ð¾Ð´Ð¸Ð½ Ð·Ð°Ð¿ÐµÑ€Ñ‚Ñ‹Ð¹ ÑÑƒÐ½Ð´ÑƒÐº"],
        Pe[Ge.TOTEM] = ["Ð¢Ð¾Ñ‚ÐµÐ¼", "ÐŸÐ¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ Ð²Ð°Ð¼ ÑÐ¾Ð·Ð´Ð°Ñ‚ÑŒ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñƒ", "Ð¡Ð¾Ð²Ð¼ÐµÑÑ‚Ð½Ð¾Ðµ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ð½Ð¸Ðµ Ð´Ð²ÐµÑ€ÐµÐ¹ Ð¸ ÑÑƒÐ½Ð´ÑƒÐºÐ¾Ð²", "Ð’Ñ€ÐµÐ´Ð½Ð¾Ðµ Ð·Ð´Ð°Ð½Ð¸Ðµ Ð½Ðµ Ð¿Ð¾Ð²Ñ€ÐµÐ´Ð¸Ñ‚ Ð²Ð°ÑˆÐµÐ³Ð¾ Ð´Ñ€ÑƒÐ³Ð°"],
        Pe[Ge.BRIDGE] = ["ÐœÐ¾ÑÑ‚", "ÐžÑ‡ÐµÐ½ÑŒ Ð¿Ð¾Ð»ÐµÐ·Ð½Ð¾ Ð½Ð° Ð²Ð¾Ð´Ðµ", "ÐŸÐ¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ Ð²Ð°Ð¼ Ð¿Ð¸Ñ‚ÑŒ Ð±ÐµÐ· Ð¿Ð¾Ñ‚ÐµÑ€Ð¸ Ð²Ð¾Ð·Ð´ÑƒÑ…Ð°", "ÐŸÐµÑ€ÐµÐ´Ð²Ð¸Ð³Ð°ÐµÑ‚ÐµÑÑŒ Ð±Ñ‹ÑÑ‚Ñ€ÐµÐµ Ð¿Ð¾ Ð²Ð¾Ð´Ðµ"],
        Pe[Ge.SIGN] = ["Ð¢Ð°Ð±Ð»Ð¸Ñ‡ÐºÐ°", "ÐžÑÑ‚Ð°Ð²ÑŒÑ‚Ðµ ÑÐ¾Ð¾Ð±Ñ‰ÐµÐ½Ð¸Ðµ Ð´Ñ€ÑƒÐ³Ð¸Ð¼", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 200"],
        Pe[Ge.ROOF] = ["ÐšÑ€Ñ‹ÑˆÐ°", "ÐÐµÐ¼Ð½Ð¾Ð³Ð¾ ÑÐºÑ€Ñ‹Ð²Ð°ÐµÑ‚ Ð²Ð°Ñ Ð¸ ÑÐ¾Ð³Ñ€ÐµÐ²Ð°ÐµÑ‚!"],
        Pe[Ge.WELL] = ["ÐšÐ¾Ð»Ð¾Ð´ÐµÑ†", "ÐŸÐ¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ Ð·Ð°Ð¿Ð¾Ð»Ð½Ð¸Ñ‚ÑŒ Ð±ÑƒÑ‚Ñ‹Ð»ÐºÑƒ", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 1000"],
        Pe[Ge.WALL] = ["Ð”ÐµÑ€ÐµÐ²ÑÐ½Ð½Ð°Ñ Ð¡Ñ‚ÐµÐ½Ð°", "Ð­Ñ‚Ð¾ Ð¿Ñ€Ð¾ÑÑ‚Ð¾ ÑÑ‚ÐµÐ½Ð°", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 1000"],
        Pe[Ge.STONE_WALL] = ["ÐšÐ°Ð¼ÐµÐ½Ð½Ð°Ñ Ð¡Ñ‚ÐµÐ½Ð°", "Ð­Ñ‚Ð¾ Ð½ÐµÐ¼Ð½Ð¾Ð³Ð¾ Ð¿Ð¾ÑÐµÑ€ÑŒÐµÐ·Ð½ÐµÐµ.", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 1500"],
        Pe[Ge.GOLD_WALL] = ["Ð—Ð¾Ð»Ð¾Ñ‚Ð°Ñ Ð¡Ñ‚ÐµÐ½Ð°", "Ð—Ð¾Ð»Ð¾Ñ‚Ð¾ Ð½Ð° Ð²Ð°ÑˆÐ¸Ñ… ÑÑ‚ÐµÐ½Ð°Ñ…? ÐžÐ½Ð° Ð¾ÑÐ»ÐµÐ¿Ð»ÑÐµÑ‚.", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 2000"],
        Pe[Ge.DIAMOND_WALL] = ["ÐÐ»Ð¼Ð°Ð·Ð½Ð°Ñ Ð¡Ñ‚ÐµÐ½Ð°", "ÐžÑ‡ÐµÐ½ÑŒ Ð±Ð»ÐµÑÑ‚Ð¸Ñ‚, ÑÐ»ÐµÐ´Ð¸Ñ‚Ðµ Ð·Ð° Ð²Ð°ÑˆÐ¸Ð¼Ð¸ Ð³Ð»Ð°Ð·Ð°Ð¼Ð¸", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 2500"],
        Pe[Ge.AMETHYST_WALL] = ["ÐÐ¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ð°Ñ ÑÑ‚ÐµÐ½Ð°", "Ð’Ñ‹ Ð´Ð¾Ð»Ð¶Ð½Ñ‹ Ð±Ñ‹Ñ‚ÑŒ ÑÐ»Ð¸ÑˆÐºÐ¾Ð¼ Ð½Ð°Ð¿ÑƒÐ³Ð°Ð½Ñ‹, Ñ‡Ñ‚Ð¾Ð±Ñ‹ ÑƒÐ¹Ñ‚Ð¸!", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 3500"],
        Pe[Ge.SPIKE] = ["Ð”ÐµÑ€ÐµÐ²ÑÐ½Ð½Ð°Ñ Ð¡Ñ‚ÐµÐ½Ð° Ñ Ð¨Ð¸Ð¿Ð°Ð¼Ð¸", "ÐœÐ¾Ð¶ÐµÑ‚ Ð½Ð°Ð½Ð¾ÑÐ¸Ñ‚ÑŒ ÑƒÑ€Ð¾Ð½ Ð²Ñ€Ð°Ð³Ð°Ð¼", "Ð£Ñ€Ð¾Ð½: 10, Ð£Ñ€Ð¾Ð½ Ð·Ð° Ð¾Ð´Ð¸Ð½ ÑƒÐ´Ð°Ñ€: 2", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 150"],
        Pe[Ge.STONE_SPIKE] = ["ÐšÐ°Ð¼ÐµÐ½Ð½Ð°Ñ Ð¡Ñ‚ÐµÐ½Ð° Ñ Ð¨Ð¸Ð¿Ð°Ð¼Ð¸", "Ð¯ Ð½Ðµ Ñ…Ð¾Ñ‚ÐµÐ» Ð±Ñ‹ Ð±Ñ‹Ñ‚ÑŒ Ð²Ð°ÑˆÐ¸Ð¼ Ð²Ñ€Ð°Ð³Ð¾Ð¼", "Ð£Ñ€Ð¾Ð½: 20", "Ð£Ñ€Ð¾Ð½ Ð·Ð° Ð¾Ð´Ð¸Ð½ ÑƒÐ´Ð°Ñ€: 3", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 300"],
        Pe[Ge.GOLD_SPIKE] = ["Ð—Ð¾Ð»Ð¾Ñ‚Ð°Ñ Ð¡Ñ‚ÐµÐ½Ð° Ñ Ð¨Ð¸Ð¿Ð°Ð¼Ð¸", "Ð’Ñ‹ Ð¾Ñ‡ÐµÐ½ÑŒ Ð¶ÐµÑÑ‚Ð¾ÐºÐ¸.", "Ð£Ñ€Ð¾Ð½: 30", "Ð£Ñ€Ð¾Ð½ Ð·Ð° Ð¾Ð´Ð¸Ð½ ÑƒÐ´Ð°Ñ€: 3", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 600"],
        Pe[Ge.DIAMOND_SPIKE] = ["ÐÐ»Ð¼Ð°Ð·Ð½Ð°Ñ Ð¡Ñ‚ÐµÐ½Ð° Ñ Ð¨Ð¸Ð¿Ð°Ð¼Ð¸", "Ð’Ð°Ð¼ Ð½Ðµ Ð½Ñ€Ð°Ð²Ð¸Ñ‚ÑÑ Ð¸Ð¼ÐµÑ‚ÑŒ ÐºÐ¾Ð¼Ð¿Ð°Ð½Ð¸ÑŽ.", "Ð£Ñ€Ð¾Ð½: 40", "Ð£Ñ€Ð¾Ð½ Ð·Ð° Ð¾Ð´Ð¸Ð½ ÑƒÐ´Ð°Ñ€: 4", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 1200"],
        Pe[Ge.AMETHYST_SPIKE] = ["ÐÐ¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ð°Ñ Ð¡Ñ‚ÐµÐ½Ð° Ñ Ð¨Ð¸Ð¿Ð°Ð¼Ð¸", "ÐšÐ°ÐºÐ¾Ð³Ð¾ Ñ‡ÐµÑ€Ñ‚Ð°, Ñ‡Ñ‚Ð¾ Ð²Ð°ÑˆÐ¸ ÑÐ¾ÑÐµÐ´Ð¸ ÑÐ´ÐµÐ»Ð°Ð»Ð¸ Ñ Ð²Ð°Ð¼Ð¸?", "Ð£Ñ€Ð¾Ð½: 50", "Ð£Ñ€Ð¾Ð½ Ð·Ð° Ð¾Ð´Ð¸Ð½ ÑƒÐ´Ð°Ñ€: 4", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 2400"],
        Pe[Ge.WOOD_DOOR] = ["Ð”ÐµÑ€ÐµÐ²ÑÐ½Ð½Ð°Ñ Ð”Ð²ÐµÑ€ÑŒ", "ÐœÐ¾Ð¶ÐµÑ‚ Ð±Ñ‹Ñ‚ÑŒ Ð¾Ñ‚ÐºÑ€Ñ‹Ñ‚Ð° Ð¸ Ð·Ð°ÐºÑ€Ñ‹Ñ‚Ð° Ð²Ð°Ð¼Ð¸ Ð¸Ð»Ð¸ Ð´Ñ€ÑƒÐ·ÑŒÑÐ¼Ð¸", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 1000"],
        Pe[Ge.STONE_DOOR] = ["ÐšÐ°Ð¼ÐµÐ½Ð½Ð°Ñ Ð”Ð²ÐµÑ€ÑŒ", "Ð‘Ð¾Ð»ÐµÐµ ÑÐµÑ€ÑŒÐµÐ·Ð½Ð°Ñ Ð¸ ÑÐ¸Ð»ÑŒÐ½Ð°Ñ Ð´Ð²ÐµÑ€ÑŒ", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 1500"],
        Pe[Ge.GOLD_DOOR] = ["Ð—Ð¾Ð»Ð¾Ñ‚Ð°Ñ Ð”Ð²ÐµÑ€ÑŒ", 'Ð’Ñ‹ Ð¿ÐµÑ€ÐµÑÑ‚Ñ€Ð°Ð¸Ð²Ð°ÐµÑ‚Ðµ "Ð­Ð»ÑŒ Ð”Ð¾Ñ€Ð°Ð´Ð¾?"', "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 2000"],
        Pe[Ge.DIAMOND_DOOR] = ["ÐÐ»Ð¼Ð°Ð·Ð½Ð°Ñ Ð”Ð²ÐµÑ€ÑŒ", "Ð”Ð»Ñ Ñ€Ð¾ÑÐºÐ¾ÑˆÐ½Ð¾Ð³Ð¾ Ð´Ð¾Ð¼Ð°", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 2500"],
        Pe[Ge.AMETHYST_DOOR] = ["ÐÐ¼ÐµÑ‚Ð¸ÑÑ‚Ð¾Ð²Ð°Ñ Ð”Ð²ÐµÑ€ÑŒ", "Ð’Ð°Ñˆ Ð´Ð¾Ð¼ Ð² Ð±ÐµÐ·Ð¾Ð¿Ð°ÑÐ½Ð¾ÑÑ‚Ð¸?", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 3000"],
        Pe[Ge.FURNACE] = ["ÐŸÐµÑ‡ÑŒ", "Ð¡Ð¾Ð³Ñ€ÐµÐ²Ð°ÐµÑ‚", "Ð¢Ñ€Ð°Ñ‚Ð¸Ñ‚ Ð´ÐµÑ€ÐµÐ²Ð¾ ÐºÐ°Ð¶Ð´Ñ‹Ðµ 5 ÑÐµÐºÑƒÐ½Ð´", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 1000"],
        Pe[Ge.WINDMILL] = ["ÐœÐµÐ»ÑŒÐ½Ð¸Ñ†Ð°", "ÐœÐ¾Ð¶ÐµÑ‚ ÑÐ´ÐµÐ»Ð°Ñ‚ÑŒ Ð¼ÑƒÐºÑƒ Ð¸Ð· Ð¿ÑˆÐµÐ½Ð¸Ñ†Ñ‹", "Ð¢Ñ€ÐµÐ±ÑƒÐµÑ‚ 5 ÑÐµÐºÑƒÐ½Ð´ Ð´Ð»Ñ Ð¿Ð¾Ð»ÑƒÑ‡ÐµÐ½Ð¸Ñ Ð¼ÑƒÐºÐ¸", "Ð”Ð°Ñ‘Ñ‚ Ð¾Ñ‡ÐºÐ¸ Ð¿Ñ€Ð¸ Ñ€Ð°Ð±Ð¾Ñ‚Ðµ", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 2000"],
        Pe[Ge.BREAD_OVEN] = ["Ð¥Ð»ÐµÐ±Ð½Ð°Ñ ÐŸÐµÑ‡ÑŒ", "ÐŸÐ¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ Ð³Ð¾Ñ‚Ð¾Ð²Ð¸Ñ‚ÑŒ Ñ…Ð»ÐµÐ± Ð¸Ð· Ð¼ÑƒÐºÐ¸", "Ð¢Ñ€ÐµÐ±ÑƒÐµÑ‚ 10 ÑÐµÐºÑƒÐ½Ð´ Ð´Ð»Ñ Ð¿Ð¾Ð»ÑƒÑ‡ÐµÐ½Ð¸Ñ Ñ…Ð»ÐµÐ±Ð°", "Ð”Ð°Ñ‘Ñ‚ Ð¾Ñ‡ÐºÐ¸ Ð¿Ñ€Ð¸ Ñ€Ð°Ð±Ð¾Ñ‚Ðµ", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 2000"],
        Pe[Ge.RESURRECTION] = ["ÐšÐ°Ð¼ÐµÐ½ÑŒ Ð’Ð¾ÑÐºÑ€ÐµÑˆÐµÐ½Ð¸Ñ", "Ð­Ñ‚Ð¾ Ð¼Ð°Ð³Ð¸Ñ", "Ð’Ð¾ÑÐºÑ€ÐµÑˆÐ°ÐµÑ‚ Ð²Ð°Ñ, ÐµÑÐ»Ð¸ Ð²Ñ‹ Ð¿Ñ€Ð¸Ð·Ñ€Ð°Ðº", "Ð’Ñ‹ Ð¿Ð¾Ñ‚ÐµÑ€ÑÐµÑ‚Ðµ ÑÐ²Ð¾Ñ‘ Ð¾Ñ€ÑƒÐ¶Ð¸Ðµ", "ÐŸÑ€Ð¾Ñ‡Ð½Ð¾ÑÑ‚ÑŒ: 200"],
        Pe[TEXT.YOU_CANNOT_JOIN] = "Ð’Ñ‹ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð·Ð°Ð¹Ñ‚Ð¸ Ð½Ð° ÑÑ‚Ð¾Ñ‚ ÑÐµÑ€Ð²ÐµÑ€",
        Pe[TEXT.KICKED] = "Ð’Ñ‹Ð³Ð½Ð°Ð½Ñ‹: ",
        Pe[TEXT.KEY_ALREADY] = "Ð’Ð°Ñˆ ÐºÐ»ÑŽÑ‡ ÑƒÐ¶Ðµ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ ÐºÐµÐ¼-Ñ‚Ð¾",
        Pe[TEXT.KEY_WRONG] = "Ð’Ð°Ñˆ ÐºÐ»ÑŽÑ‡ Ð½ÐµÐ¿Ñ€Ð°Ð²Ð¸Ð»ÑŒÐ½Ñ‹Ð¹",
        Pe[TEXT.OLD_VERSION] = "Ð£ Ð²Ð°Ñ ÑÑ‚Ð°Ñ€Ð°Ñ Ð²ÐµÑ€ÑÐ¸Ñ, Ð²Ð°Ð¼ Ð½ÑƒÐ¶Ð½Ð¾ Ð¾Ñ‡Ð¸ÑÑ‚Ð¸Ñ‚ÑŒ ÐºÐµÑˆ",
        Pe[TEXT.NO_MORE_RESOURCES] = "Ð ÐµÑÑƒÑ€ÑÐ¾Ð² Ð±Ð¾Ð»ÑŒÑˆÐµ Ð½ÐµÑ‚",
        Pe[TEXT.SURVIVED_1DAY] = "Ð’Ñ‹ Ð²Ñ‹Ð¶Ð¸Ð»Ð¸ 1 Ð´ÐµÐ½ÑŒ",
        Pe[TEXT.SURVIVED] = "Ð’Ñ‹ Ð²Ñ‹Ð¶Ð¸Ð»Ð¸ ",
        Pe[TEXT.DAYS] = " Ð´Ð½ÐµÐ¹",
        Pe[TEXT.DEAD_SAD] = "Ð’Ñ‹ ÑƒÐ¼ÐµÑ€Ð»Ð¸ ;-;",
        Pe[TEXT.SPAM_ME] = "Ð¡ÐµÑ€Ð²ÐµÑ€ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ‚ Ð½Ð°Ð¹Ñ‚Ð¸ Ñ‚Ð¾Ñ‡ÐºÑƒ ÑÐ¿Ð°Ð²Ð½Ð°! Ð¡Ð¿Ð°Ð¼ÑŒÑ‚Ðµ ÐºÐ½Ð¾Ð¿ÐºÑƒ Ð¸Ð³Ñ€Ð°Ñ‚ÑŒ!",
        Pe[TEXT.SPAM_ME2] = "Ð¡ÐµÑ€Ð²ÐµÑ€ Ð·Ð°Ð¿Ð¾Ð»Ð½ÐµÐ½! Ð¡Ð¿Ð°Ð¼ÑŒÑ‚Ðµ ÐºÐ½Ð¾Ð¿ÐºÑƒ Ð¸Ð³Ñ€Ð°Ñ‚ÑŒ!",
        Pe[TEXT.EMPTY] = "Ð ÐµÑÑƒÑ€ÑÑ‹ Ð·Ð°ÐºÐ¾Ð½Ñ‡Ð¸Ð»Ð¸ÑÑŒ",
        Pe[TEXT.INV_FULL] = "Ð˜Ð½Ð²ÐµÐ½Ñ‚Ð°Ñ€ÑŒ Ð·Ð°Ð¿Ð¾Ð»Ð½ÐµÐ½ (Ð¿Ñ€Ð°Ð²Ð°Ñ ÐºÐ½Ð¾Ð¿ÐºÐ° Ð¼Ñ‹ÑˆÐ¸ Ð´Ð»Ñ ÑƒÐ´Ð°Ð»ÐµÐ½Ð¸Ñ Ð¿Ñ€ÐµÐ´Ð¼ÐµÑ‚Ð¾Ð²)",
        Pe[TEXT.DEAD] = " ÑƒÐ¼ÐµÑ€",
        Pe[TEXT.WRONG_TOOL] = "Ð­Ñ‚Ð¾ Ð½Ðµ Ñ‚Ð¾Ñ‚ Ð¸Ð½ÑÑ‚Ñ€ÑƒÐ¼ÐµÐ½Ñ‚",
        Pe[TEXT.JOIN_TEAM] = "Ð’Ñ‹ Ð²Ð¾ÑˆÐ»Ð¸ Ð² ÐºÐ¾Ð¼Ð°Ð½Ð´Ñƒ",
        Pe[TEXT.YOU_DEAD] = "Ð’Ñ‹ ÑƒÐ¼ÐµÑ€Ð»Ð¸",
        Pe[TEXT.JOINED_TEAM] = " Ð²Ð¾ÑˆÑ‘Ð» Ð² ÐºÐ¾Ð¼Ð°Ð½Ð´Ñƒ",
        Pe[TEXT.TEAM_DESTROYED] = "Ð’Ð°ÑˆÐ° ÐºÐ¾Ð¼Ð°Ð½Ð´Ð° Ð±Ñ‹Ð»Ð° Ñ€Ð°Ð·Ñ€ÑƒÑˆÐµÐ½Ð°",
        Pe[TEXT.LEFT_TEAM] = "Ð’Ñ‹ Ð¿Ð¾ÐºÐ¸Ð½ÑƒÐ»Ð¸ ÐºÐ¾Ð¼Ð°Ð½Ð´Ñƒ",
        Pe[TEXT.LEFT_TEAM2] = " Ð¿Ð¾ÐºÐ¸Ð½ÑƒÐ» ÐºÐ¾Ð¼Ð°Ð½Ð´Ñƒ",
        Pe[TEXT.TOKEN] = "ÐšÑ‚Ð¾-Ñ‚Ð¾ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ Ð²Ð°Ñˆ Ñ‚Ð¾ÐºÐµÐ½ :>",
        Pe[TEXT.CHOOSE] = "Ð’Ñ‹Ð±ÐµÑ€Ð¸Ñ‚Ðµ ÑÐµÑ€Ð²ÐµÑ€",
        Pe[TEXT.PLAYERS] = "Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð²",
        Pe[TEXT.TOTAL_PLAYERS] = "Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð² Ð²ÑÐµÐ³Ð¾",
        Pe[TEXT.TOTAL_MODE] = "Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð² Ð² ÑÑ‚Ð¾Ð¼ Ñ€ÐµÐ¶Ð¸Ð¼Ðµ",
        Pe[TEXT.COMMING_SOON] = "Ð¡ÐºÐ¾Ñ€Ð¾...",
        document.getElementById("nickname_input").placeholder = "Ð˜Ð¼Ñ",
        n[0] = ["Ð’Ñ‹ Ð±Ñ‹Ð»Ð¸ ÑƒÐ±Ð¸Ñ‚Ñ‹ Ð±ÐµÐ· Ð¿Ñ€Ð¸Ñ‡Ð¸Ð½Ñ‹"],
        n[1] = ["Ð’Ñ‹ ÑƒÐ¼ÐµÑ€Ð»Ð¸ Ð¾Ñ‚ Ð³Ð¾Ð»Ð¾Ð´Ð°, ÐºÐ°Ðº Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ðµ Ð¸Ð³Ñ€Ñ‹ Ð¿Ð¾Ð´Ñ€Ð°Ð·ÑƒÐ¼ÐµÐ²Ð°ÐµÑ‚ ÑÑ‚Ð¾"],
        n[2] = ["Ð’Ñ‹ Ð·Ð°Ð¼ÐµÑ€Ð·Ð»Ð¸ Ð´Ð¾ ÑÐ¼ÐµÑ€Ñ‚Ð¸. Ð¢Ð°Ðº Ð³Ñ€ÑƒÑÑ‚Ð½Ð¾", "Ð£ Ð²Ð°Ñ Ð³Ð¸Ð¿Ð¾Ñ‚ÐµÑ€Ð¼Ð¸Ñ. Ð’ ÑÐ»ÐµÐ´ÑƒÑŽÑ‰Ð¸Ð¹ Ñ€Ð°Ð·, Ð¿Ð¾ÑÑ‚Ð°Ñ€Ð°Ð¹Ñ‚ÐµÑÑŒ Ð±Ñ‹Ñ‚ÑŒ Ñ€ÑÐ´Ð¾Ð¼ Ñ Ð¾Ð³Ð½Ñ‘Ð¼."],
        n[3] = ["Ð˜Ð³Ñ€Ð¾Ðº ÑƒÐ±Ð¸Ð» Ñ‚ÐµÐ±Ñ Ð¸ ÑÐºÐ°Ð·Ð°Ð» 'ÑÑ‚Ð°Ð½ÑŒ Ð»ÑƒÑ‡ÑˆÐµ.'", "Ð¢Ñ‹ Ð±Ñ‹Ð» ÑƒÐ±Ð¸Ñ‚ Ð¸Ð³Ñ€Ð¾ÐºÐ¾Ð¼. ÐÐµ Ð²Ð¾Ð»Ð½ÑƒÐ¹ÑÑ, ÑÑ‚Ð¾Ñ‚ Ð¸Ð³Ñ€Ð¾Ðº Ñ‚Ð¾Ð¶Ðµ ÑƒÐ¼Ñ€Ñ‘Ñ‚, Ð² ÐºÐ¾Ð½Ñ†Ðµ ÐºÐ¾Ð½Ñ†Ð¾Ð²."],
        n[4] = ["Ð’Ñ‹ ÑÑ‚Ð¾ÑÐ»Ð¸ ÑÐ»Ð¸ÑˆÐºÐ¾Ð¼ Ð±Ð»Ð¸Ð·ÐºÐ¾ Ðº Ð¾Ð³Ð½ÑŽ Ð¸ ÑÐ³Ð¾Ñ€ÐµÐ»Ð¸. ÐŸÐ»Ð¾Ñ…Ð°Ñ Ð¸Ð´ÐµÑ.", "Ð¢Ñ‹ ÑƒÐ¼ÐµÑ€ Ð¾Ñ‚ Ð¾Ð³Ð½Ñ, Ð¾Ð½ Ð¿Ñ€Ð¸Ñ‡Ð¸Ð½Ð¸Ð» Ð²Ð°Ð¼ Ð±Ð¾Ð»ÑŒ. ÐÐ°Ð¿Ð¸ÑˆÐ¸Ñ‚Ðµ Ð¸ÑÑ‚Ð¾Ñ€Ð¸ÑŽ Ð½Ð°ÑÑ‡Ñ‘Ñ‚ ÑÑ‚Ð¾Ð³Ð¾."],
        n[5] = ["Ð’Ð°ÑˆÐµ Ñ‚ÐµÐ»Ð¾ ÑÑ‚Ð°Ð½ÐµÑ‚ Ð³Ð½ÐµÐ·Ð´Ð¾Ð¼ Ð´Ð»Ñ ÑÐ¸Ñ† Ð¿Ð°ÑƒÐºÐ°", "ÐŸÐ°ÑƒÐº ÑƒÐ±Ð¸Ð» Ð²Ð°Ñ. ÐŸÐ¾ ÐºÑ€Ð°Ð¹Ð½ÐµÐ¹ Ð¼ÐµÑ€Ðµ ÑÑ‚Ð¾ Ð±Ñ‹Ð» Ð½Ðµ ÐºÑ€Ð¾Ð»Ð¸Ðº."],
        n[6] = ["Ð’Ð¾Ð»Ðº Ð±Ð¾Ð»ÑŒÑˆÐµ Ð½Ðµ Ð±ÑƒÐ´ÐµÑ‚ Ð³Ð¾Ð»Ð¾Ð´Ð°Ñ‚ÑŒ Ð¿Ð¾ÑÐ»Ðµ Ñ‚Ð¾Ð³Ð¾, ÐºÐ°Ðº Ð½Ð°ÐµÐ»ÑÑ Ð²Ð°Ð¼Ð¸", "ÐžÐ½Ð¸ Ð½Ðµ ÑÐ¾Ð±Ð°ÐºÐ¸. Ð’Ð¾Ð»ÐºÐ¸ Ð½Ðµ Ð»ÑŽÐ±ÑÑ‚ Ð»Ð°ÑÐºÐ°Ñ‚ÑŒÑÑ."],
        n[7] = ["Ð›Ð¸ÑÐ° Ð±Ñ‹Ð»Ð° ÑÐ»Ð¸ÑˆÐºÐ¾Ð¼ Ð±Ñ‹ÑÑ‚Ñ€Ð¾Ð¹ Ð´Ð»Ñ Ð²Ð°Ñ", "Ð›Ð¸ÑÐ° Ð¿Ñ€ÐµÐ²Ñ€Ð°Ñ‚Ð¸Ð»Ð° Ñ‚ÐµÐ±Ñ Ð² ÑÑ‰Ð¸Ðº. Ð¡ ÐºÐ°ÐºÐ¸Ñ… Ð¿Ð¾Ñ€ Ð¶Ð¸Ð²Ð¾Ñ‚Ð½Ñ‹Ðµ Ð¾Ð±Ð»Ð°Ð´Ð°ÑŽÑ‚ Ð¼Ð°Ð³Ð¸Ñ‡ÐµÑÐºÐ¸Ð¼Ð¸ ÑÐ¿Ð¾ÑÐ¾Ð±Ð½Ð¾ÑÑ‚ÑÐ¼Ð¸?"],
        n[8] = ["ÐœÐµÐ´Ð²ÐµÐ´ÑŒ Ð¿Ñ€Ð¾ÑÑ‚Ð¾ Ñ…Ð¾Ñ‚ÐµÐ» Ð¾Ð±Ð½ÑÑ‚ÑŒ Ñ‚ÐµÐ±Ñ.", "ÐœÐµÐ´Ð²ÐµÐ´ÑŒ Ð±Ñ‹Ð» ÑÐ»Ð¸ÑˆÐºÐ¾Ð¼ Ð³Ñ€ÑƒÑÑ‚Ð½Ñ‹Ð¼. ÐœÐ½Ðµ Ð½Ðµ Ð¶Ð°Ð»ÑŒ."],
        n[9] = ["Ð’Ñ‹ Ð±Ñ‹Ð»Ð¸ ÑÐ¾Ð¶Ð¶ÐµÐ½Ñ‹ Ð´Ñ€Ð°ÐºÐ¾Ð½Ð¾Ð¼. Ð¢Ð°Ðº Ð³Ñ€ÑƒÑÑ‚Ð½Ð¾.", "Ð’Ñ‹ Ð±Ñ‹Ð»Ð¸ ÑÐ¿Ð»ÑŽÑ‰ÐµÐ½Ñ‹ Ð´Ñ€Ð°ÐºÐ¾Ð½Ð¾Ð¼. Ð‘Ñ‹Ñ‚ÑŒ Ñ€Ð°Ð·Ð´Ð°Ð²Ð»ÐµÐ½Ð½Ñ‹Ð¼ - ÑÑ‚Ð¾ ÑƒÐ¶Ð°ÑÐ½Ñ‹Ð¹ ÑÐ¿Ð¾ÑÐ¾Ð± ÑƒÐ¼ÐµÑ€ÐµÑ‚ÑŒ."],
        n[10] = ["Ð’Ñ‹ Ð¿Ñ€Ñ‹Ð³Ð½ÑƒÐ»Ð¸ Ð² ÑÑ‚ÐµÐ½Ñƒ Ñ ÑˆÐ¸Ð¿Ð°Ð¼Ð¸. ÐŸÐ»Ð¾Ñ…Ð°Ñ Ð¸Ð´ÐµÑ...", "Ð’Ñ‹ Ð±Ñ‹Ð»Ð¸ ÑƒÐ±Ð¸Ñ‚Ñ‹ ÑÑ‚ÐµÐ½Ð¾Ð¹ Ñ ÑˆÐ¸Ð¿Ð°Ð¼Ð¸. Ð‘Ð¾Ð»ÑŒÑˆÐ¸Ð½ÑÑ‚Ð²Ð¾ Ð»ÑŽÐ´ÐµÐ¹ Ð´Ð¾ÑÑ‚Ð°Ñ‚Ð¾Ñ‡Ð½Ð¾ Ñ€Ð°Ð·ÑƒÐ¼Ð½Ñ‹, Ñ‡Ñ‚Ð¾Ð±Ñ‹ Ð½Ðµ ÐºÐ°ÑÐ°Ñ‚ÑŒÑÑ Ð¾ÑÑ‚Ñ€Ñ‹Ñ… Ð²ÐµÑ‰ÐµÐ¹."],
        n[11] = ["Ð”Ð°Ð¶Ðµ Ð¿Ñ€Ð¸Ð·Ñ€Ð°Ðº Ð¼Ð¾Ð¶ÐµÑ‚ ÑƒÐ¼ÐµÑ€ÐµÑ‚ÑŒ.", "Ð’Ñ‹ Ð½Ðµ ÑÐ¼Ð¾Ð³Ð»Ð¸ Ð²Ð¾ÑÐºÑ€ÐµÑÐ½ÑƒÑ‚ÑŒ. Ð­Ñ‚Ð¾ Ð¸Ð³Ñ€Ð°, Ð¸ Ð²Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð²Ð¾Ð·Ð²Ñ€Ð°Ñ‰Ð°Ñ‚ÑŒÑÑ Ðº Ð¶Ð¸Ð·Ð½Ð¸ Ð¿Ð¾ÑÐ»Ðµ ÑÐ¼ÐµÑ€Ñ‚Ð¸, Ñ‚Ð°Ðº Ñ‡Ñ‚Ð¾..."],
        n[12] = ["Ð‘Ð°ÐºÑ‚ÐµÑ€Ð¸Ñ Ð¸Ð· Ð²Ð°ÑˆÐµÐ¹ ÑÑ‹Ñ€Ð¾Ð¹ Ð¿Ð¸Ñ‰Ð¸ ÑƒÐ±Ð¸Ð»Ð° Ð²Ð°Ñ. Ð­Ñ‚Ð° Ð¸Ð³Ñ€Ð° Ð±ÐµÐ·ÑƒÑÐ»Ð¾Ð²Ð½Ð¾ ÑÐ»Ð¾Ð¶Ð½Ð°.", "Ð’Ñ‹ ÑƒÐ±Ð¸Ð»Ð¸ ÑÑ‹Ñ€ÑƒÑŽ Ð¿Ð¸Ñ‰Ñƒ. ÐžÐ½Ð° Ñ‚Ð¾Ð¶Ðµ Ñ‚ÐµÐ±Ñ ÑƒÐ±Ð¸Ð»Ð°."],
        n[13] = ["Ð’Ñ‹ ÑƒÐ¼ÐµÑ€Ð»Ð¸ Ð¾Ñ‚ Ð¶Ð°Ð¶Ð´Ñ‹. Ð›ÑƒÑ‡ÑˆÐµ Ð¿Ð¸Ñ‚ÑŒ ÑÐ¾Ð±ÑÑ‚Ð²ÐµÐ½Ð½ÑƒÑŽ Ð¼Ð¾Ñ‡Ñƒ."],
        n[14] = ["Ð—Ð½Ð°ÐµÑˆÑŒ Ð»Ð¸ Ñ‚Ñ‹, Ñ‡Ñ‚Ð¾ Ñƒ Ð³Ð¾Ð»Ð¾Ð´Ð°ÑŽÑ‰Ð¸Ñ… Ñ€Ð¾Ñ‚ Ð²ÑÐµÐ³Ð´Ð° Ð¿Ð¾Ð´ Ð²Ð¾Ð´Ð¾Ð¹, ÐºÐ¾Ð³Ð´Ð° Ð¾Ð½Ð¸ Ð¿Ð»Ð°Ð²Ð°ÑŽÑ‚? Ð¢ÐµÐ¿ÐµÑ€ÑŒ Ñ‚Ñ‹ Ð·Ð½Ð°ÐµÑˆÑŒ."],
        n[15] = ["ÐÐµ Ð²Ð¾Ð»Ð½ÑƒÐ¹ÑÑ, Ð¿Ð¸Ñ€Ð°Ð½ÑŒÑ ÑÐ¾Ñ‡Ð»Ð° Ñ‚ÐµÐ±Ñ Ð²ÐºÑƒÑÐ½Ñ‹Ð¼.", "Ð’ÐµÑÐµÐ»Ñ‹Ð¹ Ñ„Ð°ÐºÑ‚: ÐŸÐ¸Ñ€Ð°Ð½ÑŒÐ¸ ÐµÐ´ÑÑ‚ Ð»ÑŽÐ´ÐµÐ¹. Ð’ Ñ‚Ð¾Ð¼ Ñ‡Ð¸ÑÐ»Ðµ Ñ‚ÐµÐ±Ñ."],
        n[16] = ["LapaMauve Ð½Ðµ Ð¿Ð»Ð°Ð½Ð¸Ñ€Ð¾Ð²Ð°Ð», Ñ‡Ñ‚Ð¾ Ñ‚Ñ‹ ÑƒÐ±ÑŒÑ‘ÑˆÑŒ ÐºÑ€Ð°ÐºÐµÐ½Ð°", "ÐšÑ€Ð°Ðº! ÐšÑ€Ð°ÐºÐµÐ½ ÑÐ»Ð¾Ð¼Ð°Ð» Ñ‚Ð²Ð¾Ð¹ Ñ‡ÐµÑ€ÐµÐ¿."],
        n[17] = ["Ð¢Ð²Ð¾Ñ ÐºÐ¾Ð¶Ð° Ñ€Ð°Ð·Ð²Ð°Ð»Ð¸Ð²Ð°ÐµÑ‚ÑÑ, ÑÐ¾Ð»Ð½Ñ†Ðµ ÑƒÐ±Ð¸Ð»Ð¾ Ñ‚ÐµÐ±Ñ"],
        n[18] = ["Ð§ÐµÑÐ½Ð¾Ðº, Ñ…Ñ€Ð°Ð½ÑÑ‰Ð¸Ð¹ÑÑ Ð² Ñ‚Ð²Ð¾Ð¸Ñ… ÐºÐ°Ñ€Ð¼Ð°Ð½Ð°Ñ… ÑÐ²Ð°Ñ€Ð¸Ð» Ñ‚Ð²Ð¾Ð¹ Ð¼Ð¾Ð·Ð³."],
        n[19] = ["ÐÐµ ÑÑ‚Ð¾Ð¸Ñ‚ ÑÑ‚Ð¾ÑÑ‚ÑŒ Ñ€ÑÐ´Ð¾Ð¼ Ñ Ñ‡ÐµÑÐ½Ð¾Ñ‡Ð½Ñ‹Ð¼ Ð·ÑƒÐ±ÐºÐ¾Ð¼, ÐºÐ¾Ð³Ð´Ð° Ð²Ñ‹ Ð²Ð°Ð¼Ð¿Ð¸Ñ€."],
        n[20] = ["Ð’Ñ‹ Ð²Ð°Ð¼Ð¿Ð¸Ñ€, Ð’Ñ‹ ÐµÐ»Ð¸ Ñ‡ÐµÑÐ½Ð¾Ðº, Ñ‡ÐµÐ³Ð¾ Ð²Ñ‹ Ð¾Ð¶Ð¸Ð´Ð°Ð»Ð¸?"],
        n[21] = ["Ð’Ð°ÑˆÐµ Ñ‚ÐµÐ»Ð¾ Ð·Ð°ÑÑ‚Ñ€ÐµÐ²Ð°ÐµÑ‚ Ð² ÑˆÐ¸Ð¿Ð°Ñ…, ÐºÐ¾Ð³Ð´Ð° Ð²Ñ‹ Ð¿Ñ‹Ñ‚Ð°ÐµÑ‚ÐµÑÑŒ ÑƒÐ±ÐµÐ¶Ð°Ñ‚ÑŒ, Ð²Ð°ÑˆÐ° ÐºÐ¾Ð¶Ð° Ð¾Ñ‚Ñ€Ñ‹Ð²Ð°ÐµÑ‚ÑÑ, Ð¸ Ð²Ð°ÑˆÐµ ÑÐµÑ€Ð´Ñ†Ðµ Ð¿ÐµÑ€ÐµÑÑ‚Ð°ÐµÑ‚ Ð±Ð¸Ñ‚ÑŒÑÑ."],
        ZOMBIE_GRUMBLE = "Uuunnnggg",
        ZOMBIE_GRUMBLES = ["Uuunnnggg... Ð¯ Ð³Ð¾Ð»Ð¾Ð´ÐµÐ½", "ÐÑƒÐ¶Ð½Ñ‹ Ñ‚Ð²Ð¾Ð¸ Ð¼Ð¾Ð·Ð³Ð¸ Uuunnnggg...", "Ð¡Ð²ÐµÐ¶ÐµÐµ Ð¼ÑÑÐ¾ Ð·Ð´ÐµÑÑŒ... Uuunnnggg", "Uuunnnggg... Ð¢Ñ‹ Ð²ÐºÑƒÑÐ½Ñ‹Ð¹", "Uuunnnggg...", "Ð•Ð´Ð°â€¦ Uuunnnggg...", "Ð¯ Ñ‡ÑƒÐ²ÑÑ‚Ð²ÑƒÑŽ Ð·Ð°Ð¿Ð°Ñ… ÐºÑ€Ð¾Ð²Ð¸... Uuunnnggg"]
    }
    function i() {
        Pe[Ge.DRAGON_CUBE] = ["You feel a great power emanating from this orb"],
        n[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."],
        Pe[Ge.CRAB_STICK] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"],
        Pe[TEXT.BACK_TO_THE_GAME] = " BACK TO THE GAME",
        Pe[TEXT.TWITTER] = " Share on Twitter",
        Pe[TEXT.FACEBOOK] = " Share on Facebook",
        Pe[TEXT.KIT_NEXT] = "You can buy items on the shop in the next game with your points",
        Pe[TEXT.POINTS] = "points",
        Pe[TEXT.SCORE] = "Score",
        Pe[TEXT.KILL] = "Kill",
        Pe[TEXT.DAYS_SURVIVED] = "Days survived",
        Pe[TEXT.MODE_FREE] = "Building method: Free. Press G to change",
        Pe[TEXT.MODE_GRID] = "Building method: Grid. Press G to change",
        Pe[Ge.CRAB_LOOT] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"],
        Pe[Ge.CRAB_SPEAR] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"],
        Pe[Ge.CROWN_CRAB] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"],
        Pe[Ge.BED] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"],
        document.getElementById("typequest").innerHTML = "Chrono Quests",
        document.getElementById("timeremainingquest").innerHTML = "Time Remaining",
        document.getElementById("constraintquest").innerHTML = " Constraints",
        document.getElementById("claim_rewards").innerHTML = " Claim rewards",
        document.getElementById("rewardquest").innerHTML = " Reward",
        document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart",
        document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst",
        document.getElementById("survive20min_3").innerHTML = "Survive without losing life",
        document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests",
        document.getElementById("dont_hit_5").innerHTML = " Be peaceful",
        document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter",
        document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
        for (var e = 0; e < 7; e++)
            document.getElementById("claim_reward_" + e).innerHTML = "CLAIM REWARD!";
        document.getElementById("quit_chronoquest").innerHTML = " QUIT",
        Pe[Ge.HAND] = ["mÃ£o"],
        Pe[Ge.GROUND] = ["terra", "estÃ¡ sujo!"],
        Pe[Ge.SAND] = ["areia", "entrou nos meus olhos!"],
        Pe[Ge.WOOD] = ["madeira", "vocÃª nÃ£o pode pegar o suficiente disso!"],
        Pe[Ge.STONE] = ["pedra", "tambÃ©m chamado rocha"],
        Pe[Ge.GOLD] = ["ouro", "seja generoso, dÃª para outros"],
        Pe[Ge.DIAMOND] = ["diamante", "o que vocÃª irÃ¡ fazer com isso?"],
        Pe[Ge.AMETHYST] = ["ametista", "Ã© mauve como lapa"],
        Pe[Ge.FLOUR] = ["farinha", "usada na cozinha"],
        Pe[Ge.COOKIE] = ["biscoito", "biscoito da vovÃ³", "comida: 50"],
        Pe[Ge.CAKE] = ["bolo", "bolo dos sonhos para gourmets", "comida: 100"],
        Pe[Ge.MEAT] = ["carne crua", "vocÃª pode cozinhar na fogueira", "envenenamento por comida: 10", "comida: 15"],
        Pe[Ge.COOKED_MEAT] = ["carne assada", "um mal passado, por favor", "comida: 35"],
        Pe[Ge.FOODFISH] = ["peixe cru", "eu acho que ainda estÃ¡ vivo", "causa envenenamento por comida: 10", "comida: 18"],
        Pe[Ge.FOODFISH_COOKED] = ["peixe assado", "com limÃ£o Ã© perfeito", "comida: 35"],
        Pe[Ge.BREAD] = ["pÃ£o", "um excelente pÃ£o francÃªs", "Ã© a moeda do mercado", "comida: 15"],
        Pe[Ge.SANDWICH] = ["sanduÃ­che", "saboroso com rissol de krabby", "comida: 100"],
        Pe[Ge.CANDY] = ["doces", "apenas para crianÃ§as!", "comida: 100"],
        Pe[Ge.SUGAR_CAN] = ["cana-de-aÃ§Ãºcar", "prove, Ã© delicioso!", "comida: 100"],
        Pe[Ge.GARLAND] = ["pisca-pisca", "decoraÃ§Ã£o perfeita de telhado"],
        Pe[Ge.SEED] = ["sementes de berries", "cresce como berrie", "nasce em: 2min", "cresce em: 55s", "precisa de Ã¡gua em: 3min 20s", "durabilidade: 700", "tempo de vida: 8 dias"],
        Pe[Ge.PLANT] = ["berry", "Berry saborosa!", "comida: 10"],
        Pe[Ge.WHEAT_SEED] = ["semente de trigo", "cresce como trigo", "nasce em: 2min", "cresce em: 16s", "precisa de Ã¡gua em: 2min", "durabilidade: 700", "tempo de vida: 8 days"],
        Pe[Ge.WILD_WHEAT] = ["planta selvagem", "vira farinha quando coloca em um moinho de vento"],
        Pe[Ge.PUMPKIN_SEED] = ["semente de abÃ³bora", "cresce como abÃ³bora", "nasce em: 2min 40s", "cresce em: 2min", "precisa de Ã¡gua em: 2min", "durabilidade: 700", "tempo de vida: 8 dias"],
        Pe[Ge.PUMPKIN] = ["abÃ³bora", "Ã© a lembranÃ§a do halloween", "comida: 30"],
        Pe[Ge.GARLIC_SEED] = ["semente de alho", "muito perigoso para vampiros", "dano: 20", "nassce: 4min", "cresce em: 1min 10s", "precisa de Ã¡gua em: 1min 40s", "durabilidade: 700", "tempo de vida: 8 dias"],
        Pe[Ge.GARLIC] = ["alho", "cura vocÃª e reduz o frio", "comida: 14", "cura ao longo do tempo: 30", "efeito: 1"],
        Pe[Ge.THORNBUSH_SEED] = ["semente de mato de espinhos", "pode dar dano nos seus inimigos", "dano: 20", "nasce em: 4min", "cresce em: 15s", "precisa de Ã¡gua em: 3min", "durabilidade: 1000", "tempo de vida: 8 days"],
        Pe[Ge.THORNBUSH] = ["mato de espinhos", "pica!"],
        Pe[Ge.PLOT] = ["pote", "sÃ©rio, use isso", "com esse GMO fertilize suas plantas", "vai crescer mais rÃ¡pido e com menos Ã¡gua", "durabilidade: 2000"],
        Pe[Ge.ICE] = ["gelo", "Ãºtil para fazer bolo e Ã¡gua"],
        Pe[Ge.SPANNER] = ["chave inglesa", "para reparar portas, muros e muros com espinho", "dano: 2"],
        Pe[Ge.FUR_WOLF] = ["pele de lobo", "cachorro? mas onde estÃ¡ o cachorro?!"],
        Pe[Ge.FUR] = ["pele de coelho", "o coelho era tÃ£o fofo..."],
        Pe[Ge.SPECIAL_FUR] = ["pele pura", "vocÃª Ã© uma fÃ¡brica de pÃ£o"],
        Pe[Ge.SPECIAL_FUR_2] = ["pele negra", "vocÃª estÃ¡ pronto para fazer algo errado"],
        Pe[Ge.FUR_WINTER] = ["pele de inverno", "ele sÃ³ queria um abraÃ§o"],
        Pe[Ge.SCALES] = ["escala", "Ã© pequeno como peixe!"],
        Pe[Ge.KRAKEN_SKIN] = ["pele do kraken", "vocÃª nÃ£o estÃ¡ com medo?"],
        Pe[Ge.FIRE] = ["fogueira", "esquenta vocÃª!", "durabilidade: 150", "tempo de vida: 2min"],
        Pe[Ge.BIG_FIRE] = ["fogueira grande", "te esquenta por mais tempo!", "durabilidade: 400", "tempo de vida: 6min"],
        Pe[Ge.WORKBENCH] = ["mesa de trabalho", "muito Ãºtil para fazer todos os objetos"],
        Pe[Ge.CORD] = ["linha", "usada para fazer chapÃ©us e mochila"],
        Pe[Ge.BLUE_CORD] = ["linha de diamante", "usada para fazer chapÃ©us especiais"],
        Pe[Ge.CHEST] = ["baÃº", "permite que vocÃª guarde itens", "durabilidade: 500"],
        Pe[Ge.SWORD_WOOD] = ["espada de madeira", "isso funciona?", "dano: 12", "dano em construÃ§Ãµes: 4"],
        Pe[Ge.SWORD] = ["espada de pedra", "seja legal com outros", "dano: 19", "dano em construÃ§Ãµes: 6"],
        Pe[Ge.SWORD_GOLD] = ["espada de ouro", "rei da floresta", "dano: 22", "dano em construÃ§Ãµes: 7"],
        Pe[Ge.SWORD_DIAMOND] = ["espada de diamante", "vocÃª pode sentir o poder", "dano: 24", "dano em construÃ§Ãµes: 8"],
        Pe[Ge.PIRATE_SWORD] = ["espada de pirata", "AYYYYY!", "alcanÃ§a mais distÃ¢ncia que a espada normal", "dano: 24", "dano em construÃ§Ãµes: 8"],
        Pe[Ge.SWORD_AMETHYST] = ["espada de ametista", "mauve Ã© a cor mais bonita do mundo", "dano: 27", "dano em construÃ§Ãµes: 9"],
        Pe[Ge.DRAGON_SWORD] = ["espada do dragÃ£o", "sem piedade!", "dano: 30", "dano em construÃ§Ãµes: 10"],
        Pe[Ge.DRAGON_SPEAR] = ["lanÃ§a do dragÃ£o", "mate todos eles!", "dano: 22", "dano em construÃ§Ãµes: 6"],
        Pe[Ge.PICK_WOOD] = ["picareta de madeira", "pode coletar apenas madeira e pedra", "dano: 1"],
        Pe[Ge.PICK_STONE] = ["picareta de pedra", "pode coletar madeira, pedra e ouro", "dano: 2"],
        Pe[Ge.PICK_GOLD] = ["picareta de ouro", "pode coletar diamante", "dano: 3", "dano em construÃ§Ãµes: 1"],
        Pe[Ge.PICK_DIAMOND] = ["picareta de diamante", "pode coletar tudo", "dano: 4", "dano em construÃ§Ãµes: 1"],
        Pe[Ge.PICK_AMETHYST] = ["picareta de ametista", "pode coletar tudo, parece fantastico!", "dano: 5", "dano em construÃ§Ãµes: 1"],
        Pe[Ge.HAMMER] = ["martelo de pedra", "Ãºtil para destruir construÃ§Ãµes", "nÃ£o funciona bem no diamante e na ametista", "dano: 2", "dano em construÃ§Ãµes: 20"],
        Pe[Ge.HAMMER_GOLD] = ["martelo de ouro", "Ãºtil para destruir construÃ§Ãµes", "nÃ£o funciona bem na ametista", "dano: 3", "dano em construÃ§Ãµes: 30"],
        Pe[Ge.HAMMER_DIAMOND] = ["martelo de diamante", "Ãºtil para destruir construÃ§Ãµes", "dano: 4", "dano em construÃ§Ãµes: 40"],
        Pe[Ge.HAMMER_AMETHYST] = ["martelo de ametista", "Ãºtil para destruir construÃ§Ãµes", "dano: 5", "dano em construÃ§Ãµes: 50"],
        Pe[Ge.SUPER_HAMMER] = ["super martelo", "vocÃª planeja destruir o mundo?", "dano: 12", "dano em construÃ§Ãµes: 70"],
        Pe[Ge.WOOD_SPEAR] = ["lanÃ§a de madeira", "parece um graveto de madeira mas pica.", "dano: 10", "dano em construÃ§Ãµes: 2"],
        Pe[Ge.SPEAR] = ["lanÃ§a de pedra", "o comeÃ§o da evoluÃ§Ã£o!", "dano: 14", "dano em construÃ§Ãµes: 4"],
        Pe[Ge.GOLD_SPEAR] = ["lanÃ§a de ouro", "cuidado, pica!", "dano: 15", "dano em construÃ§Ãµes: 5"],
        Pe[Ge.DIAMOND_SPEAR] = ["lanÃ§a de diamante", "vocÃª estÃ¡ pronto para matar um dragÃ£o", "Dano: 17", "dano em construÃ§Ãµes: 5"],
        Pe[Ge.AMETHYST_SPEAR] = ["lanÃ§a de ametista", "dragÃµes nÃ£o te amedrontam", "Dano: 18", "dano em construÃ§Ãµes: 6"],
        Pe[Ge.SHOVEL] = ["pÃ¡ de pedral", "cave o chÃ£o para pegar terra, areia e gelo", "vocÃª tambÃ©m pode pegar minerais", "dano: 2"],
        Pe[Ge.SHOVEL_GOLD] = ["pÃ¡ de ouro", "cave o chÃ£o para pegar terra, areia e gelo", "vocÃª tambÃ©m pode pegar minerais", "dano: 3", "dano em construÃ§Ãµes: 1"],
        Pe[Ge.SHOVEL_DIAMOND] = ["pÃ¡ de diamante", "cave o chÃ£o para pegar terra, areia e gelo", "vocÃª tambÃ©m pode pegar minerais", "dano: 4", "dano em construÃ§Ãµes: 1"],
        Pe[Ge.SHOVEL_AMETHYST] = ["pÃ¡ de ametista", "cave o chÃ£o para pegar terra, areia e gelo", "vocÃª tambÃ©m pode pegar minerais", "dano: 5", "dano em construÃ§Ãµes: 1"],
        Pe[Ge.WOOD_HELMET] = ["capacete de madeira", "melhor que nada", "defesa de jogadores: 1", "defesa de animais: 4"],
        Pe[Ge.STONE_HELMET] = ["capacete de pedra", "vocÃª estÃ¡ pronto para a batalha!", "defesa de jogadores: 2", "Animals Defense: 8"],
        Pe[Ge.GOLD_HELMET] = ["capacete de ouro", "AKA o capacete dos selvagens", "defesa de jogadores: 4", "defesa de animais: 13"],
        Pe[Ge.DIAMOND_HELMET] = ["capacete de diamante", "nÃ£o se precipite tanto", "defesa de jogadores: 5", "defesa de animais: 19"],
        Pe[Ge.AMETHYST_HELMET] = ["capacete de ametista", "vocÃª nÃ£o tem medo de mais nada", "defesa de jogadores: 6", "defesa de animais: 23"],
        Pe[Ge.DRAGON_HELMET] = ["capacete do dragÃ£o", "vocÃª vai conquistar o mundo", "defesa de jogadores: 8", "defesa de animais: 27"],
        Pe[Ge.EXPLORER_HAT] = ["chapÃ©u de explorador", "animais nÃ£o vÃ£o te atacar", "mas nÃ£o faÃ§a barulho!", "quente fora da Ã¡gua"],
        Pe[Ge.CHRISTMAS_HAT] = ["gorro de natal", "Oh, oh, oh, feliz natal", "quente fora da Ã¡gua e neve"],
        Pe[Ge.ELF_HAT] = ["chapÃ©u de elfo", "nÃ£o deixe-se ser explorado, seu pequeno elfo de neve!", "quente fora da Ã¡gua e neve"],
        Pe[Ge.HOOD] = ["capuz", "vocÃª Ã© um trapaceiro", "vocÃª pode roubar alguÃ©m apenas se", "1) Ã© de noite", "2)vocÃª nÃ£o estÃ¡ segurando nada", "3) se vocÃª n foi tocado por 5 segundos", "4) vocÃª nÃ£o estÃ¡ perto de uma fogueira", "5) seu alvo nÃ£o estÃ¡ com equipamento camponÃªs", "quente fora da Ã¡gua e na neve"],
        Pe[Ge.EARMUFFS] = ["protetor de orelhas", "algum tipo de chapka pequena.", "quente fora da Ã¡gua e neve"],
        Pe[Ge.COAT] = ["Chapka", "tambÃ©m chamado de casaco.", "esquenta fora da Ã¡gua e na neve", "muito quente"],
        Pe[Ge.CAP_SCARF] = ["ChapÃ©u de inverno", "Muito confortÃ¡vel", "Muito quente"],
        Pe[Ge.PEASANT] = ["tÃºnica", "suas plantas crescem rÃ¡pido", "quente fora da Ã¡gua e na neve"],
        Pe[Ge.WINTER_HOOD] = ["capuz de inferno", "vocÃª sÃ³ pode roubar alguÃ©m se", "Ã© de noite", "-vocÃª nÃ£o estÃ¡ segurando nada", "- se vocÃª nÃ£o foi tocado por 4 segundos", "- vocÃª nÃ£o estÃ¡ perto de uma fogueira", "-seu alvo nÃ£o estÃ¡ com equipamento de camponÃªs de inverno", "esquenta fora da Ã¡gua e na neve"],
        Pe[Ge.WINTER_PEASANT] = ["camponÃªs de inverno", "suas plantas crescem rÃ¡pido", "quente fora da Ã¡gua e na neve"],
        Pe[Ge.DIVING_MASK] = ["mÃ¡scara de mergulho", "vocÃª Ã© rÃ¡pido na Ã¡gua", "quente na Ã¡gua", "defesa de jogadores: 2, defesa de animais: 8"],
        Pe[Ge.SUPER_DIVING_SUIT] = ["super mÃ¡scara de mergulho", "vocÃª Ã© muito rÃ¡pido na Ã¡gua", "quente na Ã¡gua", "defesa de jogadores: 4, defesa de animais: 16"],
        Pe[Ge.DRAGON_ORB] = ["esfera do dragÃ£o", "dado na questt"],
        Pe[Ge.DRAGON_HEART] = ["coraÃ§Ã£o de dragÃ£o", "torna vocÃª num fantasmas na morte!", "vocÃª Ã© um fantasma por 60 segundos", "ache uma pedra da ressurreiÃ§Ã£o"],
        Pe[Ge.GEMME_GREEN] = ["pedra verde", "vocÃª nÃ£o vai trapacear, promete?"],
        Pe[Ge.GEMME_ORANGE] = ["pedra laranja", "apenas um pirata de verdade pode achar-lo!"],
        Pe[Ge.GEMME_BLUE] = ["pedra azul", "para pessoas muito gentis"],
        Pe[Ge.CROWN_GREEN] = ["coroa verde", "vocÃª se regenera muito rÃ¡pido", "regenera ao longo do tempo: 40", "defesa de jogadores: 4, defesa de animais: 16"],
        Pe[Ge.CROWN_ORANGE] = ["coroa laranja", "de repente vocÃª se sente muito sortudo", "defesa de jogadores: 4, defesa de animais: 16"],
        Pe[Ge.CROWN_BLUE] = ["coroa azul", "quando vocÃª morrer, vocÃª vira um fantasma", "vocÃª perderÃ¡ sua arma", "defesa de jogadores: 4, defesa de animais: 16"],
        Pe[Ge.BUCKET_FULL] = ["balde", "Ãºtil para encher um poÃ§o", "um balde equivale a doze garrafas"],
        Pe[Ge.BUCKET_EMPTY] = ["balde vazio", "vocÃª precisa encher esse balde perto de uma fonte de Ã¡gua"],
        Pe[Ge.BOTTLE_FULL] = ["garrafa", "permite que vocÃª beba Ã¡gua em qualquer lugar", "Ã¡gua: 50"],
        Pe[Ge.BOTTLE_EMPTY] = ["garrafa vazia", "vocÃª pode encher essa garrafa perto de uma fonte de Ã¡gua"],
        Pe[Ge.WATERING_CAN] = ["regador vazio", "vocÃª deve enche-lo com uma fonte de Ã¡gua para usa-lo"],
        Pe[Ge.WATERING_CAN_FULL] = ["regador", "permite regar as plantas", "dano: 1"],
        Pe[Ge.BAG] = ["mochila", "mais espaÃ§o para seus itens!"],
        Pe[Ge.PAPER] = ["papel", "usado para fazer o livro"],
        Pe[Ge.BOOK] = ["livro", "permite reduzir consideradamente o tempo de construÃ§Ãµes", "mas precisa estÃ¡ equipado para fucionar", "dano: 1"],
        Pe[Ge.BANDAGE] = ["bandagem", "recupera sua vida mais rapidamente", "Heal over time: 30", "Effect: 5"],
        Pe[Ge.LOCK] = ["fechadura", "permite vocÃª trancar seu baÃº"],
        Pe[Ge.LOCKPICK] = ["chave", "permite destrancar um baÃº"],
        Pe[Ge.TOTEM] = ["Totem", "permite vocÃª criar um time", "compartilha portas e baÃºs", "edifÃ­cio prejudicial nÃ£o quer machucar seu amigo"],
        Pe[Ge.BRIDGE] = ["ponte", "muito Ãºtil na Ã¡gua", "permite vocÃª beber sem se afogar", "anda rÃ¡pido na Ã¡gua"],
        Pe[Ge.SIGN] = ["placa", "deixe uma mensagem para outros", "durabilidade: 200"],
        Pe[Ge.ROOF] = ["telhado", "esconde vocÃª um pouco e te esquenta!"],
        Pe[Ge.WELL] = ["poÃ§o", "permite encher garrafas", "durabilidade: 1000"],
        Pe[Ge.WALL] = ["muro de madeira", "vocÃª sabia que o muro danÃ§a?", "durabilidade: 1000"],
        Pe[Ge.STONE_WALL] = ["muro de pedra", "Ã© um pocu mais sÃ©rio.", "durabilidade: 1500"],
        Pe[Ge.GOLD_WALL] = ["muro de ouro", "ouro nos seus muros? Ã© muito chamativo.", "durabilidade: 2000"],
        Pe[Ge.DIAMOND_WALL] = ["muro de diamante", "tÃ£o brilhoso, veja seus olhos", "durabilidade: 2500"],
        Pe[Ge.AMETHYST_WALL] = ["muro de ametista", "vocÃª estÃ¡ muito assustado de sair!", "durabilidade: 3000"],
        Pe[Ge.SPIKE] = ["espiga de madeira", "pode dar dano nos seus inimigos", "dano: 10, dano no acerto: 2", "durabilidade: 150"],
        Pe[Ge.STONE_SPIKE] = ["espiga de pedra", "eu nÃ£o quero ser seu inimigo.", "dano: 20", "dano no acerto: 3", "durabilidade: 300"],
        Pe[Ge.GOLD_SPIKE] = ["espiga de ouro", "vocÃª Ã© tÃ£o cruel.", "dano: 30", "dano no acerto: 3", "durabilidade: 600"],
        Pe[Ge.DIAMOND_SPIKE] = ["espiga de diamante", "vocÃª nÃ£o gosta de ter companhia.", "dano: 40", "dano no acerto: 4", "durabilidade: 1200"],
        Pe[Ge.AMETHYST_SPIKE] = ["espiga de ametista", "o que diabos seu vizinhos fizeram para vocÃª?", "dano: 50", "dano no acerto: 4", "durabilidade: 2400"],
        Pe[Ge.WOOD_DOOR] = ["porta de madeira", "pode ser aberta ou fechada por vocÃª ou seus amigos", "durabilidade: 1000"],
        Pe[Ge.STONE_DOOR] = ["porta de pedra", "uma porta mais forte Ã© mais sÃ©rio", "durabilidade: 1500"],
        Pe[Ge.GOLD_DOOR] = ["porta de ouro", "vocÃª estÃ¡ re-construindo o el dorado?", "durabilidade: 2000"],
        Pe[Ge.DIAMOND_DOOR] = ["porta de diamante", "para uma casa brilhante", "durabilidade: 2500"],
        Pe[Ge.AMETHYST_DOOR] = ["porta de ametista", "Ã© a sua casa um lugar trancado seguro?", "durabilidade: 3500"],
        Pe[Ge.FURNACE] = ["fornalha", "esquenta vocÃª", "consumi madeira em todo 5 segundos", "durabilidade: 1000"],
        Pe[Ge.WINDMILL] = ["moinho de vento", "pode produzir farinha do trigo", "demora 5 segundos para fazer farinha", "dÃ¡ pontos ao trabalhar", "durabilidade: 2000"],
        Pe[Ge.BREAD_OVEN] = ["forno de pÃ£o", "permite fazer pÃ£o feito de farinha", "demora 10 segundos para fazer pÃ£o", "dÃ¡ pontos ao trabalhar", "durabilidade: 2000"],
        Pe[Ge.RESURRECTION] = ["pedra da ressurreiÃ§Ã£o", "Ã© mÃ¡gico", "te ressuscita se vocÃª for um fantasmas", "vocÃª vai perder sua arma", "durabilidade 200: 200"],
        Pe[TEXT.YOU_CANNOT_JOIN] = "vocÃª nÃ£o pode entrar no servidor",
        Pe[TEXT.KICKED] = "kickado: ",
        Pe[TEXT.KEY_ALREADY] = "sua chave estÃ¡ em uso por outra pessoa",
        Pe[TEXT.KEY_WRONG] = "sua chave estÃ¡ errada",
        Pe[TEXT.OLD_VERSION] = "vocÃª tem uma versÃ£o velha, limpe seu cache",
        Pe[TEXT.NO_MORE_RESOURCES] = "nÃ£o tem mais recursos",
        Pe[TEXT.SURVIVED_1DAY] = "vocÃª sobreviveu 1 dia",
        Pe[TEXT.SURVIVED] = "vocÃª sobreviveu ",
        Pe[TEXT.DAYS] = " dias",
        Pe[TEXT.DEAD_SAD] = "vocÃª estÃ¡ morto ;-;",
        Pe[TEXT.SPAM_ME] = "servidor nÃ£o pÃ´de achar um local de spawn! spam o botÃ£o de play!",
        Pe[TEXT.SPAM_ME2] = "servidor estÃ¡ cheio! spam o botÃ£o de play!",
        Pe[TEXT.EMPTY] = "nÃ£o tem recursos",
        Pe[TEXT.INV_FULL] = "inventÃ¡rio estÃ¡ cheio (botÃ£o direito para deletar itens)",
        Pe[TEXT.DEAD] = " estÃ¡ morto",
        Pe[TEXT.WRONG_TOOL] = "essa nÃ£o Ã© a ferramenta certa",
        Pe[TEXT.JOIN_TEAM] = "vocÃª entrou no time",
        Pe[TEXT.YOU_DEAD] = "vocÃª estÃ¡ morto",
        Pe[TEXT.JOINED_TEAM] = "entrou no time",
        Pe[TEXT.TEAM_DESTROYED] = "seu time foi destruido",
        Pe[TEXT.LEFT_TEAM] = "vocÃª saiu do time",
        Pe[TEXT.LEFT_TEAM2] = " saiu do time",
        Pe[TEXT.TOKEN] = "alguÃ©m roubou sua ficha :>",
        Pe[TEXT.CHOOSE] = "escolha um servidor",
        Pe[TEXT.PLAYERS] = "jogadores",
        Pe[TEXT.TOTAL_PLAYERS] = "jogadores totais",
        Pe[TEXT.TOTAL_MODE] = "jogadores nesse modo",
        Pe[TEXT.COMMING_SOON] = "Coming soon...",
        document.getElementById("nickname_input").placeholder = "Apelido",
        n[0] = ["vocÃª morreu sem motivo"],
        n[1] = ["vocÃª morreu de fome, como o jogo diz"],
        n[2] = ["vocÃª morreu de frio. tÃ£o triste", "vocÃª pegou hipotermia na prÃ³xima vez, tente sentar numa fogueira em vez disso."],
        n[3] = ["um jogador te matou dizendo a vocÃª para matar..'", "vocÃª foi morto por um jogador. nÃ£o se preocupe, aquele jogador morrerÃ¡ tambÃ©m, eventualmente."],
        n[4] = ["vocÃª ficou muito perto de uma fogueira e queimou atÃ© a morte. mÃ¡ ideia.", "vocÃª morreu por um incÃªndio. fogueira te machuca. vÃ¡ escrever uma histÃ³ria sobre isso."],
        n[5] = ["seu corpo vai virar um ninho para ovos de aranhas", "uma aranha te matou. pelo menos nÃ£o era um coelho."],
        n[6] = ["o lobo nÃ£o vÃ£o morrer de fome depois te te comer", "eles nÃ£o sÃ£o cachorros. lobos nÃ£o gostam de ser que nem animais de estimaÃ§Ã£o."],
        n[7] = ["a raposa era muito rÃ¡pida para vocÃª", "a raposa te tornou uma caixa. desde quando os animais tem poderes mÃ¡gicos?"],
        n[8] = ["o urso sÃ³ queria um abraÃ§o.", " o urso era muito nu. eu nÃ£o sinto muito."],
        n[9] = ["vocÃª foi queimado por um dragÃ£o. tÃ£o triste..", "vocÃª foi esmagado por um dragÃ£o.. ser esmagado Ã© uma maneira horrÃ­vel de morrer."],
        n[10] = ["vocÃª pulou em um muro com espinhos. nÃ£o Ã© uma boa ideia...", "vocÃª foi morto por um muro com espinhos. muitas pessoas sÃ£o sensÃ­veis o bastante para nÃ£o tocar em coisas pontudas."],
        n[11] = ["atÃ© fantasmas podem morrer.", "vocÃª falhou para ser ressuscitado. This is a game, so you go to life after you die, so..."],
        n[12] = ["uma bactÃ©ria da sua comida crua te matou esse jogo Ã© definitivamente muito dÃ­ficil.", "vocÃª matou a carne crua. a carne crua te matou tambÃ©m."],
        n[13] = ["vocÃª morreu de sede. melhor beber sua prÃ³pria urina."],
        n[14] = ["vocÃª sabia que vocÃª morre afogado? agora vocÃª sabe."],
        n[15] = ["nÃ£o se preocupe, as piranhas acham vocÃª saboroso.", "fato engraÃ§ado: Piranhas comem pessoas. incluindo vocÃª."],
        n[16] = ["LapaMauve nÃ£o planeja vocÃª matar o kraken", "um kraken comeu seu esqueleto."],
        n[17] = ["sua pele caindo aos pedaÃ§os, o sol te matou."],
        n[18] = ["o alho amarzenado em seus bolsos ferveu seu cÃ©rebro."],
        n[19] = ["como vampiro, nÃ£o chegue perto do alho."],
        n[20] = ["vocÃª comeu alho como vampiro, o que vocÃª esperava?"],
        n[21] = ["seu corpo se enroscou nos espinhos. quando vocÃª tenta escapar, sua pele sai e seu coraÃ§Ã£o para de bater."],
        ZOMBIE_GRUMBLE = "Uuunnnggg",
        ZOMBIE_GRUMBLES = ["Uuunnnggg... estou morrendo de fome", "preciso do seu cerÃ©bro Uuunnnggg...", "carne fresca aqui... Uuunnnggg", "Uuunnnggg... vocÃª parece saboroso", "Uuunnnggg...", "Eat... uuunnnggg...", "consigo sentir o cheiro de sangue... Uuunnnggg"]
    }
    function s() {
        Pe[Ge.DRAGON_CUBE] = ["You feel a great power emanating from this orb"],
        n[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."],
        Pe[Ge.CRAB_STICK] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"],
        Pe[TEXT.BACK_TO_THE_GAME] = " BACK TO THE GAME",
        Pe[TEXT.TWITTER] = " Share on Twitter",
        Pe[TEXT.FACEBOOK] = " Share on Facebook",
        Pe[TEXT.KIT_NEXT] = "You can buy items on the shop in the next game with your points",
        Pe[TEXT.POINTS] = "points",
        Pe[TEXT.SCORE] = "Score",
        Pe[TEXT.KILL] = "Kill",
        Pe[TEXT.DAYS_SURVIVED] = "Days survived",
        Pe[TEXT.MODE_FREE] = "Building method: Free. Press G to change",
        Pe[TEXT.MODE_GRID] = "Building method: Grid. Press G to change",
        Pe[Ge.CRAB_LOOT] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"],
        Pe[Ge.CRAB_SPEAR] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"],
        Pe[Ge.CROWN_CRAB] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"],
        Pe[Ge.BED] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"],
        document.getElementById("typequest").innerHTML = "Chrono Quests",
        document.getElementById("timeremainingquest").innerHTML = "Time Remaining",
        document.getElementById("constraintquest").innerHTML = " Constraints",
        document.getElementById("claim_rewards").innerHTML = " Claim rewards",
        document.getElementById("rewardquest").innerHTML = " Reward",
        document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart",
        document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst",
        document.getElementById("survive20min_3").innerHTML = "Survive without losing life",
        document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests",
        document.getElementById("dont_hit_5").innerHTML = " Be peaceful",
        document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter",
        document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
        for (var e = 0; e < 7; e++)
            document.getElementById("claim_reward_" + e).innerHTML = "CLAIM REWARD!";
        document.getElementById("quit_chronoquest").innerHTML = " QUIT",
        Pe[Ge.HAND] = ["Mano"],
        Pe[Ge.GROUND] = ["Tierra", "Â¡Tan limpia como mis manos!"],
        Pe[Ge.SAND] = ["Arena", "Â¡Tengo arena en mis ojos!"],
        Pe[Ge.WOOD] = ["Madera", "Â¡Nunca hay suficiente!"],
        Pe[Ge.STONE] = ["Piedra", "TambiÃ©n llamada roca."],
        Pe[Ge.GOLD] = ["Oro", "SÃ© generoso, compÃ¡rtelo con los otros"],
        Pe[Ge.DIAMOND] = ["Diamante", "Â¿Que vas a hacer con Ã©l?"],
        Pe[Ge.AMETHYST] = ["Amatista", "Es Mauve como Lapa"],
        Pe[Ge.FLOUR] = ["Harina", "Usada para cocinar."],
        Pe[Ge.COOKIE] = ["Galleta", "Una galleta de la abuelita", "Comida: 50"],
        Pe[Ge.CAKE] = ["Tarta", "Â¡CumpleaÃ±os Feliz!", "Comida: 100"],
        Pe[Ge.MEAT] = ["Carne Cruda", "Se cocina con fuego", "Causa veneno. 10", "Comida: 15"],
        Pe[Ge.COOKED_MEAT] = ["Carne Cocinada", "es la supervivencia del mÃ¡s fuerte :'(", "Comida: 35"],
        Pe[Ge.FOODFISH] = ["Pescado Crudo", "Creo que sigue vivo", "Causa veneno de comida: 10", "Comida: 18"],
        Pe[Ge.FOODFISH_COOKED] = ["Pescado Cocinado", "Con limÃ³n serÃ­a perfecto", "Comida: 35"],
        Pe[Ge.BREAD] = ["Pan", "Â¡Caliente, desde Francia!", "Es dinero usado en la tienda", "Comida: 15"],
        Pe[Ge.SANDWICH] = ["Bocadillo", "Sabe como un Krabby Patty", "Comida: 100"],
        Pe[Ge.CANDY] = ["Caramelos", "Â¡Solo para niÃ±os/as!", "Comida: 100"],
        Pe[Ge.SUGAR_CAN] = ["CaÃ±a de AzÃºcar", "PruÃ©bala, es deliciosa", "Comida: 100"],
        Pe[Ge.GARLAND] = ["Guirnalda", "Perfecta para decorar el techo"],
        Pe[Ge.SEED] = ["Semillas de Bayas", "Se convierte en bayas", "Nacimiento: 2 Minutos", "Crecimiento: 55 Segundos", "Necesita agua: 3 Minutos 20 Segundos", "Durabilidad: 700", "Tiempo de vida: 8 DÃ­as"],
        Pe[Ge.PLANT] = ["Baya", "No es venenosa.", "Comida: 10"],
        Pe[Ge.WHEAT_SEED] = ["Semilla de Trigo", "Se convierte en Trigo ", "Nacimiento: 2 Minutos", "Crecimiento: 16 Segundos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 DÃ­as"],
        Pe[Ge.WILD_WHEAT] = ["Trigo Silvestre", "Se convierte en harina cuando se coloca en un molino"],
        Pe[Ge.PUMPKIN_SEED] = ["Semilla de Calabaza", "Crece a Calabazas", "Nacimiento: 2 Minutos 40 Segundos", "Crecimiento: 2 Minutos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 DÃ­as"],
        Pe[Ge.PUMPKIN] = ["Calabaza", "Me recuerda a Halloween", "Comida: 30"],
        Pe[Ge.GARLIC_SEED] = ["Semilla de Ajo", "Muy peligroso para vampiros", "DaÃ±o: 20", "Nacimiento: 4 Minutos", "Crecimiento: 1 Minutos 10 Segundos", "Necesita Agua: 1 Minutos 40 Segundos", "Durabilidad: 700", "Tiempo de Vida: 8 DÃ­as"],
        Pe[Ge.GARLIC] = ["Ajo", "Te sana y reduce el frio", "Comida: 14", "sanaciÃ³n con eliempo: 30", "Efecto: 1"],
        Pe[Ge.THORNBUSH_SEED] = ["Semilla de Planta de Espinas", "Puede daÃ±ar a tus enemigos", "DaÃ±o por contacto: 20", "Nacimiento: 4 Minutos", "Crecimiento: 15 Segundos", "Necesita Agua: 3 Minutos", "Durabilidad: 1000", "Tiempo de Vida: 8 DÃ­as"],
        Pe[Ge.THORNBUSH] = ["Planta de Espinas", "Â¡Te daÃ±a!"],
        Pe[Ge.PLOT] = ["Parcela", "En serio, Ãºsala", "Se usa para plantar plantas en invierno o sobre puentes", "Tus plantas crecerÃ¡n muy rÃ¡pido y necesitarÃ¡n menos agua", "Durabilidad: 2000"],
        Pe[Ge.ICE] = ["Hielo", "Bueno para hacer tartas y agua"],
        Pe[Ge.SPANNER] = ["Llave de ReparaciÃ³n", "Puede reparar paredes, puertas y pinchos", "DaÃ±o: 2"],
        Pe[Ge.FUR_WOLF] = ["Pelaje de Lobo", "Â¿Perrito? Â¡Â¿Donde esta el perrito?!"],
        Pe[Ge.FUR] = ["Pelaje de Conejo", "El Conejo era muy lindo..."],
        Pe[Ge.SPECIAL_FUR] = ["Pelaje Puro", "Â¡Eres una maquina de pan!"],
        Pe[Ge.SPECIAL_FUR_2] = ["Pelaje Oscuro", "Â¿EstÃ¡s listo para hacer algo malo?"],
        Pe[Ge.FUR_WINTER] = ["Pelaje de Invierno", "Esos animales solo querÃ­an un abrazo..."],
        Pe[Ge.SCALES] = ["Escamas", "Â¡Huele a pescado!"],
        Pe[Ge.KRAKEN_SKIN] = ["Piel del Kraken", "Â¡Â¿No tienes mucho miedo?!"],
        Pe[Ge.FIRE] = ["Fogata", "Â¡Te calienta!", "Durabilidad: 150", "Tiempo de vida: 2 Minutos"],
        Pe[Ge.BIG_FIRE] = ["Fogata Grande", "Â¡Te calienta por mÃ¡s tiempo!", "Durabilidad: 400", "Tiempo de Vida: 6 Minutos"],
        Pe[Ge.WORKBENCH] = ["Mesa de Trabajo", "Â¡Te sirve mucho para crear cosas de todos tipos!"],
        Pe[Ge.CORD] = ["Hilo", "Usado para craftear ropa y mochila"],
        Pe[Ge.BLUE_CORD] = ["Hilo de Diamante", "Usado para craftear ropa especial"],
        Pe[Ge.CHEST] = ["Cofre", "Te permite guardar cosas, o compartirlas", "Durabilidad: 500"],
        Pe[Ge.SWORD_WOOD] = ["Espada de Madera", "Â¿Eso funciona?", "DaÃ±o: 12", "DaÃ±o para estructuras: 4"],
        Pe[Ge.SWORD] = ["Espada de Piedra", "SÃ© bueno con los otros", "DaÃ±o: 19", "DaÃ±o para estructuras: 6"],
        Pe[Ge.SWORD_GOLD] = ["Espada de Oro", "Â¡Rey de la selva!", "DaÃ±o: 22", "DaÃ±o para estructuras: 7"],
        Pe[Ge.SWORD_DIAMOND] = ["Espada de Diamante", "Puedes sentir el poder", "DaÃ±o: 24", "DaÃ±o para estructuras: 8"],
        Pe[Ge.PIRATE_SWORD] = ["Espada de Pirata", "Arrrrr!", "Â¡Mejor distancia que una espada normal", "DaÃ±o: 24", "DaÃ±o para estructuras: 8"],
        Pe[Ge.SWORD_AMETHYST] = ["Espada de Amatista", "Mauve es el mejor color del mundo :3", "DaÃ±o: 27", "DaÃ±o para estructuras: 9"],
        Pe[Ge.DRAGON_SWORD] = ["Espada del DragÃ³n", "Â¡Tienes el poder de un DragÃ³n!", "DaÃ±o: 30", "DaÃ±o para estructuras: 10"],
        Pe[Ge.DRAGON_SPEAR] = ["Lanza del DragÃ³n", "Â¡MÃ¡talos a todos!", "DaÃ±o: 22", "DaÃ±o para estructuras: 6"],
        Pe[Ge.PICK_WOOD] = ["Pico de Madera", "Solo puede minar madera y piedra", "DaÃ±o: 1"],
        Pe[Ge.PICK] = ["Pico de Piedra", "Puede minar hasta oro", "DaÃ±o: 2"],
        Pe[Ge.PICK_GOLD] = ["Pico de Oro", "Puede minar hasta Diamante", "DaÃ±o: 3", "DaÃ±o para estructuras: 1"],
        Pe[Ge.PICK_DIAMOND] = ["Pico de Diamante", "Â¡Puede minarlo todo!", "DaÃ±o: 4", "DaÃ±o para estructuras: 1"],
        Pe[Ge.PICK_AMETHYST] = ["Pico de Amatista", "Â¡Puede minarlo todo, parece fantastico!", "DaÃ±o: 5", "DaÃ±o para estructuras: 1"],
        Pe[Ge.HAMMER] = ["Martillo de Piedra", "Bueno para destruir estructuras", "No funciona bien con diamante y amatista", "DaÃ±o: 2", "DaÃ±o para estructuras: 20"],
        Pe[Ge.HAMMER_GOLD] = ["Martillo de Oro", "Bueno para destruir estructuras", "No funciona bien con amatista ", "DaÃ±o: 3", "DaÃ±o para estructuras: 30"],
        Pe[Ge.HAMMER_DIAMOND] = ["Martillo de Diamante", "Bueno para destruir estructuras", "DaÃ±o: 4", "DaÃ±o para estructuras: 40"],
        Pe[Ge.HAMMER_AMETHYST] = ["Martillo de Amatista", "Bueno para destruir estructuras", "DaÃ±o: 5", "DaÃ±o para estructuras: 50"],
        Pe[Ge.SUPER_HAMMER] = ["Super Martillo", "Â¿Has planeado destruir el mundo?", "DaÃ±o: 12", "DaÃ±o para estructuras: 70"],
        Pe[Ge.WOOD_SPEAR] = ["Lanza de Madera", "Como un palo de madera, pero mata.", "DaÃ±o: 10", "DaÃ±o para estructuras: 2"],
        Pe[Ge.SPEAR] = ["Lanza de Piedra", "Â¡El comienzo de la evoluciÃ³n!", "DaÃ±o: 14", "DaÃ±o para estructuras: 4"],
        Pe[Ge.GOLD_SPEAR] = ["Lanza de Oro", "Â¡Cuidado, te hace mucho daÃ±o!", "DaÃ±o: 15", "DaÃ±o para estructuras: 5"],
        Pe[Ge.DIAMOND_SPEAR] = ["Lanza de Diamante", "Â¡Estas preparado para matar al Dragon!", "DaÃ±o: 17", "DaÃ±o para estructuras: 5"],
        Pe[Ge.AMETHYST_SPEAR] = ["Lanza de Amatista", "Los dragones te tienen miedo", "DaÃ±o: 18", "DaÃ±o para estructuras: 6"],
        Pe[Ge.SHOVEL] = ["Pala de Piedra", "Cava para conseguir tierra, arena y hielo", "TambiÃ©n puedes conseguir minerales", "DaÃ±o: 2"],
        Pe[Ge.SHOVEL_GOLD] = ["Pala de Oro", "Cava para conseguir tierra, arena y hielo", "TambiÃ©n puedes conseguir minerales", "DaÃ±o: 3", "DaÃ±o para estructuras: 1"],
        Pe[Ge.SHOVEL_DIAMOND] = ["Pala de Diamante", "Cava para conseguir tierra, arena y hielo", "TambiÃ©n puedes conseguir minerales", "DaÃ±o: 4", "DaÃ±o para estructuras: 1"],
        Pe[Ge.SHOVEL_AMETHYST] = ["Pala de Amatista", "Cava para conseguir tierra, arena y hielo", "TambiÃ©n puedes conseguir minerales", "DaÃ±o: 5", "DaÃ±o para estructuras: 1"],
        Pe[Ge.WOOD_HELMET] = ["Casco de Madera", "Â¡Mejor que nada!", "ProtecciÃ³n contra jugadores: 1", "ProtecciÃ³n contra animales: 4"],
        Pe[Ge.STONE_HELMET] = ["Casco de Piedra", "Â¡Estas listo para la batalla!", "ProtecciÃ³n contra jugadores: 2", "ProtecciÃ³n contra animales: 8"],
        Pe[Ge.GOLD_HELMET] = ["Casco de Oro", "AKA el casco de los salvajes", "ProtecciÃ³n contra jugadores: 4", "ProtecciÃ³n contra animales: 13"],
        Pe[Ge.DIAMOND_HELMET] = ["Casco de Diamante", "No ataques tanto", "ProtecciÃ³n de jugadores: 5", "ProtecciÃ³n contra animales: 19"],
        Pe[Ge.AMETHYST_HELMET] = ["Casco de Amatista", "Â¡No tienes miedo de nada!", "ProtecciÃ³n contra jugadores: 6", "ProtecciÃ³n contra animales: 23"],
        Pe[Ge.DRAGON_HELMET] = ["Casco del DragÃ³n", "Â¡Vas a dominar el mundo!", "ProtecciÃ³n contra jugadores: 8", "ProtecciÃ³n contra animales: 27"],
        Pe[Ge.EXPLORER_HAT] = ["Gorro del Explorador", "Los animales no te atacarÃ¡n", "Â¡Pero no ataques!", " Te calienta en el invierno y fuera del agua"],
        Pe[Ge.CHRISTMAS_HAT] = ["Gorro de Navidad", "Â¡Ho, ho, ho, feliz Navidad!", "Te calienta en el invierno y fuera del  agua"],
        Pe[Ge.ELF_HAT] = ["Gorro del Duende", "Â¡No dejes que te descubren que eres, duende del hielo!", "Te calienta en el invierno y fuera del agua"],
        Pe[Ge.HOOD] = ["Capucha", "Â¡Eres un ladron!", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado en los  8 segundos anteriores", "4) No estas cerca de una fogata", "5) Si tu objetivo no lleva puesto una gorra de campesino", "Te calienta en invierno y fuera del agua"],
        Pe[Ge.EARMUFFS] = ["Orejeras", "Como un abrigo pequeÃ±o.", "Te calienta en invierno y fuera del agua"],
        Pe[Ge.COAT] = ["Chapka", "TambiÃ©n llamado abrigo.", "Te calienta en el invierno y fuera del agua"],
        Pe[Ge.CAP_SCARF] = ["Gorro y Bufanda ", "Muy cÃ³modo, muy caliente"],
        Pe[Ge.PEASANT] = ["Gorra de Campesino", "Tus plantas crecen mas rÃ¡pido", "Te Calienta en el invierno y fuera del agua"],
        Pe[Ge.WINTER_HOOD] = ["Capucha de Invierno", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado antes de 8 segundos", "4) No estas cerca de un fuego", "5) Si tu objetivo no lleva puesto una Gorra de Campesino", "Te calienta en invierno y fuera del agua"],
        Pe[Ge.WINTER_PEASANT] = ["Gorra de Invierno del Campesino", "Tus plantas crecen aÃºn mÃ¡s rÃ¡pido", "Te calienta en invierno y fuera del agua"],
        Pe[Ge.DIVING_MASK] = ["MÃ¡scara de Buceo", "Eres un tiburÃ³n en el agua", "Calienta en el agua", "ProtecciÃ³n contra jugadores: 2, ProtecciÃ³n contra animales: 8"],
        Pe[Ge.SUPER_DIVING_SUIT] = ["SÃºper MÃ¡scara de Buceo", "Eres muy rÃ¡pido en agua", "Calienta en el agua", "Defensa del Jugador: 4, Defensa de los animales: 16"],
        Pe[Ge.DRAGON_ORB] = ["Esfera del DragÃ³n", "Dada en la misiÃ³n"],
        Pe[Ge.DRAGON_HEART] = ["CorazÃ³n del DragÃ³n", "Â¡Te convierte en un fantasma cuando mueres!", "Eres un fantasma por 60 segundos", "Encuentra una Piedra de resurreciÃ³n"],
        Pe[Ge.GEMME_GREEN] = ["Gema Verde", "Â¿Â¿No has hecho trampas, verdad??"],
        Pe[Ge.GEMME_ORANGE] = ["Gema Naranja", "Â¡Solo un pirata verdadero lo puede encontrar!"],
        Pe[Ge.GEMME_BLUE] = ["Gema Azul", "Para gente muy amable"],
        Pe[Ge.CROWN_GREEN] = ["Corona Verde", "Te sanas muy rÃ¡pido", "SanaciÃ³n con el tiempo: 40", "ProtecciÃ³n contra jugadores: 4, ProtecciÃ³n contra animales: 16"],
        Pe[Ge.CROWN_ORANGE] = ["Corona Naranja", "Ahora tienes much suerte", "ProtecciÃ³n contra jugadores: 4, ProtecciÃ³n contra animales: 16"],
        Pe[Ge.CROWN_BLUE] = ["Corona Azul", "Cuando mueres, te conviertes en un fantasma", "Pero perderÃ¡s tu alma", "ProtecciÃ³n contra jugador: 4, ProtecciÃ³n contra animales: 16"],
        Pe[Ge.BUCKET_FULL] = ["Cubo", "Bueno para rellenar botellas", "Un cubo es equivalente a 12 botellas"],
        Pe[Ge.BUCKET_EMPTY] = ["Cubo VacÃ­o", "Tienes que llenar este cubo con agua"],
        Pe[Ge.BOTTLE_FULL] = ["Botella", "Te permite beber agua donde quieras", "Agua: 50"],
        Pe[Ge.BOTTLE_EMPTY] = ["Botella Vacia", "La puedes llenar de agua"],
        Pe[Ge.WATERING_CAN] = ["Regadera VacÃ­a", "La tienes que llenar de agua"],
        Pe[Ge.WATERING_CAN_FULL] = ["Regadera", "Te permite regar las plantas", "DaÃ±o: 1"],
        Pe[Ge.BAG] = ["Mochila", "Â¡Mas espacio para tus cosas!"],
        Pe[Ge.PAPER] = ["Hoja", "Usada para hacer un libro"],
        Pe[Ge.BOOK] = ["Libro", "Reduce el tiempo de elaboraciÃ³n", "Lo tienes que tener en la mano para que funcione", "DaÃ±o: 1"],
        Pe[Ge.BANDAGE] = ["Vendaje", "Recuperas vida mas rapido", "SanaciÃ³n tiempo: 30", "Efecto: 5"],
        Pe[Ge.LOCK] = ["Cerradura", "Te permite cerrar tu cofre"],
        Pe[Ge.LOCKPICK] = ["Llave", "Te permite abrir un cofre cerrado"],
        Pe[Ge.TOTEM] = ["TÃ³tem", "Te permite crear un equipo", "Compartir puertas y cofres cerrados", "Tus pinchos no daÃ±an al resto tu equipo"],
        Pe[Ge.BRIDGE] = ["Puente", "Muy Ãºtil en el agua", "Te permite beber agua sin tener que ahogarse", "Puedes nadar mÃ¡s rÃ¡pido encima del agua"],
        Pe[Ge.SIGN] = ["Cartel", "Sirve para dejar un mensage para otros", "Durabilidad: 200"],
        Pe[Ge.ROOF] = ["Techo", "Te esconde un poco y te protege del frÃ­o"],
        Pe[Ge.WELL] = ["Fuente", "Permite rellenar botellas", "Durabilidad: 1000"],
        Pe[Ge.WALL] = ["Pared de Madera", "Es solo una pared.", "Durabilidad: 1000"],
        Pe[Ge.STONE_WALL] = ["Pared de Piedra", "Es un poco mÃ¡s serio", "Durabilidad: 1500"],
        Pe[Ge.GOLD_WALL] = ["Pared de Oro", "Â¿Oro en de tus paredes? Eres rico", "Durabilidad: 2000"],
        Pe[Ge.DIAMOND_WALL] = ["Pared de Diamante", "Muy brillante, cuidado con tus ojos", "Durabilidad: 2500"],
        Pe[Ge.AMETHYST_WALL] = ["Pared de Amatista", "Â¡Debes tener mucho miedo de lo que hay fuera!", "Durabilidad: 3500"],
        Pe[Ge.SPIKE] = ["Pincho de Madera", "Puede daÃ±ar a tus enemigos", "DaÃ±o: 10, DaÃ±o por golpe: 2", "Durabilidad: 150"],
        Pe[Ge.STONE_SPIKE] = ["Pincho de Piedra", "No querrÃ­a ser tu enemigo.", "DaÃ±o: 20", "DaÃ±o por contacto: 3", "Durabilidad: 300"],
        Pe[Ge.GOLD_SPIKE] = ["Pincho de Oro", "Â¡Eres tan cruel!", "DaÃ±o: 30", "DaÃ±o por golpe: 3", "Durabilidad: 600"],
        Pe[Ge.DIAMOND_SPIKE] = ["Pincho de Diamante", "No te gusta tener compaÃ±Ã­a.", "DaÃ±o: 40", "DaÃ±o por contacto: 4", "Durabilidad: 1200"],
        Pe[Ge.AMETHYST_SPIKE] = ["Pincho de Amatista", "Â¡Â¿Que demonios te hicieron tus vecinos?!", "DaÃ±o: 50", "DaÃ±o por contacto: 4", "Durabilidad: 2400"],
        Pe[Ge.WOOD_DOOR] = ["Puerta de Madera", "Puedes abrir y cerrarla ", "Durabilidad: 1000"],
        Pe[Ge.STONE_DOOR] = ["Puerta de Piedra", "Una puerta mÃ¡s buena es mÃ¡s seria", "Durabilidad: 1500"],
        Pe[Ge.GOLD_DOOR] = ["Puerta de Oro", "Â¿Estas reconstruyendo El Dorado?", "Durabilidad: 2000"],
        Pe[Ge.DIAMOND_DOOR] = ["Puerta de Diamante", "Para una casa brillante", "Durabilidad: 2500"],
        Pe[Ge.AMETHYST_DOOR] = ["Puerta de Amatista", "Â¿Tu casa es una caja fuerte?", "Durabilidad: 3500"],
        Pe[Ge.FURNACE] = ["Caldera", "Te calienta", "Consume 1 Madera cada 5 segundos", "Durabilidad: 1000"],
        Pe[Ge.WINDMILL] = ["Molino", "Puede producir harina a partir del trigo", "Necesita 5 segundos para producir harina", "Devuelve los puntos que trabaja", "Durabilidad: 2000"],
        Pe[Ge.BREAD_OVEN] = ["Horno de Pan", "Produce pan de harina", "Necesita 10 segundos para producir Pan", "Devuelve los puntos que trabaja", "Durabilidad: 2000"],
        Pe[Ge.RESURRECTION] = ["Piedra de ResurreciÃ³n", "Â¡Es magia!", "Te resucitacuando eres una fantasma", "PerderÃ¡s tu arma", "Durabilidad: 200"],
        Pe[TEXT.YOU_CANNOT_JOIN] = "No puedes unirte a este servidor",
        Pe[TEXT.KICKED] = "Expulsado: ",
        Pe[TEXT.KEY_ALREADY] = "Tu llave ya estÃ¡ usada",
        Pe[TEXT.KEY_WRONG] = "Tu llave estÃ¡ mal",
        Pe[TEXT.OLD_VERSION] = "Tienes una versiÃ³n antigua, limpia tu cache",
        Pe[TEXT.NO_MORE_RESOURCES] = "No hay mas recursos",
        Pe[TEXT.SURVIVED_1DAY] = "Has sobrevivido 1 dÃ­a",
        Pe[TEXT.SURVIVED] = "Has sobrevivido ",
        Pe[TEXT.DAYS] = " dÃ­as",
        Pe[TEXT.DEAD_SAD] = "EstÃ¡s muerto ;-;",
        Pe[TEXT.SPAM_ME] = "No se encuentra un lugar para unirse, Â¡spamea el botÃ³n de jugar!",
        Pe[TEXT.SPAM_ME2] = "El servidor esta lleno, Â¡spamea el botÃ³n de jugar!",
        Pe[TEXT.EMPTY] = "Recurso vacio",
        Pe[TEXT.INV_FULL] = "Â¡Inventario lleno!(Haz click derecho para borrar cosas) ",
        Pe[TEXT.DEAD] = " estÃ¡ muerto",
        Pe[TEXT.WRONG_TOOL] = "Esta no es la herramienta correcta",
        Pe[TEXT.JOIN_TEAM] = "Te has unido a un equipo",
        Pe[TEXT.YOU_DEAD] = "EstÃ¡s muerto",
        Pe[TEXT.JOINED_TEAM] = " se uniÃ³ al equipo",
        Pe[TEXT.TEAM_DESTROYED] = "Tu equipo ha sido destruido",
        Pe[TEXT.LEFT_TEAM] = "Has dejado el equipo",
        Pe[TEXT.LEFT_TEAM2] = " dejo el equipo ",
        Pe[TEXT.TOKEN] = "Alguien te robÃ³ tu token :>",
        Pe[TEXT.CHOOSE] = "Elige un servidor",
        Pe[TEXT.PLAYERS] = "jugadores",
        Pe[TEXT.TOTAL_PLAYERS] = "total de jugadores",
        Pe[TEXT.TOTAL_MODE] = "Jugadores en este modo de juego",
        Pe[TEXT.COMMING_SOON] = "PrÃ³ximamente...",
        document.getElementById("nickname_input").placeholder = "Apodo",
        n[0] = ["Has muerto por ninguna razÃ³n"],
        n[1] = ["Has muerto de hambre, como implica el nombre del juego dice"],
        n[2] = ["Te has congelado hasta morir, quÃ© triste", "Moriste por hipotermia. La prÃ³xima quÃ©date cerca de  una fogata."],
        n[3] = ["Un jugador te ha matado diciendo que mejores.", "Fuiste asesinado por un jugador, pero no te preocupes, ese jugador tambiÃ©n morirÃ¡, eventualmente."],
        n[4] = ["Te has acercado demasiado al fuego, y te has quemado vivo, mala idea.", "Has muerto por el fuego, el fuego te quema, ve y escribe una historia sobre eso."],
        n[5] = ["Tu cuerpo serÃ¡ un buen nido para los huevos de la araÃ±as", "Una araÃ±a te ha matado, al menos no fuÃ© un conejo."],
        n[6] = ["El lobo no tendrÃ¡ hambre despuÃ©s de comerte.", "No son perros, no les gusta ser acariciados."],
        n[7] = ["El zorro era demasiado rÃ¡pido para ti.", "El zorro te convirtiÃ³ en una caja. Â¿Desde cuÃ¡ndo los animales tienen poderes mÃ¡gicos?"],
        n[8] = ["El oso solo querÃ­a un abrazo", "El oso era demasiado para ti. Lo siento."],
        n[9] = ["El dragÃ³n te quemÃ³ vivo.", "El dragÃ³n te ha aplastado, todos tus huesos ahora son vapor... otro cadaver mas."],
        n[10] = ["Has saltado a una pared de pinchos, mala idea", "Has muerto por una pared de pinchos. La gente suele ser lo suficientemente sensible para no tocar cosas puntiagudas.."],
        n[11] = ["Un fantasma tambiÃ©n puede morir.", "No has revivido a tiempo, asi que eres un fantasma de un fantasma."],
        n[12] = ["Una bacteria te ha matado por comer carne cruda. Este juego es muy difÃ­cil.", "Has matado a la carne cruda. Ella tambiÃ©n te ha matado a ti.."],
        n[13] = ["Has muerto de sed, mejor bebe tu propia orina."],
        n[14] = ["Â¿SabiÃ¡s que los jugadores tienen su boca debajo del agua? Ahora lo sabes."],
        n[15] = ["No te preocupes, a la piraÃ±a le pareciste delicioso.", "Las piraÃ±as comen a personas, incluyendote a ti tambiÃ©n."],
        n[16] = ["LapaMauve no planea que puedas matar al kraken", "Un Kraken te partiÃ³ el kra-neo."],
        n[17] = ["Tu piel se cayÃ³, el sol te quemÃ³."],
        n[18] = ["El ajo guardado en tu bolsillo te quemÃ³ el cerebro."],
        n[19] = ["Eres un vampiro, no te quedes cerca del ajo."],
        n[20] = ["Has comido un ajo siendo  vampiro,Â¿que esperabas?"],
        n[21] = ["Te has quedado atrapado en una planta de espinas. Al intentar escapar, tu piel se cae y entra un pincho en tu corazÃ³n."],
        ZOMBIE_GRUMBLE = "Uuunnnggg",
        ZOMBIE_GRUMBLES = ["Uuunnnggg... Tengo hambre", "Necesito tu cerebro uuunnnggg...", "Carne fresca... Uuunnnggg", "Uuunnnggg... Pareces delicioso", "Uuunnnggg...", "Comida... uuunnnggg...", "Puedo oler sangre... Uuunnnggg"]
    }
    function _() {
        Pe[Ge.DRAGON_CUBE] = ["You feel a great power emanating from this orb"],
        n[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."],
        Pe[Ge.CRAB_STICK] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"],
        Pe[TEXT.BACK_TO_THE_GAME] = " BACK TO THE GAME",
        Pe[TEXT.TWITTER] = " Share on Twitter",
        Pe[TEXT.FACEBOOK] = " Share on Facebook",
        Pe[TEXT.KIT_NEXT] = "You can buy items on the shop in the next game with your points",
        Pe[TEXT.POINTS] = "points",
        Pe[TEXT.SCORE] = "Score",
        Pe[TEXT.KILL] = "Kill",
        Pe[TEXT.DAYS_SURVIVED] = "Days survived",
        Pe[TEXT.MODE_FREE] = "Building method: Free. Press G to change",
        Pe[TEXT.MODE_GRID] = "Building method: Grid. Press G to change",
        Pe[Ge.CRAB_LOOT] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"],
        Pe[Ge.CRAB_SPEAR] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"],
        Pe[Ge.CROWN_CRAB] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"],
        Pe[Ge.BED] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"],
        document.getElementById("typequest").innerHTML = "Chrono Quests",
        document.getElementById("timeremainingquest").innerHTML = "Time Remaining",
        document.getElementById("constraintquest").innerHTML = " Constraints",
        document.getElementById("claim_rewards").innerHTML = " Claim rewards",
        document.getElementById("rewardquest").innerHTML = " Reward",
        document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart",
        document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst",
        document.getElementById("survive20min_3").innerHTML = "Survive without losing life",
        document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests",
        document.getElementById("dont_hit_5").innerHTML = " Be peaceful",
        document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter",
        document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
        for (var e = 0; e < 7; e++)
            document.getElementById("claim_reward_" + e).innerHTML = "CLAIM REWARD!";
        document.getElementById("quit_chronoquest").innerHTML = " QUIT",
        Pe[Ge.HAND] = ["Hand"],
        Pe[Ge.GROUND] = ["Boden", "Dreckig!"],
        Pe[Ge.SAND] = ["Sand", "Ich habe es in meine Augen bekommen!"],
        Pe[Ge.WOOD] = ["Holz", "Du kannst niemals zu viel haben!"],
        Pe[Ge.STONE] = ["Stein", "Auch Fels gennant"],
        Pe[Ge.GOLD] = ["Gold", "Sei groÃŸzÃ¼gig, gib anderen etwas ab "],
        Pe[Ge.DIAMOND] = ["Diamant", "Was wirst du daraus machen?"],
        Pe[Ge.AMETHYST] = ["Amethyst", "Es ist Mauve farbend, genauso wie Lapa"],
        Pe[Ge.FLOUR] = ["Mehl", "wird fÃ¼rs Backen gebraucht"],
        Pe[Ge.COOKIE] = ["Keks", "Ein prÃ¤chtiger Keks von GroÃŸmutter", "Essen: 50"],
        Pe[Ge.CAKE] = ["Ein Kuchen", "Perfekter Kuchen fÃ¼r Gourmets", "Essen: 100"],
        Pe[Ge.MEAT] = ["rohes Fleisch", "Du kannst es mit einem Feuer braten", "verursacht Lebensmittelvergiftung: 10", "Essen: 15"],
        Pe[Ge.COOKED_MEAT] = ["gebratenes Fleisch", "Einmal blutiges Steak, bitte", "Essen: 35"],
        Pe[Ge.FOODFISH] = ["roher Fisch", "Ich glaube es lebt noch", "verursacht Lebensmittelvergiftung: 10", "Essen: 18"],
        Pe[Ge.FOODFISH_COOKED] = ["gebratener Fisch", "Mit einer Zitrone ist es perfekt", "Essen: 35"],
        Pe[Ge.BREAD] = ["Brot", "Ein vorzÃ¼gliches franzÃ¶siches Brot", "Es wird als WÃ¤hrung im Markt benutzt", "Essen: 15"],
        Pe[Ge.SANDWICH] = ["Sandwich", "Schmeckt wie Krabbenburger", "Essen: 100"],
        Pe[Ge.CANDY] = ["SÃ¼ÃŸigkeiten", "Nur fÃ¼r Kinder!", "Essen: 100"],
        Pe[Ge.SUGAR_CAN] = ["Zuckerstange", "Probier mal, es schmeckt hervorragend", "Essen: 100"],
        Pe[Ge.GARLAND] = ["Girlande", "perfekter Schmuck fÃ¼r DÃ¤cher"],
        Pe[Ge.SEED] = ["Beeren Saatgut", "Wird eine Beere", "Entstehung: 2min", "Wachstum: 55s", "Wasserbedarf: 3min 20s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"],
        Pe[Ge.PLANT] = ["Beere", "Beeren lecker!", "Essen: 10"],
        Pe[Ge.WHEAT_SEED] = ["Weizen Saatgut", "Wird zu Weizen", "Entstehung: 2min", "Wachstum: 16s", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"],
        Pe[Ge.WILD_WHEAT] = ["Wildes Weizen", "Wenn es in eine WindmÃ¼hle platziert wird, wird es zu Mehl"],
        Pe[Ge.PUMPKIN_SEED] = ["KÃ¼rbis Saatgut", "Wird zu KÃ¼rbis", "Entstehung: 2min 40s", "Wachstum: 2min", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"],
        Pe[Ge.PUMPKIN] = ["KÃ¼rbis", "Es erinnert mich an Halloween", "Essen: 30"],
        Pe[Ge.GARLIC_SEED] = ["Knoblauch Saatgut", "Sehr gefÃ¤hrlich fÃ¼r Vampire", "Schaden: 20", "Entstehung: 4min", "Wachstum: 1min 10s", "Wasserbedarf: 1min 40s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"],
        Pe[Ge.GARLIC] = ["Knoblauch", "Heilt dich und hÃ¤lt die KÃ¤lte fern", "Essen: 14", "Heilung Ã¼ber Zeit: 30", "Effekt: 1"],
        Pe[Ge.THORNBUSH_SEED] = ["Dornenbusch Saatgut", "Kann deinen Gegnern Schaden zufÃ¼gen", "Schaden: 20", "Entstehung: 4min", "Wachstum: 15s", "Wasserbedarf: 3min", "Haltbarkeit: 1000", "Lebenszeit: 8 Tage"],
        Pe[Ge.THORNBUSH] = ["Dornenbusch", "Es sticht!"],
        Pe[Ge.PLOT] = ["Topf", "Ernsthaft, benutz es", "Mit diesem GMO dÃ¼nger deine Pflanzen", "lÃ¤sst sie schneller wachsen und reduziert den Wasserverbrauch", "Haltbarkeit: 2000"],
        Pe[Ge.ICE] = ["Eis", "NÃ¼tzlich um Kuchen und Wasser herzustellen"],
        Pe[Ge.SPANNER] = ["SchraubenschlÃ¼ssel", "Es kann WÃ¤nde, TÃ¼ren und Stacheln reparieren", "Schaden: 2"],
        Pe[Ge.FUR_WOLF] = ["Wolfsfell", "Welpe? Aber wo ist der Welpe?!"],
        Pe[Ge.FUR] = ["Hasenfell", "Der Hase war so sÃ¼ÃŸ..."],
        Pe[Ge.SPECIAL_FUR] = ["Klares Fell", "Du bist eine Brotfabrik"],
        Pe[Ge.SPECIAL_FUR_2] = ["Dunkles Fell", "Du machst dich bereit etwas falsches zu vollfÃ¼hren"],
        Pe[Ge.FUR_WINTER] = ["Winter Fell", "Diese Tiere wollten nur eine Umarmung..."],
        Pe[Ge.SCALES] = ["Schuppen", "Es riecht wie Fisch!"],
        Pe[Ge.KRAKEN_SKIN] = ["Kraken Haut", "Warst du nicht zu Ã¤ngstlich?"],
        Pe[Ge.FIRE] = ["Lagerfeuer", "WÃ¤rmt dich!", "Haltbarkeit: 150", "Lebensdauer: 2min"],
        Pe[Ge.BIG_FIRE] = ["GroÃŸes Lagerfeuer", "WÃ¤rmt dich lÃ¤nger!", "Haltbarkeit: 400", "Lebensdauer: 6min"],
        Pe[Ge.WORKBENCH] = ["Werkbank", "Sehr nÃ¼tzlich um allerlei Sachen herzustellen"],
        Pe[Ge.CORD] = ["Faden", "Wird benÃ¶tigt um MÃ¼tzen und RucksÃ¤cke herzustellen  "],
        Pe[Ge.BLUE_CORD] = ["Diamant Faden", "Wird fÃ¼r spezielle MÃ¼tzen gebraucht"],
        Pe[Ge.CHEST] = ["Truhe", "Damit kannst du GegenstÃ¤nde lagern", "Haltbarkeit: 500"],
        Pe[Ge.SWORD_WOOD] = ["Holzschwert", "Funktioniert das?", "Schaden: 12", "Schaden an GebÃ¤uden: 4"],
        Pe[Ge.SWORD] = ["Steinschwert", "Sei nett zu Anderen", "Schaden: 19", "Schaden an GebÃ¤uden: 6"],
        Pe[Ge.SWORD_GOLD] = ["Goldschwert", "KÃ¶nig des Waldes", "Schaden: 22", "Schaden an GebÃ¤uden: 7"],
        Pe[Ge.SWORD_DIAMOND] = ["Diamantschwert", "Du kannst die Kraft spÃ¼ren", "Schaden: 24", "Schaden an GebÃ¤uden: 8"],
        Pe[Ge.PIRATE_SWORD] = ["Piratenschwert", "Ayyyyy!", "Hat eine hÃ¶here Reichweite als ein normales Schwert", "Schaden: 24", "Schaden an GebÃ¤uden: 8"],
        Pe[Ge.SWORD_AMETHYST] = ["Amethystschwert", "Mauve ist die schÃ¶nste Farbe der Welt", "Schaden: 27", "Schaden an GebÃ¤uden: 9"],
        Pe[Ge.DRAGON_SWORD] = ["Drachenschwert", "Keine Gnade!", "Schaden: 30", "Schaden an GebÃ¤uden: 10"],
        Pe[Ge.DRAGON_SPEAR] = ["Drachenspeer", "TÃ¶te sie alle!", "Schaden: 22", "Schaden an GebÃ¤uden: 6"],
        Pe[Ge.PICK_WOOD] = ["Holzspitzhacke", "Kann nur Holz und Stein abbauen", "Schaden: 1"],
        Pe[Ge.PICK] = ["Steinspitzhacke", "Kann Holz, Stein und Gold abbauen", "Schaden: 2"],
        Pe[Ge.PICK_GOLD] = ["Goldspitzhacke", "Kann auch Diamanten abbauen", "Schaden: 3", "Schaden an GebÃ¤uden: 1"],
        Pe[Ge.PICK_DIAMOND] = ["Diamantspitzhacke", "Kann alles abbauen", "Schaden: 4", "Schaden an GebÃ¤uden: 1"],
        Pe[Ge.PICK_AMETHYST] = ["Amethystspitzhacke", "Kann alles abbauen, sieht auÃŸerdem gut aus!", "Schaden: 5", "Schaden an GebÃ¤uden: 1"],
        Pe[Ge.HAMMER] = ["Steinhammer", "NÃ¼tzlich um GebÃ¤ude zu zerstÃ¶ren", "Funktioniert nicht gut gegen Diamant oder Amethyst", "Schaden: 2", "Schaden an GebÃ¤uden: 20"],
        Pe[Ge.HAMMER_GOLD] = ["Goldhammer", "NÃ¼tzlich um GebÃ¤ude zu zerstÃ¶ren", "Funktioniert nicht gut gegen Amethyst", "Schaden: 3", "Schaden an GebÃ¤uden: 30"],
        Pe[Ge.HAMMER_DIAMOND] = ["Diamanthammer", "NÃ¼tzlich um GebÃ¤ude zu zerstÃ¶ren", "Schaden: 4", "Schaden an GebÃ¤uden: 40"],
        Pe[Ge.HAMMER_AMETHYST] = ["Amethysthammer", "NÃ¼tzlich um GebÃ¤ude zu zerstÃ¶ren", "Schaden: 5", "Schaden an GebÃ¤uden: 50"],
        Pe[Ge.SUPER_HAMMER] = ["Superhammer", "Willst du die Welt zerstÃ¶ren?", "Schaden: 12", "Schaden an GebÃ¤uden: 70"],
        Pe[Ge.WOOD_SPEAR] = ["Holzspeer", "Wie ein Stock, nur mit dem Unterschied, dass es sticht.", "Schaden: 10", "Schaden an GebÃ¤uden: 2"],
        Pe[Ge.SPEAR] = ["Steinspeer", "Der Anfang der Evolution!", "Schaden: 14", "Schaden an GebÃ¤uden: 4"],
        Pe[Ge.GOLD_SPEAR] = ["Goldspeer", "Pass auf, es sticht!", "Schaden: 15", "Schaden an GebÃ¤uden: 5"],
        Pe[Ge.DIAMOND_SPEAR] = ["Diamantspeer", "Du bist bereit einen Drachen zu tÃ¶ten", "Schaden: 17", "Schaden an GebÃ¤uden: 5"],
        Pe[Ge.AMETHYST_SPEAR] = ["AmethystSpeer", "Drachen jagen dir keine Angst mehr ein", "Schaden: 18", "Schaden an GebÃ¤uden: 6"],
        Pe[Ge.SHOVEL] = ["Steinschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 2"],
        Pe[Ge.SHOVEL_GOLD] = ["Goldschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 3", "Schaden an GebÃ¤uden: 1"],
        Pe[Ge.SHOVEL_DIAMOND] = ["Diamantschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 4", "Schaden an GebÃ¤uden: 1"],
        Pe[Ge.SHOVEL_AMETHYST] = ["Amethystschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 5", "Schaden an GebÃ¤uden: 1"],
        Pe[Ge.WOOD_HELMET] = ["Holzhelm", "Besser als nichts", "Verteidigung gegen Spieler: 1", "Verteidigung gegen Tiere: 4"],
        Pe[Ge.STONE_HELMET] = ["Steinhelm", "Du bist bereit zu kÃ¤mpfen!", "Verteidigung gegen Spieler: 2", "Verteidigung gegen Tiere: 8"],
        Pe[Ge.GOLD_HELMET] = ["Goldhelm", "AKA Der Helm der Unbarmherzigen", "Verteidigung gegen Spieler: 4", "Verteidigung gegen Tiere: 13"],
        Pe[Ge.DIAMOND_HELMET] = ["Diamanthelm", "Gib nicht zu viel an", "Verteidigung gegen Spieler: 5", "Verteidigung gegen Tiere: 19"],
        Pe[Ge.AMETHYST_HELMET] = ["Amethysthelm", "Du musst vor nichts mehr angst haben", "Verteidigung gegen Spieler: 6", "Verteidigung gegen Tiere: 23"],
        Pe[Ge.DRAGON_HELMET] = ["Drachenhelm", "Du wirst die Welt erobern", "Verteidigung gegen Spieler: 8", "Verteidigung gegen Tiere: 27"],
        Pe[Ge.EXPLORER_HAT] = ["Erkunderhut", "Tiere beachten dich nicht mehr", "mach aber keine GerÃ¤usche!", "HÃ¤lt dich warm auÃŸerhalb von Wasser und Winter"],
        Pe[Ge.CHRISTMAS_HAT] = ["Weihnachtshut", "Oh, oh, oh, frÃ¶hliche Weihnachten", "HÃ¤lt dich warm auÃŸerhalb von Wasser und Winter"],
        Pe[Ge.ELF_HAT] = ["Elfenhut", "Lass dich nicht ausnutzen, du kleiner Schneeelf!", "HÃ¤lt dich warm auÃŸerhalb von Wasser und Winter"],
        Pe[Ge.HOOD] = ["Kapuze", "Du bist ein Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trÃ¤gst", "3) dich niemand fÃ¼r acht Sekunden berÃ¼hrt hat", "4) Du nicht in der NÃ¤he eines Feuers bist", "5) Dein Ziel keine Bauernkleidung trÃ¤gt", "HÃ¤lt dich warm auÃŸerhalb von Wasser und Winter"],
        Pe[Ge.EARMUFFS] = ["OhrwÃ¤rmer", "Eine Art kleiner chapka.", "HÃ¤lt dich warm auÃŸerhalb von Wasser und Winter"],
        Pe[Ge.COAT] = ["Chapka", "Auch Mantel genannt.", "HÃ¤lt dich warm auÃŸerhalb von Wasser und Winter"],
        Pe[Ge.CAP_SCARF] = ["Winterschaal und Kappe", "Sehr angenehm", "Sehr Warm"],
        Pe[Ge.PEASANT] = ["Bauer", "Deine Pflanzen wachsen schneller", "HÃ¤lt dich warm auÃŸerhalb von Wasser und Winter"],
        Pe[Ge.WINTER_HOOD] = ["Winterkapuze", "Du bist ein Wilder Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trÃ¤gst", "3) dich niemand fÃ¼r vier Sekunden berÃ¼hrt hat", "4) Du nicht in der NÃ¤he eines Feuers bist", "5) Dein Ziel keine Winterbauernkleidung trÃ¤gt", "HÃ¤lt dich warm auÃŸerhalb von Wasser und Winter"],
        Pe[Ge.WINTER_PEASANT] = ["Winterbauern", "Deine Pflanzen wachsen deutlich schneller", "HÃ¤lt dich warm auÃŸerhalb von Wasser und Winter"],
        Pe[Ge.DIVING_MASK] = ["Tauchermaske", "Du bist schneller im Wasser", "HÃ¤lt dich warm im Wasser", "Verteidigung gegen Spieler: 2, Verteidigung gegen Tiere: 8"],
        Pe[Ge.SUPER_DIVING_SUIT] = ["Supertauchermaske", "Du bist sehr schnell im Wasser", "HÃ¤lt dich warm im Wasser", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"],
        Pe[Ge.DRAGON_ORB] = ["Drachenkugel", "Erhalten bei abschlieÃŸung der Quest"],
        Pe[Ge.DRAGON_HEART] = ["Drachenherz", "Verwandelt dich in einen Geist, sobald du stirbst!", "Du bist fÃ¼r 60 Sekunden ein Geist", "Finde ein Wiederbelebungsstein."],
        Pe[Ge.GEMME_GREEN] = ["GrÃ¼ner Edelstein", "Du hast nicht gemogelt, versprochen?"],
        Pe[Ge.GEMME_ORANGE] = ["Orangener Edelstein", "Nur ein echter Pirat findet ihn!"],
        Pe[Ge.GEMME_BLUE] = ["Blauer Edelstein", "FÃ¼r sehr nette Leute"],
        Pe[Ge.CROWN_GREEN] = ["GrÃ¼ne Krone", "Du heilst dich selbst sehr schnell", "Heilung Ã¼ber Zeit: 40", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"],
        Pe[Ge.CROWN_ORANGE] = ["Orangene Krone", "Du fÃ¼hlst dich plÃ¶tzlich als hÃ¤ttest du mehr GlÃ¼ck", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"],
        Pe[Ge.CROWN_BLUE] = ["Blaue Krone", "Sobald du stirbst wirst du ein Geist", "Du wirst allerdings dein Schwert und deine Spitzhacke verlieren", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"],
        Pe[Ge.BUCKET_FULL] = ["Eimer", "NÃ¼tzlich um einen Brunnen zu fÃ¼llen", "Ein Eimer ist vergleichbar mit zwÃ¶lf Flaschen"],
        Pe[Ge.BUCKET_EMPTY] = ["Leerer Eimer", "Du musst den Eimer in der NÃ¤he einer Wasserquelle fÃ¼llen"],
        Pe[Ge.BOTTLE_FULL] = ["Flasche", "Erlaubt dir Ã¼berall Wasser zu trinken", "Wasser: 50"],
        Pe[Ge.BOTTLE_EMPTY] = ["Leere Flasche", "Du musst die Flasche in der NÃ¤he einer Wasserquelle fÃ¼llen"],
        Pe[Ge.WATERING_CAN] = ["Leere GieÃŸkanne", "Du musst es mit einer Wasserquelle fÃ¼llen"],
        Pe[Ge.WATERING_CAN_FULL] = ["GieÃŸkanne", "Erlaubt das wÃ¤ssern von Pflanzen", "Schaden: 1"],
        Pe[Ge.BAG] = ["Rucksack", "Mehr Platz im Inventar!"],
        Pe[Ge.PAPER] = ["Papier", "Wird fÃ¼rs BÃ¼chermachen verwendet"],
        Pe[Ge.BOOK] = ["Buch", "Reduziert die benÃ¶tigte Zeit beim herstellen von GegenstÃ¤nden", "Muss in der Hand gehalten werden um den Effekt zu nutzen", "Schaden: 1"],
        Pe[Ge.BANDAGE] = ["Verband", "Heile dich schneller", "Heilung Ã¼ber Zeit: 30", "Effekt: 5"],
        Pe[Ge.LOCK] = ["Schloss", "Erlaubt dir deine Truhe zu verschlieÃŸen"],
        Pe[Ge.LOCKPICK] = ["Dietrich", "Erlaubt dir eine verschlossene Truhe zu Ã¶ffnen"],
        Pe[Ge.TOTEM] = ["Totem", "Erlaubt dir ein Team zu grÃ¼nden", "Teile TÃ¼ren und Truhen", "verletzende Strukturen schaden deinen Freunden nicht mehr"],
        Pe[Ge.BRIDGE] = ["BrÃ¼cke", "Sehr nÃ¼tzlich Ã¼ber Wasser", "Es erlaubt dir zu trinken ohne zu ertrinken", "lÃ¤sst dich schneller auf dem Wasser laufen"],
        Pe[Ge.SIGN] = ["Schild", "Hinterlasse eine Nachricht fÃ¼r andere hier", "Haltbarkeit: 200"],
        Pe[Ge.ROOF] = ["Dach", "Versteckt dich ein wenig und hÃ¤lt warm dabei!"],
        Pe[Ge.WELL] = ["Brunnen", "Erlaubt dir deine Flasche zu fÃ¼llen, eine mobile Wasserquelle", "Haltbarkeit: 1000"],
        Pe[Ge.WALL] = ["Holzwand", "Kennst du den Wandtanz?", "Haltbarkeit: 1000"],
        Pe[Ge.STONE_WALL] = ["Steinwand", "Es sieht ein wenig Ernsthafter aus.", "Haltbarkeit: 1500"],
        Pe[Ge.GOLD_WALL] = ["Goldwand", "Gold an deiner Wand? Es leuchtet ein wenig.", "Haltbarkeit: 2000"],
        Pe[Ge.DIAMOND_WALL] = ["Diamantwand", "So leuchtend, pass auf deine Augen auf", "Haltbarkeit: 2500"],
        Pe[Ge.AMETHYST_WALL] = ["Amethystwand", "Du musst dich wirklich fÃ¼rchten raus zu gehen!", "Haltbarkeit: 3000"],
        Pe[Ge.SPIKE] = ["Holzstacheln", "Kann deine Gegner verletzen", "Schaden: 10, Schaden beim Angreifen: 2", "Haltbarkeit: 150"],
        Pe[Ge.STONE_SPIKE] = ["Steinstacheln", "Ich wÃ¼rde lieber nicht dein Gegner sein.", "Schaden: 20", "Schaden beim Angreifen: 3", "Haltbarkeit: 300"],
        Pe[Ge.GOLD_SPIKE] = ["Goldstacheln", "Du bist grausam.", "Schaden: 30", "Schaden beim Angreifen: 3", "Haltbarkeit: 600"],
        Pe[Ge.DIAMOND_SPIKE] = ["Diamantstacheln", "Du magst Gesellschaft nicht.", "Schaden: 40", "Schaden beim Angreifen: 4", "Haltbarkeit: 1200"],
        Pe[Ge.AMETHYST_SPIKE] = ["Amethyststacheln", "Was zur HÃ¶lle haben deine Nachbarn dir angetan?", "Schaden: 50", "Schaden beim Angreifen: 4", "Haltbarkeit: 2400"],
        Pe[Ge.WOOD_DOOR] = ["HolztÃ¼r", "Kann von dir oder deinen Freunden geÃ¶ffnet werden", "Haltbarkeit: 1000"],
        Pe[Ge.STONE_DOOR] = ["SteintÃ¼r", "Eine stÃ¤rkere TÃ¼r ist ernsthafter", "Haltbarkeit: 1500"],
        Pe[Ge.GOLD_DOOR] = ["GoldtÃ¼r", "Baust du el dorado?", "Haltbarkeit: 2000"],
        Pe[Ge.DIAMOND_DOOR] = ["DiamanttÃ¼r", "FÃ¼r ein scheinendes Haus", "Haltbarkeit: 2500"],
        Pe[Ge.AMETHYST_DOOR] = ["AmethysttÃ¼r", "Ist dein Haus ein verschlossener Safe?", "Haltbarkeit: 3500"],
        Pe[Ge.FURNACE] = ["Ofen", "WÃ¤rmt dich", "Es verbraucht alle 5 Sekunden eine Einheit Holz", "Haltbarkeit: 1000"],
        Pe[Ge.WINDMILL] = ["WindmÃ¼hle", "Kann mit Weizen, Mehl herstellen", "Es braucht 5 Sekunden um Mehl herzustellen", "Gibt dir Punkte wÃ¤hrend es arbeitet", "Haltbarkeit: 2000"],
        Pe[Ge.BREAD_OVEN] = ["Brotofen", "Erlaubt dir mit Mehl, Brot herzustellen", "Es braucht 5 Sekunden um Brot herzustellen", "Gibt dir Punkte wÃ¤hrend es arbeitet", "Haltbarkeit: 2000"],
        Pe[Ge.RESURRECTION] = ["Wiederbelebungsstein", "Es ist Magie", "Wiederbelebt dich, wenn du ein Geist bist", "Du wirst deine Waffe und Spitzhacke verlieren", "Haltbarkeit: 200"],
        Pe[TEXT.YOU_CANNOT_JOIN] = "Du kannst diesem Server nicht beitreten",
        Pe[TEXT.KICKED] = "Gekickt: ",
        Pe[TEXT.KEY_ALREADY] = "Dein SchlÃ¼ssel wurde bereits von jemand anderem benutzt",
        Pe[TEXT.KEY_WRONG] = "Dein SchlÃ¼ssel ist falsch",
        Pe[TEXT.OLD_VERSION] = "Deine Version ist veraltet, sÃ¤ubere dein Cache",
        Pe[TEXT.NO_MORE_RESOURCES] = "Es gibt keine neuen Ressourcen",
        Pe[TEXT.SURVIVED_1DAY] = "Du hast einen Tag Ã¼berlebt",
        Pe[TEXT.SURVIVED] = "Du hast Ã¼berlebt ",
        Pe[TEXT.DAYS] = " Tage",
        Pe[TEXT.DEAD_SAD] = "Du bist gestorben ;-;",
        Pe[TEXT.SPAM_ME] = "Server kann kein Spawnplatz finden! DrÃ¼cke immer wieder auf spielen!",
        Pe[TEXT.SPAM_ME2] = "Server ist voll! DrÃ¼cke immer wieder auf spielen!",
        Pe[TEXT.EMPTY] = "Ressource ist leer",
        Pe[TEXT.INV_FULL] = "Dein Inventar ist voll (rechts-klick um GegenstÃ¤nde zu entfernen)",
        Pe[TEXT.DEAD] = " ist gestorben",
        Pe[TEXT.WRONG_TOOL] = "Das ist nicht das richtige Werkzeug",
        Pe[TEXT.JOIN_TEAM] = "Du bist einem Team beigetreten",
        Pe[TEXT.YOU_DEAD] = "Du bist gestorben",
        Pe[TEXT.JOINED_TEAM] = " ist dem Team beigetreten",
        Pe[TEXT.TEAM_DESTROYED] = "Dein Team wurde zerstÃ¶rt",
        Pe[TEXT.LEFT_TEAM] = "Du hast das Team verlassen",
        Pe[TEXT.LEFT_TEAM2] = " hat das Team verlassen",
        Pe[TEXT.TOKEN] = "Jemand hat dein Token gestohlen :>",
        Pe[TEXT.CHOOSE] = "Suche dir ein Server aus",
        Pe[TEXT.PLAYERS] = "Spieler",
        Pe[TEXT.TOTAL_PLAYERS] = "alle Spieler",
        Pe[TEXT.TOTAL_MODE] = "Spieler in diesem Modus",
        Pe[TEXT.COMMING_SOON] = "Bald verfÃ¼gbar...",
        document.getElementById("nickname_input").placeholder = "Spitzname",
        n[0] = ["Du wurdest ohne Grund getÃ¶tet"],
        n[1] = ["Du bist verhungert, wie der Name des Spiels andeutet"],
        n[2] = ["Du bist erfroren. Zu schade", "Du bist an UnterkÃ¼hlung gestorben. Versuche nÃ¤chstes Mal zu einem Feuer zu gehen ."],
        n[3] = ["Ein Spieler hat dich getÃ¶tet, wÃ¤hrend er dir gesagt hat 'git gud.'", "Du wurdest von einem Spieler ermordet, mach dir keine Sorgen, er wird wahrscheinlich auch sterben ."],
        n[4] = ["Du bist zu nah ans Feuer gegangen und zu tode gebrannt. Schlechte Idee.", "Du wurdest von einem Feuer umgebracht. Feuer tut weh. Schreib eine Geschichte darÃ¼ber."],
        n[5] = ["Dein KÃ¶rper wird zu einem Spinnennest", "Eine Spinne hat dich getÃ¶tet. Zumindest war es kein Hase."],
        n[6] = ["Dieser Wolf wird nicht mehr verhungern", "Sie sind keine Hunde. WÃ¶lfe mÃ¶gen es nicht gestreichelt zu werden."],
        n[7] = ["Der Fuchs war zu schnell fÃ¼r dich", "Der Fuchs hat dich in eine Box verwandelt. Seit wann haben Tiere magische KrÃ¤fte?"],
        n[8] = ["Der BÃ¤r wollte nur eine Umarmung.", "Der BÃ¤r war zu viel zu ertragen. Es tut mir nicht leid."],
        n[9] = ["Du wurdest von einem Drachen knusprig gebraten. Zu schade.", "Du wurdest von einem Drachen erdrÃ¼ckt. Zerquetscht zu werden ist ein schrecklicher Weg zu sterben."],
        n[10] = ["Du bist in eine Stachelwand gesprungen. Keine gute Idee...", "Du wurdest von einer Stachelwand getÃ¶tet. Die meisten Leute sind sensibel genug keine spitzen Sachen anzufassen."],
        n[11] = ["Sogar Geister kÃ¶nnen sterben.", "Du hast es nicht geschafft wiederbelebt zu werden. Das ist ein Spiel, also lebst du nachdem du stirbst..."],
        n[12] = ["Ein Bakterium von deinem rohen Fleisch hat dich getÃ¶tet. Das Spiel ist definitiv zu schwierig.", "Du hast das rohe Fleisch getÃ¶tet. Es hat dich ebenfalls getÃ¶tet."],
        n[13] = ["Du bist verdurstet. Solltest lieber deinen eigenen Urin trinken."],
        n[14] = ["Wusstest du, dass dein Mund beim Schwimmen immer unterm Wasser ist? Jetzt weiÃŸt du es."],
        n[15] = ["Mach dir keine Sorge, der Piranha findet dich lecker.", "Nebenbei: Piranhas essen Menschen. Dich mit eingeschlossen."],
        n[16] = ["LapaMauve plant nicht, dass du den Kraken tÃ¶ten kannst", "Ein Kraken hat deinen SchÃ¤del zertrÃ¼mmert."],
        n[17] = ["Deine Haut fÃ¤llt auseinander, die Sonne hat dich umgebracht."],
        n[18] = ["Knoblauch in deiner Tasche hat dein Gehirn gebraten "],
        n[19] = ["Stehe als ein Vampir nicht neben den Knoblauchnelken."],
        n[20] = ["Du hast als ein Vampir Knoblauch gegessen, was hast du erwartet?"],
        n[21] = ["Dein KÃ¶rper ist von einem Dornenbusch umgeben.WÃ¤hrend du versuchst zu entkommen lÃ¶st sich deine Haut von deinem KÃ¶rper und dein Herz hÃ¶rt auf zu schlagen."],
        ZOMBIE_GRUMBLE = "Uuunnnggg",
        ZOMBIE_GRUMBLES = ["Uuunnnggg...Ich verhungere...", "Brauche dein Gehirn... Uuunnnggg...", "Hier gibt es frisches Fleisch... Uuunnnggg", "Uuunnnggg...Du bist lecker", "Uuunnnggg...", "Essen... uuunnnggg...", "Ich rieche Blut... Uuunnnggg"]
    }
    function u() {
        Pe[Ge.DRAGON_CUBE] = ["You feel a great power emanating from this orb"],
        n[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."],
        Pe[Ge.CRAB_STICK] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"],
        Pe[TEXT.BACK_TO_THE_GAME] = " BACK TO THE GAME",
        Pe[TEXT.TWITTER] = " Share on Twitter",
        Pe[TEXT.FACEBOOK] = " Share on Facebook",
        Pe[TEXT.KIT_NEXT] = "You can buy items on the shop in the next game with your points",
        Pe[TEXT.POINTS] = "points",
        Pe[TEXT.SCORE] = "Score",
        Pe[TEXT.KILL] = "Kill",
        Pe[TEXT.DAYS_SURVIVED] = "Days survived",
        Pe[TEXT.MODE_FREE] = "Building method: Free. Press G to change",
        Pe[TEXT.MODE_GRID] = "Building method: Grid. Press G to change",
        Pe[Ge.CRAB_LOOT] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"],
        Pe[Ge.CRAB_SPEAR] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"],
        Pe[Ge.CROWN_CRAB] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"],
        Pe[Ge.BED] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"],
        document.getElementById("typequest").innerHTML = "Chrono Quests",
        document.getElementById("timeremainingquest").innerHTML = "Time Remaining",
        document.getElementById("constraintquest").innerHTML = " Constraints",
        document.getElementById("claim_rewards").innerHTML = " Claim rewards",
        document.getElementById("rewardquest").innerHTML = " Reward",
        document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart",
        document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst",
        document.getElementById("survive20min_3").innerHTML = "Survive without losing life",
        document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests",
        document.getElementById("dont_hit_5").innerHTML = " Be peaceful",
        document.getElementById("bread_6").innerHTML = " Collect 100 bread in deep winter",
        document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
        for (var e = 0; e < 7; e++)
            document.getElementById("claim_reward_" + e).innerHTML = "CLAIM REWARD!";
        document.getElementById("quit_chronoquest").innerHTML = " QUIT",
        Pe[Ge.HAND] = ["RÄ™ka"],
        Pe[Ge.GROUND] = ["Ziemia", "Brudna!"],
        Pe[Ge.SAND] = ["Piasek", "Mam go w oczach!"],
        Pe[Ge.WOOD] = ["Drewno", "Nie moÅ¼esz mieÄ‡ go wystarczajÄ…co!"],
        Pe[Ge.STONE] = ["KamieÅ„", "TakÅ¼e nazywany skaÅ‚Ä…"],
        Pe[Ge.GOLD] = ["ZÅ‚oto", "BÄ…dÅº hojny, daj trochÄ™ innym"],
        Pe[Ge.DIAMOND] = ["Diament", "Co z nim zrobisz?"],
        Pe[Ge.AMETHYST] = ["Ametyst", "Jest FioÅ‚kowy jak Lapa"],
        Pe[Ge.FLOUR] = ["MÄ…ka", "UÅ¼ywana w gotowaniu"],
        Pe[Ge.COOKIE] = ["Ciastko", "Przepyszne ciasteczko od babci", "Jedzenie: 50"],
        Pe[Ge.CAKE] = ["Ciasto", "Raj dla smakoszy", "Jedzenie: 100"],
        Pe[Ge.MEAT] = ["Surowe miÄ™so", "MoÅ¼esz je upiec w ogniu", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 15"],
        Pe[Ge.COOKED_MEAT] = ["Pieczone miÄ™so", "Krwisty stek, proszÄ™", "Jedzenie: 35"],
        Pe[Ge.FOODFISH] = ["Surowa ryba", "MyÅ›lÄ™, Å¼e nadal jest Å¼ywa", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 18"],
        Pe[Ge.FOODFISH_COOKED] = ["Pieczona ryba", "Z cytrynÄ… jest idealna", " Jedzenie: 35"],
        Pe[Ge.BREAD] = ["Chleb", "Åšwietny Francuski chleb", "Jest walutÄ… uÅ¼ywanÄ… w markecie", "Jedzenie: 15"],
        Pe[Ge.SANDWICH] = ["Kanapka", "Smakuje jak kraboburger", "Jedzenie: 100"],
        Pe[Ge.CANDY] = ["Cukierki", "Tylko dla dzieci!", "Jedzenie: 100"],
        Pe[Ge.SUGAR_CAN] = ["Laska cukrowa", "SprÃ³buj, jest przepyszna", "Jedzenie: 100"],
        Pe[Ge.GARLAND] = ["Girlanda", "Idealna do dekorowania dachÃ³w"],
        Pe[Ge.SEED] = ["Nasionko jagody", "WyroÅ›nie w jagody", "Narodziny: 2min", "RoÅ›niÄ™cie: 55s", "Podlewanie: 3min 20s", "WytrzymaÅ‚oÅ›Ä‡: 700", "Czas Å¼ycia: 8 dni"],
        Pe[Ge.PLANT] = ["Jagody", "Jagody sÄ… pyszne!", "Jedzenie: 10"],
        Pe[Ge.WHEAT_SEED] = ["Nasiono pszenicy", "WyroÅ›nie w pszenicÄ™", "Narodziny: 2min", "RoÅ›niÄ™cie: 16s", "Podlewanie: 2min", "WytrzymaÅ‚oÅ›Ä‡: 700", "Czas Å¼ycia: 8 dni"],
        Pe[Ge.WILD_WHEAT] = ["Pszenica", "Zamienia siÄ™ w mÄ…kÄ™ jeÅ¼eli wrzucisz jÄ… do wiatraka"],
        Pe[Ge.PUMPKIN_SEED] = ["Nasiono dyni", "WyroÅ›nie w dyniÄ™", "Narodziny: 2min 40s", "RoÅ›niÄ™cie: 2min", "Podlewanie: 2min", "WytrzymaÅ‚oÅ›Ä‡: 700", "Czas Å¼ycia: 8 dni"],
        Pe[Ge.PUMPKIN] = ["Dynia", "Przypomina mi o Halloween", "Jedzenie: 30"],
        Pe[Ge.GARLIC_SEED] = ["Nasionko czosnku", "Bardzo niebezpieczne dla wampirÃ³w", "ObraÅ¼enia: 20", "Narodziny: 4min", "RoÅ›niÄ™cie: 1min 10s", "Podlewanie: 1min 40s", "WytrzymaÅ‚oÅ›Ä‡: 700", "Czas Å¼ycia: 8 dni"],
        Pe[Ge.GARLIC] = ["Czosnek", "Leczy ciÄ™ i redukuje zimno", "Jedzenie: 14", "Uzdrawia z biegiem czasu: 30", "Efekt: 1"],
        Pe[Ge.THORNBUSH_SEED] = ["Nasiono kolczastego krzewu", "MoÅ¼e zraniÄ‡ twoich wrogÃ³w", "ObraÅ¼enia: 20", "Narodziny: 4min", "RoÅ›niÄ™cie: 15s", "Podlewanie: 3min", "WytrzymaÅ‚oÅ›Ä‡: 1000", "Czas Å¼ycia: 8 dni"],
        Pe[Ge.THORNBUSH] = ["Kolczasty krzew", "KÅ‚uje!"],
        Pe[Ge.PLOT] = ["Donica", "NaprawdÄ™, uÅ¼yj jej", "Z tym genetycznie modyfikowanym nawozem, twoje roÅ›liny", "bÄ™dÄ… rosÅ‚y znacznie szybciej i bÄ™dÄ… potrzebowaÄ‡ mniej wody", "WytrzymaÅ‚oÅ›Ä‡: 2000"],
        Pe[Ge.ICE] = ["LÃ³d", "UÅ¼yteczny do robienia ciast i wody"],
        Pe[Ge.SPANNER] = ["Klucz mechaniczny", "Do naprawiania drzwi i kolcÃ³w", "Uszkodzenie: 2"],
        Pe[Ge.FUR_WOLF] = ["Wilcza skÃ³ra", "Szczeniaczek? Ale gdzie jest szczeniaczek?!"],
        Pe[Ge.FUR] = ["SkÃ³ra krÃ³lika", "Ten krÃ³lik byÅ‚ taki sÅ‚odziutki..."],
        Pe[Ge.SPECIAL_FUR] = ["SkÃ³ra", "JesteÅ› fabrykÄ… chleba"],
        Pe[Ge.SPECIAL_FUR_2] = ["Ciemna skÃ³ra", "ByÅ‚eÅ› gotowy zrobiÄ‡ coÅ› zÅ‚ego"],
        Pe[Ge.FUR_WINTER] = ["Zimowa skÃ³ra", "Te zwierzÄ™ta chciaÅ‚y siÄ™ tylko przytuliÄ‡..."],
        Pe[Ge.SCALES] = ["Åuski", "Pachnie jak ryba!"],
        Pe[Ge.KRAKEN_SKIN] = ["SkÃ³ra krakena", "Nie byÅ‚eÅ› zbyt przestraszony?"],
        Pe[Ge.FIRE] = ["Ognisko", "Ociepli ciÄ™!", "WytrzymaÅ‚oÅ›Ä‡: 150", "Czas Å¼ycia: 2min"],
        Pe[Ge.BIG_FIRE] = ["DuÅ¼e ognisko", "Ociepli ciÄ™ na dÅ‚uÅ¼ej!", "WytrzymaÅ‚oÅ›Ä‡: 400", "Czas Å¼ycia: 6min"],
        Pe[Ge.WORKBENCH] = ["StÃ³Å‚ rzemieÅ›lniczy", "UÅ¼yteczny do stwarzania przedmiotÃ³w"],
        Pe[Ge.CORD] = ["NiÄ‡", "UÅ¼ywany w tworzeniu czapek i plecakÃ³w"],
        Pe[Ge.BLUE_CORD] = ["Diamentowa niÄ‡", "UÅ¼ywana w tworzeniu specjalnych czapek"],
        Pe[Ge.CHEST] = ["Skrzynia", "Pozwala ci na przechowywanie przedmiotÃ³w", "WytrzymaÅ‚oÅ›Ä‡: 500"],
        Pe[Ge.SWORD_WOOD] = ["Drewniany miecz", "To coÅ› dziaÅ‚a?", "ObraÅ¼enia: 12", "ObraÅ¼enia do budowli: 4"],
        Pe[Ge.SWORD] = ["Kamienny miecz", "BÄ…dÅº miÅ‚y dla innych", "ObraÅ¼enia: 19", "ObraÅ¼enia do budowli: 6"],
        Pe[Ge.SWORD_GOLD] = ["ZÅ‚oty miecz", "KrÃ³l lasu", "ObraÅ¼enia: 22", "ObraÅ¼enia do budowli: 7"],
        Pe[Ge.SWORD_DIAMOND] = ["Diamentowy miecz", "MoÅ¼esz poczuÄ‡ moc", "ObraÅ¼enia: 24", "ObraÅ¼enia do budowli: 8"],
        Pe[Ge.PIRATE_SWORD] = ["Piracki miecz", "Ayyyyy!", "DÅ‚uÅ¼szy niÅ¼ zwykÅ‚y miecz", "ObraÅ¼enia: 24", "ObraÅ¼enia do budowli: 8"],
        Pe[Ge.SWORD_AMETHYST] = ["Ametystowy miecz", "fioÅ‚kowy to najpiÄ™kniejszy kolor na Å›wiecie", "Damage: 27", "ObraÅ¼enia do budowli: 9"],
        Pe[Ge.DRAGON_SWORD] = ["Smoczy miecz", "Bez litoÅ›ci!", "ObraÅ¼enia: 30", "ObraÅ¼enia do budowli: 10"],
        Pe[Ge.DRAGON_SPEAR] = ["Smocza wÅ‚Ã³cznia", "Zabij ich wszystkich!", "ObraÅ¼enia: 22", "ObraÅ¼enia do budowli: 6"],
        Pe[Ge.PICK_WOOD] = ["Drewniany kilof", "MoÅ¼e wydobywaÄ‡ tylko kamienie i drewno", "ObraÅ¼enia: 1"],
        Pe[Ge.PICK] = ["Kamienny kilof", "MoÅ¼e wydobywaÄ‡ drewno, kamienie i zÅ‚oto", "ObraÅ¼enia: 2"],
        Pe[Ge.PICK_GOLD] = ["ZÅ‚oty kilof", "MoÅ¼e takÅ¼e wydobywaÄ‡ diamenty", "ObraÅ¼enia: 3", "ObraÅ¼enia do budowli: 1"],
        Pe[Ge.PICK_DIAMOND] = ["Diamentowy kilof", "MoÅ¼e wydobywaÄ‡ wszystko", "ObraÅ¼enia: 4", "ObraÅ¼enia do budowli: 1"],
        Pe[Ge.PICK_AMETHYST] = ["Ametystowy kilof", "MoÅ¼e wydobywaÄ‡ wszystko. WyglÄ…da fantastycznie!", "ObraÅ¼enia: 5", "ObraÅ¼enia do budowli: 1"],
        Pe[Ge.HAMMER] = ["Kamienny mÅ‚ot", "Pomocny w niszczeniu budowli", "Nie dziaÅ‚a najlepiej na ametyÅ›cie", "ObraÅ¼enia: 2", "ObraÅ¼enia do budowli: 20"],
        Pe[Ge.HAMMER_GOLD] = ["ZÅ‚oty mÅ‚ot", "Pomocny w niszczeniu budowli", "Nie dziaÅ‚a najlepiej na ametyÅ›cie", "ObraÅ¼enia: 3", "ObraÅ¼enia do budowli: 30"],
        Pe[Ge.HAMMER_DIAMOND] = ["Diamentowy mÅ‚ot", "Pomocny w niszczeniu budowli", "ObraÅ¼enia: 4", "ObraÅ¼enia do budowli: 40"],
        Pe[Ge.HAMMER_AMETHYST] = ["Ametystowy mÅ‚ot", "Pomocny w niszczeniu budowli", "ObraÅ¼enia: 5", "ObraÅ¼enia do budowli: 50"],
        Pe[Ge.SUPER_HAMMER] = ["Super mÅ‚ot", "MiaÅ‚eÅ› kiedyÅ› plan zniszczenia Å›wiata?", "ObraÅ¼enia: 12", "ObraÅ¼enia do budowli: 70"],
        Pe[Ge.WOOD_SPEAR] = ["Drewniana wÅ‚Ã³cznia", "Jak patyk, ale kÅ‚uje.", "ObraÅ¼enia: 10", "ObraÅ¼enia do budowli: 2"],
        Pe[Ge.SPEAR] = ["Kamienna wÅ‚Ã³cznia", "PoczÄ…tek ewolucji!", "ObraÅ¼enia: 14", "ObraÅ¼enia do budowli: 4"],
        Pe[Ge.GOLD_SPEAR] = ["ZÅ‚ota wÅ‚Ã³cznia", "UwaÅ¼aj, kÅ‚uje!", "ObraÅ¼enia: 15", "ObraÅ¼enia do budowli: 5"],
        Pe[Ge.DIAMOND_SPEAR] = ["Diamentowa wÅ‚Ã³cznia", "JesteÅ› gotowy, aby zabiÄ‡ smoka", "ObraÅ¼enia: 17", "ObraÅ¼enia do budowli: 5"],
        Pe[Ge.AMETHYST_SPEAR] = ["Ametystowa wÅ‚Ã³cznia", "Smoki juÅ¼ nie sÄ… dla ciebie zagroÅ¼eniem", "ObraÅ¼enia: 18", "ObraÅ¼enia do budowli: 6"],
        Pe[Ge.SHOVEL] = ["Kamienna Å‚opata", "Kop w ziemi aby zdobyÄ‡ ziemiÄ™, lÃ³d i piasek", "MoÅ¼esz takÅ¼e zdobyÄ‡ mineraÅ‚y", "ObraÅ¼enia: 2"],
        Pe[Ge.SHOVEL_GOLD] = ["ZÅ‚ota Å‚opata", "Kop w ziemi aby zdobyÄ‡ ziemiÄ™, lÃ³d i piasek", "MoÅ¼esz takÅ¼e zdobyÄ‡ mineraÅ‚y", "ObraÅ¼enia: 3", "ObraÅ¼enia do budowli: 1"],
        Pe[Ge.SHOVEL_DIAMOND] = ["Diamentowa Å‚opata", "Kop w ziemi aby zdobyÄ‡ ziemiÄ™, lÃ³d i piasek", "MoÅ¼esz takÅ¼e zdobyÄ‡ mineraÅ‚y", "ObraÅ¼enia: 4", "ObraÅ¼enia do budowli: 1"],
        Pe[Ge.SHOVEL_AMETHYST] = ["Ametystowa Å‚opata", "Kop w ziemi aby zdobyÄ‡ ziemiÄ™, lÃ³d i piasek", "MoÅ¼esz takÅ¼e zdobyÄ‡ mineraÅ‚y", "ObraÅ¼enia: 5", "ObraÅ¼enia do budowli: 1"],
        Pe[Ge.WOOD_HELMET] = ["Drewniany heÅ‚m", "Lepsze niÅ¼ nic", "Obrona przed graczami: 1", "Obrona przed zwierzÄ™tami: 4"],
        Pe[Ge.STONE_HELMET] = ["Kamienny heÅ‚m", "JesteÅ› gotowy do bitwy!", "Obrona przed graczami: 2", "Obrona przed zwierzÄ™tami: 8"],
        Pe[Ge.GOLD_HELMET] = ["ZÅ‚oty heÅ‚m", "Zwany takÅ¼e heÅ‚mem barbarzyÅ„cÃ³w", "Obrona przed graczami: 4", "Obrona przed zwierzÄ™tami: 13"],
        Pe[Ge.DIAMOND_HELMET] = ["Diamentowy heÅ‚m", "Nie przechwalaj siÄ™ za bardzo", "Obrona przed graczami: 5", "Obrona przed zwierzÄ™tami: 19"],
        Pe[Ge.AMETHYST_HELMET] = ["Ametystowy heÅ‚m", "Nie boisz siÄ™ juÅ¼ niczego", "Obrona przed graczami: 6", "Obrona przed zwierzÄ™tami: 23"],
        Pe[Ge.DRAGON_HELMET] = ["Smoczy heÅ‚m", "Zmierzysz siÄ™ z caÅ‚ym Å›wiatem", "Obrona przed graczami: 8", "Obrona przed zwierzÄ™tami: 27"],
        Pe[Ge.EXPLORER_HAT] = ["Czapka odkrywcy", "ZwierzÄ™ta nie bÄ™dÄ… zwracaÅ‚y na ciebie uwagi", "ale nie rÃ³b haÅ‚asu!", "CiepÅ‚o w i poza zimÄ…"],
        Pe[Ge.CHRISTMAS_HAT] = ["Å›wiÄ…teczna czapka", "Oh, oh, oh, WesoÅ‚ych ÅšwiÄ…t", "CiepÅ‚o w i poza zimÄ…"],
        Pe[Ge.ELF_HAT] = ["Czapka elfa", "Nie pozwÃ³l siÄ™ byÄ‡ wykorzystywanym, maÅ‚y Å›nieÅ¼ny elfie!", "CiepÅ‚o w i poza zimÄ…"],
        Pe[Ge.HOOD] = ["Kaptur", "JesteÅ› Å‚obuzem", "MoÅ¼esz coÅ› komuÅ› ukraÅ›Ä‡ jeÅ›li", "- Jest noc", "- Nic przy sobie nie masz", "- JeÅ¼eli nic przez chwilÄ™ nie dotykaÅ‚eÅ›", "- Nie jesteÅ› blisko ognia", "- TwÃ³j cel nie jest ubrany w chÅ‚opskÄ… tunikÄ™", "Jest ciepÅ‚o w i poza zimÄ…"],
        Pe[Ge.EARMUFFS] = ["Nauszniki", "JakiÅ› inny rodzaj maÅ‚ej czapki.", "CiepÅ‚o w i poza zimÄ…"],
        Pe[Ge.COAT] = ["Czapka", "TakÅ¼e nazywana pÅ‚aszczem.", "CiepÅ‚a w i poza zimÄ…"],
        Pe[Ge.CAP_SCARF] = ["Szal i czapka", "Bardzo wygodna, bardzo ciepÅ‚a"],
        Pe[Ge.PEASANT] = ["ChÅ‚opska tunika", "Twoje roÅ›liny rosnÄ… szybciej", "CiepÅ‚a w i poza zimÄ…"],
        Pe[Ge.WINTER_HOOD] = ["Zimowy kaptur", "MoÅ¼esz coÅ› komuÅ› ukraÅ›Ä‡ jeÅ›li", "- Jest noc", "- Nic przy sobie nie masz", "- JeÅ¼eli nic przez chwilÄ™ nie dotykaÅ‚eÅ›", "- Nie jesteÅ› blisko ognia", "- TwÃ³j cel nie jest ubrany w tunikÄ™ zimowego chÅ‚opa", "Jest ciepÅ‚o w i poza zimÄ…"],
        Pe[Ge.WINTER_PEASANT] = ["Zimowa chÅ‚opska tunika", "Twoje roÅ›liny rosnÄ… szybciej", "CiepÅ‚o w i poza zimÄ…"],
        Pe[Ge.DIVING_MASK] = ["Maska do nurkowania", "JesteÅ› szybki w wodzie", "CiepÅ‚o", "Obrona przed graczami: 2, Obrona przed zwierzÄ™tami: 8"],
        Pe[Ge.SUPER_DIVING_SUIT] = ["StrÃ³j gÅ‚Ä™binowy", "JesteÅ› bardzo szybki w wodzie", "CiepÅ‚o ci w wodzie", "Obrona przed graczami: 4, Obrona przed zwierzÄ™tami: 16"],
        Pe[Ge.DRAGON_ORB] = ["Smocza kula", "Zdobyta podczas zadania"],
        Pe[Ge.DRAGON_HEART] = ["Smocze serce", "Zamienia ciÄ™ w ducha po Å›mierci!", "JesteÅ› duchem na 60 sekund", "ZnajdÅº kamieÅ„ rezurekcyjny"],
        Pe[Ge.GEMME_GREEN] = ["Zielony krysztaÅ‚", "Nie oszukiwaÅ‚eÅ›, przysiÄ™gasz?"],
        Pe[Ge.GEMME_ORANGE] = ["PomaraÅ„czowy krysztaÅ‚", "Tylko prawdziwy pirat moÅ¼e go znaleÅºÄ‡!"],
        Pe[Ge.GEMME_BLUE] = ["Niebieski krysztaÅ‚", "Dla zbyt miÅ‚ych ludzi"],
        Pe[Ge.CROWN_GREEN] = ["Zielona korona", "Szybko siÄ™ leczysz", "Uzdrawia z biegiem czasu: 40", "Obrona przed graczami: 4, Obrona przed zwierzÄ™tami: 16"],
        Pe[Ge.CROWN_ORANGE] = ["PomaraÅ„czowa korona", "Nagle poczuÅ‚eÅ› smak szczÄ™Å›cia", "Obrona przed graczami: 4, Obrona przed zwierzÄ™tami: 16"],
        Pe[Ge.CROWN_BLUE] = ["Niebieska korona", "Gdy juÅ¼ bÄ™dziesz martwy, zamienisz siÄ™ w ducha", "Przy okazji stracisz swojÄ… broÅ„ i kilof", "Obrona przed graczami: 4, Obrona przed zwierzÄ™tami: 16"],
        Pe[Ge.BUCKET_FULL] = ["Wiadro", "RÃ³wnieÅ¼ przydatne do napeÅ‚nienia studni", "Jedno wiadro jest jak dwanaÅ›cie butelek"],
        Pe[Ge.BUCKET_EMPTY] = ["Puste wiadro", "Musisz napeÅ‚niÄ‡ to wiadro wodÄ…"],
        Pe[Ge.BOTTLE_FULL] = ["Butelka", "Pozwala piÄ‡ wodÄ™ wszÄ™dzie", "Woda: 50"],
        Pe[Ge.BOTTLE_EMPTY] = ["Pusta butelka", "MoÅ¼esz napeÅ‚niÄ‡ tÄ… butelkÄ™ blisko ÅºrÃ³dÅ‚a wody"],
        Pe[Ge.WATERING_CAN] = ["Pusta konewka", "Musisz jÄ… napeÅ‚niÄ‡ w ÅºrÃ³dle wody, aby jÄ… uÅ¼yÄ‡"],
        Pe[Ge.WATERING_CAN_FULL] = ["Konewka", "Pozwala podlewaÄ‡ roÅ›liny", "ObraÅ¼enia: 1"],
        Pe[Ge.BAG] = ["Plecak", "WiÄ™cej miejsca na twoje przedmioty!"],
        Pe[Ge.PAPER] = ["Papier", "UÅ¼ywany w tworzeniu ksiÄ…Å¼ki"],
        Pe[Ge.BOOK] = ["KsiÄ…Å¼ka", "Pozwala znacznie skrÃ³ciÄ‡ wytwarzanie", "Musisz jÄ… nosiÄ‡ by zadziaÅ‚aÅ‚a", "Uszkodzenie 1"],
        Pe[Ge.BANDAGE] = ["BandaÅ¼", "Szybciej zregeneruj Å¼ycie", "Uzdrawia z biegiem czasu: 30", "Efekt: 5"],
        Pe[Ge.LOCK] = ["Zamek", "Pozwala ci zamknÄ…Ä‡ skrzyniÄ™"],
        Pe[Ge.LOCKPICK] = ["Wytrych", "Pozwala ci odblokowaÄ‡ jednÄ… skrzyniÄ™"],
        Pe[Ge.TOTEM] = ["Totem", "Pozwala ci stworzyÄ‡ druÅ¼ynÄ™", "Dziel siÄ™ drzwiami i zamkniÄ™tymi skrzyniami", "Szkodliwe budynki nie zraniÄ… twoich przyjaciÃ³Å‚"],
        Pe[Ge.BRIDGE] = ["Most", "Bardzo przydatny w wodzie", "Pozwala ci piÄ‡ bez utoniÄ™cia", "Chodzisz szybciej w wodzie"],
        Pe[Ge.SIGN] = ["Tabliczka", "Zostaw wiadomoÅ›Ä‡ dla innych", "WytrzymaÅ‚oÅ›Ä‡: 200"],
        Pe[Ge.ROOF] = ["Dach", "TrochÄ™ cie ogrzewa i chowa!"],
        Pe[Ge.WELL] = ["Studnia", "UmoÅ¼liwia napeÅ‚nienie butelki", "WytrzymaÅ‚oÅ›Ä‡: 1000"],
        Pe[Ge.WALL] = ["Drewniany mur", "Znasz taniec Å›cian?", "WytrzymaÅ‚oÅ›Ä‡: 1000"],
        Pe[Ge.STONE_WALL] = ["Kamienny mur", "Jest to trochÄ™ bardziej powaÅ¼niejsze.", "WytrzymaÅ‚oÅ›Ä‡: 1500"],
        Pe[Ge.GOLD_WALL] = [" ZÅ‚oty mur", "ZÅ‚oto na twoich murach? To trochÄ™ krzykliwe.", "WytrzymaÅ‚oÅ›Ä‡: 2000"],
        Pe[Ge.DIAMOND_WALL] = ["Diamentowy mur", "Jaki bÅ‚yszczÄ…cy, uwaÅ¼aj na oczy", "WytrzymaÅ‚oÅ›Ä‡: 2500"],
        Pe[Ge.AMETHYST_WALL] = ["Ametystowy mur", "Musisz bardzo siÄ™ baÄ‡, aby wyjÅ›Ä‡!", "WytrzymaÅ‚oÅ›Ä‡: 3000"],
        Pe[Ge.SPIKE] = ["Drewniany kolczasty mur", "MoÅ¼e uszkodziÄ‡ wrogÃ³w", "ObraÅ¼enia: 10, ObraÅ¼enia po uszkodzeniu: 2", "WytrzymaÅ‚oÅ›Ä‡: 150"],
        Pe[Ge.STONE_SPIKE] = ["Kamienny kolczasty mur", "Nie chciaÅ‚bym byÄ‡ twoim wrogiem.", "ObraÅ¼enia: 20", " ObraÅ¼enia po uszkodzeniu: 3", "WytrzymaÅ‚oÅ›Ä‡: 300"],
        Pe[Ge.GOLD_SPIKE] = ["ZÅ‚oty kolczasty mur", "JesteÅ›taki okrutny.", "ObraÅ¼enia: 30", " ObraÅ¼enia po uszkodzeniu: 3", "WytrzymaÅ‚oÅ›Ä‡: 600"],
        Pe[Ge.DIAMOND_SPIKE] = ["Diamentowy kolczasty mur", "Raczej nie lubisz towarzystwa.", "ObraÅ¼enia: 40", "ObraÅ¼enia po uszkodzeniu: 4", "WytrzymaÅ‚oÅ›Ä‡: 1200"],
        Pe[Ge.AMETHYST_SPIKE] = ["Ametystowy kolczasty mur", "Co ci sÄ…siedzi ci zrobili?", "ObraÅ¼enia: 50", "ObraÅ¼enia po uszkodzeniu: 4", "WytrzymaÅ‚oÅ›Ä‡: 2400"],
        Pe[Ge.WOOD_DOOR] = ["Drewniane drzwi", "MoÅ¼e byÄ‡ otwarte przez ciebie lub przyjaciÃ³Å‚", "WytrzymaÅ‚oÅ›Ä‡: 1000"],
        Pe[Ge.STONE_DOOR] = ["Kamienne drzwi", "Solidne drzwi sÄ… bardziej powaÅ¼ne ", "WytrzymaÅ‚oÅ›Ä‡: 1500"],
        Pe[Ge.GOLD_DOOR] = ["ZÅ‚ote drzwi", "Czy odbudowujesz El Dorado?", "WytrzymaÅ‚oÅ›Ä‡: 2000"],
        Pe[Ge.DIAMOND_DOOR] = ["Diamentowe drzwi", "Dla bÅ‚yszczÄ…cego domu", "WytrzymaÅ‚oÅ›Ä‡: 2500"],
        Pe[Ge.AMETHYST_DOOR] = ["Ametystowe drzwi", "Czy twÃ³j dom to zamkniÄ™ty sejf?", "WytrzymaÅ‚oÅ›Ä‡: 3000"],
        Pe[Ge.FURNACE] = ["Piec", "Ogrzewa ciÄ™", "ZuÅ¼ywa drewno co 5 sekund", "WytrzymaÅ‚oÅ›Ä‡: 1000"],
        Pe[Ge.WINDMILL] = ["MÅ‚yn", "MoÅ¼e produkowaÄ‡ mÄ…kÄ™ z pszenicy", "Przygotowanie mÄ…ki zajmuje 5 sekund", "Zwraca punkty podczas pracy", "WytrzymaÅ‚oÅ›Ä‡: 2000"],
        Pe[Ge.BREAD_OVEN] = ["Piec do chleba", "Pozwala na wypiek chleba z mÄ…ki", "Przygotowanie chleba zajmuje 10 sekund", "Zwraca punkty podczas pracy", "WytrzymaÅ‚oÅ›Ä‡: 2000"],
        Pe[Ge.RESURRECTION] = ["KamieÅ„ rezurekcyjny", "To magia", "Wskrzesi ciÄ™ jeÅ›li jesteÅ› duchem", "Stracisz swoja broÅ„ i kilof", "WytrzymaÅ‚oÅ›Ä‡: 200"],
        Pe[TEXT.YOU_CANNOT_JOIN] = "Nie moÅ¼esz doÅ‚Ä…czyÄ‡ do tego serwera",
        Pe[TEXT.KICKED] = "Wyrzucony: ",
        Pe[TEXT.KEY_ALREADY] = "TwÃ³j klucz jest aktualnie uÅ¼ywany przez innego gracza",
        Pe[TEXT.KEY_WRONG] = "TwÃ³j klucz jest nieprawidÅ‚owy",
        Pe[TEXT.OLD_VERSION] = "Posiadasz starszÄ… wersjÄ™, musisz wyczyÅ›ciÄ‡ swojÄ… pamiÄ™Ä‡",
        Pe[TEXT.NO_MORE_RESOURCES] = "Nie ma nowych mineraÅ‚Ã³w, zwierzÄ…t, i jedzenia",
        Pe[TEXT.SURVIVED_1DAY] = "PrzeÅ¼yÅ‚eÅ› 1 dzieÅ„",
        Pe[TEXT.SURVIVED] = "PrzeÅ¼yÅ‚eÅ› ",
        Pe[TEXT.DAYS] = " dni",
        Pe[TEXT.DEAD_SAD] = "JesteÅ› martwy ;-;",
        Pe[TEXT.SPAM_ME] = "Serwer nie moÅ¼e znaleÅºÄ‡ miejsca na spawn! Spamuj przycisk zagraj! Lub wybierz inny serwer...",
        Pe[TEXT.SPAM_ME2] = "Serwer jest peÅ‚ny! Spamuj przycisk zagraj!",
        Pe[TEXT.EMPTY] = "Å¹rÃ³dÅ‚o jest puste",
        Pe[TEXT.INV_FULL] = "Ekwipunek jest peÅ‚ny (uÅ¼yj prawego przycisku myszy, Å¼eby wyrzuciÄ‡ przedmiot)",
        Pe[TEXT.DEAD] = " jest martwy",
        Pe[TEXT.WRONG_TOOL] = "To nie jest wÅ‚aÅ›ciwe narzÄ™dzie",
        Pe[TEXT.JOIN_TEAM] = "DoÅ‚Ä…czyÅ‚eÅ› do druÅ¼yny",
        Pe[TEXT.YOU_DEAD] = "JesteÅ› martwy",
        Pe[TEXT.JOINED_TEAM] = " doÅ‚Ä…czyÅ‚ do druÅ¼yny",
        Pe[TEXT.TEAM_DESTROYED] = "Twoja druÅ¼yna zostaÅ‚a zniszczona",
        Pe[TEXT.LEFT_TEAM] = " OpuÅ›ciÅ‚eÅ› druÅ¼ynÄ™",
        Pe[TEXT.LEFT_TEAM2] = " opuÅ›ciÅ‚ druÅ¼ynÄ™",
        Pe[TEXT.TOKEN] = "KtoÅ› ukradÅ‚ twÃ³j Å¼eton :>",
        Pe[TEXT.CHOOSE] = "Wybierz serwer",
        Pe[TEXT.PLAYERS] = "graczy",
        Pe[TEXT.TOTAL_PLAYERS] = "wszystkich graczy",
        Pe[TEXT.TOTAL_MODE] = "graczy w tym trybie",
        Pe[TEXT.COMMING_SOON] = "JuÅ¼ wkrÃ³tce...",
        document.getElementById("nickname_input").placeholder = "Przydomek",
        n[0] = ["ZostaÅ‚eÅ› zabity bez powodu"],
        n[1] = ["UmarÅ‚eÅ› z gÅ‚odu, jak nazwa gry wskazuje"],
        n[2] = ["ZamarzÅ‚eÅ› na Å›mierÄ‡. Ale smutne", "Masz hipotermiÄ™. NastÄ™pnym razem, zamiast tego sprÃ³buj siedzieÄ‡ obok ogniska."],
        n[3] = ["Gracz zabiÅ‚ ciÄ™, mÃ³wiÄ…c ci 'git gud.' ", "ZostaÅ‚eÅ› zamordowany przez gracza. Nie martw siÄ™, ten gracz teÅ¼ zginie, ewentualnie."],
        n[4] = ["ByÅ‚eÅ› za blisko ogniska i spÅ‚onÄ…Å‚eÅ›. ZÅ‚y pomysÅ‚.", "ZginÄ…Å‚eÅ› od ognia. OgieÅ„ ciÄ™ rani. IdÅº i napisz o tym historiÄ™."],
        n[5] = ["Twoje ciaÅ‚o staÅ‚o siÄ™ gniazdem dla pajÄ™czych jaj", "PajÄ…k ciÄ™ zabiÅ‚. Przynajmniej to nie byÅ‚ krÃ³lik."],
        n[6] = ["Wilk juÅ¼ nie bÄ™dzie gÅ‚odowaÅ‚ po zjedzeniu ciÄ™", "To nie sÄ… pieski.Wilki nie lubiÄ… jak siÄ™ je gÅ‚aszcze."],
        n[7] = ["Lis byÅ‚ dla ciebie za szybki", "Lis zmieniÅ‚ ciÄ™ w pudÅ‚o.Od kiedy zwierzÄ™ta majÄ… magiczne zdolnoÅ›ci?"],
        n[8] = ["NiedÅºwiedÅº chciaÅ‚ siÄ™ tylko przytuliÄ‡.", "NiedÅºwiedÅº byÅ‚ biedny. Nie jest mi przykro."],
        n[9] = ["ZostaÅ‚eÅ› spalony na popiÃ³Å‚ przez smoka. Jakie to smutne.", "ZostaÅ‚eÅ› spÅ‚aszczony przez smoka. ByÄ‡ zmiaÅ¼dÅ¼onym to okropny sposÃ³b na Å›mierÄ‡."],
        n[10] = ["WskoczyÅ‚eÅ› na kolczasty mur. Niezbyt dobry pomysÅ‚...", "ZostaÅ‚eÅ› zabity przez kolczasty mur. WiÄ™kszoÅ›Ä‡ ludzi ludzi jest wystarczajÄ…co rozsÄ…dna, aby nie dotykaÄ‡ spiczastych rzeczy."],
        n[11] = ["Nawet duch potrafi umrzeÄ‡.", "Nie udaÅ‚o ci siÄ™ dokonaÄ‡ rezurekcji. To jest gra, wiÄ™c Å¼yjesz po Å›mierci, wiÄ™c..."],
        n[12] = ["Bakterie z twojego surowego miÄ™sa zabiÅ‚y ciÄ™. Ta gra jest zdecydowanie za trudna.", "Ty zabiÅ‚eÅ› surowe miÄ™so. Ono zabiÅ‚o ciebiÄ™."],
        n[13] = ["ZginÄ…Å‚eÅ› z pragnienia. Lepiej piÄ‡ wÅ‚asny mocz."],
        n[14] = ["Czy wiedziaÅ‚eÅ›, Å¼e usta gÅ‚odomorka sÄ… zawsze pod wodÄ… podczas pÅ‚ywania? Teraz wiesz."],
        n[15] = ["Nie martw siÄ™, zasmakowaÅ‚eÅ› pirani.", "Zabawny fakt: Piranie jedzÄ… ludzi, wÅ‚Ä…czajÄ…c ciebie."],
        n[16] = ["LapaMauve nie planuje abyÅ› mÃ³gÅ‚ zabiÄ‡ krakena", "Kraken rozwaliÅ‚ twojÄ… czaszkÄ™."],
        n[17] = ["Twoja skÃ³ra odpada, sÅ‚oÅ„ce ciÄ™ zabija."],
        n[18] = ["Czosnek w twoich kieszeniach  ugotowaÅ‚ ci mÃ³zg."],
        n[19] = ["Jako wampir, nie staÅ‚bym blisko zÄ…bkÃ³w czosnku."],
        n[20] = ["ZjadÅ‚eÅ› czosnek jako wampir, czego oczekiwaÅ‚eÅ›?"],
        n[21] = ["Twoje ciaÅ‚o owija siÄ™ w cierniste krzaki.Kiedy prÃ³bujesz uciec,twoja skÃ³ra odpada i twoje serce przestaje biÄ‡."],
        ZOMBIE_GRUMBLE = "Uuunnnggg",
        ZOMBIE_GRUMBLES = ["Uuunnnggg... GÅ‚odujÄ™", "PotrzebujÄ™ twojego mÃ³zgu Uuunnnggg...", "ÅšwieÅ¼e miÄ™so tutaj.. Uuunnnggg", "Uuunnnggg... JesteÅ› pyszny", "Uuunnnggg...", "JeÅ›Ä‡... uuunnnggg...", "CzujÄ™ krew... Uuunnnggg"]
    }
    function C() {
        Pe[Ge.DRAGON_CUBE] = ["You feel a great power emanating from this orb"],
        n[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."],
        Pe[Ge.CRAB_STICK] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"],
        Pe[TEXT.BACK_TO_THE_GAME] = " RETOUR AU JEU",
        Pe[TEXT.TWITTER] = " Partage sur Twitter",
        Pe[TEXT.FACEBOOK] = " Partage sur Facebook",
        Pe[TEXT.KIT_NEXT] = "Tu peux acheter des objets dans le magasin Ã  ta prochaine partie avec tes points",
        Pe[TEXT.POINTS] = "points",
        Pe[TEXT.SCORE] = "Score",
        Pe[TEXT.KILL] = "TuÃ©s",
        Pe[TEXT.DAYS_SURVIVED] = "Jours survÃ©cus",
        Pe[TEXT.MODE_FREE] = "Mode de construction: Libre. Appuie sur G pour changer",
        Pe[TEXT.MODE_GRID] = "Mode de construction: Grille. Appuie sur G pour changer",
        Pe[Ge.CRAB_LOOT] = ["Pince de crabe", "Les pinces de crabes peuvent aussi Ãªtre mangÃ©es", "Food: 10"],
        Pe[Ge.CRAB_SPEAR] = ["Lance en crabe", "Te permet de soigner les crabes et de les calmer", "Donne un bonus de +10 degats quand elle est portÃ©e", "avec un casque un crabe sur un Crab King", "Damage: 14", "Building Damage: 4"],
        Pe[Ge.CROWN_CRAB] = ["Casque en crabe", "Tu es le Roi des Crabes!", "Les crabes te suivent", "Ils ne peuvent pas te frapper et toi non plus", "Players Defense: 4", "Animals Defense: 13"],
        Pe[Ge.BED] = ["Lit", "Repose-toi dans ce lit douillet", "Tu as moins froid, moins faim et moins soif", "Tu te rÃ©gÃ©nÃ¨res plus vite", "Durability: 400"],
        document.getElementById("typequest").innerHTML = "Chrono QuÃªtes",
        document.getElementById("timeremainingquest").innerHTML = "Temps Restant",
        document.getElementById("constraintquest").innerHTML = " Contraintes",
        document.getElementById("claim_rewards").innerHTML = " RÃ©sultat",
        document.getElementById("rewardquest").innerHTML = " RÃ©compenses",
        document.getElementById("killdragon_1").innerHTML = " Collecte 1 CÅ“ur de dragon dans la cave",
        document.getElementById("amethyst_2").innerHTML = " RÃ©colte 1 amÃ©thyste",
        document.getElementById("survive20min_3").innerHTML = "Survis sans perdre de vie",
        document.getElementById("treasure_chest_4").innerHTML = " Ouvre 5 coffres au trÃ©sor",
        document.getElementById("dont_hit_5").innerHTML = " Sois pacifique",
        document.getElementById("bread_6").innerHTML = " Cuisine 100 pains en hiver, seul et sans retour en arriÃ¨re",
        document.getElementById("winter_7").innerHTML = " AprÃ¨s 1 jour, survis en hiver";
        for (var e = 0; e < 7; e++)
            document.getElementById("claim_reward_" + e).innerHTML = "RÃ‰COMPENSE!";
        document.getElementById("quit_chronoquest").innerHTML = " QUITTER",
        Pe[Ge.HAND] = ["Main"],
        Pe[Ge.GROUND] = ["Terre", "C'est sale!"],
        Pe[Ge.SAND] = ["Sable", "J'en ai dans les yeux"],
        Pe[Ge.WOOD] = ["Bois", "Tu n'en auras jamais trop!"],
        Pe[Ge.STONE] = ["Pierre", "Aussi appelÃ©e roche"],
        Pe[Ge.GOLD] = ["Or", "Sois gÃ©nÃ©reux, donne en aux autres"],
        Pe[Ge.DIAMOND] = ["Diamant", "Comme tes yeux! wesh"],
        Pe[Ge.AMETHYST] = ["AmÃ©thyste", "C'est Mauve comme Lapa"],
        Pe[Ge.FLOUR] = ["Farine", "Utile pour la cuisine"],
        Pe[Ge.COOKIE] = ["Cookie", "Un somptueux cookie de Grand-MÃ¨re", "Nourriture: 50"],
        Pe[Ge.CAKE] = ["GÃ¢teau", "Pour les fins gourmets", "Nourriture: 100"],
        Pe[Ge.MEAT] = ["Viande crue", "Tu peux la cuisiner avec du feu", "Intoxication: 10", "Nourriture: 15"],
        Pe[Ge.COOKED_MEAT] = ["Viande cuite", "Un steak saignant, s'il vous plait", "Nourriture: 35"],
        Pe[Ge.FOODFISH] = ["Poisson cru", "Je crois que c'est encore vivant", "Intoxication: 10", "Nourriture: 18"],
        Pe[Ge.FOODFISH_COOKED] = ["Poisson cuit", "Avec du citron, c'est parfait", "Nourriture: 35"],
        Pe[Ge.BREAD] = ["Baguette", "Une tradition s'il vous plait", "C'est la monnaie du marchÃ©", "Nourriture: 15"],
        Pe[Ge.SANDWICH] = ["Sandwich", "Le Jambon Beurre vaincra", "Nourriture: 100"],
        Pe[Ge.CANDY] = ["Bonbons", "Il n'y a pas de dentiste ici", "Nourriture: 100"],
        Pe[Ge.SUGAR_CAN] = ["Canne Ã  sucre", "Sans sucre de canne", "Nourriture: 20"],
        Pe[Ge.GARLAND] = ["Guirlandes", "Utilisable sur les toits"],
        Pe[Ge.SEED] = ["Graines de baies", "Deviennent des baies", "Naissance: 2min", "Croissance: 55s", "Arrosage: 3min 20s", "DurabilitÃ©: 700", "DurÃ©e de vie: 8 jours"],
        Pe[Ge.PLANT] = ["Baies", "Peu nourrissant", "Nourriture: 10"],
        Pe[Ge.WHEAT_SEED] = ["Graines de blÃ©", "Deviennent du blÃ©", "Naissance: 2min", "Croissance: 16s", "Arrosage: 2min", "DurabilitÃ©: 700", "DurÃ©e de vie: 8 jours"],
        Pe[Ge.WILD_WHEAT] = ["BlÃ©", "Peut Ãªtre transformÃ© en farine dans les moulins"],
        Pe[Ge.PUMPKIN_SEED] = ["Graines de citrouille", "Deviennent des citrouilles", "Naissance: 2min 40s", "Croissance: 2min", "Arrosage: 2min", "DurabilitÃ©: 700", "DurÃ©e de vie: 8 jours"],
        Pe[Ge.PUMPKIN] = ["Citrouille", "Ã‡a me rappelle Halloween", "Nourriture: 30"],
        Pe[Ge.GARLIC_SEED] = ["Graines d'ail", "TrÃ¨s dangereux pour les vampires", "DÃ©gÃ¢ts: 20", "Naissance: 4min", "Croissance: 1min 10s", "Arrosage: 1min 40s", "DurabilitÃ©: 700", "DurÃ©e de vie: 8 jours"],
        Pe[Ge.GARLIC] = ["Ail", "Soigne et rÃ©duit le froid", "Nourriture: 14", "Soigne sur le temps: 30", "Effet: 1 fois"],
        Pe[Ge.THORNBUSH_SEED] = ["Graines de ronces", "Peuvent blesser vos ennemis", "DÃ©gÃ¢ts: 20", "Naissance: 4min", "Croissance: 15s", "Arrosage: 3min", "DurabilitÃ©: 1000", "DurÃ©e de vie: 8 jours"],
        Pe[Ge.THORNBUSH] = ["Ronces", "Ã‡a pique!"],
        Pe[Ge.PLOT] = ["Terreau", "Indispensable", "Vos plantes grandiront plus vite", "et auront besoin de moins d'eau", "DurabilitÃ©: 2000"],
        Pe[Ge.ICE] = ["Glace", "Pratique pour faire de l'eau et des gÃ¢teaux"],
        Pe[Ge.SPANNER] = ["ClÃ© Ã  molette", "Pour rÃ©parer les portes, les murs et les piques", "DÃ©gÃ¢ts: 2"],
        Pe[Ge.FUR_WOLF] = ["Peau de loup", "Il Ã©tait oÃ¹ le gentil ti Youki?"],
        Pe[Ge.FUR] = ["Peau de lapin", "Vous Ãªtes un monstre"],
        Pe[Ge.SPECIAL_FUR] = ["Fourrure blanche", "Tu es une usine Ã  pain"],
        Pe[Ge.SPECIAL_FUR_2] = ["Fourrure noire", "Tu te sens prÃªt Ã  faire quelque chose de mal"],
        Pe[Ge.FUR_WINTER] = ["Fourrure d'hiver", "Il voulait juste un calin"],
        Pe[Ge.SCALES] = ["Ã‰cailles", "Ã‡a sent le poisson!"],
        Pe[Ge.KRAKEN_SKIN] = ["Peau du kraken", "Tu n'as pas eu trop peur?"],
        Pe[Ge.FIRE] = ["Feu de camp", "RÃ©chauffe", "DurabilitÃ©: 150", "DurÃ©e de vie: 2min"],
        Pe[Ge.BIG_FIRE] = ["Grand feu de camp", "RÃ©chauffe plus longtemps", "DurabilitÃ©: 400", "DurÃ©e de vie: 6min"],
        Pe[Ge.WORKBENCH] = ["Ã‰tabli", "Utile pour fabriquer toute sorte d'objets"],
        Pe[Ge.CORD] = ["Fil", "Utile pour faire des chapeaux et un sac"],
        Pe[Ge.BLUE_CORD] = ["Fil de diamant", "Utile pour faire des chapeaux"],
        Pe[Ge.CHEST] = ["Coffre", "Permet de ranger des objets", "DurabilitÃ©: 500"],
        Pe[Ge.SWORD_WOOD] = ["Ã‰pÃ©e en bois", "C'est pour les enfants", "DÃ©gÃ¢ts: 12", "DÃ©molition: 4"],
        Pe[Ge.SWORD] = ["Ã‰pÃ©e en pierre", "Sois gentil avec les autres", "DÃ©gÃ¢ts: 19", "DÃ©molition: 6"],
        Pe[Ge.SWORD_GOLD] = ["Ã‰pÃ©e en or", "Roi de la forÃªt", "DÃ©gÃ¢ts: 22", "DÃ©molition: 7"],
        Pe[Ge.SWORD_DIAMOND] = ["Ã‰pÃ©e en diamant", "Tu te sens puissant", "DÃ©gÃ¢ts: 24", "DÃ©molition: 8"],
        Pe[Ge.PIRATE_SWORD] = ["Ã‰pÃ©e de pirate", "Marin d'eau douce!", "Meilleure portÃ©e qu'une Ã©pÃ©e normale", "DÃ©gÃ¢ts: 24", "DÃ©molition: 8"],
        Pe[Ge.SWORD_AMETHYST] = ["Ã‰pÃ©e en amÃ©thyste", "Mauve est la plus belle couleur du monde", "DÃ©gÃ¢ts: 27", "DÃ©molition: 9"],
        Pe[Ge.DRAGON_SWORD] = ["Ã‰pÃ©e du Dragon", "Pas de pitiÃ©!", "DÃ©gÃ¢ts: 30", "DÃ©molition: 10"],
        Pe[Ge.DRAGON_SPEAR] = ["Lance du Dragon", "Tuez-les tous!", "DÃ©gÃ¢ts: 22", "DÃ©molition: 6"],
        Pe[Ge.PICK_WOOD] = ["Pioche en bois", "Peut rÃ©colter du bois et de la pierre", "DÃ©gÃ¢ts: 1"],
        Pe[Ge.PICK] = ["Pioche en pierre", "Peut aussi rÃ©colter de l'or", "DÃ©gÃ¢ts: 2"],
        Pe[Ge.PICK_GOLD] = ["Pioche en or", "Peut aussi rÃ©colter du diamant", "DÃ©gÃ¢ts: 3", "DÃ©molition: 1"],
        Pe[Ge.PICK_DIAMOND] = ["Pioche en diamant", "Peut tout rÃ©colter", "DÃ©gÃ¢ts: 4", "DÃ©molition: 1"],
        Pe[Ge.PICK_AMETHYST] = ["Pioche en amÃ©thyste", "Peut tout rÃ©colter", "DÃ©gÃ¢ts: 5", "DÃ©molition: 1"],
        Pe[Ge.HAMMER] = ["Marteau en pierre", "Utile pour dÃ©truire les bÃ¢timents", "Ne marche pas bien sur du diamant et amÃ©thyste", "DÃ©gÃ¢ts: 2", "DÃ©molition: 20"],
        Pe[Ge.HAMMER_GOLD] = ["Marteau en or", "Utile pour dÃ©truire les bÃ¢timents", "Ne marche pas bien sur l'amÃ©thyste", "DÃ©gÃ¢ts: 3", "DÃ©molition: 30"],
        Pe[Ge.HAMMER_DIAMOND] = ["Marteau en diamant", "Utile pour dÃ©truire les bÃ¢timents", "DÃ©gÃ¢ts: 4", "DÃ©molition: 40"],
        Pe[Ge.HAMMER_AMETHYST] = ["Marteau en amÃ©thyste", "Utile pour dÃ©truire les bÃ¢timents", "DÃ©gÃ¢ts: 5", "DÃ©molition: 50"],
        Pe[Ge.SUPER_HAMMER] = ["Super Marteau", "As-tu prÃ©vu de dÃ©truire le monde?", "DÃ©gÃ¢ts: 12", "DÃ©molition: 70"],
        Pe[Ge.WOOD_SPEAR] = ["Lance en bois", "Plus de peur que de mal", "DÃ©gÃ¢ts: 10", "DÃ©molition: 2"],
        Pe[Ge.SPEAR] = ["Lance en pierre", "C'est le dÃ©but de l'Ã©volution", "DÃ©gÃ¢ts: 14", "DÃ©molition: 4"],
        Pe[Ge.GOLD_SPEAR] = ["Lance en or", "Attention, Ã§a pique!", "DÃ©gÃ¢ts: 15", "Buildings DÃ©gÃ¢ts: 5"],
        Pe[Ge.DIAMOND_SPEAR] = ["Lance en diamant", "Tu es prÃªt Ã  tuer les dragons", "DÃ©gÃ¢ts: 17", "Buildings DÃ©gÃ¢ts: 5"],
        Pe[Ge.AMETHYST_SPEAR] = ["Lance en amÃ©thyste", "Les dragons ne te font plus peur", "DÃ©gÃ¢ts: 18", "Buildings DÃ©gÃ¢ts: 6"],
        Pe[Ge.SHOVEL] = ["Pelle en pierre", "Creuse la terre, le sable et la neige", "Peut aussi rÃ©cupÃ©rer des minÃ©raux", "DÃ©gÃ¢ts: 2"],
        Pe[Ge.SHOVEL_GOLD] = ["Pelle en or", "Creuse la terre, le sable et la neige", "Peut aussi rÃ©cupÃ©rer des minÃ©raux", "DÃ©gÃ¢ts: 3", "Buildings DÃ©gÃ¢ts: 1"],
        Pe[Ge.SHOVEL_DIAMOND] = ["Pelle en diamant", "Creuse la terre, le sable et la neige", "Peut aussi rÃ©cupÃ©rer des minÃ©raux", "DÃ©gÃ¢ts: 4", "Buildings DÃ©gÃ¢ts: 1"],
        Pe[Ge.SHOVEL_AMETHYST] = ["Pelle en amÃ©thyste", "Creuse la terre, le sable et la neige", "Peut aussi rÃ©cupÃ©rer des minÃ©raux", "DÃ©gÃ¢ts: 5", "Buildings DÃ©gÃ¢ts: 1"],
        Pe[Ge.WOOD_HELMET] = ["Casque en bois", "Mieux que rien", "DÃ©fense: 1", "DÃ©fense contre animaux: 4"],
        Pe[Ge.STONE_HELMET] = ["Casque en pierre", "PrÃªt pour la bataille", "DÃ©fense: 2", "DÃ©fense contre animaux: 8"],
        Pe[Ge.GOLD_HELMET] = ["Casque en or", "Alias le casque des sauvages", "DÃ©fense: 4", "DÃ©fense contre animaux: 13"],
        Pe[Ge.DIAMOND_HELMET] = ["Casque en diamant", "Ne te vante pas trop", "DÃ©fense: 5", "DÃ©fense contre animaux: 19"],
        Pe[Ge.AMETHYST_HELMET] = ["Casque en amÃ©thyste", "Tu n'as plus peur de rien", "DÃ©fense: 6", "DÃ©fense contre animaux: 23"],
        Pe[Ge.DRAGON_HELMET] = ["Casque du Dragon", "Tu vas conquÃ©rir le monde", "DÃ©fense: 8", "DÃ©fense contre animaux: 27"],
        Pe[Ge.EXPLORER_HAT] = ["Chapeau d'explorateur", "Les animaux t'ignorent", "Mais ne faites pas de bruit!", "RÃ©chauffe en dehors de l'eau et dans l'hiver"],
        Pe[Ge.CHRISTMAS_HAT] = ["Chapeau du PÃ¨re NoÃ«l", "Oh, oh, oh, Joyeux NÃ¶el!", "RÃ©chauffe en dehors de l'eau et dans l'hiver"],
        Pe[Ge.ELF_HAT] = ["Chapeau du lutin de NÃ¶el", "Tu as vu le nouveau chef d'oeuvre d'Alain Chabat?", "RÃ©chauffe en dehors de l'eau et dans l'hiver"],
        Pe[Ge.HOOD] = ["Capuche", "Voyou!", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas Ã©tÃ© touchÃ© depuis 8 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan", "RÃ©chauffe en dehors de l'eau et dans l'hiver"],
        Pe[Ge.EARMUFFS] = ["Cache-oreilles", "Une sorte de petite chapka.", "RÃ©chauffe en dehors de l'eau et dans l'hiver"],
        Pe[Ge.COAT] = ["Chapka", "Comment Ã§a va, camarade?", "RÃ©chauffe en dehors de l'eau et dans l'hiver"],
        Pe[Ge.CAP_SCARF] = ["Bonnet d'hiver", "TrÃ¨s confortable", "TrÃ¨s chaud"],
        Pe[Ge.PEASANT] = ["Tunique", "Les plantes poussent plus vite", "RÃ©chauffe en dehors de l'eau et dans l'hiver"],
        Pe[Ge.WINTER_HOOD] = ["Capuche d'hiver", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas Ã©tÃ© touchÃ© depuis 4 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan d'hiver", "RÃ©chauffe en dehors de l'eau et dans l'hiver"],
        Pe[Ge.WINTER_PEASANT] = ["Tunique d'hiver", "Tes plantes poussent plus vite", "RÃ©chauffe en dehors de l'eau et dans l'hiver"],
        Pe[Ge.DIVING_MASK] = ["Masque de plongÃ©e", "Tu es rapide dans l'eau", "RÃ©chauffe dans l'eau", "DÃ©fense: 2, DÃ©fense contre animaux: 8"],
        Pe[Ge.SUPER_DIVING_SUIT] = ["Scaphandre", "Tu es trÃ¨s rapide dans l'eau", "RÃ©chauffe dans l'eau", "DÃ©fense: 4, DÃ©fense contre animaux: 16"],
        Pe[Ge.DRAGON_ORB] = ["Orbe du Dragon", "DonnÃ© en QuÃªte"],
        Pe[Ge.DRAGON_HEART] = ["Coeur de Dragon", "Te change en fantÃ´me!", "Tu es un fantÃ´me pendant 1 min", "Trouve une pierre de rÃ©surrection"],
        Pe[Ge.GEMME_GREEN] = ["Gemme verte", "Tu n'as pas trichÃ©, promis?"],
        Pe[Ge.GEMME_ORANGE] = ["Gemme orange", "Seul un vrai pirate peut l'obtenir!"],
        Pe[Ge.GEMME_BLUE] = ["Gemme bleue", "Pour les gens trop gentils"],
        Pe[Ge.CROWN_GREEN] = ["Couronne verte", "Te soigne trÃ¨s rapidement", "Soigne sur le temps: 40", "DÃ©fense: 4, DÃ©fense contre animaux: 16"],
        Pe[Ge.CROWN_ORANGE] = ["Couronne orange", "Tu te sens soudainement trÃ¨s chanceux", "DÃ©fense: 4, DÃ©fense contre animaux: 16"],
        Pe[Ge.CROWN_BLUE] = ["Couronne bleue", "Une fois mort, tu deviens un fantÃ´me", "Tu perdras toutes tes arguments", "DÃ©fense: 4, DÃ©fense contre animaux: 16"],
        Pe[Ge.BUCKET_FULL] = ["Seau", "Utile pour remplir un puit", "Un sceau est Ã©quivalent Ã  20 bouteilles"],
        Pe[Ge.BUCKET_EMPTY] = ["Seau vide", "Pour remplir ce seau, approche-toi d'une source d'eau"],
        Pe[Ge.BOTTLE_FULL] = ["Bouteille", "Te permet de boire n'importe oÃ¹", "Eau: 50"],
        Pe[Ge.BOTTLE_EMPTY] = ["Bouteille vide", "Tu peux remplir cette bouteille prÃ¨s d'une source d'eau"],
        Pe[Ge.WATERING_CAN] = ["Arrosoir vide", "Doit Ãªtre rempli prÃ¨s d'une source d'eau"],
        Pe[Ge.WATERING_CAN_FULL] = ["Arrosoir", "Permet d'arroser les plantes", "DÃ©gÃ¢ts: 1"],
        Pe[Ge.BAG] = ["Sac", "Plus de place dans ton inventaire!"],
        Pe[Ge.PAPER] = ["Papier", "Pour fabriquer toute sorte d'objets"],
        Pe[Ge.BOOK] = ["Livre", "RÃ©duit considÃ©rablement le temps de fabrication", "Doit Ãªtre portÃ© pour fonctionner", "DÃ©gÃ¢ts: 1"],
        Pe[Ge.BANDAGE] = ["Bandage", "Soigne plus rapidement", "Soigne sur le temps: 30", "Effet: 5"],
        Pe[Ge.LOCK] = ["Cadenas", "Pour verrouiller un coffre"],
        Pe[Ge.LOCKPICK] = ["ClÃ©", "Pour dÃ©verrouiller un coffre"],
        Pe[Ge.TOTEM] = ["Totem", "Te permet de crÃ©er une Ã©quipe", "Partage les portes et les coffres", "Les piques ne toucheront pas tes amis"],
        Pe[Ge.BRIDGE] = ["Pont", "TrÃ¨s utile sur l'eau", "Te permet de boire sans te noyer", "Marche plus vite sur l'eau"],
        Pe[Ge.SIGN] = ["Pancarte", "Laisse un message aux autres", "DurabilitÃ©: 200"],
        Pe[Ge.ROOF] = ["Toit", "Te cache un peu et te rÃ©chauffe"],
        Pe[Ge.WELL] = ["Puit", "Permet de remplir des bouteilles", "DurabilitÃ©: 1000"],
        Pe[Ge.WALL] = ["Mur en bois", "Tu connais la danse des murs?", "DurabilitÃ©: 1000"],
        Pe[Ge.STONE_WALL] = ["Mur en pierre", "Ã‡a fait un peu plus sÃ©rieux", "DurabilitÃ©: 1500"],
        Pe[Ge.GOLD_WALL] = ["Mur en or", "De l'or sur tes murs? C'est un peu voyant", "DurabilitÃ©: 2000"],
        Pe[Ge.DIAMOND_WALL] = ["Mur en diamant", "TrÃ¨s brillant, cache tes yeux", "DurabilitÃ©: 2500"],
        Pe[Ge.AMETHYST_WALL] = ["Mur en amÃ©thyste", "Tu dois avoir trÃ¨s peur de sortir dehors!", "DurabilitÃ©: 3500"],
        Pe[Ge.SPIKE] = ["Piques en bois", "Peut blesser tes ennemis", "DÃ©gÃ¢ts: 10, DÃ©gÃ¢ts par coup: 2", "DurabilitÃ©: 150"],
        Pe[Ge.STONE_SPIKE] = ["Pique en pierre", "Je ne voudrais pas Ãªtre ton ennemi", "DÃ©gÃ¢ts: 20", "DÃ©gÃ¢ts par coup: 3", "DurabilitÃ©: 300"],
        Pe[Ge.GOLD_SPIKE] = ["Pique en or", "Tu es si cruel", "DÃ©gÃ¢ts: 30", "DÃ©gÃ¢ts par coup: 3", "DurabilitÃ©: 600"],
        Pe[Ge.DIAMOND_SPIKE] = ["Pique en diamant", "Tu n'as pas l'air d'aimer la compagnie", "DÃ©gÃ¢ts: 40", "DÃ©gÃ¢ts par coup: 4", "DurabilitÃ©: 1200"],
        Pe[Ge.AMETHYST_SPIKE] = ["Pique en amÃ©thyste", "Mais qu'est ce que ton voisin t'a fait?", "DÃ©gÃ¢ts: 50", "DÃ©gÃ¢ts par coup: 4", "DurabilitÃ©: 2400"],
        Pe[Ge.WOOD_DOOR] = ["Porte en bois", "Peut Ãªtre ouvert ou fermÃ© par toi ou tes amis", "DurabilitÃ©: 1000"],
        Pe[Ge.STONE_DOOR] = ["Porte en pierre", "Tu connais les trois petits cochons?", "DurabilitÃ©: 1500"],
        Pe[Ge.GOLD_DOOR] = ["Porte en or", "Tu reconstruis l'el dorado?", "DurabilitÃ©: 2000"],
        Pe[Ge.DIAMOND_DOOR] = ["Porte en diamant", "Pour une maison Ã©clatante", "DurabilitÃ©: 2500"],
        Pe[Ge.AMETHYST_DOOR] = ["Porte en amÃ©thyste", "Est-ce que ta maison est un coffre-fort?", "DurabilitÃ©: 3000"],
        Pe[Ge.FURNACE] = ["ChaudiÃ¨re", "RÃ©chauffe", "Consume du bois toutes les 5 sec", "DurabilitÃ©: 1000"],
        Pe[Ge.WINDMILL] = ["Moulin", "Peut produire de la farine Ã  partir du blÃ©", "Prends 5 sec pour faire de la farine", "Tu obtiens des points quand c'est en marche", "DurabilitÃ©: 2000"],
        Pe[Ge.BREAD_OVEN] = ["Four Ã  pain", "Produit du pain avec de la farine et du bois", "Prends 10 sec pour faire du pain", "Tu obtiens des points quand c'est en marche", "DurabilitÃ©: 2000"],
        Pe[Ge.RESURRECTION] = ["Pierre de rÃ©surrection", "Magie magie!", "Te ressuscite si tu es un fantÃ´me", "Tu perds toutes tes armes", "DurabilitÃ©: 200"],
        Pe[TEXT.YOU_CANNOT_JOIN] = "Tu ne peux pas rejoindre le serveur",
        Pe[TEXT.KICKED] = "ExpulsÃ©: ",
        Pe[TEXT.KEY_ALREADY] = "Ta clÃ© est dÃ©jÃ  utilisÃ©e par quelqu'un d'autre",
        Pe[TEXT.KEY_WRONG] = "Ta clÃ© est fausse",
        Pe[TEXT.OLD_VERSION] = "Tu as une vieille version, rafraichis tes caches",
        Pe[TEXT.NO_MORE_RESOURCES] = "Il n'y a plus de nouvelles ressources",
        Pe[TEXT.SURVIVED_1DAY] = "Tu as survÃ©cu 1 jour",
        Pe[TEXT.SURVIVED] = "Tu as survÃ©cu ",
        Pe[TEXT.DAYS] = " jours",
        Pe[TEXT.DEAD_SAD] = "Tu es mort ;-;",
        Pe[TEXT.SPAM_ME] = "Le serveur ne trouve pas de points d'apparitions! Spam le bouton jouer!",
        Pe[TEXT.SPAM_ME2] = "Le serveur est complet! Spam le bouton jouer",
        Pe[TEXT.EMPTY] = "Cette ressource est vide",
        Pe[TEXT.INV_FULL] = "Ton inventaire est rempli (Clic droit pour supprimer un objet)",
        Pe[TEXT.DEAD] = " est mort",
        Pe[TEXT.WRONG_TOOL] = "Ce n'est pas le bon outil",
        Pe[TEXT.JOIN_TEAM] = "Tu as rejoins une Ã©quipe",
        Pe[TEXT.YOU_DEAD] = "Tu es mort",
        Pe[TEXT.JOINED_TEAM] = " a rejoint l'Ã©quipe",
        Pe[TEXT.TEAM_DESTROYED] = "Ton Ã©quipe a Ã©tÃ© dÃ©truite",
        Pe[TEXT.LEFT_TEAM] = "Tu as quittÃ© l'Ã©quipe",
        Pe[TEXT.LEFT_TEAM2] = " a quittÃ© l'Ã©quipe",
        Pe[TEXT.TOKEN] = "Quelqu'un a volÃ© ton token :>",
        Pe[TEXT.CHOOSE] = "Choisis un serveur",
        Pe[TEXT.PLAYERS] = "joueurs",
        Pe[TEXT.TOTAL_PLAYERS] = "joueurs",
        Pe[TEXT.TOTAL_MODE] = "joueurs dans ce mode",
        Pe[TEXT.COMMING_SOON] = "BientÃ´t...",
        document.getElementById("nickname_input").placeholder = "Surnom",
        n[0] = ["Tu as Ã©tÃ© tuÃ© sans raison particuliÃ¨re, juste comme Ã§a"],
        n[1] = ["Tu es mort de faim, c'est plutÃ´t ironique, non?"],
        n[2] = ["Tu es mort de froid. Dommage", "Tu as fait une hypothermie, la prochaine fois reste prÃ¨s d'un feu"],
        n[3] = ["Un joueur t'a tuÃ©, avant de mourir tu pouvais l'entendre rire", "Un joueur t'a tuÃ©, avec un peu de chance il mourra aussi"],
        n[4] = ["Tu es restÃ© sur un feu trop longtemps et tu es mort suite aux brÃ»lures", "Tu es mort en restant trop longtemps sur un feu, tu voulais finir comme Jeanne d'Arc?"],
        n[5] = ["Ton corps deviendra un nid pour les oeufs d'araignÃ©es."],
        n[6] = ["Ce loup n'aura plus faim aprÃ¨s t'avoir mangÃ©", "Ce ne sont pas des chiens. Les loups n'aiment pas Ãªtre domestiquÃ©s."],
        n[7] = ["Ce renard Ã©tait trop rapide pour toi", "Ce renard t'a transformÃ© en boÃ®te"],
        n[8] = ["Cet ours voulait juste un cÃ¢lin."],
        n[9] = ["Tu as Ã©tÃ© brÃ»lÃ© par un dragon. Quel gÃ¢chis", "Tu t'es fait Ã©craser par un dragon. Une bien terrible faÃ§on de mourir..."],
        n[10] = ["Tu as sautÃ© sur des piques, c'Ã©tait pas une bonne idÃ©e...", "Tu es mort sur des piques. La plupart des gens sont assez sensÃ©s pour ne pas toucher les choses pointues"],
        n[11] = ["MÃªme les fantÃ´mes peuvent mourir", "Tu n'as pas rÃ©ussi Ã  te ressusciter. Mais c'est un jeu, tu reviens Ã  la vie aprÃ¨s Ãªtre mort, donc..."],
        n[12] = ["Une bactÃ©rie logÃ©e dans la viande crue t'a tuÃ©. Ce jeu est vraiment trop dur.", "Tu as tuÃ© l'animal, sa viande t'a tuÃ©."],
        n[13] = ["Tu es mort de soif. La prochaine fois, vas dans un lac, dans la mer ou fais-toi une bouteille"],
        n[14] = ["Tu t'es noyÃ©. Essaye de construire un pont la prochaine fois"],
        n[15] = ["Ne t'inquiÃ¨te pas, le piranha t'a trouvÃ© appÃ©tissant."],
        n[16] = ["Un kraken a 'krakÃ©' tes os."],
        n[17] = ["Ta peau tombe en lambeau, le soleil t'a brÃ»lÃ©."],
        n[18] = ["L'ail dans ta poche a fait bouillir ton cerveau."],
        n[19] = ["En tant que vampire, ne reste pas Ã  cÃ´tÃ© des gousses d'ail."],
        n[20] = ["Tu as mangÃ© de l'ail en tant que vampire, tu t'attendais Ã  quoi?"],
        n[21] = ["Ton corps est tombÃ© dans les ronces. En essayant de t'Ã©chapper, ta peau s'est arrachÃ©e et la douleur a fait arrÃªter de battre ton coeur. lol Ã§a rime."],
        ZOMBIE_GRUMBLE = "Uuunnnggg",
        ZOMBIE_GRUMBLES = ["Uuunnnggg... J'ai faim", "Manger cerveau, Uuunnnggg...", "Viande fraÃ®che ici... Uuunnnggg", "Uuunnnggg... Tu as l'air bon", "Uuunnnggg...", "Manger... uuunnnggg...", "Je peux sentir ton sang... Uuunnnggg"]
    }
    for (var e = 0, Le = {
        GROUND: ["#133A2B", "#042b30"],
        SNOW_GROUND: ["#EBF2F0", "#136167"],
        CRAFT_LOADING: ["#4EB687", "#187484"],
        BROWN_LIFE: ["#664516", "#13474C"],
        SAND_COLOR: ["#FCEFBB", "#0F4D48"],
        SAND_SHOVEL_CO: ["#C1AA7E", "#0F423D"],
        GRD_SHOVEL_CO: ["#594837", "#163A3A"],
        ICE_SHOVEL_CO: ["#A5D6D6", "#539CA0"],
        WATER_3_COLOR: ["#0B6A84", "#09373F"],
        WATER_2_COLOR: ["#2A8B9B", "#0F464C"],
        WATER_1_COLOR: ["#A9D6D3", "#115E60"],
        FLOAM_COLOR: ["#ECF7F9", "#539CA0"],
        WEAPON_LOADING: ["#FFF", "#FFF"],
        HELMET_LOADING: ["#FFF", "#FFF"],
        SWIM_COLOR: ["#1C9BA4", "#00272F"],
        LAVA_GROUND: ["#2D2017", "#031C1E"],
        DAY: 0,
        NIGHT: 1,
        DRAGON_DEN_X: 2300,
        DRAGON_DEN_Y: 2290,
        FLAKES_NUMBER: 34,
        FLAKES_SIZES: 5,
        SAND_NUMBER: 68,
        ASHES_NUMBER: 34,
        ASHES_SIZES: 5,
        SMOG: 1,
        SMOG_PUSH: .6,
        SMOG_SPEED: .25,
        STEP_SPACE: 50,
        TRAIL_SPACE: 10,
        SWIM_SPACE: 75,
        GHOST_BUBBLES: 20,
        BUBBLES_SIZES: 5,
        SWORD: e++,
        PICK: e++,
        FUR: e++,
        PICK_GOLD: e++,
        PICK_DIAMOND: e++,
        SWORD_GOLD: e++,
        SWORD_DIAMOND: e++,
        HAND: e++,
        PICK_WOOD: e++,
        PIRATE_SWORD: e++,
        EARMUFFS: e++,
        COAT: e++,
        WOOD_SPEAR: e++,
        SPEAR: e++,
        GOLD_SPEAR: e++,
        DIAMOND_SPEAR: e++,
        DRAGON_SPEAR: e++,
        LAVA_SPEAR: e++,
        CRAB_SPEAR: e++,
        REIDITE_SWORD: e++,
        DIAMOND_PROTECTION: e++,
        AMETHYST_PROTECTION: e++,
        REIDITE_PROTECTION: e++,
        EXPLORER_HAT: e++,
        PIRATE_HAT: e++,
        STONE_HELMET: e++,
        GOLD_HELMET: e++,
        DIAMOND_HELMET: e++,
        BOOK: e++,
        BAG: e++,
        SWORD_AMETHYST: e++,
        PICK_AMETHYST: e++,
        PICK_REIDITE: e++,
        AMETHYST_SPEAR: e++,
        REIDITE_SPEAR: e++,
        HAMMER: e++,
        HAMMER_GOLD: e++,
        HAMMER_DIAMOND: e++,
        HAMMER_AMETHYST: e++,
        HAMMER_REIDITE: e++,
        CAP_SCARF: e++,
        CHRISTMAS_HAT: e++,
        ELF_HAT: e++,
        AMETHYST_HELMET: e++,
        REIDITE_HELMET: e++,
        SUPER_HAMMER: e++,
        SHOVEL: e++,
        SUPER_DIVING_SUIT: e++,
        DIVING_MASK: e++,
        WATERING_CAN_FULL: e++,
        SHOVEL_GOLD: e++,
        SHOVEL_DIAMOND: e++,
        SHOVEL_AMETHYST: e++,
        PITCHFORK: e++,
        PITCHFORK2: e++,
        SPANNER: e++,
        MACHETE: e++,
        SWORD_WOOD: e++,
        WOOD_HELMET: e++,
        DRAGON_HELMET: e++,
        LAVA_HELMET: e++,
        CROWN_CRAB: e++,
        DRAGON_SWORD: e++,
        LAVA_SWORD: e++,
        WOOD_BOW: e++,
        STONE_BOW: e++,
        GOLD_BOW: e++,
        DIAMOND_BOW: e++,
        AMETHYST_BOW: e++,
        REIDITE_BOW: e++,
        DRAGON_BOW: e++,
        WOOD_SHIELD: e++,
        STONE_SHIELD: e++,
        GOLD_SHIELD: e++,
        DIAMOND_SHIELD: e++,
        AMETHYST_SHIELD: e++,
        REIDITE_SHIELD: e++,
        CROWN_GREEN: e++,
        CROWN_ORANGE: e++,
        CROWN_BLUE: e++,
        TURBAN1: e++,
        TURBAN2: e++,
        PILOT_HELMET: e++,
        HOOD: e++,
        PEASANT: e++,
        WINTER_HOOD: e++,
        WINTER_PEASANT: e++,
        FLOWER_HAT: e++,
        FUR_HAT: e++,
        SADDLE: e++,
        WITCH: e++,
        NIMBUS: e++,
        WAND1: e++,
        WAND2: e++,
        FIREFLY_ITEM: e++,
        WOOD_ARROW: e++,
        STONE_ARROW: e++,
        GOLD_ARROW: e++,
        DIAMOND_ARROW: e++,
        AMETHYST_ARROW: e++,
        REIDITE_ARROW: e++,
        DRAGON_ARROW: e++,
        STONES: e++,
        TREE: e++,
        PLANT: e++,
        GOLD: e++,
        DIAMOND: e++,
        WOOD_FIRE: e++,
        WORKBENCH: e++,
        PLANT_SEED: e++,
        MEAT: e++,
        COOKED_MEAT: e++,
        BIG_FIRE_WOOD: e++,
        FURNACE_OFF: e++,
        PAPER: e++,
        AMETHYST: e++,
        AMETHYST_WALL: e++,
        AMETHYST_SPIKE: e++,
        DOOR_AMETHYST_CLOSE: e++,
        BRIDGE: e++,
        SAND: e++,
        BOTTLE_FULL: e++,
        BOTTLE_EMPTY: e++,
        KRAKEN_SKIN: e++,
        WATERING_CAN: e++,
        FLOUR: e++,
        WHEAT_SEED: e++,
        COOKIE: e++,
        WILD_WHEAT: e++,
        WINDMILL: e++,
        CAKE: e++,
        FOODFISH: e++,
        FOODFISH_COOKED: e++,
        SCALES: e++,
        INV_GROUND: e++,
        PLOT: e++,
        INV_ICE: e++,
        INV_BREAD: e++,
        BREAD_OVEN_OFF: e++,
        INV_SANDWICH: e++,
        FUR_WINTER: e++,
        BLUE_CORD: e++,
        LOCK: e++,
        DRAGON_HEART: e++,
        LAVA_HEART: e++,
        RESURRECTION: e++,
        EMERALD_MACHINE: e++,
        EXTRACTOR_MACHINE_STONE: e++,
        EXTRACTOR_MACHINE_GOLD: e++,
        EXTRACTOR_MACHINE_DIAMOND: e++,
        EXTRACTOR_MACHINE_AMETHYST: e++,
        EXTRACTOR_MACHINE_REIDITE: e++,
        LOCKPICK: e++,
        TOTEM: e++,
        SPIKE: e++,
        CORD: e++,
        WALL: e++,
        STONE_WALL: e++,
        GOLD_WALL: e++,
        DIAMOND_WALL: e++,
        DOOR_WOOD_CLOSE: e++,
        CHEST: e++,
        STONE_SPIKE: e++,
        GOLD_SPIKE: e++,
        DIAMOND_SPIKE: e++,
        DOOR_STONE_CLOSE: e++,
        DOOR_GOLD_CLOSE: e++,
        DOOR_DIAMOND_CLOSE: e++,
        FUR_WOLF: e++,
        INV_GEMME_BLUE: e++,
        INV_GEMME_GREEN: e++,
        INV_GEMME_ORANGE: e++,
        INV_SPECIAL_FUR: e++,
        INV_SPECIAL_FUR_2: e++,
        INV_BUCKET_FULL: e++,
        INV_BUCKET_EMPTY: e++,
        WELL_EMPTY: e++,
        SIGN: e++,
        DRAGON_CUBE: e++,
        DRAGON_ORB: e++,
        LAVA_CUBE: e++,
        LAVA_ORB: e++,
        PLANT_PUMPKIN: e++,
        PUMPKIN: e++,
        ROOF: e++,
        PLANT_GARLIC: e++,
        GARLIC: e++,
        PLANT_THORNBUSH: e++,
        THORNBUSH: e++,
        BANDAGE: e++,
        INV_CRAB_STICK: e++,
        INV_CRAB_LOOT: e++,
        BED: e++,
        SUGAR_CAN: e++,
        INV_CANDY: e++,
        GARLAND: e++,
        REIDITE: e++,
        MAGMA: e++,
        PLANT_CARROT: e++,
        CARROT: e++,
        PLANT_TOMATO: e++,
        TOMATO: e++,
        PLANT_WATERMELON: e++,
        WATERMELON: e++,
        PLANT_ALOE_VERA: e++,
        ALOE_VERA_GROWN: e++,
        WOOD_DOOR_SPIKE: e++,
        STONE_DOOR_SPIKE: e++,
        GOLD_DOOR_SPIKE: e++,
        DIAMOND_DOOR_SPIKE: e++,
        AMETHYST_DOOR_SPIKE: e++,
        REIDITE_WALL: e++,
        REIDITE_DOOR: e++,
        REIDITE_SPIKE: e++,
        REIDITE_DOOR_SPIKE: e++,
        WOOD_TOWER: e++,
        PENGUIN_FEATHER: e++,
        BOAT: e++,
        SLED: e++,
        BOAT_WAVE: e++,
        SLED_WAVE: e++,
        MOUNT_BOAR: e++,
        BOAR_STEP: e++,
        CRAB_STICK: e++,
        CRAB_LOOT: e++,
        CRAB_BOSS: e++,
        BABY_DRAGON: e++,
        BABY_LAVA: e++,
        CRAB_STEP: e++,
        HAWK: e++,
        PLANE: e++,
        HAWK_FEATHER: e++,
        VULTURE: e++,
        ALOE_VERA: e++,
        VULTURE_FEATHER: e++,
        EMERALD: e++,
        FUR_BOAR: e++,
        DECORATION: e++,
        FOD: e++,
        FIREFLY: e++,
        HURT_FIREFLY: e++,
        SPELL: e++,
        BABY_MAMMOTH: e++,
        BABY_MAMMOTH_STEP: e++,
        CRATE: e++,
        SEED: e++,
        INV_DRAGON_ORB: e++,
        INV_LAVA_ORB: e++,
        CRAFT_SWORD: e++,
        BODY: e++,
        CRAFT_PICK: e++,
        CRAFT_PICK_DIAMOND: e++,
        INV_PICK_GOLD: e++,
        MINIMAP: e++,
        SPIDER: e++,
        INV_SWORD: e++,
        CRAFT_WORK: e++,
        CRAFT_STONE_WALL: e++,
        RABBIT: e++,
        CRAFT_GOLD_WALL: e++,
        WEB: e++,
        GAUGES: e++,
        CRAFT_DOOR_WOOD_CLOSE: e++,
        CHEST_PLANT: e++,
        CHEST_GOLD: e++,
        CHEST_DIAMOND: e++,
        CHEST_PICK_GOLD: e++,
        CHEST_FIRE: e++,
        CHEST_PICK_WOOD: e++,
        CHEST_MEAT: e++,
        CHEST_BIG_FIRE: e++,
        INV_PLANT: e++,
        LEADERBOARD: e++,
        HURT: e++,
        COLD: e++,
        HUNGER: e++,
        GROUND_FIRE: e++,
        COUNTER: e++,
        CRAFT_SEED: e++,
        HERB: e++,
        HAND_SHADOW: e++,
        PLANT_MINI: e++,
        FIRE: e++,
        HALO_FIRE: e++,
        CRAFT_SWORD_GOLD: e++,
        CRAFT_SWORD_DIAMOND: e++,
        INV_SWORD_GOLD: e++,
        INV_SWORD_DIAMOND: e++,
        FRUIT: e++,
        CRAFT_PICK_GOLD: e++,
        INV_PICK_DIAMOND: e++,
        INV_GOLD: e++,
        INV_DIAMOND: e++,
        WOLF: e++,
        INV_MEAT: e++,
        GEAR2: e++,
        CRAFT_FIRE: e++,
        INV_BANDAGE: e++,
        CRAFT_BANDAGE: e++,
        INV_CORD: e++,
        YOUR_SCORE: e++,
        TREE_BRANCH: e++,
        HEAL: e++,
        INV_FIRE: e++,
        INV_WORK: e++,
        INV_SEED: e++,
        INV_PICK: e++,
        INV_PICK_WOOD: e++,
        CRAFT_PICK_WOOD: e++,
        INV_STONE: e++,
        INV_WOOD: e++,
        INV_WALL: e++,
        CRAFT_WALL: e++,
        INV_SPIKE: e++,
        CRAFT_SPIKE: e++,
        WHEAT_MOB: e++,
        HURT_RABBIT: e++,
        INV_COOKED_MEAT: e++,
        GEAR: e++,
        CRAFT_COOKED_MEAT: e++,
        HURT_WOLF: e++,
        CRAFT_BIG_FIRE: e++,
        INV_BIG_FIRE: e++,
        INV_STONE_WALL: e++,
        INV_GOLD_WALL: e++,
        INV_DIAMOND_WALL: e++,
        CRAFT_DIAMOND_WALL: e++,
        HURT_SPIDER: e++,
        EMPTY_SLOT: e++,
        INV_DOOR_WOOD_CLOSE: e++,
        DOOR_WOOD_OPEN: e++,
        INV_CHEST: e++,
        CRAFT_CHEST: e++,
        CHEST_SLOT: e++,
        CHEST_SWORD: e++,
        CHEST_PICK: e++,
        CHEST_STONE: e++,
        CHEST_WOOD: e++,
        CHEST_PICK_DIAMOND: e++,
        CHEST_SWORD_GOLD: e++,
        CHEST_SWORD_DIAMOND: e++,
        CHEST_WORK: e++,
        CHEST_SEED: e++,
        CHEST_WALL: e++,
        CHEST_SPIKE: e++,
        CHEST_COOKED_MEAT: e++,
        CHEST_BANDAGE: e++,
        CHEST_CORD: e++,
        CHEST_STONE_WALL: e++,
        CHEST_GOLD_WALL: e++,
        CHEST_DIAMOND_WALL: e++,
        CHEST_DOOR_WOOD_CLOSE: e++,
        CHEST_WORKBENCH: e++,
        CHEST_CHEST: e++,
        CRAFT_STONE_SPIKE: e++,
        INV_STONE_SPIKE: e++,
        INV_GOLD_SPIKE: e++,
        CRAFT_GOLD_SPIKE: e++,
        INV_DIAMOND_SPIKE: e++,
        CRAFT_DIAMOND_SPIKE: e++,
        CHEST_PLUS: e++,
        CRAFT_BAG: e++,
        INV_FUR: e++,
        INV_EARMUFFS: e++,
        CRAFT_EARMUFFS: e++,
        CRAFT_DOOR_STONE_CLOSE: e++,
        INV_DOOR_STONE_CLOSE: e++,
        DOOR_STONE_OPEN: e++,
        CRAFT_DOOR_GOLD_CLOSE: e++,
        INV_DOOR_GOLD_CLOSE: e++,
        DOOR_GOLD_OPEN: e++,
        CRAFT_DOOR_DIAMOND_CLOSE: e++,
        INV_DOOR_DIAMOND_CLOSE: e++,
        DOOR_DIAMOND_OPEN: e++,
        CRAFT_COAT: e++,
        INV_COAT: e++,
        CHEST_STONE_SPIKE: e++,
        CHEST_GOLD_SPIKE: e++,
        CHEST_DIAMOND_SPIKE: e++,
        CHEST_BAG: e++,
        CHEST_FUR: e++,
        CHEST_EARMUFFS: e++,
        CHEST_DOOR_STONE_CLOSE: e++,
        CHEST_DOOR_GOLD_CLOSE: e++,
        CHEST_DOOR_DIAMOND_CLOSE: e++,
        CHEST_COAT: e++,
        INV_BAG: e++,
        INV_FUR_WOLF: e++,
        CHEST_FUR_WOLF: e++,
        INV_SPEAR: e++,
        CRAFT_SPEAR: e++,
        CHEST_SPEAR: e++,
        INV_GOLD_SPEAR: e++,
        CRAFT_GOLD_SPEAR: e++,
        CHEST_GOLD_SPEAR: e++,
        INV_WOOD_SPEAR: e++,
        CRAFT_WOOD_SPEAR: e++,
        CHEST_WOOD_SPEAR: e++,
        INV_DIAMOND_SPEAR: e++,
        CRAFT_DIAMOND_SPEAR: e++,
        CHEST_DIAMOND_SPEAR: e++,
        FURNACE_ON: e++,
        INV_FURNACE: e++,
        CRAFT_FURNACE: e++,
        CHEST_FURNACE: e++,
        FURNACE_SLOT: e++,
        FURNACE_BUTTON: e++,
        FIR: e++,
        STONES_WINTER: e++,
        GOLD_WINTER: e++,
        DIAMOND_WINTER: e++,
        GROUND_FIRE_WINTER: e++,
        INV_AMETHYST: e++,
        FOX: e++,
        INV_EXPLORER_HAT: e++,
        CRAFT_EXPLORER_HAT: e++,
        CHEST_EXPLORER_HAT: e++,
        INV_PIRATE_HAT: e++,
        CRAFT_PIRATE_HAT: e++,
        CHEST_PIRATE_HAT: e++,
        INV_PILOT_HELMET: e++,
        CRAFT_PILOT_HELMET: e++,
        CHEST_PILOT_HELMET: e++,
        INV_STONE_HELMET: e++,
        CRAFT_STONE_HELMET: e++,
        CHEST_STONE_HELMET: e++,
        INV_GOLD_HELMET: e++,
        CRAFT_GOLD_HELMET: e++,
        CHEST_GOLD_HELMET: e++,
        INV_DIAMOND_HELMET: e++,
        CRAFT_DIAMOND_HELMET: e++,
        CHEST_DIAMOND_HELMET: e++,
        INV_BOOK: e++,
        CRAFT_BOOK: e++,
        CHEST_BOOK: e++,
        INV_PAPER: e++,
        CRAFT_PAPER: e++,
        CHEST_PAPER: e++,
        HERB_WINTER: e++,
        BEAR: e++,
        CHEST_AMETHYST: e++,
        SNOW: e++,
        DRAGON_GROUND: e++,
        DRAGON: e++,
        LAVA_DRAGON: e++,
        WING_LEFT: e++,
        WING_RIGHT: e++,
        LAVA_WING_LEFT: e++,
        LAVA_WING_RIGHT: e++,
        INV_SWORD_AMETHYST: e++,
        CRAFT_SWORD_AMETHYST: e++,
        CHEST_SWORD_AMETHYST: e++,
        INV_PICK_AMETHYST: e++,
        CHEST_PICK_AMETHYST: e++,
        CRAFT_PICK_AMETHYST: e++,
        HURT_FOX: e++,
        HURT_BEAR: e++,
        HURT_DRAGON: e++,
        HURT_LAVA_DRAGON: e++,
        SLOT_NUMBER: e++,
        HURT_WING_LEFT: e++,
        HURT_WING_RIGHT: e++,
        HURT_LAVA_WING_LEFT: e++,
        HURT_LAVA_WING_RIGHT: e++,
        FLAKES: e++,
        DESERT: e++,
        INV_AMETHYST_SPEAR: e++,
        CRAFT_AMETHYST_SPEAR: e++,
        CHEST_AMETHYST_SPEAR: e++,
        SNOW_STEP: e++,
        LAVA_STEP: e++,
        INV_HAMMER: e++,
        CRAFT_HAMMER: e++,
        CHEST_HAMMER: e++,
        INV_HAMMER_GOLD: e++,
        CRAFT_HAMMER_GOLD: e++,
        CHEST_HAMMER_GOLD: e++,
        INV_HAMMER_DIAMOND: e++,
        CRAFT_HAMMER_DIAMOND: e++,
        CHEST_HAMMER_DIAMOND: e++,
        INV_HAMMER_AMETHYST: e++,
        CRAFT_HAMMER_AMETHYST: e++,
        CHEST_HAMMER_AMETHYST: e++,
        INV_HAMMER_REIDITE: e++,
        CRAFT_HAMMER_REIDITE: e++,
        CHEST_HAMMER_REIDITE: e++,
        INV_AMETHYST_WALL: e++,
        CRAFT_AMETHYST_WALL: e++,
        CHEST_AMETHYST_WALL: e++,
        INV_AMETHYST_SPIKE: e++,
        CRAFT_AMETHYST_SPIKE: e++,
        CHEST_AMETHYST_SPIKE: e++,
        CRAFT_DOOR_AMETHYST_CLOSE: e++,
        INV_DOOR_AMETHYST_CLOSE: e++,
        DOOR_AMETHYST_OPEN: e++,
        CHEST_DOOR_AMETHYST_CLOSE: e++,
        INV_CAP_SCARF: e++,
        CRAFT_CAP_SCARF: e++,
        CHEST_CAP_SCARF: e++,
        INV_FUR_WINTER: e++,
        CHEST_FUR_WINTER: e++,
        SLOT_NUMBER: e++,
        DOOR_WOOD_OPEN_WINTER: e++,
        DOOR_STONE_OPEN_WINTER: e++,
        DOOR_GOLD_OPEN_WINTER: e++,
        DOOR_DIAMOND_OPEN_WINTER: e++,
        DOOR_AMETHYST_OPEN_WINTER: e++,
        INV_BLUE_CORD: e++,
        CHEST_BLUE_CORD: e++,
        CRAFT_BLUE_CORD: e++,
        BIGMAP: e++,
        SHOW_SPECTATORS: e++,
        INV_LOCK: e++,
        CRAFT_LOCK: e++,
        CHEST_LOCK: e++,
        INV_DRAGON_HEART: e++,
        CHEST_DRAGON_HEART: e++,
        INV_LAVA_HEART: e++,
        CHEST_LAVA_HEART: e++,
        RECONNECT: e++,
        RESURRECTION_GROUND: e++,
        RESURRECTION_HOLE: e++,
        RESURRECTION_ROTATE: e++,
        INV_RESURRECTION: e++,
        CRAFT_RESURRECTION: e++,
        CHEST_RESURRECTION: e++,
        INV_LOCKPICK: e++,
        CRAFT_LOCKPICK: e++,
        CHEST_LOCKPICK: e++,
        KEY: e++,
        PADLOCK: e++,
        DELAY_WEAPON: e++,
        LOCKED: e++,
        PADLOCK_ON_CHEST: e++,
        BUBBLES: e++,
        INV_AMETHYST_HELMET: e++,
        CRAFT_AMETHYST_HELMET: e++,
        CHEST_AMETHYST_HELMET: e++,
        SPECIAL_ITEMS: e++,
        POINTS: e++,
        AUTO_FEED: e++,
        BANDAGE_ACTIVATED: e++,
        STOP_REGENERATION: e++,
        STOP_REGENERATION_BLIZZARD: e++,
        INV_SUPER_HAMMER: e++,
        CRAFT_SUPER_HAMMER: e++,
        CHEST_SUPER_HAMMER: e++,
        INV_TOTEM: e++,
        CHEST_TOTEM: e++,
        CRAFT_TOTEM: e++,
        TEAM_BUTTON: e++,
        MANAGE_TEAM_BUTTON: e++,
        ICON_MEMBER: e++,
        ICON_LEADER: e++,
        FULL_TEAM_BUTTON: e++,
        SHOW_TEAM_BUTTON: e++,
        DELAY_TEAM: e++,
        INV_DRAGON_SWORD: e++,
        CRAFT_DRAGON_SWORD: e++,
        CHEST_DRAGON_SWORD: e++,
        INV_LAVA_SWORD: e++,
        CRAFT_LAVA_SWORD: e++,
        CHEST_LAVA_SWORD: e++,
        INV_WOOD_BOW: e++,
        CRAFT_WOOD_BOW: e++,
        CHEST_WOOD_BOW: e++,
        INV_STONE_BOW: e++,
        CRAFT_STONE_BOW: e++,
        CHEST_STONE_BOW: e++,
        INV_GOLD_BOW: e++,
        CRAFT_GOLD_BOW: e++,
        CHEST_GOLD_BOW: e++,
        INV_DIAMOND_BOW: e++,
        CRAFT_DIAMOND_BOW: e++,
        CHEST_DIAMOND_BOW: e++,
        INV_AMETHYST_BOW: e++,
        CRAFT_AMETHYST_BOW: e++,
        CHEST_AMETHYST_BOW: e++,
        INV_REIDITE_BOW: e++,
        CRAFT_REIDITE_BOW: e++,
        CHEST_REIDITE_BOW: e++,
        INV_DRAGON_BOW: e++,
        CRAFT_DRAGON_BOW: e++,
        CHEST_DRAGON_BOW: e++,
        CHEST_DRAGON_ORB: e++,
        CHEST_LAVA_ORB: e++,
        SHOP: e++,
        CURSED_SWORD: e++,
        INV_CURSED_SWORD: e++,
        CRAFT_CURSED_SWORD: e++,
        CHEST_CURSED_SWORD: e++,
        ITEM1: e++,
        ITEM2: e++,
        ITEM3: e++,
        ITEM4: e++,
        SAND_BORDER: e++,
        SAND_STEP: e++,
        OCEAN: e++,
        CRAFT_BRIDGE: e++,
        INV_BRIDGE: e++,
        CHEST_BRIDGE: e++,
        LACK: e++,
        OXYGEN: e++,
        INV_SAND: e++,
        CHEST_SAND: e++,
        CRAFT_BOTTLE_EMPTY: e++,
        INV_BOTTLE_EMPTY: e++,
        INV_BOTTLE_FULL: e++,
        CHEST_BOTTLE_EMPTY: e++,
        CHEST_BOTTLE_FULL: e++,
        INV_SHOVEL: e++,
        CHEST_SHOVEL: e++,
        CRAFT_SHOVEL: e++,
        LAKE_DEEP: e++,
        LAKE: e++,
        LAKE_EDGE: e++,
        SHINGLE: e++,
        DRIED_PLANT: e++,
        INV_KRAKEN_SKIN: e++,
        CHEST_KRAKEN_SKIN: e++,
        INV_WATERING_CAN: e++,
        CRAFT_WATERING_CAN: e++,
        CHEST_WATERING_CAN: e++,
        INV_FLOUR: e++,
        CHEST_FLOUR: e++,
        INV_WHEAT_SEED: e++,
        CRAFT_WHEAT_SEED: e++,
        CHEST_WHEAT_SEED: e++,
        INV_COOKIE: e++,
        CRAFT_COOKIE: e++,
        CHEST_COOKIE: e++,
        KRAKEN: e++,
        DRIED_WHEAT: e++,
        INV_WILD_WHEAT: e++,
        CHEST_WILD_WHEAT: e++,
        WINDMILL_WINGS: e++,
        WINDMILL_HEAD: e++,
        CRAFT_WINDMILL: e++,
        INV_WINDMILL: e++,
        CHEST_WINDMILL: e++,
        INV_SUPER_DIVING_SUIT: e++,
        CRAFT_SUPER_DIVING_SUIT: e++,
        CHEST_SUPER_DIVING_SUIT: e++,
        INV_DIVING_MASK: e++,
        CRAFT_DIVING_MASK: e++,
        CHEST_DIVING_MASK: e++,
        INV_WATERING_CAN_FULL: e++,
        CHEST_WATERING_CAN_FULL: e++,
        CRAFT_WATERING_CAN_FULL: e++,
        WINDMILL_CASES: e++,
        EXTRACTOR_CASES: e++,
        WINDMILL_WHEAT_SEED: e++,
        WINDMILL_FLOUR: e++,
        INV_CAKE: e++,
        CRAFT_CAKE: e++,
        CHEST_CAKE: e++,
        INV_FOODFISH: e++,
        CHEST_FOODFISH: e++,
        INV_FOODFISH_COOKED: e++,
        CHEST_FOODFISH_COOKED: e++,
        CRAFT_FOODFISH_COOKED: e++,
        DELAY_DRINK: e++,
        WHEAT_SEED_DRIED: e++,
        HEART_SYMBOL_HUD: e++,
        COLD_SYMBOL_HUD: e++,
        FOOD_SYMBOL_HUD: e++,
        WATER_SYMBOL_HUD: e++,
        PIRANHA: e++,
        INV_SCALES: e++,
        CHEST_SCALES: e++,
        CAVE_STONES: e++,
        HERB_CAVE: e++,
        WATERBLOCK: e++,
        SHADOW_CAVE_STONES: e++,
        CAVE_STEP: e++,
        DELAY_SPIKE: e++,
        CHEST_GROUND: e++,
        CHEST_PLOT: e++,
        CRAFT_PLOT: e++,
        INV_PLOT: e++,
        CHEST_ICE: e++,
        HURT_KRAKEN: e++,
        HURT_PIRANHA: e++,
        CHEST_BREAD: e++,
        CRAFT_BREAD: e++,
        TREASURE_CHEST: e++,
        ISLAND: e++,
        PALM: e++,
        WAVE_ONE: e++,
        WAVE_TWO: e++,
        ISLAND_BLOCK: e++,
        HURT_TREASURE_CHEST: e++,
        ISLAND_STEP: e++,
        INV_SHOVEL_GOLD: e++,
        CRAFT_SHOVEL_GOLD: e++,
        CHEST_SHOVEL_GOLD: e++,
        INV_SHOVEL_DIAMOND: e++,
        CHEST_SHOVEL_DIAMOND: e++,
        CRAFT_SHOVEL_DIAMOND: e++,
        INV_SHOVEL_AMETHYST: e++,
        CRAFT_SHOVEL_AMETHYST: e++,
        CHEST_SHOVEL_AMETHYST: e++,
        RECIPE_BUTTON: e++,
        INV_SPANNER: e++,
        CHEST_SPANNER: e++,
        CRAFT_SPANNER: e++,
        INV_MACHETE: e++,
        CHEST_MACHETE: e++,
        CRAFT_MACHETE: e++,
        CRAFT_BOTTLE_FULL: e++,
        BREAD_OVEN_ON: e++,
        INV_BREAD_OVEN: e++,
        CRAFT_BREAD_OVEN: e++,
        CHEST_BREAD_OVEN: e++,
        BREAD_LIGHT_UP: e++,
        BREAD_LIGHT_DOWN: e++,
        BREAD_OVEN_UI: e++,
        BREAD_OVEN_WOOD: e++,
        BREAD_OVEN_BREAD: e++,
        CLOCK: e++,
        ARROW_CLOCK: e++,
        OPTION_BUTTON: e++,
        DEAD_BOX: e++,
        HURT_DEAD_BOX: e++,
        CRAFT_SANDWICH: e++,
        CHEST_SANDWICH: e++,
        INV_DRAGON_HELMET: e++,
        CHEST_DRAGON_HELMET: e++,
        CRAFT_DRAGON_HELMET: e++,
        INV_LAVA_HELMET: e++,
        CHEST_LAVA_HELMET: e++,
        CRAFT_LAVA_HELMET: e++,
        INV_WITCH: e++,
        CHEST_WITCH: e++,
        CRAFT_WITCH: e++,
        INV_NIMBUS: e++,
        CHEST_NIMBUS: e++,
        CRAFT_NIMBUS: e++,
        INV_WAND1: e++,
        CHEST_WAND1: e++,
        CRAFT_WAND1: e++,
        INV_WAND2: e++,
        CHEST_WAND2: e++,
        CRAFT_WAND2: e++,
        DRAGON_SWORD_HALO: e++,
        INV_DRAGON_CUBE: e++,
        CHEST_DRAGON_CUBE: e++,
        INV_LAVA_CUBE: e++,
        CHEST_LAVA_CUBE: e++,
        QUEST_BUTTON: e++,
        INV_CROWN_GREEN: e++,
        CHEST_CROWN_GREEN: e++,
        CRAFT_CROWN_GREEN: e++,
        CHEST_GEMME_GREEN: e++,
        INV_CROWN_ORANGE: e++,
        CHEST_CROWN_ORANGE: e++,
        CRAFT_CROWN_ORANGE: e++,
        CHEST_GEMME_ORANGE: e++,
        INV_CROWN_BLUE: e++,
        CHEST_CROWN_BLUE: e++,
        CHEST_GEMME_BLUE: e++,
        INV_HOOD: e++,
        CRAFT_HOOD: e++,
        CHEST_HOOD: e++,
        CRAFT_CROWN_BLUE: e++,
        INV_PEASANT: e++,
        CRAFT_PEASANT: e++,
        CHEST_PEASANT: e++,
        CHEST_SPECIAL_FUR: e++,
        CHEST_SPECIAL_FUR_2: e++,
        INV_WINTER_PEASANT: e++,
        CRAFT_WINTER_PEASANT: e++,
        CHEST_WINTER_PEASANT: e++,
        INV_WINTER_HOOD: e++,
        CRAFT_WINTER_HOOD: e++,
        CHEST_WINTER_HOOD: e++,
        SOUND_BUTTON_ON: e++,
        SOUND_BUTTON_OFF: e++,
        CRAFT_BUCKET_FULL: e++,
        CRAFT_BUCKET_EMPTY: e++,
        CHEST_BUCKET_FULL: e++,
        CHEST_BUCKET_EMPTY: e++,
        WELL_FULL: e++,
        INV_WELL: e++,
        CHEST_WELL: e++,
        CRAFT_WELL: e++,
        DELAY_HELMET: e++,
        GLOVES_HOOD: e++,
        DELAY_WALL: e++,
        MARKET_BUTTON: e++,
        ACCESSORY: e++,
        MARKET_BGD: e++,
        DEAD_BOX_UI: e++,
        CRAFT_SIGN: e++,
        INV_SIGN: e++,
        CHEST_SIGN: e++,
        SYMBOLS: e++,
        SIGN_BUTTON: e++,
        TREE_WEB1: e++,
        TREE_WEB2: e++,
        TREE_BRANCH_WEB1: e++,
        TREE_BRANCH_WEB2: e++,
        INV_PUMPKIN_SEED: e++,
        CRAFT_PUMPKIN_SEED: e++,
        CHEST_PUMPKIN_SEED: e++,
        PUMPKIN_SEED_MOB: e++,
        PLANT_PUMPKIN_DRIED: e++,
        DRIED_PUMPKIN: e++,
        INV_PUMPKIN: e++,
        CHEST_PUMPKIN: e++,
        HALO_FIRE_PUMPKIN: e++,
        GROUND_FIRE_PUMPKIN: e++,
        MINIMAP_CTX: e++,
        BIGMAP_CTX: e++,
        ZOMBIE_BODY: e++,
        ZOMBIE_HEAD: e++,
        ZOMBIE_HAND: e++,
        ZOMBIE_HURT: e++,
        ZOMBIE_HUNGER: e++,
        ZOMBIE_HEAL: e++,
        INV_WOOD_HELMET: e++,
        CRAFT_WOOD_HELMET: e++,
        CHEST_WOOD_HELMET: e++,
        INV_SWORD_WOOD: e++,
        CRAFT_SWORD_WOOD: e++,
        CHEST_SWORD_WOOD: e++,
        ZOMBIE_PLAYER: e++,
        VAMPIRE: e++,
        INV_GARLIC_SEED: e++,
        CRAFT_GARLIC_SEED: e++,
        CHEST_GARLIC_SEED: e++,
        GARLIC_SEED_MOB: e++,
        PLANT_GARLIC_DRIED: e++,
        DRIED_GARLIC: e++,
        INV_GARLIC: e++,
        CHEST_GARLIC: e++,
        INV_ROOF: e++,
        CRAFT_ROOF: e++,
        CHEST_ROOF: e++,
        INV_THORNBUSH_SEED: e++,
        CRAFT_THORNBUSH_SEED: e++,
        CHEST_THORNBUSH_SEED: e++,
        THORNBUSH_SEED_MOB: e++,
        PLANT_THORNBUSH_DRIED: e++,
        INV_THORNBUSH: e++,
        CHEST_THORNBUSH: e++,
        CRAFT_THORNBUSH: e++,
        ROOFS: e++,
        GIFT: e++,
        TREE_SNOW1: e++,
        TREE_SNOW2: e++,
        TREE_BRANCH_SNOW1: e++,
        TREE_BRANCH_SNOW2: e++,
        HURT_GIFT: e++,
        INV_PIRATE_SWORD: e++,
        CRAFT_PIRATE_SWORD: e++,
        CHEST_PIRATE_SWORD: e++,
        CHEST_SUGAR_CAN: e++,
        CRAFT_SUGAR_CAN: e++,
        INV_SUGAR_CAN: e++,
        INV_FERRERO: e++,
        CHEST_FERRERO: e++,
        CHEST_CANDY: e++,
        DRIED_THORNBUSH: e++,
        INV_GARLAND: e++,
        CHEST_GARLAND: e++,
        GARLANDS: e++,
        GARLANDS_LIGHT: e++,
        INV_DRAGON_SPEAR: e++,
        CHEST_DRAGON_SPEAR: e++,
        CRAFT_DRAGON_SPEAR: e++,
        INV_LAVA_SPEAR: e++,
        CHEST_LAVA_SPEAR: e++,
        CRAFT_LAVA_SPEAR: e++,
        INV_CHRISTMAS_HAT: e++,
        CHEST_CHRISTMAS_HAT: e++,
        INV_ELF_HAT: e++,
        CHEST_ELF_HAT: e++,
        ROBOT_SKIN: e++,
        VERIFIED: e++,
        CRAB_ATTACK: e++,
        CRAB: e++,
        HURT_CRAB: e++,
        HURT_CRAB_CLAW_LEFT: e++,
        HURT_CRAB_CLAW_RIGHT: e++,
        HEAL_CRAB: e++,
        HEAL_CRAB_CLAW_LEFT: e++,
        HEAL_CRAB_CLAW_RIGHT: e++,
        CRAB_CLAW_LEFT: e++,
        CRAB_CLAW_RIGHT: e++,
        CRAB_CLAW_LEFT_ATTACK: e++,
        CRAB_CLAW_RIGHT_ATTACK: e++,
        CHEST_CRAB_STICK: e++,
        CHEST_CRAB_SPEAR: e++,
        CRAFT_CRAB_SPEAR: e++,
        INV_CRAB_SPEAR: e++,
        FISH1: e++,
        FISH2: e++,
        HURT_FISH1: e++,
        HURT_FISH2: e++,
        CHEST_CRAB_LOOT: e++,
        INV_BED: e++,
        CHEST_BED: e++,
        CRAFT_BED: e++,
        INV_CROWN_CRAB: e++,
        CHEST_CROWN_CRAB: e++,
        CRAFT_CROWN_CRAB: e++,
        BED_TOP: e++,
        HURT_RABBIT_SKIN: e++,
        COLD_RABBIT_SKIN: e++,
        HUNGER_RABBIT_SKIN: e++,
        HEAL_RABBIT_SKIN: e++,
        FIRE_MOB: e++,
        HURT_FIRE_MOB: e++,
        GLOVES_DIAMOND_PROTECTION: e++,
        INV_DIAMOND_PROTECTION: e++,
        CRAFT_DIAMOND_PROTECTION: e++,
        CHEST_DIAMOND_PROTECTION: e++,
        GLOVES_AMETHYST_PROTECTION: e++,
        INV_AMETHYST_PROTECTION: e++,
        CRAFT_AMETHYST_PROTECTION: e++,
        CHEST_AMETHYST_PROTECTION: e++,
        GLOVES_REIDITE_PROTECTION: e++,
        INV_REIDITE_PROTECTION: e++,
        CRAFT_REIDITE_PROTECTION: e++,
        CHEST_REIDITE_PROTECTION: e++,
        INV_REIDITE_SWORD: e++,
        CRAFT_REIDITE_SWORD: e++,
        CHEST_REIDITE_SWORD: e++,
        LAVA_SHINGLE: e++,
        INV_FLAME: e++,
        CHEST_FLAME: e++,
        INV_REIDITE: e++,
        CHEST_REIDITE: e++,
        HERB_LAVA: e++,
        LAVA_BUBBLE: e++,
        ASHES: e++,
        INV_REIDITE_SPEAR: e++,
        CRAFT_REIDITE_SPEAR: e++,
        CHEST_REIDITE_SPEAR: e++,
        INV_REIDITE_HELMET: e++,
        CRAFT_REIDITE_HELMET: e++,
        CHEST_REIDITE_HELMET: e++,
        INV_CARROT_SEED: e++,
        CRAFT_CARROT_SEED: e++,
        CHEST_CARROT_SEED: e++,
        CARROT_SEED_MOB: e++,
        PLANT_CARROT_DRIED: e++,
        DRIED_CARROT: e++,
        INV_CARROT: e++,
        CHEST_CARROT: e++,
        TOMATO_MINI: e++,
        DRIED_TOMATO_MINI: e++,
        INV_TOMATO_SEED: e++,
        CRAFT_TOMATO_SEED: e++,
        CHEST_TOMATO_SEED: e++,
        TOMATO_SEED_MOB: e++,
        PLANT_TOMATO_DRIED: e++,
        DRIED_TOMATO: e++,
        INV_TOMATO: e++,
        INV_WATERMELON_SEED: e++,
        CRAFT_WATERMELON_SEED: e++,
        CHEST_WATERMELON_SEED: e++,
        WATERMELON_SEED_MOB: e++,
        PLANT_WATERMELON_DRIED: e++,
        DRIED_WATERMELON: e++,
        INV_WATERMELON: e++,
        CHEST_WATERMELON: e++,
        CHEST_TOMATO: e++,
        INV_PITCHFORK: e++,
        CHEST_PITCHFORK: e++,
        CRAFT_PITCHFORK: e++,
        INV_PITCHFORK2: e++,
        CHEST_PITCHFORK2: e++,
        CRAFT_PITCHFORK2: e++,
        INV_ALOE_VERA_SEED: e++,
        CRAFT_ALOE_VERA_SEED: e++,
        CHEST_ALOE_VERA_SEED: e++,
        ALOE_VERA_SEED_MOB: e++,
        PLANT_ALOE_VERA_DRIED: e++,
        DRIED_ALOE_VERA: e++,
        INV_ALOE_VERA: e++,
        CHEST_ALOE_VERA: e++,
        CACTUS: e++,
        CRAFT_WOOD_DOOR_SPIKE: e++,
        INV_WOOD_DOOR_SPIKE: e++,
        CHEST_WOOD_DOOR_SPIKE: e++,
        CRAFT_STONE_DOOR_SPIKE: e++,
        INV_STONE_DOOR_SPIKE: e++,
        CHEST_STONE_DOOR_SPIKE: e++,
        CRAFT_GOLD_DOOR_SPIKE: e++,
        INV_GOLD_DOOR_SPIKE: e++,
        CHEST_GOLD_DOOR_SPIKE: e++,
        CRAFT_DIAMOND_DOOR_SPIKE: e++,
        INV_DIAMOND_DOOR_SPIKE: e++,
        CHEST_DIAMOND_DOOR_SPIKE: e++,
        CRAFT_AMETHYST_DOOR_SPIKE: e++,
        INV_AMETHYST_DOOR_SPIKE: e++,
        CHEST_AMETHYST_DOOR_SPIKE: e++,
        CRAFT_REIDITE_DOOR_SPIKE: e++,
        INV_REIDITE_DOOR_SPIKE: e++,
        CHEST_REIDITE_DOOR_SPIKE: e++,
        CRAFT_REIDITE_DOOR: e++,
        INV_REIDITE_DOOR: e++,
        CHEST_REIDITE_DOOR: e++,
        CRAFT_REIDITE_SPIKE: e++,
        INV_REIDITE_SPIKE: e++,
        CHEST_REIDITE_SPIKE: e++,
        CRAFT_REIDITE_WALL: e++,
        INV_REIDITE_WALL: e++,
        CHEST_REIDITE_WALL: e++,
        INV_PICK_REIDITE: e++,
        CHEST_PICK_REIDITE: e++,
        CRAFT_PICK_REIDITE: e++,
        GOLDEN_HEN: e++,
        GOLDEN_CHICKEN: e++,
        HURT_GOLDEN_HEN: e++,
        HURT_GOLDEN_CHICKEN: e++,
        RIVER: e++,
        RIVER_DECO: e++,
        RIVER_WAVE: e++,
        CRAFT_BOAT: e++,
        INV_BOAT: e++,
        CHEST_BOAT: e++,
        CRAFT_SLED: e++,
        INV_SLED: e++,
        CHEST_SLED: e++,
        PENGUIN: e++,
        HURT_PENGUIN: e++,
        INV_PENGUIN_FEATHER: e++,
        CHEST_PENGUIN_FEATHER: e++,
        INV_HAWK_FEATHER: e++,
        CHEST_HAWK_FEATHER: e++,
        INV_VULTURE_FEATHER: e++,
        CHEST_VULTURE_FEATHER: e++,
        FOG: e++,
        BOAR: e++,
        BOAR_TAMED: e++,
        BOAR_ATTACK: e++,
        HURT_BOAR: e++,
        INV_SADDLE: e++,
        CHEST_SADDLE: e++,
        CRAFT_SADDLE: e++,
        INV_MOUNT_BOAR: e++,
        CHEST_MOUNT_BOAR: e++,
        CRAFT_MOUNT_BOAR: e++,
        MARKER: e++,
        CRAB_BOSS_ATTACK: e++,
        CRAB_BOSS: e++,
        CRAB_BOSS_TAMED: e++,
        HURT_CRAB_BOSS: e++,
        HURT_CRAB_BOSS_CLAW_LEFT: e++,
        HURT_CRAB_BOSS_CLAW_RIGHT: e++,
        CRAB_BOSS_CLAW_LEFT_ATTACK: e++,
        CRAB_BOSS_CLAW_LEFT: e++,
        CRAB_BOSS_CLAW_LEFT_TAMED: e++,
        CRAB_BOSS_CLAW_RIGHT_ATTACK: e++,
        CRAB_BOSS_CLAW_RIGHT: e++,
        CRAB_BOSS_CLAW_RIGHT_TAMED: e++,
        HEAL_CRAB_BOSS: e++,
        HEAL_CRAB_BOSS_CLAW_LEFT: e++,
        HEAL_CRAB_BOSS_CLAW_RIGHT: e++,
        BABY_DRAGON_ATTACK: e++,
        BABY_DRAGON: e++,
        BABY_DRAGON_TAMED: e++,
        BABY_DRAGON_WING_LEFT_ATTACK: e++,
        BABY_DRAGON_WING_LEFT: e++,
        BABY_DRAGON_WING_LEFT_TAMED: e++,
        BABY_DRAGON_WING_RIGHT_ATTACK: e++,
        BABY_DRAGON_WING_RIGHT: e++,
        BABY_DRAGON_WING_RIGHT_TAMED: e++,
        HURT_BABY_DRAGON: e++,
        HURT_BABY_DRAGON_WING_LEFT: e++,
        HURT_BABY_DRAGON_WING_RIGHT: e++,
        INV_BABY_DRAGON: e++,
        CHEST_BABY_DRAGON: e++,
        CRAFT_BABY_DRAGON: e++,
        BABY_LAVA_ATTACK: e++,
        BABY_LAVA: e++,
        BABY_LAVA_TAMED: e++,
        BABY_LAVA_WING_LEFT_ATTACK: e++,
        BABY_LAVA_WING_LEFT: e++,
        BABY_LAVA_WING_LEFT_TAMED: e++,
        BABY_LAVA_WING_RIGHT_ATTACK: e++,
        BABY_LAVA_WING_RIGHT: e++,
        BABY_LAVA_WING_RIGHT_TAMED: e++,
        HURT_BABY_LAVA: e++,
        HURT_BABY_LAVA_WING_LEFT: e++,
        HURT_BABY_LAVA_WING_RIGHT: e++,
        INV_BABY_LAVA: e++,
        CHEST_BABY_LAVA: e++,
        CRAFT_BABY_LAVA: e++,
        HAWK_ATTACK: e++,
        HAWK: e++,
        HAWK_TAMED: e++,
        HAWK_WING_LEFT_ATTACK: e++,
        HAWK_WING_LEFT: e++,
        HAWK_WING_LEFT_TAMED: e++,
        HAWK_WING_RIGHT_ATTACK: e++,
        HAWK_WING_RIGHT: e++,
        HAWK_WING_RIGHT_TAMED: e++,
        HURT_HAWK: e++,
        HURT_HAWK_WING_LEFT: e++,
        HURT_HAWK_WING_RIGHT: e++,
        INV_HAWK: e++,
        CHEST_HAWK: e++,
        CRAFT_HAWK: e++,
        HAWK_GROUND: e++,
        HAWK_GROUND_ATTACK: e++,
        HURT_HAWK_GROUND: e++,
        CRAFT_PLANE: e++,
        INV_PLANE: e++,
        CHEST_PLANE: e++,
        VULTURE_ATTACK: e++,
        VULTURE: e++,
        VULTURE_TAMED: e++,
        VULTURE_WING_LEFT_ATTACK: e++,
        VULTURE_WING_LEFT: e++,
        VULTURE_WING_LEFT_TAMED: e++,
        VULTURE_WING_RIGHT_ATTACK: e++,
        VULTURE_WING_RIGHT: e++,
        VULTURE_WING_RIGHT_TAMED: e++,
        HURT_VULTURE: e++,
        HURT_VULTURE_WING_LEFT: e++,
        HURT_VULTURE_WING_RIGHT: e++,
        INV_VULTURE: e++,
        CHEST_VULTURE: e++,
        CRAFT_VULTURE: e++,
        VULTURE_GROUND: e++,
        VULTURE_GROUND_ATTACK: e++,
        HURT_VULTURE_GROUND: e++,
        INV_TURBAN1: e++,
        CRAFT_TURBAN1: e++,
        CHEST_TURBAN1: e++,
        INV_TURBAN2: e++,
        CRAFT_TURBAN2: e++,
        CHEST_TURBAN2: e++,
        SCORPION: e++,
        HURT_SCORPION: e++,
        SCORPION_HAND_LEFT: e++,
        SCORPION_HAND_RIGHT: e++,
        HURT_SCORPION_HAND_LEFT: e++,
        HURT_SCORPION_HAND_RIGHT: e++,
        SAND_WORM_GROUND: ["#E9CF96", "#144940"],
        HURT_SAND_WORM0: e++,
        SAND_WORM1: e++,
        HURT_SAND_WORM1: e++,
        SAND_WORM2: e++,
        HURT_SAND_WORM2: e++,
        INV_CACTUS: e++,
        CHEST_CACTUS: e++,
        INV_EMERALD: e++,
        CHEST_EMERALD: e++,
        INV_PITCHFORK_PART: e++,
        CHEST_PITCHFORK_PART: e++,
        INV_PILOT_GLASSES: e++,
        CHEST_PILOT_GLASSES: e++,
        INV_FUR_BOAR: e++,
        CHEST_FUR_BOAR: e++,
        INV_FIREFLY: e++,
        CHEST_FIREFLY: e++,
        INV_WOOD_ARROW: e++,
        CHEST_WOOD_ARROW: e++,
        CRAFT_WOOD_ARROW: e++,
        INV_STONE_ARROW: e++,
        CHEST_STONE_ARROW: e++,
        CRAFT_STONE_ARROW: e++,
        INV_GOLD_ARROW: e++,
        CHEST_GOLD_ARROW: e++,
        CRAFT_GOLD_ARROW: e++,
        INV_DIAMOND_ARROW: e++,
        CHEST_DIAMOND_ARROW: e++,
        CRAFT_DIAMOND_ARROW: e++,
        INV_AMETHYST_ARROW: e++,
        CHEST_AMETHYST_ARROW: e++,
        CRAFT_AMETHYST_ARROW: e++,
        INV_REIDITE_ARROW: e++,
        CHEST_REIDITE_ARROW: e++,
        CRAFT_REIDITE_ARROW: e++,
        INV_DRAGON_ARROW: e++,
        CHEST_DRAGON_ARROW: e++,
        CRAFT_DRAGON_ARROW: e++,
        INV_SANDWORM_JUICE: e++,
        CHEST_SANDWORM_JUICE: e++,
        INV_CRAB_BOSS: e++,
        CHEST_CRAB_BOSS: e++,
        CRAFT_CRAB_BOSS: e++,
        EMERALD_MACHINE_GROUND: e++,
        EMERALD_MACHINE_HOLE: e++,
        EMERALD_MACHINE_ROTATE: e++,
        INV_EMERALD_MACHINE: e++,
        CRAFT_EMERALD_MACHINE: e++,
        CHEST_EMERALD_MACHINE: e++,
        EXTRACTOR_MACHINE0_STONE: e++,
        INV_EXTRACTOR_MACHINE_STONE: e++,
        CRAFT_EXTRACTOR_MACHINE_STONE: e++,
        CHEST_EXTRACTOR_MACHINE_STONE: e++,
        EXTRACTOR_MACHINE0_GOLD: e++,
        INV_EXTRACTOR_MACHINE_GOLD: e++,
        CRAFT_EXTRACTOR_MACHINE_GOLD: e++,
        CHEST_EXTRACTOR_MACHINE_GOLD: e++,
        EXTRACTOR_MACHINE0_DIAMOND: e++,
        INV_EXTRACTOR_MACHINE_DIAMOND: e++,
        CRAFT_EXTRACTOR_MACHINE_DIAMOND: e++,
        CHEST_EXTRACTOR_MACHINE_DIAMOND: e++,
        EXTRACTOR_MACHINE0_AMETHYST: e++,
        INV_EXTRACTOR_MACHINE_AMETHYST: e++,
        CRAFT_EXTRACTOR_MACHINE_AMETHYST: e++,
        CHEST_EXTRACTOR_MACHINE_AMETHYST: e++,
        EXTRACTOR_MACHINE0_REIDITE: e++,
        INV_EXTRACTOR_MACHINE_REIDITE: e++,
        CRAFT_EXTRACTOR_MACHINE_REIDITE: e++,
        CHEST_EXTRACTOR_MACHINE_REIDITE: e++,
        MAMMOTH: e++,
        HURT_MAMMOTH: e++,
        BABY_MAMMOTH: e++,
        BABY_MAMMOTH_TAMED: e++,
        BABY_MAMMOTH_ATTACK: e++,
        HURT_BABY_MAMMOTH: e++,
        INV_BABY_MAMMOTH: e++,
        CHEST_BABY_MAMMOTH: e++,
        CRAFT_BABY_MAMMOTH: e++,
        INV_FLOWER_HAT: e++,
        CRAFT_FLOWER_HAT: e++,
        CHEST_FLOWER_HAT: e++,
        INV_FUR_HAT: e++,
        CRAFT_FUR_HAT: e++,
        CHEST_FUR_HAT: e++,
        INV_FUR_MAMMOTH: e++,
        CHEST_FUR_MAMMOTH: e++,
        CRAFT_WOOD_TOWER: e++,
        INV_WOOD_TOWER: e++,
        CHEST_WOOD_TOWER: e++,
        CRAFT_WOOD_SHIELD: e++,
        INV_WOOD_SHIELD: e++,
        CHEST_WOOD_SHIELD: e++,
        CRAFT_STONE_SHIELD: e++,
        INV_STONE_SHIELD: e++,
        CHEST_STONE_SHIELD: e++,
        CRAFT_GOLD_SHIELD: e++,
        INV_GOLD_SHIELD: e++,
        CHEST_GOLD_SHIELD: e++,
        CRAFT_DIAMOND_SHIELD: e++,
        INV_DIAMOND_SHIELD: e++,
        CHEST_DIAMOND_SHIELD: e++,
        CRAFT_AMETHYST_SHIELD: e++,
        INV_AMETHYST_SHIELD: e++,
        CHEST_AMETHYST_SHIELD: e++,
        CRAFT_REIDITE_SHIELD: e++,
        INV_REIDITE_SHIELD: e++,
        CHEST_REIDITE_SHIELD: e++,
        REIDITE_SPIKE2: +e
    }, e = 0, E = {
        FIRE: e++,
        BIG_FIRE: e++,
        FURNACE: e++,
        WORKBENCH: e++,
        PICK_WOOD: e++,
        PICK: e++,
        PICK_GOLD: e++,
        PICK_DIAMOND: e++,
        PICK_AMETHYST: e++,
        PICK_REIDITE: e++,
        HAMMER: e++,
        HAMMER_GOLD: e++,
        HAMMER_DIAMOND: e++,
        HAMMER_AMETHYST: e++,
        HAMMER_REIDITE: e++,
        SUPER_HAMMER: e++,
        SHOVEL: e++,
        SHOVEL_GOLD: e++,
        SHOVEL_DIAMOND: e++,
        SHOVEL_AMETHYST: e++,
        WATERING_CAN: e++,
        WATERING_CAN_FULL: e++,
        PITCHFORK: e++,
        PITCHFORK2: e++,
        BOOK: e++,
        WOOD_SPEAR: e++,
        SPEAR: e++,
        GOLD_SPEAR: e++,
        DIAMOND_SPEAR: e++,
        AMETHYST_SPEAR: e++,
        REIDITE_SPEAR: e++,
        DRAGON_SPEAR: e++,
        LAVA_SPEAR: e++,
        CRAB_SPEAR: e++,
        SWORD_WOOD: e++,
        SWORD: e++,
        SWORD_GOLD: e++,
        SWORD_DIAMOND: e++,
        SWORD_AMETHYST: e++,
        REIDITE_SWORD: e++,
        SEED: e++,
        WHEAT_SEED: e++,
        PUMPKIN_SEED: e++,
        GARLIC_SEED: e++,
        THORNBUSH_SEED: e++,
        CARROT_SEED: e++,
        TOMATO_SEED: e++,
        WATERMELON_SEED: e++,
        ALOE_VERA_SEED: e++,
        COOKED_MEAT: e++,
        FOODFISH_COOKED: e++,
        BREAD: e++,
        COOKIE: e++,
        CAKE: e++,
        BANDAGE: e++,
        WALL: e++,
        STONE_WALL: e++,
        GOLD_WALL: e++,
        DIAMOND_WALL: e++,
        AMETHYST_WALL: e++,
        REIDITE_WALL: e++,
        WOOD_DOOR: e++,
        STONE_DOOR: e++,
        GOLD_DOOR: e++,
        DIAMOND_DOOR: e++,
        AMETHYST_DOOR: e++,
        REIDITE_DOOR: e++,
        SPIKE: e++,
        STONE_SPIKE: e++,
        GOLD_SPIKE: e++,
        DIAMOND_SPIKE: e++,
        AMETHYST_SPIKE: e++,
        REIDITE_SPIKE: e++,
        WOOD_DOOR_SPIKE: e++,
        STONE_DOOR_SPIKE: e++,
        GOLD_DOOR_SPIKE: e++,
        DIAMOND_DOOR_SPIKE: e++,
        AMETHYST_DOOR_SPIKE: e++,
        REIDITE_DOOR_SPIKE: e++,
        CHEST: e++,
        EXPLORER_HAT: e++,
        PIRATE_HAT: e++,
        PILOT_HELMET: e++,
        EARMUFFS: e++,
        COAT: e++,
        CAP_SCARF: e++,
        FUR_HAT: e++,
        WOOD_HELMET: e++,
        STONE_HELMET: e++,
        GOLD_HELMET: e++,
        DIAMOND_HELMET: e++,
        AMETHYST_HELMET: e++,
        REIDITE_HELMET: e++,
        DIVING_MASK: e++,
        SUPER_DIVING_SUIT: e++,
        DIAMOND_PROTECTION: e++,
        AMETHYST_PROTECTION: e++,
        REIDITE_PROTECTION: e++,
        TURBAN1: e++,
        TURBAN2: e++,
        BAG: e++,
        PAPER: e++,
        BLUE_CORD: e++,
        LOCK: e++,
        LOCKPICK: e++,
        TOTEM: e++,
        BRIDGE: e++,
        ROOF: e++,
        WOOD_TOWER: e++,
        PLOT: e++,
        BOTTLE_EMPTY: e++,
        BOTTLE_FULL: e++,
        BOTTLE_FULL_2: e++,
        BOTTLE_FULL_3: e++,
        WINDMILL: e++,
        RESURRECTION: e++,
        EMERALD_MACHINE: e++,
        EXTRACTOR_MACHINE_STONE: e++,
        EXTRACTOR_MACHINE_GOLD: e++,
        EXTRACTOR_MACHINE_DIAMOND: e++,
        EXTRACTOR_MACHINE_AMETHYST: e++,
        EXTRACTOR_MACHINE_REIDITE: e++,
        SPANNER: e++,
        MACHETE: e++,
        BREAD_OVEN: e++,
        SANDWICH: e++,
        DRAGON_HELMET: e++,
        LAVA_HELMET: e++,
        CROWN_CRAB: e++,
        DRAGON_SWORD: e++,
        LAVA_SWORD: e++,
        WOOD_BOW: e++,
        WOOD_ARROW: e++,
        STONE_BOW: e++,
        STONE_ARROW: e++,
        GOLD_BOW: e++,
        GOLD_ARROW: e++,
        DIAMOND_BOW: e++,
        DIAMOND_ARROW: e++,
        AMETHYST_BOW: e++,
        AMETHYST_ARROW: e++,
        REIDITE_BOW: e++,
        REIDITE_ARROW: e++,
        DRAGON_BOW: e++,
        DRAGON_ARROW: e++,
        WOOD_SHIELD: e++,
        STONE_SHIELD: e++,
        GOLD_SHIELD: e++,
        DIAMOND_SHIELD: e++,
        AMETHYST_SHIELD: e++,
        REIDITE_SHIELD: e++,
        CROWN_GREEN: e++,
        CROWN_ORANGE: e++,
        CROWN_BLUE: e++,
        HOOD: e++,
        PEASANT: e++,
        WINTER_HOOD: e++,
        WINTER_PEASANT: e++,
        BUCKET_FULL: e++,
        BUCKET_EMPTY: e++,
        WELL: e++,
        SIGN: e++,
        BED: e++,
        BOAT: e++,
        SLED: e++,
        SADDLE: e++,
        PLANE: e++,
        WITCH: e++,
        WAND1: e++,
        WAND2: e++,
        NIMBUS: +e
    }, e = 0, Ge = {
        SWORD: e++,
        PICK: e++,
        FUR: e++,
        PICK_GOLD: e++,
        PICK_DIAMOND: e++,
        SWORD_GOLD: e++,
        SWORD_DIAMOND: e++,
        HAND: e++,
        PICK_WOOD: e++,
        PIRATE_SWORD: e++,
        EARMUFFS: e++,
        COAT: e++,
        WOOD_SPEAR: e++,
        SPEAR: e++,
        GOLD_SPEAR: e++,
        DIAMOND_SPEAR: e++,
        DRAGON_SPEAR: e++,
        LAVA_SPEAR: e++,
        CRAB_SPEAR: e++,
        REIDITE_SWORD: e++,
        DIAMOND_PROTECTION: e++,
        AMETHYST_PROTECTION: e++,
        REIDITE_PROTECTION: e++,
        EXPLORER_HAT: e++,
        PIRATE_HAT: e++,
        STONE_HELMET: e++,
        GOLD_HELMET: e++,
        DIAMOND_HELMET: e++,
        BOOK: e++,
        BAG: e++,
        SWORD_AMETHYST: e++,
        PICK_AMETHYST: e++,
        PICK_REIDITE: e++,
        AMETHYST_SPEAR: e++,
        REIDITE_SPEAR: e++,
        HAMMER: e++,
        HAMMER_GOLD: e++,
        HAMMER_DIAMOND: e++,
        HAMMER_AMETHYST: e++,
        HAMMER_REIDITE: e++,
        CAP_SCARF: e++,
        CHRISTMAS_HAT: e++,
        ELF_HAT: e++,
        AMETHYST_HELMET: e++,
        REIDITE_HELMET: e++,
        SUPER_HAMMER: e++,
        SHOVEL: e++,
        SUPER_DIVING_SUIT: e++,
        DIVING_MASK: e++,
        WATERING_CAN_FULL: e++,
        SHOVEL_GOLD: e++,
        SHOVEL_DIAMOND: e++,
        SHOVEL_AMETHYST: e++,
        PITCHFORK: e++,
        PITCHFORK2: e++,
        SPANNER: e++,
        MACHETE: e++,
        SWORD_WOOD: e++,
        WOOD_HELMET: e++,
        DRAGON_HELMET: e++,
        LAVA_HELMET: e++,
        CROWN_CRAB: e++,
        DRAGON_SWORD: e++,
        LAVA_SWORD: e++,
        WOOD_BOW: e++,
        STONE_BOW: e++,
        GOLD_BOW: e++,
        DIAMOND_BOW: e++,
        AMETHYST_BOW: e++,
        REIDITE_BOW: e++,
        DRAGON_BOW: e++,
        WOOD_SHIELD: e++,
        STONE_SHIELD: e++,
        GOLD_SHIELD: e++,
        DIAMOND_SHIELD: e++,
        AMETHYST_SHIELD: e++,
        REIDITE_SHIELD: e++,
        CROWN_GREEN: e++,
        CROWN_ORANGE: e++,
        CROWN_BLUE: e++,
        TURBAN1: e++,
        TURBAN2: e++,
        PILOT_HELMET: e++,
        HOOD: e++,
        PEASANT: e++,
        WINTER_HOOD: e++,
        WINTER_PEASANT: e++,
        FLOWER_HAT: e++,
        FUR_HAT: e++,
        SADDLE: e++,
        WITCH: e++,
        NIMBUS: e++,
        WAND1: e++,
        WAND2: e++,
        FIREFLY: e++,
        WOOD_ARROW: e++,
        STONE_ARROW: e++,
        GOLD_ARROW: e++,
        DIAMOND_ARROW: e++,
        AMETHYST_ARROW: e++,
        REIDITE_ARROW: e++,
        DRAGON_ARROW: e++,
        STONE: e++,
        WOOD: e++,
        PLANT: e++,
        GOLD: e++,
        DIAMOND: e++,
        FIRE: e++,
        WORKBENCH: e++,
        SEED: e++,
        MEAT: e++,
        COOKED_MEAT: e++,
        BIG_FIRE: e++,
        FURNACE: e++,
        PAPER: e++,
        AMETHYST: e++,
        AMETHYST_WALL: e++,
        AMETHYST_SPIKE: e++,
        AMETHYST_DOOR: e++,
        BRIDGE: e++,
        SAND: e++,
        BOTTLE_FULL: e++,
        BOTTLE_EMPTY: e++,
        KRAKEN_SKIN: e++,
        WATERING_CAN: e++,
        FLOUR: e++,
        WHEAT_SEED: e++,
        COOKIE: e++,
        WILD_WHEAT: e++,
        WINDMILL: e++,
        CAKE: e++,
        FOODFISH: e++,
        FOODFISH_COOKED: e++,
        SCALES: e++,
        GROUND: e++,
        PLOT: e++,
        ICE: e++,
        BREAD: e++,
        BREAD_OVEN: e++,
        SANDWICH: e++,
        FUR_WINTER: e++,
        BLUE_CORD: e++,
        LOCK: e++,
        DRAGON_HEART: e++,
        LAVA_HEART: e++,
        RESURRECTION: e++,
        EMERALD_MACHINE: e++,
        EXTRACTOR_MACHINE_STONE: e++,
        EXTRACTOR_MACHINE_GOLD: e++,
        EXTRACTOR_MACHINE_DIAMOND: e++,
        EXTRACTOR_MACHINE_AMETHYST: e++,
        EXTRACTOR_MACHINE_REIDITE: e++,
        LOCKPICK: e++,
        TOTEM: e++,
        SPIKE: e++,
        CORD: e++,
        WALL: e++,
        STONE_WALL: e++,
        GOLD_WALL: e++,
        DIAMOND_WALL: e++,
        WOOD_DOOR: e++,
        CHEST: e++,
        STONE_SPIKE: e++,
        GOLD_SPIKE: e++,
        DIAMOND_SPIKE: e++,
        STONE_DOOR: e++,
        GOLD_DOOR: e++,
        DIAMOND_DOOR: e++,
        FUR_WOLF: e++,
        GEMME_GREEN: e++,
        GEMME_ORANGE: e++,
        GEMME_BLUE: e++,
        SPECIAL_FUR: e++,
        SPECIAL_FUR_2: e++,
        BUCKET_FULL: e++,
        BUCKET_EMPTY: e++,
        WELL: e++,
        SIGN: e++,
        DRAGON_CUBE: e++,
        DRAGON_ORB: e++,
        LAVA_CUBE: e++,
        LAVA_ORB: e++,
        PUMPKIN_SEED: e++,
        PUMPKIN: e++,
        ROOF: e++,
        GARLIC_SEED: e++,
        GARLIC: e++,
        THORNBUSH_SEED: e++,
        THORNBUSH: e++,
        BANDAGE: e++,
        CRAB_STICK: e++,
        CRAB_LOOT: e++,
        BED: e++,
        SUGAR_CAN: e++,
        CANDY: e++,
        GARLAND: e++,
        REIDITE: e++,
        FLAME: e++,
        CARROT_SEED: e++,
        CARROT: e++,
        TOMATO_SEED: e++,
        TOMATO: e++,
        WATERMELON_SEED: e++,
        WATERMELON: e++,
        ALOE_VERA_SEED: e++,
        ALOE_VERA: e++,
        WOOD_DOOR_SPIKE: e++,
        STONE_DOOR_SPIKE: e++,
        GOLD_DOOR_SPIKE: e++,
        DIAMOND_DOOR_SPIKE: e++,
        AMETHYST_DOOR_SPIKE: e++,
        REIDITE_WALL: e++,
        REIDITE_DOOR: e++,
        REIDITE_SPIKE: e++,
        REIDITE_DOOR_SPIKE: e++,
        WOOD_TOWER: e++,
        PENGUIN_FEATHER: e++,
        BOAT: e++,
        SLED: e++,
        MOUNT_BOAR: e++,
        CRAB_BOSS: e++,
        BABY_DRAGON: e++,
        BABY_LAVA: e++,
        HAWK: e++,
        PLANE: e++,
        HAWK_FEATHER: e++,
        VULTURE_FEATHER: e++,
        CACTUS: e++,
        EMERALD: e++,
        PITCHFORK_PART: e++,
        PILOT_GLASSES: e++,
        FUR_BOAR: e++,
        SANDWORM_JUICE: e++,
        BABY_MAMMOTH: e++,
        FUR_MAMMOTH: +e
    }, T = {
        TOOLS: 0,
        WEAPONS: 1,
        CLOTHES: 2,
        FOODS: 3,
        Utils: 4,
        BASES: 5
    }, He = [], R = (He[Ge.WOOD] = {
        name: "Wood",
        img: Le.INV_WOOD,
        grid: 0,
        recycle: 0
    },
    He[Ge.STONE] = {
        name: "Stone",
        img: Le.INV_STONE,
        grid: 0,
        recycle: 0
    },
    He[Ge.GOLD] = {
        name: "Gold",
        img: Le.INV_GOLD,
        grid: 0,
        recycle: 0
    },
    He[Ge.DIAMOND] = {
        name: "Diamond",
        img: Le.INV_DIAMOND,
        grid: 0,
        recycle: 0
    },
    He[Ge.AMETHYST] = {
        name: "Amethyst",
        img: Le.INV_AMETHYST,
        grid: 0,
        recycle: 0
    },
    He[Ge.FUR] = {
        name: "Rabbit fur",
        img: Le.INV_FUR,
        grid: 0,
        recycle: 0
    },
    He[Ge.FUR_WOLF] = {
        name: "Wolf fur",
        img: Le.INV_FUR_WOLF,
        grid: 0,
        recycle: 0
    },
    He[Ge.FUR_BOAR] = {
        name: "Boar fur",
        img: Le.INV_FUR_BOAR,
        grid: 0,
        recycle: 0
    },
    He[Ge.FIREFLY] = {
        name: "Firefly",
        img: Le.INV_FIREFLY,
        grid: 0,
        recycle: 0
    },
    He[Ge.WOOD_ARROW] = {
        name: "Wood arrow",
        img: Le.INV_WOOD_ARROW,
        grid: 0,
        recycle: 1
    },
    He[Ge.STONE_ARROW] = {
        name: "Stone arrow",
        img: Le.INV_STONE_ARROW,
        grid: 0,
        recycle: 1
    },
    He[Ge.GOLD_ARROW] = {
        name: "Gold arrow",
        img: Le.INV_GOLD_ARROW,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIAMOND_ARROW] = {
        name: "Diamond arrow",
        img: Le.INV_DIAMOND_ARROW,
        grid: 0,
        recycle: 1
    },
    He[Ge.AMETHYST_ARROW] = {
        name: "Amethyst arrow",
        img: Le.INV_AMETHYST_ARROW,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_ARROW] = {
        name: "Reidite arrow",
        img: Le.INV_REIDITE_ARROW,
        grid: 0,
        recycle: 1
    },
    He[Ge.DRAGON_ARROW] = {
        name: "Dragon arrow",
        img: Le.INV_DRAGON_ARROW,
        grid: 0,
        recycle: 0
    },
    He[Ge.FUR_WINTER] = {
        name: "Winter fur",
        img: Le.INV_FUR_WINTER,
        grid: 0,
        recycle: 0
    },
    He[Ge.FUR_MAMMOTH] = {
        name: "Fur mammoth",
        img: Le.INV_FUR_MAMMOTH,
        grid: 0,
        recycle: 0
    },
    He[Ge.CORD] = {
        name: "Web",
        img: Le.INV_CORD,
        grid: 0,
        recycle: 0
    },
    He[Ge.MEAT] = {
        name: "Meat",
        img: Le.INV_MEAT,
        grid: 0,
        recycle: 0
    },
    He[Ge.FOODFISH] = {
        name: "Fish",
        img: Le.INV_FOODFISH,
        grid: 0,
        recycle: 0
    },
    He[Ge.KRAKEN_SKIN] = {
        name: "Kraken skin",
        img: Le.INV_KRAKEN_SKIN,
        grid: 0,
        recycle: 0
    },
    He[Ge.SCALES] = {
        name: "Piranha scales",
        img: Le.INV_SCALES,
        grid: 0,
        recycle: 0
    },
    He[Ge.ICE] = {
        name: "Ice",
        img: Le.INV_ICE,
        grid: 0,
        recycle: 0
    },
    He[Ge.SAND] = {
        name: "Sand",
        img: Le.INV_SAND,
        grid: 0,
        recycle: 0
    },
    He[Ge.GROUND] = {
        name: "Dirt",
        img: Le.INV_GROUND,
        grid: 0,
        recycle: 0
    },
    He[Ge.PLANT] = {
        name: "Berrie",
        img: Le.INV_PLANT,
        grid: 0,
        recycle: 0
    },
    He[Ge.FLOUR] = {
        name: "Flour",
        img: Le.INV_FLOUR,
        grid: 0,
        recycle: 0
    },
    He[Ge.WILD_WHEAT] = {
        name: "Flour",
        img: Le.INV_WILD_WHEAT,
        grid: 0,
        recycle: 0
    },
    He[Ge.SPECIAL_FUR] = {
        name: "Special fur peasant",
        img: Le.INV_SPECIAL_FUR,
        grid: 0,
        recycle: 0
    },
    He[Ge.SPECIAL_FUR_2] = {
        name: "Special fur hood",
        img: Le.INV_SPECIAL_FUR_2,
        grid: 0,
        recycle: 0
    },
    He[Ge.PUMPKIN] = {
        name: "Pumpkin",
        img: Le.INV_PUMPKIN,
        grid: 0,
        recycle: 0
    },
    He[Ge.GARLIC] = {
        name: "Garlic",
        img: Le.INV_GARLIC,
        grid: 0,
        recycle: 0
    },
    He[Ge.THORNBUSH] = {
        name: "Thornbush",
        img: Le.INV_THORNBUSH,
        grid: 0,
        recycle: 0
    },
    He[Ge.CARROT] = {
        name: "Carrot",
        img: Le.INV_CARROT,
        grid: 0,
        recycle: 0
    },
    He[Ge.TOMATO] = {
        name: "Tomato",
        img: Le.INV_TOMATO,
        grid: 0,
        recycle: 0
    },
    He[Ge.WATERMELON] = {
        name: "Watermelon",
        img: Le.INV_WATERMELON,
        grid: 0,
        recycle: 0
    },
    He[Ge.ALOE_VERA] = {
        name: "Aloe Vera",
        img: Le.INV_ALOE_VERA,
        grid: 0,
        recycle: 0
    },
    He[Ge.PENGUIN_FEATHER] = {
        name: "Penguin Feather",
        img: Le.INV_PENGUIN_FEATHER,
        grid: 0,
        recycle: 0
    },
    He[Ge.HAWK_FEATHER] = {
        name: "Hawk Feather",
        img: Le.INV_HAWK_FEATHER,
        grid: 0,
        recycle: 0
    },
    He[Ge.VULTURE_FEATHER] = {
        name: "Vulture Feather",
        img: Le.INV_VULTURE_FEATHER,
        grid: 0,
        recycle: 0
    },
    He[Ge.CACTUS] = {
        name: "Cactus",
        img: Le.INV_CACTUS,
        grid: 0,
        recycle: 0
    },
    He[Ge.PILOT_GLASSES] = {
        name: "Cactus",
        img: Le.INV_PILOT_GLASSES,
        grid: 0,
        recycle: 0
    },
    He[Ge.PITCHFORK_PART] = {
        name: "Pitchfork Part",
        img: Le.INV_PITCHFORK_PART,
        grid: 0,
        recycle: 0
    },
    He[Ge.SANDWORM_JUICE] = {
        name: "Emerald Machine",
        img: Le.INV_SANDWORM_JUICE,
        grid: 0,
        recycle: 0
    },
    He[Ge.EMERALD] = {
        name: "Emerald",
        img: Le.INV_EMERALD,
        grid: 0,
        recycle: 0
    },
    He[Ge.CHRISTMAS_HAT] = {
        name: "Christmas Hat",
        img: Le.INV_CHRISTMAS_HAT,
        recycle: 0
    },
    He[Ge.ELF_HAT] = {
        name: "Elf Hat",
        img: Le.INV_ELF_HAT,
        recycle: 0
    },
    He[Ge.GARLAND] = {
        name: "Garland",
        img: Le.INV_GARLAND,
        recycle: 0,
        grid: 0
    },
    He[Ge.CANDY] = {
        name: "Candy",
        img: Le.INV_CANDY,
        recycle: 0
    },
    He[Ge.SUGAR_CAN] = {
        name: "Sugar Cane",
        img: Le.INV_SUGAR_CAN,
        recycle: 0
    },
    He[Ge.PIRATE_SWORD] = {
        name: "Pirate Sword",
        img: Le.INV_PIRATE_SWORD,
        grid: 0,
        recycle: 0
    },
    He[Ge.CRAB_STICK] = {
        name: "Crab Stick",
        img: Le.INV_CRAB_STICK,
        grid: 0,
        recycle: 0
    },
    He[Ge.REIDITE] = {
        name: "Reidite",
        img: Le.INV_REIDITE,
        grid: 0,
        recycle: 0
    },
    He[Ge.FLAME] = {
        name: "Flame",
        img: Le.INV_FLAME,
        grid: 0,
        recycle: 0
    },
    He[Ge.FIRE] = {
        name: "Campfire",
        img: Le.CRAFT_FIRE,
        grid: 0,
        recycle: 1
    },
    He[Ge.BED] = {
        name: "Bed",
        img: Le.CRAFT_BED,
        grid: 0,
        recycle: 1
    },
    He[Ge.WORKBENCH] = {
        name: "Workbench",
        img: Le.CRAFT_WORK,
        grid: 0,
        recycle: 1
    },
    He[Ge.SWORD] = {
        name: "Stone sword",
        img: Le.CRAFT_SWORD,
        grid: 0,
        recycle: 1
    },
    He[Ge.PICK] = {
        name: "Stone pick",
        img: Le.CRAFT_PICK,
        grid: 0,
        recycle: 1
    },
    He[Ge.SEED] = {
        name: "Berries bush",
        img: Le.CRAFT_SEED,
        grid: 0,
        recycle: 0
    },
    He[Ge.PICK_GOLD] = {
        name: "Gold pick",
        img: Le.CRAFT_PICK_GOLD,
        grid: 0,
        recycle: 1
    },
    He[Ge.PICK_DIAMOND] = {
        name: "Diamond pick",
        img: Le.CRAFT_PICK_DIAMOND,
        grid: 0,
        recycle: 1
    },
    He[Ge.SWORD_WOOD] = {
        name: "Wood sword",
        img: Le.CRAFT_SWORD_WOOD,
        grid: 0,
        recycle: 1
    },
    He[Ge.SWORD_GOLD] = {
        name: "Gold sword",
        img: Le.CRAFT_SWORD_GOLD,
        grid: 0,
        recycle: 1
    },
    He[Ge.SWORD_DIAMOND] = {
        name: "Diamond sword",
        img: Le.CRAFT_SWORD_DIAMOND,
        grid: 0,
        recycle: 1
    },
    He[Ge.PICK_WOOD] = {
        name: "Wood pick",
        img: Le.CRAFT_PICK_WOOD,
        grid: 0,
        recycle: 1
    },
    He[Ge.WALL] = {
        name: "Wood wall",
        img: Le.CRAFT_WALL,
        grid: 0,
        recycle: 1
    },
    He[Ge.SPIKE] = {
        name: "Wood spike",
        img: Le.CRAFT_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.COOKED_MEAT] = {
        name: "Cooked meat",
        img: Le.CRAFT_COOKED_MEAT,
        grid: 0,
        recycle: 0
    },
    He[Ge.BIG_FIRE] = {
        name: "Big campfire",
        img: Le.CRAFT_BIG_FIRE,
        grid: 0,
        recycle: 1
    },
    He[Ge.BANDAGE] = {
        name: "Bandage",
        img: Le.CRAFT_BANDAGE,
        grid: 0,
        recycle: 1
    },
    He[Ge.STONE_WALL] = {
        name: "Stone wall",
        img: Le.CRAFT_STONE_WALL,
        grid: 0,
        recycle: 1
    },
    He[Ge.GOLD_WALL] = {
        name: "Gold wall",
        img: Le.CRAFT_GOLD_WALL,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIAMOND_WALL] = {
        name: "Diamond wall",
        img: Le.CRAFT_DIAMOND_WALL,
        grid: 0,
        recycle: 1
    },
    He[Ge.WOOD_DOOR] = {
        name: "Wood door",
        img: Le.CRAFT_DOOR_WOOD_CLOSE,
        grid: 0,
        recycle: 1
    },
    He[Ge.CHEST] = {
        name: "Chest",
        img: Le.CRAFT_CHEST,
        grid: 0,
        recycle: 1
    },
    He[Ge.STONE_SPIKE] = {
        name: "Stone spike",
        img: Le.CRAFT_STONE_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.GOLD_SPIKE] = {
        name: "Gold spike",
        img: Le.CRAFT_GOLD_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIAMOND_SPIKE] = {
        name: "Diamond spike",
        img: Le.CRAFT_DIAMOND_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.STONE_DOOR] = {
        name: "Stone door",
        img: Le.CRAFT_DOOR_STONE_CLOSE,
        grid: 0,
        recycle: 1
    },
    He[Ge.GOLD_DOOR] = {
        name: "Gold door",
        img: Le.CRAFT_DOOR_GOLD_CLOSE,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIAMOND_DOOR] = {
        name: "Diamond door",
        img: Le.CRAFT_DOOR_DIAMOND_CLOSE,
        grid: 0,
        recycle: 1
    },
    He[Ge.EARMUFFS] = {
        name: "Chapka",
        img: Le.CRAFT_EARMUFFS,
        grid: 0,
        recycle: 1
    },
    He[Ge.COAT] = {
        name: "Big Chapka",
        img: Le.CRAFT_COAT,
        grid: 0,
        recycle: 1
    },
    He[Ge.WOOD_SPEAR] = {
        name: "Wood spear",
        img: Le.CRAFT_WOOD_SPEAR,
        grid: 0,
        recycle: 1
    },
    He[Ge.SPEAR] = {
        name: "Stone spear",
        img: Le.CRAFT_SPEAR,
        grid: 0,
        recycle: 1
    },
    He[Ge.GOLD_SPEAR] = {
        name: "Gold spear",
        img: Le.CRAFT_GOLD_SPEAR,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIAMOND_SPEAR] = {
        name: "Diamond spear",
        img: Le.CRAFT_DIAMOND_SPEAR,
        grid: 0,
        recycle: 1
    },
    He[Ge.DRAGON_SPEAR] = {
        name: "Dragon spear",
        img: Le.CRAFT_DRAGON_SPEAR,
        grid: 0,
        recycle: 0
    },
    He[Ge.LAVA_SPEAR] = {
        name: "Dragon spear",
        img: Le.CRAFT_LAVA_SPEAR,
        grid: 0,
        recycle: 0
    },
    He[Ge.CRAB_SPEAR] = {
        name: "Crab spear",
        img: Le.CRAFT_CRAB_SPEAR,
        grid: 0,
        recycle: 1
    },
    He[Ge.CRAB_LOOT] = {
        name: "Crab loot",
        img: Le.INV_CRAB_LOOT,
        grid: 0,
        recycle: 0
    },
    He[Ge.FURNACE] = {
        name: "Furnace",
        img: Le.CRAFT_FURNACE,
        grid: 0,
        recycle: 1
    },
    He[Ge.EXPLORER_HAT] = {
        name: "Explorer hat",
        img: Le.CRAFT_EXPLORER_HAT,
        grid: 0,
        recycle: 1
    },
    He[Ge.PIRATE_HAT] = {
        name: "Pirate hat",
        img: Le.CRAFT_PIRATE_HAT,
        grid: 0,
        recycle: 1
    },
    He[Ge.FLOWER_HAT] = {
        name: "Flower hat",
        img: Le.CRAFT_FLOWER_HAT,
        grid: 0,
        recycle: 1
    },
    He[Ge.FUR_HAT] = {
        name: "Fur hat",
        img: Le.CRAFT_FUR_HAT,
        grid: 0,
        recycle: 1
    },
    He[Ge.WOOD_HELMET] = {
        name: "Wood helmet",
        img: Le.CRAFT_WOOD_HELMET,
        grid: 0,
        recycle: 1
    },
    He[Ge.STONE_HELMET] = {
        name: "Stone helmet",
        img: Le.CRAFT_STONE_HELMET,
        grid: 0,
        recycle: 1
    },
    He[Ge.GOLD_HELMET] = {
        name: "Gold helmet",
        img: Le.CRAFT_GOLD_HELMET,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIAMOND_HELMET] = {
        name: "Diamond helmet",
        img: Le.CRAFT_DIAMOND_HELMET,
        grid: 0,
        recycle: 1
    },
    He[Ge.BOOK] = {
        name: "Book",
        img: Le.CRAFT_BOOK,
        grid: 0,
        recycle: 1
    },
    He[Ge.PAPER] = {
        name: "Paper",
        img: Le.CRAFT_PAPER,
        grid: 0,
        recycle: 0
    },
    He[Ge.BAG] = {
        name: "Bag",
        img: Le.CRAFT_BAG,
        grid: 0,
        recycle: 1
    },
    He[Ge.SWORD_AMETHYST] = {
        name: "Amethyst sword",
        img: Le.CRAFT_SWORD_AMETHYST,
        grid: 0,
        recycle: 1
    },
    He[Ge.PICK_AMETHYST] = {
        name: "Amethyst pick",
        img: Le.CRAFT_PICK_AMETHYST,
        grid: 0,
        recycle: 1
    },
    He[Ge.AMETHYST_SPEAR] = {
        name: "Amethyst spear",
        img: Le.CRAFT_AMETHYST_SPEAR,
        grid: 0,
        recycle: 1
    },
    He[Ge.HAMMER] = {
        name: "Stone hammer",
        img: Le.CRAFT_HAMMER,
        grid: 0,
        recycle: 1
    },
    He[Ge.HAMMER_GOLD] = {
        name: "Gold hammer",
        img: Le.CRAFT_HAMMER_GOLD,
        grid: 0,
        recycle: 1
    },
    He[Ge.HAMMER_DIAMOND] = {
        name: "Diamond hammer",
        img: Le.CRAFT_HAMMER_DIAMOND,
        grid: 0,
        recycle: 1
    },
    He[Ge.HAMMER_AMETHYST] = {
        name: "Amethyst hammer",
        img: Le.CRAFT_HAMMER_AMETHYST,
        grid: 0,
        recycle: 1
    },
    He[Ge.HAMMER_REIDITE] = {
        name: "Reidite hammer",
        img: Le.CRAFT_HAMMER_REIDITE,
        grid: 0,
        recycle: 1
    },
    He[Ge.AMETHYST_WALL] = {
        name: "Amethyst wall",
        img: Le.CRAFT_AMETHYST_WALL,
        grid: 0,
        recycle: 1
    },
    He[Ge.AMETHYST_SPIKE] = {
        name: "Amethyst spike",
        img: Le.CRAFT_AMETHYST_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.AMETHYST_DOOR] = {
        name: "Amethyst door",
        img: Le.CRAFT_DOOR_AMETHYST_CLOSE,
        grid: 0,
        recycle: 1
    },
    He[Ge.CAP_SCARF] = {
        name: "Cap & scarf",
        img: Le.CRAFT_CAP_SCARF,
        grid: 0,
        recycle: 1
    },
    He[Ge.BLUE_CORD] = {
        name: "Blue cord",
        img: Le.CRAFT_BLUE_CORD,
        grid: 0,
        recycle: 0
    },
    He[Ge.LOCK] = {
        name: "Lock",
        img: Le.CRAFT_LOCK,
        grid: 0,
        recycle: 1
    },
    He[Ge.RESURRECTION] = {
        name: "Resurrection",
        img: Le.CRAFT_RESURRECTION,
        grid: 0,
        recycle: 1
    },
    He[Ge.LOCKPICK] = {
        name: "Lockpick",
        img: Le.CRAFT_LOCKPICK,
        grid: 0,
        recycle: 1
    },
    He[Ge.TOTEM] = {
        name: "Totem",
        img: Le.CRAFT_TOTEM,
        grid: 0,
        recycle: 1
    },
    He[Ge.AMETHYST_HELMET] = {
        name: "Amethyst helmet",
        img: Le.CRAFT_AMETHYST_HELMET,
        grid: 0,
        recycle: 1
    },
    He[Ge.SUPER_HAMMER] = {
        name: "Super hammer",
        img: Le.CRAFT_SUPER_HAMMER,
        grid: 0,
        recycle: 1
    },
    He[Ge.BRIDGE] = {
        name: "Bridge",
        img: Le.CRAFT_BRIDGE,
        grid: 1,
        recycle: 1
    },
    He[Ge.WOOD_TOWER] = {
        name: "Wood Tower",
        img: Le.CRAFT_WOOD_TOWER,
        grid: 1,
        recycle: 1
    },
    He[Ge.BOTTLE_FULL] = {
        name: "Bottle full",
        img: Le.CRAFT_BOTTLE_FULL,
        grid: 0,
        recycle: 0
    },
    He[Ge.BOTTLE_EMPTY] = {
        name: "Bottle empty",
        img: Le.CRAFT_BOTTLE_EMPTY,
        grid: 0,
        recycle: 0
    },
    He[Ge.SHOVEL] = {
        name: "Stone shovel",
        img: Le.CRAFT_SHOVEL,
        grid: 0,
        recycle: 1
    },
    He[Ge.WATERING_CAN] = {
        name: "Watering can",
        img: Le.CRAFT_WATERING_CAN,
        grid: 0,
        recycle: 0
    },
    He[Ge.WHEAT_SEED] = {
        name: "Wheat",
        img: Le.CRAFT_WHEAT_SEED,
        grid: 0,
        recycle: 0
    },
    He[Ge.COOKIE] = {
        name: "Cookie",
        img: Le.CRAFT_COOKIE,
        grid: 0,
        recycle: 0
    },
    He[Ge.WINDMILL] = {
        name: "Windmill",
        img: Le.CRAFT_WINDMILL,
        grid: 0,
        recycle: 1
    },
    He[Ge.SUPER_DIVING_SUIT] = {
        name: "Super diving suit",
        img: Le.CRAFT_SUPER_DIVING_SUIT,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIVING_MASK] = {
        name: "Diving mask",
        img: Le.CRAFT_DIVING_MASK,
        grid: 0,
        recycle: 1
    },
    He[Ge.WATERING_CAN_FULL] = {
        name: "Watering can full",
        img: Le.CRAFT_WATERING_CAN_FULL,
        grid: 0,
        recycle: 0
    },
    He[Ge.CAKE] = {
        name: "Cake",
        img: Le.CRAFT_CAKE,
        grid: 0,
        recycle: 0
    },
    He[Ge.FOODFISH_COOKED] = {
        name: "Foodfish cooked",
        img: Le.CRAFT_FOODFISH_COOKED,
        grid: 0,
        recycle: 0
    },
    He[Ge.PLOT] = {
        name: "Plot",
        img: Le.CRAFT_PLOT,
        grid: 1,
        recycle: 1
    },
    He[Ge.BREAD] = {
        name: "Bread",
        img: Le.CRAFT_BREAD,
        grid: 0,
        recycle: 0
    },
    He[Ge.BOTTLE_FULL_2] = {
        name: "Bottle full (with ice)",
        img: Le.CRAFT_BOTTLE_FULL_2,
        grid: 0,
        recycle: 1
    },
    He[Ge.BOTTLE_FULL_3] = {
        name: "Bottle full (with well)",
        img: Le.CRAFT_BOTTLE_FULL_3,
        grid: 0,
        recycle: 1
    },
    He[Ge.SHOVEL_GOLD] = {
        name: "Gold shovel",
        img: Le.CRAFT_SHOVEL_GOLD,
        grid: 0,
        recycle: 1
    },
    He[Ge.SHOVEL_DIAMOND] = {
        name: "Diamond shovel",
        img: Le.CRAFT_SHOVEL_DIAMOND,
        grid: 0,
        recycle: 1
    },
    He[Ge.SHOVEL_AMETHYST] = {
        name: "Amethyst shovel",
        img: Le.CRAFT_SHOVEL_AMETHYST,
        grid: 0,
        recycle: 1
    },
    He[Ge.SPANNER] = {
        name: "Spanner",
        img: Le.CRAFT_SPANNER,
        grid: 0,
        recycle: 1
    },
    He[Ge.MACHETE] = {
        name: "Machete",
        img: Le.CRAFT_MACHETE,
        grid: 0,
        recycle: 1
    },
    He[Ge.BREAD_OVEN] = {
        name: "Bread oven",
        img: Le.CRAFT_BREAD_OVEN,
        grid: 0,
        recycle: 1
    },
    He[Ge.SANDWICH] = {
        name: "Sandwich",
        img: Le.CRAFT_SANDWICH,
        grid: 0,
        recycle: 0
    },
    He[Ge.DRAGON_HELMET] = {
        name: "Dragon helmet",
        img: Le.CRAFT_DRAGON_HELMET,
        grid: 0,
        recycle: 0
    },
    He[Ge.LAVA_HELMET] = {
        name: "Dragon helmet",
        img: Le.CRAFT_LAVA_HELMET,
        grid: 0,
        recycle: 0
    },
    He[Ge.WITCH] = {
        name: "Witch",
        img: Le.CRAFT_WITCH,
        grid: 0,
        recycle: 0
    },
    He[Ge.NIMBUS] = {
        name: "Nimbus",
        img: Le.CRAFT_NIMBUS,
        grid: 0,
        recycle: 0
    },
    He[Ge.WAND1] = {
        name: "Wand1",
        img: Le.CRAFT_WAND1,
        grid: 0,
        recycle: 0
    },
    He[Ge.WAND2] = {
        name: "Wand2",
        img: Le.CRAFT_WAND2,
        grid: 0,
        recycle: 0
    },
    He[Ge.DRAGON_SWORD] = {
        name: "Dragon sword",
        img: Le.CRAFT_DRAGON_SWORD,
        grid: 0,
        recycle: 0
    },
    He[Ge.LAVA_SWORD] = {
        name: "Dragon sword",
        img: Le.CRAFT_LAVA_SWORD,
        grid: 0,
        recycle: 0
    },
    He[Ge.WOOD_SHIELD] = {
        name: "Wood shield",
        img: Le.CRAFT_WOOD_SHIELD,
        grid: 0,
        recycle: 1
    },
    He[Ge.STONE_SHIELD] = {
        name: "Stone shield",
        img: Le.CRAFT_STONE_SHIELD,
        grid: 0,
        recycle: 1
    },
    He[Ge.GOLD_SHIELD] = {
        name: "Gold shield",
        img: Le.CRAFT_GOLD_SHIELD,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIAMOND_SHIELD] = {
        name: "Diamond shield",
        img: Le.CRAFT_DIAMOND_SHIELD,
        grid: 0,
        recycle: 1
    },
    He[Ge.AMETHYST_SHIELD] = {
        name: "Amethyst shield",
        img: Le.CRAFT_AMETHYST_SHIELD,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_SHIELD] = {
        name: "Reidite shield",
        img: Le.CRAFT_REIDITE_SHIELD,
        grid: 0,
        recycle: 1
    },
    He[Ge.WOOD_BOW] = {
        name: "Wood bow",
        img: Le.CRAFT_WOOD_BOW,
        grid: 0,
        recycle: 1
    },
    He[Ge.STONE_BOW] = {
        name: "Stone bow",
        img: Le.CRAFT_STONE_BOW,
        grid: 0,
        recycle: 1
    },
    He[Ge.GOLD_BOW] = {
        name: "Gold bow",
        img: Le.CRAFT_GOLD_BOW,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIAMOND_BOW] = {
        name: "Diamond bow",
        img: Le.CRAFT_DIAMOND_BOW,
        grid: 0,
        recycle: 1
    },
    He[Ge.AMETHYST_BOW] = {
        name: "Amethyst bow",
        img: Le.CRAFT_AMETHYST_BOW,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_BOW] = {
        name: "Reidite bow",
        img: Le.CRAFT_REIDITE_BOW,
        grid: 0,
        recycle: 1
    },
    He[Ge.DRAGON_BOW] = {
        name: "Dragon bow",
        img: Le.CRAFT_DRAGON_BOW,
        grid: 0,
        recycle: 0
    },
    He[Ge.CROWN_GREEN] = {
        name: "Crown of life",
        img: Le.CRAFT_CROWN_GREEN,
        grid: 0,
        recycle: 0
    },
    He[Ge.GEMME_GREEN] = {
        name: "Gem of life",
        img: Le.INV_GEMME_GREEN,
        grid: 0,
        recycle: 0
    },
    He[Ge.DRAGON_ORB] = {
        name: "Orb of the dragon",
        img: Le.INV_DRAGON_ORB,
        grid: 0,
        recycle: 0
    },
    He[Ge.LAVA_ORB] = {
        name: "Orb of the dragon",
        img: Le.INV_LAVA_ORB,
        grid: 0,
        recycle: 0
    },
    He[Ge.DRAGON_CUBE] = {
        name: "Cube of the dragon",
        img: Le.INV_DRAGON_CUBE,
        grid: 0,
        recycle: 0
    },
    He[Ge.LAVA_CUBE] = {
        name: "Cube of the dragon",
        img: Le.INV_LAVA_CUBE,
        grid: 0,
        recycle: 0
    },
    He[Ge.CROWN_ORANGE] = {
        name: "Crown of luck",
        img: Le.CRAFT_CROWN_ORANGE,
        grid: 0,
        recycle: 0
    },
    He[Ge.GEMME_ORANGE] = {
        name: "Gem of luck",
        img: Le.INV_GEMME_ORANGE,
        grid: 0,
        recycle: 0
    },
    He[Ge.CROWN_BLUE] = {
        name: "Crown of the angel",
        img: Le.CRAFT_CROWN_BLUE,
        grid: 0,
        recycle: 0
    },
    He[Ge.GEMME_BLUE] = {
        name: "Gem of the angel",
        img: Le.INV_GEMME_BLUE,
        grid: 0,
        recycle: 0
    },
    He[Ge.DRAGON_HEART] = {
        name: "Dragon heart",
        img: Le.INV_DRAGON_HEART,
        grid: 0,
        recycle: 0
    },
    He[Ge.LAVA_HEART] = {
        name: "Lava heart",
        img: Le.INV_LAVA_HEART,
        grid: 0,
        recycle: 0
    },
    He[Ge.HOOD] = {
        name: "Hood",
        img: Le.CRAFT_HOOD,
        grid: 0,
        recycle: 1
    },
    He[Ge.PEASANT] = {
        name: "Peasant",
        img: Le.CRAFT_PEASANT,
        grid: 0,
        recycle: 1
    },
    He[Ge.WINTER_PEASANT] = {
        name: "Winter peasant",
        img: Le.CRAFT_WINTER_PEASANT,
        grid: 0,
        recycle: 0
    },
    He[Ge.WINTER_HOOD] = {
        name: "Winter hood",
        img: Le.CRAFT_WINTER_HOOD,
        grid: 0,
        recycle: 0
    },
    He[Ge.BUCKET_FULL] = {
        name: "Bucket full",
        img: Le.CRAFT_BUCKET_FULL,
        grid: 0,
        recycle: 0
    },
    He[Ge.BUCKET_EMPTY] = {
        name: "Bucket empty",
        img: Le.CRAFT_BUCKET_EMPTY,
        grid: 0,
        recycle: 1
    },
    He[Ge.WELL] = {
        name: "Well",
        img: Le.CRAFT_WELL,
        grid: 0,
        recycle: 1
    },
    He[Ge.SIGN] = {
        name: "Sign",
        img: Le.CRAFT_SIGN,
        grid: 0,
        recycle: 1
    },
    He[Ge.PUMPKIN_SEED] = {
        name: "Pumpkin Seed",
        img: Le.CRAFT_PUMPKIN_SEED,
        grid: 0,
        recycle: 0
    },
    He[Ge.GARLIC_SEED] = {
        name: "Garlic Seed",
        img: Le.CRAFT_GARLIC_SEED,
        grid: 0,
        recycle: 0
    },
    He[Ge.THORNBUSH_SEED] = {
        name: "Thorbushes Seed",
        img: Le.CRAFT_THORNBUSH_SEED,
        grid: 0,
        recycle: 0
    },
    He[Ge.ROOF] = {
        name: "Roof",
        img: Le.CRAFT_ROOF,
        grid: 1,
        recycle: 1
    },
    He[Ge.CROWN_CRAB] = {
        name: "Crab Crown",
        img: Le.CRAFT_CROWN_CRAB,
        grid: 0,
        recycle: 1
    },
    He[Ge.CARROT_SEED] = {
        name: "Carrot Seed",
        img: Le.CRAFT_CARROT_SEED,
        grid: 0,
        recycle: 0
    },
    He[Ge.TOMATO_SEED] = {
        name: "Tomato Seed",
        img: Le.CRAFT_TOMATO_SEED,
        grid: 0,
        recycle: 0
    },
    He[Ge.WATERMELON_SEED] = {
        name: "Watermelon Seed",
        img: Le.CRAFT_WATERMELON_SEED,
        grid: 0,
        recycle: 0
    },
    He[Ge.ALOE_VERA_SEED] = {
        name: "Aloe Vera Seed",
        img: Le.CRAFT_ALOE_VERA_SEED,
        grid: 0,
        recycle: 0
    },
    He[Ge.TURBAN1] = {
        name: "Cap",
        img: Le.CRAFT_TURBAN1,
        grid: 0,
        recycle: 1
    },
    He[Ge.TURBAN2] = {
        name: "Turban",
        img: Le.CRAFT_TURBAN2,
        grid: 0,
        recycle: 1
    },
    He[Ge.PILOT_HELMET] = {
        name: "Pilot Helmet",
        img: Le.CRAFT_PILOT_HELMET,
        grid: 0,
        recycle: 1
    },
    He[Ge.EMERALD_MACHINE] = {
        name: "Emerald Machine",
        img: Le.CRAFT_EMERALD_MACHINE,
        grid: 0,
        recycle: 0
    },
    He[Ge.EXTRACTOR_MACHINE_STONE] = {
        name: "Emerald Machine",
        img: Le.CRAFT_EXTRACTOR_MACHINE_STONE,
        grid: 0,
        recycle: 1
    },
    He[Ge.EXTRACTOR_MACHINE_GOLD] = {
        name: "Emerald Machine",
        img: Le.CRAFT_EXTRACTOR_MACHINE_GOLD,
        grid: 0,
        recycle: 1
    },
    He[Ge.EXTRACTOR_MACHINE_DIAMOND] = {
        name: "Emerald Machine",
        img: Le.CRAFT_EXTRACTOR_MACHINE_DIAMOND,
        grid: 0,
        recycle: 1
    },
    He[Ge.EXTRACTOR_MACHINE_AMETHYST] = {
        name: "Emerald Machine",
        img: Le.CRAFT_EXTRACTOR_MACHINE_AMETHYST,
        grid: 0,
        recycle: 1
    },
    He[Ge.EXTRACTOR_MACHINE_REIDITE] = {
        name: "Emerald Machine",
        img: Le.CRAFT_EXTRACTOR_MACHINE_REIDITE,
        grid: 0,
        recycle: 1
    },
    He[Ge.PITCHFORK] = {
        name: "Pitchfork",
        img: Le.CRAFT_PITCHFORK,
        grid: 0,
        recycle: 1
    },
    He[Ge.WOOD_DOOR_SPIKE] = {
        name: "Wood Door Spike",
        img: Le.CRAFT_WOOD_DOOR_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.STONE_DOOR_SPIKE] = {
        name: "Stone Door Spike",
        img: Le.CRAFT_STONE_DOOR_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.GOLD_DOOR_SPIKE] = {
        name: "Gold Door Spike",
        img: Le.CRAFT_GOLD_DOOR_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIAMOND_DOOR_SPIKE] = {
        name: "Diamond Door Spike",
        img: Le.CRAFT_DIAMOND_DOOR_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.AMETHYST_DOOR_SPIKE] = {
        name: "Amethyst Door Spike",
        img: Le.CRAFT_AMETHYST_DOOR_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.DIAMOND_PROTECTION] = {
        name: "Diamond Fire Protection ",
        img: Le.CRAFT_DIAMOND_PROTECTION,
        grid: 0,
        recycle: 1
    },
    He[Ge.AMETHYST_PROTECTION] = {
        name: "Amethyst Fire Protection ",
        img: Le.CRAFT_AMETHYST_PROTECTION,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_PROTECTION] = {
        name: "Amethyst Fire Protection ",
        img: Le.CRAFT_REIDITE_PROTECTION,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_SWORD] = {
        name: "Reidite Sword",
        img: Le.CRAFT_REIDITE_SWORD,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_SPEAR] = {
        name: "Reidite Spear",
        img: Le.CRAFT_REIDITE_SPEAR,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_HELMET] = {
        name: "Reidite Helmet",
        img: Le.CRAFT_REIDITE_HELMET,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_DOOR_SPIKE] = {
        name: "Reidite Door Spike",
        img: Le.CRAFT_REIDITE_DOOR_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_DOOR] = {
        name: "Reidite Door",
        img: Le.CRAFT_REIDITE_DOOR,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_SPIKE] = {
        name: "Reidite Spike",
        img: Le.CRAFT_REIDITE_SPIKE,
        grid: 0,
        recycle: 1
    },
    He[Ge.REIDITE_WALL] = {
        name: "Reidite Wall",
        img: Le.CRAFT_REIDITE_WALL,
        grid: 0,
        recycle: 1
    },
    He[Ge.PICK_REIDITE] = {
        name: "Reidite pick",
        img: Le.CRAFT_PICK_REIDITE,
        grid: 0,
        recycle: 1
    },
    He[Ge.BOAT] = {
        name: "Boat",
        img: Le.CRAFT_BOAT,
        grid: 0,
        recycle: 1
    },
    He[Ge.SLED] = {
        name: "Sled",
        img: Le.CRAFT_SLED,
        grid: 0,
        recycle: 1
    },
    He[Ge.SADDLE] = {
        name: "Saddle",
        img: Le.CRAFT_SADDLE,
        grid: 0,
        recycle: 1
    },
    He[Ge.MOUNT_BOAR] = {
        name: "Mount Boar",
        img: Le.CRAFT_MOUNT_BOAR,
        grid: 0,
        recycle: 0
    },
    He[Ge.CRAB_BOSS] = {
        name: "Mount King Crab",
        img: Le.CRAFT_CRAB_BOSS,
        grid: 0,
        recycle: 0
    },
    He[Ge.BABY_DRAGON] = {
        name: "Mount Baby Dragon",
        img: Le.CRAFT_BABY_DRAGON,
        grid: 0,
        recycle: 0
    },
    He[Ge.BABY_LAVA] = {
        name: "Mount Baby Lava",
        img: Le.CRAFT_BABY_LAVA,
        grid: 0,
        recycle: 0
    },
    He[Ge.HAWK] = {
        name: "Mount Hawk",
        img: Le.CRAFT_HAWK,
        grid: 0,
        recycle: 0
    },
    He[Ge.PLANE] = {
        name: "Plane",
        img: Le.CRAFT_PLANE,
        grid: 0,
        recycle: 0
    },
    He[Ge.PITCHFORK2] = {
        name: "Pitchfork 2",
        img: Le.CRAFT_PITCHFORK2,
        grid: 0,
        recycle: 0
    },
    He[Ge.BABY_MAMMOTH] = {
        name: "Baby Mammoth",
        img: Le.CRAFT_BABY_MAMMOTH,
        grid: 0,
        recycle: 0
    },
    void 0), S = [{
        r: [[Ge.WOOD, 25], [Ge.STONE, 5]],
        w: 0,
        f: 0,
        o: 0,
        e: 0,
        id: E.FIRE,
        id2: Ge.FIRE,
        time: .2,
        t: T.Utils
    }, {
        r: [[Ge.FIRE, 1], [Ge.WOOD, 35], [Ge.STONE, 10]],
        w: 0,
        f: 0,
        o: 0,
        e: 0,
        id: E.BIG_FIRE,
        id2: Ge.BIG_FIRE,
        time: .2,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 150], [Ge.STONE, 50], [Ge.GOLD, 15]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.FURNACE,
        id2: Ge.FURNACE,
        time: .05,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 20], [Ge.STONE, 10]],
        w: 0,
        f: 0,
        o: 0,
        e: 0,
        id: E.WORKBENCH,
        id2: Ge.WORKBENCH,
        time: 1 / 6,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 10]],
        w: 0,
        f: 0,
        o: 0,
        e: 0,
        id: E.PICK_WOOD,
        id2: Ge.PICK_WOOD,
        time: 1 / 3,
        t: T.TOOLS
    }, {
        r: [[Ge.PICK_WOOD, 1], [Ge.WOOD, 50], [Ge.STONE, 15]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PICK,
        id2: Ge.PICK,
        time: 1 / 8,
        t: T.TOOLS
    }, {
        r: [[Ge.WOOD, 40], [Ge.GOLD, 20], [Ge.STONE, 30], [Ge.PICK, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PICK_GOLD,
        id2: Ge.PICK_GOLD,
        time: 1 / 12,
        t: T.TOOLS
    }, {
        r: [[Ge.DIAMOND, 20], [Ge.GOLD, 50], [Ge.STONE, 80], [Ge.PICK_GOLD, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PICK_DIAMOND,
        id2: Ge.PICK_DIAMOND,
        time: .05,
        t: T.TOOLS
    }, {
        r: [[Ge.DIAMOND, 40], [Ge.GOLD, 60], [Ge.AMETHYST, 30], [Ge.PICK_DIAMOND, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PICK_AMETHYST,
        id2: Ge.PICK_AMETHYST,
        time: 1 / 60,
        t: T.TOOLS
    }, {
        r: [[Ge.AMETHYST, 30], [Ge.DIAMOND, 40], [Ge.REIDITE, 30], [Ge.PICK_AMETHYST, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PICK_REIDITE,
        id2: Ge.PICK_REIDITE,
        time: 1 / 90,
        t: T.TOOLS
    }, {
        r: [[Ge.WOOD, 90], [Ge.STONE, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.HAMMER,
        id2: Ge.HAMMER,
        time: .1,
        t: T.TOOLS
    }, {
        r: [[Ge.WOOD, 160], [Ge.STONE, 120], [Ge.GOLD, 80], [Ge.HAMMER, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.HAMMER_GOLD,
        id2: Ge.HAMMER_GOLD,
        time: 1 / 15,
        t: T.TOOLS
    }, {
        r: [[Ge.DIAMOND, 80], [Ge.STONE, 200], [Ge.GOLD, 150], [Ge.HAMMER_GOLD, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.HAMMER_DIAMOND,
        id2: Ge.HAMMER_DIAMOND,
        time: .05,
        t: T.TOOLS
    }, {
        r: [[Ge.DIAMOND, 160], [Ge.AMETHYST, 60], [Ge.GOLD, 250], [Ge.HAMMER_DIAMOND, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.HAMMER_AMETHYST,
        id2: Ge.HAMMER_AMETHYST,
        time: 1 / 60,
        t: T.TOOLS
    }, {
        r: [[Ge.AMETHYST, 160], [Ge.REIDITE, 60], [Ge.DIAMOND, 250], [Ge.HAMMER_AMETHYST, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.HAMMER_REIDITE,
        id2: Ge.HAMMER_REIDITE,
        time: 1 / 90,
        t: T.TOOLS
    }, {
        r: [[Ge.HAMMER_REIDITE, 1], [Ge.BOTTLE_FULL, 1], [Ge.KRAKEN_SKIN, 1], [Ge.SCALES, 10], [Ge.AMETHYST, 20]],
        w: 1,
        f: 1,
        o: 0,
        e: 0,
        id: E.SUPER_HAMMER,
        id2: Ge.SUPER_HAMMER,
        time: 1 / 120,
        t: T.TOOLS
    }, {
        r: [[Ge.WOOD, 30], [Ge.STONE, 15]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SHOVEL,
        id2: Ge.SHOVEL,
        time: .2,
        t: T.TOOLS
    }, {
        r: [[Ge.SHOVEL, 1], [Ge.GOLD, 20], [Ge.STONE, 30], [Ge.WOOD, 40]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SHOVEL_GOLD,
        id2: Ge.SHOVEL_GOLD,
        time: .1,
        t: T.TOOLS
    }, {
        r: [[Ge.SHOVEL_GOLD, 1], [Ge.DIAMOND, 20], [Ge.GOLD, 50], [Ge.STONE, 80]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SHOVEL_DIAMOND,
        id2: Ge.SHOVEL_DIAMOND,
        time: .05,
        t: T.TOOLS
    }, {
        r: [[Ge.SHOVEL_DIAMOND, 1], [Ge.GOLD, 60], [Ge.AMETHYST, 30], [Ge.DIAMOND, 40]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SHOVEL_AMETHYST,
        id2: Ge.SHOVEL_AMETHYST,
        time: .025,
        t: T.TOOLS
    }, {
        r: [[Ge.WOOD, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WATERING_CAN,
        id2: Ge.WATERING_CAN,
        time: .2,
        t: T.TOOLS
    }, {
        r: [[Ge.WATERING_CAN, 1]],
        w: 0,
        f: 0,
        o: 1,
        e: 0,
        id: E.WATERING_CAN_FULL,
        id2: Ge.WATERING_CAN_FULL,
        time: .2,
        t: T.TOOLS
    }, {
        r: [[Ge.WOOD, 100], [Ge.STONE, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PITCHFORK,
        id2: Ge.PITCHFORK,
        time: .1,
        t: T.TOOLS
    }, {
        r: [[Ge.PITCHFORK, 1], [Ge.PITCHFORK_PART, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PITCHFORK2,
        id2: Ge.PITCHFORK2,
        time: 1 / 60,
        t: T.TOOLS
    }, {
        r: [[Ge.PAPER, 4], [Ge.CORD, 4], [Ge.FUR_WOLF, 4]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.BOOK,
        id2: Ge.BOOK,
        time: 1 / 15,
        t: T.TOOLS
    }, {
        r: [[Ge.WOOD, 40]],
        w: 0,
        f: 0,
        o: 0,
        e: 0,
        id: E.WOOD_SPEAR,
        id2: Ge.WOOD_SPEAR,
        time: .2,
        t: T.WEAPONS
    }, {
        r: [[Ge.WOOD_SPEAR, 1], [Ge.WOOD, 60], [Ge.STONE, 10]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SPEAR,
        id2: Ge.SPEAR,
        time: .1,
        t: T.WEAPONS
    }, {
        r: [[Ge.WOOD, 80], [Ge.GOLD, 30], [Ge.STONE, 30], [Ge.SPEAR, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.GOLD_SPEAR,
        id2: Ge.GOLD_SPEAR,
        t: T.WEAPONS,
        time: .05
    }, {
        r: [[Ge.WOOD, 200], [Ge.DIAMOND, 40], [Ge.GOLD, 60], [Ge.GOLD_SPEAR, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DIAMOND_SPEAR,
        id2: Ge.DIAMOND_SPEAR,
        time: 1 / 30,
        t: T.WEAPONS
    }, {
        r: [[Ge.AMETHYST, 40], [Ge.DIAMOND, 80], [Ge.GOLD, 90], [Ge.DIAMOND_SPEAR, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.AMETHYST_SPEAR,
        id2: Ge.AMETHYST_SPEAR,
        time: 1 / 60,
        t: T.WEAPONS
    }, {
        r: [[Ge.REIDITE, 40], [Ge.AMETHYST, 80], [Ge.DIAMOND, 90], [Ge.AMETHYST_SPEAR, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.REIDITE_SPEAR,
        id2: Ge.REIDITE_SPEAR,
        time: 1 / 90,
        t: T.WEAPONS
    }, {
        r: [[Ge.BLUE_CORD, 20], [Ge.DRAGON_ORB, 1], [Ge.AMETHYST, 100], [Ge.DRAGON_HEART, 3]],
        w: 1,
        f: 1,
        o: 1,
        e: 0,
        id: E.DRAGON_SPEAR,
        id2: Ge.DRAGON_SPEAR,
        time: 1 / 120,
        t: T.WEAPONS
    }, {
        r: [[Ge.DRAGON_SPEAR, 1], [Ge.LAVA_ORB, 1], [Ge.REIDITE, 100], [Ge.LAVA_HEART, 2]],
        w: 1,
        f: 1,
        o: 1,
        e: 0,
        id: E.LAVA_SPEAR,
        id2: Ge.LAVA_SPEAR,
        time: .005,
        t: T.WEAPONS
    }, {
        r: [[Ge.WOOD_SPEAR, 1], [Ge.CRAB_LOOT, 5], [Ge.CORD, 6]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.CRAB_SPEAR,
        id2: Ge.CRAB_SPEAR,
        time: 1 / 30,
        t: T.WEAPONS
    }, {
        r: [[Ge.WOOD, 30]],
        w: 0,
        f: 0,
        o: 0,
        e: 0,
        id: E.SWORD_WOOD,
        id2: Ge.SWORD_WOOD,
        time: .2,
        t: T.WEAPONS
    }, {
        r: [[Ge.WOOD, 50], [Ge.STONE, 25], [Ge.SWORD_WOOD, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SWORD,
        id2: Ge.SWORD,
        time: .1,
        t: T.WEAPONS
    }, {
        r: [[Ge.WOOD, 60], [Ge.GOLD, 40], [Ge.STONE, 50], [Ge.SWORD, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SWORD_GOLD,
        id2: Ge.SWORD_GOLD,
        time: .05,
        t: T.WEAPONS
    }, {
        r: [[Ge.DIAMOND, 40], [Ge.GOLD, 60], [Ge.STONE, 80], [Ge.SWORD_GOLD, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SWORD_DIAMOND,
        id2: Ge.SWORD_DIAMOND,
        time: 1 / 30,
        t: T.WEAPONS
    }, {
        r: [[Ge.DIAMOND, 60], [Ge.GOLD, 100], [Ge.AMETHYST, 40], [Ge.SWORD_DIAMOND, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SWORD_AMETHYST,
        id2: Ge.SWORD_AMETHYST,
        time: 1 / 60,
        t: T.WEAPONS
    }, {
        r: [[Ge.DIAMOND, 100], [Ge.AMETHYST, 80], [Ge.REIDITE, 40], [Ge.SWORD_AMETHYST, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.REIDITE_SWORD,
        id2: Ge.REIDITE_SWORD,
        time: 1 / 90,
        t: T.WEAPONS
    }, {
        r: [[Ge.PLANT, 3]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.SEED,
        id2: Ge.SEED,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.WILD_WHEAT, 3]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.WHEAT_SEED,
        id2: Ge.WHEAT_SEED,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.PUMPKIN, 8]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.PUMPKIN_SEED,
        id2: Ge.PUMPKIN_SEED,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.GARLIC, 8]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.GARLIC_SEED,
        id2: Ge.GARLIC_SEED,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.THORNBUSH, 8]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.THORNBUSH_SEED,
        id2: Ge.THORNBUSH_SEED,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.CARROT, 8]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.CARROT_SEED,
        id2: Ge.CARROT_SEED,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.TOMATO, 8]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.TOMATO_SEED,
        id2: Ge.TOMATO_SEED,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.WATERMELON, 16]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.WATERMELON_SEED,
        id2: Ge.WATERMELON_SEED,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.ALOE_VERA, 16]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.ALOE_VERA_SEED,
        id2: Ge.ALOE_VERA_SEED,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.MEAT, 1]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.COOKED_MEAT,
        id2: Ge.COOKED_MEAT,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.FOODFISH, 1]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.FOODFISH_COOKED,
        id2: Ge.FOODFISH_COOKED,
        time: 1 / 3,
        t: T.FOODS
    }, {
        r: [[Ge.FLOUR, 3]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.BREAD,
        id2: Ge.BREAD,
        time: 1 / 3,
        t: T.FOODS
    }, {
        r: [[Ge.FLOUR, 3], [Ge.PLANT, 1]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.COOKIE,
        id2: Ge.COOKIE,
        time: 1 / 3,
        t: T.FOODS
    }, {
        r: [[Ge.FLOUR, 5], [Ge.PLANT, 2], [Ge.ICE, 2]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.CAKE,
        id2: Ge.CAKE,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.CORD, 2]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.BANDAGE,
        id2: Ge.BANDAGE,
        time: .2,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 20]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WALL,
        id2: Ge.WALL,
        time: .2,
        t: T.BASES
    }, {
        r: [[Ge.WALL, 1], [Ge.STONE, 17]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.STONE_WALL,
        id2: Ge.STONE_WALL,
        time: .2,
        t: T.BASES
    }, {
        r: [[Ge.STONE_WALL, 1], [Ge.GOLD, 14]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.GOLD_WALL,
        id2: Ge.GOLD_WALL,
        time: .2,
        t: T.BASES
    }, {
        r: [[Ge.GOLD_WALL, 1], [Ge.DIAMOND, 11]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DIAMOND_WALL,
        id2: Ge.DIAMOND_WALL,
        time: .2,
        t: T.BASES
    }, {
        r: [[Ge.DIAMOND_WALL, 1], [Ge.AMETHYST, 8]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.AMETHYST_WALL,
        id2: Ge.AMETHYST_WALL,
        time: .2,
        t: T.BASES
    }, {
        r: [[Ge.AMETHYST_WALL, 1], [Ge.REIDITE, 5]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.REIDITE_WALL,
        id2: Ge.REIDITE_WALL,
        time: .2,
        t: T.BASES
    }, {
        r: [[Ge.WOOD, 30]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WOOD_DOOR,
        id2: Ge.WOOD_DOOR,
        time: 1 / 8,
        t: T.BASES
    }, {
        r: [[Ge.WOOD_DOOR, 1], [Ge.STONE, 27]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.STONE_DOOR,
        id2: Ge.STONE_DOOR,
        time: 1 / 8,
        t: T.BASES
    }, {
        r: [[Ge.STONE_DOOR, 1], [Ge.GOLD, 24]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.GOLD_DOOR,
        id2: Ge.GOLD_DOOR,
        time: 1 / 8,
        t: T.BASES
    }, {
        r: [[Ge.GOLD_DOOR, 1], [Ge.DIAMOND, 21]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DIAMOND_DOOR,
        id2: Ge.DIAMOND_DOOR,
        time: 1 / 8,
        t: T.BASES
    }, {
        r: [[Ge.DIAMOND_DOOR, 1], [Ge.AMETHYST, 18]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.AMETHYST_DOOR,
        id2: Ge.AMETHYST_DOOR,
        time: 1 / 8,
        t: T.BASES
    }, {
        r: [[Ge.AMETHYST_DOOR, 1], [Ge.REIDITE, 15]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.REIDITE_DOOR,
        id2: Ge.REIDITE_DOOR,
        time: 1 / 8,
        t: T.BASES
    }, {
        r: [[Ge.WALL, 1], [Ge.WOOD, 40], [Ge.STONE, 30]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SPIKE,
        id2: Ge.SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.STONE_WALL, 1], [Ge.STONE, 70]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.STONE_SPIKE,
        id2: Ge.STONE_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.GOLD_WALL, 1], [Ge.GOLD, 40], [Ge.STONE, 30]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.GOLD_SPIKE,
        id2: Ge.GOLD_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.DIAMOND_WALL, 1], [Ge.DIAMOND, 40], [Ge.STONE, 30]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DIAMOND_SPIKE,
        id2: Ge.DIAMOND_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.AMETHYST_WALL, 1], [Ge.AMETHYST, 40], [Ge.STONE, 30]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.AMETHYST_SPIKE,
        id2: Ge.AMETHYST_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.REIDITE_WALL, 1], [Ge.REIDITE, 40], [Ge.GOLD, 30]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.REIDITE_SPIKE,
        id2: Ge.REIDITE_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.WOOD_DOOR, 1], [Ge.WOOD, 80], [Ge.STONE, 60]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WOOD_DOOR_SPIKE,
        id2: Ge.WOOD_DOOR_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.STONE_DOOR, 1], [Ge.STONE, 140]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.STONE_DOOR_SPIKE,
        id2: Ge.STONE_DOOR_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.GOLD_DOOR, 1], [Ge.GOLD, 80], [Ge.STONE, 60]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.GOLD_DOOR_SPIKE,
        id2: Ge.GOLD_DOOR_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.DIAMOND_DOOR, 1], [Ge.DIAMOND, 80], [Ge.STONE, 60]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DIAMOND_DOOR_SPIKE,
        id2: Ge.DIAMOND_DOOR_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.AMETHYST_DOOR, 1], [Ge.AMETHYST, 80], [Ge.STONE, 60]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.AMETHYST_DOOR_SPIKE,
        id2: Ge.AMETHYST_DOOR_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.REIDITE_DOOR, 1], [Ge.REIDITE, 80], [Ge.GOLD, 60]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.REIDITE_DOOR_SPIKE,
        id2: Ge.REIDITE_DOOR_SPIKE,
        time: .05,
        t: T.BASES
    }, {
        r: [[Ge.WOOD, 25], [Ge.GOLD, 2]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.CHEST,
        id2: Ge.CHEST,
        time: .2,
        t: T.Utils
    }, {
        r: [[Ge.PAPER, 1], [Ge.FUR, 1], [Ge.CORD, 2]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.EXPLORER_HAT,
        id2: Ge.EXPLORER_HAT,
        time: .2,
        t: T.CLOTHES
    }, {
        r: [[Ge.PAPER, 5], [Ge.PENGUIN_FEATHER, 20], [Ge.BLUE_CORD, 5], [Ge.FUR, 5]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PIRATE_HAT,
        id2: Ge.PIRATE_HAT,
        time: 1 / 30,
        t: T.CLOTHES
    }, {
        r: [[Ge.PILOT_GLASSES, 1], [Ge.HAWK_FEATHER, 8], [Ge.VULTURE_FEATHER, 8], [Ge.PENGUIN_FEATHER, 8], [Ge.CORD, 6]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PILOT_HELMET,
        id2: Ge.PILOT_HELMET,
        time: 1 / 60,
        t: T.CLOTHES
    }, {
        r: [[Ge.FUR, 1], [Ge.CORD, 2]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.EARMUFFS,
        id2: Ge.EARMUFFS,
        time: .2,
        t: T.CLOTHES
    }, {
        r: [[Ge.EARMUFFS, 1], [Ge.FUR_WOLF, 5], [Ge.CORD, 4]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.COAT,
        id2: Ge.COAT,
        time: 1 / 12,
        t: T.CLOTHES
    }, {
        r: [[Ge.COAT, 1], [Ge.FUR_WINTER, 5], [Ge.BLUE_CORD, 4]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.CAP_SCARF,
        id2: Ge.CAP_SCARF,
        time: 1 / 30,
        t: T.CLOTHES
    }, {
        r: [[Ge.CAP_SCARF, 1], [Ge.FUR_WINTER, 5], [Ge.FUR_MAMMOTH, 10], [Ge.BLUE_CORD, 4]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.FUR_HAT,
        id2: Ge.FUR_HAT,
        time: .02,
        t: T.CLOTHES
    }, {
        r: [[Ge.WOOD, 50]],
        w: 0,
        f: 0,
        o: 0,
        e: 0,
        id: E.WOOD_HELMET,
        id2: Ge.WOOD_HELMET,
        time: .2,
        t: T.CLOTHES
    }, {
        r: [[Ge.STONE, 75], [Ge.WOOD, 75], [Ge.WOOD_HELMET, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.STONE_HELMET,
        id2: Ge.STONE_HELMET,
        time: .1,
        t: T.CLOTHES
    }, {
        r: [[Ge.STONE, 90], [Ge.WOOD, 90], [Ge.GOLD, 90], [Ge.STONE_HELMET, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.GOLD_HELMET,
        id2: Ge.GOLD_HELMET,
        time: .05,
        t: T.CLOTHES
    }, {
        r: [[Ge.STONE, 100], [Ge.GOLD, 100], [Ge.DIAMOND, 100], [Ge.GOLD_HELMET, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DIAMOND_HELMET,
        id2: Ge.DIAMOND_HELMET,
        time: 1 / 30,
        t: T.CLOTHES
    }, {
        r: [[Ge.AMETHYST, 80], [Ge.GOLD, 150], [Ge.DIAMOND, 120], [Ge.DIAMOND_HELMET, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.AMETHYST_HELMET,
        id2: Ge.AMETHYST_HELMET,
        time: 1 / 60,
        t: T.CLOTHES
    }, {
        r: [[Ge.REIDITE, 80], [Ge.DIAMOND, 150], [Ge.AMETHYST, 120], [Ge.AMETHYST_HELMET, 1]],
        w: 1,
        f: 1,
        o: 0,
        e: 0,
        id: E.REIDITE_HELMET,
        id2: Ge.REIDITE_HELMET,
        time: 1 / 90,
        t: T.CLOTHES
    }, {
        r: [[Ge.SCALES, 2], [Ge.DIAMOND, 40], [Ge.CORD, 4]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DIVING_MASK,
        id2: Ge.DIVING_MASK,
        time: .05,
        t: T.CLOTHES
    }, {
        r: [[Ge.DIVING_MASK, 1], [Ge.GOLD, 80], [Ge.KRAKEN_SKIN, 1], [Ge.AMETHYST, 20]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SUPER_DIVING_SUIT,
        id2: Ge.SUPER_DIVING_SUIT,
        time: 1 / 90,
        t: T.CLOTHES
    }, {
        r: [[Ge.FLAME, 5], [Ge.DIAMOND, 50], [Ge.BLUE_CORD, 5]],
        w: 1,
        f: 1,
        o: 0,
        e: 0,
        id: E.DIAMOND_PROTECTION,
        id2: Ge.DIAMOND_PROTECTION,
        time: .05,
        t: T.CLOTHES
    }, {
        r: [[Ge.DIAMOND_PROTECTION, 1], [Ge.FLAME, 10], [Ge.AMETHYST, 50]],
        w: 1,
        f: 1,
        o: 0,
        e: 0,
        id: E.AMETHYST_PROTECTION,
        id2: Ge.AMETHYST_PROTECTION,
        time: 1 / 60,
        t: T.CLOTHES
    }, {
        r: [[Ge.AMETHYST_PROTECTION, 1], [Ge.FLAME, 15], [Ge.AMETHYST, 50], [Ge.REIDITE, 50]],
        w: 1,
        f: 1,
        o: 0,
        e: 0,
        id: E.REIDITE_PROTECTION,
        id2: Ge.REIDITE_PROTECTION,
        time: 1 / 90,
        t: T.CLOTHES
    }, {
        r: [[Ge.CORD, 4], [Ge.FUR_BOAR, 2]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.TURBAN1,
        id2: Ge.TURBAN1,
        time: 1 / 15,
        t: T.CLOTHES
    }, {
        r: [[Ge.TURBAN1, 1], [Ge.CORD, 6], [Ge.FUR_BOAR, 4], [Ge.VULTURE_FEATHER, 12], [Ge.PENGUIN_FEATHER, 4]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.TURBAN2,
        id2: Ge.TURBAN2,
        time: 1 / 150,
        t: T.CLOTHES
    }, {
        r: [[Ge.CORD, 6], [Ge.FUR_WOLF, 5]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.BAG,
        id2: Ge.BAG,
        time: 1 / 15,
        t: T.CLOTHES
    }, {
        r: [[Ge.WOOD, 20]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.PAPER,
        id2: Ge.PAPER,
        time: 1 / 3,
        t: T.Utils
    }, {
        r: [[Ge.DIAMOND, 1], [Ge.CORD, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.BLUE_CORD,
        id2: Ge.BLUE_CORD,
        time: 1 / 3,
        t: T.Utils
    }, {
        r: [[Ge.GOLD, 10]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.LOCK,
        id2: Ge.LOCK,
        time: .2,
        t: T.Utils
    }, {
        r: [[Ge.GOLD, 250]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.LOCKPICK,
        id2: Ge.LOCKPICK,
        time: 1 / 60,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.TOTEM,
        id2: Ge.TOTEM,
        time: .1,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 15]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.BRIDGE,
        id2: Ge.BRIDGE,
        time: .2,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 30]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.ROOF,
        id2: Ge.ROOF,
        time: .2,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 120]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WOOD_TOWER,
        id2: Ge.WOOD_TOWER,
        time: 1 / 15,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 20], [Ge.GROUND, 15]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PLOT,
        id2: Ge.PLOT,
        time: .2,
        t: T.Utils
    }, {
        r: [[Ge.SAND, 25]],
        w: 1,
        f: 1,
        o: 0,
        e: 0,
        id: E.BOTTLE_EMPTY,
        id2: Ge.BOTTLE_EMPTY,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.BOTTLE_EMPTY, 1]],
        w: 0,
        f: 0,
        o: 1,
        e: 0,
        id: E.BOTTLE_FULL,
        id2: Ge.BOTTLE_FULL,
        time: .2,
        t: T.FOODS
    }, {
        r: [[Ge.ICE, 20], [Ge.BOTTLE_EMPTY, 1]],
        w: 0,
        f: 1,
        o: 0,
        e: 0,
        id: E.BOTTLE_FULL_2,
        id2: Ge.BOTTLE_FULL,
        time: .1,
        t: T.FOODS
    }, {
        r: [[Ge.BOTTLE_EMPTY, 1]],
        w: 0,
        f: 0,
        o: 0,
        e: 1,
        id: E.BOTTLE_FULL_3,
        id2: Ge.BOTTLE_FULL,
        time: 1 / 3,
        t: T.FOODS
    }, {
        r: [[Ge.WOOD, 60], [Ge.STONE, 20], [Ge.CORD, 2]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WINDMILL,
        id2: Ge.WINDMILL,
        time: .1,
        t: T.Utils
    }, {
        r: [[Ge.DIAMOND, 40], [Ge.STONE, 45]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.RESURRECTION,
        id2: Ge.RESURRECTION,
        time: .05,
        t: T.Utils
    }, {
        r: [[Ge.RESURRECTION, 1], [Ge.EMERALD, 40], [Ge.SANDWORM_JUICE, 1]],
        w: 1,
        f: 1,
        o: 1,
        e: 0,
        id: E.EMERALD_MACHINE,
        id2: Ge.EMERALD_MACHINE,
        time: .005,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 50], [Ge.STONE, 100]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.EXTRACTOR_MACHINE_STONE,
        id2: Ge.EXTRACTOR_MACHINE_STONE,
        time: 1 / 90,
        t: T.Utils
    }, {
        r: [[Ge.STONE, 60], [Ge.GOLD, 120]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.EXTRACTOR_MACHINE_GOLD,
        id2: Ge.EXTRACTOR_MACHINE_GOLD,
        time: 1 / 90,
        t: T.Utils
    }, {
        r: [[Ge.GOLD, 70], [Ge.DIAMOND, 140]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.EXTRACTOR_MACHINE_DIAMOND,
        id2: Ge.EXTRACTOR_MACHINE_DIAMOND,
        time: 1 / 90,
        t: T.Utils
    }, {
        r: [[Ge.DIAMOND, 80], [Ge.AMETHYST, 160]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.EXTRACTOR_MACHINE_AMETHYST,
        id2: Ge.EXTRACTOR_MACHINE_AMETHYST,
        time: 1 / 90,
        t: T.Utils
    }, {
        r: [[Ge.AMETHYST, 90], [Ge.REIDITE, 180]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.EXTRACTOR_MACHINE_REIDITE,
        id2: Ge.EXTRACTOR_MACHINE_REIDITE,
        time: 1 / 90,
        t: T.Utils
    }, {
        r: [[Ge.STONE, 70]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SPANNER,
        id2: Ge.SPANNER,
        time: .1,
        t: T.TOOLS
    }, {
        r: [[Ge.STONE, 70], [Ge.WOOD, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.MACHETE,
        id2: Ge.MACHETE,
        time: .1,
        t: T.TOOLS
    }, {
        r: [[Ge.WOOD, 40], [Ge.STONE, 40]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.BREAD_OVEN,
        id2: Ge.BREAD_OVEN,
        time: .1,
        t: T.Utils
    }, {
        r: [[Ge.BREAD, 1], [Ge.COOKED_MEAT, 1]],
        w: 0,
        f: 0,
        o: 0,
        e: 0,
        id: E.SANDWICH,
        id2: Ge.SANDWICH,
        time: 1 / 3,
        t: T.FOODS
    }, {
        r: [[Ge.BLUE_CORD, 30], [Ge.DRAGON_CUBE, 1], [Ge.AMETHYST, 150], [Ge.DRAGON_HEART, 3]],
        w: 1,
        f: 1,
        o: 1,
        e: 0,
        id: E.DRAGON_HELMET,
        id2: Ge.DRAGON_HELMET,
        time: 1 / 120,
        t: T.CLOTHES
    }, {
        r: [[Ge.DRAGON_HELMET, 1], [Ge.LAVA_CUBE, 1], [Ge.REIDITE, 150], [Ge.LAVA_HEART, 2]],
        w: 1,
        f: 1,
        o: 1,
        e: 0,
        id: E.LAVA_HELMET,
        id2: Ge.LAVA_HELMET,
        time: 1 / 180,
        t: T.CLOTHES
    }, {
        r: [[Ge.GOLD_HELMET, 1], [Ge.CRAB_LOOT, 10], [Ge.CRAB_STICK, 10], [Ge.CORD, 10]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.CROWN_CRAB,
        id2: Ge.CROWN_CRAB,
        time: 1 / 60,
        t: T.CLOTHES
    }, {
        r: [[Ge.BLUE_CORD, 20], [Ge.DRAGON_ORB, 1], [Ge.AMETHYST, 150], [Ge.DRAGON_HEART, 3]],
        w: 1,
        f: 1,
        o: 1,
        e: 0,
        id: E.DRAGON_SWORD,
        id2: Ge.DRAGON_SWORD,
        time: 1 / 120,
        t: T.WEAPONS
    }, {
        r: [[Ge.DRAGON_SWORD, 1], [Ge.LAVA_ORB, 1], [Ge.REIDITE, 150], [Ge.LAVA_HEART, 2]],
        w: 1,
        f: 1,
        o: 1,
        e: 0,
        id: E.LAVA_SWORD,
        id2: Ge.LAVA_SWORD,
        time: 1 / 180,
        t: T.WEAPONS
    }, {
        r: [[Ge.WOOD, 100], [Ge.CORD, 4]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WOOD_BOW,
        id2: Ge.WOOD_BOW,
        time: .05,
        t: T.WEAPONS
    }, {
        r: [[Ge.WOOD, 30]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WOOD_ARROW,
        id2: Ge.WOOD_ARROW,
        time: .2,
        t: T.WEAPONS
    }, {
        r: [[Ge.STONE, 200], [Ge.CORD, 8], [Ge.PENGUIN_FEATHER, 4], [Ge.WOOD_BOW, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.STONE_BOW,
        id2: Ge.STONE_BOW,
        time: .04,
        t: T.WEAPONS
    }, {
        r: [[Ge.STONE, 20], [Ge.HAWK_FEATHER, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.STONE_ARROW,
        id2: Ge.STONE_ARROW,
        time: .2,
        t: T.WEAPONS
    }, {
        r: [[Ge.GOLD, 200], [Ge.CORD, 12], [Ge.HAWK_FEATHER, 4], [Ge.PENGUIN_FEATHER, 4], [Ge.STONE_BOW, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.GOLD_BOW,
        id2: Ge.GOLD_BOW,
        time: 1 / 30,
        t: T.WEAPONS
    }, {
        r: [[Ge.GOLD, 20], [Ge.PENGUIN_FEATHER, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.GOLD_ARROW,
        id2: Ge.GOLD_ARROW,
        time: .1,
        t: T.WEAPONS
    }, {
        r: [[Ge.DIAMOND, 200], [Ge.BLUE_CORD, 10], [Ge.HAWK_FEATHER, 8], [Ge.PENGUIN_FEATHER, 8], [Ge.GOLD_BOW, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DIAMOND_BOW,
        id2: Ge.DIAMOND_BOW,
        time: 1 / 35,
        t: T.WEAPONS
    }, {
        r: [[Ge.DIAMOND, 10], [Ge.PENGUIN_FEATHER, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DIAMOND_ARROW,
        id2: Ge.DIAMOND_ARROW,
        time: .1,
        t: T.WEAPONS
    }, {
        r: [[Ge.AMETHYST, 200], [Ge.BLUE_CORD, 10], [Ge.PENGUIN_FEATHER, 8], [Ge.VULTURE_FEATHER, 8], [Ge.DIAMOND_BOW, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.AMETHYST_BOW,
        id2: Ge.AMETHYST_BOW,
        time: .025,
        t: T.WEAPONS
    }, {
        r: [[Ge.AMETHYST, 10], [Ge.VULTURE_FEATHER, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.AMETHYST_ARROW,
        id2: Ge.AMETHYST_ARROW,
        time: 1 / 15,
        t: T.WEAPONS
    }, {
        r: [[Ge.REIDITE, 200], [Ge.BLUE_CORD, 10], [Ge.KRAKEN_SKIN, 1], [Ge.AMETHYST_BOW, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.REIDITE_BOW,
        id2: Ge.REIDITE_BOW,
        time: 1 / 45,
        t: T.WEAPONS
    }, {
        r: [[Ge.REIDITE, 10], [Ge.VULTURE_FEATHER, 1], [Ge.FLAME, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.REIDITE_ARROW,
        id2: Ge.REIDITE_ARROW,
        time: 1 / 15,
        t: T.WEAPONS
    }, {
        r: [[Ge.EMERALD, 200], [Ge.BLUE_CORD, 10], [Ge.DRAGON_ORB, 1], [Ge.REIDITE_BOW, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DRAGON_BOW,
        id2: Ge.DRAGON_BOW,
        time: .02,
        t: T.WEAPONS
    }, {
        r: [[Ge.EMERALD, 10], [Ge.SANDWORM_JUICE, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DRAGON_ARROW,
        id2: Ge.DRAGON_ARROW,
        time: .05,
        t: T.WEAPONS
    }, {
        r: [[Ge.WOOD, 100]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WOOD_SHIELD,
        id2: Ge.WOOD_SHIELD,
        time: .04,
        t: T.WEAPONS
    }, {
        r: [[Ge.WOOD_SHIELD, 1], [Ge.STONE, 100], [Ge.WOOD, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.STONE_SHIELD,
        id2: Ge.STONE_SHIELD,
        time: .025,
        t: T.WEAPONS
    }, {
        r: [[Ge.STONE_SHIELD, 1], [Ge.GOLD, 50], [Ge.STONE, 50], [Ge.WOOD, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.GOLD_SHIELD,
        id2: Ge.GOLD_SHIELD,
        time: .02,
        t: T.WEAPONS
    }, {
        r: [[Ge.GOLD_SHIELD, 1], [Ge.DIAMOND, 50], [Ge.GOLD, 50], [Ge.STONE, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.DIAMOND_SHIELD,
        id2: Ge.DIAMOND_SHIELD,
        time: 1 / 70,
        t: T.WEAPONS
    }, {
        r: [[Ge.DIAMOND_SHIELD, 1], [Ge.AMETHYST, 50], [Ge.DIAMOND, 50], [Ge.GOLD, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.AMETHYST_SHIELD,
        id2: Ge.AMETHYST_SHIELD,
        time: 1 / 90,
        t: T.WEAPONS
    }, {
        r: [[Ge.AMETHYST_SHIELD, 1], [Ge.REIDITE, 50], [Ge.AMETHYST, 50], [Ge.DIAMOND, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.REIDITE_SHIELD,
        id2: Ge.REIDITE_SHIELD,
        time: 1 / 120,
        t: T.WEAPONS
    }, {
        r: [[Ge.GEMME_GREEN, 1], [Ge.GOLD, 200]],
        w: 1,
        f: 1,
        o: 1,
        e: 0,
        id: E.CROWN_GREEN,
        id2: Ge.CROWN_GREEN,
        time: 1 / 60,
        t: T.CLOTHES
    }, {
        r: [[Ge.GEMME_ORANGE, 1], [Ge.GOLD, 200]],
        w: 1,
        f: 1,
        o: 1,
        e: 0,
        id: E.CROWN_ORANGE,
        id2: Ge.CROWN_ORANGE,
        time: 1 / 60,
        t: T.CLOTHES
    }, {
        r: [[Ge.GEMME_BLUE, 1], [Ge.GOLD, 200], [Ge.DRAGON_HEART, 1]],
        w: 1,
        f: 1,
        o: 1,
        e: 0,
        id: E.CROWN_BLUE,
        id2: Ge.CROWN_BLUE,
        time: 1 / 60,
        t: T.CLOTHES
    }, {
        r: [[Ge.FUR_WOLF, 10], [Ge.FUR, 5], [Ge.CORD, 6]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.HOOD,
        id2: Ge.HOOD,
        time: .1,
        t: T.CLOTHES
    }, {
        r: [[Ge.FUR, 3], [Ge.CORD, 2]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PEASANT,
        id2: Ge.PEASANT,
        time: .1,
        t: T.CLOTHES
    }, {
        r: [[Ge.HOOD, 1], [Ge.SPECIAL_FUR_2, 1], [Ge.FUR_WINTER, 15], [Ge.BLUE_CORD, 5], [Ge.PENGUIN_FEATHER, 8]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WINTER_HOOD,
        id2: Ge.WINTER_HOOD,
        time: 1 / 60,
        t: T.CLOTHES
    }, {
        r: [[Ge.PEASANT, 1], [Ge.SPECIAL_FUR, 1], [Ge.FUR_WINTER, 10], [Ge.BLUE_CORD, 5], [Ge.PENGUIN_FEATHER, 8]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.WINTER_PEASANT,
        id2: Ge.WINTER_PEASANT,
        time: 1 / 60,
        t: T.CLOTHES
    }, {
        r: [[Ge.BUCKET_EMPTY, 1]],
        w: 0,
        f: 0,
        o: 1,
        e: 0,
        id: E.BUCKET_FULL,
        id2: Ge.BUCKET_FULL,
        time: .2,
        t: T.TOOLS
    }, {
        r: [[Ge.WOOD, 20], [Ge.CORD, 1]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.BUCKET_EMPTY,
        id2: Ge.BUCKET_EMPTY,
        time: .2,
        t: T.TOOLS
    }, {
        r: [[Ge.STONE, 100], [Ge.GROUND, 30]],
        w: 1,
        f: 1,
        o: 0,
        e: 0,
        id: E.WELL,
        id2: Ge.WELL,
        time: .1,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 20]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SIGN,
        id2: Ge.SIGN,
        time: .2,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 100], [Ge.STONE, 50], [Ge.FUR, 5], [Ge.FUR_WOLF, 5], [Ge.CORD, 6]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.BED,
        id2: Ge.BED,
        time: .05,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 250], [Ge.BLUE_CORD, 10], [Ge.FUR_WINTER, 2], [Ge.SCALES, 2]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.BOAT,
        id2: Ge.BOAT,
        time: .02,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 250], [Ge.CORD, 10], [Ge.FUR_WINTER, 2], [Ge.PENGUIN_FEATHER, 8]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SLED,
        id2: Ge.SLED,
        time: .02,
        t: T.Utils
    }, {
        r: [[Ge.CORD, 10], [Ge.FUR_WOLF, 6], [Ge.FUR, 4], [Ge.SAND, 50]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.SADDLE,
        id2: Ge.SADDLE,
        time: .05,
        t: T.Utils
    }, {
        r: [[Ge.WOOD, 250], [Ge.CORD, 10], [Ge.PAPER, 10], [Ge.HAWK_FEATHER, 8]],
        w: 1,
        f: 0,
        o: 0,
        e: 0,
        id: E.PLANE,
        id2: Ge.PLANE,
        time: .02,
        t: T.Utils
    }], e = 300, N = (TEXT = {
        YOU_CANNOT_JOIN: e++,
        KICKED: e++,
        KEY_ALREADY: e++,
        KEY_WRONG: e++,
        OLD_VERSION: e++,
        NO_MORE_RESOURCES: e++,
        SURVIVED_1DAY: e++,
        SURVIVED: e++,
        DAYS: e++,
        DEAD_SAD: e++,
        SPAM_ME: e++,
        SPAM_ME2: e++,
        EMPTY: e++,
        INV_FULL: e++,
        DEAD: e++,
        WRONG_TOOL: e++,
        JOIN_TEAM: e++,
        YOU_DEAD: e++,
        JOINED_TEAM: e++,
        TEAM_DESTROYED: e++,
        LEFT_TEAM: e++,
        LEFT_TEAM2: e++,
        TOKEN: e++,
        CHOOSE: e++,
        PLAYERS: e++,
        TOTAL_PLAYERS: e++,
        TOTAL_MODE: e++,
        COMMING_SOON: e++,
        BACK_TO_THE_GAME: e++,
        TWITTER: e++,
        FACEBOOK: e++,
        KIT_NEXT: e++,
        POINTS: e++,
        SCORE: e++,
        KILL: e++,
        DAYS_SURVIVED: e++,
        MODE_FREE: e++,
        MODE_GRID: e++,
        NEW_VERSION: e++,
        WRONG_PASSWORD: e++,
        TEMPEST_OFF: e++,
        TEMPEST_ON: e++,
        BLIZZARD_OFF: e++,
        BLIZZARD_ON: +e
    },
    function() {
        Pe[Ge.EXTRACTOR_MACHINE_STONE] = ["Stone Extractor", "Can produce stone with wood", "It takes 10 seconds to drill Stone", "Durability: 2000"],
        Pe[Ge.EXTRACTOR_MACHINE_GOLD] = ["Gold Extractor", "Can produce gold with wood", "It takes 10 seconds to drill Gold", "Durability: 2000"],
        Pe[Ge.EXTRACTOR_MACHINE_DIAMOND] = ["Diamond Extractor", "Can produce diamond with wood", "It takes 10 seconds to drill Diamond", "Durability: 2000"],
        Pe[Ge.EXTRACTOR_MACHINE_AMETHYST] = ["Amethyst Extractor", "Can produce amethyst with wood", "It takes 10 seconds to drill Amethyst", "Durability: 2000"],
        Pe[Ge.EXTRACTOR_MACHINE_REIDITE] = ["Reidite Extractor", "Can produce reidite with wood", "It takes 10 seconds to drill Reidite", "Durability: 2000"],
        Pe[Ge.REIDITE_SHIELD] = ["Reidite Shield", "A must for the pros of the getaway", "You can not attack when you use it", "Damage: 6", "Players Defense: 6"],
        Pe[Ge.AMETHYST_SHIELD] = ["Amethyst Shield", "Because you know how to run away in style", "You can not attack when you use it", "Damage: 5", "Players Defense: 5"],
        Pe[Ge.DIAMOND_SHIELD] = ["Diamond Shield", "Run or attack, you've obviously made your choice.", "You can not attack when you use it", "Damage: 4", "Players Defense: 4"],
        Pe[Ge.GOLD_SHIELD] = ["Gold Shield", "When it's golden, it's always better.", "You can not attack when you use it", "Damage: 3", "Players Defense: 3"],
        Pe[Ge.STONE_SHIELD] = ["Stone Shield", "Protects you a bit more", "You can not attack when you use it", "Damage: 2", "Players Defense: 2"],
        Pe[Ge.WOOD_SHIELD] = ["Wood Shield", "Protects you a bit", "You can not attack when you use it", "Damage: 1", "Players Defense: 1"],
        Pe[Ge.MACHETE] = ["Machete", "You gather more from mob boxes", "Useless to attack mobs", "Damage against Players: 5"],
        Pe[Ge.WOOD_TOWER] = ["Tower", "Allows you to shoot over walls with a bow", "Does not allow to pass through roofs"],
        Pe[Ge.DRAGON_ARROW] = ["Dragon Arrow", "Must be used with a Dragon Bow", "Damage: 45", "Mobs Damage: 1200", "Building Damage: 45"],
        Pe[Ge.DRAGON_BOW] = ["Dragon Bow", "Also called the One-Shot-Monster", "Requiers arrows to be used"],
        Pe[Ge.REIDITE_ARROW] = ["Reidite Arrow", "Must be used with a Reidite or a Dragon Bow", "Damage: 40", "Mobs Damage: 900", "Building Damage: 40"],
        Pe[Ge.REIDITE_BOW] = ["Reidite Bow", "Makes the most terrifying monster cry.", "Requiers any arrows, except dragon arrows, to be used"],
        Pe[Ge.AMETHYST_ARROW] = ["Amethyst Arrow", "Must be used with Amethyst, Reidite or Dragon Bow", "Damage: 35", "Mobs Damage: 600", "Building Damage: 35"],
        Pe[Ge.AMETHYST_BOW] = ["Amethyst Bow", "It's super efficient!", "Requiers any arrows, except dragon and reidite arrows, to be used"],
        Pe[Ge.DIAMOND_ARROW] = ["Diamond Arrow", "Must be used with Diamond, Amethyst, Reidite or Dragon Bow", "Damage: 30", "Mobs Damage: 300", "Building Damage: 30"],
        Pe[Ge.DIAMOND_BOW] = ["Diamond Bow", "Like a Robin Wood who would keep the diamonds", "Requiers wood, stone, gold or diamond arrows to be used"],
        Pe[Ge.GOLD_ARROW] = ["Gold Arrow", "Must be used with a Bow, except a wooden and stone one", "Damage: 25", "Mobs Damage: 200", "Building Damage: 25"],
        Pe[Ge.GOLD_BOW] = ["Gold Bow", "When it's golden, it's better.", "Requiers wood, stone or gold arrows to be used"],
        Pe[Ge.STONE_ARROW] = ["Stone Arrow", "Must be used with a Bow, except a wooden one", "Damage: 20", "Mobs Damage: 100", "Building Damage: 20"],
        Pe[Ge.STONE_BOW] = ["Stone Bow", "Like Robin Wood", "Requiers wood and stone arrows to be used"],
        Pe[Ge.WOOD_ARROW] = ["Wood Arrow", "Must be used with any bow", "Damage: 15", "Mobs Damage: 20", "Building Damage: 15"],
        Pe[Ge.WOOD_BOW] = ["Wood Bow", "A little bow that does not do many damages.", "Requiers wood arrows to be used"],
        Pe[Ge.EMERALD_MACHINE] = ["Emerald Machine", "Allows to automatically generate score points.", "Be careful, you can only build one.", "Once placed your soul is connected to the machine, if the machine is destroyed, you will die.", "The machine can't be build in the sea", "You earn more points in the desert, than in the lava, than in winter, than in the forest."],
        Pe[Ge.FUR_BOAR] = ["Boar fur", "Hakuna Matata, well, he can no longer say it"],
        Pe[Ge.FUR_MAMMOTH] = ["Mammoth fur", "Soft and warm. Perfect for a hat."],
        Pe[Ge.VULTURE_FEATHER] = ["Vulture Feather", "From a deadly vulture"],
        Pe[Ge.EMERALD] = ["Emerald", "How many golden breads can you get from it?"],
        Pe[Ge.SANDWORM_JUICE] = ["Sand Worm Juice", "I don't want to know how you got this."],
        Pe[Ge.TURBAN1] = ["Turban", "Useful to survive in the desert."],
        Pe[Ge.TURBAN2] = ["Ninja outfit", "Essential to survive in the desert"],
        Pe[Ge.PILOT_HELMET] = ["Pilot Hat", "Take off and land with flying objects much faster."],
        Pe[Ge.PILOT_GLASSES] = ["Pilot Glasses"],
        Pe[Ge.MOUNT_BOAR] = ["Tamed Boar", "Fast on lands and slow on water."],
        Pe[Ge.BABY_MAMMOTH] = ["Tamed Baby Mammoth", "Fast on lands and slow on water."],
        Pe[Ge.CRAB_BOSS] = ["Tamed Crab Boss", "Fast on lands and water, and slow on winter.", "Gives a +10 damage bonus of the Crab Spear", "when holding a Crab Helmet"],
        Pe[Ge.BABY_DRAGON] = ["Tamed Baby Dragon", "You can fly with it.", "Faster than a hawk", "When you are flying,", " you can only hit people who are flying too"],
        Pe[Ge.BABY_LAVA] = ["Tamed Baby Lava Dragon", "You can fly with it.", "Faster than a baby dragon", "When you are flying,", " you can only hit people who are flying too"],
        Pe[Ge.HAWK] = ["Tamed Hawk", "You can fly with it.", "When you are flying,", " you can only hit people who are flying too"],
        Pe[Ge.SADDLE] = ["Saddle", "Hit a boar with it to tame it."],
        Pe[Ge.WITCH] = ["Witch Hat", "You're a wizard Starvy!"],
        Pe[Ge.NIMBUS] = ["Nimbus 2000", "That's not just a broomstick, Starvy, it's a Nimbus 2000!", "Only works with the witch hat."],
        Pe[Ge.WAND1] = ["Wand of life", "Soon we must all choose between what is right and what is easy.", "You need the witch hat and firefly to cast spell"],
        Pe[Ge.WAND2] = ["Death Wand", "The wand of He-Who-Must-Not-Be-Named... Lapa...", "You need the witch hat and firefly to cast spell"],
        Pe[Ge.FIREFLY] = ["Firefly", "They make a cute little squeak.", "However, you must tear off his wings to make magical projectiles for use with magic wands."],
        Pe[Ge.PIRATE_HAT] = ["Pirate hat", "You are faster with it in a boat", "Warm outside water and in winter"],
        Pe[Ge.SLED] = ["Sled", "You are faster with it in the snow"],
        Pe[Ge.BOAT] = ["Boat", "You are faster with it in the water"],
        Pe[Ge.PLANE] = ["Plane", "Fly in the forest, ocean and winter", "Can't fly in desert or lava biome", "When you are flying,", " you can only hit people who are flying too"],
        Pe[Ge.HAMMER_REIDITE] = ["Reidite Hammer", "Useful to destroy buildings", "Damage: 6", "Building Damage: 60"],
        Pe[Ge.PENGUIN_FEATHER] = ["Penguin Feather", "From a deadly cute penguin."],
        Pe[Ge.HAWK_FEATHER] = ["Hawk Feather", "From a deadly hawk."],
        Pe[Ge.CACTUS] = ["Cactus", "Food : 20", "Water : 10"],
        Pe[Ge.ALOE_VERA] = ["Aloe Vera", "Allows you to heal a little", "Heal : 30"],
        Pe[Ge.ALOE_VERA_SEED] = ["Aloe Vera Seed", "Grows into Aloe Vera"],
        Pe[Ge.WATERMELON] = ["Watermelon", "Like a melon, but with water", "Food : 15", "Water : 8"],
        Pe[Ge.WATERMELON_SEED] = ["Watermelon Seed", "Grows into Watermelon", "Birth: 4min", "Growth: 180s", "Need water: 3min 20s", "Durability: 400", "Lifetime: 8 days"],
        Pe[Ge.REIDITE_DOOR] = ["Reidite Door", "Noboby can destroy it. Except very reckless", "Damage: 5", "On-Hit Damage: 1", "Durability: 4000"],
        Pe[Ge.REIDITE_WALL] = ["Reidite Wall", "Better wall in StarveLand", "Durability: 4000"],
        Pe[Ge.REIDITE_SPIKE] = ["Reidite Spike", "It hurts", "Damage: 60", "On-Hit Damage: 5", "Durability: 3000"],
        Pe[Ge.REIDITE_DOOR_SPIKE] = ["Reidite Door Spike", "Painful and useful at the same time", "Damage: 35", "On-Hit Damage: 4", "Durability: 2000"],
        Pe[Ge.PICK_REIDITE] = ["Reidite Pickaxe", "Can also harvest reidite, better look!", "Damage: 6", "Building Damage: 1"],
        Pe[Ge.WOOD_DOOR_SPIKE] = ["Wood Door Spike", "Can be opened or closed by you or your friends", "Damage: 5", "On-Hit Damage: 1", "Durability: 100"],
        Pe[Ge.STONE_DOOR_SPIKE] = ["Stone Door Spike", "A stronger door is more serious", "Damage: 10", "On-Hit Damage: 2", "Durability: 200"],
        Pe[Ge.GOLD_DOOR_SPIKE] = ["Gold Door Spike", 'Are you rebuilding the "el dorado?"', "Damage: 15", "On-Hit Damage: 2", "Durability: 400"],
        Pe[Ge.DIAMOND_DOOR_SPIKE] = ["Diamond Door Spike", "For a shining house", "Damage: 25", "On-Hit Damage: 3", "Durability: 800"],
        Pe[Ge.AMETHYST_DOOR_SPIKE] = ["Amethyst Door Spike", "Is your house a locked safe?", "Damage: 30", "On-Hit Damage: 3", "Durability: 1600"],
        Pe[Ge.CARROT] = ["Carrot", "Eat it or sell it in exchange for Tomato Seed or Diamond", "Food : 20"],
        Pe[Ge.TOMATO] = ["Tomato", "Eat it or sell it in exchange for Thornbush Seed or Amethyst", "Food : 16"],
        Pe[Ge.CARROT_SEED] = ["Carrot Seed", "Grows into Carrot", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"],
        Pe[Ge.TOMATO_SEED] = ["Tomato Seed", "Grows into Tomato", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"],
        Pe[Ge.PITCHFORK] = ["Pitchfork", "Perfect for gathering"],
        Pe[Ge.PITCHFORK2] = ["Golden Pitchfork", "Essential for a real farmer."],
        Pe[Ge.PITCHFORK_PART] = ["Pitchfork Part", "Shaped by the gods. You'll never be hungry again."],
        Pe[Ge.EGG0] = ["Easter Egg", "Eat it or sell it in exchange for wood or stone", "Food : 12"],
        Pe[Ge.EGG1] = ["Easter Egg", "Eat it or sell it in exchange for gold", "Food : 25"],
        Pe[Ge.EGG2] = ["Easter Egg", "Eat it or sell it in exchange for diamond", "Food : 50"],
        Pe[Ge.EGG3] = ["Easter Egg", "Eat it or sell it in exchange for amethyst", "Food : 75"],
        Pe[Ge.EGG4] = ["Easter Egg", "Eat it or sell it in exchange for reidite", "Food : 100"],
        Pe[Ge.LAVA_CUBE] = ["Lava Cube", "You feel an immense power emanating from this cube"],
        Pe[Ge.LAVA_ORB] = ["Lava Orb", "You feel an immense power emanating from this orb"],
        Pe[Ge.LAVA_SWORD] = ["Lava Sword", "Don't be too mean with that.", "Damage: 33", "Building Damage: 11"],
        Pe[Ge.LAVA_SPEAR] = ["Lava Spear", "Doing good or doing evil", "Damage: 24", "Building Damage: 8"],
        Pe[Ge.LAVA_HEART] = ["Lava Heart", "You can feel a strange force.", "A huge power emanates from it.", "We must not find the secret."],
        Pe[Ge.LAVA_HELMET] = ["Lava Helmet", "You will conquer the world", "Players Defense: 9", "Animals Defense: 30"],
        Pe[Ge.REIDITE_SPEAR] = ["Reidite Spear", "Really useful against Lava Monsters", "Damage: 22", "Building Damage: 7"],
        Pe[Ge.REIDITE_SWORD] = ["Reidite Sword", "Really useful against Lava Monsters", "Damage: 30", "Building Damage: 10"],
        Pe[Ge.FLAME] = ["Flame", "It's hot!"],
        Pe[Ge.DIAMOND_PROTECTION] = ["Diamond Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 2, Animals Defense: 8"],
        Pe[Ge.AMETHYST_PROTECTION] = ["Amethyst Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 5, Animals Defense: 13"],
        Pe[Ge.REIDITE_PROTECTION] = ["Reidite Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 6, Animals Defense: 19"],
        Pe[Ge.REIDITE] = ["Reidite", "The ultimate ore"],
        Pe[Ge.DRAGON_CUBE] = ["Dragon Cube", "You feel a great power emanating from this cube"],
        n[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."],
        n[23] = ["The heat makes you suffocate, you can see your skin fall apart. You're charred. The grilled marshmallow has never been so tasty."],
        n[24] = ["Your vital organs melt inside, fortunately the toxic gases that escape from the lava make you faint and you do not feel the excruciating pain of death."],
        n[25] = ["The Will-O'-The-Wisp devoured you from the inside with its fiery flames."],
        n[26] = ["Oh my God, you died in indescribable pain. Even Lapa turned his head not to see this massacre."],
        n[27] = ['You were trampled by that boar. From now on, your new nickname is "the doormat".'],
        n[28] = ['With a force of 3300 newtons, the shock wave from the closing of the crab king\'s claw made you explode your heart from the inside. In addition, the crab has eaten you by sharing your remains with its other small crabs. All dance in joy around your corpse by performing a singular dance called the "crab rave"'],
        n[29] = ["Even if it is a baby, under the heat of the flames of this cute dragon, you become a delicious dish."],
        n[30] = ["Under its cute fake looks, the lava baby dismembers you so quickly that you don't have your life flashes before your eyes."],
        n[31] = ["The hawk slashed both your eyes out. Terrified, you try to escape by crawling and screaming in pain. Unfortunately the hawk catches you and takes you to distant skies that we already know will never see you again."],
        n[32] = ["Believing you saw an oasis, you dived into this tree that seemed to you to be full of juicy fruit. Unfortunately, these shiny fruits were in fact horribly painful thorns. Now stuck to the cactus, exhausted by the desert, you have fainted forever."],
        n[33] = ["That vulture had been spying on you for a long time. He was waiting for a moment of fragility from you. Once cornered by this harassing desert, barely able to breathe, the vulture twisted on you and in a flash ripped out your last hope. At your last breath, you could still see the vulture plunge his head into what was left of your body to enjoy your entrails."],
        n[34] = ["Out of nowhere, the sand worm devours you in a terrifying howl. But why did Lapa bring such a despicable monster to life?"],
        n[35] = ["Exhausted by so much heat. You would like to cry, but the sand quickly dries your tears. You suffocate, sand enters your mouth, the thumping sound of the sandstorm will be the last thing you will hear... Next time, use a turban or protect yourself under a roof"],
        n[36] = ["You feel weak, your vision becomes blurry, you can feel the darkness invading your body. Your soul flies away and leaves behind a lifeless body. Your emerald machine has been destroyed."],
        n[37] = ['You hear "Avada Kedavra!" before you turn to ashes.'],
        n[38] = ["You died crushed by an angry baby mammoth."],
        n[39] = ["You were skewered by a mammoth. In the violence of the animal's charge, your heart was left hanging on the tip of the tusk. You could still see your heart beating in the open air before losing your life crushed by the mammoth's feet for good. Notice that under the pressure of the crushing your eyes have been exorbed and that the penguins use the frozen eyes of the starvers as a balloon to distract themselves."],
        n[40] = ["The blizzard storm is so intense that your frostbite causes necrosis of all your limbs. Next time protect yourself with a roof or with warmer clothes."],
        Pe[Ge.CRAB_STICK] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"],
        Pe[TEXT.TEMPEST_ON] = "A sandstorm is approaching in a few seconds.",
        Pe[TEXT.TEMPEST_OFF] = "The sandstorm will soon stop.",
        Pe[TEXT.BLIZZARD_ON] = "A blizzard is approaching in a few seconds.",
        Pe[TEXT.BLIZZARD_OFF] = "The blizzard will soon stop.",
        Pe[TEXT.BACK_TO_THE_GAME] = " BACK TO THE GAME",
        Pe[TEXT.TWITTER] = " Share on Twitter",
        Pe[TEXT.FACEBOOK] = " Share on Facebook",
        Pe[TEXT.KIT_NEXT] = "You can buy items on the shop in the next game with your points",
        Pe[TEXT.POINTS] = "points",
        Pe[TEXT.SCORE] = "Score",
        Pe[TEXT.KILL] = "Kill",
        Pe[TEXT.DAYS_SURVIVED] = "Days survived",
        Pe[TEXT.MODE_FREE] = "Building method: Free. Press G to change",
        Pe[TEXT.MODE_GRID] = "Building method: Grid. Press G to change",
        Pe[Ge.CRAB_LOOT] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"],
        Pe[Ge.CRAB_SPEAR] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Gives a +10 damages bonus when holding it with", "a Crab Helmet on a Crab King", "Damage: 14", "Building Damage: 4"],
        Pe[Ge.CROWN_CRAB] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 5", "Animals Defense: 19"],
        Pe[Ge.BED] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"],
        document.getElementById("typequest").innerHTML = "Chrono Quests",
        document.getElementById("timeremainingquest").innerHTML = "Time Remaining",
        document.getElementById("constraintquest").innerHTML = " Constraints",
        document.getElementById("claim_rewards").innerHTML = " Claim rewards",
        document.getElementById("rewardquest").innerHTML = " Reward",
        document.getElementById("killdragon_1").innerHTML = " Collect 1 dragon heart inside the cave",
        document.getElementById("amethyst_2").innerHTML = " Gather 1 amethyst",
        document.getElementById("survive20min_3").innerHTML = "Survive without losing life",
        document.getElementById("treasure_chest_4").innerHTML = " Open 5 treasure chests",
        document.getElementById("dont_hit_5").innerHTML = " Be peaceful",
        document.getElementById("bread_6").innerHTML = "100 bread in winter, alone, without come back",
        document.getElementById("winter_7").innerHTML = " After 1 day, survive in winter";
        for (var e = 0; e < 7; e++)
            document.getElementById("claim_reward_" + e).innerHTML = "CLAIM REWARD!";
        document.getElementById("quit_chronoquest").innerHTML = " QUIT",
        Pe[Ge.HAND] = ["Hand"],
        Pe[Ge.GROUND] = ["Dirt", "Dirty!"],
        Pe[Ge.SAND] = ["Sand", "I got it in my eyes!"],
        Pe[Ge.WOOD] = ["Wood", "You can't get enough of it!"],
        Pe[Ge.STONE] = ["Stone", "Also called a rock"],
        Pe[Ge.GOLD] = ["Gold", "Be generous, give it to others"],
        Pe[Ge.DIAMOND] = ["Diamond", "What will you make with it?"],
        Pe[Ge.AMETHYST] = ["Amethyst", "It's Mauve like Lapa"],
        Pe[Ge.FLOUR] = ["Flour", "Used in cooking"],
        Pe[Ge.COOKIE] = ["Cookie", "A sumptuous grandmother's cookie", "Food: 50"],
        Pe[Ge.CAKE] = ["A cake", "Dream cake for the gourmets", "Food: 100"],
        Pe[Ge.MEAT] = ["Raw meat", "You can cook it with a fire", "Causes food poisoning: 10", "Food: 15"],
        Pe[Ge.COOKED_MEAT] = ["Cooked meat", "A rare steak, please", "Food: 35"],
        Pe[Ge.FOODFISH] = ["Raw fish", "I think it's still alive", "Causes food poisoning: 10", "Food: 18"],
        Pe[Ge.FOODFISH_COOKED] = ["Cooked fish", "With lemon it's perfect", "Food: 35"],
        Pe[Ge.BREAD] = ["Bread", "An excellent French bread", "It's the currency used in the market", "Food: 15"],
        Pe[Ge.SANDWICH] = ["Sandwich", "Tastes like Krabby Patty", "Food: 100"],
        Pe[Ge.CANDY] = ["Candies", "Only for children!", "Food: 20"],
        Pe[Ge.SUGAR_CAN] = ["Sugar cane", "Taste it, it's delicious", "Food: 100"],
        Pe[Ge.GARLAND] = ["Garland", "Perfect decoration for roofs"],
        Pe[Ge.SEED] = ["Berries Seed", "Grows into Berry", "Birth: 2min", "Growth: 55s", "Need water: 3min 20s", "Durability: 700", "Lifetime: 8 days"],
        Pe[Ge.PLANT] = ["Berry", "Berry tasty!", "Food: 10"],
        Pe[Ge.WHEAT_SEED] = ["Wheat Seed", "Grows into Wheat", "Birth: 2min", "Growth: 16s", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"],
        Pe[Ge.WILD_WHEAT] = ["Wild Wheat", "Turns into Flour when placed in Windmill"],
        Pe[Ge.PUMPKIN_SEED] = ["Pumpkin Seed", "Grows into pumpkin", "Birth: 2min 40s", "Growth: 2min", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"],
        Pe[Ge.PUMPKIN] = ["Pumpkin", "It reminds me of Halloween", "Food: 30"],
        Pe[Ge.GARLIC_SEED] = ["Garlic Seed", "Very dangerous for vampires", "Damage: 20", "Birth: 4min", "Growth: 1min 10s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"],
        Pe[Ge.GARLIC] = ["Garlic", "Reduces cold", "Food: 14", "Effect: 1"],
        Pe[Ge.THORNBUSH_SEED] = ["Thorn bush Seed", "Can damage your enemies", "Damage: 20", "Birth: 4min", "Growth: 15s", "Need water: 3min", "Durability: 1000", "Lifetime: 8 days"],
        Pe[Ge.THORNBUSH] = ["Thorn bush", "It stings!"],
        Pe[Ge.PLOT] = ["Plot", "Seriously, use it", "With this GMO fertilizer your plants", "will growth really faster and need less water", "Durability: 2000"],
        Pe[Ge.ICE] = ["Ice", "Useful for making cakes and water"],
        Pe[Ge.SPANNER] = ["Wrench", "To repair doors, walls and spike", "Damage: 2"],
        Pe[Ge.FUR_WOLF] = ["Wolf Fur", "Puppy? But where is Puppy?!"],
        Pe[Ge.FUR] = ["Rabbit Fur", "That rabbit was so cute..."],
        Pe[Ge.SPECIAL_FUR] = ["Pure Fur", "You're a bread factory"],
        Pe[Ge.SPECIAL_FUR_2] = ["Dark Fur", "You get ready to do something wrong"],
        Pe[Ge.FUR_WINTER] = ["Winter Fur", "These animals just wanted a hug..."],
        Pe[Ge.SCALES] = ["Scales", "It smells like fish!"],
        Pe[Ge.KRAKEN_SKIN] = ["Kraken Skin", "Weren't you too scared?"],
        Pe[Ge.FIRE] = ["Firecamp", "Warm you up!", "Durability: 150", "Lifetime: 2min"],
        Pe[Ge.BIG_FIRE] = ["Big Firecamp", "Warm you up more time!", "Durability: 400", "Lifetime: 6min"],
        Pe[Ge.WORKBENCH] = ["Workbench", "Very useful to craft all kinds of objects"],
        Pe[Ge.CORD] = ["Cord", "Used in crafting Hats and Bag"],
        Pe[Ge.BLUE_CORD] = ["Diamond Cord", "Used in crafting Special Hats"],
        Pe[Ge.CHEST] = ["Chest", "Allows you to store items", "Durability: 500"],
        Pe[Ge.SWORD_WOOD] = ["Wood Sword", "Does that work?", "Damage: 12", "Building Damage: 4"],
        Pe[Ge.SWORD] = ["Stone Sword", "Be nice to others", "Damage: 19", "Building Damage: 6"],
        Pe[Ge.SWORD_GOLD] = ["Gold Sword", "King of the forest", "Damage: 22", "Building Damage: 7"],
        Pe[Ge.SWORD_DIAMOND] = ["Diamond Sword", "You can feel the power", "Damage: 24", "Building Damage: 8"],
        Pe[Ge.PIRATE_SWORD] = ["Pirate Sword", "Ayyyyy!", "Better range than a normal sword", "Damage: 24", "Building Damage: 8"],
        Pe[Ge.SWORD_AMETHYST] = ["Amethyst Sword", "Mauve is the most beautiful color of the world", "Damage: 27", "Building Damage: 9"],
        Pe[Ge.DRAGON_SWORD] = ["Dragon Sword", "No mercy!", "Damage: 30", "Building Damage: 10"],
        Pe[Ge.DRAGON_SPEAR] = ["Dragon Spear", "Kill them all!", "Damage: 22", "Building Damage: 7"],
        Pe[Ge.PICK_WOOD] = ["Wood Pickaxe", "Can harvest only stone and wood", "Damage: 1"],
        Pe[Ge.PICK] = ["Stone Pickaxe", "Can harvest wood, stone and gold", "Damage: 2"],
        Pe[Ge.PICK_GOLD] = ["Gold Pickaxe", "Can also harvest diamond", "Damage: 3", "Building Damage: 1"],
        Pe[Ge.PICK_DIAMOND] = ["Diamond Pickaxe", "Can also harvest amethyst", "Damage: 4", "Building Damage: 1"],
        Pe[Ge.PICK_AMETHYST] = ["Amethyst Pickaxe", "Can also harvest reidite, looks fancy!", "Damage: 5", "Building Damage: 1"],
        Pe[Ge.HAMMER] = ["Stone Hammer", "Useful to destroy buildings", "Doesn't work well on diamond or amethyst", "Damage: 2", "Building Damage: 20"],
        Pe[Ge.HAMMER_GOLD] = ["Gold Hammer", "Useful to destroy buildings", "Doesn't work well on amethyst", "Damage: 3", "Building Damage: 30"],
        Pe[Ge.HAMMER_DIAMOND] = ["Diamond Hammer", "Useful to destroy buildings", "Damage: 4", "Building Damage: 40"],
        Pe[Ge.HAMMER_AMETHYST] = ["Amethyst Hammer", "Useful to destroy buildings", "Damage: 5", "Building Damage: 50"],
        Pe[Ge.SUPER_HAMMER] = ["Super Hammer", "Have you planned to destroy the world?", "Damage: 12", "Building Damage: 70"],
        Pe[Ge.WOOD_SPEAR] = ["Wood Spear", "Like a wooden stick, but it stings.", "Damage: 10", "Building Damage: 3"],
        Pe[Ge.SPEAR] = ["Stone Spear", "The beginning of evolution!", "Damage: 14", "Building Damage: 4"],
        Pe[Ge.GOLD_SPEAR] = ["Gold Spear", "Careful, it stings!", "Damage: 15", "Buildings Damage: 5"],
        Pe[Ge.DIAMOND_SPEAR] = ["Diamond Spear", "You're ready to kill a dragon", "Damage: 17", "Buildings Damage: 5"],
        Pe[Ge.AMETHYST_SPEAR] = ["Amethyst Spear", "Dragons no longer frighten you", "Damage: 18", "Buildings Damage: 6"],
        Pe[Ge.SHOVEL] = ["Stone Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 2"],
        Pe[Ge.SHOVEL_GOLD] = ["Gold Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 3", "Buildings Damage: 1"],
        Pe[Ge.SHOVEL_DIAMOND] = ["Diamond Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 4", "Buildings Damage: 1"],
        Pe[Ge.SHOVEL_AMETHYST] = ["Amethyst Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 5", "Buildings Damage: 1"],
        Pe[Ge.WOOD_HELMET] = ["Wood Helmet", "Better than nothing", "Players Defense: 1", "Animals Defense: 4"],
        Pe[Ge.STONE_HELMET] = ["Stone Helmet", "You're ready for battle!", "Players Defense: 2", "Animals Defense: 8"],
        Pe[Ge.GOLD_HELMET] = ["Gold Helmet", "AKA the helmet of the savages", "Players Defense: 4", "Animals Defense: 13"],
        Pe[Ge.DIAMOND_HELMET] = ["Diamond Helmet", "Don't brag too much", "Players Defense: 5", "Animals Defense: 19"],
        Pe[Ge.AMETHYST_HELMET] = ["Amethyst Helmet", "You're no longer afraid of anything", "Players Defense: 6", "Animals Defense: 23"],
        Pe[Ge.REIDITE_HELMET] = ["Reidite Helmet", "You no longer feel pain", "Players Defense: 7", "Animals Defense: 25"],
        Pe[Ge.DRAGON_HELMET] = ["Dragon Helmet", "You will conquer the world", "Players Defense: 8", "Animals Defense: 27"],
        Pe[Ge.EXPLORER_HAT] = ["Explorer hat", "Animals won't pay attention to you", "but don't make noises!", "Warm outside water and in winter", "You also calm down aggressive monsters twice as fast"],
        Pe[Ge.CHRISTMAS_HAT] = ["Christmas Hat", "Oh, oh, oh, Merry Christmas", "Warm outside water and in winter"],
        Pe[Ge.ELF_HAT] = ["Elf Hat", "Don't let yourself be exploited, you little snow elf!", "Warm outside water and in winter"],
        Pe[Ge.HOOD] = ["Hood", "You're a rogue", "You can steal someone only if", "1) It's night", "2) You're not wearing anything", "3) If you haven't been touched for eight seconds", "4) You are not close a fire", "5) Your target doesn't wear a peasant outfit", "Warm outside water and in winter"],
        Pe[Ge.EARMUFFS] = ["Earmuffs", "Some kind of little chapka.", "Warm outside water and in winter"],
        Pe[Ge.COAT] = ["Chapka", "Also called a coat.", "Warmer outside water and in winter"],
        Pe[Ge.CAP_SCARF] = ["Winter Scarf and Cap", "Very comfortable", "Very Warm"],
        Pe[Ge.FUR_HAT] = ["Mammoth fur hat", "The best blizzard protection", "Very Warm"],
        Pe[Ge.PEASANT] = ["Peasant", "Your plants grow faster", "Warm outside water and in winter"],
        Pe[Ge.WINTER_HOOD] = ["Winter Hood", "You can steal someone only if", "- It's night", "- You're not wearing anything", "- If you haven't been touched for four seconds", "- You are not close a fire", "- Your target doesn't wear a winter peasant outfit", "Warm outside water and in winter"],
        Pe[Ge.WINTER_PEASANT] = ["Winter Peasant", "Your plants grow faster", "Warm outside water and in winter"],
        Pe[Ge.DIVING_MASK] = ["Diving Mask", "You are fast in the water", "Warm in water", "Players Defense: 2, Animals Defense: 8"],
        Pe[Ge.SUPER_DIVING_SUIT] = ["Super Diving Mask", "You are very fast in the water", "Warm in water", "Players Defense: 4, Animals Defense: 16"],
        Pe[Ge.DRAGON_ORB] = ["Dragon Orb", "You feel a great power emanating from this orb"],
        Pe[Ge.DRAGON_HEART] = ["Dragon Heart", "Turns you into a Ghost on Death!", "You are a ghost for 60 seconds", "Find a resurrection stone"],
        Pe[Ge.GEMME_GREEN] = ["Green Gemstone", "You didn't cheat, promise?"],
        Pe[Ge.GEMME_ORANGE] = ["Orange Gemstone", "Only a real pirate can find it!"],
        Pe[Ge.GEMME_BLUE] = ["Blue Gemstone", "For too kind people"],
        Pe[Ge.CROWN_GREEN] = ["Green Crown", "You heal yourself very quickly", "Heal over time: 40", "Players Defense: 4, Animals Defense: 16"],
        Pe[Ge.CROWN_ORANGE] = ["Orange Crown", "You suddenly feel very lucky", "Players Defense: 4, Animals Defense: 16"],
        Pe[Ge.CROWN_BLUE] = ["Blue Crown", "Once you're dead, you'll become a ghost", "Though you will lose your weapon", "Players Defense: 4, Animals Defense: 16"],
        Pe[Ge.BUCKET_FULL] = ["Bucket", "Useful to fill a well", "One bucket is equivalent to twelve bottles"],
        Pe[Ge.BUCKET_EMPTY] = ["Empty Bucket", "You need to fill this bucket near a water source"],
        Pe[Ge.BOTTLE_FULL] = ["Bottle", "Allows you to drink water anywhere", "Water: 50"],
        Pe[Ge.BOTTLE_EMPTY] = ["Empty Bottle", "You can fill this bottle near a water source"],
        Pe[Ge.WATERING_CAN] = ["Empty Watering Can", "You must fill it with a water source to use it"],
        Pe[Ge.WATERING_CAN_FULL] = ["Watering Can", "Allows watering of plants", "Damage: 1"],
        Pe[Ge.BAG] = ["Bag", "More space for your items!"],
        Pe[Ge.PAPER] = ["Paper", "Used in book-crafting"],
        Pe[Ge.BOOK] = ["Book", "Allows to considerably reduce the time of crafting", "Must be wearing to work", "Damage: 1"],
        Pe[Ge.BANDAGE] = ["Bandage", "Recover more quickly your life", "Heal over time: 30", "Effect: 5"],
        Pe[Ge.LOCK] = ["Lock", "Allow you to lock your chest"],
        Pe[Ge.LOCKPICK] = ["Lock-pick", "Allows you to unlock one chest"],
        Pe[Ge.TOTEM] = ["Totem", "Allow you to create a team", "Share doors and chests", "Harmful building won't hurt your friend"],
        Pe[Ge.BRIDGE] = ["Bridge", "Very useful on water", "It allows you to drink without drowning", "Walk faster in water"],
        Pe[Ge.SIGN] = ["Sign", "Leave a message to others", "Durability: 200"],
        Pe[Ge.ROOF] = ["Roof", "Hides you a little and warms you!", "Also protects you against sand storm"],
        Pe[Ge.WELL] = ["Well", "Allows bottle filling", "Durability: 1000"],
        Pe[Ge.WALL] = ["Wood Wall", "It's just a wall", "Durability: 1000"],
        Pe[Ge.STONE_WALL] = ["Stone Wall", "It's a little more serious.", "Durability: 1500"],
        Pe[Ge.GOLD_WALL] = ["Gold Wall", "Gold on your walls? It's kind of flashy.", "Durability: 2000"],
        Pe[Ge.DIAMOND_WALL] = ["Diamond Wall", "So shiny, watch your eyes", "Durability: 2500"],
        Pe[Ge.AMETHYST_WALL] = ["Amethyst Wall", "You must be very scared to go out!", "Durability: 3500"],
        Pe[Ge.SPIKE] = ["Wood Spike", "Can damage your enemies", "Damage: 10, On-Hit Damage: 2", "Durability: 150"],
        Pe[Ge.STONE_SPIKE] = ["Stone Spike", "I wouldn't want to be your enemy.", "Damage: 20", "On-Hit Damage: 3", "Durability: 300"],
        Pe[Ge.GOLD_SPIKE] = ["Gold Spike", "You're so cruel.", "Damage: 30", "On-Hit Damage: 3", "Durability: 600"],
        Pe[Ge.DIAMOND_SPIKE] = ["Diamond Spike", "You don't like to have company.", "Damage: 40", "On-Hit Damage: 4", "Durability: 1200"],
        Pe[Ge.AMETHYST_SPIKE] = ["Amethyst Spike", "What the hell did your neighbors do to you?", "Damage: 50", "On-Hit Damage: 4", "Durability: 2400"],
        Pe[Ge.WOOD_DOOR] = ["Wood Door", "Can be opened or closed by you or your friends", "Durability: 1000"],
        Pe[Ge.STONE_DOOR] = ["Stone Door", "A stronger door is more serious", "Durability: 1500"],
        Pe[Ge.GOLD_DOOR] = ["Gold Door", 'Are you rebuilding the "el dorado?"', "Durability: 2000"],
        Pe[Ge.DIAMOND_DOOR] = ["Diamond Door", "For a shining house", "Durability: 2500"],
        Pe[Ge.AMETHYST_DOOR] = ["Amethyst Door", "Is your house a locked safe?", "Durability: 3500"],
        Pe[Ge.FURNACE] = ["Furnace", "Warms you up", "It consumes wood all 5 seconds", "Durability: 1000"],
        Pe[Ge.WINDMILL] = ["Windmill", "Can produce flour from wheat", "It takes 5 seconds to make Flour", "Returns points when working", "Durability: 2000"],
        Pe[Ge.BREAD_OVEN] = ["Bread Oven", "Allows bread to be made from flour", "It takes 10 seconds to make bread", "Returns points when working", "Durability: 2000"],
        Pe[Ge.RESURRECTION] = ["Resurrection stone", "It's magic", "Resurrect you if you're a ghost", "You will lose your weapon", "Durability: 200"],
        Pe[TEXT.YOU_CANNOT_JOIN] = "You cannot join this server",
        Pe[TEXT.KICKED] = "Kicked: ",
        Pe[TEXT.KEY_ALREADY] = "Your key is already used by someone else",
        Pe[TEXT.KEY_WRONG] = "Your key is wrong",
        Pe[TEXT.OLD_VERSION] = "You have an old version, you need to clear your cache",
        Pe[TEXT.NEW_VERSION] = "Your client version is too recent for this server. The server is being updated",
        Pe[TEXT.WRONG_PASSWORD] = "Wrong password! To enter a password: https://starve.io/?password=...",
        Pe[TEXT.NO_MORE_RESOURCES] = "There are no more new resources",
        Pe[TEXT.SURVIVED_1DAY] = "You survived 1 day",
        Pe[TEXT.SURVIVED] = "You survived ",
        Pe[TEXT.DAYS] = " days",
        Pe[TEXT.DEAD_SAD] = "You are dead ;-;",
        Pe[TEXT.SPAM_ME] = "Server cannot find spawn location! Spam the play button!",
        Pe[TEXT.SPAM_ME2] = "Server is full! Spam the play button!",
        Pe[TEXT.EMPTY] = "Resource is empty",
        Pe[TEXT.INV_FULL] = "Inventory is full (right-click to empty items)",
        Pe[TEXT.DEAD] = " is dead",
        Pe[TEXT.WRONG_TOOL] = "This is not the right tool",
        Pe[TEXT.JOIN_TEAM] = "You joined a team",
        Pe[TEXT.YOU_DEAD] = "You are dead",
        Pe[TEXT.JOINED_TEAM] = " joined the team",
        Pe[TEXT.TEAM_DESTROYED] = "Your team was destroyed",
        Pe[TEXT.LEFT_TEAM] = "You left the team",
        Pe[TEXT.LEFT_TEAM2] = " left the team",
        Pe[TEXT.TOKEN] = "Someone stole your token :>",
        Pe[TEXT.CHOOSE] = "Choose a server",
        Pe[TEXT.PLAYERS] = "players",
        Pe[TEXT.TOTAL_PLAYERS] = "total players",
        Pe[TEXT.TOTAL_MODE] = "players on this mode",
        Pe[TEXT.COMMING_SOON] = "Coming soon...",
        document.getElementById("nickname_input").placeholder = "Nickname",
        n[0] = ["You were killed for no reason"],
        n[1] = ["You starved to death, as the name of the game implies"],
        n[2] = ["You froze to death. So sad", "You got hypothermia. Next time, try sitting by a fire instead."],
        n[3] = ["A player killed you whilst telling you to 'git gud.'", "You got murdered by a player. Don't worry, that player will die too, eventually."],
        n[4] = ["You stayed too close to the fire and burnt to death. Bad idea.", "You died to a fire. Fires hurt you. Go write a story about it."],
        n[5] = ["Your body will become a nest for spider eggs", "A spider killed you. At least it wasn't a rabbit."],
        n[6] = ["The wolf won't starve anymore after eating you", "They aren't dogs. Wolves don't like being pet."],
        n[7] = ["The fox was too quick for you", "The fox turned you into a box. Since when do animals have magic powers?"],
        n[8] = ["The bear only wanted a hug.", "The bear was too much to bare. I'm not sorry."],
        n[9] = ["You were burnt to a crisp by a dragon. So sad.", "You got flattened by a dragon. Getting squished is a horrible way to die."],
        n[10] = ["You jumped into a spike wall. Not a good idea...", "You got killed by a spike wall. Most people are sensible enough not to touch pointy things."],
        n[11] = ["Even the ghost can die.", "You failed to be resurrected. This is a game, so you go to life after you die, so..."],
        n[12] = ["A bacterium from your raw food killed you. This game is definitely too hard.", "You killed the raw food. It killed you too."],
        n[13] = ["You died of thirst. Better drink your own piss."],
        n[14] = ["Did you know starver's mouths are always below water when swimming? Now you know."],
        n[15] = ["Do not worry, the piranha finds you tasty.", "Fun fact: Pirahnas eat people. Including you."],
        n[16] = ["LapaMauve does not plan that you can kill the kraken", "A kraken krak-ed your skull."],
        n[17] = ["Your skin's falling apart, the sun killed you."],
        n[18] = ["Garlic stored in your pockets boiled your brain."],
        n[19] = ["As a vampire, don't stand near the garlic cloves."],
        n[20] = ["You ate garlic as a vampire, what did you expect?"],
        n[21] = ["Your body wraps itself in thornbushes. As you try to escape, your skin comes off and your heart stops beating."],
        ZOMBIE_GRUMBLE = "Uuunnnggg",
        ZOMBIE_GRUMBLES = ["Uuunnnggg... I'm starving", "Need your brain Uuunnnggg...", "Fresh meat here... Uuunnnggg", "Uuunnnggg... You are tasty", "Uuunnnggg...", "Eat... uuunnnggg...", "I can smell blood... Uuunnnggg"]
    }
    ), Pe = [], D = 0; D < 344; D++)
        Pe[D] = "";
    var f, n = [], fe = ($(".md-languages").on("click", function() {
        $(this).toggleClass("active")
    }),
    $(".md-languages ul li").on("click", function() {
        var e = $(this).text();
        "English" === e ? N() : "FranÃ§ais" === e ? C() : "Deutsch" === e ? _() : "EspaÃ±ol" === e ? s() : "PortuguÃªs" === e ? i() : "Ð ÑƒÑÑÐºÐ¸Ð¹" === e ? t() : "Polski" === e && u(),
        INFO_BOX = [],
        Ye.craft.label = [],
        $(".md-languages ul li").removeClass("active"),
        $(this).addClass("active"),
        $(".md-languages label button").text(e)
    }),
    "EN");
    switch (navigator.language || navigator.userLanguage) {
    case "ru":
        fe = "RU";
        break;
    case "en":
        fe = "EN";
        break;
    case "es":
        fe = "SP";
        break;
    case "fr":
        fe = "FR";
        break;
    case "pl":
        fe = "PL";
        break;
    case "de":
        fe = "DE";
        break;
    case "pt":
        fe = "PT"
    }
    for (D in f = "FR" === fe ? ($(".md-languages label button").text("FranÃ§ais"),
    C) : "PL" === fe ? ($(".md-languages label button").text("Polski"),
    u) : "PT" === fe ? ($(".md-languages label button").text("PortuguÃªs"),
    i) : "SP" === fe ? ($(".md-languages label button").text("EspaÃ±ol"),
    s) : "RU" === fe ? ($(".md-languages label button").text("Ð ÑƒÑÑÐºÐ¸Ð¹"),
    t) : "DE" === fe ? ($(".md-languages label button").text("Deutsch"),
    _) : ($(".md-languages label button").text("English"),
    N),
    IMAGES = {
        LOGO: "img/logo.png",
        BIGDAY: "img/mapday.png",
        BIGNIGHT: "img/mapnight.png",
        BIGZDAY: "img/bigzday.png",
        BIGZNIGHT: "img/bigznight.png",
        MAPDAY_RIVER: "img/bigday-river1.png",
        MAPDAY_LAKE: "img/bigday-lake.png",
        MAPDAY_BERRY: "img/bigday-berry.png",
        MAPDAY_STONE1: "img/bigday-stone1.png",
        MAPDAY_STONE2: "img/bigday-stone2.png",
        MAPDAY_GOLD1: "img/bigday-gold1.png",
        MAPDAY_GOLD2: "img/bigday-gold2.png",
        MAPDAY_EMERALD1: "img/bigday-emerald1.png",
        MAPDAY_EMERALD2: "img/bigday-emerald2.png",
        MAPDAY_AMETHYST: "img/bigday-amethyst.png",
        MAPDAY_BEAR: "img/bigday-bear.png",
        MAPDAY_CAVE: "img/bigday-cave.png",
        MAPDAY_DIAMOND: "img/bigday-diamond.png",
        MAPDAY_ISLAND: "img/bigday-island.png",
        MAPDAY_REIDITE: "img/bigday-reidite.png",
        MAPDAY_SPIDER: "img/bigday-spider.png",
        MAPDAY_WOLF: "img/bigday-wolf.png",
        MAPDAY_FIR_TREE: "img/bigday-fir-tree.png",
        MAPDAY_FOX: "img/bigday-fox.png",
        MAPDAY_KRAKEN: "img/bigday-kraken.png",
        MAPDAY_PIRANHA: "img/bigday-piranha.png",
        MAPDAY_CACTUS: "img/bigday-cactus.png",
        MAPDAY_MAGMA: "img/bigday-magma.png",
        MAPNIGHT_RIVER: "img/bigday-river1.png",
        MAPNIGHT_LAKE: "img/bignight-lake.png",
        MAPNIGHT_BERRY: "img/bignight-berry.png",
        MAPNIGHT_STONE1: "img/bignight-stone1.png",
        MAPNIGHT_STONE2: "img/bignight-stone2.png",
        MAPNIGHT_GOLD1: "img/bignight-gold1.png",
        MAPNIGHT_GOLD2: "img/bignight-gold2.png",
        MAPNIGHT_EMERALD1: "img/bignight-emerald1.png",
        MAPNIGHT_EMERALD2: "img/bignight-emerald2.png",
        MAPNIGHT_AMETHYST: "img/bignight-amethyst.png",
        MAPNIGHT_BEAR: "img/bignight-bear.png",
        MAPNIGHT_CAVE: "img/bignight-cave.png",
        MAPNIGHT_DIAMOND: "img/bignight-diamond.png",
        MAPNIGHT_ISLAND: "img/bignight-island.png",
        MAPNIGHT_REIDITE: "img/bignight-reidite.png",
        MAPNIGHT_SPIDER: "img/bignight-spider.png",
        MAPNIGHT_WOLF: "img/bignight-wolf.png",
        MAPNIGHT_FIR_TREE: "img/bignight-fir-tree.png",
        MAPNIGHT_FOX: "img/bignight-fox.png",
        MAPNIGHT_KRAKEN: "img/bignight-kraken.png",
        MAPNIGHT_PIRANHA: "img/bignight-piranha.png",
        MAPNIGHT_CACTUS: "img/bignight-cactus.png",
        MAPNIGHT_MAGMA: "img/bignight-magma.png",
        MAPDAY_DESERT: "img/bigday-desert.png",
        MAPDAY_WINTER: "img/bigday-winter.png",
        MAPDAY_LAVA: "img/bigday-lava.png",
        MAPDAY_FOREST: "img/bigday-forest.png",
        MAPNIGHT_DESERT: "img/bignight-desert.png",
        MAPNIGHT_WINTER: "img/bignight-winter.png",
        MAPNIGHT_LAVA: "img/bignight-lava.png",
        MAPNIGHT_FOREST: "img/bignight-forest.png",
        RIVER_WAVED: "img/day-river-wave.png",
        RIVER_WAVEN: "img/night-river-wave.png",
        FOG0D: "img/day-fog0.png",
        FOG1D: "img/day-fog1.png",
        FOG2D: "img/day-fog2.png",
        FOG0N: "img/night-fog0.png",
        FOG1N: "img/night-fog1.png",
        FOG2N: "img/night-fog2.png",
        FOD0D: "img/day-fogdesert0.png",
        FOD1D: "img/day-fogdesert1.png",
        FOD2D: "img/day-fogdesert2.png",
        FOD0N: "img/night-fogdesert0.png",
        FOD1N: "img/night-fogdesert1.png",
        FOD2N: "img/night-fogdesert2.png",
        MARKER0D: "img/day-cross-server.png",
        MARKER1D: "img/day-here-server.png",
        MARKER2D: "img/day-finish-server.png",
        MARKER3D: "img/day-item-server.png",
        MARKER0N: "img/night-cross-server.png",
        MARKER1N: "img/night-here-server.png",
        MARKER2N: "img/night-finish-server.png",
        MARKER3N: "img/night-item-server.png",
        REIDITE0D: "img/day-reidite0.png",
        REIDITE0N: "img/night-reidite0.png",
        REIDITE1D: "img/day-reidite1.png",
        REIDITE1N: "img/night-reidite1.png",
        REIDITE2D: "img/day-reidite2.png",
        REIDITE2N: "img/night-reidite2.png",
        MAGMA1D: "img/day-lava1.png",
        MAGMA1N: "img/night-lava1.png",
        MAGMA2D: "img/day-lava2.png",
        MAGMA2N: "img/night-lava2.png",
        MAGMA3D: "img/day-lava3.png",
        MAGMA3N: "img/night-lava3.png",
        MAGMA4D: "img/day-lava4.png",
        MAGMA4N: "img/night-lava4.png",
        MAGMA5D: "img/day-lava5.png",
        MAGMA5N: "img/night-lava5.png",
        MAGMA6D: "img/day-lava6.png",
        MAGMA6N: "img/night-lava6.png",
        LAVA_GROUND1D: "img/day-lava-ground1.png",
        LAVA_GROUND1N: "img/night-lava-ground1.png",
        LAVA_GROUND2D: "img/day-lava-ground2.png",
        LAVA_GROUND2N: "img/night-lava-ground2.png",
        LAVA_GROUND3D: "img/day-lava-ground3.png",
        LAVA_GROUND3N: "img/night-lava-ground3.png",
        LAVA_GROUND4D: "img/day-lava-ground4.png",
        LAVA_GROUND4N: "img/night-lava-ground4.png",
        LAVA_GROUND5D: "img/day-lava-ground5.png",
        LAVA_GROUND5N: "img/night-lava-ground5.png",
        LAVA_GROUND6D: "img/day-lava-ground6.png",
        LAVA_GROUND6N: "img/night-lava-ground6.png",
        FIRE_MOBD: "img/day-fire-mob.png",
        FIRE_MOBN: "img/night-fire-mob.png",
        FIRE_MOB_HURT: "img/hurt-fire-mob.png",
        DIAMOND_PROTECTIOND: "img/day-diamond-protection.png",
        DIAMOND_PROTECTIONN: "img/night-diamond-protection.png",
        HAND_DIAMOND_PROTECTIOND: "img/day-hand-diamond-protection.png",
        HAND_DIAMOND_PROTECTIONN: "img/night-hand-diamond-protection.png",
        INV_DIAMOND_PROTECTION_OUT: "img/inv-diamond-protection-out.png",
        INV_DIAMOND_PROTECTION_IN: "img/inv-diamond-protection-in.png",
        INV_DIAMOND_PROTECTION_CLICK: "img/inv-diamond-protection-click.png",
        AMETHYST_PROTECTIOND: "img/day-amethyst-protection.png",
        AMETHYST_PROTECTIONN: "img/night-amethyst-protection.png",
        HAND_AMETHYST_PROTECTIOND: "img/day-hand-amethyst-protection.png",
        HAND_AMETHYST_PROTECTIONN: "img/night-hand-amethyst-protection.png",
        INV_AMETHYST_PROTECTION_OUT: "img/inv-amethyst-protection-out.png",
        INV_AMETHYST_PROTECTION_IN: "img/inv-amethyst-protection-in.png",
        INV_AMETHYST_PROTECTION_CLICK: "img/inv-amethyst-protection-click.png",
        REIDITE_SWORDD: "img/day-reidite-sword.png",
        REIDITE_SWORDN: "img/night-reidite-sword.png",
        INV_REIDITE_SWORD_OUT: "img/inv-reidite-sword-out.png",
        INV_REIDITE_SWORD_IN: "img/inv-reidite-sword-in.png",
        INV_REIDITE_SWORD_CLICK: "img/inv-reidite-sword-click.png",
        INV_REIDITE_OUT: "img/inv-reidite-out.png",
        INV_REIDITE_IN: "img/inv-reidite-in.png",
        INV_REIDITE_CLICK: "img/inv-reidite-click.png",
        INV_FLAME_OUT: "img/inv-flame-out.png",
        INV_FLAME_IN: "img/inv-flame-in.png",
        INV_FLAME_CLICK: "img/inv-flame-click.png",
        LAVA_BUBLE0D: "img/day-magma-buble0.png",
        LAVA_BUBLE0N: "img/night-magma-buble0.png",
        LAVA_BUBLE1D: "img/day-magma-buble1.png",
        LAVA_BUBLE1N: "img/night-magma-buble1.png",
        LAVA_BUBLE2D: "img/day-magma-buble2.png",
        LAVA_BUBLE2N: "img/night-magma-buble2.png",
        LAVA_DRAGOND: "img/day-lava-dragon.png",
        LAVA_DRAGONN: "img/night-lava-dragon.png",
        LAVA_FIRE_DRAGOND: "img/day-fire-dragon.png",
        LAVA_FIRE_DRAGONN: "img/night-fire-dragon.png",
        HURT_LAVA_DRAGON: "img/hurt-lava-dragon.png",
        LAVA_WING_LEFTD: "img/day-lava-wing-left.png",
        LAVA_WING_LEFTN: "img/night-lava-wing-left.png",
        LAVA_WING_RIGHTD: "img/day-lava-wing-right.png",
        LAVA_WING_RIGHTN: "img/night-lava-wing-right.png",
        HURT_LAVA_WING_LEFT: "img/hurt-lava-wing-left.png",
        HURT_LAVA_WING_RIGHT: "img/hurt-lava-wing-right.png",
        REIDITE_SPEARD: "img/day-reidite-spear.png",
        REIDITE_SPEARN: "img/night-reidite-spear.png",
        INV_REIDITE_SPEAR_OUT: "img/inv-reidite-spear-out.png",
        INV_REIDITE_SPEAR_IN: "img/inv-reidite-spear-in.png",
        INV_REIDITE_SPEAR_CLICK: "img/inv-reidite-spear-click.png",
        REIDITE_HELMETD: "img/day-reidite-helmet.png",
        REIDITE_HELMETN: "img/night-reidite-helmet.png",
        INV_REIDITE_HELMET_OUT: "img/inv-reidite-helmet-out.png",
        INV_REIDITE_HELMET_IN: "img/inv-reidite-helmet-in.png",
        INV_REIDITE_HELMET_CLICK: "img/inv-reidite-helmet-click.png",
        HAND_REIDITE_PROTECTIOND: "img/day-hand-reidite-protection.png",
        HAND_REIDITE_PROTECTIONN: "img/night-hand-reidite-protection.png",
        REIDITE_PROTECTIOND: "img/day-reidite-protection.png",
        REIDITE_PROTECTIONN: "img/night-reidite-protection.png",
        INV_REIDITE_PROTECTION_OUT: "img/inv-reidite-protection-out.png",
        INV_REIDITE_PROTECTION_IN: "img/inv-reidite-protection-in.png",
        INV_REIDITE_PROTECTION_CLICK: "img/inv-reidite-protection-click.png",
        LAVA_SWORDD: "img/day-lava-dragon-sword.png",
        LAVA_SWORDN: "img/night-lava-dragon-sword.png",
        INV_LAVA_SWORD_OUT: "img/inv-lava-dragon-sword-out.png",
        INV_LAVA_SWORD_IN: "img/inv-lava-dragon-sword-in.png",
        INV_LAVA_SWORD_CLICK: "img/inv-lava-dragon-sword-click.png",
        LAVA_SPEARD: "img/day-lava-spear.png",
        LAVA_SPEARN: "img/night-lava-spear.png",
        INV_LAVA_SPEAR_OUT: "img/inv-lava-spear-out.png",
        INV_LAVA_SPEAR_IN: "img/inv-lava-spear-in.png",
        INV_LAVA_SPEAR_CLICK: "img/inv-lava-spear-click.png",
        LAVA_HELMETD: "img/day-lava-helmet.png",
        LAVA_HELMETN: "img/night-lava-helmet.png",
        INV_LAVA_HELMET_OUT: "img/inv-lava-helmet-out.png",
        INV_LAVA_HELMET_IN: "img/inv-lava-helmet-in.png",
        INV_LAVA_HELMET_CLICK: "img/inv-lava-helmet-click.png",
        WITCHD: "img/day-witch-hat.png",
        WITCHN: "img/night-witch-hat.png",
        INV_WITCH_OUT: "img/inv-witch-hat-out.png",
        INV_WITCH_IN: "img/inv-witch-hat-in.png",
        INV_WITCH_CLICK: "img/inv-witch-hat-click.png",
        NIMBUSD: "img/day-nimbus2000.png",
        NIMBUSN: "img/night-nimbus2000.png",
        INV_NIMBUS_OUT: "img/inv-nimbus2000-out.png",
        INV_NIMBUS_IN: "img/inv-nimbus2000-in.png",
        INV_NIMBUS_CLICK: "img/inv-nimbus2000-click.png",
        ACCESSORY1D: "img/day-accessory1-pacques.png",
        ACCESSORY1N: "img/night-accessory1-pacques.png",
        ACCESSORY2D: "img/day-accessory2-pacques.png",
        ACCESSORY2N: "img/night-accessory2-pacques.png",
        ACCESSORY3D: "img/day-accessory3-pacques.png",
        ACCESSORY3N: "img/night-accessory3-pacques.png",
        ACCESSORY5D: "img/day-accessory5-pacques.png",
        ACCESSORY5N: "img/night-accessory5-pacques.png",
        ACCESSORY6D: "img/day-accessory6-pacques.png",
        ACCESSORY6N: "img/night-accessory6-pacques.png",
        ACCESSORY7D: "img/day-accessory7-pacques.png",
        ACCESSORY7N: "img/night-accessory7-pacques.png",
        ACCESSORY8D: "img/day-accessory8-pacques.png",
        ACCESSORY8N: "img/night-accessory8-pacques.png",
        BAG_EASTERD: "img/day-bag-pacques.png",
        BAG_EASTERN: "img/night-bag-pacques.png",
        CARROTD: "img/day-carrot.png",
        CARROTN: "img/night-carrot.png",
        CARROT_DRIEDD: "img/day-carrot-dried.png",
        CARROT_DRIEDN: "img/night-carrot-dried.png",
        TOMATO_MINID: "img/day-tomato-herb.png",
        TOMATO_MININ: "img/night-tomato-herb.png",
        TOMATO_MINI_DRIEDD: "img/day-tomato-herb-dried.png",
        TOMATO_MINI_DRIEDN: "img/night-tomato-herb-dried.png",
        TOMATOD: "img/day-tomato.png",
        TOMATON: "img/night-tomato.png",
        INV_CARROT_OUT: "img/inv-carrot-out.png",
        INV_CARROT_IN: "img/inv-carrot-in.png",
        INV_CARROT_CLICK: "img/inv-carrot-click.png",
        INV_TOMATO_OUT: "img/inv-tomato-out.png",
        INV_TOMATO_IN: "img/inv-tomato-in.png",
        INV_TOMATO_CLICK: "img/inv-tomato-click.png",
        PLAYER0D: "img/day-player0.png",
        PLAYER0N: "img/night-player0.png",
        PLAYER1D: "img/day-player1.png",
        PLAYER1N: "img/night-player1.png",
        PLAYER2D: "img/day-player2.png",
        PLAYER2N: "img/night-player22.png",
        PLAYER3D: "img/day-player3.png",
        PLAYER3N: "img/night-player33.png",
        PLAYER4D: "img/day-player4.png",
        PLAYER4N: "img/night-player4.png",
        PLAYER5D: "img/day-player5.png",
        PLAYER5N: "img/night-player5.png",
        PLAYER6D: "img/day-player6.png",
        PLAYER6N: "img/night-player6.png",
        PLAYER7D: "img/day-player7.png",
        PLAYER7N: "img/night-player7.png",
        PLAYER8D: "img/day-player8.png",
        PLAYER8N: "img/night-player8.png",
        PLAYER9D: "img/day-player9.png",
        PLAYER9N: "img/night-player9.png",
        PLAYER10D: "img/day-player10.png",
        PLAYER10N: "img/night-player10.png",
        PLAYER11D: "img/day-player11.png",
        PLAYER11N: "img/night-player11.png",
        PLAYER12D: "img/day-player12.png",
        PLAYER12N: "img/night-player12.png",
        PLAYER13D: "img/day-player13.png",
        PLAYER13N: "img/night-player13.png",
        PLAYER14D: "img/day-player14.png",
        PLAYER14N: "img/night-player14.png",
        PLAYER15D: "img/day-player15.png",
        PLAYER15N: "img/night-player15.png",
        PLAYER16D: "img/day-player16.png",
        PLAYER16N: "img/night-player16.png",
        PLAYER17D: "img/day-player17.png",
        PLAYER17N: "img/night-player17.png",
        PLAYER18D: "img/day-player18.png",
        PLAYER18N: "img/night-player18.png",
        PLAYER19D: "img/day-player19.png",
        PLAYER19N: "img/night-player19.png",
        HAND0D: "img/day-hand-player0.png",
        HAND0N: "img/night-hand-player0.png",
        HAND1D: "img/day-hand-player1.png",
        HAND1N: "img/night-hand-player1.png",
        HAND2D: "img/day-hand-player2.png",
        HAND2N: "img/night-hand-player22.png",
        HAND3D: "img/day-hand-player3.png",
        HAND3N: "img/night-hand-player33.png",
        HAND4D: "img/day-hand-player4.png",
        HAND4N: "img/night-hand-player4.png",
        HAND5D: "img/day-hand-player5.png",
        HAND5N: "img/night-hand-player5.png",
        HAND6D: "img/day-hand-player6.png",
        HAND6N: "img/night-hand-player6.png",
        HAND7D: "img/day-hand-player7.png",
        HAND7N: "img/night-hand-player7.png",
        HAND8D: "img/day-hand-player8.png",
        HAND8N: "img/night-hand-player8.png",
        HAND9D: "img/day-hand-player9.png",
        HAND9N: "img/night-hand-player9.png",
        HAND10D: "img/day-hand-player10.png",
        HAND10N: "img/night-hand-player10.png",
        HAND11D: "img/day-hand-player11.png",
        HAND11N: "img/night-hand-player11.png",
        HAND12D: "img/day-hand-player12.png",
        HAND12N: "img/night-hand-player12.png",
        HAND13D: "img/day-hand-player13.png",
        HAND13N: "img/night-hand-player13.png",
        HAND14D: "img/day-hand-player14.png",
        HAND14N: "img/night-hand-player14.png",
        HAND15D: "img/day-hand-player15.png",
        HAND15N: "img/night-hand-player15.png",
        HAND16D: "img/day-hand-player16.png",
        HAND16N: "img/night-hand-player16.png",
        HAND17D: "img/day-hand-player17.png",
        HAND17N: "img/night-hand-player17.png",
        HAND18D: "img/day-hand-player18.png",
        HAND18N: "img/night-hand-player18.png",
        HAND19D: "img/day-hand-player19.png",
        HAND19N: "img/night-hand-player19.png",
        ACCESSORY4D: "img/day-accessory4.png",
        ACCESSORY4N: "img/night-accessory4.png",
        ACCESSORY9D: "img/day-accessory9.png",
        ACCESSORY9N: "img/night-accessory9.png",
        ACCESSORY10D: "img/day-accessory10.png",
        ACCESSORY10N: "img/night-accessory10.png",
        ACCESSORY11D: "img/day-accessory11.png",
        ACCESSORY11N: "img/night-accessory11.png",
        ACCESSORY12D: "img/day-accessory12.png",
        ACCESSORY12N: "img/night-accessory12.png",
        BAGD: "img/day-bag.png",
        BAGN: "img/night-bag.png",
        INV_BAG_OUT: "img/inv-bag-out.png",
        INV_BAG_IN: "img/inv-bag-in.png",
        INV_BAG_CLICK: "img/inv-bag-click.png",
        PITCHFORKD: "img/day-pitchfork.png",
        PITCHFORKN: "img/night-pitchfork.png",
        INV_PITCHFORK_OUT: "img/inv-pitchfork-out.png",
        INV_PITCHFORK_IN: "img/inv-pitchfork-in.png",
        INV_PITCHFORK_CLICK: "img/inv-pitchfork-click.png",
        INV_WOOD_DOOR_SPIKE_OUT: "img/inv-wood-spike-door-out.png",
        INV_WOOD_DOOR_SPIKE_IN: "img/inv-wood-spike-door-in.png",
        INV_WOOD_DOOR_SPIKE_CLICK: "img/inv-wood-spike-door-click.png",
        INV_STONE_DOOR_SPIKE_OUT: "img/inv-stone-spike-door-out.png",
        INV_STONE_DOOR_SPIKE_IN: "img/inv-stone-spike-door-in.png",
        INV_STONE_DOOR_SPIKE_CLICK: "img/inv-stone-spike-door-click.png",
        INV_GOLD_DOOR_SPIKE_OUT: "img/inv-gold-spike-door-out.png",
        INV_GOLD_DOOR_SPIKE_IN: "img/inv-gold-spike-door-in.png",
        INV_GOLD_DOOR_SPIKE_CLICK: "img/inv-gold-spike-door-click.png",
        INV_DIAMOND_DOOR_SPIKE_OUT: "img/inv-diamond-spike-door-out.png",
        INV_DIAMOND_DOOR_SPIKE_IN: "img/inv-diamond-spike-door-in.png",
        INV_DIAMOND_DOOR_SPIKE_CLICK: "img/inv-diamond-spike-door-click.png",
        INV_AMETHYST_DOOR_SPIKE_OUT: "img/inv-amethyst-spike-door-out.png",
        INV_AMETHYST_DOOR_SPIKE_IN: "img/inv-amethyst-spike-door-in.png",
        INV_AMETHYST_DOOR_SPIKE_CLICK: "img/inv-amethyst-spike-door-click.png",
        WOOD_DOOR_SPIKED: "img/day-wood-spike-door.png",
        WOOD_DOOR_SPIKEN: "img/night-wood-spike-door.png",
        STONE_DOOR_SPIKED: "img/day-stone-spike-door.png",
        STONE_DOOR_SPIKEN: "img/night-stone-spike-door.png",
        GOLD_DOOR_SPIKED: "img/day-gold-spike-door.png",
        GOLD_DOOR_SPIKEN: "img/night-gold-spike-door.png",
        DIAMOND_DOOR_SPIKED: "img/day-diamond-spike-door.png",
        DIAMOND_DOOR_SPIKEN: "img/night-diamond-spike-door.png",
        AMETHYST_DOOR_SPIKED: "img/day-amethyst-spike-door.png",
        AMETHYST_DOOR_SPIKEN: "img/night-amethyst-spike-door.png",
        INV_REIDITE_DOOR_SPIKE_OUT: "img/inv-reidite-spike-door-out.png",
        INV_REIDITE_DOOR_SPIKE_IN: "img/inv-reidite-spike-door-in.png",
        INV_REIDITE_DOOR_SPIKE_CLICK: "img/inv-reidite-spike-door-click.png",
        INV_REIDITE_DOOR_OUT: "img/inv-reidite-door-out.png",
        INV_REIDITE_DOOR_IN: "img/inv-reidite-door-in.png",
        INV_REIDITE_DOOR_CLICK: "img/inv-reidite-door-click.png",
        INV_REIDITE_SPIKE_OUT: "img/inv-reidite-spike-out.png",
        INV_REIDITE_SPIKE_IN: "img/inv-reidite-spike-in.png",
        INV_REIDITE_SPIKE_CLICK: "img/inv-reidite-spike-click.png",
        INV_REIDITE_WALL_OUT: "img/inv-reidite-wall-out.png",
        INV_REIDITE_WALL_IN: "img/inv-reidite-wall-in.png",
        INV_REIDITE_WALL_CLICK: "img/inv-reidite-wall-click.png",
        REIDITE_WALLD: "img/day-reidite-wall.png",
        REIDITE_WALLN: "img/night-reidite-wall.png",
        REIDITE_DOORD: "img/day-reidite-door.png",
        REIDITE_DOORN: "img/night-reidite-door.png",
        REIDITE_SPIKED: "img/day-reidite-spike.png",
        REIDITE_SPIKEN: "img/night-reidite-spike.png",
        REIDITE_DOOR_SPIKED: "img/day-reidite-spike-door.png",
        REIDITE_DOOR_SPIKEN: "img/night-reidite-spike-door.png",
        INV_PICK_REIDITE_OUT: "img/inv-reidite-pickaxe-out.png",
        INV_PICK_REIDITE_IN: "img/inv-reidite-pickaxe-in.png",
        INV_PICK_REIDITE_CLICK: "img/inv-reidite-pickaxe-click.png",
        PICK_REIDITED: "img/day-reidite-pickaxe.png",
        PICK_REIDITEN: "img/night-reidite-pickaxe.png",
        INV_HAMMER_REIDITE_OUT: "img/inv-reidite-hammer-out.png",
        INV_HAMMER_REIDITE_IN: "img/inv-reidite-hammer-in.png",
        INV_HAMMER_REIDITE_CLICK: "img/inv-reidite-hammer-click.png",
        HAMMER_REIDITED: "img/day-reidite-hammer.png",
        HAMMER_REIDITEN: "img/night-reidite-hammer.png",
        WATERMELOND: "img/day-watermelon1.png",
        WATERMELONN: "img/night-watermelon1.png",
        DRIED_WATERMELOND: "img/day-watermelon-dried1.png",
        DRIED_WATERMELONN: "img/night-watermelon-dried1.png",
        INV_WATERMELON_OUT: "img/inv-watermelon-out.png",
        INV_WATERMELON_IN: "img/inv-watermelon-in.png",
        INV_WATERMELON_CLICK: "img/inv-watermelon-click.png",
        BOATD: "img/day-boat.png",
        BOATN: "img/night-boat.png",
        BOAT_WAVED: "img/day-boat-wave.png",
        BOAT_WAVEN: "img/night-boat-wave.png",
        INV_BOAT_OUT: "img/inv-boat-out.png",
        INV_BOAT_IN: "img/inv-boat-in.png",
        INV_BOAT_CLICK: "img/inv-boat-click.png",
        PLANED: "img/day-plane.png",
        PLANEN: "img/night-plane.png",
        INV_PLANE_OUT: "img/inv-plane-out.png",
        INV_PLANE_IN: "img/inv-plane-in.png",
        INV_PLANE_CLICK: "img/inv-plane-click.png",
        SLEDD: "img/day-sled.png",
        SLEDN: "img/night-sled.png",
        SLED_WAVED: "img/day-sled-wave.png",
        SLED_WAVEN: "img/night-sled-wave.png",
        INV_SLED_OUT: "img/inv-sled-out.png",
        INV_SLED_IN: "img/inv-sled-in.png",
        INV_SLED_CLICK: "img/inv-sled-click.png",
        PIRATE_HATD: "img/day-pirate-hat.png",
        PIRATE_HATN: "img/night-pirate-hat.png",
        INV_PIRATE_HAT_OUT: "img/inv-pirate-hat-out.png",
        INV_PIRATE_HAT_IN: "img/inv-pirate-hat-in.png",
        INV_PIRATE_HAT_CLICK: "img/inv-pirate-hat-click.png",
        PENGUIND: "img/day-penguin.png",
        PENGUINN: "img/night-penguin.png",
        HURT_PENGUIN: "img/hurt-penguin.png",
        INV_PENGUIN_FEATHER: "img/inv-penguin-feather-click.png",
        INV_HAWK_FEATHER: "img/inv-hawk-feather-click.png",
        BOARD: "img/day-boar1.png",
        BOAR_TAMEDD: "img/day-boar1-tamed.png",
        BOAR_ANGRYD: "img/day-boar1-angry.png",
        BOARN: "img/night-boar1.png",
        BOAR_TAMEDN: "img/night-boar1-tamed.png",
        BOAR_ANGRYN: "img/night-boar1-angry.png",
        INV_MOUNT_BOAR_OUT: "img/inv-mount-boar-out.png",
        INV_MOUNT_BOAR_IN: "img/inv-mount-boar-in.png",
        INV_MOUNT_BOAR_CLICK: "img/inv-mount-boar-click.png",
        HURT_BOAR: "img/day-hurt-boar1.png",
        BOAR_STEP: "img/boar1-step.png",
        SADDLED: "img/day-saddle1.png",
        SADDLEN: "img/night-saddle1.png",
        INV_SADDLE_OUT: "img/inv-saddle-out.png",
        INV_SADDLE_IN: "img/inv-saddle-in.png",
        INV_SADDLE_CLICK: "img/inv-saddle-click.png",
        WAND1D: "img/day-magic-wand0.png",
        WAND1N: "img/night-magic-wand0.png",
        LIGHT_WAND1D: "img/day-light-wand1.png",
        LIGHT_WAND1N: "img/night-light-wand1.png",
        INV_WAND1_OUT: "img/inv-magic-wand0-out.png",
        INV_WAND1_IN: "img/inv-magic-wand0-in.png",
        INV_WAND1_CLICK: "img/inv-magic-wand0-click.png",
        WAND2D: "img/day-magic-wand1.png",
        WAND2N: "img/night-magic-wand1.png",
        LIGHT_WAND0D: "img/day-light-wand0.png",
        LIGHT_WAND0N: "img/night-light-wand0.png",
        INV_WAND2_OUT: "img/inv-magic-wand1-out.png",
        INV_WAND2_IN: "img/inv-magic-wand1-in.png",
        INV_WAND2_CLICK: "img/inv-magic-wand1-click.png",
        FIREFLYD: "img/day-firefly.png",
        FIREFLYN: "img/night-firefly.png",
        HURT_FIREFLY: "img/hurt-firefly.png",
        INV_FIREFLY_OUT: "img/inv-firefly-out.png",
        INV_FIREFLY_IN: "img/inv-firefly-in.png",
        INV_FIREFLY_CLICK: "img/inv-firefly-click.png",
        BABY_DRAGOND: "img/day-baby-dragon.png",
        BABY_DRAGONN: "img/night-baby-dragon.png",
        BABY_DRAGON_ATTACKD: "img/day-baby-dragon-angry.png",
        BABY_DRAGON_ATTACKN: "img/night-baby-dragon-angry.png",
        BABY_DRAGON_TAMEDD: "img/day-baby-dragon-tamed.png",
        BABY_DRAGON_TAMEDN: "img/night-baby-dragon-tamed.png",
        BABY_DRAGON_WING_LEFT_ATTACKD: "img/day-wing-dragon-left-angry.png",
        BABY_DRAGON_WING_LEFT_ATTACKN: "img/night-dragon-wing-left-angry.png",
        BABY_DRAGON_WING_RIGHT_ATTACKD: "img/day-wing-dragon-right-angry.png",
        BABY_DRAGON_WING_RIGHT_ATTACKN: "img/night-dragon-wing-right-angry.png",
        BABY_DRAGON_WING_LEFT_TAMEDD: "img/day-wing-dragon-left-tamed.png",
        BABY_DRAGON_WING_LEFT_TAMEDN: "img/night-dragon-wing-left-tamed.png",
        BABY_DRAGON_WING_RIGHT_TAMEDD: "img/day-wing-dragon-right-tamed.png",
        BABY_DRAGON_WING_RIGHT_TAMEDN: "img/night-wing-dragon-right-tamed.png",
        BABY_DRAGON_WING_LEFTD: "img/day-wing-dragon-left.png",
        BABY_DRAGON_WING_LEFTN: "img/night-dragon-wing-left.png",
        BABY_DRAGON_WING_RIGHTD: "img/day-wing-dragon-right.png",
        BABY_DRAGON_WING_RIGHTN: "img/night-wing-dragon-right.png",
        HURT_BABY_DRAGON: "img/hurt-baby-dragon.png",
        HURT_BABY_DRAGON_WING_LEFT: "img/hurt-baby-dragon-wing-left.png",
        HURT_BABY_DRAGON_WING_RIGHT: "img/hurt-baby-dragon-wing-right.png",
        INV_BABY_DRAGON_OUT: "img/inv-baby-dragon-out.png",
        INV_BABY_DRAGON_IN: "img/inv-baby-dragon-in.png",
        INV_BABY_DRAGON_CLICK: "img/inv-baby-dragon-click.png",
        BABY_LAVAD: "img/day-baby-lava.png",
        BABY_LAVAN: "img/night-baby-lava.png",
        BABY_LAVA_ATTACKD: "img/day-baby-lava-angry.png",
        BABY_LAVA_ATTACKN: "img/night-baby-lava-angry.png",
        BABY_LAVA_TAMEDD: "img/day-baby-lava-tamed.png",
        BABY_LAVA_TAMEDN: "img/night-baby-lava-tamed.png",
        BABY_LAVA_WING_LEFT_ATTACKD: "img/day-wing-lava-left-angry.png",
        BABY_LAVA_WING_LEFT_ATTACKN: "img/night-wing-lava-left-angry.png",
        BABY_LAVA_WING_RIGHT_ATTACKD: "img/day-wing-lava-right-angry.png",
        BABY_LAVA_WING_RIGHT_ATTACKN: "img/night-wing-lava-right-angry.png",
        BABY_LAVA_WING_LEFT_TAMEDD: "img/day-wing-lava-left-tamed.png",
        BABY_LAVA_WING_LEFT_TAMEDN: "img/night-wing-lava-left-tamed.png",
        BABY_LAVA_WING_RIGHT_TAMEDD: "img/day-wing-lava-right-tamed.png",
        BABY_LAVA_WING_RIGHT_TAMEDN: "img/night-wing-lava-right-tamed.png",
        BABY_LAVA_WING_LEFTD: "img/day-wing-lava-left.png",
        BABY_LAVA_WING_LEFTN: "img/night-wing-lava-left.png",
        BABY_LAVA_WING_RIGHTD: "img/day-wing-lava-right.png",
        BABY_LAVA_WING_RIGHTN: "img/night-wing-lava-right.png",
        HURT_BABY_LAVA: "img/hurt-baby-lava.png",
        HURT_BABY_LAVA_WING_LEFT: "img/hurt-baby-lava-wing-left.png",
        HURT_BABY_LAVA_WING_RIGHT: "img/hurt-baby-lava-wing-right.png",
        INV_BABY_LAVA_OUT: "img/inv-baby-lava-out.png",
        INV_BABY_LAVA_IN: "img/inv-baby-lava-in.png",
        INV_BABY_LAVA_CLICK: "img/inv-baby-lava-click.png",
        HAWKD: "img/day-falcon.png",
        HAWKN: "img/night-falcon.png",
        HAWK_ATTACKD: "img/day-falcon-angry.png",
        HAWK_ATTACKN: "img/night-falcon-angry.png",
        HAWK_GROUNDD: "img/day-falcon-ground.png",
        HAWK_GROUNDN: "img/night-falcon-ground.png",
        HAWK_GROUND_ATTACKD: "img/day-falcon-ground-angry.png",
        HAWK_GROUND_ATTACKN: "img/night-falcon-ground-angry.png",
        HAWK_WING_LEFTD: "img/day-falcon-wings-left.png",
        HAWK_WING_LEFTN: "img/night-falcon-wings-left.png",
        HAWK_WING_RIGHTD: "img/day-falcon-wings-right.png",
        HAWK_WING_RIGHTN: "img/night-falcon-wings-right.png",
        HAWK_WING_LEFT_ATTACKD: "img/day-falcon-angry-wings-left.png",
        HAWK_WING_LEFT_ATTACKN: "img/night-falcon-angry-wings-left.png",
        HAWK_WING_RIGHT_ATTACKD: "img/day-falcon-angry-wings-right.png",
        HAWK_WING_RIGHT_ATTACKN: "img/night-falcon-angry-wings-right.png",
        HAWK_WING_LEFT_TAMEDD: "img/day-falcon-wings-left-tamed.png",
        HAWK_WING_LEFT_TAMEDN: "img/night-falcon-wings-left-tamed.png",
        HAWK_WING_RIGHT_TAMEDD: "img/day-falcon-wings-right-tamed.png",
        HAWK_WING_RIGHT_TAMEDN: "img/night-falcon-wings-right-tamed.png",
        HAWK_TAMEDD: "img/day-falcon-tamed.png",
        HAWK_TAMEDN: "img/night-falcon-tamed.png",
        HURT_HAWK_GROUND: "img/hurt-falcon-ground.png",
        HURT_HAWK: "img/hurt-falcon.png",
        HURT_HAWK_WING_LEFT: "img/hurt-falcon-wings-left.png",
        HURT_HAWK_WING_RIGHT: "img/hurt-falcon-wings-right.png",
        INV_HAWK_OUT: "img/inv-falcon-out.png",
        INV_HAWK_IN: "img/inv-falcon-in.png",
        INV_HAWK_CLICK: "img/inv-falcon-click.png",
        CRAB_BOSSD: "img/day-crab-boss.png",
        CRAB_BOSSN: "img/night-crab-boss.png",
        CRAB_BOSS_ATTACKD: "img/day-crab-boss-angry.png",
        CRAB_BOSS_ATTACKN: "img/night-crab-boss-angry.png",
        CRAB_BOSS_TAMEDD: "img/day-crab-boss-tamed.png",
        CRAB_BOSS_TAMEDN: "img/night-crab-boss-tamed.png",
        CRAB_BOSS_CLAW_LEFT_ATTACKD: "img/day-crab-boss-claw-left-attack.png",
        CRAB_BOSS_CLAW_LEFT_ATTACKN: "img/night-crab-boss-claw-left-attack.png",
        CRAB_BOSS_CLAW_RIGHT_ATTACKD: "img/day-crab-boss-claw-right-attack.png",
        CRAB_BOSS_CLAW_RIGHT_ATTACKN: "img/night-crab-boss-claw-right-attack.png",
        CRAB_BOSS_CLAW_LEFT_TAMEDD: "img/day-crab-boss-claw-left-tamed.png",
        CRAB_BOSS_CLAW_LEFT_TAMEDN: "img/night-crab-boss-claw-left-tamed.png",
        CRAB_BOSS_CLAW_RIGHT_TAMEDD: "img/day-crab-boss-claw-right-tamed.png",
        CRAB_BOSS_CLAW_RIGHT_TAMEDN: "img/night-crab-boss-claw-right-tamed.png",
        CRAB_BOSS_CLAW_LEFTD: "img/day-crab-boss-claw-left.png",
        CRAB_BOSS_CLAW_LEFTN: "img/night-crab-boss-claw-left.png",
        CRAB_BOSS_CLAW_RIGHTD: "img/day-crab-boss-claw-right.png",
        CRAB_BOSS_CLAW_RIGHTN: "img/night-crab-boss-claw-right.png",
        HURT_CRAB_BOSS: "img/hurt-crab-boss.png",
        HURT_CRAB_BOSS_CLAW_LEFT: "img/hurt-crab-boss-claw-left.png",
        HURT_CRAB_BOSS_CLAW_RIGHT: "img/hurt-crab-boss-claw-right.png",
        HEAL_CRAB_BOSS: "img/heal-crab-boss.png",
        HEAL_CRAB_BOSS_CLAW_LEFT: "img/heal-crab-boss-claw-left.png",
        HEAL_CRAB_BOSS_CLAW_RIGHT: "img/heal-crab-boss-claw-right.png",
        CRAB_STEP: "img/crab-step.png",
        INV_CRAB_BOSS_OUT: "img/inv-crab-boss-out.png",
        INV_CRAB_BOSS_IN: "img/inv-crab-boss-in.png",
        INV_CRAB_BOSS_CLICK: "img/inv-crab-boss-click.png",
        CACTUSD: "img/day-cactus10.png",
        CACTUSN: "img/night-cactus10.png",
        INV_CACTUS_OUT: "img/inv-cactus-out.png",
        INV_CACTUS_IN: "img/inv-cactus-in.png",
        INV_CACTUS_CLICK: "img/inv-cactus-click.png",
        SCORPIOND: "img/day-scorpion.png",
        SCORPIONN: "img/night-scorpion.png",
        SCORPION_HAND_LEFTD: "img/day-scorpion-hand-left.png",
        SCORPION_HAND_LEFTN: "img/night-scorpion-hand-left.png",
        SCORPION_HAND_RIGHTD: "img/day-scorpion-hand-right.png",
        SCORPION_HAND_RIGHTN: "img/night-scorpion-hand-right.png",
        HURT_SCORPION: "img/hurt-scorpion.png",
        HURT_SCORPION_HAND_LEFT: "img/hurt-scorpion-hand-left.png",
        HURT_SCORPION_HAND_RIGHT: "img/hurt-scorpion-hand-right.png",
        VULTURED: "img/day-vulture.png",
        VULTUREN: "img/night-vulture.png",
        VULTURE_ATTACKD: "img/day-vulture-angry.png",
        VULTURE_ATTACKN: "img/night-vulture-angry.png",
        VULTURE_GROUNDD: "img/day-vulture-ground.png",
        VULTURE_GROUNDN: "img/night-vulture-ground.png",
        VULTURE_GROUND_ATTACKD: "img/day-vulture-ground-angry.png",
        VULTURE_GROUND_ATTACKN: "img/night-vulture-ground-angry.png",
        VULTURE_WING_LEFTD: "img/day-vulture-wings-left.png",
        VULTURE_WING_LEFTN: "img/night-vulture-wings-left.png",
        VULTURE_WING_RIGHTD: "img/day-vulture-wings-right.png",
        VULTURE_WING_RIGHTN: "img/night-vulture-wings-right.png",
        VULTURE_WING_LEFT_ATTACKD: "img/day-vulture-angry-wings-left.png",
        VULTURE_WING_LEFT_ATTACKN: "img/night-vulture-angry-wings-left.png",
        VULTURE_WING_RIGHT_ATTACKD: "img/day-vulture-angry-wings-right.png",
        VULTURE_WING_RIGHT_ATTACKN: "img/night-vulture-angry-wings-right.png",
        VULTURE_WING_LEFT_TAMEDD: "img/day-vulture-wings-left-tamed.png",
        VULTURE_WING_LEFT_TAMEDN: "img/night-vulture-wings-left-tamed.png",
        VULTURE_WING_RIGHT_TAMEDD: "img/day-vulture-wings-right-tamed.png",
        VULTURE_WING_RIGHT_TAMEDN: "img/night-vulture-wings-right-tamed.png",
        VULTURE_TAMEDD: "img/day-vulture-tamed.png",
        VULTURE_TAMEDN: "img/night-vulture-tamed.png",
        HURT_VULTURE_GROUND: "img/hurt-vulture-ground.png",
        HURT_VULTURE: "img/hurt-vulture.png",
        HURT_VULTURE_WING_LEFT: "img/hurt-vulture-wings-left.png",
        HURT_VULTURE_WING_RIGHT: "img/hurt-vulture-wings-right.png",
        ALOE_VERAD: "img/day-aloe-vera.png",
        ALOE_VERAN: "img/night-aloe-vera.png",
        INV_ALOE_VERA_OUT: "img/inv-aloe-vera-out.png",
        INV_ALOE_VERA_IN: "img/inv-aloe-vera-in.png",
        INV_ALOE_VERA_CLICK: "img/inv-aloe-vera-click.png",
        ALOE_VERA_GROWND: "img/day-aloe-vera-grown.png",
        ALOE_VERA_GROWNN: "img/night-aloe-vera-grown.png",
        ALOE_VERA_DRIEDD: "img/day-aloe-vera-dried.png",
        ALOE_VERAN_DRIEDN: "img/night-aloe-vera-dried.png",
        TURBAN1D: "img/day-turban1.png",
        TURBAN1N: "img/night-turban1.png",
        TURBAN2D: "img/day-turban2.png",
        TURBAN2N: "img/night-turban2.png",
        INV_TURBAN2_OUT: "img/inv-turban2-out.png",
        INV_TURBAN2_IN: "img/inv-turban2-in.png",
        INV_TURBAN2_CLICK: "img/inv-turban2-click.png",
        INV_TURBAN1_OUT: "img/inv-turban1-out.png",
        INV_TURBAN1_IN: "img/inv-turban1-in.png",
        INV_TURBAN1_CLICK: "img/inv-turban1-click.png",
        PITCHFORK2D: "img/day-pitchfork2.png",
        PITCHFORK2N: "img/night-pitchfork2.png",
        INV_PITCHFORK2_OUT: "img/inv-pitchfork2-out.png",
        INV_PITCHFORK2_IN: "img/inv-pitchfork2-in.png",
        INV_PITCHFORK2_CLICK: "img/inv-pitchfork2-click.png",
        INV_PITCHFORK_PART_CLICK: "img/inv-gold-fork-click.png",
        INV_PILOT_GLASSES_CLICK: "img/inv-pilot-glasses-click.png",
        PILOT_HELMETD: "img/day-pilot-helmet.png",
        PILOT_HELMETN: "img/night-pilot-helmet.png",
        INV_PILOT_HELMET_OUT: "img/inv-pilot-helmet-out.png",
        INV_PILOT_HELMET_IN: "img/inv-pilot-helmet-in.png",
        INV_PILOT_HELMET_CLICK: "img/inv-pilot-helmet-click.png",
        SAND_WORM0D: "img/day-sandworm0.png",
        SAND_WORM1D: "img/day-sandworm1.png",
        SAND_WORM2D: "img/day-sandworm2.png",
        SAND_WORM0N: "img/night-sandworm0.png",
        SAND_WORM1N: "img/night-sandworm1.png",
        SAND_WORM2N: "img/night-sandworm2.png",
        HURT_SAND_WORM0: "img/hurt-sandworm0.png",
        HURT_SAND_WORM1: "img/hurt-sandworm1.png",
        HURT_SAND_WORM2: "img/hurt-sandworm2.png",
        INV_VULTURE_FEATHER: "img/inv-vulture-feather-click.png",
        EMERALD0D: "img/day-emerald0.png",
        EMERALD0N: "img/night-emerald0.png",
        EMERALD1D: "img/day-emerald1.png",
        EMERALD1N: "img/night-emerald1.png",
        EMERALD2D: "img/day-emerald2.png",
        EMERALD2N: "img/night-emerald2.png",
        INV_EMERALD: "img/inv-emerald-click.png",
        INV_SANDWORM_JUICE_OUT: "img/inv-sworm-juice-out.png",
        INV_SANDWORM_JUICE_IN: "img/inv-sworm-juice-in.png",
        INV_SANDWORM_JUICE_CLICK: "img/inv-sworm-juice-click.png",
        EMERALD_MACHINED: "img/day-point-machine.png",
        EMERALD_MACHINEN: "img/night-point-machine.png",
        EMERALD_MACHINE_HOLED: "img/day-point-machine-hole.png",
        EMERALD_MACHINE_HOLEN: "img/night-point-machine-hole.png",
        EMERALD_MACHINE_GROUNDD: "img/day-point-machine-ground.png",
        EMERALD_MACHINE_GROUNDN: "img/night-point-machine-ground.png",
        EMERALD_MACHINE_ROTATED: "img/day-point-machine-rotate.png",
        EMERALD_MACHINE_ROTATEN: "img/night-point-machine-rotate.png",
        INV_EMERALD_MACHINE_OUT: "img/inv-point-machine-out.png",
        INV_EMERALD_MACHINE_IN: "img/inv-point-machine-in.png",
        INV_EMERALD_MACHINE_CLICK: "img/inv-point-machine-click.png",
        EXTRACTOR_MACHINE0_STONED: "img/day-extractor-machine0-stone.png",
        EXTRACTOR_MACHINE0_STONEN: "img/night-extractor-machine0-stone.png",
        EXTRACTOR_MACHINE_STONED: "img/day-extractor-machine-stone.png",
        EXTRACTOR_MACHINE_STONEN: "img/night-extractor-machine-stone.png",
        INV_EXTRACTOR_MACHINE_STONE_OUT: "img/inv-extractor-machine-stone-out.png",
        INV_EXTRACTOR_MACHINE_STONE_IN: "img/inv-extractor-machine-stone-in.png",
        INV_EXTRACTOR_MACHINE_STONE_CLICK: "img/inv-extractor-machine-stone-click.png",
        EXTRACTOR_MACHINE0_GOLDD: "img/day-extractor-machine0-gold.png",
        EXTRACTOR_MACHINE0_GOLDN: "img/night-extractor-machine0-gold.png",
        EXTRACTOR_MACHINE_GOLDD: "img/day-extractor-machine-gold.png",
        EXTRACTOR_MACHINE_GOLDN: "img/night-extractor-machine-gold.png",
        INV_EXTRACTOR_MACHINE_GOLD_OUT: "img/inv-extractor-machine-gold-out.png",
        INV_EXTRACTOR_MACHINE_GOLD_IN: "img/inv-extractor-machine-gold-in.png",
        INV_EXTRACTOR_MACHINE_GOLD_CLICK: "img/inv-extractor-machine-gold-click.png",
        EXTRACTOR_MACHINE0_DIAMONDD: "img/day-extractor-machine0-diamond.png",
        EXTRACTOR_MACHINE0_DIAMONDN: "img/night-extractor-machine0-diamond.png",
        EXTRACTOR_MACHINE_DIAMONDD: "img/day-extractor-machine-diamond.png",
        EXTRACTOR_MACHINE_DIAMONDN: "img/night-extractor-machine-diamond.png",
        INV_EXTRACTOR_MACHINE_DIAMOND_OUT: "img/inv-extractor-machine-diamond-out.png",
        INV_EXTRACTOR_MACHINE_DIAMOND_IN: "img/inv-extractor-machine-diamond-in.png",
        INV_EXTRACTOR_MACHINE_DIAMOND_CLICK: "img/inv-extractor-machine-diamond-click.png",
        EXTRACTOR_MACHINE0_AMETHYSTD: "img/day-extractor-machine0-amethyst.png",
        EXTRACTOR_MACHINE0_AMETHYSTN: "img/night-extractor-machine0-amethyst.png",
        EXTRACTOR_MACHINE_AMETHYSTD: "img/day-extractor-machine-amethyst.png",
        EXTRACTOR_MACHINE_AMETHYSTN: "img/night-extractor-machine-amethyst.png",
        INV_EXTRACTOR_MACHINE_AMETHYST_OUT: "img/inv-extractor-machine-amethyst-out.png",
        INV_EXTRACTOR_MACHINE_AMETHYST_IN: "img/inv-extractor-machine-amethyst-in.png",
        INV_EXTRACTOR_MACHINE_AMETHYST_CLICK: "img/inv-extractor-machine-amethyst-click.png",
        EXTRACTOR_MACHINE0_REIDITED: "img/day-extractor-machine0-reidite.png",
        EXTRACTOR_MACHINE0_REIDITEN: "img/night-extractor-machine0-reidite.png",
        EXTRACTOR_MACHINE_REIDITED: "img/day-extractor-machine-reidite.png",
        EXTRACTOR_MACHINE_REIDITEN: "img/night-extractor-machine-reidite.png",
        INV_EXTRACTOR_MACHINE_REIDITE_OUT: "img/inv-extractor-machine-reidite-out.png",
        INV_EXTRACTOR_MACHINE_REIDITE_IN: "img/inv-extractor-machine-reidite-in.png",
        INV_EXTRACTOR_MACHINE_REIDITE_CLICK: "img/inv-extractor-machine-reidite-click.png",
        EXTRACTOR_CASES: "img/extractor-cases.png",
        HEND: "img/day-golden-hen.png",
        HENN: "img/night-golden-hen.png",
        CHICKEND: "img/day-golden-chicken.png",
        CHICKENN: "img/night-golden-chicken.png",
        HURT_GOLDEN_HEN: "img/hurt-golden-hen.png",
        HURT_GOLDEN_CHICKEN: "img/hurt-golden-chicken.png",
        LOGO_INTERFACE: "img/logo-interface.png",
        FOREST_MODE_HOVER: "img/forest-mode-hover.png",
        NORMAL_MODE_HOVER: "img/normal-mode-hover.png",
        VAMPIRE_MODE_HOVER: "img/vampire-mode-hover.png",
        ZOMBIE_MODE_HOVER: "img/zombie-mode-hover.png",
        MODE_COMMUNITY_HOVER: "img/community-mode-hover2.png",
        MODE_EXPERIMENTAL_HOVER: "img/experimental-mode-hover.png",
        ZOMBIE_MODE_OUT: "img/zombie-mode-out.png",
        ZOMBIE_MODE_IN: "img/zombie-mode-in.png",
        ZOMBIE_MODE_CLICK: "img/zombie-mode-click.png",
        VAMPIRE_MODE_OUT: "img/vampire-mode-out.png",
        VAMPIRE_MODE_IN: "img/vampire-mode-in.png",
        VAMPIRE_MODE_CLICK: "img/vampire-mode-click.png",
        NORMAL_MODE_OUT: "img/normal-mode-out.png",
        NORMAL_MODE_IN: "img/normal-mode-in.png",
        NORMAL_MODE_CLICK: "img/normal-mode-click.png",
        FOREST_MODE_OUT: "img/forest-mode-out.png",
        FOREST_MODE_IN: "img/forest-mode-in.png",
        FOREST_MODE_CLICK: "img/forest-mode-click.png",
        MODE_COMMUNITY_OUT: "img/community-mode-out.png",
        MODE_COMMUNITY_IN: "img/community-mode-in.png",
        MODE_COMMUNITY_CLICK: "img/community-mode-click.png",
        MODE_EXPERIMENTAL_OUT: "img/experimental-modes-out.png",
        MODE_EXPERIMENTAL_IN: "img/experimental-modes-in.png",
        MODE_EXPERIMENTAL_CLICK: "img/experimental-modes-click.png",
        YOUTUBE_BUTTON_OUT: "img/youtube-button-out.png",
        YOUTUBE_BUTTON_IN: "img/youtube-button-in.png",
        YOUTUBE_BUTTON_CLICK: "img/youtube-button-click.png",
        WIKI_BUTTON_OUT: "img/wiki-button-out.png",
        WIKI_BUTTON_IN: "img/wiki-button-in.png",
        WIKI_BUTTON_CLICK: "img/wiki-button-click.png",
        TWITTER_BUTTON_OUT: "img/twitter-button-out.png",
        TWITTER_BUTTON_IN: "img/twitter-button-in.png",
        TWITTER_BUTTON_CLICK: "img/twitter-button-click.png",
        FACEBOOK_BUTTON_OUT: "img/facebook-button-out.png",
        FACEBOOK_BUTTON_IN: "img/facebook-button-in.png",
        FACEBOOK_BUTTON_CLICK: "img/facebook-button-click.png",
        REDDIT_BUTTON_OUT: "img/reddit-button-out.png",
        REDDIT_BUTTON_IN: "img/reddit-button-in.png",
        REDDIT_BUTTON_CLICK: "img/reddit-button-click.png",
        DISCORD_BUTTON_OUT: "img/discord-button-out.png",
        DISCORD_BUTTON_IN: "img/discord-button-in.png",
        DISCORD_BUTTON_CLICK: "img/discord-button-click.png",
        TERMINAL_BUTTON_OUT: "img/terminal-button-out.png",
        TERMINAL_BUTTON_IN: "img/terminal-button-in.png",
        TERMINAL_BUTTON_CLICK: "img/terminal-button-click.png",
        RESTART_OUT: "img/restart-out.png",
        RESTART_IN: "img/restart-in.png",
        RESTART_CLICK: "img/restart-click.png",
        GUIDE_OUT: "img/guide-out.png",
        GUIDE_IN: "img/guide-in.png",
        GUIDE_CLICK: "img/guide-click.png",
        COPY_PASTE_OUT: "img/copy-paste-out.png",
        COPY_PASTE_IN: "img/copy-paste-in.png",
        COPY_PASTE_CLICK: "img/copy-paste-click.png",
        LINKS_BG: "img/link-buttons-bg.png",
        CHANGELOG_BOX: "img/changelog-box2.png",
        CHANGELOG_BUTTON_OUT: "img/changelog_29.png",
        DEVASTIO_BUTTON_OUT: "img/banner-devast.png",
        PROFILE_BUTTON_OUT: "img/profile-button-out.png",
        PROFILE_BUTTON_IN: "img/profile-button-in.png",
        PROFILE_BUTTON_CLICK: "img/profile-button-click.png",
        LOGIN_BUTTON_OUT: "img/login-button-out.png",
        LOGIN_BUTTON_IN: "img/login-button-in.png",
        LOGIN_BUTTON_CLICK: "img/login-button-click.png",
        LOGIN_GOOGLE_OUT: "img/login-google-out.png",
        LOGIN_GOOGLE_IN: "img/login-google-in.png",
        LOGIN_GOOGLE_CLICK: "img/login-google-click.png",
        LOGIN_FACEBOOK_OUT: "img/login-facebook-out.png",
        LOGIN_FACEBOOK_IN: "img/login-facebook-in.png",
        LOGIN_FACEBOOK_CLICK: "img/login-facebook-click.png",
        ACCOUNT_BOX: "img/account-box.png",
        ACCOUNT_MAINTENANCE: "img/account-under-maintenance.png",
        CLOSE_BUTTON_OUT: "img/close-button-account-out.png",
        CLOSE_BUTTON_IN: "img/close-button-account-in.png",
        CLOSE_BUTTON_CLICK: "img/close-button-account-click.png",
        PLAY_BUTTON_OUT: "img/play-button-out.png",
        PLAY_BUTTON_IN: "img/play-button-in.png",
        PLAY_BUTTON_CLICK: "img/play-button-click.png",
        MODIFY_NAME_OUT: "img/modify-name-out.png",
        MODIFY_NAME_IN: "img/modify-name-in.png",
        MODIFY_NAME_CLICK: "img/modify-name-click.png",
        YES_BUTTON_OUT: "img/yes-button-out.png",
        YES_BUTTON_IN: "img/yes-button-in.png",
        YES_BUTTON_CLICK: "img/yes-button-click.png",
        YES_300_BUTTON_OUT: "img/yes-300-button-out.png",
        YES_300_BUTTON_IN: "img/yes-300-button-in.png",
        YES_300_BUTTON_CLICK: "img/yes-300-button-click.png",
        NO_BUTTON_OUT: "img/no-button-out.png",
        NO_BUTTON_IN: "img/no-button-in.png",
        NO_BUTTON_CLICK: "img/no-button-click.png",
        NO_THANKS_BUTTON_OUT: "img/no-thanks-button-out.png",
        NO_THANKS_BUTTON_IN: "img/no-thanks-button-in.png",
        NO_THANKS_BUTTON_CLICK: "img/no-thanks-button-click.png",
        SHOP_BUTTON_OUT: "img/shop-button-out.png",
        SHOP_BUTTON_IN: "img/shop-button-in.png",
        SHOP_BUTTON_CLICK: "img/shop-button-click.png",
        LOGOUT_OUT: "img/logout-out.png",
        LOGOUT_IN: "img/logout-in.png",
        LOGOUT_CLICK: "img/logout-click.png",
        TERMS_BUTTON_OUT: "img/terms-button-out.png",
        TERMS_BUTTON_IN: "img/terms-button-in.png",
        TERMS_BUTTON_CLICK: "img/terms-button-click.png",
        TUTORIAL_ICON: "img/tutorial-icon.png",
        SKINS_ICON: "img/skins-icon.png",
        SHOP_ICON: "img/shop-icon.png",
        PAINT_ICON: "img/paint-icon.png",
        LEADERBOARD_ICON: "img/leaderboard-icon.png",
        START_ICON: "img/start-icon.png",
        PROFILE_ICON: "img/profile-icon.png",
        SERVER_ACCESS_ICON: "img/server-access-icon2.png",
        ICONS_BG_BUTTON_OUT: "img/button-homepage-bg-out.png",
        ICONS_BG_BUTTON_IN: "img/button-homepage-bg-in.png",
        ICONS_BG_BUTTON_CLICK: "img/button-homepage-bg-click.png",
        ICONS_BOTTOM_BG_BUTTON_OUT: "img/button-bottom-homepage-bg-out.png",
        ICONS_BOTTOM_BG_BUTTON_IN: "img/button-bottom-homepage-bg-in.png",
        ICONS_BOTTOM_BG_BUTTON_CLICK: "img/button-bottom-homepage-bg-click.png",
        AVATAR_RESUME: "img/lvl-player.png",
        AVATAR_LVL1: "img/avatar-player.png",
        AVATAR_LVL2: "img/avatar-player1.png",
        AVATAR_LVL3: "img/avatar-player2.png",
        AVATAR_LVL4: "img/avatar-player3.png",
        AVATAR_LVL5: "img/avatar-player4.png",
        AVATAR_LVL6: "img/avatar-player5.png",
        AVATAR_LVL7: "img/avatar-player6.png",
        AVATAR_LVL8: "img/avatar-player7.png",
        AVATAR_LVL9: "img/avatar-player8.png",
        AVATAR_LVL10: "img/avatar-player9.png",
        AVATAR_LVL11: "img/avatar-player10.png",
        AVATAR_LVL12: "img/avatar-player11.png",
        AVATAR_LVL13: "img/avatar-player12.png",
        AVATAR_LVL14: "img/avatar-player13.png",
        AVATAR_LVL15: "img/avatar-player14.png",
        AVATAR_LVL16: "img/avatar-player14.png",
        AVATAR_LVL17: "img/avatar-player14.png",
        AVATAR_LVL18: "img/avatar-player14.png",
        GOLDEN_BREAD: "img/golden-bread.png",
        BUY_BREAD_OUT: "img/buy-bread-out.png",
        BUY_BREAD_IN: "img/buy-bread-in.png",
        BUY_BREAD_CLICK: "img/buy-bread-click.png",
        GAUGE: "img/gauge.png",
        SEASON_4: "img/season-4-out.png",
        SEASON_4_IN: "img/season-4-in.png",
        SEASON_4_OUT: "img/season-4-click.png",
        SEASON4_BOX: "img/season4-box.png",
        SEASON_5: "img/season-5-out.png",
        SEASON_5_IN: "img/season-5-in.png",
        SEASON_5_OUT: "img/season-5-click.png",
        SEASON5_BOX: "img/season5-box.png",
        PROFILE_BOX: "img/profile2-box.png",
        SKINS_BOX: "img/skins-box.png",
        SHOP_BOX: "img/shop-box.png",
        PRIVATE_SERVER_BOX: "img/private-server-box.png",
        SERVER_LOCATION_BOX: "img/location-box.png",
        SERVER_DURATION_BOX: "img/server-duration-box.png",
        TUTORIAL_BOX: "img/tutorial-box.png",
        LEADERBOARD_BOX: "img/leaderboard1-box.png",
        BUY_BREAD_BOX: "img/buy-breads-box.png",
        BAG_BOX: "img/bag-box.png",
        CRATE_BOX: "img/deadbox-box.png",
        BOOK_BOX: "img/book-box.png",
        ACCESSORIES_BOX: "img/accessories-box.png",
        CUSTOM_SKIN_BOX: "img/customskin-box.png",
        BAG_REMAIN_BOX: "img/bag-lasts.png",
        SERVER_REMAIN_BOX: "img/server-lasts.png",
        SERVER_ACCESS_BOX: "img/server-access-box2.png",
        LOOT_BOX: "img/lootbox-box.png",
        CHANGE_NICKNAME1_BOX: "img/change-nickname0.png",
        CHANGE_NICKNAME0_BOX: "img/change-nickname1.png",
        CHEATING_BOX: "img/cheating-box.png",
        DAILY_QUEST_BOX: "img/daily-quest-box.png",
        DAILY_5_BREAD: "img/daily-5-bread.png",
        DAILY_10_BREAD: "img/daily-10-bread.png",
        DAILY_VALID: "img/daily-valid.png",
        NORMAL_PROFILE_OUT: "img/normal-profile-out.png",
        NORMAL_PROFILE_IN: "img/normal-profile-in.png",
        NORMAL_PROFILE_CLICK: "img/normal-profile-click.png",
        FOREST_PROFILE_OUT: "img/forest-profile-out.png",
        FOREST_PROFILE_IN: "img/forest-profile-in.png",
        FOREST_PROFILE_CLICK: "img/forest-profile-click.png",
        ZOMBIE_PROFILE_OUT: "img/zombie-profile-out.png",
        ZOMBIE_PROFILE_IN: "img/zombie-profile-in.png",
        ZOMBIE_PROFILE_CLICK: "img/zombie-profile-click.png",
        VAMPIRE_PROFILE_OUT: "img/vampire-profile-out.png",
        VAMPIRE_PROFILE_IN: "img/vampire-profile-in.png",
        VAMPIRE_PROFILE_CLICK: "img/vampire-profile-click.png",
        TOTAL_PROFILE_OUT: "img/total-profile-out.png",
        TOTAL_PROFILE_IN: "img/total-profile-in.png",
        TOTAL_PROFILE_CLICK: "img/total-profile-click.png",
        SEASON1_PROFILE_OUT: "img/season1-profile-out.png",
        SEASON1_PROFILE_IN: "img/season1-profile-in.png",
        SEASON1_PROFILE_CLICK: "img/season1-profile-click.png",
        SEASON2_PROFILE_OUT: "img/season2-profile-out.png",
        SEASON2_PROFILE_IN: "img/season2-profile-in.png",
        SEASON2_PROFILE_CLICK: "img/season2-profile-click.png",
        SEASON3_PROFILE_OUT: "img/season3-profile-out.png",
        SEASON3_PROFILE_IN: "img/season3-profile-in.png",
        SEASON3_PROFILE_CLICK: "img/season3-profile-click.png",
        SEASON4_PROFILE_OUT: "img/season4-profile-out.png",
        SEASON4_PROFILE_IN: "img/season4-profile-in.png",
        SEASON4_PROFILE_CLICK: "img/season4-profile-click.png",
        SEASON5_PROFILE_OUT: "img/season5-profile-out.png",
        SEASON5_PROFILE_IN: "img/season5-profile-in.png",
        SEASON5_PROFILE_CLICK: "img/season5-profile-click.png",
        LOCKED_SKIN_ALERT: "img/locked-skin-alert.png",
        LOCKED_CUSTOM_ALERT: "img/locked-custom-alert.png",
        RED_LOCKED: "img/bg-red-locked.png",
        SKIN_BUTTON_OUT: "img/skin-button-out.png",
        SKIN_BUTTON_IN: "img/skin-button-in.png",
        SKIN_BUTTON_CLICK: "img/skin-button-click.png",
        ACCESSORY_BUTTON_OUT: "img/accessory-button-out.png",
        ACCESSORY_BUTTON_IN: "img/accessory-button-in.png",
        ACCESSORY_BUTTON_CLICK: "img/accessory-button-click.png",
        BAG_BUTTON_OUT: "img/bag-button-out.png",
        BAG_BUTTON_IN: "img/bag-button-in.png",
        BAG_BUTTON_CLICK: "img/bag-button-click.png",
        BOOK_BUTTON_OUT: "img/book-button-out.png",
        BOOK_BUTTON_IN: "img/book-button-in.png",
        BOOK_BUTTON_CLICK: "img/book-button-click.png",
        CRATE_BUTTON_OUT: "img/deadbox-button-out.png",
        CRATE_BUTTON_IN: "img/deadbox-button-in.png",
        CRATE_BUTTON_CLICK: "img/deadbox-button-click.png",
        LOOT_BUTTON_OUT: "img/loot-button-out.png",
        LOOT_BUTTON_IN: "img/loot-button-in.png",
        LOOT_BUTTON_CLICK: "img/loot-button-click.png",
        FREE_ITEM_OUT: "img/free-item-out.png",
        FREE_ITEM_IN: "img/free-item-in.png",
        FREE_ITEM_CLICK: "img/free-item-click.png",
        WOOD_ITEM_OUT: "img/wood-item-out.png",
        WOOD_ITEM_IN: "img/wood-item-in.png",
        WOOD_ITEM_CLICK: "img/wood-item-click.png",
        STONE_ITEM_OUT: "img/stone-item.png",
        STONE_ITEM_IN: "img/stone-item-in.png",
        STONE_ITEM_CLICK: "img/stone-item-click.png",
        GOLD_ITEM_OUT: "img/gold-item.png",
        GOLD_ITEM_IN: "img/gold-item-in.png",
        GOLD_ITEM_CLICK: "img/gold-item-click.png",
        DIAMOND_ITEM_OUT: "img/diamond-item.png",
        DIAMOND_ITEM_IN: "img/diamond-item-in.png",
        DIAMOND_ITEM_CLICK: "img/diamond-item-click.png",
        AMETHYST_ITEM_OUT: "img/amethyst-item.png",
        AMETHYST_ITEM_IN: "img/amethyst-item-in.png",
        AMETHYST_ITEM_CLICK: "img/amethyst-item-click.png",
        REIDITE_ITEM_OUT: "img/reidite-item.png",
        REIDITE_ITEM_IN: "img/reidite-item-in.png",
        REIDITE_ITEM_CLICK: "img/reidite-item-click.png",
        SPECIAL_ITEM_OUT: "img/special-item-out.png",
        SPECIAL_ITEM_IN: "img/special-item-in.png",
        SPECIAL_ITEM_CLICK: "img/special-item-click.png",
        LEVEL_ITEM_OUT: "img/level-item-out.png",
        LEVEL_ITEM_IN: "img/level-item-in.png",
        LEVEL_ITEM_CLICK: "img/level-item-click.png",
        SKIN_PREVIOUS_OUT: "img/skin-previous-out.png",
        SKIN_PREVIOUS_IN: "img/skin-previous-in.png",
        SKIN_PREVIOUS_CLICK: "img/skin-previous-click.png",
        SKIN_NEXT_OUT: "img/skin-next-out.png",
        SKIN_NEXT_IN: "img/skin-next-in.png",
        SKIN_NEXT_CLICK: "img/skin-next-click.png",
        BACK_BUTTON_OUT: "img/back-button-out.png",
        BACK_BUTTON_IN: "img/back-button-in.png",
        BACK_BUTTON_CLICK: "img/back-button-click.png",
        GET_MORE_BUTTON_OUT: "img/get-more-button-out.png",
        GET_MORE_BUTTON_IN: "img/get-more-button-in.png",
        GET_MORE_BUTTON_CLICK: "img/get-more-button-click.png",
        CURRENCY1_OUT: "img/currency1-out.png",
        CURRENCY1_IN: "img/currency1-in.png",
        CURRENCY1_CLICK: "img/currency1-click.png",
        CURRENCY2_OUT: "img/currency2-out.png",
        CURRENCY2_IN: "img/currency2-in.png",
        CURRENCY2_CLICK: "img/currency2-click.png",
        CURRENCY3_OUT: "img/currency3-out.png",
        CURRENCY3_IN: "img/currency3-in.png",
        CURRENCY3_CLICK: "img/currency3-click.png",
        CURRENCY4_OUT: "img/currency4-out.png",
        CURRENCY4_IN: "img/currency4-in.png",
        CURRENCY4_CLICK: "img/currency4-click.png",
        CURRENCY5_OUT: "img/currency5-out.png",
        CURRENCY5_IN: "img/currency5-in.png",
        CURRENCY5_CLICK: "img/currency5-click.png",
        PRICE1_OUT: "img/price1-out.png",
        PRICE1_IN: "img/price1-in.png",
        PRICE1_CLICK: "img/price1-click.png",
        PRICE2_OUT: "img/price2-out.png",
        PRICE2_IN: "img/price2-in.png",
        PRICE2_CLICK: "img/price2-click.png",
        PRICE3_OUT: "img/price3-out.png",
        PRICE3_IN: "img/price3-in.png",
        PRICE3_CLICK: "img/price3-click.png",
        PRICE4_OUT: "img/price4-out.png",
        PRICE4_IN: "img/price4-in.png",
        PRICE4_CLICK: "img/price4-click.png",
        PRICE5_OUT: "img/price5-out.png",
        PRICE5_IN: "img/price5-in.png",
        PRICE5_CLICK: "img/price5-click.png",
        BUY_PRIVATE_SERVER_OUT: "img/buy-private-server-out.png",
        BUY_PRIVATE_SERVER_IN: "img/buy-private-server-in.png",
        BUY_PRIVATE_SERVER_CLICK: "img/buy-private-server-click.png",
        ATLANTA_OUT: "img/atlanta-out.png",
        ATLANTA_IN: "img/atlanta-in.png",
        ATLANTA_CLICK: "img/atlanta-click.png",
        DALLAS_OUT: "img/dallas-out.png",
        DALLAS_IN: "img/dallas-in.png",
        DALLAS_CLICK: "img/dallas-click.png",
        FREMONT_OUT: "img/fremont-out.png",
        FREMONT_IN: "img/fremont-in.png",
        FREMONT_CLICK: "img/fremont-click.png",
        NEWARK_OUT: "img/newark-out.png",
        NEWARK_IN: "img/newark-in.png",
        NEWARK_CLICK: "img/newark-click.png",
        TORONTO_OUT: "img/toronto-out.png",
        TORONTO_IN: "img/toronto-in.png",
        TORONTO_CLICK: "img/toronto-click.png",
        SINGAPORE_OUT: "img/singapore-out.png",
        SINGAPORE_IN: "img/singapore-in.png",
        SINGAPORE_CLICK: "img/singapore-click.png",
        FRANKFURT_OUT: "img/frankfurt-out.png",
        FRANKFURT_IN: "img/frankfurt-in.png",
        FRANKFURT_CLICK: "img/frankfurt-click.png",
        LONDON_OUT: "img/london-out.png",
        LONDON_IN: "img/london-in.png",
        LONDON_CLICK: "img/london-click.png",
        MUMBAI_OUT: "img/mumbai-out.png",
        MUMBAI_IN: "img/mumbai-in.png",
        MUMBAI_CLICK: "img/mumbai-click.png",
        TOKYO_OUT: "img/tokyo-out.png",
        TOKYO_IN: "img/tokyo-in.png",
        TOKYO_CLICK: "img/tokyo-click.png",
        YES_LOCATION_OUT: "img/yes-location-out.png",
        YES_LOCATION_IN: "img/yes-location-in.png",
        YES_LOCATION_CLICK: "img/yes-location-click.png",
        DAYS3_OUT: "img/3days-out.png",
        DAYS3_IN: "img/3days-in.png",
        DAYS3_CLICK: "img/3days-click.png",
        DAYS7_OUT: "img/7days-out.png",
        DAYS7_IN: "img/7days-in.png",
        DAYS7_CLICK: "img/7days-click.png",
        DAYS30_OUT: "img/30days-out.png",
        DAYS30_IN: "img/30days-in.png",
        DAYS30_CLICK: "img/30days-click.png",
        DAYS90_OUT: "img/90days-out.png",
        DAYS90_IN: "img/90days-in.png",
        DAYS90_CLICK: "img/90days-click.png",
        SPIN1: "img/spin1.png",
        SPIN2: "img/spin2.png",
        SPIN3: "img/spin3.png",
        SPIN4: "img/spin4.png",
        SPIN5: "img/spin5.png",
        SPIN6: "img/spin6.png",
        ARROW_SPIN: "img/arrow-spin.png",
        SPIN_BUTTON_1_OUT: "img/spin-button-1-out.png",
        SPIN_BUTTON_1_IN: "img/spin-button-1-in.png",
        SPIN_BUTTON_1_CLICK: "img/spin-button-1-click.png",
        SPIN_BUTTON_2_OUT: "img/spin-button-2-out.png",
        SPIN_BUTTON_2_IN: "img/spin-button-2-in.png",
        SPIN_BUTTON_2_CLICK: "img/spin-button-2-click.png",
        SPIN_BUTTON_3_OUT: "img/spin-button-3-out.png",
        SPIN_BUTTON_3_IN: "img/spin-button-3-in.png",
        SPIN_BUTTON_3_CLICK: "img/spin-button-3-click.png",
        SPIN_BUTTON_4_OUT: "img/spin-button-4-out.png",
        SPIN_BUTTON_4_IN: "img/spin-button-4-in.png",
        SPIN_BUTTON_4_CLICK: "img/spin-button-4-click.png",
        SPIN_BUTTON_5_OUT: "img/spin-button-5-out.png",
        SPIN_BUTTON_5_IN: "img/spin-button-5-in.png",
        SPIN_BUTTON_5_CLICK: "img/spin-button-5-click.png",
        SPIN_LIGHT: "img/spin-light.png",
        TUTO_WIKI_OUT: "img/tuto-wiki-out.png",
        TUTO_WIKI_IN: "img/tuto-wiki-in.png",
        TUTO_WIKI_CLICK: "img/tuto-wiki-click.png",
        TUTO_PREVIOUS_OUT: "img/tuto-previous-out.png",
        TUTO_PREVIOUS_IN: "img/tuto-previous-in.png",
        TUTO_PREVIOUS_CLICK: "img/tuto-previous-click.png",
        TUTO_NEXT_OUT: "img/tuto-next-out.png",
        TUTO_NEXT_IN: "img/tuto-next-in.png",
        TUTO_NEXT_CLICK: "img/tuto-next-click.png",
        TIME_LEADERBOARD_OUT: "img/time-leaderboard-out.png",
        TIME_LEADERBOARD_IN: "img/time-leaderboard-in.png",
        TIME_LEADERBOARD_CLICK: "img/time-leaderboard-click.png",
        SCORE_LEADERBOARD_OUT: "img/score-leaderboard-out.png",
        SCORE_LEADERBOARD_IN: "img/score-leaderboard-in.png",
        SCORE_LEADERBOARD_CLICK: "img/score-leaderboard-click.png",
        LVL_LEADERBOARD_OUT: "img/lvl-leaderboard-out.png",
        LVL_LEADERBOARD_IN: "img/lvl-leaderboard-in.png",
        LVL_LEADERBOARD_CLICK: "img/lvl-leaderboard-click.png",
        KILL_LEADERBOARD_OUT: "img/kill-leaderboard-out.png",
        KILL_LEADERBOARD_IN: "img/kill-leaderboard-in.png",
        KILL_LEADERBOARD_CLICK: "img/kill-leaderboard-click.png",
        ALL_LEADERBOARD_OUT: "img/all-leaderboard-out.png",
        ALL_LEADERBOARD_IN: "img/all-leaderboard-in.png",
        ALL_LEADERBOARD_CLICK: "img/all-leaderboard-click.png",
        TODAY_LEADERBOARD_OUT: "img/today-leaderboard-out.png",
        TODAY_LEADERBOARD_IN: "img/today-leaderboard-in.png",
        TODAY_LEADERBOARD_CLICK: "img/today-leaderboard-click.png",
        WEEK_LEADERBOARD_OUT: "img/week-leaderboard-out.png",
        WEEK_LEADERBOARD_IN: "img/week-leaderboard-in.png",
        WEEK_LEADERBOARD_CLICK: "img/week-leaderboard-click.png",
        SEASON1_LEADERBOARD_OUT: "img/season1-out.png",
        SEASON1_LEADERBOARD_IN: "img/season1-in.png",
        SEASON1_LEADERBOARD_CLICK: "img/season1-click.png",
        SEASON2_LEADERBOARD_OUT: "img/season2--out.png",
        SEASON2_LEADERBOARD_IN: "img/season2--in.png",
        SEASON2_LEADERBOARD_CLICK: "img/season2--click.png",
        SEASON3_LEADERBOARD_OUT: "img/season3-out.png",
        SEASON3_LEADERBOARD_IN: "img/season3-in.png",
        SEASON3_LEADERBOARD_CLICK: "img/season3-click.png",
        SEASON4_LEADERBOARD_OUT: "img/season4-out.png",
        SEASON4_LEADERBOARD_IN: "img/season4-in.png",
        SEASON4_LEADERBOARD_CLICK: "img/season4-click.png",
        SEASON5_LEADERBOARD_OUT: "img/season5-out.png",
        SEASON5_LEADERBOARD_IN: "img/season5-in.png",
        SEASON5_LEADERBOARD_CLICK: "img/season5-click.png",
        TOTAL_LEAD_OUT: "img/total-lead-out.png",
        TOTAL_LEAD_IN: "img/total-lead-in.png",
        TOTAL_LEAD_CLICK: "img/total-lead-click.png",
        NORMAL_LEAD_OUT: "img/normal-lead-out.png",
        NORMAL_LEAD_IN: "img/normal-lead-in.png",
        NORMAL_LEAD_CLICK: "img/normal-lead-click.png",
        FOREST_LEAD_OUT: "img/forest-lead-out.png",
        FOREST_LEAD_IN: "img/forest-lead-in.png",
        FOREST_LEAD_CLICK: "img/forest-lead-click.png",
        VAMPIRE_LEAD_OUT: "img/vampire-lead-out.png",
        VAMPIRE_LEAD_IN: "img/vampire-lead-in.png",
        VAMPIRE_LEAD_CLICK: "img/vampire-lead-click.png",
        ZOMBIE_LEAD_OUT: "img/zombie-lead-out.png",
        ZOMBIE_LEAD_IN: "img/zombie-lead-in.png",
        ZOMBIE_LEAD_CLICK: "img/zombie-lead-click.png",
        LEVEL5D: "img/day-level5.png",
        LEVEL5N: "img/night-level5.png",
        LEVEL10D: "img/day-level10.png",
        LEVEL10N: "img/night-level10.png",
        LEVEL15D: "img/day-level15.png",
        LEVEL15N: "img/night-level15.png",
        LEVEL20D: "img/day-level20.png",
        LEVEL20N: "img/night-level20.png",
        LEVEL25D: "img/day-level25.png",
        LEVEL25N: "img/night-level25.png",
        LEVEL30D: "img/day-level30.png",
        LEVEL30N: "img/night-level30.png",
        LEVEL35D: "img/day-level35.png",
        LEVEL35N: "img/night-level35.png",
        LEVEL40D: "img/day-level40.png",
        LEVEL40N: "img/night-level40.png",
        LEVEL45D: "img/day-level45.png",
        LEVEL45N: "img/night-level45.png",
        LEVEL50D: "img/day-level50.png",
        LEVEL50N: "img/night-level50.png",
        LEVEL55D: "img/day-level55.png",
        LEVEL55N: "img/night-level55.png",
        LEVEL60D: "img/day-level60.png",
        LEVEL60N: "img/night-level60.png",
        SKIN_DEVASTD: "img/day-skin-devast0.png",
        SKIN_DEVASTN: "img/night-skin-devast0.png",
        HAND_DEVASTD: "img/day-hand-devaster.png",
        HAND_DEVASTN: "img/night-hand-devaster.png",
        SKIN_STARD: "img/day-skin-star0.png",
        SKIN_STARN: "img/night-skin-star0.png",
        HAND_STARD: "img/day-hand-star0.png",
        HAND_STARN: "img/night-hand-star0.png",
        SKIN_VAMPIRED: "img/day-vampire.png",
        SKIN_VAMPIREN: "img/night-vampire.png",
        HAND_VAMPIRED: "img/day-hand-vampire.png",
        HAND_VAMPIREN: "img/night-hand-vampire.png",
        SKIN_ZOMBIED: "img/day-zombie.png",
        SKIN_ZOMBIEN: "img/night-zombie.png",
        HAND_ZOMBIED: "img/day-hand-zombie.png",
        HAND_ZOMBIEN: "img/night-hand-zombie.png",
        SKIN_ROBOTD: "img/day-skin113.png",
        SKIN_ROBOTN: "img/night-skin113.png",
        HAND_ROBOTD: "img/day-hand-skin113.png",
        HAND_ROBOTN: "img/night-hand-skin113.png",
        SKIN0D: "img/day-skin0.png",
        SKIN0N: "img/night-skin0.png",
        SKIN1D: "img/day-skin1.png",
        SKIN1N: "img/night-skin1.png",
        SKIN2D: "img/day-skin2.png",
        SKIN2N: "img/night-skin2.png",
        SKIN3D: "img/day-skin3.png",
        SKIN3N: "img/night-skin3.png",
        SKIN4D: "img/day-skin4.png",
        SKIN4N: "img/night-skin4.png",
        SKIN5D: "img/day-skin5.png",
        SKIN5N: "img/night-skin5.png",
        SKIN6D: "img/day-skin6.png",
        SKIN6N: "img/night-skin6.png",
        SKIN7D: "img/day-skin7.png",
        SKIN7N: "img/night-skin7.png",
        SKIN8D: "img/day-skin8.png",
        SKIN8N: "img/night-skin8.png",
        SKIN9D: "img/day-skin9.png",
        SKIN9N: "img/night-skin9.png",
        SKIN10D: "img/day-skin10.png",
        SKIN10N: "img/night-skin10.png",
        SKIN11D: "img/day-skin11.png",
        SKIN11N: "img/night-skin11.png",
        SKIN12D: "img/day-skin12.png",
        SKIN12N: "img/night-skin12.png",
        SKIN13D: "img/day-skin13.png",
        SKIN13N: "img/night-skin13.png",
        SKIN14D: "img/day-skin14.png",
        SKIN14N: "img/night-skin14.png",
        SKIN15D: "img/day-skin15.png",
        SKIN15N: "img/night-skin15.png",
        SKIN16D: "img/day-skin16.png",
        SKIN16N: "img/night-skin16.png",
        SKIN17D: "img/day-skin17.png",
        SKIN17N: "img/night-skin17.png",
        SKIN18D: "img/day-skin18.png",
        SKIN18N: "img/night-skin18.png",
        SKIN19D: "img/day-skin19.png",
        SKIN19N: "img/night-skin19.png",
        SKIN20D: "img/day-skin20.png",
        SKIN20N: "img/night-skin20.png",
        SKIN21D: "img/day-skin21.png",
        SKIN21N: "img/night-skin21.png",
        SKIN22D: "img/day-skin22.png",
        SKIN22N: "img/night-skin22.png",
        SKIN23D: "img/day-skin23.png",
        SKIN23N: "img/night-skin23.png",
        SKIN24D: "img/day-skin24.png",
        SKIN24N: "img/night-skin24.png",
        SKIN25D: "img/day-skin25.png",
        SKIN25N: "img/night-skin25.png",
        SKIN26D: "img/day-skin26.png",
        SKIN26N: "img/night-skin26.png",
        SKIN27D: "img/day-skin27.png",
        SKIN27N: "img/night-skin27.png",
        SKIN28D: "img/day-skin28.png",
        SKIN28N: "img/night-skin28.png",
        SKIN29D: "img/day-skin29.png",
        SKIN29N: "img/night-skin29.png",
        SKIN30D: "img/day-skin30.png",
        SKIN30N: "img/night-skin30.png",
        SKIN31D: "img/day-skin31.png",
        SKIN31N: "img/night-skin31.png",
        SKIN32D: "img/day-skin32.png",
        SKIN32N: "img/night-skin32.png",
        SKIN33D: "img/day-skin33.png",
        SKIN33N: "img/night-skin33.png",
        SKIN34D: "img/day-skin34.png",
        SKIN34N: "img/night-skin34.png",
        SKIN35D: "img/day-skin35.png",
        SKIN35N: "img/night-skin35.png",
        SKIN36D: "img/day-skin36.png",
        SKIN36N: "img/night-skin36.png",
        SKIN37D: "img/day-skin37.png",
        SKIN37N: "img/night-skin37.png",
        SKIN38D: "img/day-skin38.png",
        SKIN38N: "img/night-skin38.png",
        SKIN39D: "img/day-skin39.png",
        SKIN39N: "img/night-skin39.png",
        SKIN40D: "img/day-skin40.png",
        SKIN40N: "img/night-skin40.png",
        SKIN41D: "img/day-skin41.png",
        SKIN41N: "img/night-skin41.png",
        SKIN42D: "img/day-skin42.png",
        SKIN42N: "img/night-skin42.png",
        SKIN43D: "img/day-skin43.png",
        SKIN43N: "img/night-skin43.png",
        SKIN44D: "img/day-skin44.png",
        SKIN44N: "img/night-skin44.png",
        SKIN45D: "img/day-skin45.png",
        SKIN45N: "img/night-skin45.png",
        SKIN46D: "img/day-skin46.png",
        SKIN46N: "img/night-skin46.png",
        SKIN47D: "img/day-skin47.png",
        SKIN47N: "img/night-skin47.png",
        SKIN48D: "img/day-skin48.png",
        SKIN48N: "img/night-skin48.png",
        SKIN49D: "img/day-skin49.png",
        SKIN49N: "img/night-skin49.png",
        SKIN50D: "img/day-skin50.png",
        SKIN50N: "img/night-skin50.png",
        SKIN51D: "img/day-skin51.png",
        SKIN51N: "img/night-skin51.png",
        SKIN52D: "img/day-skin52.png",
        SKIN52N: "img/night-skin52.png",
        SKIN53D: "img/day-skin53.png",
        SKIN53N: "img/night-skin53.png",
        SKIN54D: "img/day-skin54.png",
        SKIN54N: "img/night-skin54.png",
        SKIN55D: "img/day-skin55.png",
        SKIN55N: "img/night-skin55.png",
        SKIN56D: "img/day-skin56.png",
        SKIN56N: "img/night-skin56.png",
        SKIN57D: "img/day-skin57.png",
        SKIN57N: "img/night-skin57.png",
        SKIN58D: "img/day-skin58.png",
        SKIN58N: "img/night-skin58.png",
        SKIN59D: "img/day-skin59.png",
        SKIN59N: "img/night-skin59.png",
        SKIN60D: "img/day-skin60.png",
        SKIN60N: "img/night-skin60.png",
        SKIN61D: "img/day-skin61.png",
        SKIN61N: "img/night-skin61.png",
        SKIN62D: "img/day-skin62.png",
        SKIN62N: "img/night-skin62.png",
        SKIN63D: "img/day-skin63.png",
        SKIN63N: "img/night-skin63.png",
        SKIN64D: "img/day-skin64.png",
        SKIN64N: "img/night-skin64.png",
        SKIN65D: "img/day-skin65.png",
        SKIN65N: "img/night-skin65.png",
        SKIN66D: "img/day-skin66.png",
        SKIN66N: "img/night-skin66.png",
        SKIN67D: "img/day-skin67.png",
        SKIN67N: "img/night-skin67.png",
        SKIN68D: "img/day-skin68.png",
        SKIN68N: "img/night-skin68.png",
        SKIN69D: "img/day-skin69.png",
        SKIN69N: "img/night-skin69.png",
        SKIN70D: "img/day-skin70.png",
        SKIN70N: "img/night-skin70.png",
        SKIN71D: "img/day-skin71.png",
        SKIN71N: "img/night-skin71.png",
        SKIN72D: "img/day-skin72.png",
        SKIN72N: "img/night-skin72.png",
        SKIN73D: "img/day-skin73.png",
        SKIN73N: "img/night-skin73.png",
        SKIN74D: "img/day-skin74.png",
        SKIN74N: "img/night-skin74.png",
        SKIN75D: "img/day-skin75.png",
        SKIN75N: "img/night-skin75.png",
        SKIN76D: "img/day-skin76.png",
        SKIN76N: "img/night-skin76.png",
        SKIN77D: "img/day-skin77.png",
        SKIN77N: "img/night-skin77.png",
        SKIN78D: "img/day-skin78.png",
        SKIN78N: "img/night-skin78.png",
        SKIN79D: "img/day-skin79.png",
        SKIN79N: "img/night-skin79.png",
        SKIN80D: "img/day-skin80.png",
        SKIN80N: "img/night-skin80.png",
        SKIN81D: "img/day-skin81.png",
        SKIN81N: "img/night-skin81.png",
        SKIN82D: "img/day-skin82.png",
        SKIN82N: "img/night-skin82.png",
        SKIN83D: "img/day-skin83.png",
        SKIN83N: "img/night-skin83.png",
        SKIN84D: "img/day-skin84.png",
        SKIN84N: "img/night-skin84.png",
        SKIN85D: "img/day-skin85.png",
        SKIN85N: "img/night-skin85.png",
        SKIN86D: "img/day-skin86.png",
        SKIN86N: "img/night-skin86.png",
        SKIN87D: "img/day-skin87.png",
        SKIN87N: "img/night-skin87.png",
        SKIN88D: "img/day-skin88.png",
        SKIN88N: "img/night-skin88.png",
        SKIN89D: "img/day-skin89.png",
        SKIN89N: "img/night-skin89.png",
        SKIN90D: "img/day-skin90.png",
        SKIN90N: "img/night-skin90.png",
        SKIN91D: "img/day-skin91.png",
        SKIN91N: "img/night-skin91.png",
        SKIN92D: "img/day-skin92.png",
        SKIN92N: "img/night-skin92.png",
        SKIN93D: "img/day-skin93.png",
        SKIN93N: "img/night-skin93.png",
        SKIN94D: "img/day-skin94.png",
        SKIN94N: "img/night-skin94.png",
        SKIN95D: "img/day-skin95.png",
        SKIN95N: "img/night-skin95.png",
        SKIN96D: "img/day-skin96.png",
        SKIN96N: "img/night-skin96.png",
        SKIN97D: "img/day-skin97.png",
        SKIN97N: "img/night-skin97.png",
        SKIN98D: "img/day-skin98.png",
        SKIN98N: "img/night-skin98.png",
        SKIN99D: "img/day-skin99.png",
        SKIN99N: "img/night-skin99.png",
        SKIN100D: "img/day-skin100.png",
        SKIN100N: "img/night-skin100.png",
        SKIN101D: "img/day-skin101.png",
        SKIN101N: "img/night-skin101.png",
        SKIN102D: "img/day-skin102.png",
        SKIN102N: "img/night-skin102.png",
        SKIN103D: "img/day-skin103.png",
        SKIN103N: "img/night-skin103.png",
        SKIN104D: "img/day-skin104.png",
        SKIN104N: "img/night-skin104.png",
        SKIN105D: "img/day-skin105.png",
        SKIN105N: "img/night-skin105.png",
        SKIN106D: "img/day-skin106.png",
        SKIN106N: "img/night-skin106.png",
        SKIN107D: "img/day-skin107.png",
        SKIN107N: "img/night-skin107.png",
        SKIN108D: "img/day-skin108.png",
        SKIN108N: "img/night-skin108.png",
        SKIN109D: "img/day-skin109.png",
        SKIN109N: "img/night-skin109.png",
        SKIN110D: "img/day-skin110.png",
        SKIN110N: "img/night-skin110.png",
        SKIN111D: "img/day-skin111.png",
        SKIN111N: "img/night-skin111.png",
        SKIN112D: "img/day-skin112.png",
        SKIN112N: "img/night-skin112.png",
        SKIN113D: "img/day-skin113.png",
        SKIN113N: "img/night-skin113.png",
        SKIN114D: "img/day-skin114.png",
        SKIN114N: "img/night-skin114.png",
        SKIN115D: "img/day-skin115.png",
        SKIN115N: "img/night-skin115.png",
        SKIN116D: "img/day-skin116.png",
        SKIN116N: "img/night-skin116.png",
        SKIN117D: "img/day-skin117.png",
        SKIN117N: "img/night-skin117.png",
        SKIN118D: "img/day-skin118.png",
        SKIN118N: "img/night-skin118.png",
        SKIN119D: "img/day-skin119.png",
        SKIN119N: "img/night-skin119.png",
        SKIN120D: "img/day-skin120.png",
        SKIN120N: "img/night-skin120.png",
        SKIN121D: "img/day-skin121.png",
        SKIN121N: "img/night-skin121.png",
        SKIN122D: "img/day-skin122.png",
        SKIN122N: "img/night-skin122.png",
        SKIN123D: "img/day-skin123.png",
        SKIN123N: "img/night-skin123.png",
        SKIN124D: "img/day-skin124.png",
        SKIN124N: "img/night-skin124.png",
        SKIN125D: "img/day-skin125.png",
        SKIN125N: "img/night-skin125.png",
        SKIN126D: "img/day-skin126.png",
        SKIN126N: "img/night-skin126.png",
        SKIN127D: "img/day-skin127.png",
        SKIN127N: "img/night-skin127.png",
        SKIN128D: "img/day-skin128.png",
        SKIN128N: "img/night-skin128.png",
        SKIN129D: "img/day-skin129.png",
        SKIN129N: "img/night-skin129.png",
        SKIN130D: "img/day-skin130-1.png",
        SKIN130N: "img/night-skin130-1.png",
        SKIN131D: "img/day-skin131.png",
        SKIN131N: "img/night-skin131.png",
        SKIN132D: "img/day-skin132.png",
        SKIN132N: "img/night-skin132.png",
        SKIN133D: "img/day-skin133.png",
        SKIN133N: "img/night-skin133.png",
        SKIN134D: "img/day-skin134.png",
        SKIN134N: "img/night-skin134.png",
        SKIN135D: "img/day-skin135.png",
        SKIN135N: "img/night-skin135.png",
        SKIN136D: "img/day-skin136.png",
        SKIN136N: "img/night-skin136.png",
        SKIN137D: "img/day-skin137.png",
        SKIN137N: "img/night-skin137.png",
        SKIN138D: "img/day-skin138.png",
        SKIN138N: "img/night-skin138.png",
        SKIN139D: "img/day-skin139.png",
        SKIN139N: "img/night-skin139.png",
        SKIN140D: "img/day-skin140.png",
        SKIN140N: "img/night-skin140.png",
        SKIN141D: "img/day-skin141.png",
        SKIN141N: "img/night-skin141.png",
        SKIN142D: "img/day-skin142.png",
        SKIN142N: "img/night-skin142.png",
        SKIN143D: "img/day-skin143.png",
        SKIN143N: "img/night-skin143.png",
        SKIN144D: "img/day-skin144.png",
        SKIN144N: "img/night-skin144.png",
        SKIN145D: "img/day-skin145.png",
        SKIN145N: "img/night-skin145.png",
        SKIN146D: "img/day-skin146.png",
        SKIN146N: "img/night-skin146.png",
        SKIN147D: "img/day-skin147.png",
        SKIN147N: "img/night-skin147.png",
        SKIN148D: "img/day-skin148.png",
        SKIN148N: "img/night-skin148.png",
        SKIN149D: "img/day-skin149.png",
        SKIN149N: "img/night-skin149.png",
        SKIN150D: "img/day-skin150.png",
        SKIN150N: "img/night-skin150.png",
        HAND_SKIN0D: "img/day-hand-skin0.png",
        HAND_SKIN0N: "img/night-hand-skin0.png",
        HAND_SKIN1D: "img/day-hand-skin1.png",
        HAND_SKIN1N: "img/night-hand-skin1.png",
        HAND_SKIN2D: "img/day-hand-skin2.png",
        HAND_SKIN2N: "img/night-hand-skin2.png",
        HAND_SKIN3D: "img/day-hand-skin3.png",
        HAND_SKIN3N: "img/night-hand-skin3.png",
        HAND_SKIN4D: "img/day-hand-skin4.png",
        HAND_SKIN4N: "img/night-hand-skin4.png",
        HAND_SKIN5D: "img/day-hand-skin5.png",
        HAND_SKIN5N: "img/night-hand-skin5.png",
        HAND_SKIN6D: "img/day-hand-skin6.png",
        HAND_SKIN6N: "img/night-hand-skin6.png",
        HAND_SKIN7D: "img/day-hand-skin6.png",
        HAND_SKIN7N: "img/night-hand-skin6.png",
        HAND_SKIN8D: "img/day-hand-skin8.png",
        HAND_SKIN8N: "img/night-hand-skin8.png",
        HAND_SKIN9D: "img/day-hand-skin9.png",
        HAND_SKIN9N: "img/night-hand-skin9.png",
        HAND_SKIN10D: "img/day-hand-skin10.png",
        HAND_SKIN10N: "img/night-hand-skin10.png",
        HAND_SKIN11D: "img/day-hand-skin11.png",
        HAND_SKIN11N: "img/night-hand-skin11.png",
        HAND_SKIN12D: "img/day-hand-skin12.png",
        HAND_SKIN12N: "img/night-hand-skin12.png",
        HAND_SKIN13D: "img/day-hand-skin13.png",
        HAND_SKIN13N: "img/night-hand-skin13.png",
        HAND_SKIN14D: "img/day-hand-skin14.png",
        HAND_SKIN14N: "img/night-hand-skin14.png",
        HAND_SKIN15D: "img/day-hand-skin15.png",
        HAND_SKIN15N: "img/night-hand-skin15.png",
        HAND_SKIN16D: "img/day-hand-skin16.png",
        HAND_SKIN16N: "img/night-hand-skin16.png",
        HAND_SKIN17D: "img/day-hand-skin17.png",
        HAND_SKIN17N: "img/night-hand-skin17.png",
        HAND_SKIN18D: "img/day-hand-skin18.png",
        HAND_SKIN18N: "img/night-hand-skin18.png",
        HAND_SKIN19D: "img/day-hand-skin19.png",
        HAND_SKIN19N: "img/night-hand-skin19.png",
        HAND_SKIN20D: "img/day-hand-skin20.png",
        HAND_SKIN20N: "img/night-hand-skin20.png",
        HAND_SKIN21D: "img/day-hand-skin21.png",
        HAND_SKIN21N: "img/night-hand-skin21.png",
        HAND_SKIN22D: "img/day-hand-skin22.png",
        HAND_SKIN22N: "img/night-hand-skin22.png",
        HAND_SKIN23D: "img/day-hand-skin23.png",
        HAND_SKIN23N: "img/night-hand-skin23.png",
        HAND_SKIN24D: "img/day-hand-skin24.png",
        HAND_SKIN24N: "img/night-hand-skin24.png",
        HAND_SKIN25D: "img/day-hand-skin25.png",
        HAND_SKIN25N: "img/night-hand-skin25.png",
        HAND_SKIN26D: "img/day-hand-skin26.png",
        HAND_SKIN26N: "img/night-hand-skin26.png",
        HAND_SKIN27D: "img/day-hand-skin27.png",
        HAND_SKIN27N: "img/night-hand-skin27.png",
        HAND_SKIN28D: "img/day-hand-skin28.png",
        HAND_SKIN28N: "img/night-hand-skin28.png",
        HAND_SKIN29D: "img/day-hand-skin29.png",
        HAND_SKIN29N: "img/night-hand-skin29.png",
        HAND_SKIN30D: "img/day-hand-skin30.png",
        HAND_SKIN30N: "img/night-hand-skin30.png",
        HAND_SKIN31D: "img/day-hand-skin31.png",
        HAND_SKIN31N: "img/night-hand-skin31.png",
        HAND_SKIN32D: "img/day-hand-skin32.png",
        HAND_SKIN32N: "img/night-hand-skin32.png",
        HAND_SKIN33D: "img/day-hand-skin33.png",
        HAND_SKIN33N: "img/night-hand-skin33.png",
        HAND_SKIN34D: "img/day-hand-skin34.png",
        HAND_SKIN34N: "img/night-hand-skin34.png",
        HAND_SKIN35D: "img/day-hand-skin35.png",
        HAND_SKIN35N: "img/night-hand-skin35.png",
        HAND_SKIN36D: "img/day-hand-skin36.png",
        HAND_SKIN36N: "img/night-hand-skin36.png",
        HAND_SKIN37D: "img/day-hand-skin37.png",
        HAND_SKIN37N: "img/night-hand-skin37.png",
        HAND_SKIN38D: "img/day-hand-skin38.png",
        HAND_SKIN38N: "img/night-hand-skin38.png",
        HAND_SKIN39D: "img/day-hand-skin39.png",
        HAND_SKIN39N: "img/night-hand-skin39.png",
        HAND_SKIN40D: "img/day-hand-skin40.png",
        HAND_SKIN40N: "img/night-hand-skin40.png",
        HAND_SKIN41D: "img/day-hand-skin41.png",
        HAND_SKIN41N: "img/night-hand-skin41.png",
        HAND_SKIN42D: "img/day-hand-skin42.png",
        HAND_SKIN42N: "img/night-hand-skin42.png",
        HAND_SKIN43D: "img/day-hand-skin43.png",
        HAND_SKIN43N: "img/night-hand-skin43.png",
        HAND_SKIN44D: "img/day-hand-skin16.png",
        HAND_SKIN44N: "img/night-hand-skin16.png",
        HAND_SKIN45D: "img/day-hand-skin45.png",
        HAND_SKIN45N: "img/night-hand-skin45.png",
        HAND_SKIN46D: "img/day-hand-skin46.png",
        HAND_SKIN46N: "img/night-hand-skin46.png",
        HAND_SKIN47D: "img/day-hand-skin47.png",
        HAND_SKIN47N: "img/night-hand-skin47.png",
        HAND_SKIN48D: "img/day-hand-skin48.png",
        HAND_SKIN48N: "img/night-hand-skin48.png",
        HAND_SKIN49D: "img/day-hand-skin49.png",
        HAND_SKIN49N: "img/night-hand-skin49.png",
        HAND_SKIN50D: "img/day-hand-skin49.png",
        HAND_SKIN50N: "img/night-hand-skin49.png",
        HAND_SKIN51D: "img/day-hand-skin51.png",
        HAND_SKIN51N: "img/night-hand-skin51.png",
        HAND_SKIN52D: "img/day-hand-skin52.png",
        HAND_SKIN52N: "img/night-hand-skin52.png",
        HAND_SKIN53D: "img/day-hand-skin53.png",
        HAND_SKIN53N: "img/night-hand-skin53.png",
        HAND_SKIN54D: "img/day-hand-skin53.png",
        HAND_SKIN54N: "img/night-hand-skin53.png",
        HAND_SKIN55D: "img/day-hand-skin55.png",
        HAND_SKIN55N: "img/night-hand-skin55.png",
        HAND_SKIN56D: "img/day-hand-skin56.png",
        HAND_SKIN56N: "img/night-hand-skin56.png",
        HAND_SKIN57D: "img/day-hand-skin57.png",
        HAND_SKIN57N: "img/night-hand-skin57.png",
        HAND_SKIN58D: "img/day-hand-skin58.png",
        HAND_SKIN58N: "img/night-hand-skin58.png",
        HAND_SKIN59D: "img/day-hand-skin59.png",
        HAND_SKIN59N: "img/night-hand-skin59.png",
        HAND_SKIN60D: "img/day-hand-skin61.png",
        HAND_SKIN60N: "img/night-hand-skin61.png",
        HAND_SKIN61D: "img/day-hand-skin61.png",
        HAND_SKIN61N: "img/night-hand-skin61.png",
        HAND_SKIN62D: "img/day-hand-skin62.png",
        HAND_SKIN62N: "img/night-hand-skin62.png",
        HAND_SKIN63D: "img/day-hand-skin63.png",
        HAND_SKIN63N: "img/night-hand-skin63.png",
        HAND_SKIN64D: "img/day-hand-skin64.png",
        HAND_SKIN64N: "img/night-hand-skin64.png",
        HAND_SKIN65D: "img/day-hand-skin65.png",
        HAND_SKIN65N: "img/night-hand-skin65.png",
        HAND_SKIN66D: "img/day-hand-skin66.png",
        HAND_SKIN66N: "img/night-hand-skin66.png",
        HAND_SKIN67D: "img/day-hand-skin67.png",
        HAND_SKIN67N: "img/night-hand-skin67.png",
        HAND_SKIN68D: "img/day-hand-skin68.png",
        HAND_SKIN68N: "img/night-hand-skin68.png",
        HAND_SKIN69D: "img/day-hand-skin69.png",
        HAND_SKIN69N: "img/night-hand-skin69.png",
        HAND_SKIN70D: "img/day-hand-skin70.png",
        HAND_SKIN70N: "img/night-hand-skin70.png",
        HAND_SKIN71D: "img/day-hand-skin71.png",
        HAND_SKIN71N: "img/night-hand-skin71.png",
        HAND_SKIN72D: "img/day-hand-skin72.png",
        HAND_SKIN72N: "img/night-hand-skin72.png",
        HAND_SKIN73D: "img/day-hand-skin73.png",
        HAND_SKIN73N: "img/night-hand-skin73.png",
        HAND_SKIN74D: "img/day-hand-skin74.png",
        HAND_SKIN74N: "img/night-hand-skin74.png",
        HAND_SKIN75D: "img/day-hand-skin75.png",
        HAND_SKIN75N: "img/night-hand-skin75.png",
        HAND_SKIN76D: "img/day-hand-skin76.png",
        HAND_SKIN76N: "img/night-hand-skin76.png",
        HAND_SKIN77D: "img/day-hand-skin77.png",
        HAND_SKIN77N: "img/night-hand-skin77.png",
        HAND_SKIN78D: "img/day-hand-skin78.png",
        HAND_SKIN78N: "img/night-hand-skin78.png",
        HAND_SKIN79D: "img/day-hand-skin79.png",
        HAND_SKIN79N: "img/night-hand-skin79.png",
        HAND_SKIN80D: "img/day-hand-skin80.png",
        HAND_SKIN80N: "img/night-hand-skin80.png",
        HAND_SKIN81D: "img/day-hand-skin81.png",
        HAND_SKIN81N: "img/night-hand-skin81.png",
        HAND_SKIN82D: "img/day-hand-skin82.png",
        HAND_SKIN82N: "img/night-hand-skin82.png",
        HAND_SKIN83D: "img/day-hand-skin83.png",
        HAND_SKIN83N: "img/night-hand-skin83.png",
        HAND_SKIN84D: "img/day-hand-skin84.png",
        HAND_SKIN84N: "img/night-hand-skin84.png",
        HAND_SKIN85D: "img/day-hand-skin85.png",
        HAND_SKIN85N: "img/night-hand-skin85.png",
        HAND_SKIN86D: "img/day-hand-skin86.png",
        HAND_SKIN86N: "img/night-hand-skin86.png",
        HAND_SKIN87D: "img/day-hand-skin87.png",
        HAND_SKIN87N: "img/night-hand-skin87.png",
        HAND_SKIN88D: "img/day-hand-skin88.png",
        HAND_SKIN88N: "img/night-hand-skin88.png",
        HAND_SKIN89D: "img/day-hand-skin89.png",
        HAND_SKIN89N: "img/night-hand-skin89.png",
        HAND_SKIN90D: "img/day-hand-skin90.png",
        HAND_SKIN90N: "img/night-hand-skin90.png",
        HAND_SKIN91D: "img/day-hand-skin91.png",
        HAND_SKIN91N: "img/night-hand-skin91.png",
        HAND_SKIN92D: "img/day-hand-skin92.png",
        HAND_SKIN92N: "img/night-hand-skin92.png",
        HAND_SKIN93D: "img/day-hand-skin93.png",
        HAND_SKIN93N: "img/night-hand-skin93.png",
        HAND_SKIN94D: "img/day-hand-skin94.png",
        HAND_SKIN94N: "img/night-hand-skin94.png",
        HAND_SKIN95D: "img/day-hand-skin95.png",
        HAND_SKIN95N: "img/night-hand-skin95.png",
        HAND_SKIN96D: "img/day-hand-skin96.png",
        HAND_SKIN96N: "img/night-hand-skin96.png",
        HAND_SKIN97D: "img/day-hand-skin97.png",
        HAND_SKIN97N: "img/night-hand-skin97.png",
        HAND_SKIN98D: "img/day-hand-skin98.png",
        HAND_SKIN98N: "img/night-hand-skin98.png",
        HAND_SKIN99D: "img/day-hand-skin99.png",
        HAND_SKIN99N: "img/night-hand-skin99.png",
        HAND_SKIN100D: "img/day-hand-skin100.png",
        HAND_SKIN100N: "img/night-hand-skin100.png",
        HAND_SKIN101D: "img/day-hand-skin101.png",
        HAND_SKIN101N: "img/night-hand-skin101.png",
        HAND_SKIN102D: "img/day-hand-skin102.png",
        HAND_SKIN102N: "img/night-hand-skin102.png",
        HAND_SKIN103D: "img/day-hand-skin103.png",
        HAND_SKIN103N: "img/night-hand-skin103.png",
        HAND_SKIN104D: "img/day-hand-skin104.png",
        HAND_SKIN104N: "img/night-hand-skin104.png",
        HAND_SKIN105D: "img/day-hand-skin105.png",
        HAND_SKIN105N: "img/night-hand-skin105.png",
        HAND_SKIN106D: "img/day-hand-skin106.png",
        HAND_SKIN106N: "img/night-hand-skin106.png",
        HAND_SKIN107D: "img/day-hand-skin107.png",
        HAND_SKIN107N: "img/night-hand-skin107.png",
        HAND_SKIN108D: "img/day-hand-skin108.png",
        HAND_SKIN108N: "img/night-hand-skin108.png",
        HAND_SKIN109D: "img/day-hand-skin109.png",
        HAND_SKIN109N: "img/night-hand-skin109.png",
        HAND_SKIN110D: "img/day-hand-skin110.png",
        HAND_SKIN110N: "img/night-hand-skin110.png",
        HAND_SKIN111D: "img/day-hand-skin111.png",
        HAND_SKIN111N: "img/night-hand-skin111.png",
        HAND_SKIN112D: "img/day-hand-skin112.png",
        HAND_SKIN112N: "img/night-hand-skin112.png",
        HAND_SKIN113D: "img/day-hand-skin113.png",
        HAND_SKIN113N: "img/night-hand-skin113.png",
        HAND_SKIN114D: "img/day-hand-skin114.png",
        HAND_SKIN114N: "img/night-hand-skin114.png",
        HAND_SKIN115D: "img/day-hand-skin115.png",
        HAND_SKIN115N: "img/night-hand-skin115.png",
        HAND_SKIN116D: "img/day-hand-skin116.png",
        HAND_SKIN116N: "img/night-hand-skin116.png",
        HAND_SKIN117D: "img/day-hand-skin117.png",
        HAND_SKIN117N: "img/night-hand-skin117.png",
        HAND_SKIN118D: "img/day-hand-skin118.png",
        HAND_SKIN118N: "img/night-hand-skin118.png",
        HAND_SKIN119D: "img/day-hand-skin119.png",
        HAND_SKIN119N: "img/night-hand-skin119.png",
        HAND_SKIN120D: "img/day-hand-skin120.png",
        HAND_SKIN120N: "img/night-hand-skin120.png",
        HAND_SKIN121D: "img/day-hand-skin122.png",
        HAND_SKIN121N: "img/night-hand-skin122.png",
        HAND_SKIN122D: "img/day-hand-skin122.png",
        HAND_SKIN122N: "img/night-hand-skin122.png",
        HAND_SKIN123D: "img/day-hand-skin122.png",
        HAND_SKIN123N: "img/night-hand-skin122.png",
        HAND_SKIN124D: "img/day-hand-skin124.png",
        HAND_SKIN124N: "img/night-hand-skin124.png",
        HAND_SKIN125D: "img/day-hand-skin125.png",
        HAND_SKIN125N: "img/night-hand-skin125.png",
        HAND_SKIN126D: "img/day-hand-skin126.png",
        HAND_SKIN126N: "img/night-hand-skin126.png",
        HAND_SKIN127D: "img/day-hand-skin127.png",
        HAND_SKIN127N: "img/night-hand-skin127.png",
        HAND_SKIN128D: "img/day-hand-skin128.png",
        HAND_SKIN128N: "img/night-hand-skin128.png",
        HAND_SKIN129D: "img/day-hand-skin129.png",
        HAND_SKIN129N: "img/night-hand-skin129.png",
        HAND_SKIN130D: "img/day-hand-skin130.png",
        HAND_SKIN130N: "img/night-hand-skin130.png",
        HAND_SKIN131D: "img/day-hand-skin131.png",
        HAND_SKIN131N: "img/night-hand-skin131.png",
        HAND_SKIN132D: "img/day-hand-skin130.png",
        HAND_SKIN132N: "img/night-hand-skin130.png",
        HAND_SKIN133D: "img/day-hand-skin133.png",
        HAND_SKIN133N: "img/night-hand-skin133.png",
        HAND_SKIN134D: "img/day-hand-skin134.png",
        HAND_SKIN134N: "img/night-hand-skin134.png",
        HAND_SKIN135D: "img/day-hand-skin135.png",
        HAND_SKIN135N: "img/night-hand-skin135.png",
        HAND_SKIN136D: "img/day-hand-skin136.png",
        HAND_SKIN136N: "img/night-hand-skin136.png",
        HAND_SKIN137D: "img/day-hand-skin137.png",
        HAND_SKIN137N: "img/night-hand-skin137.png",
        HAND_SKIN138D: "img/day-hand-skin138.png",
        HAND_SKIN138N: "img/night-hand-skin138.png",
        HAND_SKIN139D: "img/day-hand-skin139.png",
        HAND_SKIN139N: "img/night-hand-skin139.png",
        HAND_SKIN140D: "img/day-hand-skin140.png",
        HAND_SKIN140N: "img/night-hand-skin140.png",
        HAND_SKIN141D: "img/day-hand-skin141.png",
        HAND_SKIN141N: "img/night-hand-skin141.png",
        HAND_SKIN142D: "img/day-hand-skin142.png",
        HAND_SKIN142N: "img/night-hand-skin142.png",
        HAND_SKIN143D: "img/day-hand-skin143.png",
        HAND_SKIN143N: "img/night-hand-skin143.png",
        HAND_SKIN144D: "img/day-hand-skin144.png",
        HAND_SKIN144N: "img/night-hand-skin144.png",
        HAND_SKIN145D: "img/day-hand-skin145.png",
        HAND_SKIN145N: "img/night-hand-skin145.png",
        HAND_SKIN146D: "img/day-hand-skin146.png",
        HAND_SKIN146N: "img/night-hand-skin146.png",
        HAND_SKIN147D: "img/day-hand-skin147.png",
        HAND_SKIN147N: "img/night-hand-skin147.png",
        HAND_SKIN148D: "img/day-hand-skin148.png",
        HAND_SKIN148N: "img/night-hand-skin148.png",
        HAND_SKIN149D: "img/day-hand-skin149.png",
        HAND_SKIN149N: "img/night-hand-skin149.png",
        HAND_SKIN150D: "img/day-hand-skin150.png",
        HAND_SKIN150N: "img/night-hand-skin150.png",
        BAG_STARD: "img/day-bag-star0.png",
        BAG_STARN: "img/night-bag-star0.png",
        BAG0D: "img/day-bag0.png",
        BAG0N: "img/night-bag0.png",
        BAG1D: "img/day-bag1.png",
        BAG1N: "img/night-bag1.png",
        BAG2D: "img/day-bag2.png",
        BAG2N: "img/night-bag2.png",
        BAG3D: "img/day-bag3.png",
        BAG3N: "img/night-bag3.png",
        BAG4D: "img/day-bag4.png",
        BAG4N: "img/night-bag4.png",
        BAG5D: "img/day-bag5.png",
        BAG5N: "img/night-bag5.png",
        BAG6D: "img/day-bag6.png",
        BAG6N: "img/night-bag6.png",
        BAG7D: "img/day-bag7.png",
        BAG7N: "img/night-bag7.png",
        BAG8D: "img/day-bag8.png",
        BAG8N: "img/night-bag8.png",
        BAG9D: "img/day-bag9.png",
        BAG9N: "img/night-bag9.png",
        BAG10D: "img/day-bag10.png",
        BAG10N: "img/night-bag10.png",
        BAG11D: "img/day-bag11.png",
        BAG11N: "img/night-bag11.png",
        BAG13D: "img/day-bag13.png",
        BAG13N: "img/night-bag13.png",
        BAG14D: "img/day-bag14.png",
        BAG14N: "img/night-bag14.png",
        BAG16D: "img/day-bag16.png",
        BAG16N: "img/night-bag16.png",
        BAG17D: "img/day-bag17.png",
        BAG17N: "img/night-bag17.png",
        BAG18D: "img/day-bag18.png",
        BAG18N: "img/night-bag18.png",
        BAG19D: "img/day-bag19.png",
        BAG19N: "img/night-bag19.png",
        BAG20D: "img/day-bag20.png",
        BAG20N: "img/night-bag20.png",
        BAG21D: "img/day-bag21.png",
        BAG21N: "img/night-bag21.png",
        BAG22D: "img/day-bag22.png",
        BAG22N: "img/night-bag22.png",
        BAG23D: "img/day-bag23.png",
        BAG23N: "img/night-bag23.png",
        BAG24D: "img/day-bag24.png",
        BAG24N: "img/night-bag24.png",
        BAG25D: "img/day-bag25.png",
        BAG25N: "img/night-bag25.png",
        BAG26D: "img/day-bag26.png",
        BAG26N: "img/night-bag26.png",
        BAG27D: "img/day-bag27.png",
        BAG27N: "img/night-bag27.png",
        BAG28D: "img/day-bag28.png",
        BAG28N: "img/night-bag28.png",
        BAG29D: "img/day-bag29.png",
        BAG29N: "img/night-bag29.png",
        BAG30D: "img/day-bag30.png",
        BAG30N: "img/night-bag30.png",
        BAG31D: "img/day-bag31.png",
        BAG31N: "img/night-bag31.png",
        BAG32D: "img/day-bag32.png",
        BAG32N: "img/night-bag32.png",
        BAG33D: "img/day-bag33.png",
        BAG33N: "img/night-bag33.png",
        BAG34D: "img/day-bag34.png",
        BAG34N: "img/night-bag34.png",
        BAG35D: "img/day-bag35.png",
        BAG35N: "img/night-bag35.png",
        BAG36D: "img/day-bag36.png",
        BAG36N: "img/night-bag36.png",
        BAG37D: "img/day-bag37.png",
        BAG37N: "img/night-bag37.png",
        BAG38D: "img/day-bag38.png",
        BAG38N: "img/night-bag38.png",
        BAG39D: "img/day-bag39.png",
        BAG39N: "img/night-bag39.png",
        BAG40D: "img/day-bag40.png",
        BAG40N: "img/night-bag40.png",
        BAG41D: "img/day-bag41.png",
        BAG41N: "img/night-bag41.png",
        BAG42D: "img/day-bag42.png",
        BAG42N: "img/night-bag42.png",
        BAG43D: "img/day-bag43.png",
        BAG43N: "img/night-bag43.png",
        BAG44D: "img/day-bag44.png",
        BAG44N: "img/night-bag44.png",
        BAG45D: "img/day-bag45.png",
        BAG45N: "img/night-bag45.png",
        BAG46D: "img/day-bag46.png",
        BAG46N: "img/night-bag46.png",
        BAG47D: "img/day-bag47.png",
        BAG47N: "img/night-bag47.png",
        BAG48D: "img/day-bag48.png",
        BAG48N: "img/night-bag48.png",
        BAG49D: "img/day-bag49.png",
        BAG49N: "img/night-bag49.png",
        BAG50D: "img/day-bag50.png",
        BAG50N: "img/night-bag50.png",
        BAG51D: "img/day-bag51.png",
        BAG51N: "img/night-bag51.png",
        BAG52D: "img/day-bag52.png",
        BAG52N: "img/night-bag52.png",
        BAG53D: "img/day-bag53.png",
        BAG53N: "img/night-bag53.png",
        BAG54D: "img/day-bag54.png",
        BAG54N: "img/night-bag54.png",
        BAG55D: "img/day-bag55.png",
        BAG55N: "img/night-bag55.png",
        BAG56D: "img/day-bag56.png",
        BAG56N: "img/night-bag56.png",
        BAG57D: "img/day-bag57.png",
        BAG57N: "img/night-bag57.png",
        BAG58D: "img/day-bag58.png",
        BAG58N: "img/night-bag58.png",
        BAG59D: "img/day-bag59.png",
        BAG59N: "img/night-bag59.png",
        BAG60D: "img/day-bag60.png",
        BAG60N: "img/night-bag60.png",
        BAG61D: "img/day-bag61.png",
        BAG61N: "img/night-bag61.png",
        BAG62D: "img/day-bag62.png",
        BAG62N: "img/night-bag62.png",
        BAG63D: "img/day-bag63.png",
        BAG63N: "img/night-bag63.png",
        BAG64D: "img/day-bag64.png",
        BAG64N: "img/night-bag64.png",
        BAG65D: "img/day-bag65.png",
        BAG65N: "img/night-bag65.png",
        BAG66D: "img/day-bag66.png",
        BAG66N: "img/night-bag66.png",
        BAG67D: "img/day-bag67.png",
        BAG67N: "img/night-bag67.png",
        BAG68D: "img/day-bag68.png",
        BAG68N: "img/night-bag68.png",
        ACCESSORY0D: "img/day-accessory0.png",
        ACCESSORY17D: "img/day-accessory0-pacques.png",
        ACCESSORY17N: "img/night-accessory0-pacques.png",
        ACCESSORY13D: "img/day-accessory13.png",
        ACCESSORY13N: "img/night-accessory13.png",
        ACCESSORY14D: "img/day-accessory14.png",
        ACCESSORY14N: "img/night-accessory14.png",
        ACCESSORY15D: "img/day-accessory15.png",
        ACCESSORY15N: "img/night-accessory15.png",
        ACCESSORY16D: "img/day-accessory16.png",
        ACCESSORY16N: "img/night-accessory16.png",
        ACCESSORY18D: "img/day-accessory17.png",
        ACCESSORY18N: "img/day-accessory17.png",
        ACCESSORY19D: "img/day-accessory19.png",
        ACCESSORY19N: "img/night-accessory19.png",
        ACCESSORY20D: "img/day-accessory20.png",
        ACCESSORY20N: "img/night-accessory20.png",
        ACCESSORY21D: "img/day-accessory21.png",
        ACCESSORY21N: "img/night-accessory21.png",
        ACCESSORY22D: "img/day-accessory22.png",
        ACCESSORY22N: "img/night-accessory22.png",
        ACCESSORY23D: "img/day-accessory23.png",
        ACCESSORY23N: "img/night-accessory23.png",
        ACCESSORY24D: "img/day-accessory24.png",
        ACCESSORY24N: "img/night-accessory24.png",
        ACCESSORY25D: "img/day-accessory25.png",
        ACCESSORY25N: "img/night-accessory25.png",
        ACCESSORY26D: "img/day-accessory26.png",
        ACCESSORY26N: "img/night-accessory26.png",
        ACCESSORY27D: "img/day-accessory27.png",
        ACCESSORY27N: "img/night-accessory27.png",
        ACCESSORY28D: "img/day-accessory18.png",
        ACCESSORY28N: "img/night-accessory18.png",
        ACCESSORY29D: "img/day-accessory29.png",
        ACCESSORY29N: "img/night-accessory29.png",
        ACCESSORY30D: "img/day-accessory30.png",
        ACCESSORY30N: "img/night-accessory30.png",
        ACCESSORY31D: "img/day-accessory31.png",
        ACCESSORY31N: "img/night-accessory31.png",
        ACCESSORY32D: "img/day-accessory32.png",
        ACCESSORY32N: "img/night-accessory32.png",
        ACCESSORY33D: "img/day-accessory33.png",
        ACCESSORY33N: "img/night-accessory33.png",
        ACCESSORY34D: "img/day-accessory34.png",
        ACCESSORY34N: "img/night-accessory34.png",
        ACCESSORY35D: "img/day-accessory35.png",
        ACCESSORY35N: "img/night-accessory35.png",
        ACCESSORY36D: "img/day-accessory28.png",
        ACCESSORY36N: "img/night-accessory28.png",
        ACCESSORY37D: "img/day-accessory36.png",
        ACCESSORY37N: "img/night-accessory36.png",
        ACCESSORY38D: "img/day-accessory37.png",
        ACCESSORY38N: "img/night-accessory37.png",
        ACCESSORY39D: "img/day-accessory39.png",
        ACCESSORY39N: "img/night-accessory39.png",
        ACCESSORY40D: "img/day-accessory40.png",
        ACCESSORY40N: "img/night-accessory40.png",
        ACCESSORY41D: "img/day-accessory41.png",
        ACCESSORY41N: "img/night-accessory41.png",
        ACCESSORY42D: "img/day-accessory42.png",
        ACCESSORY42N: "img/night-accessory42.png",
        ACCESSORY43D: "img/day-accessory43.png",
        ACCESSORY43N: "img/night-accessory43.png",
        ACCESSORY44D: "img/day-accessory44.png",
        ACCESSORY44N: "img/night-accessory44.png",
        ACCESSORY45D: "img/day-accessory38.png",
        ACCESSORY45N: "img/night-accessory38.png",
        ACCESSORY46D: "img/day-accessory46.png",
        ACCESSORY46N: "img/night-accessory46.png",
        ACCESSORY47D: "img/day-accessory47.png",
        ACCESSORY47N: "img/night-accessory47.png",
        ACCESSORY48D: "img/day-accessory48.png",
        ACCESSORY48N: "img/night-accessory48.png",
        ACCESSORY49D: "img/day-accessory49.png",
        ACCESSORY49N: "img/night-accessory49.png",
        ACCESSORY50D: "img/day-accessory45.png",
        ACCESSORY50N: "img/night-accessory45.png",
        ACCESSORY51D: "img/day-accessory50.png",
        ACCESSORY51N: "img/night-accessory50.png",
        ACCESSORY52D: "img/day-accessory51.png",
        ACCESSORY52N: "img/night-accessory51.png",
        ACCESSORY53D: "img/day-accessory52.png",
        ACCESSORY53N: "img/night-accessory52.png",
        ACCESSORY54D: "img/day-accessory53.png",
        ACCESSORY54N: "img/night-accessory53.png",
        ACCESSORY55D: "img/day-accessory54.png",
        ACCESSORY55N: "img/night-accessory54.png",
        ACCESSORY56D: "img/day-accessory55.png",
        ACCESSORY56N: "img/night-accessory55.png",
        ACCESSORY57D: "img/day-accessory56.png",
        ACCESSORY57N: "img/night-accessory56.png",
        ACCESSORY58D: "img/day-accessory57.png",
        ACCESSORY58N: "img/night-accessory57.png",
        ACCESSORY59D: "img/day-accessory58.png",
        ACCESSORY59N: "img/night-accessory58.png",
        ACCESSORY60D: "img/day-accessory59.png",
        ACCESSORY60N: "img/night-accessory59.png",
        ACCESSORY61D: "img/day-accessory60.png",
        ACCESSORY61N: "img/night-accessory60.png",
        ACCESSORY62D: "img/day-accessory61.png",
        ACCESSORY62N: "img/night-accessory61.png",
        ACCESSORY63D: "img/day-accessory62.png",
        ACCESSORY63N: "img/night-accessory62.png",
        ACCESSORY64D: "img/day-accessory63.png",
        ACCESSORY64N: "img/night-accessory63.png",
        ACCESSORY65D: "img/day-accessory64.png",
        ACCESSORY65N: "img/night-accessory64.png",
        ACCESSORY66D: "img/day-accessory65.png",
        ACCESSORY66N: "img/night-accessory65.png",
        ACCESSORY67D: "img/day-accessory66.png",
        ACCESSORY67N: "img/night-accessory66.png",
        ACCESSORY68D: "img/day-accessory67.png",
        ACCESSORY68N: "img/night-accessory67.png",
        ACCESSORY69D: "img/day-accessory68.png",
        ACCESSORY69N: "img/night-accessory68.png",
        ACCESSORY70D: "img/day-accessory69.png",
        ACCESSORY70N: "img/night-accessory69.png",
        ACCESSORY71D: "img/day-accessory70.png",
        ACCESSORY71N: "img/night-accessory70.png",
        ACCESSORY72D: "img/day-accessory71.png",
        ACCESSORY72N: "img/night-accessory71.png",
        ACCESSORY73D: "img/day-accessory72.png",
        ACCESSORY73N: "img/night-accessory72.png",
        ACCESSORY74D: "img/day-accessory73.png",
        ACCESSORY74N: "img/night-accessory73.png",
        ACCESSORY75D: "img/day-accessory74.png",
        ACCESSORY75N: "img/night-accessory74.png",
        ACCESSORY76D: "img/day-accessory75.png",
        ACCESSORY76N: "img/night-accessory75.png",
        ACCESSORY77D: "img/day-accessory76.png",
        ACCESSORY77N: "img/night-accessory76.png",
        ACCESSORY78D: "img/day-accessory77.png",
        ACCESSORY78N: "img/night-accessory77.png",
        ACCESSORY79D: "img/day-accessory78.png",
        ACCESSORY79N: "img/night-accessory78.png",
        ACCESSORY80D: "img/day-accessory79.png",
        ACCESSORY80N: "img/night-accessory79.png",
        ACCESSORY81D: "img/day-accessory80.png",
        ACCESSORY81N: "img/night-accessory80.png",
        ACCESSORY82D: "img/day-accessory81.png",
        ACCESSORY82N: "img/night-accessory81.png",
        BOOK0D: "img/day-book0.png",
        BOOK0N: "img/night-book0.png",
        BOOK1D: "img/day-book1.png",
        BOOK1N: "img/night-book1.png",
        BOOK2D: "img/day-book2.png",
        BOOK2N: "img/night-book2.png",
        BOOK3D: "img/day-book3.png",
        BOOK3N: "img/night-book3.png",
        BOOK4D: "img/day-book4.png",
        BOOK4N: "img/night-book4.png",
        BOOK5D: "img/day-book5.png",
        BOOK5N: "img/night-book5.png",
        BOOK6D: "img/day-book6.png",
        BOOK6N: "img/night-book6.png",
        BOOK7D: "img/day-book7.png",
        BOOK7N: "img/night-book7.png",
        BOOK8D: "img/day-book8.png",
        BOOK8N: "img/night-book8.png",
        BOOK9D: "img/day-book9.png",
        BOOK9N: "img/night-book9.png",
        BOOK10D: "img/day-book10.png",
        BOOK10N: "img/night-book10.png",
        BOOK11D: "img/day-book11.png",
        BOOK11N: "img/night-book11.png",
        BOOK12D: "img/day-book12.png",
        BOOK12N: "img/night-book12.png",
        BOOK13D: "img/day-book13.png",
        BOOK13N: "img/night-book13.png",
        BOOK14D: "img/day-book14.png",
        BOOK14N: "img/night-book14.png",
        BOOK15D: "img/day-book15.png",
        BOOK15N: "img/night-book15.png",
        BOOK16D: "img/day-book16.png",
        BOOK16N: "img/night-book16.png",
        BOOK17D: "img/day-book17.png",
        BOOK17N: "img/night-book17.png",
        BOOK18D: "img/day-book18.png",
        BOOK18N: "img/night-book18.png",
        BOOK19D: "img/day-book19.png",
        BOOK19N: "img/night-book19.png",
        BOOK20D: "img/day-book20.png",
        BOOK20N: "img/night-book20.png",
        BOOK21D: "img/day-book21.png",
        BOOK21N: "img/night-book21.png",
        BOOK22D: "img/day-book22.png",
        BOOK22N: "img/night-book22.png",
        BOOK23D: "img/day-book23.png",
        BOOK23N: "img/night-book23.png",
        BOOK24D: "img/day-book24.png",
        BOOK24N: "img/night-book24.png",
        BOOK25D: "img/day-book25.png",
        BOOK25N: "img/night-book25.png",
        BOOK26D: "img/day-book26.png",
        BOOK26N: "img/night-book26.png",
        BOOK27D: "img/day-book27.png",
        BOOK27N: "img/night-book27.png",
        BOOK28D: "img/day-book28.png",
        BOOK28N: "img/night-book28.png",
        BOOK29D: "img/day-book29.png",
        BOOK29N: "img/night-book29.png",
        BOOK30D: "img/day-book30.png",
        BOOK30N: "img/night-book30.png",
        BOOK31D: "img/day-book31.png",
        BOOK31N: "img/night-book31.png",
        BOOK32D: "img/day-book32.png",
        BOOK32N: "img/night-book32.png",
        BOOK33D: "img/day-book33.png",
        BOOK33N: "img/night-book33.png",
        BOOK34D: "img/day-book34.png",
        BOOK34N: "img/night-book34.png",
        BOOK35D: "img/day-book35.png",
        BOOK35N: "img/night-book35.png",
        BOOK36D: "img/day-book36.png",
        BOOK36N: "img/night-book36.png",
        BOOK37D: "img/day-book37.png",
        BOOK37N: "img/night-book37.png",
        BOOK38D: "img/day-book38.png",
        BOOK38N: "img/night-book38.png",
        BOOK39D: "img/day-book39.png",
        BOOK39N: "img/night-book39.png",
        BOOK40D: "img/day-book40.png",
        BOOK40N: "img/night-book40.png",
        BOOK41D: "img/day-book41.png",
        BOOK41N: "img/night-book41.png",
        BOOK42D: "img/day-book42.png",
        BOOK42N: "img/night-book42.png",
        BOOK43D: "img/day-book43.png",
        BOOK43N: "img/night-book43.png",
        BOOK44D: "img/day-book44.png",
        BOOK44N: "img/night-book44.png",
        BOOK45D: "img/day-book45.png",
        BOOK45N: "img/night-book45.png",
        CRATE1D: "img/day-crate1.png",
        CRATE1N: "img/night-crate1.png",
        CRATE2D: "img/day-crate2.png",
        CRATE2N: "img/night-crate2.png",
        CRATE3D: "img/day-crate3.png",
        CRATE3N: "img/night-crate3.png",
        CRATE4D: "img/day-crate4.png",
        CRATE4N: "img/night-crate4.png",
        CRATE5D: "img/day-crate5.png",
        CRATE5N: "img/night-crate5.png",
        CRATE6D: "img/day-crate6.png",
        CRATE6N: "img/night-crate6.png",
        CRATE7D: "img/day-crate7.png",
        CRATE7N: "img/night-crate7.png",
        CRATE8D: "img/day-crate8.png",
        CRATE8N: "img/night-crate8.png",
        CRATE9D: "img/day-crate9.png",
        CRATE9N: "img/night-crate9.png",
        CRATE10D: "img/day-crate10.png",
        CRATE10N: "img/night-crate10.png",
        CRATE11D: "img/day-crate11.png",
        CRATE11N: "img/night-crate11.png",
        CRATE12D: "img/day-crate12.png",
        CRATE12N: "img/night-crate12.png",
        CRATE13D: "img/day-crate13.png",
        CRATE13N: "img/night-crate13.png",
        CRATE14D: "img/day-crate14.png",
        CRATE14N: "img/night-crate14.png",
        CRATE15D: "img/day-crate15.png",
        CRATE15N: "img/night-crate15.png",
        CRATE16D: "img/day-crate16.png",
        CRATE16N: "img/night-crate16.png",
        CRATE17D: "img/day-crate17.png",
        CRATE17N: "img/night-crate17.png",
        CRATE18D: "img/day-crate18.png",
        CRATE18N: "img/night-crate18.png",
        CRATE19D: "img/day-crate19.png",
        CRATE19N: "img/night-crate19.png",
        CRATE20D: "img/day-crate20.png",
        CRATE20N: "img/night-crate20.png",
        CRATE21D: "img/day-crate21.png",
        CRATE21N: "img/night-crate21.png",
        CRATE22D: "img/day-crate22.png",
        CRATE22N: "img/night-crate22.png",
        CRATE23D: "img/day-crate23.png",
        CRATE23N: "img/night-crate23.png",
        CRATE24D: "img/day-crate24.png",
        CRATE24N: "img/night-crate24.png",
        CRATE25D: "img/day-crate25.png",
        CRATE25N: "img/night-crate25.png",
        CRATE26D: "img/day-crate26.png",
        CRATE26N: "img/night-crate26.png",
        CRATE27D: "img/day-crate27.png",
        CRATE27N: "img/night-crate27.png",
        CRATE28D: "img/day-crate28.png",
        CRATE28N: "img/night-crate28.png",
        CRATE29D: "img/day-crate29.png",
        CRATE29N: "img/night-crate29.png",
        CRATE30D: "img/day-crate30.png",
        CRATE30N: "img/night-crate30.png",
        CRATE31D: "img/day-crate31.png",
        CRATE31N: "img/night-crate31.png",
        CRATE32D: "img/day-crate32.png",
        CRATE32N: "img/night-crate32.png",
        CRATE33D: "img/day-crate33.png",
        CRATE33N: "img/night-crate33.png",
        CRATE34D: "img/day-crate34.png",
        CRATE34N: "img/night-crate34.png",
        CRATE35D: "img/day-crate35.png",
        CRATE35N: "img/night-crate35.png",
        CRATE36D: "img/day-crate36.png",
        CRATE36N: "img/night-crate36.png",
        CRATE37D: "img/day-crate37.png",
        CRATE37N: "img/night-crate37.png",
        CRATE38D: "img/day-crate38.png",
        CRATE38N: "img/night-crate38.png",
        CRATE39D: "img/day-crate39.png",
        CRATE39N: "img/night-crate39.png",
        CRATE40D: "img/day-crate40.png",
        CRATE40N: "img/night-crate40.png",
        CRATE41D: "img/day-crate41.png",
        CRATE41N: "img/night-crate41.png",
        CRATE42D: "img/day-crate42.png",
        CRATE42N: "img/night-crate42.png",
        CRATE43D: "img/day-crate43.png",
        CRATE43N: "img/night-crate43.png",
        CRATE44D: "img/day-crate44.png",
        CRATE44N: "img/night-crate44.png",
        CRATE45D: "img/day-crate45.png",
        CRATE45N: "img/night-crate45.png",
        CRATE46D: "img/day-crate46.png",
        CRATE46N: "img/night-crate46.png",
        CRATE47D: "img/day-crate47.png",
        CRATE47N: "img/night-crate47.png",
        CRATE48D: "img/day-crate48.png",
        CRATE48N: "img/night-crate48.png",
        CRATE49D: "img/day-crate49.png",
        CRATE49N: "img/night-crate49.png",
        CRATE50D: "img/day-crate50.png",
        CRATE50N: "img/night-crate50.png",
        CRATE51D: "img/day-crate51.png",
        CRATE51N: "img/night-crate51.png",
        CRATE52D: "img/day-crate52.png",
        CRATE52N: "img/night-crate52.png",
        CRATE53D: "img/day-crate53.png",
        CRATE53N: "img/night-crate53.png",
        CRATE54D: "img/day-crate54.png",
        CRATE54N: "img/night-crate54.png",
        CRATE55D: "img/day-crate55.png",
        CRATE55N: "img/night-crate55.png",
        CRATE56D: "img/day-crate56.png",
        CRATE56N: "img/night-crate56.png",
        CRATE57D: "img/day-crate57.png",
        CRATE57N: "img/night-crate57.png",
        CRATE58D: "img/day-crate58.png",
        CRATE58N: "img/night-crate58.png",
        CRATE59D: "img/day-crate59.png",
        CRATE59N: "img/night-crate59.png",
        CRATE60D: "img/day-crate60.png",
        CRATE60N: "img/night-crate60.png",
        CRATE61D: "img/day-crate61.png",
        CRATE61N: "img/night-crate61.png",
        CRATE62D: "img/day-crate62.png",
        CRATE62N: "img/night-crate62.png",
        CRATE63D: "img/day-crate63.png",
        CRATE63N: "img/night-crate63.png",
        CRATE64D: "img/day-crate64.png",
        CRATE64N: "img/night-crate64.png",
        CRATE65D: "img/day-crate65.png",
        CRATE65N: "img/night-crate65.png",
        CRATE66D: "img/day-crate66.png",
        CRATE66N: "img/night-crate66.png",
        CRATE67D: "img/day-crate67.png",
        CRATE67N: "img/night-crate67.png",
        CRATE68D: "img/day-crate68.png",
        CRATE68N: "img/night-crate68.png",
        CRATE69D: "img/day-crate69.png",
        CRATE69N: "img/night-crate69.png",
        CRATE70D: "img/day-crate70.png",
        CRATE70N: "img/night-crate70.png",
        CRATE71D: "img/day-crate71.png",
        CRATE71N: "img/night-crate71.png",
        CRATE72D: "img/day-crate72.png",
        CRATE72N: "img/night-crate72.png",
        DECORATION_0D: "img/day-herb0.png",
        DECORATION_1D: "img/day-herb1.png",
        DECORATION_2D: "img/day-herb2.png",
        DECORATION_3D: "img/day-herb3.png",
        DECORATION_4D: "img/day-herb4.png",
        DECORATION_5D: "img/day-herb5.png",
        DECORATION_6D: "img/day-herb6.png",
        DECORATION_7D: "img/day-herb7.png",
        DECORATION_8D: "img/day-herb8.png",
        DECORATION_9D: "img/day-herb9.png",
        DECORATION_10D: "img/day-herb10.png",
        DECORATION_11D: "img/day-herb11.png",
        DECORATION_12D: "img/day-herb12.png",
        DECORATION_13D: "img/day-herb13.png",
        DECORATION_14D: "img/day-herb14.png",
        DECORATION_15D: "img/day-herb15.png",
        DECORATION_16D: "img/day-shell0.png",
        DECORATION_17D: "img/day-shell1.png",
        DECORATION_18D: "img/day-shell2.png",
        DECORATION_19D: "img/day-leaf1.png",
        DECORATION_20D: "img/day-leaf2.png",
        DECORATION_21D: "img/day-leaf3.png",
        DECORATION_22D: "img/day-leaf4.png",
        DECORATION_23D: "img/day-leaf5.png",
        DECORATION_24D: "img/day-leaf6.png",
        DECORATION_25D: "img/day-leaf7.png",
        DECORATION_26D: "img/day-leaf8.png",
        DECORATION_27D: "img/day-rock0.png",
        DECORATION_28D: "img/day-rock1.png",
        DECORATION_29D: "img/day-rock2.png",
        DECORATION_30D: "img/day-rock3.png",
        DECORATION_31D: "img/day-rock4.png",
        DECORATION_32D: "img/day-rock5.png",
        DECORATION_33D: "img/day-rock6.png",
        DECORATION_34D: "img/day-rock7.png",
        DECORATION_35D: "img/day-rock8.png",
        DECORATION_36D: "img/day-rock9.png",
        DECORATION_37D: "img/day-rock10.png",
        DECORATION_38D: "img/day-rock11.png",
        DECORATION_39D: "img/day-rock12.png",
        DECORATION_40D: "img/day-rock13.png",
        DECORATION_41D: "img/day-flower1.png",
        DECORATION_42D: "img/day-flower2.png",
        DECORATION_43D: "img/day-flower3.png",
        DECORATION_44D: "img/day-flower4.png",
        DECORATION_45D: "img/day-flower5.png",
        DECORATION_46D: "img/day-flower6.png",
        DECORATION_47D: "img/day-flower7.png",
        DECORATION_48D: "img/day-flower8.png",
        DECORATION_49D: "img/day-flower9.png",
        DECORATION_50D: "img/day-herb16.png",
        DECORATION_51D: "img/day-herb17.png",
        DECORATION_52D: "img/day-herb18.png",
        DECORATION_53D: "img/day-herb19.png",
        DECORATION_54D: "img/day-herb20.png",
        DECORATION_55D: "img/day-herb21.png",
        DECORATION_0N: "img/night-herb0.png",
        DECORATION_1N: "img/night-herb1.png",
        DECORATION_2N: "img/night-herb2.png",
        DECORATION_3N: "img/night-herb3.png",
        DECORATION_4N: "img/night-herb4.png",
        DECORATION_5N: "img/night-herb5.png",
        DECORATION_6N: "img/night-herb6.png",
        DECORATION_7N: "img/night-herb7.png",
        DECORATION_8N: "img/night-herb8.png",
        DECORATION_9N: "img/night-herb9.png",
        DECORATION_10N: "img/night-herb10.png",
        DECORATION_11N: "img/night-herb11.png",
        DECORATION_12N: "img/night-herb12.png",
        DECORATION_13N: "img/night-herb13.png",
        DECORATION_14N: "img/night-herb14.png",
        DECORATION_15N: "img/night-herb15.png",
        DECORATION_16N: "img/night-shell0.png",
        DECORATION_17N: "img/night-shell1.png",
        DECORATION_18N: "img/night-shell2.png",
        DECORATION_19N: "img/night-leaf1.png",
        DECORATION_20N: "img/night-leaf2.png",
        DECORATION_21N: "img/night-leaf3.png",
        DECORATION_22N: "img/night-leaf4.png",
        DECORATION_23N: "img/night-leaf5.png",
        DECORATION_24N: "img/night-leaf6.png",
        DECORATION_25N: "img/night-leaf7.png",
        DECORATION_26N: "img/night-leaf8.png",
        DECORATION_27N: "img/night-rock0.png",
        DECORATION_28N: "img/night-rock1.png",
        DECORATION_29N: "img/night-rock2.png",
        DECORATION_30N: "img/night-rock3.png",
        DECORATION_31N: "img/night-rock4.png",
        DECORATION_32N: "img/night-rock5.png",
        DECORATION_33N: "img/night-rock6.png",
        DECORATION_34N: "img/night-rock7.png",
        DECORATION_35N: "img/night-rock8.png",
        DECORATION_36N: "img/night-rock9.png",
        DECORATION_37N: "img/night-rock10.png",
        DECORATION_38N: "img/night-rock11.png",
        DECORATION_39N: "img/night-rock12.png",
        DECORATION_40N: "img/night-rock13.png",
        DECORATION_41N: "img/night-flower1.png",
        DECORATION_42N: "img/night-flower2.png",
        DECORATION_43N: "img/night-flower3.png",
        DECORATION_44N: "img/night-flower4.png",
        DECORATION_45N: "img/night-flower5.png",
        DECORATION_46N: "img/night-flower6.png",
        DECORATION_47N: "img/night-flower7.png",
        DECORATION_48N: "img/night-flower8.png",
        DECORATION_49N: "img/night-flower9.png",
        DECORATION_50N: "img/night-herb16.png",
        DECORATION_51N: "img/night-herb17.png",
        DECORATION_52N: "img/night-herb18.png",
        DECORATION_53N: "img/night-herb19.png",
        DECORATION_54N: "img/night-herb20.png",
        DECORATION_55N: "img/night-herb21.png",
        DAY_RIVER_000_010_000: "img/day-river000-010-000.png",
        DAY_RIVER_000_010_010: "img/day-river000-010-010.png",
        DAY_RIVER_000_011_000: "img/day-river000-011-000.png",
        DAY_RIVER_000_011_010: "img/day-river000-011-010.png",
        DAY_RIVER_000_011_011: "img/day-river000-011-011.png",
        DAY_RIVER_000_110_000: "img/day-river000-110-000.png",
        DAY_RIVER_000_110_010: "img/day-river000-110-010.png",
        DAY_RIVER_000_110_110: "img/day-river000-110-110.png",
        DAY_RIVER_000_111_000: "img/day-river000-111-000.png",
        DAY_RIVER_000_111_010: "img/day-river000-111-010.png",
        DAY_RIVER_000_111_011: "img/day-river000-111-011.png",
        DAY_RIVER_000_111_110: "img/day-river000-111-110.png",
        DAY_RIVER_000_111_111: "img/day-river000-111-111.png",
        DAY_RIVER_010_010_000: "img/day-river010-010-000.png",
        DAY_RIVER_010_010_010: "img/day-river010-010-010.png",
        DAY_RIVER_010_011_000: "img/day-river010-011-000.png",
        DAY_RIVER_010_011_010: "img/day-river010-011-010.png",
        DAY_RIVER_010_011_011: "img/day-river010-011-011.png",
        DAY_RIVER_010_110_000: "img/day-river010-110-000.png",
        DAY_RIVER_010_110_010: "img/day-river010-110-010.png",
        DAY_RIVER_010_110_110: "img/day-river010-110-110.png",
        DAY_RIVER_010_111_000: "img/day-river010-111-000.png",
        DAY_RIVER_010_111_010: "img/day-river010-111-010.png",
        DAY_RIVER_010_111_011: "img/day-river010-111-011.png",
        DAY_RIVER_010_111_110: "img/day-river010-111-110.png",
        DAY_RIVER_010_111_111: "img/day-river010-111-111.png",
        DAY_RIVER_011_011_000: "img/day-river011-011-000.png",
        DAY_RIVER_011_011_010: "img/day-river011-011-010.png",
        DAY_RIVER_011_011_011: "img/day-river011-011-011.png",
        DAY_RIVER_011_111_000: "img/day-river011-111-000.png",
        DAY_RIVER_011_111_010: "img/day-river011-111-010.png",
        DAY_RIVER_011_111_011: "img/day-river011-111-011.png",
        DAY_RIVER_011_111_110: "img/day-river011-111-110.png",
        DAY_RIVER_011_111_111: "img/day-river011-111-111.png",
        DAY_RIVER_110_110_000: "img/day-river110-110-000.png",
        DAY_RIVER_110_110_010: "img/day-river110-110-010.png",
        DAY_RIVER_110_110_110: "img/day-river110-110-110.png",
        DAY_RIVER_110_111_000: "img/day-river110-111-000.png",
        DAY_RIVER_110_111_010: "img/day-river110-111-010.png",
        DAY_RIVER_110_111_011: "img/day-river110-111-011.png",
        DAY_RIVER_110_111_110: "img/day-river110-111-110.png",
        DAY_RIVER_110_111_111: "img/day-river110-111-111.png",
        DAY_RIVER_111_111_011: "img/day-river111-111-011.png",
        DAY_RIVER_111_111_110: "img/day-river111-111-110.png",
        DAY_RIVER_111_111_000: "img/day-river111-111-000.png",
        DAY_RIVER_111_111_111: "img/day-river111-111-111.png",
        DAY_RIVER_111_111_010: "img/day-river111-111-010.png",
        NIGHT_RIVER_000_010_000: "img/night-river000-010-000.png",
        NIGHT_RIVER_000_010_010: "img/night-river000-010-010.png",
        NIGHT_RIVER_000_011_000: "img/night-river000-011-000.png",
        NIGHT_RIVER_000_011_010: "img/night-river000-011-010.png",
        NIGHT_RIVER_000_011_011: "img/night-river000-011-011.png",
        NIGHT_RIVER_000_110_000: "img/night-river000-110-000.png",
        NIGHT_RIVER_000_110_010: "img/night-river000-110-010.png",
        NIGHT_RIVER_000_110_110: "img/night-river000-110-110.png",
        NIGHT_RIVER_000_111_000: "img/night-river000-111-000.png",
        NIGHT_RIVER_000_111_010: "img/night-river000-111-010.png",
        NIGHT_RIVER_000_111_011: "img/night-river000-111-011.png",
        NIGHT_RIVER_000_111_110: "img/night-river000-111-110.png",
        NIGHT_RIVER_000_111_111: "img/night-river000-111-111.png",
        NIGHT_RIVER_010_010_000: "img/night-river010-010-000.png",
        NIGHT_RIVER_010_010_010: "img/night-river010-010-010.png",
        NIGHT_RIVER_010_011_000: "img/night-river010-011-000.png",
        NIGHT_RIVER_010_011_010: "img/night-river010-011-010.png",
        NIGHT_RIVER_010_011_011: "img/night-river010-011-011.png",
        NIGHT_RIVER_010_110_000: "img/night-river010-110-000.png",
        NIGHT_RIVER_010_110_010: "img/night-river010-110-010.png",
        NIGHT_RIVER_010_110_110: "img/night-river010-110-110.png",
        NIGHT_RIVER_010_111_000: "img/night-river010-111-000.png",
        NIGHT_RIVER_010_111_010: "img/night-river010-111-010.png",
        NIGHT_RIVER_010_111_011: "img/night-river010-111-011.png",
        NIGHT_RIVER_010_111_110: "img/night-river010-111-110.png",
        NIGHT_RIVER_010_111_111: "img/night-river010-111-111.png",
        NIGHT_RIVER_011_011_000: "img/night-river011-011-000.png",
        NIGHT_RIVER_011_011_010: "img/night-river011-011-010.png",
        NIGHT_RIVER_011_011_011: "img/night-river011-011-011.png",
        NIGHT_RIVER_011_111_000: "img/night-river011-111-000.png",
        NIGHT_RIVER_011_111_010: "img/night-river011-111-010.png",
        NIGHT_RIVER_011_111_011: "img/night-river011-111-011.png",
        NIGHT_RIVER_011_111_110: "img/night-river011-111-110.png",
        NIGHT_RIVER_011_111_111: "img/night-river011-111-111.png",
        NIGHT_RIVER_110_110_000: "img/night-river110-110-000.png",
        NIGHT_RIVER_110_110_010: "img/night-river110-110-010.png",
        NIGHT_RIVER_110_110_110: "img/night-river110-110-110.png",
        NIGHT_RIVER_110_111_000: "img/night-river110-111-000.png",
        NIGHT_RIVER_110_111_010: "img/night-river110-111-010.png",
        NIGHT_RIVER_110_111_011: "img/night-river110-111-011.png",
        NIGHT_RIVER_110_111_110: "img/night-river110-111-110.png",
        NIGHT_RIVER_110_111_111: "img/night-river110-111-111.png",
        NIGHT_RIVER_111_111_011: "img/night-river111-111-011.png",
        NIGHT_RIVER_111_111_110: "img/night-river111-111-110.png",
        NIGHT_RIVER_111_111_000: "img/night-river111-111-000.png",
        NIGHT_RIVER_111_111_111: "img/night-river111-111-111.png",
        NIGHT_RIVER_111_111_010: "img/night-river111-111-010.png",
        DAY_RIVER_COMPO1: "img/day-pebblecompo1.png",
        DAY_RIVER_COMPO2: "img/day-pebblecompo2.png",
        DAY_RIVER_COMPO3: "img/day-pebblecompo3.png",
        DAY_RIVER_COMPO4: "img/day-pebblecompo4.png",
        DAY_RIVER_COMPO5: "img/day-pebblecompo5.png",
        DAY_RIVER_COMPO6: "img/day-pebblecompo6.png",
        DAY_RIVER_COMPO7: "img/day-pebblecompo7.png",
        DAY_RIVER_COMPO8: "img/day-pebblecompo8.png",
        DAY_RIVER_COMPO9: "img/day-pebblecompo9.png",
        DAY_RIVER_COMPO10: "img/day-pebblecompo10.png",
        DAY_RIVER_COMPO11: "img/day-pebblecompo11.png",
        DAY_RIVER_COMPO12: "img/day-pebblecompo12.png",
        DAY_RIVER_COMPO13: "img/day-pebblecompo13.png",
        DAY_RIVER_COMPO14: "img/day-pebblecompo14.png",
        DAY_RIVER_COMPO15: "img/day-pebblecompo15.png",
        DAY_RIVER_COMPO16: "img/day-pebblecompo16.png",
        DAY_RIVER_COMPO17: "img/day-pebblecompo17.png",
        DAY_RIVER_COMPO18: "img/day-pebblecompo18.png",
        DAY_RIVER_COMPO19: "img/day-pebblecompo19.png",
        DAY_RIVER_COMPO20: "img/day-pebblecompo20.png",
        DAY_RIVER_COMPO21: "img/day-pebblecompo21.png",
        DAY_RIVER_COMPO22: "img/day-pebblecompo22.png",
        DAY_RIVER_COMPO23: "img/day-pebblecompo23.png",
        DAY_RIVER_COMPO24: "img/day-pebblecompo24.png",
        DAY_RIVER_COMPO25: "img/day-pebblecompo25.png",
        DAY_RIVER_COMPO26: "img/day-pebblecompo26.png",
        DAY_RIVER_COMPO27: "img/day-pebblecompo27.png",
        DAY_RIVER_COMPO28: "img/day-pebblecompo28.png",
        NIGHT_RIVER_COMPO1: "img/night-pebblecompo1.png",
        NIGHT_RIVER_COMPO2: "img/night-pebblecompo2.png",
        NIGHT_RIVER_COMPO3: "img/night-pebblecompo3.png",
        NIGHT_RIVER_COMPO4: "img/night-pebblecompo4.png",
        NIGHT_RIVER_COMPO5: "img/night-pebblecompo5.png",
        NIGHT_RIVER_COMPO6: "img/night-pebblecompo6.png",
        NIGHT_RIVER_COMPO7: "img/night-pebblecompo7.png",
        NIGHT_RIVER_COMPO8: "img/night-pebblecompo8.png",
        NIGHT_RIVER_COMPO9: "img/night-pebblecompo9.png",
        NIGHT_RIVER_COMPO10: "img/night-pebblecompo10.png",
        NIGHT_RIVER_COMPO11: "img/night-pebblecompo11.png",
        NIGHT_RIVER_COMPO12: "img/night-pebblecompo12.png",
        NIGHT_RIVER_COMPO13: "img/night-pebblecompo13.png",
        NIGHT_RIVER_COMPO14: "img/night-pebblecompo14.png",
        NIGHT_RIVER_COMPO15: "img/night-pebblecompo15.png",
        NIGHT_RIVER_COMPO16: "img/night-pebblecompo16.png",
        NIGHT_RIVER_COMPO17: "img/night-pebblecompo17.png",
        NIGHT_RIVER_COMPO18: "img/night-pebblecompo18.png",
        NIGHT_RIVER_COMPO19: "img/night-pebblecompo19.png",
        NIGHT_RIVER_COMPO20: "img/night-pebblecompo20.png",
        NIGHT_RIVER_COMPO21: "img/night-pebblecompo21.png",
        NIGHT_RIVER_COMPO22: "img/night-pebblecompo22.png",
        NIGHT_RIVER_COMPO23: "img/night-pebblecompo23.png",
        NIGHT_RIVER_COMPO24: "img/night-pebblecompo24.png",
        NIGHT_RIVER_COMPO25: "img/night-pebblecompo25.png",
        NIGHT_RIVER_COMPO26: "img/night-pebblecompo26.png",
        NIGHT_RIVER_COMPO27: "img/night-pebblecompo27.png",
        NIGHT_RIVER_COMPO28: "img/night-pebblecompo28.png",
        BABY_MAMMOTHD: "img/day-baby-mammoth.png",
        BABY_MAMMOTH_TAMEDD: "img/day-baby-mammoth-tamed.png",
        BABY_MAMMOTH_ATTACKD: "img/day-baby-mammoth-angry.png",
        BABY_MAMMOTHN: "img/night-baby-mammoth.png",
        BABY_MAMMOTH_TAMEDN: "img/night-baby-mammoth-tamed.png",
        BABY_MAMMOTH_ATTACKN: "img/night-baby-mammoth-angry.png",
        INV_BABY_MAMMOTH_OUT: "img/inv-mammoth-out.png",
        INV_BABY_MAMMOTH_IN: "img/inv-mammoth-in.png",
        INV_BABY_MAMMOTH_CLICK: "img/inv-mammoth-click.png",
        HURT_BABY_MAMMOTH: "img/hurt-baby-mammoth.png",
        BABY_MAMMOTH_STEP: "img/baby-mammoth-step.png",
        FLOWER_HATD: "img/day-flower-hat.png",
        FLOWER_HATN: "img/night-flower-hat.png",
        INV_FLOWER_HAT_OUT: "img/inv-flower-hat-out.png",
        INV_FLOWER_HAT_IN: "img/inv-flower-hat-in.png",
        INV_FLOWER_HAT_CLICK: "img/inv-flower-hat-click.png",
        FUR_HATD: "img/day-fur-hat.png",
        FUR_HATN: "img/night-fur-hat.png",
        INV_FUR_HAT_OUT: "img/inv-fur-hat-out.png",
        INV_FUR_HAT_IN: "img/inv-fur-hat-in.png",
        INV_FUR_HAT_CLICK: "img/inv-fur-hat-click.png",
        MAMMOTHD: "img/day-mammoth.png",
        MAMMOTHN: "img/night-mammoth.png",
        HURT_MAMMOTH: "img/hurt-mammoth.png",
        INV_FUR_MAMMOTH_OUT: "img/inv-mammoth-fur-out.png",
        INV_FUR_MAMMOTH_IN: "img/inv-mammoth-fur-in.png",
        INV_FUR_MAMMOTH_CLICK: "img/inv-mammoth-fur-click.png",
        INV_WOOD_BOW_OUT: "img/inv-wood-bow-out.png",
        INV_WOOD_BOW_IN: "img/inv-wood-bow-in.png",
        INV_WOOD_BOW_CLICK: "img/inv-wood-bow-click.png",
        INV_WOOD_ARROW_OUT: "img/inv-wood-arrow-out.png",
        INV_WOOD_ARROW_IN: "img/inv-wood-arrow-in.png",
        INV_WOOD_ARROW_CLICK: "img/inv-wood-arrow-click.png",
        WOOD_BOWD: "img/day-wood-bow2.png",
        WOOD_BOWN: "img/night-wood-bow2.png",
        WOOD_ARROWD: "img/day-wood-arrow.png",
        WOOD_ARROWN: "img/night-wood-arrow.png",
        INV_STONE_BOW_OUT: "img/inv-stone-bow-out.png",
        INV_STONE_BOW_IN: "img/inv-stone-bow-in.png",
        INV_STONE_BOW_CLICK: "img/inv-stone-bow-click.png",
        INV_STONE_ARROW_OUT: "img/inv-stone-arrow-out.png",
        INV_STONE_ARROW_IN: "img/inv-stone-arrow-in.png",
        INV_STONE_ARROW_CLICK: "img/inv-stone-arrow-click.png",
        STONE_BOWD: "img/day-stone-bow.png",
        STONE_BOWN: "img/night-stone-bow.png",
        STONE_ARROWD: "img/day-stone-arrow.png",
        STONE_ARROWN: "img/night-stone-arrow.png",
        INV_GOLD_BOW_OUT: "img/inv-gold-bow-out.png",
        INV_GOLD_BOW_IN: "img/inv-gold-bow-in.png",
        INV_GOLD_BOW_CLICK: "img/inv-gold-bow-click.png",
        INV_GOLD_ARROW_OUT: "img/inv-gold-arrow-out.png",
        INV_GOLD_ARROW_IN: "img/inv-gold-arrow-in.png",
        INV_GOLD_ARROW_CLICK: "img/inv-gold-arrow-click.png",
        GOLD_BOWD: "img/day-gold-bow.png",
        GOLD_BOWN: "img/night-gold-bow.png",
        GOLD_ARROWD: "img/day-gold-arrow.png",
        GOLD_ARROWN: "img/night-gold-arrow.png",
        INV_DIAMOND_BOW_OUT: "img/inv-diamond-bow-out.png",
        INV_DIAMOND_BOW_IN: "img/inv-diamond-bow-in.png",
        INV_DIAMOND_BOW_CLICK: "img/inv-diamond-bow-click.png",
        INV_DIAMOND_ARROW_OUT: "img/inv-diamond-arrow-out.png",
        INV_DIAMOND_ARROW_IN: "img/inv-diamond-arrow-in.png",
        INV_DIAMOND_ARROW_CLICK: "img/inv-diamond-arrow-click.png",
        DIAMOND_BOWD: "img/day-diamond-bow.png",
        DIAMOND_BOWN: "img/night-diamond-bow.png",
        DIAMOND_ARROWD: "img/day-diamond-arrow.png",
        DIAMOND_ARROWN: "img/night-diamond-arrow.png",
        INV_AMETHYST_BOW_OUT: "img/inv-amethyst-bow-out.png",
        INV_AMETHYST_BOW_IN: "img/inv-amethyst-bow-in.png",
        INV_AMETHYST_BOW_CLICK: "img/inv-amethyst-bow-click.png",
        INV_AMETHYST_ARROW_OUT: "img/inv-amethyst-arrow-out.png",
        INV_AMETHYST_ARROW_IN: "img/inv-amethyst-arrow-in.png",
        INV_AMETHYST_ARROW_CLICK: "img/inv-amethyst-arrow-click.png",
        AMETHYST_BOWD: "img/day-amethyst-bow.png",
        AMETHYST_BOWN: "img/night-amethyst-bow.png",
        AMETHYST_ARROWD: "img/day-amethyst-arrow.png",
        AMETHYST_ARROWN: "img/night-amethyst-arrow.png",
        INV_DRAGON_BOW_OUT: "img/inv-dragon-bow-out.png",
        INV_DRAGON_BOW_IN: "img/inv-dragon-bow-in.png",
        INV_DRAGON_BOW_CLICK: "img/inv-dragon-bow-click.png",
        INV_DRAGON_ARROW_OUT: "img/inv-dragon-arrow-out.png",
        INV_DRAGON_ARROW_IN: "img/inv-dragon-arrow-in.png",
        INV_DRAGON_ARROW_CLICK: "img/inv-dragon-arrow-click.png",
        DRAGON_BOWD: "img/day-dragon-bow.png",
        DRAGON_BOWN: "img/night-dragon-bow.png",
        DRAGON_ARROWD: "img/day-dragon-arrow.png",
        DRAGON_ARROWN: "img/night-dragon-arrow.png",
        INV_REIDITE_BOW_OUT: "img/inv-reidite-bow-out.png",
        INV_REIDITE_BOW_IN: "img/inv-reidite-bow-in.png",
        INV_REIDITE_BOW_CLICK: "img/inv-reidite-bow-click.png",
        INV_REIDITE_ARROW_OUT: "img/inv-reidite-arrow-out.png",
        INV_REIDITE_ARROW_IN: "img/inv-reidite-arrow-in.png",
        INV_REIDITE_ARROW_CLICK: "img/inv-reidite-arrow-click.png",
        REIDITE_BOWD: "img/day-reidite-bow.png",
        REIDITE_BOWN: "img/night-reidite-bow.png",
        REIDITE_ARROWD: "img/day-reidite-arrow.png",
        REIDITE_ARROWN: "img/night-reidite-arrow.png",
        BANDAGE_ACTIVATED: "img/bandage-activated.png",
        AUTO_FEED: "img/auto-feed.png",
        STOP_REGENERATION_BLIZZARD: "img/stop-regeneration.png",
        STOP_REGENERATION: "img/stop-regeneration2.png",
        WOOD_TOWERD: "img/day-wood-platform.png",
        WOOD_TOWERN: "img/night-wood-platform.png",
        INV_WOOD_TOWER_IN: "img/inv-wood-platform-in.png",
        INV_WOOD_TOWER_OUT: "img/inv-wood-platform-out.png",
        INV_WOOD_TOWER_CLICK: "img/inv-wood-platform-click.png",
        WOOD_SHIELDD: "img/day-wood-shield.png",
        WOOD_SHIELDN: "img/night-wood-shield.png",
        STONE_SHIELDD: "img/day-stone-shield.png",
        STONE_SHIELDN: "img/night-stone-shield.png",
        GOLD_SHIELDD: "img/day-gold-shield.png",
        GOLD_SHIELDN: "img/night-gold-shield.png",
        DIAMOND_SHIELDD: "img/day-diamond-shield.png",
        DIAMOND_SHIELDN: "img/night-diamond-shield.png",
        AMETHYST_SHIELDD: "img/day-amethyst-shield.png",
        AMETHYST_SHIELDN: "img/night-amethyst-shield.png",
        REIDITE_SHIELDD: "img/day-reidite-shield.png",
        REIDITE_SHIELDN: "img/night-reidite-shield.png",
        INV_WOOD_SHIELD_IN: "img/inv-wood-shield-in.png",
        INV_WOOD_SHIELD_OUT: "img/inv-wood-shield-out.png",
        INV_WOOD_SHIELD_CLICK: "img/inv-wood-shield-click.png",
        INV_STONE_SHIELD_IN: "img/inv-stone-shield-in.png",
        INV_STONE_SHIELD_OUT: "img/inv-stone-shield-out.png",
        INV_STONE_SHIELD_CLICK: "img/inv-stone-shield-click.png",
        INV_GOLD_SHIELD_IN: "img/inv-gold-shield-in.png",
        INV_GOLD_SHIELD_OUT: "img/inv-gold-shield-out.png",
        INV_GOLD_SHIELD_CLICK: "img/inv-gold-shield-click.png",
        INV_DIAMOND_SHIELD_IN: "img/inv-diamond-shield-in.png",
        INV_DIAMOND_SHIELD_OUT: "img/inv-diamond-shield-out.png",
        INV_DIAMOND_SHIELD_CLICK: "img/inv-diamond-shield-click.png",
        INV_AMETHYST_SHIELD_IN: "img/inv-amethyst-shield-in.png",
        INV_AMETHYST_SHIELD_OUT: "img/inv-amethyst-shield-out.png",
        INV_AMETHYST_SHIELD_CLICK: "img/inv-amethyst-shield-click.png",
        INV_REIDITE_SHIELD_IN: "img/inv-reidite-shield-in.png",
        INV_REIDITE_SHIELD_OUT: "img/inv-reidite-shield-out.png",
        INV_REIDITE_SHIELD_CLICK: "img/inv-reidite-shield-click.png",
        MACHETED: "img/day-machete.png",
        MACHETEN: "img/night-machete.png",
        INV_MACHETE_IN: "img/inv-machete-in.png",
        INV_MACHETE_OUT: "img/inv-machete-out.png",
        INV_MACHETE_CLICK: "img/inv-machete-click.png"
    },
    (WINDOW12 = [{}])[0].stringify = function(e) {
        for (var t = new Uint8Array(new ArrayBuffer(e.length)), i = 0; i < e.length; i++)
            t[i] = e[i];
        return t
    }
    ,
    DUMP_IMAGES = {},
    PREPROC_IMAGES = {},
    IMAGES)
        DUMP_IMAGES[D] = IMAGES[D];
    sprite = [],
    RARITY = {
        FREE: 0,
        WOOD: 1,
        STONE: 2,
        GOLD: 3,
        DIAMOND: 4,
        AMETHYST: 5,
        REIDITE: 6,
        SPECIAL: 7,
        LEVEL: 8
    },
    COSMETICS = {},
    MINIMAP_Utils = [],
    find_cosmetics_per_id = function(e, t) {
        for (var i = 0; i < e.length; i++)
            if (e[i].id === t)
                return i;
        return -1
    }
    ;
    var Ee = [];
    function Te(e, t) {
        for (var i = 0; i < Ee.length; i += t) {
            var n = Ee[i];
            if (n[0] === e) {
                E = h = c = l = u = _ = d = s = a = o = r = void 0;
                var r = n[0]
                  , o = n[1]
                  , a = n[2]
                  , s = n[3]
                  , d = MINIMAP_Utils[r];
                if (void 0 !== d)
                    for (var _ = 0; _ < 2; _++) {
                        var u = d[o][_]
                          , l = 193 * s / Fe.nw
                          , c = 193 * a / Fe.nh
                          , h = u.width / 3.5
                          , E = u.height / 3.5;
                        sprite[Le.MINIMAP_CTX][_].drawImage(u, l - h / 2, c - E / 2, h, E),
                        l = 600 * s / Fe.nw,
                        c = 600 * a / Fe.nh,
                        h = u.width / 1.5,
                        E = u.height / 1.5,
                        sprite[Le.BIGMAP_CTX][_].drawImage(u, l - h / 2, c - E / 2, h, E)
                    }
            }
        }
    }
    function Ce(e, t, i, n) {
        t && (e.fillStyle = t,
        e.fill()),
        i && (e.lineWidth = n,
        e.strokeStyle = i,
        e.stroke())
    }
    function Be(e, t, i, n, r, o) {
        (o = r < 2 * (o = n < 2 * o ? n / 2 : o) ? r / 2 : o) < 0 && (o = 0),
        e.beginPath(),
        e.moveTo(t + o, i),
        e.arcTo(t + n, i, t + n, i + r, o),
        e.arcTo(t + n, i + r, t, i + r, o),
        e.arcTo(t, i + r, t, i, o),
        e.arcTo(t, i, t + n, i, o),
        e.closePath()
    }
    function we(e, t, i, n) {
        e.beginPath(),
        e.arc(t, i, n, 0, 2 * Math.PI)
    }
    function v(e, t, i, n, r) {
        e.beginPath(),
        e.lineCap = "round",
        e.arc(t, i, n, 0, 2 * Math.PI * r)
    }
    function A(e, t, i, n) {
        for (var r = 2 * Math.PI / t, o = (e.beginPath(),
        [{
            x: i,
            y: 0
        }]), a = [], s = 1; s < t; s++) {
            o.push({
                x: Math.cos(s * r) * i,
                y: Math.sin(s * r) * i
            });
            var d = o.length;
            a.push(Utils.middle_point(o[d - 2], o[d - 1]))
        }
        a.push(Utils.middle_point(o[o.length - 1], o[0]));
        var _ = a[a.length - 1];
        e.moveTo(_.x, _.y);
        for (s = 0; s < t; s++)
            e.arcTo(o[s].x, o[s].y, a[s].x, a[s].y, n);
        e.closePath()
    }
    function I(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d")
          , r = Math.sqrt(t.width * t.width + t.height * t.height);
        return d2 = r / 2,
        i.width = r,
        i.height = r,
        n.translate(d2, d2),
        n.rotate(e),
        n.drawImage(t, -t.width / 2, -t.height / 2),
        i
    }
    function M(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d")
          , r = 120 * e
          , o = 110 * e
          , a = r / 2
          , s = o / 2
          , d = 20 * e
          , _ = 112 * e
          , u = 82 * e
          , l = _ / 2
          , c = u / 2
          , e = 4 * e;
        return i.width = r,
        i.height = o,
        n.globalAlpha = 1,
        n.translate(a, s),
        Be(n, -l, -c, _, u, d),
        Ce(n, t, t, e),
        i
    }
    function L(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 264 * e,
        n.height = 246 * e,
        r.translate(0, 10 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(75 * e, 54 * e),
        r.bezierCurveTo(79 * e, 21 * e, 131 * e, 13 * e, 153 * e, 36 * e),
        r.bezierCurveTo(204 * e, 27 * e, 221 * e, 52 * e, 216 * e, 83 * e),
        r.bezierCurveTo(241 * e, 103 * e, 232 * e, 138 * e, 214 * e, 147 * e),
        r.bezierCurveTo(223 * e, 184 * e, 201 * e, 200 * e, 175 * e, 199 * e),
        r.bezierCurveTo(156 * e, 218 * e, 135 * e, 222 * e, 114 * e, 203 * e),
        r.bezierCurveTo(62 * e, 213 * e, 66 * e, 189 * e, 59 * e, 170 * e),
        r.bezierCurveTo(27 * e, 164 * e, 31 * e, 134 * e, 38 * e, 123 * e),
        r.bezierCurveTo(11 * e, 80 * e, 51 * e, 52 * e, 75 * e, 54 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(0, -10 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(75 * e, 54 * e),
        r.bezierCurveTo(79 * e, 21 * e, 131 * e, 13 * e, 153 * e, 36 * e),
        r.bezierCurveTo(204 * e, 27 * e, 221 * e, 52 * e, 216 * e, 83 * e),
        r.bezierCurveTo(241 * e, 103 * e, 232 * e, 138 * e, 214 * e, 147 * e),
        r.bezierCurveTo(223 * e, 184 * e, 201 * e, 200 * e, 175 * e, 199 * e),
        r.bezierCurveTo(156 * e, 218 * e, 135 * e, 222 * e, 114 * e, 203 * e),
        r.bezierCurveTo(62 * e, 213 * e, 66 * e, 189 * e, 59 * e, 170 * e),
        r.bezierCurveTo(27 * e, 164 * e, 31 * e, 134 * e, 38 * e, 123 * e),
        r.bezierCurveTo(11 * e, 80 * e, 51 * e, 52 * e, 75 * e, 54 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(121 * e, 102 * e),
        r.bezierCurveTo(111 * e, 80 * e, 110 * e, 66 * e, 108 * e, 51 * e),
        r.bezierCurveTo(119 * e, 65 * e, 129 * e, 85 * e, 135 * e, 99 * e),
        r.bezierCurveTo(142 * e, 67 * e, 146 * e, 60 * e, 152 * e, 50 * e),
        r.bezierCurveTo(154 * e, 71 * e, 152 * e, 85 * e, 149 * e, 104 * e),
        r.bezierCurveTo(166 * e, 88 * e, 175 * e, 83 * e, 188 * e, 78 * e),
        r.bezierCurveTo(179 * e, 91 * e, 170 * e, 103 * e, 160 * e, 112 * e),
        r.bezierCurveTo(186 * e, 107 * e, 191 * e, 107 * e, 204 * e, 108 * e),
        r.bezierCurveTo(195 * e, 114 * e, 179 * e, 120 * e, 163 * e, 123 * e),
        r.bezierCurveTo(183 * e, 130 * e, 186 * e, 135 * e, 192 * e, 140 * e),
        r.bezierCurveTo(179 * e, 141 * e, 164 * e, 139 * e, 153 * e, 135 * e),
        r.bezierCurveTo(158 * e, 145 * e, 163 * e, 159 * e, 165 * e, 177 * e),
        r.bezierCurveTo(154 * e, 166 * e, 145 * e, 153 * e, 138 * e, 139 * e),
        r.bezierCurveTo(133 * e, 155 * e, 125 * e, 170 * e, 117 * e, 182 * e),
        r.bezierCurveTo(116 * e, 160 * e, 119 * e, 151 * e, 124 * e, 138 * e),
        r.bezierCurveTo(107 * e, 150 * e, 95 * e, 156 * e, 82 * e, 159 * e),
        r.bezierCurveTo(94 * e, 140 * e, 101 * e, 136 * e, 113 * e, 128 * e),
        r.bezierCurveTo(78 * e, 123 * e, 75 * e, 121 * e, 67 * e, 118 * e),
        r.bezierCurveTo(85 * e, 112 * e, 94 * e, 112 * e, 111 * e, 113 * e),
        r.bezierCurveTo(89 * e, 97 * e, 85 * e, 93 * e, 78 * e, 82 * e),
        r.bezierCurveTo(92 * e, 85 * e, 101 * e, 90 * e, 121 * e, 102 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(128 * e, 103 * e),
        r.bezierCurveTo(111 * e, 112 * e, 117 * e, 136 * e, 140 * e, 130 * e),
        r.bezierCurveTo(151 * e, 126 * e, 156 * e, 115 * e, 155 * e, 107 * e),
        r.bezierCurveTo(155 * e, 96 * e, 154 * e, 94 * e, 148 * e, 94 * e),
        r.bezierCurveTo(141 * e, 94 * e, 146 * e, 104 * e, 136 * e, 104 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        n
    }
    function G(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 70 * e,
        n.height = 70 * e,
        r.globalAlpha = .5,
        we(r, 26 * e, 26 * e, 9 * e),
        Ce(r, i[0]),
        we(r, 56 * e, 36 * e, 9 * e),
        Ce(r, i[1]),
        we(r, 40 * e, 50 * e, 9 * e),
        Ce(r, i[2]),
        r.globalAlpha = 1,
        we(r, 26 * e, 26 * e, 5 * e),
        Ce(r, i[0]),
        we(r, 56 * e, 36 * e, 5 * e),
        Ce(r, i[1]),
        we(r, 40 * e, 50 * e, 5 * e),
        Ce(r, i[2]),
        n
    }
    function H(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 22 * e,
        n.height = 22 * e,
        r.globalAlpha = .4,
        we(r, 11 * e, 11 * e, 10 * e),
        Ce(r, i[0]),
        r.globalAlpha = .7,
        we(r, 11 * e, 11 * e, 7 * e),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        we(r, 11 * e, 11 * e, 4 * e),
        Ce(r, i[0]),
        n
    }
    function P(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 248 * e,
        n.height = 247 * e,
        r.save(),
        r.translate(123.5 * e, 62.5 * e),
        r.rotate(6.28),
        Be(r, -84.5 * e, -25.5 * e, 169 * e, 169 * e, 5 * e),
        r.restore(),
        Ce(r, i[2], i[1], 6 * e),
        n
    }
    function B(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 191 * e,
        n.height = 153 * e,
        r.globalAlpha = .5,
        r.translate(0, 10 * e),
        r.save(),
        r.translate(97.49996948242188 * e, 95.12844848632812 * e),
        Be(r, -62.5 * e, -41.5 * e, 125 * e, 83 * e, 20 * e),
        r.restore(),
        Ce(r, i[0], i[0], 4 * e),
        r.globalAlpha = 1,
        r.translate(0, -10 * e),
        r.save(),
        r.translate(97.49996948242188 * e, 95.12844848632812 * e),
        Be(r, -62.5 * e, -41.5 * e, 125 * e, 83 * e, 20 * e),
        r.restore(),
        Ce(r, i[1], i[2], 4 * e),
        r.globalCompositeOperation = "destination-out",
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(26.999969482421875 * e, 50.850677490234375 * e),
        r.bezierCurveTo(46.499969482421875 * e, 64.85067749023438 * e, 46.499969482421875 * e, 64.85067749023438 * e, 65.99996948242188 * e, 78.85067749023438 * e),
        r.bezierCurveTo(80.99996948242188 * e, 87.85067749023438 * e, 105.99996948242188 * e, 82.85067749023438 * e, 114.99996948242188 * e, 80.85067749023438 * e),
        r.bezierCurveTo(130.99996948242188 * e, 69.85067749023438 * e, 152.99996948242188 * e, 70.85067749023438 * e, 166.99996948242188 * e, 67.85067749023438 * e),
        r.bezierCurveTo(156.99996948242188 * e, 52.850677490234375 * e, 156.99996948242188 * e, 52.850677490234375 * e, 146.99996948242188 * e, 37.850677490234375 * e),
        r.bezierCurveTo(101.49996948242188 * e, 37.350677490234375 * e, 101.49996948242188 * e, 37.350677490234375 * e, 55.999969482421875 * e, 36.850677490234375 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 4 * e),
        r.globalCompositeOperation = "source-over",
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(40.999969482421875 * e, 59.850677490234375 * e),
        r.bezierCurveTo(41.999969482421875 * e, 50.850677490234375 * e, 47.999969482421875 * e, 47.850677490234375 * e, 56.999969482421875 * e, 49.850677490234375 * e),
        r.bezierCurveTo(65.99996948242188 * e, 41.850677490234375 * e, 76.99996948242188 * e, 42.850677490234375 * e, 90.99996948242188 * e, 47.850677490234375 * e),
        r.bezierCurveTo(94.99996948242188 * e, 42.850677490234375 * e, 104.99996948242188 * e, 42.850677490234375 * e, 114.99996948242188 * e, 47.850677490234375 * e),
        r.bezierCurveTo(131.99996948242188 * e, 42.850677490234375 * e, 142.99996948242188 * e, 48.850677490234375 * e, 145.99996948242188 * e, 56.850677490234375 * e),
        r.bezierCurveTo(160.99996948242188 * e, 63.850677490234375 * e, 154.99996948242188 * e, 69.85067749023438 * e, 155.99996948242188 * e, 70.85067749023438 * e),
        r.bezierCurveTo(141.99996948242188 * e, 71.85067749023438 * e, 141.99996948242188 * e, 71.85067749023438 * e, 127.99996948242188 * e, 72.85067749023438 * e),
        r.bezierCurveTo(110.99996948242188 * e, 83.85067749023438 * e, 107.99996948242188 * e, 82.85067749023438 * e, 90.99996948242188 * e, 85.85067749023438 * e),
        r.bezierCurveTo(70.99996948242188 * e, 83.85067749023438 * e, 64.99996948242188 * e, 79.85067749023438 * e, 53.999969482421875 * e, 70.85067749023438 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(33.999969482421875 * e, 65.85067749023438 * e),
        r.bezierCurveTo(36.999969482421875 * e, 59.850677490234375 * e, 34.999969482421875 * e, 60.850677490234375 * e, 39.999969482421875 * e, 59.850677490234375 * e),
        r.bezierCurveTo(47.999969482421875 * e, 61.850677490234375 * e, 62.999969482421875 * e, 76.85067749023438 * e, 74.99996948242188 * e, 79.85067749023438 * e),
        r.bezierCurveTo(93.99996948242188 * e, 85.85067749023438 * e, 111.99996948242188 * e, 83.85067749023438 * e, 124.99996948242188 * e, 70.85067749023438 * e),
        r.bezierCurveTo(129.99996948242188 * e, 67.85067749023438 * e, 145.99996948242188 * e, 65.85067749023438 * e, 159.99996948242188 * e, 67.85067749023438 * e),
        r.bezierCurveTo(159.99996948242188 * e, 71.85067749023438 * e, 159.99996948242188 * e, 71.85067749023438 * e, 159.99996948242188 * e, 75.85067749023438 * e),
        r.bezierCurveTo(146.99996948242188 * e, 72.85067749023438 * e, 144.99996948242188 * e, 75.85067749023438 * e, 143.99996948242188 * e, 82.85067749023438 * e),
        r.bezierCurveTo(144.99996948242188 * e, 86.85067749023438 * e, 140.99996948242188 * e, 90.85067749023438 * e, 137.99996948242188 * e, 86.85067749023438 * e),
        r.bezierCurveTo(139.99996948242188 * e, 72.85067749023438 * e, 135.99996948242188 * e, 72.85067749023438 * e, 133.99996948242188 * e, 82.85067749023438 * e),
        r.bezierCurveTo(127.99996948242188 * e, 88.85067749023438 * e, 124.99996948242188 * e, 70.85067749023438 * e, 116.99996948242188 * e, 86.85067749023438 * e),
        r.bezierCurveTo(110.99996948242188 * e, 91.85067749023438 * e, 96.99996948242188 * e, 81.85067749023438 * e, 89.99996948242188 * e, 90.85067749023438 * e),
        r.bezierCurveTo(85.99996948242188 * e, 92.85067749023438 * e, 81.99996948242188 * e, 95.85067749023438 * e, 76.99996948242188 * e, 86.85067749023438 * e),
        r.bezierCurveTo(67.99996948242188 * e, 93.85067749023438 * e, 67.99996948242188 * e, 91.85067749023438 * e, 60.999969482421875 * e, 79.85067749023438 * e),
        r.bezierCurveTo(53.999969482421875 * e, 71.85067749023438 * e, 52.999969482421875 * e, 72.85067749023438 * e, 46.999969482421875 * e, 77.85067749023438 * e),
        r.bezierCurveTo(41.999969482421875 * e, 78.85067749023438 * e, 42.999969482421875 * e, 69.85067749023438 * e, 33.999969482421875 * e, 65.85067749023438 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 4 * e),
        we(r, 68 * e, 111.29513549804688 * e, 15 * e),
        Ce(r, i[7], i[8], 4 * e),
        we(r, 123 * e, 111.29510498046875 * e, 15 * e),
        Ce(r, i[7], i[8], 4 * e),
        we(r, 63 * e, 106 * e, 5 * e),
        Ce(r, i[9]),
        we(r, 118 * e, 106 * e, 5 * e),
        Ce(r, i[9]),
        n
    }
    function Y(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 191 * e,
        n.height = 153 * e,
        r.globalAlpha = .5,
        r.translate(0, 10 * e),
        r.save(),
        r.translate(96.49996948242188 * e, 66.79510498046875 * e),
        r.rotate(0),
        Be(r, -79.5 * e, -48.5 * e, 159 * e, 97 * e, 22 * e),
        r.restore(),
        Ce(r, i[0], i[0], 4 * e),
        r.globalAlpha = 1,
        r.translate(0, -10 * e),
        r.save(),
        r.translate(96.49996948242188 * e, 66.79510498046875 * e),
        r.rotate(0),
        Be(r, -79.5 * e, -48.5 * e, 159 * e, 97 * e, 22 * e),
        r.restore(),
        Ce(r, i[1], i[2], 4 * e),
        r.translate(2 * e, 0),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(119 * e, 28 * e),
        r.bezierCurveTo(119 * e, 22 * e, 119 * e, 20 * e, 122 * e, 16 * e),
        r.bezierCurveTo(149 * e, 39 * e, 149 * e, 39 * e, 176 * e, 63 * e),
        r.bezierCurveTo(176 * e, 75 * e, 176 * e, 75 * e, 175 * e, 88 * e),
        r.bezierCurveTo(174 * e, 90 * e, 174 * e, 90 * e, 172 * e, 93 * e),
        r.bezierCurveTo(171 * e, 101 * e, 169 * e, 109 * e, 164 * e, 113 * e),
        r.bezierCurveTo(163 * e, 104 * e, 163 * e, 104 * e, 162 * e, 95 * e),
        r.bezierCurveTo(155 * e, 105 * e, 155 * e, 105 * e, 147 * e, 116 * e),
        r.bezierCurveTo(87 * e, 114 * e, 87 * e, 114 * e, 26 * e, 112 * e),
        r.bezierCurveTo(27 * e, 106 * e, 27 * e, 106 * e, 27 * e, 101 * e),
        r.bezierCurveTo(24 * e, 104 * e, 24 * e, 104 * e, 20 * e, 108 * e),
        r.bezierCurveTo(17 * e, 103 * e, 20 * e, 86 * e, 23 * e, 72 * e),
        r.bezierCurveTo(15 * e, 74 * e, 14 * e, 78 * e, 12 * e, 83 * e),
        r.bezierCurveTo(12 * e, 65 * e, 12 * e, 54 * e, 16 * e, 42 * e),
        r.bezierCurveTo(14 * e, 39 * e, 14 * e, 39 * e, 12 * e, 36 * e),
        r.bezierCurveTo(16 * e, 33 * e, 16 * e, 33 * e, 19 * e, 30 * e),
        r.bezierCurveTo(18 * e, 27 * e, 18 * e, 27 * e, 17 * e, 25 * e),
        r.bezierCurveTo(24 * e, 24 * e, 31 * e, 21 * e, 29 * e, 19 * e),
        r.bezierCurveTo(37 * e, 25 * e, 37 * e, 25 * e, 45 * e, 31 * e),
        r.bezierCurveTo(40 * e, 23 * e, 40 * e, 21 * e, 42 * e, 16 * e),
        r.bezierCurveTo(74 * e, 16 * e, 74 * e, 16 * e, 106 * e, 16 * e),
        r.bezierCurveTo(113 * e, 21 * e, 113 * e, 21 * e, 119 * e, 26 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        n
    }
    function J(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 191 * e,
        i.height = 153 * e,
        n.save(),
        n.translate(96.49996948242188 * e, 66.79510498046875 * e),
        Be(n, -79.5 * e, -48.5 * e, 159 * e, 97 * e, 22 * e),
        n.restore(),
        Ce(n, t[0], t[0], 4 * e),
        n.translate(2 * e, 0),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(119 * e, 28 * e),
        n.bezierCurveTo(119 * e, 22 * e, 119 * e, 20 * e, 122 * e, 16 * e),
        n.bezierCurveTo(149 * e, 39 * e, 149 * e, 39 * e, 176 * e, 63 * e),
        n.bezierCurveTo(176 * e, 75 * e, 176 * e, 75 * e, 175 * e, 88 * e),
        n.bezierCurveTo(174 * e, 90 * e, 174 * e, 90 * e, 172 * e, 93 * e),
        n.bezierCurveTo(171 * e, 101 * e, 169 * e, 109 * e, 164 * e, 113 * e),
        n.bezierCurveTo(163 * e, 104 * e, 163 * e, 104 * e, 162 * e, 95 * e),
        n.bezierCurveTo(155 * e, 105 * e, 155 * e, 105 * e, 147 * e, 116 * e),
        n.bezierCurveTo(87 * e, 114 * e, 87 * e, 114 * e, 26 * e, 112 * e),
        n.bezierCurveTo(27 * e, 106 * e, 27 * e, 106 * e, 27 * e, 101 * e),
        n.bezierCurveTo(24 * e, 104 * e, 24 * e, 104 * e, 20 * e, 108 * e),
        n.bezierCurveTo(17 * e, 103 * e, 20 * e, 86 * e, 23 * e, 72 * e),
        n.bezierCurveTo(15 * e, 74 * e, 14 * e, 78 * e, 12 * e, 83 * e),
        n.bezierCurveTo(12 * e, 65 * e, 12 * e, 54 * e, 16 * e, 42 * e),
        n.bezierCurveTo(14 * e, 39 * e, 14 * e, 39 * e, 12 * e, 36 * e),
        n.bezierCurveTo(16 * e, 33 * e, 16 * e, 33 * e, 19 * e, 30 * e),
        n.bezierCurveTo(18 * e, 27 * e, 18 * e, 27 * e, 17 * e, 25 * e),
        n.bezierCurveTo(24 * e, 24 * e, 31 * e, 21 * e, 29 * e, 19 * e),
        n.bezierCurveTo(37 * e, 25 * e, 37 * e, 25 * e, 45 * e, 31 * e),
        n.bezierCurveTo(40 * e, 23 * e, 40 * e, 21 * e, 42 * e, 16 * e),
        n.bezierCurveTo(74 * e, 16 * e, 74 * e, 16 * e, 106 * e, 16 * e),
        n.bezierCurveTo(113 * e, 21 * e, 113 * e, 21 * e, 119 * e, 26 * e),
        n.closePath(),
        Ce(n, t[0], t[0], 4 * e),
        n.save(),
        n.translate(97.49996948242188 * e, 95.12844848632812 * e),
        Be(n, -62.5 * e, -41.5 * e, 125 * e, 83 * e, 20 * e),
        n.restore(),
        Ce(n, t[0], t[0], 4 * e),
        i
    }
    function X(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 40 * e
          , a = 40 * e
          , o = e * (n.width = o) / 2
          , a = e * (n.height = a) / 2
          , s = 15 * e
          , s = (r.save(),
        r.translate(o, a),
        r.globalAlpha = 1,
        we(r, 0, 0, s),
        Ce(r, i[0]),
        5 * e);
        return r.translate(2 * e, +e),
        r.globalAlpha = 1,
        we(r, 0, 0, s),
        Ce(r, i[1]),
        r.restore(),
        n
    }
    function q(e, t, i, n) {
        var r = document.createElement("canvas")
          , o = r.getContext("2d");
        return r.width = 185 * e,
        r.height = 240 * e,
        o.globalAlpha = .5,
        o.translate(0, 10 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(44 * e, 137 * e),
        o.bezierCurveTo(60 * e, 87 * e, 68 * e, 66 * e, 92 * e, 67 * e),
        o.bezierCurveTo(115 * e, 64 * e, 129 * e, 97 * e, 137 * e, 136 * e),
        o.closePath(),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(53 * e, 181 * e),
        o.bezierCurveTo(30 * e, 164 * e, 19 * e, 150 * e, 11 * e, 136 * e),
        o.bezierCurveTo(28 * e, 121 * e, 38 * e, 132 * e, 48 * e, 150 * e),
        o.closePath(),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(63 * e, 208 * e),
        o.bezierCurveTo(75 * e, 224 * e, 86 * e, 228 * e, 93 * e, 228 * e),
        o.bezierCurveTo(104 * e, 229 * e, 116 * e, 219 * e, 122 * e, 205 * e),
        o.closePath(),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(130 * e, 170 * e),
        o.bezierCurveTo(146 * e, 125 * e, 156 * e, 126 * e, 173 * e, 137 * e),
        o.bezierCurveTo(167 * e, 151 * e, 143 * e, 174 * e, 131 * e, 183 * e),
        o.closePath(),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(39 * e, 140 * e),
        o.bezierCurveTo(75 * e, 126 * e, 113 * e, 127 * e, 143 * e, 137 * e),
        o.bezierCurveTo(141 * e, 186 * e, 130 * e, 202 * e, 113 * e, 214 * e),
        o.bezierCurveTo(85 * e, 228 * e, 56 * e, 219 * e, 48 * e, 173 * e),
        o.bezierCurveTo(40 * e, 148 * e, 43 * e, 145 * e, 39 * e, 140 * e),
        o.closePath(),
        Ce(o, i[0]),
        o.globalAlpha = 1,
        o.translate(0, -10 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(44 * e, 137 * e),
        o.bezierCurveTo(60 * e, 87 * e, 68 * e, 66 * e, 92 * e, 67 * e),
        o.bezierCurveTo(115 * e, 64 * e, 129 * e, 97 * e, 137 * e, 136 * e),
        o.closePath(),
        Ce(o, i[1], i[2], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(53 * e, 181 * e),
        o.bezierCurveTo(30 * e, 164 * e, 19 * e, 150 * e, 11 * e, 136 * e),
        o.bezierCurveTo(28 * e, 121 * e, 38 * e, 132 * e, 48 * e, 150 * e),
        o.closePath(),
        Ce(o, i[1], i[2], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(63 * e, 208 * e),
        o.bezierCurveTo(75 * e, 224 * e, 86 * e, 228 * e, 93 * e, 228 * e),
        o.bezierCurveTo(104 * e, 229 * e, 116 * e, 219 * e, 122 * e, 205 * e),
        o.closePath(),
        Ce(o, i[1], i[2], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(130 * e, 170 * e),
        o.bezierCurveTo(146 * e, 125 * e, 156 * e, 126 * e, 173 * e, 137 * e),
        o.bezierCurveTo(167 * e, 151 * e, 143 * e, 174 * e, 131 * e, 183 * e),
        o.closePath(),
        Ce(o, i[1], i[2], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(39 * e, 140 * e),
        o.bezierCurveTo(75 * e, 126 * e, 113 * e, 127 * e, 143 * e, 137 * e),
        o.bezierCurveTo(141 * e, 186 * e, 130 * e, 202 * e, 113 * e, 214 * e),
        o.bezierCurveTo(85 * e, 228 * e, 56 * e, 219 * e, 48 * e, 173 * e),
        o.bezierCurveTo(40 * e, 148 * e, 43 * e, 145 * e, 39 * e, 140 * e),
        o.closePath(),
        Ce(o, i[1], i[2], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(59 * e, 99 * e),
        o.bezierCurveTo(71 * e, 68 * e, 81 * e, 68 * e, 94 * e, 67 * e),
        o.bezierCurveTo(105 * e, 66 * e, 119 * e, 75 * e, 123 * e, 96 * e),
        o.bezierCurveTo(104 * e, 91 * e, 101 * e, 94 * e, 94 * e, 97 * e),
        o.bezierCurveTo(76 * e, 92 * e, 73 * e, 93 * e, 60 * e, 99 * e),
        o.closePath(),
        Ce(o, i[3], i[2], 4 * e),
        0 === n ? (o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(47 * e, 149 * e),
        o.bezierCurveTo(43 * e, 140 * e, 48 * e, 130 * e, 59 * e, 127 * e),
        o.bezierCurveTo(77 * e, 126 * e, 90 * e, 131 * e, 131 * e, 127 * e),
        o.bezierCurveTo(143 * e, 130 * e, 144 * e, 143 * e, 132 * e, 154 * e),
        o.bezierCurveTo(90 * e, 152 * e, 90 * e, 152 * e, 48 * e, 150 * e),
        o.closePath(),
        Ce(o, i[1]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(40 * e, 139 * e),
        o.bezierCurveTo(48 * e, 113 * e, 76 * e, 119 * e, 91 * e, 126 * e),
        o.bezierCurveTo(117 * e, 113 * e, 135 * e, 117 * e, 144 * e, 134 * e),
        o.bezierCurveTo(144 * e, 138 * e, 144 * e, 138 * e, 144 * e, 142 * e),
        o.bezierCurveTo(128 * e, 124 * e, 108 * e, 124 * e, 91 * e, 136 * e),
        o.bezierCurveTo(59 * e, 124 * e, 50 * e, 137 * e, 42 * e, 148 * e)) : (o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(41 * e, 139 * e),
        o.bezierCurveTo(53 * e, 117 * e, 69 * e, 118 * e, 92 * e, 127 * e),
        o.bezierCurveTo(124 * e, 111 * e, 136 * e, 121 * e, 143 * e, 136 * e),
        o.bezierCurveTo(142 * e, 144 * e, 142 * e, 144 * e, 141 * e, 152 * e),
        o.bezierCurveTo(128 * e, 131 * e, 113 * e, 138 * e, 92 * e, 145 * e),
        o.bezierCurveTo(57 * e, 133 * e, 57 * e, 147 * e, 44 * e, 154 * e)),
        o.closePath(),
        Ce(o, i[3], i[2], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(90 * e, 95 * e),
        o.bezierCurveTo(99 * e, 82 * e, 98 * e, 58 * e, 99 * e, 40 * e),
        o.bezierCurveTo(90 * e, 38 * e, 89 * e, 34 * e, 92 * e, 17 * e),
        o.bezierCurveTo(92 * e, 5 * e, 83 * e, 16 * e, 78 * e, 29 * e),
        o.bezierCurveTo(72 * e, 59 * e, 87 * e, 81 * e, 89 * e, 87 * e),
        o.closePath(),
        Ce(o, i[1], i[2], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(90 * e, 86 * e),
        o.bezierCurveTo(95 * e, 74 * e, 95 * e, 62 * e, 95 * e, 43 * e),
        o.bezierCurveTo(84 * e, 37 * e, 86 * e, 34 * e, 89 * e, 16 * e),
        o.bezierCurveTo(75 * e, 29 * e, 80 * e, 58 * e, 90 * e, 85 * e),
        o.closePath(),
        Ce(o, i[1], i[3], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(92 * e, 117 * e),
        o.bezierCurveTo(98 * e, 87 * e, 93 * e, 78 * e, 85 * e, 76 * e),
        o.bezierCurveTo(85.5 * e, 79.5 * e, 85.5 * e, 79.5 * e, 86 * e, 83 * e),
        o.bezierCurveTo(84 * e, 85.5 * e, 84 * e, 85.5 * e, 82 * e, 88 * e),
        o.bezierCurveTo(90 * e, 93 * e, 89 * e, 100 * e, 92 * e, 117 * e),
        o.closePath(),
        Ce(o, i[1], i[3], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(92 * e, 175 * e),
        o.bezierCurveTo(95 * e, 135 * e, 98 * e, 125 * e, 109 * e, 121 * e),
        o.bezierCurveTo(106 * e, 114 * e, 104 * e, 114 * e, 102 * e, 113 * e),
        o.bezierCurveTo(103 * e, 106 * e, 104 * e, 103 * e, 107 * e, 96 * e),
        o.bezierCurveTo(74 * e, 108 * e, 86 * e, 157 * e, 92 * e, 174 * e),
        o.closePath(),
        Ce(o, i[1], i[3], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(48 * e, 169 * e),
        o.bezierCurveTo(42 * e, 187 * e, 50 * e, 193 * e, 59 * e, 198 * e),
        o.closePath(),
        Ce(o, void 0, i[2], 5 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(136 * e, 171 * e),
        o.bezierCurveTo(139 * e, 186 * e, 138 * e, 191 * e, 124 * e, 199 * e),
        o.closePath(),
        Ce(o, void 0, i[2], 4 * e),
        we(o, 63 * e, 180 * e, 15.231546211727817 * e),
        Ce(o, i[4]),
        we(o, 121 * e, 181 * e, 15.652475842498529 * e),
        Ce(o, i[4]),
        we(o, 58 * e, 175 * e, 5.656854249492381 * e),
        Ce(o, i[2]),
        we(o, 116 * e, 175 * e, 5.656854249492381 * e),
        Ce(o, i[2]),
        r
    }
    function Z(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 185 * e,
        i.height = 240 * e,
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(44 * e, 137 * e),
        n.bezierCurveTo(60 * e, 87 * e, 68 * e, 66 * e, 92 * e, 67 * e),
        n.bezierCurveTo(115 * e, 64 * e, 129 * e, 97 * e, 137 * e, 136 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(53 * e, 181 * e),
        n.bezierCurveTo(30 * e, 164 * e, 19 * e, 150 * e, 11 * e, 136 * e),
        n.bezierCurveTo(28 * e, 121 * e, 38 * e, 132 * e, 48 * e, 150 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(63 * e, 208 * e),
        n.bezierCurveTo(75 * e, 224 * e, 86 * e, 228 * e, 93 * e, 228 * e),
        n.bezierCurveTo(104 * e, 229 * e, 116 * e, 219 * e, 122 * e, 205 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(130 * e, 170 * e),
        n.bezierCurveTo(146 * e, 125 * e, 156 * e, 126 * e, 173 * e, 137 * e),
        n.bezierCurveTo(167 * e, 151 * e, 143 * e, 174 * e, 131 * e, 183 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(39 * e, 140 * e),
        n.bezierCurveTo(75 * e, 126 * e, 113 * e, 127 * e, 143 * e, 137 * e),
        n.bezierCurveTo(141 * e, 186 * e, 130 * e, 202 * e, 113 * e, 214 * e),
        n.bezierCurveTo(85 * e, 228 * e, 56 * e, 219 * e, 48 * e, 173 * e),
        n.bezierCurveTo(40 * e, 148 * e, 43 * e, 145 * e, 39 * e, 140 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(90 * e, 95 * e),
        n.bezierCurveTo(99 * e, 82 * e, 98 * e, 58 * e, 99 * e, 40 * e),
        n.bezierCurveTo(90 * e, 38 * e, 89 * e, 34 * e, 92 * e, 17 * e),
        n.bezierCurveTo(92 * e, 5 * e, 83 * e, 16 * e, 78 * e, 29 * e),
        n.bezierCurveTo(72 * e, 59 * e, 87 * e, 81 * e, 89 * e, 87 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(90 * e, 86 * e),
        n.bezierCurveTo(95 * e, 74 * e, 95 * e, 62 * e, 95 * e, 43 * e),
        n.bezierCurveTo(84 * e, 37 * e, 86 * e, 34 * e, 89 * e, 16 * e),
        n.bezierCurveTo(75 * e, 29 * e, 80 * e, 58 * e, 90 * e, 85 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(92 * e, 117 * e),
        n.bezierCurveTo(98 * e, 87 * e, 93 * e, 78 * e, 85 * e, 76 * e),
        n.bezierCurveTo(85.5 * e, 79.5 * e, 85.5 * e, 79.5 * e, 86 * e, 83 * e),
        n.bezierCurveTo(84 * e, 85.5 * e, 84 * e, 85.5 * e, 82 * e, 88 * e),
        n.bezierCurveTo(90 * e, 93 * e, 89 * e, 100 * e, 92 * e, 117 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(92 * e, 175 * e),
        n.bezierCurveTo(95 * e, 135 * e, 98 * e, 125 * e, 109 * e, 121 * e),
        n.bezierCurveTo(106 * e, 114 * e, 104 * e, 114 * e, 102 * e, 113 * e),
        n.bezierCurveTo(103 * e, 106 * e, 104 * e, 103 * e, 107 * e, 96 * e),
        n.bezierCurveTo(74 * e, 108 * e, 86 * e, 157 * e, 92 * e, 174 * e),
        n.closePath(),
        Ce(n, t[0]),
        i
    }
    function Q(e) {
        var t = document.createElement("canvas")
          , i = t.getContext("2d")
          , n = 200 * e
          , e = (t.width = 200 * e,
        t.height = n,
        D1(.35, !1, ["#0e3022", "#0b8052", "#077b49"]))
          , e = (i.drawImage(e, 10, 10),
        f1(.9, 0, ["#54318e", "#725ba3"]))
          , e = (i.drawImage(e, 21, 20),
        f1(.9, 0, ["#54318e", "#725ba3"]))
          , e = (i.drawImage(e, 38, 28),
        f1(.9, 0, ["#54318e", "#725ba3"]))
          , e = (i.drawImage(e, 15, 37),
        f1(.9, 0, ["#54318e", "#725ba3"]));
        return i.drawImage(e, 32, 45),
        t
    }
    function ee(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d")
          , r = 100 * e
          , o = 100 * e
          , a = r / 2
          , s = o / 2
          , d = (i.width = r,
        i.height = o,
        5 * e)
          , _ = 28 * e
          , u = d / 2
          , l = _ / 2;
        n.translate(a, s);
        for (var c = 0; c < 4; c++)
            Be(n, -u, -l, d, _, 2 * e),
            n.rotate(Math.PI / 4),
            Ce(n, t);
        return n.arc(0, 0, 10 * e, 0, 2 * Math.PI),
        Ce(n, t),
        n.globalCompositeOperation = "destination-out",
        we(n, 0, 0, 4 * e),
        n.fill(),
        i
    }
    function te(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 32 * e
          , a = 32 * e
          , s = o / 2
          , d = a / 2
          , _ = (n.width = o,
        n.height = a,
        5 * e)
          , u = 28 * e
          , l = _ / 2
          , c = u / 2;
        if (r.translate(0 * e, 0 * e),
        r.translate(s, d),
        1 == i) {
            we(r, 0, 0, 10 * e),
            Ce(r, t[2], t[2], 3 * e);
            for (var h = 0; h < 4; h++)
                Be(r, -l, -c, _, u, 2 * e),
                r.rotate(Math.PI / 4),
                Ce(r, t[2], t[2], 4 * e)
        }
        we(r, 0, 0, 10 * e),
        Ce(r, t[0], t[1], 1.5 * e);
        for (h = 0; h < 4; h++)
            Be(r, -l, -c, _, u, 2 * e),
            r.rotate(Math.PI / 4),
            Ce(r, t[0], t[1], 1.5 * e);
        return we(r, 0, 0, 10 * e),
        Ce(r, t[0]),
        we(r, 0, 0, 4 * e),
        Ce(r, t[2], t[1], 1.5 * e),
        r.globalCompositeOperation = "destination-out",
        we(r, 0, 0, 4 * e),
        Ce(r, t[0], t[1], 2 * e),
        r.globalCompositeOperation = "source-over",
        we(r, 0, 0, 4 * e),
        Ce(r, void 0, t[1], 2 * e),
        n
    }
    function ie(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = (E = 125 * e) / 2
          , a = (T = 95 * e) / 2
          , s = 10 * e
          , d = 8 * e
          , _ = 112 * e
          , u = 82 * e
          , l = _ / 2
          , c = u / 2
          , h = 4 * e
          , E = (n.width = E,
        n.height = T,
        r.translate(o - 4 * e, a + 4 * e),
        r.globalAlpha = t ? .5 : 1,
        Be(r, -l, -c, _, u, s),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -d),
        Be(r, -l, -c, _, u, s),
        Ce(r, i[1], i[2], h),
        55 * e)
          , T = 45 * e
          , o = (r.translate(-40 * e, -30 * e),
        Be(r, 0, 0, E, T, 5),
        Ce(r, i[3]),
        ee(.7 * e, i[3]))
          , o = (r.drawImage(o, 45 * e, -25 * e),
        ee(.7 * e, i[3]))
          , o = (r.drawImage(o, 45 * e, 15 * e),
        ee(1.2 * e, i[3]))
          , E = (r.drawImage(o, 28 * e, -30 * e),
        15 * e)
          , T = 70 * e
          , s = 5 * e
          , E = (r.translate(78 * e, -5 * e),
        Be(r, 0, 0, E, T, s),
        Ce(r, i[4]),
        9 * e)
          , T = 50 * e
          , s = 3 * e;
        return r.translate(-20 * e, 20 * e),
        r.rotate(Math.PI / 5),
        r.globalAlpha = .6,
        Be(r, 0, 0, E, T, s),
        Ce(r, i[5]),
        r.translate(-20 * e, 29 * e),
        r.rotate(Math.PI / 5),
        r.globalAlpha = .6,
        r.beginPath(),
        r.lineJoin = "round",
        r.moveTo(0, 0),
        r.lineTo(0, 30 * e),
        r.lineTo(30 * e, 30 * e),
        r.closePath(),
        Ce(r, null, i[5], 8 * e),
        n
    }
    function ne(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d")
          , r = 115 * e
          , o = 6 * e
          , r = (i.width = 85 * e,
        i.height = r,
        n.translate(-130 * e, -60 * e + o),
        n.globalAlpha = .5,
        n.beginPath(),
        n.bezierCurveTo(190 * e, 87 * e, 201 * e, 59 * e, 208 * e, 64 * e),
        n.bezierCurveTo(213 * e, 68 * e, 204 * e, 93 * e, 195 * e, 109 * e),
        n.bezierCurveTo(195 * e, 109 * e, 202 * e, 124 * e, 191 * e, 141 * e),
        n.bezierCurveTo(182 * e, 151 * e, 164 * e, 155 * e, 148 * e, 144 * e),
        n.bezierCurveTo(136 * e, 135 * e, 138 * e, 111 * e, 145 * e, 104 * e),
        n.bezierCurveTo(140 * e, 92 * e, 131 * e, 67 * e, 138 * e, 63 * e),
        n.bezierCurveTo(145 * e, 61 * e, 153 * e, 82 * e, 155 * e, 96 * e),
        n.bezierCurveTo(167 * e, 91 * e, 178 * e, 92 * e, 187 * e, 98 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.translate(0, -o),
        n.globalAlpha = 1,
        n.beginPath(),
        n.bezierCurveTo(190 * e, 87 * e, 201 * e, 59 * e, 208 * e, 64 * e),
        n.bezierCurveTo(213 * e, 68 * e, 204 * e, 93 * e, 195 * e, 109 * e),
        n.bezierCurveTo(195 * e, 109 * e, 202 * e, 124 * e, 191 * e, 141 * e),
        n.bezierCurveTo(182 * e, 151 * e, 164 * e, 155 * e, 148 * e, 144 * e),
        n.bezierCurveTo(136 * e, 135 * e, 138 * e, 111 * e, 145 * e, 104 * e),
        n.bezierCurveTo(140 * e, 92 * e, 131 * e, 67 * e, 138 * e, 63 * e),
        n.bezierCurveTo(145 * e, 61 * e, 153 * e, 82 * e, 155 * e, 96 * e),
        n.bezierCurveTo(167 * e, 91 * e, 178 * e, 92 * e, 187 * e, 98 * e),
        n.closePath(),
        Ce(n, t[1], t[2], 4),
        155 * e)
          , o = 133 * e
          , a = 10 * e
          , s = 3 * e
          , d = r + -3 * e
          , _ = o + -5 * e;
        return n.save(),
        n.translate(r, o),
        n.globalAlpha = 1,
        we(n, 0, 0, a),
        Ce(n, t[3]),
        n.restore(),
        n.save(),
        n.translate(d, _),
        n.globalAlpha = 1,
        we(n, 0, 0, s),
        Ce(n, t[4]),
        n.restore(),
        n.save(),
        n.translate(r + 27 * e, o),
        n.globalAlpha = 1,
        we(n, 0, 0, a),
        Ce(n, t[3]),
        n.restore(),
        n.save(),
        n.translate(27 * e + d, _),
        n.globalAlpha = 1,
        we(n, 0, 0, s),
        Ce(n, t[4]),
        i
    }
    function re(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 188 * e,
        i.height = 190 * e,
        n.globalAlpha = .5,
        n.translate(0, 5 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(33.00567626953125 * e, 95.44320678710938 * e),
        n.bezierCurveTo(42.00567626953125 * e, 87.44320678710938 * e, 48.00567626953125 * e, 51.443206787109375 * e, 74.00567626953125 * e, 47.443206787109375 * e),
        n.bezierCurveTo(100.00567626953125 * e, 42.443206787109375 * e, 118.00567626953125 * e, 49.443206787109375 * e, 131.00567626953125 * e, 55.443206787109375 * e),
        n.bezierCurveTo(140.00567626953125 * e, 70.44320678710938 * e, 145.00567626953125 * e, 87.44320678710938 * e, 152.00567626953125 * e, 94.44320678710938 * e),
        n.bezierCurveTo(149.00567626953125 * e, 99.44320678710938 * e, 147.00567626953125 * e, 98.44320678710938 * e, 141.00567626953125 * e, 101.44320678710938 * e),
        n.bezierCurveTo(147.00567626953125 * e, 108.44320678710938 * e, 147.00567626953125 * e, 111.44320678710938 * e, 147.00567626953125 * e, 112.44320678710938 * e),
        n.bezierCurveTo(143.00567626953125 * e, 112.44320678710938 * e, 141.00567626953125 * e, 112.44320678710938 * e, 137.00567626953125 * e, 111.44320678710938 * e),
        n.bezierCurveTo(138.00567626953125 * e, 117.44320678710938 * e, 138.00567626953125 * e, 120.44320678710938 * e, 138.00567626953125 * e, 124.44320678710938 * e),
        n.bezierCurveTo(125.00567626953125 * e, 107.44320678710938 * e, 121.00567626953125 * e, 124.44320678710938 * e, 110.00567626953125 * e, 141.44320678710938 * e),
        n.bezierCurveTo(102.00567626953125 * e, 158.44320678710938 * e, 89.00567626953125 * e, 158.44320678710938 * e, 80.00567626953125 * e, 144.44320678710938 * e),
        n.bezierCurveTo(61.00567626953125 * e, 111.44320678710938 * e, 56.00567626953125 * e, 117.44320678710938 * e, 48.00567626953125 * e, 120.44320678710938 * e),
        n.bezierCurveTo(46.00567626953125 * e, 118.44320678710938 * e, 47.00567626953125 * e, 112.44320678710938 * e, 48.00567626953125 * e, 107.44320678710938 * e),
        n.bezierCurveTo(43.00567626953125 * e, 111.44320678710938 * e, 40.00567626953125 * e, 111.44320678710938 * e, 37.00567626953125 * e, 110.44320678710938 * e),
        n.bezierCurveTo(39.50567626953125 * e, 104.94320678710938 * e, 39.50567626953125 * e, 104.94320678710938 * e, 42.00567626953125 * e, 99.44320678710938 * e),
        n.bezierCurveTo(33.00567626953125 * e, 99.44320678710938 * e, 33.00567626953125 * e, 98.44320678710938 * e, 33.00567626953125 * e, 96.44320678710938 * e),
        n.closePath(),
        Ce(n, t[0], t[0], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(60.00567626953125 * e, 99.35227966308594 * e),
        n.bezierCurveTo(70.00567626953125 * e, 82.35227966308594 * e, 85.00567626953125 * e, 86.35227966308594 * e, 87.00567626953125 * e, 97.35227966308594 * e),
        n.bezierCurveTo(89.00567626953125 * e, 101.35227966308594 * e, 88.00567626953125 * e, 105.35227966308594 * e, 87.00567626953125 * e, 110.35227966308594 * e),
        n.bezierCurveTo(89.00567626953125 * e, 111.35227966308594 * e, 91.00567626953125 * e, 112.35227966308594 * e, 93.00567626953125 * e, 115.35227966308594 * e),
        n.bezierCurveTo(96.00567626953125 * e, 111.35227966308594 * e, 99.00567626953125 * e, 111.35227966308594 * e, 100.00567626953125 * e, 110.35227966308594 * e),
        n.bezierCurveTo(98.00567626953125 * e, 92.35227966308594 * e, 103.00567626953125 * e, 86.35227966308594 * e, 113.00567626953125 * e, 89.35227966308594 * e),
        n.bezierCurveTo(122.00567626953125 * e, 92.35227966308594 * e, 123.00567626953125 * e, 94.35227966308594 * e, 126.00567626953125 * e, 98.35227966308594 * e),
        n.bezierCurveTo(124.00567626953125 * e, 102.35227966308594 * e, 123.00567626953125 * e, 103.35227966308594 * e, 121.00567626953125 * e, 104.35227966308594 * e),
        n.bezierCurveTo(124.00567626953125 * e, 105.35227966308594 * e, 126.00567626953125 * e, 107.35227966308594 * e, 129.00567626953125 * e, 111.35227966308594 * e),
        n.bezierCurveTo(115.00567626953125 * e, 122.35227966308594 * e, 113.00567626953125 * e, 145.35227966308594 * e, 100.00567626953125 * e, 152.35227966308594 * e),
        n.bezierCurveTo(91.00567626953125 * e, 158.35227966308594 * e, 83.00567626953125 * e, 149.35227966308594 * e, 76.00567626953125 * e, 138.35227966308594 * e),
        n.bezierCurveTo(67.00567626953125 * e, 114.35227966308594 * e, 63.00567626953125 * e, 113.35227966308594 * e, 59.00567626953125 * e, 111.35227966308594 * e),
        n.bezierCurveTo(62.00567626953125 * e, 107.35227966308594 * e, 64.00567626953125 * e, 105.35227966308594 * e, 66.00567626953125 * e, 104.35227966308594 * e),
        n.bezierCurveTo(63.00567626953125 * e, 100.35227966308594 * e, 62.00567626953125 * e, 100.35227966308594 * e, 60.00567626953125 * e, 99.35227966308594 * e),
        n.closePath(),
        Ce(n, t[0], t[0], 2 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(51.00567626953125 * e, 72.53409576416016 * e),
        n.bezierCurveTo(48.00567626953125 * e, 56.534095764160156 * e, 48.00567626953125 * e, 49.534095764160156 * e, 54.00567626953125 * e, 35.534095764160156 * e),
        n.bezierCurveTo(58.00567626953125 * e, 26.534095764160156 * e, 65.00567626953125 * e, 27.534095764160156 * e, 73.00567626953125 * e, 40.534095764160156 * e),
        n.bezierCurveTo(81.00567626953125 * e, 49.534095764160156 * e, 82.00567626953125 * e, 50.534095764160156 * e, 83.00567626953125 * e, 51.534095764160156 * e),
        n.bezierCurveTo(77.00567626953125 * e, 71.53409576416016 * e, 64.00567626953125 * e, 75.53409576416016 * e, 51.00567626953125 * e, 72.53409576416016 * e),
        n.closePath(),
        Ce(n, t[0], t[0], 2 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(105.00567626953125 * e, 50.53410339355469 * e),
        n.bezierCurveTo(112.00567626953125 * e, 48.53410339355469 * e, 125.00567626953125 * e, 21.534103393554688 * e, 132.00567626953125 * e, 33.53410339355469 * e),
        n.bezierCurveTo(138.00567626953125 * e, 42.53410339355469 * e, 140.00567626953125 * e, 64.53410339355469 * e, 136.00567626953125 * e, 75.53410339355469 * e),
        n.closePath(),
        Ce(n, t[0], t[0], 2 * e),
        n.globalAlpha = 1,
        n.translate(0, -5 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(33.00567626953125 * e, 95.44320678710938 * e),
        n.bezierCurveTo(42.00567626953125 * e, 87.44320678710938 * e, 48.00567626953125 * e, 51.443206787109375 * e, 74.00567626953125 * e, 47.443206787109375 * e),
        n.bezierCurveTo(100.00567626953125 * e, 42.443206787109375 * e, 118.00567626953125 * e, 49.443206787109375 * e, 131.00567626953125 * e, 55.443206787109375 * e),
        n.bezierCurveTo(140.00567626953125 * e, 70.44320678710938 * e, 145.00567626953125 * e, 87.44320678710938 * e, 152.00567626953125 * e, 94.44320678710938 * e),
        n.bezierCurveTo(149.00567626953125 * e, 99.44320678710938 * e, 147.00567626953125 * e, 98.44320678710938 * e, 141.00567626953125 * e, 101.44320678710938 * e),
        n.bezierCurveTo(147.00567626953125 * e, 108.44320678710938 * e, 147.00567626953125 * e, 111.44320678710938 * e, 147.00567626953125 * e, 112.44320678710938 * e),
        n.bezierCurveTo(143.00567626953125 * e, 112.44320678710938 * e, 141.00567626953125 * e, 112.44320678710938 * e, 137.00567626953125 * e, 111.44320678710938 * e),
        n.bezierCurveTo(138.00567626953125 * e, 117.44320678710938 * e, 138.00567626953125 * e, 120.44320678710938 * e, 138.00567626953125 * e, 124.44320678710938 * e),
        n.bezierCurveTo(125.00567626953125 * e, 107.44320678710938 * e, 121.00567626953125 * e, 124.44320678710938 * e, 110.00567626953125 * e, 141.44320678710938 * e),
        n.bezierCurveTo(102.00567626953125 * e, 158.44320678710938 * e, 89.00567626953125 * e, 158.44320678710938 * e, 80.00567626953125 * e, 144.44320678710938 * e),
        n.bezierCurveTo(61.00567626953125 * e, 111.44320678710938 * e, 56.00567626953125 * e, 117.44320678710938 * e, 48.00567626953125 * e, 120.44320678710938 * e),
        n.bezierCurveTo(46.00567626953125 * e, 118.44320678710938 * e, 47.00567626953125 * e, 112.44320678710938 * e, 48.00567626953125 * e, 107.44320678710938 * e),
        n.bezierCurveTo(43.00567626953125 * e, 111.44320678710938 * e, 40.00567626953125 * e, 111.44320678710938 * e, 37.00567626953125 * e, 110.44320678710938 * e),
        n.bezierCurveTo(39.50567626953125 * e, 104.94320678710938 * e, 39.50567626953125 * e, 104.94320678710938 * e, 42.00567626953125 * e, 99.44320678710938 * e),
        n.bezierCurveTo(33.00567626953125 * e, 99.44320678710938 * e, 33.00567626953125 * e, 98.44320678710938 * e, 33.00567626953125 * e, 96.44320678710938 * e),
        n.closePath(),
        Ce(n, t[1], t[2], 3 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(60.00567626953125 * e, 99.35227966308594 * e),
        n.bezierCurveTo(70.00567626953125 * e, 82.35227966308594 * e, 85.00567626953125 * e, 86.35227966308594 * e, 87.00567626953125 * e, 97.35227966308594 * e),
        n.bezierCurveTo(89.00567626953125 * e, 101.35227966308594 * e, 88.00567626953125 * e, 105.35227966308594 * e, 87.00567626953125 * e, 110.35227966308594 * e),
        n.bezierCurveTo(89.00567626953125 * e, 111.35227966308594 * e, 91.00567626953125 * e, 112.35227966308594 * e, 93.00567626953125 * e, 115.35227966308594 * e),
        n.bezierCurveTo(96.00567626953125 * e, 111.35227966308594 * e, 99.00567626953125 * e, 111.35227966308594 * e, 100.00567626953125 * e, 110.35227966308594 * e),
        n.bezierCurveTo(98.00567626953125 * e, 92.35227966308594 * e, 103.00567626953125 * e, 86.35227966308594 * e, 113.00567626953125 * e, 89.35227966308594 * e),
        n.bezierCurveTo(122.00567626953125 * e, 92.35227966308594 * e, 123.00567626953125 * e, 94.35227966308594 * e, 126.00567626953125 * e, 98.35227966308594 * e),
        n.bezierCurveTo(124.00567626953125 * e, 102.35227966308594 * e, 123.00567626953125 * e, 103.35227966308594 * e, 121.00567626953125 * e, 104.35227966308594 * e),
        n.bezierCurveTo(124.00567626953125 * e, 105.35227966308594 * e, 126.00567626953125 * e, 107.35227966308594 * e, 129.00567626953125 * e, 111.35227966308594 * e),
        n.bezierCurveTo(115.00567626953125 * e, 122.35227966308594 * e, 113.00567626953125 * e, 145.35227966308594 * e, 100.00567626953125 * e, 152.35227966308594 * e),
        n.bezierCurveTo(91.00567626953125 * e, 158.35227966308594 * e, 83.00567626953125 * e, 149.35227966308594 * e, 76.00567626953125 * e, 138.35227966308594 * e),
        n.bezierCurveTo(67.00567626953125 * e, 114.35227966308594 * e, 63.00567626953125 * e, 113.35227966308594 * e, 59.00567626953125 * e, 111.35227966308594 * e),
        n.bezierCurveTo(62.00567626953125 * e, 107.35227966308594 * e, 64.00567626953125 * e, 105.35227966308594 * e, 66.00567626953125 * e, 104.35227966308594 * e),
        n.bezierCurveTo(63.00567626953125 * e, 100.35227966308594 * e, 62.00567626953125 * e, 100.35227966308594 * e, 60.00567626953125 * e, 99.35227966308594 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(33.00567626953125 * e, 95.44320678710938 * e),
        n.bezierCurveTo(42.00567626953125 * e, 87.44320678710938 * e, 48.00567626953125 * e, 51.443206787109375 * e, 74.00567626953125 * e, 47.443206787109375 * e),
        n.bezierCurveTo(100.00567626953125 * e, 42.443206787109375 * e, 118.00567626953125 * e, 49.443206787109375 * e, 131.00567626953125 * e, 55.443206787109375 * e),
        n.bezierCurveTo(140.00567626953125 * e, 70.44320678710938 * e, 145.00567626953125 * e, 87.44320678710938 * e, 152.00567626953125 * e, 94.44320678710938 * e),
        n.bezierCurveTo(149.00567626953125 * e, 99.44320678710938 * e, 147.00567626953125 * e, 98.44320678710938 * e, 141.00567626953125 * e, 101.44320678710938 * e),
        n.bezierCurveTo(147.00567626953125 * e, 108.44320678710938 * e, 147.00567626953125 * e, 111.44320678710938 * e, 147.00567626953125 * e, 112.44320678710938 * e),
        n.bezierCurveTo(143.00567626953125 * e, 112.44320678710938 * e, 141.00567626953125 * e, 112.44320678710938 * e, 137.00567626953125 * e, 111.44320678710938 * e),
        n.bezierCurveTo(138.00567626953125 * e, 117.44320678710938 * e, 138.00567626953125 * e, 120.44320678710938 * e, 138.00567626953125 * e, 124.44320678710938 * e),
        n.bezierCurveTo(125.00567626953125 * e, 107.44320678710938 * e, 121.00567626953125 * e, 124.44320678710938 * e, 110.00567626953125 * e, 141.44320678710938 * e),
        n.bezierCurveTo(102.00567626953125 * e, 158.44320678710938 * e, 89.00567626953125 * e, 158.44320678710938 * e, 80.00567626953125 * e, 144.44320678710938 * e),
        n.bezierCurveTo(61.00567626953125 * e, 111.44320678710938 * e, 56.00567626953125 * e, 117.44320678710938 * e, 48.00567626953125 * e, 120.44320678710938 * e),
        n.bezierCurveTo(46.00567626953125 * e, 118.44320678710938 * e, 47.00567626953125 * e, 112.44320678710938 * e, 48.00567626953125 * e, 107.44320678710938 * e),
        n.bezierCurveTo(43.00567626953125 * e, 111.44320678710938 * e, 40.00567626953125 * e, 111.44320678710938 * e, 37.00567626953125 * e, 110.44320678710938 * e),
        n.bezierCurveTo(39.50567626953125 * e, 104.94320678710938 * e, 39.50567626953125 * e, 104.94320678710938 * e, 42.00567626953125 * e, 99.44320678710938 * e),
        n.bezierCurveTo(33.00567626953125 * e, 99.44320678710938 * e, 33.00567626953125 * e, 98.44320678710938 * e, 33.00567626953125 * e, 96.44320678710938 * e),
        n.closePath(),
        Ce(n, void 0, t[2], 3 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(51.00567626953125 * e, 72.53409576416016 * e),
        n.bezierCurveTo(48.00567626953125 * e, 56.534095764160156 * e, 48.00567626953125 * e, 49.534095764160156 * e, 54.00567626953125 * e, 35.534095764160156 * e),
        n.bezierCurveTo(58.00567626953125 * e, 26.534095764160156 * e, 65.00567626953125 * e, 27.534095764160156 * e, 73.00567626953125 * e, 40.534095764160156 * e),
        n.bezierCurveTo(81.00567626953125 * e, 49.534095764160156 * e, 82.00567626953125 * e, 50.534095764160156 * e, 83.00567626953125 * e, 51.534095764160156 * e),
        Ce(n, t[1], t[2], 3 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(105.00567626953125 * e, 50.53410339355469 * e),
        n.bezierCurveTo(112.00567626953125 * e, 48.53410339355469 * e, 125.00567626953125 * e, 21.534103393554688 * e, 132.00567626953125 * e, 33.53410339355469 * e),
        n.bezierCurveTo(138.00567626953125 * e, 42.53410339355469 * e, 140.00567626953125 * e, 64.53410339355469 * e, 136.00567626953125 * e, 75.53410339355469 * e),
        Ce(n, t[1], t[2], 3 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(57.00567626953125 * e, 68.53410339355469 * e),
        n.bezierCurveTo(63.00567626953125 * e, 69.53410339355469 * e, 69.00567626953125 * e, 66.53410339355469 * e, 73.00567626953125 * e, 60.53410339355469 * e),
        n.bezierCurveTo(66.00567626953125 * e, 47.53410339355469 * e, 61.00567626953125 * e, 42.53410339355469 * e, 58.00567626953125 * e, 49.53410339355469 * e),
        n.bezierCurveTo(56.00567626953125 * e, 59.53410339355469 * e, 56.00567626953125 * e, 64.53410339355469 * e, 57.00567626953125 * e, 67.53410339355469 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(115.00567626953125 * e, 59.715911865234375 * e),
        n.bezierCurveTo(119.00567626953125 * e, 48.715911865234375 * e, 126.00567626953125 * e, 41.715911865234375 * e, 129.00567626953125 * e, 48.715911865234375 * e),
        n.bezierCurveTo(131.00567626953125 * e, 56.715911865234375 * e, 133.00567626953125 * e, 71.71591186523438 * e, 127.00567626953125 * e, 68.71591186523438 * e),
        n.bezierCurveTo(120.00567626953125 * e, 67.71591186523438 * e, 114.00567626953125 * e, 59.715911865234375 * e, 116.00567626953125 * e, 58.715911865234375 * e),
        n.closePath(),
        Ce(n, t[3]),
        we(n, 77 * e, 107 * e, 6 * e),
        Ce(n, t[2]),
        we(n, 110 * e, 107 * e, 6 * e),
        Ce(n, t[2]),
        we(n, 75 * e, 105 * e, 3 * e),
        Ce(n, t[4]),
        we(n, 108 * e, 105 * e, 3 * e),
        Ce(n, t[4]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(88.00567626953125 * e, 141.4431915283203 * e),
        n.bezierCurveTo(93.00567626953125 * e, 137.4431915283203 * e, 96.00567626953125 * e, 138.4431915283203 * e, 100.00567626953125 * e, 141.4431915283203 * e),
        n.bezierCurveTo(103.00567626953125 * e, 143.4431915283203 * e, 101.00567626953125 * e, 149.4431915283203 * e, 95.00567626953125 * e, 148.4431915283203 * e),
        n.bezierCurveTo(85.00567626953125 * e, 148.4431915283203 * e, 86.00567626953125 * e, 145.4431915283203 * e, 88.00567626953125 * e, 142.4431915283203 * e),
        n.closePath(),
        Ce(n, t[1]),
        i
    }
    function oe(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 55 * e
          , a = 8 * e;
        return n.width = 55 * e,
        n.height = o,
        r.translate(-65 * e, -55 * e + a),
        r.globalAlpha = 1,
        r.beginPath(),
        r.moveTo(95 * e, 60 * e),
        r.bezierCurveTo(107 * e, 62 * e, 110 * e, 73 * e, 107 * e, 79 * e),
        r.bezierCurveTo(104 * e, 85 * e, 85 * e, 93 * e, 81 * e, 88 * e),
        r.bezierCurveTo(74 * e, 80 * e, 85 * e, 60 * e, 95 * e, 60 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 3),
        r.globalAlpha = 1,
        r.beginPath(),
        r.moveTo(91 * e, 70 * e),
        r.bezierCurveTo(91 * e, 75 * e, 100 * e, 76 * e, 100 * e, 73 * e),
        r.bezierCurveTo(100 * e, 69 * e, 89 * e, 65 * e, 91 * e, 70 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 3),
        n
    }
    function ae(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 238 * e,
        i.height = 230 * e,
        n.translate(-93 * e, -110 * e + 5 * e),
        n.globalAlpha = .3,
        we(n, 213.5 * e, 256.75 * e, 75 * e),
        Ce(n, t[5]),
        we(n, 213.5 * e, 175.75 * e, 25 * e),
        Ce(n, t[5]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(156.5 * e, 137.75 * e),
        n.bezierCurveTo(170.5 * e, 173.75 * e, 195.5 * e, 177.75 * e, 209.5 * e, 177.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[5],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(217.5 * e, 178.75 * e),
        n.bezierCurveTo(251.5 * e, 177.75 * e, 263.5 * e, 153.75 * e, 270.5 * e, 140.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[5],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(130.5 * e, 124.75 * e),
        n.bezierCurveTo(153.5 * e, 185.75 * e, 198.5 * e, 185.75 * e, 213.5 * e, 185.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[5],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(214.5 * e, 183.75 * e),
        n.bezierCurveTo(265.5 * e, 192.75 * e, 293.5 * e, 141.75 * e, 297.5 * e, 124.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[5],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(107.5 * e, 213.75 * e),
        n.bezierCurveTo(151.5 * e, 190.75 * e, 198.5 * e, 184.75 * e, 210.5 * e, 184.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[5],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(212.5 * e, 187.75 * e),
        n.bezierCurveTo(258.5 * e, 182.75 * e, 286.5 * e, 194.75 * e, 314.5 * e, 206.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[5],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(102.5 * e, 258.75 * e),
        n.bezierCurveTo(142.5 * e, 200.75 * e, 193.5 * e, 194.75 * e, 211.5 * e, 185.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[5],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(214.5 * e, 192.75 * e),
        n.bezierCurveTo(276.5 * e, 194.75 * e, 306.5 * e, 233.75 * e, 316.5 * e, 246.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[5],
        n.stroke(),
        n.translate(0, -5),
        n.globalAlpha = 1,
        we(n, 213.5 * e, 256.75 * e, 75 * e),
        Ce(n, t[3]),
        we(n, 213.5 * e, 175.75 * e, 25 * e),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(219.5 * e, 158.75 * e),
        n.bezierCurveTo(226.5 * e, 159.75 * e, 227.5 * e, 147.75 * e, 219.5 * e, 145.75 * e),
        n.closePath(),
        n.lineWidth = 10 * e,
        n.strokeStyle = t[3],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(210.5 * e, 160.75 * e),
        n.bezierCurveTo(203.5 * e, 159.75 * e, 199.5 * e, 146.75 * e, 210.5 * e, 145.75 * e),
        n.closePath(),
        n.lineWidth = 10 * e,
        n.strokeStyle = t[3],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(219.5 * e, 158.75 * e),
        n.bezierCurveTo(226.5 * e, 159.75 * e, 227.5 * e, 147.75 * e, 219.5 * e, 145.75 * e),
        n.closePath(),
        n.fillStyle = t[0],
        n.fill(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(210.5 * e, 160.75 * e),
        n.bezierCurveTo(203.5 * e, 159.75 * e, 199.5 * e, 146.75 * e, 210.5 * e, 145.75 * e),
        n.closePath(),
        n.fillStyle = t[0],
        n.fill(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(156.5 * e, 137.75 * e),
        n.bezierCurveTo(170.5 * e, 173.75 * e, 195.5 * e, 177.75 * e, 209.5 * e, 177.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[3],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(217.5 * e, 178.75 * e),
        n.bezierCurveTo(251.5 * e, 177.75 * e, 263.5 * e, 153.75 * e, 270.5 * e, 140.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[3],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(130.5 * e, 124.75 * e),
        n.bezierCurveTo(153.5 * e, 185.75 * e, 198.5 * e, 185.75 * e, 213.5 * e, 185.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[3],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(214.5 * e, 183.75 * e),
        n.bezierCurveTo(265.5 * e, 192.75 * e, 293.5 * e, 141.75 * e, 297.5 * e, 124.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[3],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(107.5 * e, 213.75 * e),
        n.bezierCurveTo(151.5 * e, 190.75 * e, 198.5 * e, 184.75 * e, 210.5 * e, 184.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[3],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(212.5 * e, 187.75 * e),
        n.bezierCurveTo(258.5 * e, 182.75 * e, 286.5 * e, 194.75 * e, 314.5 * e, 206.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[3],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(102.5 * e, 258.75 * e),
        n.bezierCurveTo(142.5 * e, 200.75 * e, 193.5 * e, 194.75 * e, 211.5 * e, 185.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[3],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(214.5 * e, 192.75 * e),
        n.bezierCurveTo(276.5 * e, 194.75 * e, 306.5 * e, 233.75 * e, 316.5 * e, 246.75 * e),
        n.lineWidth = 17 * e,
        n.strokeStyle = t[3],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(156.5 * e, 137.75 * e),
        n.bezierCurveTo(170.5 * e, 173.75 * e, 195.5 * e, 177.75 * e, 209.5 * e, 177.75 * e),
        n.lineWidth = 8 * e,
        n.strokeStyle = t[0],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(217.5 * e, 178.75 * e),
        n.bezierCurveTo(251.5 * e, 177.75 * e, 263.5 * e, 153.75 * e, 270.5 * e, 140.75 * e),
        n.lineWidth = 8 * e,
        n.strokeStyle = t[0],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(130.5 * e, 124.75 * e),
        n.bezierCurveTo(153.5 * e, 185.75 * e, 198.5 * e, 185.75 * e, 213.5 * e, 185.75 * e),
        n.lineWidth = 8 * e,
        n.strokeStyle = t[0],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(214.5 * e, 183.75 * e),
        n.bezierCurveTo(265.5 * e, 192.75 * e, 293.5 * e, 141.75 * e, 297.5 * e, 124.75 * e),
        n.lineWidth = 8 * e,
        n.strokeStyle = t[0],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(107.5 * e, 213.75 * e),
        n.bezierCurveTo(151.5 * e, 190.75 * e, 198.5 * e, 184.75 * e, 210.5 * e, 184.75 * e),
        n.lineWidth = 8 * e,
        n.strokeStyle = t[0],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(212.5 * e, 187.75 * e),
        n.bezierCurveTo(258.5 * e, 182.75 * e, 286.5 * e, 194.75 * e, 314.5 * e, 206.75 * e),
        n.lineWidth = 8 * e,
        n.strokeStyle = t[0],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(102.5 * e, 258.75 * e),
        n.bezierCurveTo(142.5 * e, 200.75 * e, 193.5 * e, 194.75 * e, 211.5 * e, 185.75 * e),
        n.lineWidth = 8 * e,
        n.strokeStyle = t[0],
        n.stroke(),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(214.5 * e, 192.75 * e),
        n.bezierCurveTo(276.5 * e, 194.75 * e, 306.5 * e, 233.75 * e, 316.5 * e, 246.75 * e),
        n.lineWidth = 8 * e,
        n.strokeStyle = t[0],
        n.stroke(),
        we(n, 213.5 * e, 256.75 * e, 70 * e),
        Ce(n, t[0]),
        we(n, 213.5 * e, 175.75 * e, 20 * e),
        Ce(n, t[0]),
        we(n, 222 * e, 166 * e, 5 * e),
        n.fillStyle = t[2],
        n.fill(),
        we(n, 205 * e, 166 * e, 5 * e),
        n.fillStyle = t[2],
        n.fill(),
        we(n, 206.2 * e, 167 * e, 2.5 * e),
        n.fillStyle = t[4],
        n.fill(),
        we(n, 223.2 * e, 167 * e, 2.5 * e),
        n.fillStyle = t[4],
        n.fill(),
        n.save(),
        n.translate(213.5 * e, 293.75 * e),
        n.rotate(.76),
        Be(n, -22 * e, -21 * e, 44 * e, 42 * e, 6 * e),
        n.restore(),
        n.fillStyle = t[1],
        n.fill(),
        n.save(),
        n.translate(212.5 * e, 258.25 * e),
        n.rotate(.8),
        Be(n, -15 * e, -14.5 * e, 30 * e, 29 * e, 6 * e),
        n.restore(),
        n.fillStyle = t[1],
        n.fill(),
        i
    }
    function se(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 400 * e,
        n.height = 400 * e,
        r.save(),
        r.translate(202.5 * e, 147.5 * e),
        Be(r, -96.5 * e, -21.5 * e, 193 * e, 193 * e, 0 * e),
        r.restore(),
        Ce(r, t[0], t[1], 12 * e),
        r.save(),
        r.translate(202.5 * e, 190.5 * e),
        Be(r, 96.5 * e, -21.5 * e, -193 * e, 43 * e, 0 * e),
        r.restore(),
        Ce(r, t[2], t[1], 12 * e),
        r.save(),
        r.save(),
        r.translate(202.5 * e, 233.5 * e),
        Be(r, -96.5 * e, -20.5 * e, 193 * e, 41 * e, 0 * e),
        r.restore(),
        Ce(r, t[3], t[1], 12 * e),
        r.save(),
        r.translate(202.5 * e, 275 * e),
        Be(r, 96.5 * e, -21 * e, -193 * e, 42 * e, 0 * e),
        r.restore(),
        Ce(r, t[0], t[1], 12 * e),
        r.save(),
        r.translate(201 * e, 212 * e),
        r.rotate(8.64),
        Be(r, -116 * e, -22 * e, 232 * e, 44 * e, 10 * e),
        r.restore(),
        Ce(r, t[3], t[1], 12 * e),
        r.save(),
        r.translate(203.5 * e, 121.5 * e),
        Be(r, -115.5 * e, -20.5 * e, 231 * e, 41 * e, 10 * e),
        r.restore(),
        Ce(r, t[3], t[1], 12 * e),
        r.save(),
        r.translate(203.5 * e, 299 * e),
        Be(r, -115.5 * e, -20 * e, 231 * e, 40 * e, 10 * e),
        r.restore(),
        Ce(r, t[3], t[1], 12 * e),
        r.save(),
        r.translate(298.5 * e, 210 * e),
        Be(r, -20.5 * e, -109 * e, 41 * e, 218 * e, 10 * e),
        r.restore(),
        Ce(r, t[3], t[1], 12 * e),
        r.save(),
        r.translate(108.5 * e, 210 * e),
        Be(r, -20.5 * e, -109 * e, 41 * e, 218 * e, 10 * e),
        r.restore(),
        Ce(r, t[3], t[1], 12 * e),
        r.save(),
        r.translate(204 * e, 121.5 * e),
        Be(r, -92 * e, -9.5 * e, 184 * e, 19 * e, 10 * e),
        r.restore(),
        Ce(r, t[3], t[3], 10 * e),
        r.save(),
        r.translate(197 * e, 299 * e),
        Be(r, 85 * e, -9 * e, -170 * e, 18 * e, 10 * e),
        r.restore(),
        Ce(r, t[3], t[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(94 * e, 317 * e),
        r.bezierCurveTo(110.5 * e, 299.5 * e, 110.5 * e, 299.5 * e, 127 * e, 282 * e),
        r.closePath(),
        Ce(r, void 0, t[1], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(279 * e, 142 * e),
        r.bezierCurveTo(296.5 * e, 125.5 * e, 296.5 * e, 125.5 * e, 314 * e, 109 * e),
        r.closePath(),
        Ce(r, void 0, t[1], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(93 * e, 106 * e),
        r.bezierCurveTo(110.5 * e, 124 * e, 110.5 * e, 124 * e, 128 * e, 142 * e),
        r.closePath(),
        Ce(r, void 0, t[1], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(281 * e, 282 * e),
        r.bezierCurveTo(296 * e, 297.5 * e, 296 * e, 297.5 * e, 311 * e, 313 * e),
        r.closePath(),
        Ce(r, void 0, t[1], 12 * e),
        0 == i ? (r.scale(2, 2),
        r.translate(-7 * e, 55 * e),
        r.rotate(-.5),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(60 * e, 47 * e),
        r.bezierCurveTo(81 * e, 46 * e, 85 * e, 47 * e, 83 * e, 63 * e),
        r.bezierCurveTo(83 * e, 72 * e, 83 * e, 75 * e, 72 * e, 73 * e),
        r.bezierCurveTo(68 * e, 80 * e, 69 * e, 82 * e, 66 * e, 73 * e),
        r.bezierCurveTo(62 * e, 81 * e, 61 * e, 82 * e, 59 * e, 73 * e),
        r.bezierCurveTo(54 * e, 81 * e, 55 * e, 81 * e, 52 * e, 74 * e),
        r.bezierCurveTo(38 * e, 76 * e, 41 * e, 74 * e, 40 * e, 66 * e),
        r.bezierCurveTo(38 * e, 45 * e, 39 * e, 49 * e, 59 * e, 47 * e),
        r.closePath(),
        Ce(r, t[4], t[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(68 * e, 54 * e),
        r.bezierCurveTo(75 * e, 54 * e, 77 * e, 62 * e, 71 * e, 64 * e),
        r.bezierCurveTo(62 * e, 65 * e, 63 * e, 54 * e, 68 * e, 54 * e),
        r.closePath(),
        Ce(r, t[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(50 * e, 55 * e),
        r.bezierCurveTo(57 * e, 55 * e, 58 * e, 65 * e, 52 * e, 65 * e),
        r.bezierCurveTo(44 * e, 66 * e, 44 * e, 54 * e, 50 * e, 55 * e),
        r.closePath(),
        Ce(r, t[3])) : 1 == i && (r.scale(.6, .6),
        r.translate(185 * e, 165 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(108 * e, 56 * e),
        r.bezierCurveTo(136 * e, 58 * e, 203 * e, 69 * e, 234 * e, 75 * e),
        r.bezierCurveTo(246 * e, 77 * e, 247 * e, 78 * e, 245 * e, 90 * e),
        r.bezierCurveTo(238 * e, 143 * e, 228 * e, 197 * e, 214 * e, 259 * e),
        r.bezierCurveTo(212 * e, 267 * e, 209 * e, 270 * e, 189 * e, 268 * e),
        r.bezierCurveTo(142 * e, 264 * e, 106 * e, 260 * e, 75 * e, 253 * e),
        r.bezierCurveTo(60 * e, 250 * e, 64 * e, 250 * e, 66 * e, 221 * e),
        r.bezierCurveTo(71 * e, 168 * e, 87 * e, 95 * e, 98 * e, 67 * e),
        r.bezierCurveTo(101 * e, 57 * e, 103 * e, 56 * e, 106 * e, 56 * e),
        r.closePath(),
        Ce(r, t[4], t[4], 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(112 * e, 72 * e),
        r.bezierCurveTo(132 * e, 73 * e, 227 * e, 85 * e, 226 * e, 91 * e),
        r.bezierCurveTo(231 * e, 89 * e, 217 * e, 196 * e, 200 * e, 250 * e),
        r.bezierCurveTo(196 * e, 254 * e, 175 * e, 249 * e, 166 * e, 249 * e),
        r.bezierCurveTo(91 * e, 241 * e, 82 * e, 236 * e, 83 * e, 232 * e),
        r.bezierCurveTo(90 * e, 144 * e, 108 * e, 71 * e, 111 * e, 72 * e),
        r.closePath(),
        Ce(r, void 0, t[0], 13 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(132 * e, 117 * e),
        r.bezierCurveTo(171 * e, 86 * e, 191 * e, 101 * e, 188 * e, 134 * e),
        r.bezierCurveTo(185 * e, 154 * e, 170 * e, 158 * e, 153 * e, 158 * e),
        r.bezierCurveTo(143 * e, 172 * e, 146 * e, 180 * e, 147 * e, 193 * e),
        Ce(r, void 0, t[0], 20 * e),
        we(r, 142 * e, 221 * e, 16.1245154965971 * e),
        Ce(r, t[0])),
        n
    }
    function de(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 400 * e,
        n.height = 400 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(101 * e, 255 * e),
        r.bezierCurveTo(113 * e, 243 * e, 179 * e, 210 * e, 219 * e, 196 * e),
        r.bezierCurveTo(252 * e, 203 * e, 288 * e, 215 * e, 318 * e, 233 * e),
        r.bezierCurveTo(304 * e, 254 * e, 258 * e, 273 * e, 215 * e, 296 * e),
        r.bezierCurveTo(161 * e, 287 * e, 119 * e, 270 * e, 102 * e, 257 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 14 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(99 * e, 258 * e),
        r.bezierCurveTo(99 * e, 272.5 * e, 99 * e, 272.5 * e, 99 * e, 287 * e),
        r.bezierCurveTo(166 * e, 319 * e, 193 * e, 320 * e, 212 * e, 324 * e),
        r.bezierCurveTo(292 * e, 286 * e, 312 * e, 271 * e, 319 * e, 263 * e),
        r.bezierCurveTo(320 * e, 249 * e, 320 * e, 241 * e, 318 * e, 234 * e),
        r.bezierCurveTo(300 * e, 254 * e, 254 * e, 277 * e, 216 * e, 294 * e),
        r.bezierCurveTo(190 * e, 296 * e, 135 * e, 276 * e, 102 * e, 258 * e),
        r.closePath(),
        Ce(r, i[2], i[1], 14 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(212 * e, 323 * e),
        r.bezierCurveTo(211.5 * e, 310.5 * e, 211.5 * e, 310.5 * e, 211 * e, 298 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 14 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(212 * e, 210 * e),
        r.bezierCurveTo(286 * e, 210 * e, 331 * e, 254 * e, 212 * e, 276 * e),
        r.bezierCurveTo(108 * e, 276 * e, 112 * e, 222 * e, 213 * e, 208 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 14 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(98 * e, 200 * e),
        r.bezierCurveTo(126 * e, 216 * e, 177 * e, 232 * e, 213 * e, 237 * e),
        r.bezierCurveTo(266 * e, 218 * e, 288 * e, 209 * e, 318 * e, 190 * e),
        r.bezierCurveTo(269 * e, 164 * e, 239 * e, 158 * e, 214 * e, 153 * e),
        r.bezierCurveTo(148 * e, 172 * e, 131 * e, 182 * e, 98 * e, 200 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 14 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(97 * e, 204 * e),
        r.bezierCurveTo(97 * e, 215.5 * e, 97 * e, 215.5 * e, 97 * e, 227 * e),
        r.bezierCurveTo(148 * e, 250 * e, 179 * e, 256 * e, 212 * e, 262 * e),
        r.bezierCurveTo(268 * e, 244 * e, 281 * e, 233 * e, 318 * e, 214 * e),
        r.bezierCurveTo(318 * e, 203 * e, 318 * e, 203 * e, 318 * e, 192 * e),
        r.bezierCurveTo(250 * e, 225 * e, 236 * e, 231 * e, 214 * e, 239 * e),
        r.bezierCurveTo(158 * e, 228 * e, 126 * e, 215 * e, 99 * e, 201 * e),
        r.closePath(),
        Ce(r, i[2], i[1], 14 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(212 * e, 260 * e),
        r.bezierCurveTo(212 * e, 251.5 * e, 212 * e, 251.5 * e, 212 * e, 243 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 14 * e),
        we(r, 161 * e, 201 * e, 13 * e),
        Ce(r, i[5]),
        we(r, 216 * e, 205 * e, 8.06225774829855 * e),
        Ce(r, i[5]),
        we(r, 216 * e, 175 * e, 6.708203932499369 * e),
        Ce(r, i[5]),
        we(r, 271 * e, 191 * e, 5.0990195135927845 * e),
        Ce(r, i[5]),
        we(r, 206 * e, 180 * e, 11.180339887498949 * e),
        Ce(r, i[5]),
        n
    }
    function _e(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 400 * e,
        n.height = 400 * e,
        r.save(),
        r.translate(85 * e, 237 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 54.585977194239184 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(178 * e, 238 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 52.53573932334064 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(270 * e, 239 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 53.58058329516393 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(222 * e, 312 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 52.53573932334064 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(317 * e, 159 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 57.63465889766331 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(223.5 * e, 139.0625 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 51.66236541235796 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(132.5 * e, 137.0625 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 52.009614495783374 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(178.5 * e, 58.0625 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 53.16013544000805 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(177.5 * e, 216.0625 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 50 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(84.5 * e, 215.0625 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 54 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(319.5 * e, 138.0625 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 55.08175741568164 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(269.5 * e, 216.0625 * e),
        r.rotate(1.5707963267948966),
        A(r, 6, 54.589376255824725 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.save(),
        r.translate(221.5 * e, 293.0625 * e),
        r.rotate(.5235987755982988),
        A(r, 6, 49.49747468305833 * e, +e),
        r.restore(),
        Ce(r, i[1], i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(221.5 * e, 342.0625 * e),
        r.bezierCurveTo(221.5 * e, 350.5625 * e, 221.5 * e, 350.5625 * e, 221.5 * e, 359.0625 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(84.5 * e, 270.0625 * e),
        r.bezierCurveTo(84.5 * e, 277.0625 * e, 84.5 * e, 277.0625 * e, 84.5 * e, 284.0625 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 12 * e),
        r.save(),
        r.translate(84.5 * e, 215.0625 * e),
        r.rotate(.5235987755982988),
        A(r, 6, 30 * e, 15 * e),
        r.restore(),
        Ce(r, i[3]),
        r.save(),
        r.translate(177.5 * e, 215.0625 * e),
        r.rotate(.5235987755982988),
        A(r, 6, 30 * e, 15 * e),
        r.restore(),
        Ce(r, i[3]),
        r.save(),
        r.translate(222.5 * e, 294.0625 * e),
        r.rotate(.5235987755982988),
        A(r, 6, 30 * e, 15 * e),
        r.restore(),
        Ce(r, i[3]),
        r.save(),
        r.translate(270.5 * e, 216.0625 * e),
        r.rotate(.5235987755982988),
        A(r, 6, 30 * e, 15 * e),
        r.restore(),
        Ce(r, i[3]),
        r.save(),
        r.translate(320.5 * e, 134.0625 * e),
        r.rotate(.5235987755982988),
        A(r, 6, 30 * e, 15 * e),
        r.restore(),
        Ce(r, i[3]),
        r.save(),
        r.translate(224.5 * e, 138.0625 * e),
        r.rotate(.5235987755982988),
        A(r, 6, 30 * e, 15 * e),
        r.restore(),
        Ce(r, i[3]),
        r.save(),
        r.translate(133.5 * e, 137.0625 * e),
        r.rotate(.5235987755982988),
        A(r, 6, 30 * e, 15 * e),
        r.restore(),
        Ce(r, i[3]),
        r.save(),
        r.translate(178.5 * e, 56.0625 * e),
        r.rotate(.5235987755982988),
        A(r, 6, 30 * e, 15 * e),
        r.restore(),
        Ce(r, i[3]),
        n
    }
    function ue(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 52 * e,
        n.height = 65 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(9.833328247070312 * e, 12.078125 * e),
        r.bezierCurveTo(15.333328247070312 * e, 28.078125 * e, 15.333328247070312 * e, 28.078125 * e, 20.833328247070312 * e, 44.078125 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(7.8333282470703125 * e, 20.078125 * e),
        r.bezierCurveTo(16.833328247070312 * e, 32.578125 * e, 16.833328247070312 * e, 32.578125 * e, 25.833328247070312 * e, 45.078125 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(23.833328247070312 * e, 26.078125 * e),
        r.bezierCurveTo(25.833328247070312 * e, 11.078125 * e, 16.833328247070312 * e, 8.078125 * e, 14.833328247070312 * e, 7.078125 * e),
        r.bezierCurveTo(11.833328247070312 * e, 17.078125 * e, 13.833328247070312 * e, 22.078125 * e, 23.833328247070312 * e, 27.078125 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35.83332824707031 * e, 8.078125 * e),
        r.bezierCurveTo(34.83332824707031 * e, 27.078125 * e, 28.833328247070312 * e, 27.078125 * e, 23.833328247070312 * e, 28.078125 * e),
        r.bezierCurveTo(21.833328247070312 * e, 14.078125 * e, 26.833328247070312 * e, 11.078125 * e, 35.83332824707031 * e, 8.078125 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(25.833328247070312 * e, 39.078125 * e),
        r.bezierCurveTo(20.833328247070312 * e, 29.078125 * e, 14.833328247070312 * e, 27.078125 * e, 5.8333282470703125 * e, 29.078125 * e),
        r.bezierCurveTo(9.833328247070312 * e, 39.078125 * e, 16.833328247070312 * e, 42.078125 * e, 25.833328247070312 * e, 40.078125 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(42.83332824707031 * e, 23.078125 * e),
        r.bezierCurveTo(35.83332824707031 * e, 35.078125 * e, 31.833328247070312 * e, 37.078125 * e, 25.833328247070312 * e, 36.078125 * e),
        r.bezierCurveTo(25.833328247070312 * e, 24.078125 * e, 33.83332824707031 * e, 21.078125 * e, 42.83332824707031 * e, 23.078125 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(23.833328247070312 * e, 24.078125 * e),
        r.bezierCurveTo(20.833328247070312 * e, 34.078125 * e, 23.833328247070312 * e, 40.078125 * e, 27.833328247070312 * e, 43.078125 * e),
        r.bezierCurveTo(37.33332824707031 * e, 28.078125 * e, 37.33332824707031 * e, 28.078125 * e, 46.83332824707031 * e, 13.078125 * e),
        Ce(r, void 0, i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(38.83332824707031 * e, 14.078125 * e),
        r.bezierCurveTo(34.83332824707031 * e, 24.078125 * e, 34.83332824707031 * e, 24.078125 * e, 30.833328247070312 * e, 34.078125 * e),
        Ce(r, void 0, i[1], 2 * e),
        n
    }
    function le(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 170 * e,
        n.height = 173 * e,
        r.translate(5 * e, 5 * e),
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(86.25 * e, 84.953125 * e),
        r.rotate(.32),
        A(r, 7, 42.15447781671598 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(86.25 * e, 84.953125 * e),
        r.rotate(.32),
        A(r, 7, 42.15447781671598 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 4 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(86.25 * e, 84.953125 * e),
        r.rotate(.28),
        A(r, 7, 30.463092423455635 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(86.25 * e, 84.953125 * e),
        r.rotate(.28),
        A(r, 7, 30.463092423455635 * e, 10 * e),
        r.restore(),
        Ce(r, i[3], i[4], 4 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        we(r, 86.25 * e, 84.953125 * e, 18.867962264113206 * e),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        we(r, 86.25 * e, 84.953125 * e, 18.867962264113206 * e),
        Ce(r, i[5], i[6], 4 * e),
        n
    }
    function ce(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 170 * e,
        n.height = 173 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(85.25 * e, 82.953125 * e),
        r.bezierCurveTo(98.25 * e, 46.453125 * e, 98.25 * e, 46.453125 * e, 111.25 * e, 9.953125 * e),
        r.closePath(),
        Ce(r, void 0, i[0], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(111.25 * e, 8.953125 * e),
        r.bezierCurveTo(117.75 * e, 12.453125 * e, 117.75 * e, 12.453125 * e, 124.25 * e, 15.953125 * e),
        r.bezierCurveTo(113.75 * e, 39.953125 * e, 113.75 * e, 39.953125 * e, 103.25 * e, 63.953125 * e),
        r.bezierCurveTo(97.75 * e, 64.953125 * e, 97.75 * e, 64.953125 * e, 92.25 * e, 65.953125 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(111.25 * e, 8.953125 * e),
        r.bezierCurveTo(117.75 * e, 12.453125 * e, 117.75 * e, 12.453125 * e, 124.25 * e, 15.953125 * e),
        r.bezierCurveTo(113.75 * e, 39.953125 * e, 113.75 * e, 39.953125 * e, 103.25 * e, 63.953125 * e),
        r.bezierCurveTo(97.75 * e, 64.953125 * e, 97.75 * e, 64.953125 * e, 92.25 * e, 65.953125 * e),
        r.closePath(),
        Ce(r, i[7]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(85.25 * e, 82.953125 * e),
        r.bezierCurveTo(98.25 * e, 46.453125 * e, 98.25 * e, 46.453125 * e, 111.25 * e, 9.953125 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 4 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(87.25 * e, 84.953125 * e),
        r.bezierCurveTo(123.75 * e, 100.453125 * e, 123.75 * e, 100.453125 * e, 160.25 * e, 115.953125 * e),
        r.closePath(),
        Ce(r, void 0, i[0], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(160.25 * e, 114.953125 * e),
        r.bezierCurveTo(156.25 * e, 122.453125 * e, 156.25 * e, 122.453125 * e, 152.25 * e, 129.953125 * e),
        r.bezierCurveTo(130.25 * e, 117.953125 * e, 130.25 * e, 117.953125 * e, 108.25 * e, 105.953125 * e),
        r.bezierCurveTo(107.25 * e, 98.953125 * e, 107.25 * e, 98.953125 * e, 106.25 * e, 91.953125 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(160.25 * e, 114.953125 * e),
        r.bezierCurveTo(156.25 * e, 122.453125 * e, 156.25 * e, 122.453125 * e, 152.25 * e, 129.953125 * e),
        r.bezierCurveTo(130.25 * e, 117.953125 * e, 130.25 * e, 117.953125 * e, 108.25 * e, 105.953125 * e),
        r.bezierCurveTo(107.25 * e, 98.953125 * e, 107.25 * e, 98.953125 * e, 106.25 * e, 91.953125 * e),
        r.closePath(),
        Ce(r, i[7]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(87.25 * e, 84.953125 * e),
        r.bezierCurveTo(123.75 * e, 100.453125 * e, 123.75 * e, 100.453125 * e, 160.25 * e, 115.953125 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 4 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(83.25 * e, 83.953125 * e),
        r.bezierCurveTo(47.75 * e, 68.453125 * e, 47.75 * e, 68.453125 * e, 12.25 * e, 52.953125 * e),
        r.closePath(),
        Ce(r, void 0, i[0], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(13.25 * e, 53.953125 * e),
        r.bezierCurveTo(17.25 * e, 46.953125 * e, 17.25 * e, 46.953125 * e, 21.25 * e, 39.953125 * e),
        r.bezierCurveTo(42.75 * e, 52.453125 * e, 42.75 * e, 52.453125 * e, 64.25 * e, 64.953125 * e),
        r.bezierCurveTo(64.25 * e, 70.953125 * e, 64.25 * e, 70.953125 * e, 64.25 * e, 76.953125 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(13.25 * e, 53.953125 * e),
        r.bezierCurveTo(17.25 * e, 46.953125 * e, 17.25 * e, 46.953125 * e, 21.25 * e, 39.953125 * e),
        r.bezierCurveTo(42.75 * e, 52.453125 * e, 42.75 * e, 52.453125 * e, 64.25 * e, 64.953125 * e),
        r.bezierCurveTo(64.25 * e, 70.953125 * e, 64.25 * e, 70.953125 * e, 64.25 * e, 76.953125 * e),
        r.closePath(),
        Ce(r, i[7]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(83.25 * e, 83.953125 * e),
        r.bezierCurveTo(47.75 * e, 68.453125 * e, 47.75 * e, 68.453125 * e, 12.25 * e, 52.953125 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 4 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(84.25 * e, 86.953125 * e),
        r.bezierCurveTo(70.25 * e, 123.953125 * e, 70.25 * e, 123.953125 * e, 56.25 * e, 160.953125 * e),
        r.closePath(),
        Ce(r, void 0, i[0], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(56.25 * e, 159.953125 * e),
        r.bezierCurveTo(49.25 * e, 155.453125 * e, 49.25 * e, 155.453125 * e, 42.25 * e, 150.953125 * e),
        r.bezierCurveTo(54.25 * e, 127.953125 * e, 54.25 * e, 127.953125 * e, 66.25 * e, 104.953125 * e),
        r.bezierCurveTo(71.25 * e, 104.953125 * e, 71.25 * e, 104.953125 * e, 76.25 * e, 104.953125 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(56.25 * e, 159.953125 * e),
        r.bezierCurveTo(49.25 * e, 155.453125 * e, 49.25 * e, 155.453125 * e, 42.25 * e, 150.953125 * e),
        r.bezierCurveTo(54.25 * e, 127.953125 * e, 54.25 * e, 127.953125 * e, 66.25 * e, 104.953125 * e),
        r.bezierCurveTo(71.25 * e, 104.953125 * e, 71.25 * e, 104.953125 * e, 76.25 * e, 104.953125 * e),
        r.closePath(),
        Ce(r, i[7]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(84.25 * e, 86.953125 * e),
        r.bezierCurveTo(70.25 * e, 123.953125 * e, 70.25 * e, 123.953125 * e, 56.25 * e, 160.953125 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 4 * e),
        n
    }
    function Ae(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 170 * e,
        n.height = 173 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(86.25 * e, 84.953125 * e),
        A(r, 7, 9.848857801796104 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(86.25 * e, 84.953125 * e),
        A(r, 7, 9.848857801796104 * e, 5 * e),
        r.restore(),
        Ce(r, i[8], i[9], 4 * e),
        n
    }
    function Ie(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 55 * e;
        return n.width = 75 * e,
        n.height = o,
        r.translate(-30 * e, -40 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.bezierCurveTo(67 * e, 56 * e, 72 * e, 71 * e, 72 * e, 71 * e),
        r.bezierCurveTo(72 * e, 71 * e, 84 * e, 70 * e, 75 * e, 82 * e),
        r.bezierCurveTo(70 * e, 88 * e, 61 * e, 89 * e, 58 * e, 89 * e),
        r.bezierCurveTo(55 * e, 89 * e, 40 * e, 89 * e, 46 * e, 77 * e),
        r.bezierCurveTo(46 * e, 77 * e, 43 * e, 63 * e, 43 * e, 63 * e),
        r.bezierCurveTo(35 * e, 61 * e, 35 * e, 53 * e, 42 * e, 47 * e),
        r.bezierCurveTo(48 * e, 42 * e, 62 * e, 41 * e, 66 * e, 43 * e),
        r.bezierCurveTo(70 * e, 45 * e, 72 * e, 48 * e, 67 * e, 56 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.bezierCurveTo(68 * e, 61 * e, 72 * e, 76 * e, 72 * e, 76 * e),
        r.bezierCurveTo(65 * e, 85 * e, 61 * e, 85 * e, 49 * e, 83 * e),
        r.bezierCurveTo(49 * e, 83 * e, 44 * e, 63 * e, 44 * e, 63 * e),
        r.bezierCurveTo(54 * e, 63 * e, 60 * e, 63 * e, 67 * e, 55 * e),
        r.closePath(),
        Ce(r, i[1]),
        r.beginPath(),
        r.moveTo(69 * e, 65 * e),
        r.bezierCurveTo(70 * e, 61 * e, 81 * e, 66 * e, 86 * e, 66 * e),
        r.bezierCurveTo(90 * e, 66 * e, 97 * e, 63 * e, 97 * e, 56 * e),
        r.bezierCurveTo(97 * e, 50 * e, 93 * e, 47 * e, 88 * e, 44 * e),
        Ce(r, !1, i[1], 2),
        r.beginPath(),
        r.moveTo(50 * e, 48 * e),
        r.bezierCurveTo(43 * e, 52 * e, 50 * e, 54 * e, 51 * e, 54 * e),
        r.bezierCurveTo(54 * e, 54 * e, 59 * e, 52 * e, 59 * e, 49 * e),
        r.bezierCurveTo(59 * e, 48 * e, 55 * e, 46 * e, 50 * e, 48 * e),
        Ce(r, i[2]),
        n
    }
    function pe(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 195 * e
          , a = 190 * e
          , s = o / 2
          , d = a / 2
          , o = (n.width = o,
        n.height = a,
        10 * e)
          , a = 35 * e
          , _ = 150 * e
          , u = a / 2
          , l = _ / 2
          , c = 4 * e;
        return r.translate(s - 5 * e, d - 5 * e),
        r.rotate(-Math.PI / 1.25),
        r.globalAlpha = 1,
        Be(r, -u, -l, a, _, o),
        Ce(r, i[0], i[1], c),
        r.translate(0, 0),
        r.rotate(Math.PI / 3),
        r.globalAlpha = 1,
        Be(r, -u, -l, a, _, o),
        Ce(r, i[0], i[1], c),
        r.translate(0, 5),
        Be(r, -u / 2, -l / 2, a / 2, _ / 3, o - 2),
        Ce(r, i[1]),
        n
    }
    function p(e, t, i, n, r) {
        var o = document.createElement("canvas")
          , a = o.getContext("2d")
          , s = 70 * e
          , d = 70 * e
          , _ = 10 * e
          , u = 5 * e;
        o.width = s,
        o.height = d + u;
        for (var l = 0; l < t.length; l++) {
            var c = t[l]
              , h = (a.globalAlpha = c.a,
            c.f(i, !1, c.c));
            a.save(),
            a.translate(s / 2 + c.x * e, d / 2 + c.y * e),
            a.rotate(c.r),
            a.drawImage(h, -h.width / 2, -h.height / 2),
            a.restore()
        }
        for (var E = [], l = 0; l < n.length; l++) {
            var T = document.createElement("canvas")
              , A = T.getContext("2d");
            T.width = s,
            T.height = d + u,
            A.globalAlpha = r / 2,
            2 == l ? Be(A, 0, u, s, d, _) : Be(A, 0, 0, s, d + u, _),
            Ce(A, "#081a19"),
            A.globalAlpha = r,
            Be(A, 0, 2 == l ? u : 0, s, d, _),
            Ce(A, n[l]),
            A.globalAlpha = 1,
            2 == l ? A.drawImage(o, 0, u) : A.drawImage(o, 0, 0),
            E.push(g(T))
        }
        return E
    }
    function ge(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 198 * e
          , a = 140 * e
          , s = 90 * e
          , o = (n.width = 193 * e,
        n.height = o,
        10 * e)
          , d = 25 * e
          , _ = 180 * e
          , u = d / 2
          , l = _ / 2
          , c = 4 * e;
        return r.translate(-25 * e, +e),
        r.translate(a, s),
        r.rotate(-Math.PI / 5),
        Be(r, -u, -l, d, _, o),
        Ce(r, i[0], i[1], c),
        r.translate(-30 * e, -25 * e),
        r.rotate(Math.PI / 3),
        Be(r, -u, -l, d, _, o),
        Ce(r, i[0], i[1], c),
        r.translate(35 * e, 30 * e),
        r.rotate(Math.PI / 3),
        Be(r, -u, -l, d, _, o),
        Ce(r, i[0], i[1], c),
        n
    }
    function Oe(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 145 * e
          , a = 145 * e
          , s = o / 2
          , d = a / 2
          , o = (n.width = o,
        n.height = a,
        70 * e)
          , o = (r.translate(s, d),
        r.globalAlpha = .4,
        we(r, 0, 0, o),
        Ce(r, i[0]),
        50 * e)
          , o = (r.translate(0, 0),
        r.globalAlpha = .8,
        we(r, 0, 0, o),
        Ce(r, i[0]),
        35 * e)
          , o = (r.translate(0, 0),
        r.globalAlpha = .8,
        we(r, 0, 0, o),
        Ce(r, i[1]),
        20 * e);
        return r.translate(0, 0),
        r.globalAlpha = .8,
        we(r, 0, 0, o),
        Ce(r, i[2]),
        n
    }
    function be(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 135 * e
          , a = 190 * e
          , s = o / 2
          , d = a / 2
          , o = (n.width = o,
        n.height = a,
        10 * e)
          , a = 25 * e
          , _ = 180 * e
          , u = a / 2
          , l = _ / 2
          , e = 4 * e;
        return r.translate(s, d),
        r.rotate(-Math.PI / 5),
        r.globalAlpha = 1,
        Be(r, -u, -l, a, _, o),
        Ce(r, i[0], i[1], e),
        r.translate(0, 0),
        r.rotate(Math.PI / 5),
        r.globalAlpha = 1,
        Be(r, -u, -l, a, _, o),
        Ce(r, i[0], i[1], e),
        n
    }
    function me(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 205 * e
          , a = 205 * e
          , s = o / 2
          , d = a / 2
          , o = (n.width = o,
        n.height = a,
        100 * e);
        return r.translate(s, d),
        r.globalAlpha = 1,
        we(r, 0, 0, o),
        Ce(r, i[0]),
        n
    }
    function ve(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 370 * e
          , a = 370 * e
          , s = o / 2
          , d = a / 2
          , o = (n.width = o,
        n.height = a,
        180 * e);
        return r.globalAlpha = .2,
        we(r, s, d, o),
        Ce(r, i[0]),
        n
    }
    function Me(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 155 * e,
        n.height = 127 * e,
        r.globalAlpha = .5,
        r.translate(0, 8 * e),
        r.translate(-7 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55 * e, 68 * e),
        r.bezierCurveTo(86 * e, 64 * e, 117 * e, 66 * e, 134 * e, 68 * e),
        r.bezierCurveTo(152 * e, 69 * e, 165 * e, 86 * e, 152 * e, 104 * e),
        r.bezierCurveTo(146 * e, 87 * e, 122 * e, 89 * e, 98 * e, 90 * e),
        r.bezierCurveTo(64 * e, 89 * e, 41 * e, 91 * e, 36 * e, 106 * e),
        r.bezierCurveTo(19 * e, 92 * e, 31 * e, 71 * e, 54 * e, 69 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -8 * e),
        r.translate(7 * e, 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(24 * e, 28 * e),
        r.bezierCurveTo(39 * e, 30 * e, 37 * e, 31 * e, 40 * e, 32 * e),
        r.bezierCurveTo(22 * e, 45 * e, 26 * e, 58 * e, 29 * e, 66 * e),
        r.bezierCurveTo(86.5 * e, 65 * e, 86.5 * e, 65 * e, 144 * e, 64 * e),
        r.bezierCurveTo(151 * e, 42 * e, 132 * e, 20 * e, 120 * e, 16 * e),
        r.bezierCurveTo(106 * e, 12 * e, 89 * e, 0 * e, 73 * e, 3 * e),
        r.bezierCurveTo(51 * e, 5 * e, 36 * e, 20 * e, 25 * e, 28 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 41 * e),
        r.bezierCurveTo(49 * e, 31 * e, 53 * e, 29 * e, 62 * e, 27 * e),
        r.bezierCurveTo(59 * e, 24 * e, 56 * e, 25 * e, 53 * e, 24 * e),
        r.bezierCurveTo(67 * e, 15 * e, 84 * e, 12 * e, 120 * e, 16 * e),
        r.bezierCurveTo(107 * e, 11 * e, 96 * e, 6 * e, 85 * e, 2 * e),
        r.bezierCurveTo(59 * e, 3 * e, 54 * e, 7 * e, 40 * e, 17 * e),
        r.bezierCurveTo(32.5 * e, 22.5 * e, 32.5 * e, 22.5 * e, 25 * e, 28 * e),
        r.bezierCurveTo(32 * e, 30 * e, 32 * e, 30 * e, 39 * e, 32 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(24 * e, 28 * e),
        r.bezierCurveTo(39 * e, 30 * e, 37 * e, 31 * e, 40 * e, 32 * e),
        r.bezierCurveTo(22 * e, 45 * e, 26 * e, 58 * e, 29 * e, 66 * e),
        r.bezierCurveTo(86.5 * e, 65 * e, 86.5 * e, 65 * e, 144 * e, 64 * e),
        r.bezierCurveTo(151 * e, 42 * e, 132 * e, 20 * e, 120 * e, 16 * e),
        r.bezierCurveTo(106 * e, 12 * e, 89 * e, 0 * e, 73 * e, 3 * e),
        r.bezierCurveTo(51 * e, 5 * e, 36 * e, 20 * e, 25 * e, 28 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 4 * e),
        we(r, 18 * e, 38 * e, 14.866068747318506 * e),
        Ce(r, i[4], i[5], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(39 * e, 30 * e),
        r.bezierCurveTo(27 * e, 38 * e, 25 * e, 50 * e, 26 * e, 60 * e),
        r.bezierCurveTo(36.5 * e, 58.5 * e, 36.5 * e, 58.5 * e, 47 * e, 57 * e),
        Ce(r, i[1], i[2], 4 * e),
        r.translate(-7 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(27 * e, 74 * e),
        r.bezierCurveTo(38 * e, 77.5 * e, 38 * e, 77.5 * e, 49 * e, 81 * e),
        r.bezierCurveTo(54.5 * e, 75.5 * e, 54.5 * e, 75.5 * e, 60 * e, 70 * e),
        r.bezierCurveTo(64 * e, 72 * e, 64 * e, 72 * e, 68 * e, 74 * e),
        r.bezierCurveTo(80.5 * e, 67.5 * e, 80.5 * e, 67.5 * e, 93 * e, 61 * e),
        r.bezierCurveTo(104.5 * e, 68 * e, 104.5 * e, 68 * e, 116 * e, 75 * e),
        r.bezierCurveTo(120.5 * e, 72.5 * e, 120.5 * e, 72.5 * e, 125 * e, 70 * e),
        r.bezierCurveTo(129 * e, 75 * e, 129 * e, 75 * e, 133 * e, 80 * e),
        r.bezierCurveTo(145.5 * e, 76.5 * e, 145.5 * e, 76.5 * e, 158 * e, 73 * e),
        r.bezierCurveTo(158 * e, 87 * e, 158 * e, 93 * e, 155 * e, 95 * e),
        r.bezierCurveTo(152.5 * e, 96 * e, 152.5 * e, 96 * e, 150 * e, 97 * e),
        r.bezierCurveTo(121 * e, 85 * e, 108 * e, 86 * e, 93 * e, 85 * e),
        r.bezierCurveTo(64 * e, 85 * e, 52 * e, 95 * e, 38 * e, 99 * e),
        r.bezierCurveTo(36 * e, 98.5 * e, 36 * e, 98.5 * e, 34 * e, 98 * e),
        r.bezierCurveTo(25 * e, 98 * e, 27 * e, 91 * e, 27 * e, 76 * e),
        r.closePath(),
        Ce(r, i[6], i[7], 6 * e),
        n
    }
    function ye(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 155 * e,
        n.height = 127 * e,
        r.globalAlpha = .5,
        r.translate(0, 8 * e),
        r.translate(-7 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55 * e, 68 * e),
        r.bezierCurveTo(86 * e, 64 * e, 117 * e, 66 * e, 134 * e, 68 * e),
        r.bezierCurveTo(152 * e, 69 * e, 165 * e, 86 * e, 152 * e, 104 * e),
        r.bezierCurveTo(146 * e, 87 * e, 122 * e, 89 * e, 98 * e, 90 * e),
        r.bezierCurveTo(64 * e, 89 * e, 41 * e, 91 * e, 36 * e, 106 * e),
        r.bezierCurveTo(19 * e, 92 * e, 31 * e, 71 * e, 54 * e, 69 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -8 * e),
        r.translate(7 * e, 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(24 * e, 28 * e),
        r.bezierCurveTo(39 * e, 30 * e, 37 * e, 31 * e, 40 * e, 32 * e),
        r.bezierCurveTo(22 * e, 45 * e, 26 * e, 58 * e, 29 * e, 66 * e),
        r.bezierCurveTo(86.5 * e, 65 * e, 86.5 * e, 65 * e, 144 * e, 64 * e),
        r.bezierCurveTo(151 * e, 42 * e, 132 * e, 20 * e, 120 * e, 16 * e),
        r.bezierCurveTo(106 * e, 12 * e, 89 * e, 0 * e, 73 * e, 3 * e),
        r.bezierCurveTo(51 * e, 5 * e, 36 * e, 20 * e, 25 * e, 28 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 41 * e),
        r.bezierCurveTo(49 * e, 31 * e, 53 * e, 29 * e, 62 * e, 27 * e),
        r.bezierCurveTo(59 * e, 24 * e, 56 * e, 25 * e, 53 * e, 24 * e),
        r.bezierCurveTo(67 * e, 15 * e, 84 * e, 12 * e, 120 * e, 16 * e),
        r.bezierCurveTo(107 * e, 11 * e, 96 * e, 6 * e, 85 * e, 2 * e),
        r.bezierCurveTo(59 * e, 3 * e, 54 * e, 7 * e, 40 * e, 17 * e),
        r.bezierCurveTo(32.5 * e, 22.5 * e, 32.5 * e, 22.5 * e, 25 * e, 28 * e),
        r.bezierCurveTo(32 * e, 30 * e, 32 * e, 30 * e, 39 * e, 32 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(24 * e, 28 * e),
        r.bezierCurveTo(39 * e, 30 * e, 37 * e, 31 * e, 40 * e, 32 * e),
        r.bezierCurveTo(22 * e, 45 * e, 26 * e, 58 * e, 29 * e, 66 * e),
        r.bezierCurveTo(86.5 * e, 65 * e, 86.5 * e, 65 * e, 144 * e, 64 * e),
        r.bezierCurveTo(151 * e, 42 * e, 132 * e, 20 * e, 120 * e, 16 * e),
        r.bezierCurveTo(106 * e, 12 * e, 89 * e, 0 * e, 73 * e, 3 * e),
        r.bezierCurveTo(51 * e, 5 * e, 36 * e, 20 * e, 25 * e, 28 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 4 * e),
        we(r, 18 * e, 38 * e, 14.866068747318506 * e),
        Ce(r, i[4], i[5], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(39 * e, 30 * e),
        r.bezierCurveTo(27 * e, 38 * e, 25 * e, 50 * e, 26 * e, 60 * e),
        r.bezierCurveTo(36.5 * e, 58.5 * e, 36.5 * e, 58.5 * e, 47 * e, 57 * e),
        Ce(r, i[1], i[2], 4 * e),
        r.translate(-7 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55 * e, 68 * e),
        r.bezierCurveTo(86 * e, 64 * e, 117 * e, 66 * e, 134 * e, 68 * e),
        r.bezierCurveTo(152 * e, 69 * e, 165 * e, 86 * e, 152 * e, 104 * e),
        r.bezierCurveTo(146 * e, 87 * e, 122 * e, 89 * e, 98 * e, 90 * e),
        r.bezierCurveTo(64 * e, 89 * e, 41 * e, 91 * e, 36 * e, 106 * e),
        r.bezierCurveTo(19 * e, 92 * e, 31 * e, 71 * e, 54 * e, 69 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 4 * e),
        n
    }
    function Ze(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d")
          , r = 220 * e
          , o = 220 * e
          , a = 32 * e
          , s = 4 * e;
        return i.width = r,
        i.height = o,
        n.translate(r / 2, o / 2 + 10 * e),
        n.globalAlpha = .5,
        we(n, 0, 0, a),
        Ce(n, t[0], t[0]),
        n.translate(0, -8 * e),
        n.globalAlpha = 1,
        we(n, 0, 0, a),
        Ce(n, t[1], t[2], s),
        i
    }
    function $e(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d")
          , r = 40 * e
          , o = 40 * e
          , a = 16 * e
          , e = 4 * e;
        return i.width = r,
        i.height = o,
        n.translate(r / 2, o / 2),
        n.globalAlpha = 1,
        we(n, 0, 0, a),
        Ce(n, t[0], t[1], e),
        i
    }
    function Qe(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d")
          , r = 220 * e
          , o = 220 * e
          , e = 16 * e;
        return i.width = r,
        i.height = o,
        n.translate(r / 2, o / 2),
        n.globalAlpha = .5,
        we(n, 0, 0, e),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        i
    }
    function e1(e, t, i, n) {
        var r = document.createElement("canvas")
          , o = r.getContext("2d")
          , a = 210 * e
          , s = 205 * e
          , d = 30 * e
          , _ = 20 * e
          , u = 200 * e
          , l = 180 * e
          , c = u / 2
          , h = l / 2;
        return r.width = a,
        r.height = s,
        r.width = 419 * e,
        r.height = 412 * e,
        1 == n ? (o.save(),
        o.translate(10 * e, 0 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(117.99996948242188 * e, 216.40621948242188 * e),
        o.bezierCurveTo(86.99996948242188 * e, 221.40621948242188 * e, 74.99996948242188 * e, 217.40621948242188 * e, 60.999969482421875 * e, 205.40621948242188 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(114.99996948242188 * e, 227.40621948242188 * e),
        o.bezierCurveTo(90.99996948242188 * e, 233.40621948242188 * e, 66.99996948242188 * e, 228.40621948242188 * e, 43.999969482421875 * e, 225.40621948242188 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(110.99996948242188 * e, 236.40621948242188 * e),
        o.bezierCurveTo(94.99996948242188 * e, 244.40621948242188 * e, 79.99996948242188 * e, 249.40621948242188 * e, 60.999969482421875 * e, 249.40621948242188 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(111.99996948242188 * e, 206.29513549804688 * e),
        o.bezierCurveTo(91.99996948242188 * e, 206.29513549804688 * e, 87.99996948242188 * e, 201.29513549804688 * e, 79.99996948242188 * e, 192.29513549804688 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(109.99996948242188 * e, 249.18402099609375 * e),
        o.bezierCurveTo(97.99996948242188 * e, 263.18402099609375 * e, 85.99996948242188 * e, 271.18402099609375 * e, 65.99996948242188 * e, 277.18402099609375 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(105.99996948242188 * e, 192.18402099609375 * e),
        o.bezierCurveTo(99.49996948242188 * e, 197.68402099609375 * e, 99.49996948242188 * e, 197.68402099609375 * e, 92.99996948242188 * e, 203.18402099609375 * e),
        o.bezierCurveTo(95.99996948242188 * e, 213.18402099609375 * e, 95.99996948242188 * e, 215.18402099609375 * e, 89.99996948242188 * e, 219.18402099609375 * e),
        o.bezierCurveTo(91.99996948242188 * e, 223.18402099609375 * e, 91.99996948242188 * e, 226.18402099609375 * e, 87.99996948242188 * e, 230.18402099609375 * e),
        o.bezierCurveTo(89.99996948242188 * e, 234.18402099609375 * e, 91.99996948242188 * e, 237.18402099609375 * e, 90.99996948242188 * e, 244.18402099609375 * e),
        o.bezierCurveTo(96.99996948242188 * e, 252.18402099609375 * e, 96.99996948242188 * e, 256.18402099609375 * e, 95.99996948242188 * e, 262.18402099609375 * e),
        o.bezierCurveTo(106.49996948242188 * e, 264.18402099609375 * e, 106.49996948242188 * e, 264.18402099609375 * e, 116.99996948242188 * e, 266.18402099609375 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(104.99996948242188 * e, 183.29513549804688 * e),
        o.bezierCurveTo(99.99996948242188 * e, 193.29513549804688 * e, 93.99996948242188 * e, 195.29513549804688 * e, 89.99996948242188 * e, 201.29513549804688 * e),
        o.bezierCurveTo(86.99996948242188 * e, 212.29513549804688 * e, 85.99996948242188 * e, 214.29513549804688 * e, 81.99996948242188 * e, 215.29513549804688 * e),
        o.bezierCurveTo(83.99996948242188 * e, 223.29513549804688 * e, 83.99996948242188 * e, 227.29513549804688 * e, 79.99996948242188 * e, 230.29513549804688 * e),
        o.bezierCurveTo(83.99996948242188 * e, 235.29513549804688 * e, 84.99996948242188 * e, 240.29513549804688 * e, 79.99996948242188 * e, 246.29513549804688 * e),
        o.bezierCurveTo(86.99996948242188 * e, 251.29513549804688 * e, 91.99996948242188 * e, 256.2951354980469 * e, 89.99996948242188 * e, 266.2951354980469 * e),
        o.bezierCurveTo(102.99996948242188 * e, 269.2951354980469 * e, 102.99996948242188 * e, 269.2951354980469 * e, 115.99996948242188 * e, 272.2951354980469 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(107.99996948242188 * e, 177.85067749023438 * e),
        o.bezierCurveTo(95.99996948242188 * e, 187.35067749023438 * e, 95.99996948242188 * e, 187.35067749023438 * e, 83.99996948242188 * e, 196.85067749023438 * e),
        o.bezierCurveTo(82.99996948242188 * e, 203.85067749023438 * e, 80.99996948242188 * e, 209.85067749023438 * e, 72.99996948242188 * e, 210.85067749023438 * e),
        o.bezierCurveTo(73.99996948242188 * e, 220.85067749023438 * e, 73.99996948242188 * e, 221.85067749023438 * e, 66.99996948242188 * e, 227.85067749023438 * e),
        o.bezierCurveTo(71.99996948242188 * e, 235.85067749023438 * e, 73.99996948242188 * e, 239.85067749023438 * e, 71.99996948242188 * e, 247.85067749023438 * e),
        o.bezierCurveTo(80.99996948242188 * e, 257.8506774902344 * e, 81.99996948242188 * e, 263.8506774902344 * e, 77.99996948242188 * e, 271.8506774902344 * e),
        o.bezierCurveTo(95.49996948242188 * e, 272.8506774902344 * e, 95.49996948242188 * e, 272.8506774902344 * e, 112.99996948242188 * e, 273.8506774902344 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.restore()) : 2 == n && (o.save(),
        o.translate(130 * e, 35 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(170.99996948242188 * e, 133.85067749023438 * e),
        o.bezierCurveTo(195.99996948242188 * e, 129.85067749023438 * e, 196.99996948242188 * e, 111.85067749023438 * e, 200.99996948242188 * e, 88.85067749023438 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(169.99996948242188 * e, 143.85067749023438 * e),
        o.bezierCurveTo(189.99996948242188 * e, 145.85067749023438 * e, 207.99996948242188 * e, 126.85067749023438 * e, 222.99996948242188 * e, 100.85067749023438 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(170.99996948242188 * e, 157.85067749023438 * e),
        o.bezierCurveTo(193.99996948242188 * e, 160.85067749023438 * e, 210.99996948242188 * e, 151.85067749023438 * e, 232.99996948242188 * e, 139.85067749023438 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(169.99996948242188 * e, 168.85067749023438 * e),
        o.bezierCurveTo(192.99996948242188 * e, 175.85067749023438 * e, 203.99996948242188 * e, 177.85067749023438 * e, 245.99996948242188 * e, 168.85067749023438 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(167.99996948242188 * e, 168.85067749023438 * e),
        o.bezierCurveTo(183.99996948242188 * e, 189.85067749023438 * e, 191.99996948242188 * e, 193.85067749023438 * e, 220.99996948242188 * e, 196.85067749023438 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(176.99996948242188 * e, 117.85067749023438 * e),
        o.bezierCurveTo(181.99996948242188 * e, 120.85067749023438 * e, 181.99996948242188 * e, 120.85067749023438 * e, 186.99996948242188 * e, 123.85067749023438 * e),
        o.bezierCurveTo(183.99996948242188 * e, 137.85067749023438 * e, 185.99996948242188 * e, 136.85067749023438 * e, 190.99996948242188 * e, 136.85067749023438 * e),
        o.bezierCurveTo(186.99996948242188 * e, 147.85067749023438 * e, 189.99996948242188 * e, 152.85067749023438 * e, 193.99996948242188 * e, 155.85067749023438 * e),
        o.bezierCurveTo(187.99996948242188 * e, 165.85067749023438 * e, 190.99996948242188 * e, 169.85067749023438 * e, 190.99996948242188 * e, 172.85067749023438 * e),
        o.bezierCurveTo(186.99996948242188 * e, 183.85067749023438 * e, 186.99996948242188 * e, 185.85067749023438 * e, 189.99996948242188 * e, 188.85067749023438 * e),
        o.bezierCurveTo(182.49996948242188 * e, 195.35067749023438 * e, 182.49996948242188 * e, 195.35067749023438 * e, 174.99996948242188 * e, 201.85067749023438 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(176.99996948242188 * e, 112.18402099609375 * e),
        o.bezierCurveTo(183.99996948242188 * e, 119.18402099609375 * e, 186.99996948242188 * e, 117.18402099609375 * e, 192.99996948242188 * e, 116.18402099609375 * e),
        o.bezierCurveTo(191.99996948242188 * e, 126.18402099609375 * e, 193.99996948242188 * e, 130.18402099609375 * e, 199.99996948242188 * e, 130.18402099609375 * e),
        o.bezierCurveTo(194.99996948242188 * e, 145.18402099609375 * e, 197.99996948242188 * e, 147.18402099609375 * e, 201.99996948242188 * e, 153.18402099609375 * e),
        o.bezierCurveTo(196.99996948242188 * e, 164.18402099609375 * e, 197.99996948242188 * e, 169.18402099609375 * e, 201.99996948242188 * e, 174.18402099609375 * e),
        o.bezierCurveTo(194.99996948242188 * e, 184.18402099609375 * e, 196.99996948242188 * e, 187.18402099609375 * e, 200.99996948242188 * e, 193.18402099609375 * e),
        o.bezierCurveTo(185.99996948242188 * e, 195.18402099609375 * e, 181.99996948242188 * e, 201.18402099609375 * e, 174.99996948242188 * e, 210.18402099609375 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(176.99996948242188 * e, 101.29513549804688 * e),
        o.bezierCurveTo(181.99996948242188 * e, 108.29513549804688 * e, 189.99996948242188 * e, 110.29513549804688 * e, 195.99996948242188 * e, 107.29513549804688 * e),
        o.bezierCurveTo(197.99996948242188 * e, 121.29513549804688 * e, 200.99996948242188 * e, 122.29513549804688 * e, 206.99996948242188 * e, 122.29513549804688 * e),
        o.bezierCurveTo(201.99996948242188 * e, 138.29513549804688 * e, 204.99996948242188 * e, 142.29513549804688 * e, 211.99996948242188 * e, 148.29513549804688 * e),
        o.bezierCurveTo(201.99996948242188 * e, 156.29513549804688 * e, 205.99996948242188 * e, 167.29513549804688 * e, 213.99996948242188 * e, 173.29513549804688 * e),
        o.bezierCurveTo(204.99996948242188 * e, 181.29513549804688 * e, 204.99996948242188 * e, 187.29513549804688 * e, 205.99996948242188 * e, 193.29513549804688 * e),
        o.bezierCurveTo(190.99996948242188 * e, 198.29513549804688 * e, 181.99996948242188 * e, 205.29513549804688 * e, 174.99996948242188 * e, 214.29513549804688 * e),
        Ce(o, void 0, t[4], 3 * e),
        o.restore()),
        o.translate(r.width / 2, r.height / 2),
        n || (o.globalAlpha = .5,
        Be(o, -c, -h, u, l + _, d),
        Ce(o, t[0]),
        i && o.rotate(Math.PI),
        o.globalAlpha = 1,
        Be(o, -c, -h, u, l, d),
        Ce(o, t[1], t[2], 4),
        o.globalAlpha = 1,
        Be(o, 35 * e - c, 20 * e - h, u - 50 * e, l - 50 * e, d - 10 * e),
        Ce(o, t[3])),
        3 == n ? (o.translate(-r.width / 2, -r.height / 2),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(121 * e, 190 * e),
        o.bezierCurveTo(129 * e, 186 * e, 137 * e, 183 * e, 135 * e, 163 * e),
        o.bezierCurveTo(131 * e, 135 * e, 153 * e, 127 * e, 177 * e, 124 * e),
        o.bezierCurveTo(198 * e, 120 * e, 208 * e, 122 * e, 226 * e, 128 * e),
        o.bezierCurveTo(261 * e, 112 * e, 271 * e, 126 * e, 287 * e, 147 * e),
        o.bezierCurveTo(310 * e, 163 * e, 304 * e, 183 * e, 283 * e, 196 * e),
        o.bezierCurveTo(296 * e, 249 * e, 278 * e, 262 * e, 253 * e, 263 * e),
        o.bezierCurveTo(210 * e, 264 * e, 188 * e, 252 * e, 177 * e, 234 * e),
        o.bezierCurveTo(133 * e, 242 * e, 123 * e, 241 * e, 115 * e, 225 * e),
        o.bezierCurveTo(109 * e, 206 * e, 115 * e, 193 * e, 121 * e, 190 * e),
        o.closePath(),
        Ce(o, t[4]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(219 * e, 144 * e),
        o.bezierCurveTo(251 * e, 121 * e, 277 * e, 136 * e, 276 * e, 159 * e),
        o.bezierCurveTo(276 * e, 176 * e, 273 * e, 191 * e, 242 * e, 193 * e),
        o.bezierCurveTo(226 * e, 228 * e, 155 * e, 219 * e, 150 * e, 183 * e),
        o.bezierCurveTo(142 * e, 144 * e, 174 * e, 127 * e, 219 * e, 144 * e),
        o.closePath(),
        Ce(o, t[5]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(123 * e, 214 * e),
        o.bezierCurveTo(119 * e, 198 * e, 129 * e, 189 * e, 146 * e, 194 * e),
        o.bezierCurveTo(158 * e, 201 * e, 165 * e, 218 * e, 147 * e, 226 * e),
        o.bezierCurveTo(135 * e, 230 * e, 125 * e, 222 * e, 123 * e, 214 * e),
        o.closePath(),
        Ce(o, t[5]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(257 * e, 199 * e),
        o.bezierCurveTo(264 * e, 199 * e, 275 * e, 213 * e, 261 * e, 220 * e),
        o.bezierCurveTo(246 * e, 225 * e, 235 * e, 200 * e, 257 * e, 199 * e),
        o.closePath(),
        Ce(o, t[5]),
        o.translate(-5 * e, 55 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(186 * e, 123 * e),
        o.bezierCurveTo(198 * e, 115 * e, 219 * e, 110 * e, 219 * e, 123 * e),
        o.bezierCurveTo(216 * e, 135 * e, 171 * e, 143 * e, 186 * e, 123 * e),
        o.closePath(),
        Ce(o, t[5]),
        o.translate(5 * e, -55 * e),
        o.translate(-5 * e, 15 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(171 * e, 241 * e),
        o.bezierCurveTo(189 * e, 234 * e, 200 * e, 248 * e, 189 * e, 254 * e),
        o.bezierCurveTo(179 * e, 260 * e, 158 * e, 246 * e, 171 * e, 241 * e),
        o.closePath(),
        Ce(o, t[5])) : 4 == n && (o.translate(-r.width / 2, -r.height / 2),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(30 * e, 167 * e),
        o.bezierCurveTo(47 * e, 144 * e, 64 * e, 140 * e, 80 * e, 147 * e),
        o.bezierCurveTo(95 * e, 154 * e, 95 * e, 159 * e, 100 * e, 179 * e),
        o.bezierCurveTo(105 * e, 202 * e, 95 * e, 218 * e, 69 * e, 218 * e),
        o.bezierCurveTo(48 * e, 236 * e, 26 * e, 223 * e, 28 * e, 213 * e),
        o.bezierCurveTo(28 * e, 205 * e, 29 * e, 199 * e, 32 * e, 195 * e),
        o.bezierCurveTo(21 * e, 183 * e, 27 * e, 173 * e, 30 * e, 167 * e),
        o.closePath(),
        Ce(o, t[4]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(26 * e, 145 * e),
        o.bezierCurveTo(32 * e, 138 * e, 37 * e, 137 * e, 40 * e, 139 * e),
        o.bezierCurveTo(43 * e, 140 * e, 41 * e, 150 * e, 31 * e, 159 * e),
        o.bezierCurveTo(23 * e, 166 * e, 17 * e, 158 * e, 26 * e, 145 * e),
        o.closePath(),
        Ce(o, t[4]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(13 * e, 193 * e),
        o.bezierCurveTo(21 * e, 187 * e, 30 * e, 190 * e, 20 * e, 202 * e),
        o.bezierCurveTo(13 * e, 208 * e, 7 * e, 202 * e, 13 * e, 193 * e),
        o.closePath(),
        Ce(o, t[4]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(121 * e, 190 * e),
        o.bezierCurveTo(129 * e, 186 * e, 137 * e, 183 * e, 135 * e, 163 * e),
        o.bezierCurveTo(131 * e, 135 * e, 153 * e, 127 * e, 177 * e, 124 * e),
        o.bezierCurveTo(198 * e, 120 * e, 208 * e, 122 * e, 226 * e, 128 * e),
        o.bezierCurveTo(261 * e, 112 * e, 271 * e, 126 * e, 287 * e, 147 * e),
        o.bezierCurveTo(310 * e, 163 * e, 304 * e, 183 * e, 283 * e, 196 * e),
        o.bezierCurveTo(296 * e, 249 * e, 278 * e, 262 * e, 253 * e, 263 * e),
        o.bezierCurveTo(210 * e, 264 * e, 188 * e, 252 * e, 177 * e, 234 * e),
        o.bezierCurveTo(133 * e, 242 * e, 123 * e, 241 * e, 115 * e, 225 * e),
        o.bezierCurveTo(109 * e, 206 * e, 115 * e, 193 * e, 121 * e, 190 * e),
        o.closePath(),
        Ce(o, t[4]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(335 * e, 196 * e),
        o.bezierCurveTo(312 * e, 208 * e, 300 * e, 185 * e, 309 * e, 167 * e),
        o.bezierCurveTo(314 * e, 141 * e, 339 * e, 127 * e, 359 * e, 144 * e),
        o.bezierCurveTo(363 * e, 148 * e, 364 * e, 150 * e, 364 * e, 150 * e),
        o.bezierCurveTo(392 * e, 143 * e, 396 * e, 183 * e, 378 * e, 204 * e),
        o.bezierCurveTo(367 * e, 215 * e, 339 * e, 208 * e, 335 * e, 196 * e),
        o.closePath(),
        Ce(o, t[4]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(349 * e, 212 * e),
        o.bezierCurveTo(339 * e, 216 * e, 334 * e, 208 * e, 341 * e, 203 * e),
        o.bezierCurveTo(353 * e, 198 * e, 361 * e, 205 * e, 349 * e, 212 * e),
        o.closePath(),
        Ce(o, t[4]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(46 * e, 165 * e),
        o.bezierCurveTo(55 * e, 148 * e, 85 * e, 157 * e, 83 * e, 175 * e),
        o.bezierCurveTo(99 * e, 185 * e, 89 * e, 212 * e, 66 * e, 204 * e),
        o.bezierCurveTo(55 * e, 212 * e, 43 * e, 212 * e, 41 * e, 202 * e),
        o.bezierCurveTo(39 * e, 194 * e, 42 * e, 187 * e, 49 * e, 185 * e),
        o.bezierCurveTo(44 * e, 175 * e, 45 * e, 172 * e, 46 * e, 165 * e),
        o.closePath(),
        Ce(o, t[4]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(219 * e, 144 * e),
        o.bezierCurveTo(251 * e, 121 * e, 277 * e, 136 * e, 276 * e, 159 * e),
        o.bezierCurveTo(276 * e, 176 * e, 273 * e, 191 * e, 242 * e, 193 * e),
        o.bezierCurveTo(226 * e, 228 * e, 155 * e, 219 * e, 150 * e, 183 * e),
        o.bezierCurveTo(142 * e, 144 * e, 174 * e, 127 * e, 219 * e, 144 * e),
        o.closePath(),
        Ce(o, t[5]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(123 * e, 214 * e),
        o.bezierCurveTo(119 * e, 198 * e, 129 * e, 189 * e, 146 * e, 194 * e),
        o.bezierCurveTo(158 * e, 201 * e, 165 * e, 218 * e, 147 * e, 226 * e),
        o.bezierCurveTo(135 * e, 230 * e, 125 * e, 222 * e, 123 * e, 214 * e),
        o.closePath(),
        Ce(o, t[5]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(257 * e, 199 * e),
        o.bezierCurveTo(264 * e, 199 * e, 275 * e, 213 * e, 261 * e, 220 * e),
        o.bezierCurveTo(246 * e, 225 * e, 235 * e, 200 * e, 257 * e, 199 * e),
        o.closePath(),
        Ce(o, t[5]),
        o.translate(-5 * e, 55 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(186 * e, 123 * e),
        o.bezierCurveTo(198 * e, 115 * e, 219 * e, 110 * e, 219 * e, 123 * e),
        o.bezierCurveTo(216 * e, 135 * e, 171 * e, 143 * e, 186 * e, 123 * e),
        o.closePath(),
        Ce(o, t[5]),
        o.translate(5 * e, -55 * e),
        o.translate(-5 * e, 15 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(171 * e, 241 * e),
        o.bezierCurveTo(189 * e, 234 * e, 200 * e, 248 * e, 189 * e, 254 * e),
        o.bezierCurveTo(179 * e, 260 * e, 158 * e, 246 * e, 171 * e, 241 * e),
        o.closePath(),
        Ce(o, t[5]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(367 * e, 164 * e),
        o.bezierCurveTo(380 * e, 160 * e, 391 * e, 185 * e, 371 * e, 189 * e),
        o.bezierCurveTo(362 * e, 192 * e, 354 * e, 191 * e, 350 * e, 185 * e),
        o.bezierCurveTo(326 * e, 205 * e, 314 * e, 182 * e, 316 * e, 171 * e),
        o.bezierCurveTo(317 * e, 150 * e, 332 * e, 143 * e, 347 * e, 147 * e),
        o.bezierCurveTo(361 * e, 151 * e, 366 * e, 158 * e, 367 * e, 164 * e),
        o.closePath(),
        Ce(o, t[4])),
        r
    }
    function t1(e, t, i, n) {
        var r = document.createElement("canvas")
          , o = r.getContext("2d");
        return r.width = 121 * e,
        r.height = 130 * e,
        o.translate(0, 20 * e),
        1 == i && (o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(6 * e, 23 * e),
        o.bezierCurveTo(6 * e, 46 * e, 6 * e, 46 * e, 6 * e, 69 * e),
        o.bezierCurveTo(21 * e, 69 * e, 21 * e, 69 * e, 36 * e, 69 * e),
        o.bezierCurveTo(45.5 * e, 78.5 * e, 45.5 * e, 78.5 * e, 55 * e, 88 * e),
        o.bezierCurveTo(55.5 * e, 45.5 * e, 55.5 * e, 45.5 * e, 56 * e, 3 * e),
        o.bezierCurveTo(47 * e, 14 * e, 47 * e, 14 * e, 38 * e, 25 * e),
        o.bezierCurveTo(23 * e, 25 * e, 23 * e, 25 * e, 6 * e, 23 * e),
        o.closePath(),
        Ce(o, void 0, t[3], 13 * e)),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(6 * e, 23 * e),
        o.bezierCurveTo(6 * e, 46 * e, 6 * e, 46 * e, 6 * e, 69 * e),
        o.bezierCurveTo(21 * e, 69 * e, 21 * e, 69 * e, 36 * e, 69 * e),
        o.bezierCurveTo(45.5 * e, 78.5 * e, 45.5 * e, 78.5 * e, 55 * e, 88 * e),
        o.bezierCurveTo(55.5 * e, 45.5 * e, 55.5 * e, 45.5 * e, 56 * e, 3 * e),
        o.bezierCurveTo(47 * e, 14 * e, 47 * e, 14 * e, 38 * e, 25 * e),
        o.bezierCurveTo(23 * e, 25 * e, 23 * e, 25 * e, 6 * e, 23 * e),
        o.closePath(),
        Ce(o, t[1], t[2], 4 * e),
        1 == n ? (o.translate(0, 5 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(67 * e, 30 * e),
        o.bezierCurveTo(73 * e, 47 * e, 69 * e, 45 * e, 67 * e, 58 * e),
        Ce(o, void 0, t[0], 10 * e),
        o.translate(3, 0 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(70 * e, 17 * e),
        o.bezierCurveTo(83 * e, 45 * e, 76 * e, 55 * e, 70 * e, 69 * e),
        Ce(o, void 0, t[0], 10 * e),
        o.translate(3, 0 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(76 * e, 8 * e),
        o.bezierCurveTo(88 * e, 31 * e, 89 * e, 55 * e, 76 * e, 79 * e),
        Ce(o, void 0, t[0], 10 * e),
        1 == i ? (o.translate(-6 * e, -5 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(67 * e, 30 * e),
        o.bezierCurveTo(73 * e, 47 * e, 69 * e, 45 * e, 67 * e, 58 * e),
        Ce(o, void 0, t[3], 18 * e),
        o.translate(3, 0 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(70 * e, 17 * e),
        o.bezierCurveTo(83 * e, 45 * e, 76 * e, 55 * e, 70 * e, 69 * e),
        Ce(o, void 0, t[3], 18 * e),
        o.translate(3, 0 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(76 * e, 8 * e),
        o.bezierCurveTo(88 * e, 31 * e, 89 * e, 55 * e, 76 * e, 79 * e),
        Ce(o, void 0, t[3], 18 * e),
        o.translate(-6, 0 * e)) : o.translate(-6 * e, -5 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(67 * e, 30 * e),
        o.bezierCurveTo(73 * e, 47 * e, 69 * e, 45 * e, 67 * e, 58 * e),
        Ce(o, void 0, t[2], 10 * e),
        o.translate(3, 0 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(70 * e, 17 * e),
        o.bezierCurveTo(83 * e, 45 * e, 76 * e, 55 * e, 70 * e, 69 * e),
        Ce(o, void 0, t[2], 10 * e),
        o.translate(3, 0 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(76 * e, 8 * e),
        o.bezierCurveTo(88 * e, 31 * e, 89 * e, 55 * e, 76 * e, 79 * e),
        Ce(o, void 0, t[2], 10 * e)) : (1 == i ? (o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(108 * e, 27 * e),
        o.bezierCurveTo(94 * e, 45.5 * e, 94 * e, 45.5 * e, 80 * e, 64 * e),
        o.closePath(),
        Ce(o, void 0, t[3], 18 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(79 * e, 30 * e),
        o.bezierCurveTo(93 * e, 47 * e, 93 * e, 47 * e, 107 * e, 64 * e),
        o.closePath(),
        Ce(o, void 0, t[3], 18 * e)) : (o.translate(0, -5 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(108 * e, 27 * e),
        o.bezierCurveTo(94 * e, 45.5 * e, 94 * e, 45.5 * e, 80 * e, 64 * e),
        o.closePath(),
        Ce(o, void 0, t[0], 7 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(79 * e, 30 * e),
        o.bezierCurveTo(93 * e, 47 * e, 93 * e, 47 * e, 107 * e, 64 * e),
        o.closePath(),
        Ce(o, void 0, t[0], 7 * e),
        o.translate(0, 5 * e)),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(108 * e, 27 * e),
        o.bezierCurveTo(94 * e, 45.5 * e, 94 * e, 45.5 * e, 80 * e, 64 * e),
        o.closePath(),
        Ce(o, void 0, t[2], 7 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(79 * e, 30 * e),
        o.bezierCurveTo(93 * e, 47 * e, 93 * e, 47 * e, 107 * e, 64 * e),
        o.closePath(),
        Ce(o, void 0, t[2], 7 * e)),
        r
    }
    function i1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 450 * e
          , a = 145 * e
          , s = o / 2
          , d = a / 2
          , _ = 10 * e
          , u = 300 * e
          , l = 30 * e
          , c = u / 2
          , h = l / 2;
        return i ? (a = 450 * e,
        n.width = o = 145 * e,
        n.height = a,
        r.rotate(Math.PI / 2),
        r.save(),
        r.globalAlpha = .5,
        Be(r, 100 * e, -110 * e, u, l, _),
        Ce(r, t[0]),
        r.translate(178 * e, -98 * e),
        Be(r, -c, -h - 6 * e, 100 * e, 100 * e, _),
        Ce(r, t[0]),
        r.translate(-50 * e, 5 * e),
        Be(r, 220 * e, -15 * e, 90 * e, 90 * e, _),
        Ce(r, t[0]),
        r.restore(),
        r.save(),
        r.globalAlpha = 1,
        r.translate(250 * e, -63 * e),
        Be(r, -c - 20 * e, -h, u, l, _),
        Ce(r, t[1], t[2], 4),
        r.translate(-70 * e, -40 * e),
        Be(r, -c - 20 * e, -h, 100 * e, 100 * e, _),
        Ce(r, t[3], t[4], 4),
        r.translate(-70 * e, 15 * e),
        Be(r, 220 * e, -22 * e, 90 * e, 90 * e, _),
        Ce(r, t[3], t[4], 4),
        Be(r, 230 * e, -12 * e, 55 * e, 55 * e, _),
        Ce(r, t[5]),
        r.translate(-70 * e, 0),
        Be(r, -15 * e, -2 * e, 60 * e, 60 * e, _)) : (n.width = o,
        n.height = a,
        r.save(),
        r.globalAlpha = .5,
        r.translate(s, d + 10 * e),
        Be(r, -c, -h, u, l, _),
        Ce(r, t[0]),
        r.translate(-65 * e, -25 * e),
        Be(r, -c, -h - 6 * e, 100 * e, 100 * e, 15 * e),
        Ce(r, t[0]),
        r.translate(-35 * e, -5 * e),
        Be(r, 220 * e, -15 * e, 90 * e, 90 * e, 15 * e),
        Ce(r, t[0]),
        r.restore(),
        r.save(),
        r.globalAlpha = 1,
        r.translate(240 * e, 70 * e),
        Be(r, -c, -h, u, l, _),
        Ce(r, t[1], t[2], 4),
        r.translate(-60 * e, -40 * e),
        Be(r, -c - 20 * e, -h, 100 * e, 100 * e, 15 * e),
        Ce(r, t[3], t[4], 4),
        r.translate(-55 * e, 10 * e),
        Be(r, 220 * e, -22 * e, 90 * e, 90 * e, 15 * e),
        Ce(r, t[3], t[4], 4),
        Be(r, 240 * e, -12 * e, 55 * e, 55 * e, 12 * e),
        Ce(r, t[5]),
        r.translate(45 * e, 0 * e),
        Be(r, -145 * e, -2 * e, 60 * e, 60 * e, 12 * e)),
        Ce(r, t[5]),
        r.restore(),
        n
    }
    function n1(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d")
          , r = Math.max(t.width, e.width)
          , o = Math.max(t.height, e.height);
        return i.width = r,
        i.height = o,
        n.drawImage(e, (r - e.width) / 2, (o - e.height) / 2),
        n.drawImage(t, (r - t.width) / 2, (o - t.height) / 2),
        i
    }
    function r1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 105 * e
          , a = 125 * e
          , s = 4 * e
          , d = 10 * e
          , _ = 5 * e
          , u = 10 * e
          , l = 110 * e
          , c = u / 2
          , h = l / 2;
        return n.width = o,
        n.height = a,
        r.save(),
        r.globalAlpha = t ? .5 : 1,
        r.translate(o / 2 + 8 * e, a / 2 + _),
        Be(r, -c, -h, u, l, d),
        Ce(r, t ? i[0] : i[1]),
        r.translate(-130 * e + _, -128 * e + _),
        r.beginPath(),
        r.bezierCurveTo(159 * e, 93 * e, 156 * e, 99 * e, 154 * e, 102 * e),
        r.bezierCurveTo(128 * e, 92 * e, 90 * e, 93 * e, 72 * e, 96 * e),
        r.bezierCurveTo(68 * e, 84 * e, 143 * e, 73 * e, 162 * e, 86 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.restore(),
        r.translate(o / 2 + 8, a / 2),
        r.globalAlpha = 1,
        Be(r, -c, -h, u, l, d),
        Ce(r, i[3], i[4], s),
        r.translate(-130 * e, -125 * e),
        r.beginPath(),
        r.bezierCurveTo(159 * e, 93 * e, 156 * e, 99 * e, 154 * e, 102 * e),
        r.bezierCurveTo(128 * e, 92 * e, 90 * e, 93 * e, 72 * e, 96 * e),
        r.bezierCurveTo(68 * e, 84 * e, 143 * e, 73 * e, 162 * e, 86 * e),
        r.closePath(),
        Ce(r, i[5], i[6], s),
        n
    }
    function o1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 170 * e,
        n.height = 469 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(20 * e, 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(88 * e, 30 * e),
        r.bezierCurveTo(96 * e, 49.5 * e, 96 * e, 49.5 * e, 104 * e, 69 * e),
        r.bezierCurveTo(105.5 * e, 41.5 * e, 105.5 * e, 41.5 * e, 107 * e, 14 * e),
        r.bezierCurveTo(114 * e, 9.5 * e, 114 * e, 9.5 * e, 121 * e, 5 * e),
        r.bezierCurveTo(135.5 * e, 27.5 * e, 135.5 * e, 27.5 * e, 150 * e, 50 * e),
        r.bezierCurveTo(110.5 * e, 286 * e, 110.5 * e, 286 * e, 103 * e, 331 * e),
        r.bezierCurveTo(69.5 * e, 325 * e, 69.5 * e, 325 * e, 36 * e, 319 * e),
        r.bezierCurveTo(56.5 * e, 180 * e, 56.5 * e, 180 * e, 77 * e, 41 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(118 * e, 31 * e),
        r.bezierCurveTo(125 * e, 43 * e, 125 * e, 43 * e, 132 * e, 55 * e),
        r.bezierCurveTo(109.5 * e, 185.5 * e, 109.5 * e, 185.5 * e, 87 * e, 316 * e),
        r.bezierCurveTo(72 * e, 313.5 * e, 72 * e, 313.5 * e, 57 * e, 311 * e),
        r.bezierCurveTo(76.5 * e, 181 * e, 76.5 * e, 181 * e, 96 * e, 51 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(56 * e, 328 * e),
        r.bezierCurveTo(47 * e, 385.5 * e, 47 * e, 385.5 * e, 38 * e, 443 * e),
        r.bezierCurveTo(52 * e, 446 * e, 52 * e, 446 * e, 66 * e, 449 * e),
        r.bezierCurveTo(76.5 * e, 388.5 * e, 76.5 * e, 388.5 * e, 87 * e, 328 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(74 * e, 302 * e),
        r.bezierCurveTo(104 * e, 316.5 * e, 104 * e, 316.5 * e, 134 * e, 331 * e),
        r.bezierCurveTo(133 * e, 341 * e, 133 * e, 341 * e, 132 * e, 351 * e),
        r.bezierCurveTo(69.5 * e, 342 * e, 69.5 * e, 342 * e, 7 * e, 333 * e),
        r.bezierCurveTo(8 * e, 323 * e, 8 * e, 323 * e, 9 * e, 313 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.save(),
        r.translate(51.5 * e, 440.5 * e),
        r.rotate(.2),
        Be(r, -20.5 * e, -18.5 * e, 41 * e, 37 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(73 * e, 316 * e),
        r.bezierCurveTo(90 * e, 324.5 * e, 90 * e, 324.5 * e, 107 * e, 333 * e),
        r.bezierCurveTo(70 * e, 327.5 * e, 70 * e, 327.5 * e, 33 * e, 322 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-20 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(88 * e, 30 * e),
        r.bezierCurveTo(96 * e, 49.5 * e, 96 * e, 49.5 * e, 104 * e, 69 * e),
        r.bezierCurveTo(105.5 * e, 41.5 * e, 105.5 * e, 41.5 * e, 107 * e, 14 * e),
        r.bezierCurveTo(114 * e, 9.5 * e, 114 * e, 9.5 * e, 121 * e, 5 * e),
        r.bezierCurveTo(135.5 * e, 27.5 * e, 135.5 * e, 27.5 * e, 150 * e, 50 * e),
        r.bezierCurveTo(110.5 * e, 286 * e, 110.5 * e, 286 * e, 103 * e, 331 * e),
        r.bezierCurveTo(69.5 * e, 325 * e, 69.5 * e, 325 * e, 36 * e, 319 * e),
        r.bezierCurveTo(56.5 * e, 180 * e, 56.5 * e, 180 * e, 77 * e, 41 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(118 * e, 31 * e),
        r.bezierCurveTo(125 * e, 43 * e, 125 * e, 43 * e, 132 * e, 55 * e),
        r.bezierCurveTo(109.5 * e, 185.5 * e, 109.5 * e, 185.5 * e, 87 * e, 316 * e),
        r.bezierCurveTo(72 * e, 313.5 * e, 72 * e, 313.5 * e, 57 * e, 311 * e),
        r.bezierCurveTo(76.5 * e, 181 * e, 76.5 * e, 181 * e, 96 * e, 51 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(88 * e, 30 * e),
        r.bezierCurveTo(96 * e, 49.5 * e, 96 * e, 49.5 * e, 104 * e, 69 * e),
        r.bezierCurveTo(105.5 * e, 41.5 * e, 105.5 * e, 41.5 * e, 107 * e, 14 * e),
        r.bezierCurveTo(114 * e, 9.5 * e, 114 * e, 9.5 * e, 121 * e, 5 * e),
        r.bezierCurveTo(135.5 * e, 27.5 * e, 135.5 * e, 27.5 * e, 150 * e, 50 * e),
        r.bezierCurveTo(110.5 * e, 286 * e, 110.5 * e, 286 * e, 103 * e, 331 * e),
        r.bezierCurveTo(69.5 * e, 325 * e, 69.5 * e, 325 * e, 36 * e, 319 * e),
        r.bezierCurveTo(56.5 * e, 180 * e, 56.5 * e, 180 * e, 77 * e, 41 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(56 * e, 328 * e),
        r.bezierCurveTo(47 * e, 385.5 * e, 47 * e, 385.5 * e, 38 * e, 443 * e),
        r.bezierCurveTo(52 * e, 446 * e, 52 * e, 446 * e, 66 * e, 449 * e),
        r.bezierCurveTo(76.5 * e, 388.5 * e, 76.5 * e, 388.5 * e, 87 * e, 328 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(74 * e, 302 * e),
        r.bezierCurveTo(104 * e, 316.5 * e, 104 * e, 316.5 * e, 134 * e, 331 * e),
        r.bezierCurveTo(133 * e, 341 * e, 133 * e, 341 * e, 132 * e, 351 * e),
        r.bezierCurveTo(69.5 * e, 342 * e, 69.5 * e, 342 * e, 7 * e, 333 * e),
        r.bezierCurveTo(8 * e, 323 * e, 8 * e, 323 * e, 9 * e, 313 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 7 * e),
        r.save(),
        r.translate(51.5 * e, 440.5 * e),
        r.rotate(.2),
        Be(r, -20.5 * e, -18.5 * e, 41 * e, 37 * e, 10 * e),
        r.restore(),
        Ce(r, i[4], i[5], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(73 * e, 316 * e),
        r.bezierCurveTo(90 * e, 324.5 * e, 90 * e, 324.5 * e, 107 * e, 333 * e),
        r.bezierCurveTo(70 * e, 327.5 * e, 70 * e, 327.5 * e, 33 * e, 322 * e),
        r.closePath(),
        Ce(r, i[6]),
        n
    }
    function a1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 424 * e,
        n.height = 788 * e,
        r.translate(25 * e, 25 * e),
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(193.5 * e, 602.5 * e),
        r.rotate(-.12),
        Be(r, -26.5 * e, -97.5 * e, 53 * e, 195 * e, 25 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(137 * e, 519 * e),
        r.bezierCurveTo(182 * e, 513 * e, 182 * e, 513 * e, 227 * e, 507 * e),
        r.bezierCurveTo(214 * e, 417 * e, 189 * e, 304 * e, 221 * e, 180 * e),
        r.bezierCurveTo(191 * e, 126 * e, 192 * e, 105 * e, 198 * e, 64 * e),
        r.bezierCurveTo(123 * e, 102 * e, 99 * e, 285 * e, 137 * e, 517 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(175 * e, 119 * e),
        r.bezierCurveTo(176 * e, 142 * e, 184 * e, 165 * e, 197 * e, 183 * e),
        r.bezierCurveTo(167 * e, 325 * e, 191 * e, 405 * e, 202 * e, 502 * e),
        r.bezierCurveTo(180 * e, 503 * e, 180 * e, 503 * e, 158 * e, 504 * e),
        r.bezierCurveTo(135 * e, 396 * e, 134 * e, 185 * e, 175 * e, 119 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(110 * e, 518 * e),
        r.bezierCurveTo(111.5 * e, 533 * e, 111.5 * e, 533 * e, 113 * e, 548 * e),
        r.bezierCurveTo(162.5 * e, 544 * e, 162.5 * e, 544 * e, 212 * e, 540 * e),
        r.bezierCurveTo(312 * e, 535 * e, 281 * e, 665 * e, 225 * e, 665 * e),
        r.bezierCurveTo(227 * e, 686.5 * e, 227 * e, 686.5 * e, 229 * e, 708 * e),
        r.bezierCurveTo(343 * e, 684 * e, 354 * e, 496 * e, 222 * e, 498 * e),
        r.bezierCurveTo(165.5 * e, 503 * e, 165.5 * e, 503 * e, 109 * e, 508 * e),
        r.closePath(),
        Ce(r, i[0]),
        we(r, 204 * e, 693 * e, 36.013886210738214 * e),
        Ce(r, i[0]),
        we(r, 105 * e, 518 * e, 30 * e),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(171 * e, 535 * e),
        r.bezierCurveTo(139.5 * e, 537.5 * e, 139.5 * e, 537.5 * e, 108 * e, 540 * e),
        r.bezierCurveTo(110 * e, 527.5 * e, 110 * e, 527.5 * e, 112 * e, 515 * e),
        r.bezierCurveTo(148 * e, 513 * e, 148 * e, 513 * e, 184 * e, 511 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(244 * e, 669 * e),
        r.bezierCurveTo(248.5 * e, 680 * e, 248.5 * e, 680 * e, 253 * e, 691 * e),
        r.bezierCurveTo(239.5 * e, 697 * e, 239.5 * e, 697 * e, 226 * e, 703 * e),
        r.bezierCurveTo(223 * e, 691.5 * e, 223 * e, 691.5 * e, 220 * e, 680 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(-25 * e, -25 * e),
        r.globalAlpha = 1,
        r.save(),
        r.translate(193.5 * e, 602.5 * e),
        r.rotate(-.12),
        Be(r, -26.5 * e, -97.5 * e, 53 * e, 195 * e, 25 * e),
        r.restore(),
        Ce(r, i[1], i[2], 16 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(137 * e, 519 * e),
        r.bezierCurveTo(182 * e, 513 * e, 182 * e, 513 * e, 227 * e, 507 * e),
        r.bezierCurveTo(214 * e, 417 * e, 189 * e, 304 * e, 221 * e, 180 * e),
        r.bezierCurveTo(191 * e, 126 * e, 192 * e, 105 * e, 198 * e, 64 * e),
        r.bezierCurveTo(123 * e, 102 * e, 99 * e, 285 * e, 137 * e, 517 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 16 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(175 * e, 119 * e),
        r.bezierCurveTo(176 * e, 142 * e, 184 * e, 165 * e, 197 * e, 183 * e),
        r.bezierCurveTo(167 * e, 325 * e, 191 * e, 405 * e, 202 * e, 502 * e),
        r.bezierCurveTo(180 * e, 503 * e, 180 * e, 503 * e, 158 * e, 504 * e),
        r.bezierCurveTo(135 * e, 396 * e, 134 * e, 185 * e, 175 * e, 119 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(110 * e, 518 * e),
        r.bezierCurveTo(111.5 * e, 533 * e, 111.5 * e, 533 * e, 113 * e, 548 * e),
        r.bezierCurveTo(162.5 * e, 544 * e, 162.5 * e, 544 * e, 212 * e, 540 * e),
        r.bezierCurveTo(312 * e, 535 * e, 281 * e, 665 * e, 225 * e, 665 * e),
        r.bezierCurveTo(227 * e, 686.5 * e, 227 * e, 686.5 * e, 229 * e, 708 * e),
        r.bezierCurveTo(343 * e, 684 * e, 354 * e, 496 * e, 222 * e, 498 * e),
        r.bezierCurveTo(165.5 * e, 503 * e, 165.5 * e, 503 * e, 109 * e, 508 * e),
        r.closePath(),
        Ce(r, i[6], i[4], 16 * e),
        we(r, 204 * e, 693 * e, 36.013886210738214 * e),
        Ce(r, i[6], i[4], 16 * e),
        we(r, 105 * e, 518 * e, 30 * e),
        Ce(r, i[6], i[4], 16 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(171 * e, 535 * e),
        r.bezierCurveTo(139.5 * e, 537.5 * e, 139.5 * e, 537.5 * e, 108 * e, 540 * e),
        r.bezierCurveTo(110 * e, 527.5 * e, 110 * e, 527.5 * e, 112 * e, 515 * e),
        r.bezierCurveTo(148 * e, 513 * e, 148 * e, 513 * e, 184 * e, 511 * e),
        r.closePath(),
        Ce(r, i[6]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(244 * e, 669 * e),
        r.bezierCurveTo(248.5 * e, 680 * e, 248.5 * e, 680 * e, 253 * e, 691 * e),
        r.bezierCurveTo(239.5 * e, 697 * e, 239.5 * e, 697 * e, 226 * e, 703 * e),
        r.bezierCurveTo(223 * e, 691.5 * e, 223 * e, 691.5 * e, 220 * e, 680 * e),
        r.closePath(),
        Ce(r, i[6]),
        we(r, 204 * e, 693 * e, 17.029386365926403 * e),
        Ce(r, i[7]),
        we(r, 106 * e, 518 * e, 12 * e),
        Ce(r, i[7]),
        n
    }
    function s1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 100 * e,
        n.height = 250 * e,
        r.translate(-135 * e, -75 * e),
        r.globalAlpha = t ? .8 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(178.5 * e, 238.03125 * e),
        r.bezierCurveTo(177 * e, 175.03125 * e, 177 * e, 175.03125 * e, 175.5 * e, 112.03125 * e),
        r.bezierCurveTo(184.5 * e, 100.53125 * e, 184.5 * e, 100.53125 * e, 193.5 * e, 89.03125 * e),
        r.bezierCurveTo(202 * e, 100.03125 * e, 202 * e, 100.03125 * e, 210.5 * e, 111.03125 * e),
        r.bezierCurveTo(209.5 * e, 174.03125 * e, 209.5 * e, 174.03125 * e, 208.5 * e, 237.03125 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(155.5 * e, 239.03125 * e),
        r.bezierCurveTo(194 * e, 238.53125 * e, 194 * e, 238.53125 * e, 232.5 * e, 238.03125 * e),
        r.bezierCurveTo(232.5 * e, 243.03125 * e, 232.5 * e, 243.03125 * e, 232.5 * e, 248.03125 * e),
        r.bezierCurveTo(194 * e, 248.53125 * e, 194 * e, 248.53125 * e, 155.5 * e, 249.03125 * e),
        r.closePath(),
        Ce(r, i[0]),
        we(r, 160.5 * e, 243.03125 * e, 7 * e),
        Ce(r, i[0]),
        we(r, 227.5 * e, 242.03125 * e, 7 * e),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(185.5 * e, 253.03125 * e),
        r.bezierCurveTo(193.5 * e, 253.03125 * e, 193.5 * e, 253.03125 * e, 201.5 * e, 253.03125 * e),
        r.bezierCurveTo(201.5 * e, 276.03125 * e, 201.5 * e, 276.03125 * e, 201.5 * e, 299.03125 * e),
        r.bezierCurveTo(194.5 * e, 299.03125 * e, 194.5 * e, 299.03125 * e, 187.5 * e, 299.03125 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 5 * e),
        we(r, 194 * e, 298 * e, 9 * e),
        Ce(r, i[0], i[0], 5 * e),
        r.globalAlpha = 1,
        r.translate(-10 * e, 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(178.5 * e, 238.03125 * e),
        r.bezierCurveTo(177 * e, 175.03125 * e, 177 * e, 175.03125 * e, 175.5 * e, 112.03125 * e),
        r.bezierCurveTo(184.5 * e, 100.53125 * e, 184.5 * e, 100.53125 * e, 193.5 * e, 89.03125 * e),
        r.bezierCurveTo(202 * e, 100.03125 * e, 202 * e, 100.03125 * e, 210.5 * e, 111.03125 * e),
        r.bezierCurveTo(209.5 * e, 174.03125 * e, 209.5 * e, 174.03125 * e, 208.5 * e, 237.03125 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(155.5 * e, 239.03125 * e),
        r.bezierCurveTo(194 * e, 238.53125 * e, 194 * e, 238.53125 * e, 232.5 * e, 238.03125 * e),
        r.bezierCurveTo(232.5 * e, 243.03125 * e, 232.5 * e, 243.03125 * e, 232.5 * e, 248.03125 * e),
        r.bezierCurveTo(194 * e, 248.53125 * e, 194 * e, 248.53125 * e, 155.5 * e, 249.03125 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 5 * e),
        we(r, 160.5 * e, 243.03125 * e, 7 * e),
        Ce(r, i[1], i[2], 5 * e),
        we(r, 227.5 * e, 242.03125 * e, 7 * e),
        Ce(r, i[1], i[2], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(185.5 * e, 253.03125 * e),
        r.bezierCurveTo(193.5 * e, 253.03125 * e, 193.5 * e, 253.03125 * e, 201.5 * e, 253.03125 * e),
        r.bezierCurveTo(201.5 * e, 276.03125 * e, 201.5 * e, 276.03125 * e, 201.5 * e, 299.03125 * e),
        r.bezierCurveTo(194.5 * e, 299.03125 * e, 194.5 * e, 299.03125 * e, 187.5 * e, 299.03125 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 7 * e),
        we(r, 194 * e, 298 * e, 9 * e),
        Ce(r, i[1], i[2], 7 * e),
        n
    }
    function d1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 290 * e,
        n.height = 525 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(20 * e, 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(111 * e, 351 * e),
        r.bezierCurveTo(129 * e, 218 * e, 129 * e, 218 * e, 147 * e, 85 * e),
        r.bezierCurveTo(167 * e, 65.5 * e, 167 * e, 65.5 * e, 187 * e, 46 * e),
        r.bezierCurveTo(201.5 * e, 70.5 * e, 201.5 * e, 70.5 * e, 216 * e, 95 * e),
        r.bezierCurveTo(194.5 * e, 227.5 * e, 194.5 * e, 227.5 * e, 173 * e, 360 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.save(),
        r.translate(131 * e, 425.5 * e),
        r.rotate(.16),
        Be(r, -14 * e, -56.5 * e, 28 * e, 113 * e, 8 * e),
        r.restore(),
        Ce(r, i[0]),
        we(r, 122 * e, 480 * e, 18.439088914585774 * e),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(79 * e, 371 * e),
        r.bezierCurveTo(131 * e, 373 * e, 145 * e, 378 * e, 197 * e, 388 * e),
        r.bezierCurveTo(205 * e, 382.5 * e, 205 * e, 382.5 * e, 213 * e, 377 * e),
        r.bezierCurveTo(167 * e, 352 * e, 117 * e, 345 * e, 69 * e, 355 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-20 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(111 * e, 351 * e),
        r.bezierCurveTo(129 * e, 218 * e, 129 * e, 218 * e, 147 * e, 85 * e),
        r.bezierCurveTo(167 * e, 65.5 * e, 167 * e, 65.5 * e, 187 * e, 46 * e),
        r.bezierCurveTo(201.5 * e, 70.5 * e, 201.5 * e, 70.5 * e, 216 * e, 95 * e),
        r.bezierCurveTo(194.5 * e, 227.5 * e, 194.5 * e, 227.5 * e, 173 * e, 360 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12.5 * e),
        r.save(),
        r.translate(131 * e, 425.5 * e),
        r.rotate(.16),
        Be(r, -14 * e, -56.5 * e, 28 * e, 113 * e, 8 * e),
        r.restore(),
        Ce(r, i[4], i[5], 12.5 * e),
        we(r, 122 * e, 480 * e, 18.439088914585774 * e),
        Ce(r, i[4], i[5], 12.5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(79 * e, 371 * e),
        r.bezierCurveTo(131 * e, 373 * e, 145 * e, 378 * e, 197 * e, 388 * e),
        r.bezierCurveTo(205 * e, 382.5 * e, 205 * e, 382.5 * e, 213 * e, 377 * e),
        r.bezierCurveTo(167 * e, 352 * e, 117 * e, 345 * e, 69 * e, 355 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 12.5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(128 * e, 345 * e),
        r.bezierCurveTo(142 * e, 345 * e, 147 * e, 346 * e, 158 * e, 349 * e),
        r.bezierCurveTo(177.5 * e, 224.5 * e, 177.5 * e, 224.5 * e, 197 * e, 100 * e),
        r.bezierCurveTo(190.5 * e, 84.5 * e, 190.5 * e, 84.5 * e, 184 * e, 69 * e),
        r.bezierCurveTo(173.5 * e, 82 * e, 173.5 * e, 82 * e, 163 * e, 95 * e),
        r.closePath(),
        Ce(r, i[3]),
        n
    }
    function _1(e, t, i, n) {
        var r = document.createElement("canvas")
          , o = r.getContext("2d");
        return r.width = 283 * e,
        r.height = 224 * e,
        o.translate(0, 15 * e),
        o.globalAlpha = .5,
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(93 * e, 55 * e),
        o.bezierCurveTo(127 * e, 27 * e, 195 * e, 42 * e, 213 * e, 78 * e),
        o.bezierCurveTo(254 * e, 134 * e, 226 * e, 198 * e, 153 * e, 197 * e),
        o.bezierCurveTo(59 * e, 204 * e, 56 * e, 158 * e, 51 * e, 115 * e),
        o.bezierCurveTo(50 * e, 93 * e, 81 * e, 62 * e, 90 * e, 57 * e),
        o.closePath(),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(100 * e, 33 * e),
        o.bezierCurveTo(85 * e, 62 * e, 102 * e, 66 * e, 110 * e, 83 * e),
        o.closePath(),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(181 * e, 32 * e),
        o.bezierCurveTo(196 * e, 62 * e, 181 * e, 68 * e, 178 * e, 69 * e),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(225 * e, 52 * e),
        o.bezierCurveTo(228 * e, 78 * e, 207 * e, 77 * e, 192 * e, 88 * e),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(34 * e, 134 * e),
        o.bezierCurveTo(46 * e, 111 * e, 57 * e, 111 * e, 79 * e, 109 * e),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(249 * e, 135 * e),
        o.bezierCurveTo(233 * e, 107 * e, 212 * e, 112 * e, 202 * e, 115 * e),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(56 * e, 50 * e),
        o.bezierCurveTo(56 * e, 82 * e, 73 * e, 82 * e, 93 * e, 89 * e),
        Ce(o, i[0]),
        o.translate(0, -15 * e),
        o.globalAlpha = 1,
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(100 * e, 33 * e),
        o.bezierCurveTo(85 * e, 62 * e, 102 * e, 66 * e, 110 * e, 83 * e),
        Ce(o, void 0, i[2], 40 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(181 * e, 32 * e),
        o.bezierCurveTo(196 * e, 62 * e, 181 * e, 68 * e, 178 * e, 69 * e),
        Ce(o, void 0, i[2], 40 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(225 * e, 52 * e),
        o.bezierCurveTo(228 * e, 78 * e, 207 * e, 77 * e, 192 * e, 88 * e),
        Ce(o, void 0, i[2], 40 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(34 * e, 134 * e),
        o.bezierCurveTo(46 * e, 111 * e, 57 * e, 111 * e, 79 * e, 109 * e),
        Ce(o, void 0, i[2], 40 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(249 * e, 135 * e),
        o.bezierCurveTo(233 * e, 107 * e, 212 * e, 112 * e, 202 * e, 115 * e),
        Ce(o, void 0, i[2], 40 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(56 * e, 50 * e),
        o.bezierCurveTo(56 * e, 82 * e, 73 * e, 82 * e, 93 * e, 89 * e),
        Ce(o, void 0, i[2], 40 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(93 * e, 55 * e),
        o.bezierCurveTo(127 * e, 27 * e, 195 * e, 42 * e, 213 * e, 78 * e),
        o.bezierCurveTo(254 * e, 134 * e, 226 * e, 198 * e, 153 * e, 197 * e),
        o.bezierCurveTo(59 * e, 204 * e, 56 * e, 158 * e, 51 * e, 115 * e),
        o.bezierCurveTo(50 * e, 93 * e, 81 * e, 62 * e, 90 * e, 57 * e),
        o.closePath(),
        Ce(o, i[1], i[2], 10 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(100 * e, 33 * e),
        o.bezierCurveTo(85 * e, 62 * e, 102 * e, 66 * e, 110 * e, 83 * e),
        Ce(o, void 0, i[1], 20 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(181 * e, 32 * e),
        o.bezierCurveTo(196 * e, 62 * e, 181 * e, 68 * e, 178 * e, 69 * e),
        Ce(o, void 0, i[1], 20 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(225 * e, 52 * e),
        o.bezierCurveTo(228 * e, 78 * e, 207 * e, 77 * e, 192 * e, 88 * e),
        Ce(o, void 0, i[1], 20 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(34 * e, 134 * e),
        o.bezierCurveTo(46 * e, 111 * e, 57 * e, 111 * e, 79 * e, 109 * e),
        Ce(o, void 0, i[1], 20 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(249 * e, 135 * e),
        o.bezierCurveTo(233 * e, 107 * e, 212 * e, 112 * e, 202 * e, 115 * e),
        Ce(o, void 0, i[1], 20 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(56 * e, 50 * e),
        o.bezierCurveTo(56 * e, 82 * e, 73 * e, 82 * e, 93 * e, 89 * e),
        Ce(o, void 0, i[1], 20 * e),
        we(o, 101 * e, 155 * e, 20.591260281974 * e),
        Ce(o, i[3]),
        we(o, 180 * e, 155 * e, 20.591260281974 * e),
        Ce(o, i[3]),
        we(o, 95 * e, 148 * e, 7.211102550927978 * e),
        Ce(o, i[4]),
        we(o, 173 * e, 148 * e, 7.211102550927978 * e),
        Ce(o, i[4]),
        1 === n && (o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(191 * e, 107 * e),
        o.bezierCurveTo(180 * e, 104 * e, 175 * e, 101 * e, 180 * e, 95 * e),
        o.bezierCurveTo(180 * e, 95 * e, 181 * e, 99 * e, 188 * e, 103 * e),
        o.bezierCurveTo(191 * e, 101 * e, 191 * e, 95 * e, 190 * e, 91 * e),
        o.bezierCurveTo(190 * e, 91 * e, 196 * e, 89 * e, 195 * e, 99 * e),
        o.closePath(),
        Ce(o, i[2]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(206 * e, 98 * e),
        o.bezierCurveTo(203 * e, 95 * e, 200 * e, 93 * e, 198 * e, 101 * e),
        o.bezierCurveTo(194 * e, 109 * e, 193 * e, 109 * e, 196 * e, 110 * e),
        o.bezierCurveTo(206 * e, 115 * e, 209 * e, 114 * e, 211 * e, 111 * e),
        o.bezierCurveTo(211 * e, 106 * e, 208 * e, 108 * e, 203 * e, 108 * e),
        o.bezierCurveTo(193 * e, 107 * e, 204 * e, 101 * e, 206 * e, 99 * e),
        o.closePath(),
        Ce(o, i[2]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(172 * e, 111 * e),
        o.bezierCurveTo(172 * e, 106 * e, 174 * e, 105 * e, 185 * e, 109 * e),
        o.bezierCurveTo(190 * e, 109 * e, 189 * e, 114 * e, 185 * e, 120 * e),
        o.bezierCurveTo(181 * e, 125 * e, 180 * e, 126 * e, 176 * e, 122 * e),
        o.bezierCurveTo(182 * e, 119 * e, 187 * e, 110 * e, 182 * e, 112 * e),
        o.closePath(),
        Ce(o, i[2]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(202 * e, 125 * e),
        o.bezierCurveTo(197 * e, 117 * e, 193 * e, 116 * e, 193 * e, 120 * e),
        o.bezierCurveTo(192.5 * e, 124.5 * e, 192.5 * e, 124.5 * e, 192 * e, 129 * e),
        o.bezierCurveTo(188 * e, 129 * e, 187 * e, 124 * e, 189 * e, 120 * e),
        o.bezierCurveTo(191 * e, 110 * e, 192 * e, 110 * e, 200 * e, 116 * e),
        o.bezierCurveTo(208 * e, 120 * e, 207 * e, 123 * e, 202 * e, 125 * e),
        o.closePath(),
        Ce(o, i[2])),
        r
    }
    function u1(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 283 * e,
        i.height = 224 * e,
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(100 * e, 33 * e),
        n.bezierCurveTo(85 * e, 62 * e, 102 * e, 66 * e, 110 * e, 83 * e),
        Ce(n, void 0, t[0], 40 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(181 * e, 32 * e),
        n.bezierCurveTo(196 * e, 62 * e, 181 * e, 68 * e, 178 * e, 69 * e),
        Ce(n, void 0, t[0], 40 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(225 * e, 52 * e),
        n.bezierCurveTo(228 * e, 78 * e, 207 * e, 77 * e, 192 * e, 88 * e),
        Ce(n, void 0, t[0], 40 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(34 * e, 134 * e),
        n.bezierCurveTo(46 * e, 111 * e, 57 * e, 111 * e, 79 * e, 109 * e),
        Ce(n, void 0, t[0], 40 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(249 * e, 135 * e),
        n.bezierCurveTo(233 * e, 107 * e, 212 * e, 112 * e, 202 * e, 115 * e),
        Ce(n, void 0, t[0], 40 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(56 * e, 50 * e),
        n.bezierCurveTo(56 * e, 82 * e, 73 * e, 82 * e, 93 * e, 89 * e),
        Ce(n, void 0, t[0], 40 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(93 * e, 55 * e),
        n.bezierCurveTo(124 * e, 29 * e, 179 * e, 44 * e, 188 * e, 52 * e),
        n.bezierCurveTo(207 * e, 64 * e, 226 * e, 94 * e, 231 * e, 118 * e),
        n.bezierCurveTo(236 * e, 145 * e, 222 * e, 184 * e, 193 * e, 192 * e),
        n.bezierCurveTo(147 * e, 201 * e, 116 * e, 200 * e, 93 * e, 193 * e),
        n.bezierCurveTo(61 * e, 180 * e, 48 * e, 147 * e, 50 * e, 123 * e),
        n.bezierCurveTo(50 * e, 93 * e, 76 * e, 66 * e, 92 * e, 56 * e),
        n.closePath(),
        Ce(n, t[0]),
        i
    }
    function l1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 131 * e,
        n.height = 121 * e,
        r.translate(0, 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(110 * e, 59 * e),
        r.bezierCurveTo(93 * e, 61.5 * e, 93 * e, 61.5 * e, 76 * e, 64 * e),
        r.bezierCurveTo(84.5 * e, 78.5 * e, 84.5 * e, 78.5 * e, 93 * e, 93 * e),
        r.bezierCurveTo(70 * e, 111 * e, 43 * e, 103 * e, 30 * e, 82 * e),
        r.bezierCurveTo(17 * e, 61 * e, 25 * e, 30 * e, 51 * e, 21 * e),
        r.bezierCurveTo(66 * e, 15 * e, 83 * e, 18 * e, 96 * e, 29 * e),
        r.bezierCurveTo(104 * e, 35 * e, 109 * e, 47 * e, 110 * e, 58 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(110 * e, 59 * e),
        r.bezierCurveTo(93 * e, 61.5 * e, 93 * e, 61.5 * e, 76 * e, 64 * e),
        r.bezierCurveTo(84.5 * e, 78.5 * e, 84.5 * e, 78.5 * e, 93 * e, 93 * e),
        r.bezierCurveTo(70 * e, 111 * e, 43 * e, 103 * e, 30 * e, 82 * e),
        r.bezierCurveTo(17 * e, 61 * e, 25 * e, 30 * e, 51 * e, 21 * e),
        r.bezierCurveTo(66 * e, 15 * e, 83 * e, 18 * e, 96 * e, 29 * e),
        r.bezierCurveTo(104 * e, 35 * e, 109 * e, 47 * e, 110 * e, 58 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 10 * e),
        n
    }
    function c1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 104 * e,
        n.height = 112 * e,
        r.translate(0, 15 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(16 * e, 44 * e),
        r.bezierCurveTo(30.5 * e, 48 * e, 30.5 * e, 48 * e, 45 * e, 52 * e),
        r.bezierCurveTo(36.5 * e, 63 * e, 36.5 * e, 63 * e, 28 * e, 74 * e),
        r.bezierCurveTo(32 * e, 86 * e, 61 * e, 92 * e, 78 * e, 76 * e),
        r.bezierCurveTo(93 * e, 62 * e, 92 * e, 40 * e, 80 * e, 26 * e),
        r.bezierCurveTo(65 * e, 11 * e, 42 * e, 16 * e, 34 * e, 21 * e),
        r.bezierCurveTo(22 * e, 27 * e, 16 * e, 39 * e, 16 * e, 44 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -15 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(16 * e, 44 * e),
        r.bezierCurveTo(30.5 * e, 48 * e, 30.5 * e, 48 * e, 45 * e, 52 * e),
        r.bezierCurveTo(36.5 * e, 63 * e, 36.5 * e, 63 * e, 28 * e, 74 * e),
        r.bezierCurveTo(32 * e, 86 * e, 61 * e, 92 * e, 78 * e, 76 * e),
        r.bezierCurveTo(93 * e, 62 * e, 92 * e, 40 * e, 80 * e, 26 * e),
        r.bezierCurveTo(65 * e, 11 * e, 42 * e, 16 * e, 34 * e, 21 * e),
        r.bezierCurveTo(22 * e, 27 * e, 16 * e, 39 * e, 16 * e, 44 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 8 * e),
        n
    }
    function h1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 321 * e,
        n.height = 284 * e,
        r.translate(100 * e, 30 * e),
        r.translate(5 * e, 10 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(58 * e, 33 * e),
        r.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
        r.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
        r.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
        r.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
        r.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
        r.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(58 * e, 33 * e),
        r.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
        r.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
        r.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
        r.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
        r.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
        r.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(167 * e, 120 * e),
        r.bezierCurveTo(196 * e, 106 * e, 207 * e, 111 * e, 199 * e, 135 * e),
        r.bezierCurveTo(185 * e, 172 * e, 166 * e, 187 * e, 145 * e, 179 * e),
        r.bezierCurveTo(118 * e, 166 * e, 127 * e, 139 * e, 166 * e, 121 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(25 * e, 64 * e),
        r.bezierCurveTo(59 * e, 96 * e, 97 * e, 128 * e, 129 * e, 151 * e),
        r.bezierCurveTo(126 * e, 163 * e, 134 * e, 174 * e, 142 * e, 180 * e),
        r.bezierCurveTo(114 * e, 170 * e, 68 * e, 134 * e, 31 * e, 85 * e),
        r.bezierCurveTo(24 * e, 71 * e, 24 * e, 70 * e, 25 * e, 65 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(161 * e, 141 * e),
        r.bezierCurveTo(181 * e, 131 * e, 186 * e, 135 * e, 173 * e, 152 * e),
        r.bezierCurveTo(163 * e, 163 * e, 155 * e, 161 * e, 151 * e, 150 * e),
        r.bezierCurveTo(147 * e, 140 * e, 155 * e, 131 * e, 175 * e, 125 * e),
        r.bezierCurveTo(190 * e, 120 * e, 196 * e, 121 * e, 189 * e, 143 * e),
        r.bezierCurveTo(182 * e, 167 * e, 169 * e, 174 * e, 157 * e, 174 * e),
        r.bezierCurveTo(138 * e, 172 * e, 139 * e, 162 * e, 140 * e, 156 * e),
        Ce(r, void 0, i[4], 4 * e),
        r.translate(-100 * e, -30 * e),
        r.translate(10 * e, 70 * e),
        r.translate(5 * e, 10 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(58 * e, 33 * e),
        r.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
        r.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
        r.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
        r.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
        r.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
        r.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(58 * e, 33 * e),
        r.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
        r.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
        r.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
        r.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
        r.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
        r.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(167 * e, 120 * e),
        r.bezierCurveTo(196 * e, 106 * e, 207 * e, 111 * e, 199 * e, 135 * e),
        r.bezierCurveTo(185 * e, 172 * e, 166 * e, 187 * e, 145 * e, 179 * e),
        r.bezierCurveTo(118 * e, 166 * e, 127 * e, 139 * e, 166 * e, 121 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(25 * e, 64 * e),
        r.bezierCurveTo(59 * e, 96 * e, 97 * e, 128 * e, 129 * e, 151 * e),
        r.bezierCurveTo(126 * e, 163 * e, 134 * e, 174 * e, 142 * e, 180 * e),
        r.bezierCurveTo(114 * e, 170 * e, 68 * e, 134 * e, 31 * e, 85 * e),
        r.bezierCurveTo(24 * e, 71 * e, 24 * e, 70 * e, 25 * e, 65 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(161 * e, 141 * e),
        r.bezierCurveTo(181 * e, 131 * e, 186 * e, 135 * e, 173 * e, 152 * e),
        r.bezierCurveTo(163 * e, 163 * e, 155 * e, 161 * e, 151 * e, 150 * e),
        r.bezierCurveTo(147 * e, 140 * e, 155 * e, 131 * e, 175 * e, 125 * e),
        r.bezierCurveTo(190 * e, 120 * e, 196 * e, 121 * e, 189 * e, 143 * e),
        r.bezierCurveTo(182 * e, 167 * e, 169 * e, 174 * e, 157 * e, 174 * e),
        r.bezierCurveTo(138 * e, 172 * e, 139 * e, 162 * e, 140 * e, 156 * e),
        Ce(r, void 0, i[4], 4 * e),
        r.translate(20 * e, -80 * e),
        r.translate(5 * e, 10 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(58 * e, 33 * e),
        r.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
        r.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
        r.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
        r.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
        r.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
        r.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(58 * e, 33 * e),
        r.bezierCurveTo(81 * e, 22 * e, 93 * e, 26 * e, 123 * e, 47 * e),
        r.bezierCurveTo(160 * e, 73 * e, 169 * e, 80 * e, 191 * e, 99 * e),
        r.bezierCurveTo(202 * e, 107 * e, 211 * e, 118 * e, 195 * e, 151 * e),
        r.bezierCurveTo(181 * e, 183 * e, 157 * e, 192 * e, 129 * e, 174 * e),
        r.bezierCurveTo(78 * e, 140 * e, 68 * e, 129 * e, 37 * e, 94 * e),
        r.bezierCurveTo(15 * e, 68 * e, 25 * e, 52 * e, 56 * e, 34 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(167 * e, 120 * e),
        r.bezierCurveTo(196 * e, 106 * e, 207 * e, 111 * e, 199 * e, 135 * e),
        r.bezierCurveTo(185 * e, 172 * e, 166 * e, 187 * e, 145 * e, 179 * e),
        r.bezierCurveTo(118 * e, 166 * e, 127 * e, 139 * e, 166 * e, 121 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(25 * e, 64 * e),
        r.bezierCurveTo(59 * e, 96 * e, 97 * e, 128 * e, 129 * e, 151 * e),
        r.bezierCurveTo(126 * e, 163 * e, 134 * e, 174 * e, 142 * e, 180 * e),
        r.bezierCurveTo(114 * e, 170 * e, 68 * e, 134 * e, 31 * e, 85 * e),
        r.bezierCurveTo(24 * e, 71 * e, 24 * e, 70 * e, 25 * e, 65 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(161 * e, 141 * e),
        r.bezierCurveTo(181 * e, 131 * e, 186 * e, 135 * e, 173 * e, 152 * e),
        r.bezierCurveTo(163 * e, 163 * e, 155 * e, 161 * e, 151 * e, 150 * e),
        r.bezierCurveTo(147 * e, 140 * e, 155 * e, 131 * e, 175 * e, 125 * e),
        r.bezierCurveTo(190 * e, 120 * e, 196 * e, 121 * e, 189 * e, 143 * e),
        r.bezierCurveTo(182 * e, 167 * e, 169 * e, 174 * e, 157 * e, 174 * e),
        r.bezierCurveTo(138 * e, 172 * e, 139 * e, 162 * e, 140 * e, 156 * e),
        Ce(r, void 0, i[4], 4 * e),
        n
    }
    function E1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 290 * e,
        n.height = 525 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(20 * e, 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(111 * e, 351 * e),
        r.bezierCurveTo(128.5 * e, 218.5 * e, 128.5 * e, 218.5 * e, 146 * e, 86 * e),
        r.bezierCurveTo(166.5 * e, 66.5 * e, 166.5 * e, 66.5 * e, 187 * e, 47 * e),
        r.bezierCurveTo(201 * e, 71.5 * e, 201 * e, 71.5 * e, 215 * e, 96 * e),
        r.bezierCurveTo(193 * e, 228.5 * e, 193 * e, 228.5 * e, 171 * e, 361 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.save(),
        r.translate(129.5 * e, 424 * e),
        r.rotate(.16),
        Be(r, -15.5 * e, -63 * e, 31 * e, 126 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        we(r, 121 * e, 480 * e, 20.396078054371138 * e),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(90 * e, 311 * e),
        r.bezierCurveTo(95 * e, 324 * e, 95 * e, 324 * e, 100 * e, 337 * e),
        r.bezierCurveTo(141.5 * e, 345.5 * e, 141.5 * e, 345.5 * e, 183 * e, 354 * e),
        r.bezierCurveTo(193.5 * e, 342.5 * e, 193.5 * e, 342.5 * e, 204 * e, 331 * e),
        r.bezierCurveTo(202 * e, 354 * e, 202 * e, 354 * e, 200 * e, 377 * e),
        r.bezierCurveTo(147 * e, 388 * e, 106 * e, 371 * e, 79 * e, 356 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-20 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(111 * e, 351 * e),
        r.bezierCurveTo(128.5 * e, 218.5 * e, 128.5 * e, 218.5 * e, 146 * e, 86 * e),
        r.bezierCurveTo(166.5 * e, 66.5 * e, 166.5 * e, 66.5 * e, 187 * e, 47 * e),
        r.bezierCurveTo(201 * e, 71.5 * e, 201 * e, 71.5 * e, 215 * e, 96 * e),
        r.bezierCurveTo(193 * e, 228.5 * e, 193 * e, 228.5 * e, 171 * e, 361 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12.5 * e),
        r.save(),
        r.translate(129.5 * e, 424 * e),
        r.rotate(.16),
        Be(r, -15.5 * e, -63 * e, 31 * e, 126 * e, 10 * e),
        r.restore(),
        Ce(r, i[4], i[5], 12.5 * e),
        we(r, 121 * e, 480 * e, 20.396078054371138 * e),
        Ce(r, i[4], i[5], 12.5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(90 * e, 311 * e),
        r.bezierCurveTo(95 * e, 324 * e, 95 * e, 324 * e, 100 * e, 337 * e),
        r.bezierCurveTo(141.5 * e, 345.5 * e, 141.5 * e, 345.5 * e, 183 * e, 354 * e),
        r.bezierCurveTo(193.5 * e, 342.5 * e, 193.5 * e, 342.5 * e, 204 * e, 331 * e),
        r.bezierCurveTo(202 * e, 354 * e, 202 * e, 354 * e, 200 * e, 377 * e),
        r.bezierCurveTo(147 * e, 388 * e, 106 * e, 371 * e, 79 * e, 356 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12.5 * e),
        n
    }
    function T1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 290 * e,
        n.height = 525 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(20 * e, 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(112 * e, 356 * e),
        r.bezierCurveTo(124 * e, 220.5 * e, 124 * e, 220.5 * e, 136 * e, 85 * e),
        r.bezierCurveTo(162.5 * e, 65.5 * e, 162.5 * e, 65.5 * e, 189 * e, 46 * e),
        r.bezierCurveTo(208.5 * e, 72.5 * e, 208.5 * e, 72.5 * e, 228 * e, 99 * e),
        r.bezierCurveTo(200 * e, 232 * e, 200 * e, 232 * e, 172 * e, 365 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.save(),
        r.translate(131 * e, 423 * e),
        r.rotate(.16),
        Be(r, -14 * e, -53 * e, 28 * e, 106 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.save(),
        r.translate(122 * e, 480 * e),
        r.rotate(1.72),
        A(r, 4, 26.476404589747453 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(210 * e, 387 * e),
        r.bezierCurveTo(138 * e, 376 * e, 138 * e, 376 * e, 66 * e, 365 * e),
        r.bezierCurveTo(76 * e, 355 * e, 76 * e, 355 * e, 86 * e, 345 * e),
        r.bezierCurveTo(99 * e, 346.5 * e, 99 * e, 346.5 * e, 112 * e, 348 * e),
        r.bezierCurveTo(128.5 * e, 344 * e, 128.5 * e, 344 * e, 145 * e, 340 * e),
        r.bezierCurveTo(158 * e, 348 * e, 158 * e, 348 * e, 171 * e, 356 * e),
        r.bezierCurveTo(184 * e, 358 * e, 184 * e, 358 * e, 197 * e, 360 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(129 * e, 338 * e),
        r.bezierCurveTo(137 * e, 336 * e, 137 * e, 336 * e, 145 * e, 334 * e),
        r.bezierCurveTo(152.5 * e, 338 * e, 152.5 * e, 338 * e, 160 * e, 342 * e),
        r.bezierCurveTo(184 * e, 224 * e, 184 * e, 224 * e, 208 * e, 106 * e),
        r.bezierCurveTo(197 * e, 88 * e, 187 * e, 70 * e, 186 * e, 70 * e),
        r.bezierCurveTo(169.5 * e, 83 * e, 169.5 * e, 83 * e, 153 * e, 96 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-20 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(112 * e, 356 * e),
        r.bezierCurveTo(124 * e, 220.5 * e, 124 * e, 220.5 * e, 136 * e, 85 * e),
        r.bezierCurveTo(162.5 * e, 65.5 * e, 162.5 * e, 65.5 * e, 189 * e, 46 * e),
        r.bezierCurveTo(208.5 * e, 72.5 * e, 208.5 * e, 72.5 * e, 228 * e, 99 * e),
        r.bezierCurveTo(200 * e, 232 * e, 200 * e, 232 * e, 172 * e, 365 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12.5 * e),
        r.save(),
        r.translate(131 * e, 423 * e),
        r.rotate(.16),
        Be(r, -14 * e, -53 * e, 28 * e, 106 * e, 10 * e),
        r.restore(),
        Ce(r, i[4], i[5], 12.5 * e),
        r.save(),
        r.translate(122 * e, 480 * e),
        r.rotate(1.72),
        A(r, 4, 26.476404589747453 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 12.5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(210 * e, 387 * e),
        r.bezierCurveTo(138 * e, 376 * e, 138 * e, 376 * e, 66 * e, 365 * e),
        r.bezierCurveTo(76 * e, 355 * e, 76 * e, 355 * e, 86 * e, 345 * e),
        r.bezierCurveTo(99 * e, 346.5 * e, 99 * e, 346.5 * e, 112 * e, 348 * e),
        r.bezierCurveTo(128.5 * e, 344 * e, 128.5 * e, 344 * e, 145 * e, 340 * e),
        r.bezierCurveTo(158 * e, 348 * e, 158 * e, 348 * e, 171 * e, 356 * e),
        r.bezierCurveTo(184 * e, 358 * e, 184 * e, 358 * e, 197 * e, 360 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12.5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(129 * e, 338 * e),
        r.bezierCurveTo(137 * e, 336 * e, 137 * e, 336 * e, 145 * e, 334 * e),
        r.bezierCurveTo(152.5 * e, 338 * e, 152.5 * e, 338 * e, 160 * e, 342 * e),
        r.bezierCurveTo(184 * e, 224 * e, 184 * e, 224 * e, 208 * e, 106 * e),
        r.bezierCurveTo(197 * e, 88 * e, 187 * e, 70 * e, 186 * e, 70 * e),
        r.bezierCurveTo(169.5 * e, 83 * e, 169.5 * e, 83 * e, 153 * e, 96 * e),
        r.closePath(),
        Ce(r, i[3]),
        n
    }
    function A1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 290 * e,
        n.height = 525 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(20 * e, 20 * e),
        r.translate(-20 * e, -20 * e),
        r.save(),
        r.translate(132 * e, 423 * e),
        r.rotate(.16),
        Be(r, -14 * e, -61 * e, 28 * e, 122 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(100 * e, 344 * e),
        r.bezierCurveTo(123 * e, 214 * e, 123 * e, 214 * e, 146 * e, 84 * e),
        r.bezierCurveTo(166.5 * e, 65 * e, 166.5 * e, 65 * e, 187 * e, 46 * e),
        r.bezierCurveTo(201 * e, 71 * e, 201 * e, 71 * e, 215 * e, 96 * e),
        r.bezierCurveTo(199.5 * e, 226.5 * e, 199.5 * e, 226.5 * e, 184 * e, 357 * e),
        r.bezierCurveTo(162.5 * e, 362.5 * e, 162.5 * e, 362.5 * e, 141 * e, 368 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(75 * e, 328 * e),
        r.bezierCurveTo(88 * e, 336.5 * e, 88 * e, 336.5 * e, 101 * e, 345 * e),
        r.bezierCurveTo(123.5 * e, 337.5 * e, 123.5 * e, 337.5 * e, 146 * e, 330 * e),
        r.bezierCurveTo(165 * e, 343.5 * e, 165 * e, 343.5 * e, 184 * e, 357 * e),
        r.bezierCurveTo(198.5 * e, 353 * e, 198.5 * e, 353 * e, 213 * e, 349 * e),
        r.bezierCurveTo(200.5 * e, 364.5 * e, 200.5 * e, 364.5 * e, 188 * e, 380 * e),
        r.bezierCurveTo(163 * e, 380.5 * e, 163 * e, 380.5 * e, 138 * e, 381 * e),
        r.bezierCurveTo(112 * e, 373.5 * e, 112 * e, 373.5 * e, 86 * e, 366 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(121 * e, 332 * e),
        r.bezierCurveTo(133.5 * e, 327.5 * e, 133.5 * e, 327.5 * e, 146 * e, 323 * e),
        r.bezierCurveTo(157 * e, 330.5 * e, 157 * e, 330.5 * e, 168 * e, 338 * e),
        r.bezierCurveTo(182.5 * e, 219.5 * e, 182.5 * e, 219.5 * e, 197 * e, 101 * e),
        r.bezierCurveTo(190 * e, 84.5 * e, 190 * e, 84.5 * e, 183 * e, 68 * e),
        r.bezierCurveTo(172.5 * e, 81 * e, 172.5 * e, 81 * e, 162 * e, 94 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(105 * e, 463 * e),
        r.bezierCurveTo(124.5 * e, 466 * e, 124.5 * e, 466 * e, 144 * e, 469 * e),
        r.bezierCurveTo(145.5 * e, 478.5 * e, 145.5 * e, 478.5 * e, 147 * e, 488 * e),
        r.bezierCurveTo(133.5 * e, 495.5 * e, 133.5 * e, 495.5 * e, 120 * e, 503 * e),
        r.bezierCurveTo(108.5 * e, 492 * e, 108.5 * e, 492 * e, 97 * e, 481 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-20 * e, -20 * e),
        r.save(),
        r.translate(132 * e, 423 * e),
        r.rotate(.16),
        Be(r, -14 * e, -61 * e, 28 * e, 122 * e, 10 * e),
        r.restore(),
        Ce(r, i[4], i[5], 12.5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(100 * e, 344 * e),
        r.bezierCurveTo(123 * e, 214 * e, 123 * e, 214 * e, 146 * e, 84 * e),
        r.bezierCurveTo(166.5 * e, 65 * e, 166.5 * e, 65 * e, 187 * e, 46 * e),
        r.bezierCurveTo(201 * e, 71 * e, 201 * e, 71 * e, 215 * e, 96 * e),
        r.bezierCurveTo(199.5 * e, 226.5 * e, 199.5 * e, 226.5 * e, 184 * e, 357 * e),
        r.bezierCurveTo(162.5 * e, 362.5 * e, 162.5 * e, 362.5 * e, 141 * e, 368 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12.5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(75 * e, 328 * e),
        r.bezierCurveTo(88 * e, 336.5 * e, 88 * e, 336.5 * e, 101 * e, 345 * e),
        r.bezierCurveTo(123.5 * e, 337.5 * e, 123.5 * e, 337.5 * e, 146 * e, 330 * e),
        r.bezierCurveTo(165 * e, 343.5 * e, 165 * e, 343.5 * e, 184 * e, 357 * e),
        r.bezierCurveTo(198.5 * e, 353 * e, 198.5 * e, 353 * e, 213 * e, 349 * e),
        r.bezierCurveTo(200.5 * e, 364.5 * e, 200.5 * e, 364.5 * e, 188 * e, 380 * e),
        r.bezierCurveTo(163 * e, 380.5 * e, 163 * e, 380.5 * e, 138 * e, 381 * e),
        r.bezierCurveTo(112 * e, 373.5 * e, 112 * e, 373.5 * e, 86 * e, 366 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12.5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(121 * e, 332 * e),
        r.bezierCurveTo(133.5 * e, 327.5 * e, 133.5 * e, 327.5 * e, 146 * e, 323 * e),
        r.bezierCurveTo(157 * e, 330.5 * e, 157 * e, 330.5 * e, 168 * e, 338 * e),
        r.bezierCurveTo(182.5 * e, 219.5 * e, 182.5 * e, 219.5 * e, 197 * e, 101 * e),
        r.bezierCurveTo(190 * e, 84.5 * e, 190 * e, 84.5 * e, 183 * e, 68 * e),
        r.bezierCurveTo(172.5 * e, 81 * e, 172.5 * e, 81 * e, 162 * e, 94 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(105 * e, 463 * e),
        r.bezierCurveTo(124.5 * e, 466 * e, 124.5 * e, 466 * e, 144 * e, 469 * e),
        r.bezierCurveTo(145.5 * e, 478.5 * e, 145.5 * e, 478.5 * e, 147 * e, 488 * e),
        r.bezierCurveTo(133.5 * e, 495.5 * e, 133.5 * e, 495.5 * e, 120 * e, 503 * e),
        r.bezierCurveTo(108.5 * e, 492 * e, 108.5 * e, 492 * e, 97 * e, 481 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12.5 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(143 * e, 346 * e),
        r.bezierCurveTo(125 * e, 352 * e, 125 * e, 352 * e, 107 * e, 358 * e),
        r.bezierCurveTo(124 * e, 363 * e, 140 * e, 368 * e, 141 * e, 368 * e),
        r.bezierCurveTo(156.5 * e, 367 * e, 156.5 * e, 367 * e, 172 * e, 366 * e),
        r.closePath(),
        Ce(r, i[3]),
        n
    }
    function I1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 154 * e,
        n.height = 261 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(125 * e, 69 * e),
        r.bezierCurveTo(123.5 * e, 141.5 * e, 123.5 * e, 141.5 * e, 122 * e, 214 * e),
        r.bezierCurveTo(123 * e, 228 * e, 119 * e, 239 * e, 102 * e, 239 * e),
        r.bezierCurveTo(90 * e, 238 * e, 86 * e, 225 * e, 89 * e, 197 * e),
        r.bezierCurveTo(92 * e, 159 * e, 92 * e, 141 * e, 94 * e, 84 * e),
        r.bezierCurveTo(94 * e, 58 * e, 87 * e, 50 * e, 73 * e, 52 * e),
        r.bezierCurveTo(53 * e, 54 * e, 54 * e, 92 * e, 34 * e, 87 * e),
        r.bezierCurveTo(13 * e, 85 * e, 22 * e, 58 * e, 34 * e, 40 * e),
        r.bezierCurveTo(44 * e, 24 * e, 68 * e, 17 * e, 86 * e, 21 * e),
        r.bezierCurveTo(111 * e, 23 * e, 123 * e, 39 * e, 125 * e, 67 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(125 * e, 69 * e),
        r.bezierCurveTo(123.5 * e, 141.5 * e, 123.5 * e, 141.5 * e, 122 * e, 214 * e),
        r.bezierCurveTo(123 * e, 228 * e, 119 * e, 239 * e, 102 * e, 239 * e),
        r.bezierCurveTo(90 * e, 238 * e, 86 * e, 225 * e, 89 * e, 197 * e),
        r.bezierCurveTo(92 * e, 159 * e, 92 * e, 141 * e, 94 * e, 84 * e),
        r.bezierCurveTo(94 * e, 58 * e, 87 * e, 50 * e, 73 * e, 52 * e),
        r.bezierCurveTo(53 * e, 54 * e, 54 * e, 92 * e, 34 * e, 87 * e),
        r.bezierCurveTo(13 * e, 85 * e, 22 * e, 58 * e, 34 * e, 40 * e),
        r.bezierCurveTo(44 * e, 24 * e, 68 * e, 17 * e, 86 * e, 21 * e),
        r.bezierCurveTo(111 * e, 23 * e, 123 * e, 39 * e, 125 * e, 67 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(31 * e, 43 * e),
        r.bezierCurveTo(31 * e, 61 * e, 43 * e, 70 * e, 51 * e, 75 * e),
        r.bezierCurveTo(48 * e, 84 * e, 41 * e, 89 * e, 33 * e, 86 * e),
        r.bezierCurveTo(23 * e, 88 * e, 20 * e, 76 * e, 23 * e, 62 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(45 * e, 29 * e),
        r.bezierCurveTo(49 * e, 45 * e, 61 * e, 54 * e, 64 * e, 55 * e),
        r.bezierCurveTo(67.5 * e, 53 * e, 67.5 * e, 53 * e, 71 * e, 51 * e),
        r.bezierCurveTo(80 * e, 44 * e, 83 * e, 33 * e, 82 * e, 20 * e),
        r.bezierCurveTo(59 * e, 17 * e, 51 * e, 23 * e, 45 * e, 30 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(86 * e, 56 * e),
        r.bezierCurveTo(90 * e, 33 * e, 103 * e, 25 * e, 105 * e, 27 * e),
        r.bezierCurveTo(116 * e, 31 * e, 121 * e, 45 * e, 122 * e, 50 * e),
        r.bezierCurveTo(112 * e, 62 * e, 103 * e, 63 * e, 91 * e, 62 * e),
        r.bezierCurveTo(89 * e, 59.5 * e, 89 * e, 59.5 * e, 87 * e, 57 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(93 * e, 81 * e),
        r.bezierCurveTo(109 * e, 82 * e, 123 * e, 70 * e, 124 * e, 63 * e),
        r.bezierCurveTo(124 * e, 75.5 * e, 124 * e, 75.5 * e, 124 * e, 88 * e),
        r.bezierCurveTo(119 * e, 99 * e, 103 * e, 103 * e, 94 * e, 103 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(93 * e, 124 * e),
        r.bezierCurveTo(108 * e, 125 * e, 122 * e, 113 * e, 124 * e, 106 * e),
        r.bezierCurveTo(124 * e, 119 * e, 124 * e, 129 * e, 124 * e, 132 * e),
        r.bezierCurveTo(110 * e, 147 * e, 94 * e, 148 * e, 90 * e, 147 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(90 * e, 170 * e),
        r.bezierCurveTo(104 * e, 166 * e, 122 * e, 158 * e, 122 * e, 151 * e),
        r.bezierCurveTo(122 * e, 162.5 * e, 122 * e, 162.5 * e, 122 * e, 174 * e),
        r.bezierCurveTo(111 * e, 191 * e, 97 * e, 191 * e, 89 * e, 191 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(88 * e, 208 * e),
        r.bezierCurveTo(100 * e, 209 * e, 115 * e, 205 * e, 122 * e, 193 * e),
        r.bezierCurveTo(122 * e, 205.5 * e, 122 * e, 205.5 * e, 122 * e, 218 * e),
        r.bezierCurveTo(115 * e, 229 * e, 103 * e, 235 * e, 90 * e, 228 * e),
        r.bezierCurveTo(88 * e, 224 * e, 88 * e, 217 * e, 88 * e, 211 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.globalAlpha = .4,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(22 * e, 81 * e),
        r.bezierCurveTo(32 * e, 84 * e, 41 * e, 81 * e, 45 * e, 68 * e),
        r.bezierCurveTo(50 * e, 50 * e, 62 * e, 40 * e, 79 * e, 43 * e),
        r.bezierCurveTo(95 * e, 45 * e, 102 * e, 58 * e, 101 * e, 81 * e),
        r.bezierCurveTo(99.5 * e, 120.5 * e, 99.5 * e, 120.5 * e, 98 * e, 160 * e),
        r.bezierCurveTo(96.5 * e, 191.5 * e, 96.5 * e, 191.5 * e, 95 * e, 223 * e),
        r.bezierCurveTo(93 * e, 232 * e, 101 * e, 235 * e, 108 * e, 238 * e),
        r.bezierCurveTo(100 * e, 240 * e, 90 * e, 233 * e, 90 * e, 224 * e),
        r.bezierCurveTo(92 * e, 157 * e, 92 * e, 157 * e, 94 * e, 90 * e),
        r.bezierCurveTo(94 * e, 56 * e, 89 * e, 53 * e, 77 * e, 51 * e),
        r.bezierCurveTo(58 * e, 50 * e, 54 * e, 59 * e, 49 * e, 75 * e),
        r.bezierCurveTo(44 * e, 91 * e, 28 * e, 90 * e, 23 * e, 81 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(82 * e, 123 * e),
        r.bezierCurveTo(88 * e, 130 * e, 88 * e, 127 * e, 94 * e, 128 * e),
        r.bezierCurveTo(91 * e, 136 * e, 94 * e, 137 * e, 99 * e, 142 * e),
        r.bezierCurveTo(97 * e, 149 * e, 99 * e, 152 * e, 105 * e, 155 * e),
        r.bezierCurveTo(107 * e, 159 * e, 113 * e, 159 * e, 120 * e, 158 * e),
        r.bezierCurveTo(121 * e, 160 * e, 125 * e, 163 * e, 132 * e, 163 * e),
        r.bezierCurveTo(133 * e, 166 * e, 136 * e, 169 * e, 138 * e, 170 * e),
        r.bezierCurveTo(133 * e, 171 * e, 132 * e, 172 * e, 129 * e, 174 * e),
        r.bezierCurveTo(122 * e, 170 * e, 120 * e, 170 * e, 116 * e, 174 * e),
        r.bezierCurveTo(108 * e, 170.5 * e, 108 * e, 170.5 * e, 100 * e, 167 * e),
        r.bezierCurveTo(95 * e, 172 * e, 94 * e, 179 * e, 95 * e, 184 * e),
        r.bezierCurveTo(87 * e, 185 * e, 87 * e, 189 * e, 88 * e, 194 * e),
        r.bezierCurveTo(82 * e, 194 * e, 81 * e, 195 * e, 79 * e, 197 * e),
        r.bezierCurveTo(78 * e, 192 * e, 78 * e, 191 * e, 77 * e, 189 * e),
        r.bezierCurveTo(81 * e, 185 * e, 82 * e, 183 * e, 80 * e, 176 * e),
        r.bezierCurveTo(89 * e, 170 * e, 92 * e, 168 * e, 95 * e, 163 * e),
        r.bezierCurveTo(91 * e, 151 * e, 88 * e, 151 * e, 82 * e, 147 * e),
        r.bezierCurveTo(85 * e, 142 * e, 85 * e, 137 * e, 81 * e, 133 * e),
        r.bezierCurveTo(84 * e, 127 * e, 84 * e, 125 * e, 82 * e, 124 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 4 * e),
        we(r, 107 * e, 152 * e, 9 * e),
        Ce(r, i[6]),
        we(r, 105 * e, 173 * e, 9 * e),
        Ce(r, i[6]),
        we(r, 87 * e, 161 * e, 9 * e),
        Ce(r, i[6]),
        we(r, 106 * e, 147 * e, 4 * e),
        Ce(r, i[7]),
        we(r, 104 * e, 167 * e, 4 * e),
        Ce(r, i[7]),
        we(r, 86 * e, 154 * e, 4 * e),
        Ce(r, i[7]),
        n
    }
    function p1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 350 * e,
        n.height = 140 * e,
        r.translate(-50 * e, -150 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(184.5 * e, 222.0625 * e),
        r.bezierCurveTo(185.5 * e, 184.0625 * e, 302.5 * e, 171.0625 * e, 313.5 * e, 222.0625 * e),
        r.bezierCurveTo(330.5 * e, 263.0625 * e, 181.5 * e, 274.0625 * e, 184.5 * e, 223.0625 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(131.5 * e, 241.0625 * e),
        r.bezierCurveTo(144.5 * e, 278.0625 * e, 270.5 * e, 209.0625 * e, 228.5 * e, 174.0625 * e),
        r.bezierCurveTo(196.5 * e, 147.0625 * e, 117.5 * e, 196.0625 * e, 131.5 * e, 240.0625 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 8 * e),
        we(r, 270.5 * e, 225.0625 * e, 15.811388300841896 * e),
        Ce(r, i[2]),
        we(r, 243.5 * e, 225.0625 * e, 6.082762530298219 * e),
        Ce(r, i[2]),
        we(r, 255.5 * e, 210.0625 * e, 10.816653826391969 * e),
        Ce(r, i[2]),
        we(r, 167.5 * e, 215.0625 * e, 15.297058540778355 * e),
        Ce(r, i[2]),
        we(r, 176.5 * e, 204.0625 * e, 7.280109889280518 * e),
        Ce(r, i[2]),
        we(r, 206.5 * e, 189.0625 * e, 7.280109889280518 * e),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(151.5 * e, 212.0625 * e),
        r.bezierCurveTo(161.5 * e, 204.0625 * e, 173.5 * e, 214.0625 * e, 158.5 * e, 221.0625 * e),
        r.bezierCurveTo(145.5 * e, 228.0625 * e, 144.5 * e, 216.0625 * e, 151.5 * e, 212.0625 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(194.5 * e, 209.0625 * e),
        r.bezierCurveTo(205.5 * e, 202.0625 * e, 215.5 * e, 207.0625 * e, 199.5 * e, 217.0625 * e),
        r.bezierCurveTo(187.5 * e, 224.0625 * e, 182.5 * e, 217.0625 * e, 194.5 * e, 209.0625 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(188.5 * e, 183.0625 * e),
        r.bezierCurveTo(201.5 * e, 176.0625 * e, 213.5 * e, 187.0625 * e, 193.5 * e, 193.0625 * e),
        r.bezierCurveTo(185.5 * e, 194.0625 * e, 175.5 * e, 189.0625 * e, 188.5 * e, 183.0625 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(261.5 * e, 202.0625 * e),
        r.bezierCurveTo(274.5 * e, 201.0625 * e, 282.5 * e, 214.0625 * e, 261.5 * e, 215.0625 * e),
        r.bezierCurveTo(246.5 * e, 214.0625 * e, 248.5 * e, 203.0625 * e, 261.5 * e, 202.0625 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(240.5 * e, 231.0625 * e),
        r.bezierCurveTo(255.5 * e, 231.0625 * e, 254.5 * e, 243.0625 * e, 240.5 * e, 242.0625 * e),
        r.bezierCurveTo(225.5 * e, 239.0625 * e, 225.5 * e, 232.0625 * e, 240.5 * e, 231.0625 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        n
    }
    function g1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 217 * e,
        n.height = 215 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(79 * e, 113 * e),
        r.bezierCurveTo(135 * e, 98 * e, 136 * e, 96 * e, 142 * e, 97 * e),
        r.bezierCurveTo(167 * e, 106 * e, 167 * e, 106 * e, 171 * e, 109 * e),
        r.bezierCurveTo(173 * e, 120 * e, 173 * e, 134 * e, 169 * e, 141 * e),
        r.bezierCurveTo(140 * e, 149.5 * e, 140 * e, 149.5 * e, 111 * e, 158 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(154 * e, 103 * e),
        r.bezierCurveTo(167 * e, 91 * e, 175 * e, 87 * e, 176 * e, 94 * e),
        r.bezierCurveTo(175 * e, 102 * e, 176 * e, 102 * e, 186 * e, 103 * e),
        r.bezierCurveTo(191 * e, 104 * e, 192 * e, 105 * e, 185 * e, 116 * e),
        r.bezierCurveTo(183 * e, 120 * e, 191 * e, 124 * e, 189 * e, 129 * e),
        r.bezierCurveTo(185 * e, 139 * e, 178 * e, 134 * e, 166 * e, 131 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(60 * e, 46 * e),
        r.bezierCurveTo(60 * e, 34 * e, 60 * e, 29 * e, 56 * e, 19 * e),
        r.bezierCurveTo(52 * e, 12 * e, 52 * e, 16 * e, 49 * e, 24 * e),
        r.bezierCurveTo(48 * e, 27 * e, 46 * e, 28 * e, 39 * e, 27 * e),
        r.bezierCurveTo(33 * e, 26 * e, 34 * e, 31 * e, 35 * e, 37 * e),
        r.bezierCurveTo(36 * e, 41 * e, 27 * e, 46 * e, 29 * e, 52 * e),
        r.bezierCurveTo(36 * e, 55 * e, 35 * e, 56 * e, 31 * e, 59 * e),
        r.bezierCurveTo(27 * e, 65 * e, 32 * e, 64 * e, 35 * e, 62 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(46 * e, 50 * e),
        r.bezierCurveTo(51 * e, 35 * e, 70 * e, 32 * e, 78 * e, 29 * e),
        r.bezierCurveTo(84 * e, 27 * e, 113 * e, 36 * e, 127 * e, 41 * e),
        r.bezierCurveTo(140 * e, 47 * e, 147 * e, 69 * e, 137 * e, 73 * e),
        r.bezierCurveTo(124 * e, 92 * e, 117 * e, 92 * e, 109 * e, 94 * e),
        r.bezierCurveTo(101 * e, 96 * e, 89 * e, 92 * e, 65 * e, 83 * e),
        r.bezierCurveTo(54 * e, 80 * e, 46 * e, 58 * e, 46 * e, 51 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(51 * e, 40 * e),
        r.bezierCurveTo(49 * e, 34 * e, 49 * e, 34 * e, 47 * e, 28 * e),
        r.bezierCurveTo(38 * e, 28 * e, 34 * e, 27 * e, 37 * e, 37 * e),
        r.bezierCurveTo(43 * e, 40.5 * e, 43 * e, 40.5 * e, 49 * e, 44 * e),
        r.closePath(),
        Ce(r, i[7]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(29 * e, 48 * e),
        r.bezierCurveTo(38 * e, 49 * e, 38 * e, 49 * e, 47 * e, 50 * e),
        r.bezierCurveTo(46.5 * e, 51.5 * e, 46.5 * e, 51.5 * e, 46 * e, 53 * e),
        r.bezierCurveTo(40 * e, 53.5 * e, 40 * e, 53.5 * e, 34 * e, 54 * e),
        r.bezierCurveTo(29 * e, 51 * e, 32 * e, 51.5 * e, 30 * e, 49 * e),
        r.closePath(),
        Ce(r, i[7]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(89 * e, 61 * e),
        r.bezierCurveTo(101 * e, 70 * e, 109 * e, 90 * e, 102 * e, 90 * e),
        r.bezierCurveTo(97 * e, 91 * e, 87 * e, 91 * e, 60 * e, 80 * e),
        r.bezierCurveTo(48 * e, 65 * e, 46 * e, 56 * e, 48 * e, 53 * e),
        r.bezierCurveTo(50 * e, 52 * e, 66 * e, 56 * e, 89 * e, 61 * e),
        r.closePath(),
        Ce(r, i[7]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(99 * e, 59 * e),
        r.bezierCurveTo(115 * e, 45 * e, 125 * e, 42 * e, 129 * e, 47 * e),
        r.bezierCurveTo(138 * e, 56 * e, 140 * e, 63 * e, 138 * e, 67 * e),
        r.bezierCurveTo(131 * e, 80 * e, 122 * e, 87 * e, 114 * e, 90 * e),
        r.bezierCurveTo(105 * e, 80 * e, 95 * e, 62 * e, 98 * e, 61 * e),
        r.closePath(),
        Ce(r, i[7]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(118 * e, 62 * e),
        r.bezierCurveTo(139 * e, 45 * e, 153 * e, 40 * e, 150 * e, 48 * e),
        r.bezierCurveTo(145 * e, 57 * e, 157 * e, 63 * e, 157 * e, 70 * e),
        r.bezierCurveTo(157 * e, 74 * e, 142 * e, 77 * e, 142 * e, 85 * e),
        r.bezierCurveTo(143 * e, 91 * e, 141 * e, 92 * e, 135 * e, 90 * e),
        r.bezierCurveTo(132 * e, 90 * e, 132 * e, 96 * e, 124 * e, 99 * e),
        r.bezierCurveTo(118 * e, 93 * e, 116 * e, 77 * e, 116 * e, 64 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(90 * e, 130 * e),
        r.bezierCurveTo(157 * e, 115 * e, 165 * e, 111 * e, 167 * e, 115 * e),
        r.bezierCurveTo(170 * e, 117 * e, 171 * e, 135 * e, 167 * e, 141 * e),
        r.bezierCurveTo(135.5 * e, 149.5 * e, 135.5 * e, 149.5 * e, 104 * e, 158 * e),
        r.closePath(),
        Ce(r, i[8]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(53 * e, 119 * e),
        r.bezierCurveTo(46 * e, 120 * e, 40 * e, 118 * e, 34 * e, 116 * e),
        r.bezierCurveTo(28 * e, 111 * e, 41 * e, 112 * e, 39 * e, 108 * e),
        r.bezierCurveTo(36 * e, 100 * e, 49 * e, 102 * e, 53 * e, 95 * e),
        r.bezierCurveTo(57 * e, 84 * e, 58 * e, 85 * e, 63 * e, 93 * e),
        r.bezierCurveTo(68 * e, 96 * e, 72 * e, 94 * e, 80 * e, 88 * e),
        r.bezierCurveTo(80 * e, 96 * e, 78 * e, 107 * e, 66 * e, 115 * e),
        r.closePath(),
        Ce(r, i[9], i[10], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(118 * e, 64 * e),
        r.bezierCurveTo(133.5 * e, 57 * e, 133.5 * e, 57 * e, 149 * e, 50 * e),
        r.bezierCurveTo(145 * e, 54 * e, 154 * e, 65 * e, 157 * e, 68 * e),
        r.bezierCurveTo(138.5 * e, 66.5 * e, 138.5 * e, 66.5 * e, 120 * e, 65 * e),
        r.closePath(),
        Ce(r, i[8]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(118 * e, 65 * e),
        r.bezierCurveTo(129 * e, 77 * e, 129 * e, 77 * e, 140 * e, 89 * e),
        r.bezierCurveTo(131 * e, 89 * e, 130 * e, 92 * e, 128 * e, 96 * e),
        r.bezierCurveTo(123.5 * e, 82 * e, 123.5 * e, 82 * e, 119 * e, 68 * e),
        r.closePath(),
        Ce(r, i[8]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(51 * e, 112 * e),
        r.bezierCurveTo(63 * e, 108 * e, 78 * e, 111 * e, 88 * e, 112 * e),
        r.bezierCurveTo(98 * e, 122 * e, 117 * e, 136 * e, 125 * e, 157 * e),
        r.bezierCurveTo(123 * e, 180 * e, 123 * e, 185 * e, 118 * e, 186 * e),
        r.bezierCurveTo(101 * e, 190 * e, 89 * e, 191 * e, 79 * e, 187 * e),
        r.bezierCurveTo(53 * e, 165 * e, 50 * e, 153 * e, 47 * e, 144 * e),
        r.bezierCurveTo(46 * e, 128 * e, 46 * e, 124 * e, 50 * e, 112 * e),
        r.closePath(),
        Ce(r, i[9], i[10], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(50 * e, 114 * e),
        r.bezierCurveTo(81 * e, 149 * e, 80 * e, 147 * e, 80 * e, 149 * e),
        r.bezierCurveTo(82 * e, 155 * e, 80 * e, 182 * e, 74 * e, 182 * e),
        r.bezierCurveTo(60 * e, 172 * e, 52 * e, 157 * e, 47 * e, 144 * e),
        r.closePath(),
        Ce(r, i[11], i[11], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(85 * e, 152 * e),
        r.bezierCurveTo(99 * e, 150 * e, 109 * e, 152 * e, 119 * e, 156 * e),
        r.bezierCurveTo(122 * e, 163 * e, 122 * e, 174 * e, 117 * e, 182 * e),
        r.closePath(),
        r.bezierCurveTo(93 * e, 188 * e, 82 * e, 187 * e, 83 * e, 179 * e),
        Ce(r, i[11], i[11], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(104 * e, 166 * e),
        r.bezierCurveTo(133 * e, 165 * e, 142 * e, 168 * e, 137 * e, 173 * e),
        r.bezierCurveTo(127 * e, 177 * e, 137 * e, 195 * e, 126 * e, 196 * e),
        r.bezierCurveTo(112 * e, 195 * e, 112 * e, 194 * e, 109 * e, 199 * e),
        r.bezierCurveTo(105 * e, 205 * e, 102 * e, 195 * e, 96 * e, 197 * e),
        r.bezierCurveTo(84 * e, 201 * e, 88 * e, 198 * e, 90 * e, 187 * e),
        r.bezierCurveTo(96 * e, 171 * e, 97 * e, 170 * e, 103 * e, 167 * e),
        r.closePath(),
        Ce(r, i[9], i[10], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(105 * e, 168 * e),
        r.bezierCurveTo(118 * e, 172.5 * e, 118 * e, 172.5 * e, 131 * e, 177 * e),
        r.bezierCurveTo(133 * e, 190 * e, 132 * e, 199 * e, 116 * e, 194 * e),
        r.bezierCurveTo(110 * e, 182 * e, 110 * e, 182 * e, 104 * e, 170 * e),
        r.closePath(),
        Ce(r, i[10]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(102 * e, 169 * e),
        r.bezierCurveTo(100.5 * e, 182 * e, 100.5 * e, 182 * e, 99 * e, 195 * e),
        r.bezierCurveTo(93.5 * e, 196.5 * e, 93.5 * e, 196.5 * e, 88 * e, 198 * e),
        r.bezierCurveTo(94 * e, 176 * e, 96 * e, 174 * e, 101 * e, 168 * e),
        r.closePath(),
        Ce(r, i[9], i[9], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(64 * e, 107 * e),
        r.bezierCurveTo(64 * e, 101 * e, 64 * e, 101 * e, 64 * e, 95 * e),
        r.bezierCurveTo(57 * e, 86 * e, 57 * e, 84 * e, 53 * e, 97 * e),
        r.bezierCurveTo(55 * e, 103.5 * e, 55 * e, 103.5 * e, 57 * e, 110 * e),
        r.closePath(),
        Ce(r, i[11], i[11], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(40 * e, 108 * e),
        r.bezierCurveTo(46.5 * e, 111 * e, 46.5 * e, 111 * e, 53 * e, 114 * e),
        r.bezierCurveTo(50.5 * e, 117 * e, 50.5 * e, 117 * e, 48 * e, 120 * e),
        r.bezierCurveTo(40.5 * e, 117.5 * e, 40.5 * e, 117.5 * e, 33 * e, 115 * e),
        r.bezierCurveTo(36 * e, 112 * e, 36 * e, 112 * e, 39 * e, 109 * e),
        r.closePath(),
        Ce(r, i[11], i[11], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(189 * e, 106 * e),
        r.bezierCurveTo(178.5 * e, 110.5 * e, 178.5 * e, 110.5 * e, 168 * e, 115 * e),
        r.bezierCurveTo(168.5 * e, 119 * e, 168.5 * e, 119 * e, 169 * e, 123 * e),
        r.bezierCurveTo(179 * e, 124.5 * e, 179 * e, 124.5 * e, 189 * e, 126 * e),
        r.bezierCurveTo(182 * e, 118 * e, 183 * e, 115 * e, 188 * e, 106 * e),
        r.closePath(),
        Ce(r, i[8]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(69 * e, 178 * e),
        r.bezierCurveTo(69 * e, 141 * e, 70 * e, 136 * e, 77 * e, 137 * e),
        r.bezierCurveTo(88 * e, 133 * e, 101 * e, 134 * e, 108 * e, 137 * e),
        Ce(r, void 0, i[3], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55 * e, 161 * e),
        r.bezierCurveTo(54 * e, 124 * e, 55 * e, 119 * e, 62 * e, 119 * e),
        r.bezierCurveTo(74 * e, 117 * e, 85 * e, 117 * e, 93 * e, 119 * e),
        Ce(r, void 0, i[3], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(91 * e, 29 * e),
        r.bezierCurveTo(74 * e, 33 * e, 62 * e, 46 * e, 57 * e, 54 * e),
        r.bezierCurveTo(57 * e, 63 * e, 68 * e, 76 * e, 77 * e, 87 * e),
        Ce(r, void 0, i[6], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(107 * e, 33 * e),
        r.bezierCurveTo(82 * e, 51 * e, 80 * e, 52 * e, 79 * e, 59 * e),
        r.bezierCurveTo(78 * e, 65 * e, 93 * e, 86 * e, 101 * e, 93 * e),
        Ce(r, void 0, i[6], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(130 * e, 98 * e),
        r.bezierCurveTo(126.5 * e, 103 * e, 126.5 * e, 103 * e, 123 * e, 108 * e),
        r.bezierCurveTo(133.5 * e, 107 * e, 133.5 * e, 107 * e, 144 * e, 106 * e),
        r.bezierCurveTo(138.5 * e, 110 * e, 138.5 * e, 110 * e, 133 * e, 114 * e),
        r.bezierCurveTo(142 * e, 114 * e, 142 * e, 114 * e, 151 * e, 114 * e),
        r.bezierCurveTo(146.5 * e, 119.5 * e, 146.5 * e, 119.5 * e, 142 * e, 125 * e),
        r.bezierCurveTo(146.5 * e, 127 * e, 146.5 * e, 127 * e, 151 * e, 129 * e),
        r.bezierCurveTo(147.5 * e, 132 * e, 147.5 * e, 132 * e, 144 * e, 135 * e),
        r.bezierCurveTo(148 * e, 137 * e, 148 * e, 137 * e, 152 * e, 139 * e),
        r.bezierCurveTo(149 * e, 142.5 * e, 149 * e, 142.5 * e, 146 * e, 146 * e),
        Ce(r, void 0, i[3], 4 * e),
        n
    }
    function O1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 118 * e,
        n.height = 114 * e,
        r.translate(0, 10 * e),
        we(r, 42 * e, 43 * e, 24.758836806279895 * e),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(65 * e, 90 * e),
        r.bezierCurveTo(72 * e, 91 * e, 75 * e, 92 * e, 71 * e, 96 * e),
        r.bezierCurveTo(65 * e, 98 * e, 65 * e, 94 * e, 65 * e, 91 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(87 * e, 45 * e),
        r.bezierCurveTo(108 * e, 59 * e, 100 * e, 86 * e, 85 * e, 91 * e),
        r.bezierCurveTo(80 * e, 96 * e, 68 * e, 95 * e, 58 * e, 87 * e),
        r.bezierCurveTo(53 * e, 80 * e, 61 * e, 64 * e, 66 * e, 58 * e),
        r.bezierCurveTo(73 * e, 48 * e, 78 * e, 44 * e, 87 * e, 45 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(0, -10 * e),
        we(r, 42 * e, 43 * e, 24.758836806279895 * e),
        Ce(r, i[1], i[2], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(65 * e, 90 * e),
        r.bezierCurveTo(72 * e, 91 * e, 75 * e, 92 * e, 71 * e, 96 * e),
        r.bezierCurveTo(65 * e, 98 * e, 65 * e, 94 * e, 65 * e, 91 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(87 * e, 45 * e),
        r.bezierCurveTo(108 * e, 59 * e, 100 * e, 86 * e, 85 * e, 91 * e),
        r.bezierCurveTo(80 * e, 96 * e, 68 * e, 95 * e, 58 * e, 87 * e),
        r.bezierCurveTo(53 * e, 80 * e, 61 * e, 64 * e, 66 * e, 58 * e),
        r.bezierCurveTo(73 * e, 48 * e, 78 * e, 44 * e, 87 * e, 45 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 16 * e),
        r.bezierCurveTo(55 * e, 19 * e, 54 * e, 20 * e, 55 * e, 22 * e),
        r.bezierCurveTo(52 * e, 24.5 * e, 52 * e, 24.5 * e, 49 * e, 27 * e),
        r.bezierCurveTo(45 * e, 25 * e, 45 * e, 25 * e, 41 * e, 23 * e),
        r.bezierCurveTo(45 * e, 19 * e, 48 * e, 16 * e, 52 * e, 16 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(62 * e, 30 * e),
        r.bezierCurveTo(66 * e, 29 * e, 64 * e, 30 * e, 66 * e, 30 * e),
        r.bezierCurveTo(67 * e, 31 * e, 67 * e, 31 * e, 68 * e, 32 * e),
        r.bezierCurveTo(66.5 * e, 33.5 * e, 66.5 * e, 33.5 * e, 65 * e, 35 * e),
        r.bezierCurveTo(63.5 * e, 32.5 * e, 63.5 * e, 32.5 * e, 62 * e, 30 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(29 * e, 21 * e),
        r.bezierCurveTo(31 * e, 22 * e, 31 * e, 26 * e, 29 * e, 29 * e),
        r.bezierCurveTo(26 * e, 28.5 * e, 26 * e, 28.5 * e, 23 * e, 28 * e),
        r.bezierCurveTo(23 * e, 26.5 * e, 23 * e, 26.5 * e, 23 * e, 25 * e),
        r.bezierCurveTo(25 * e, 23 * e, 25 * e, 23 * e, 27 * e, 21 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(18 * e, 36 * e),
        r.bezierCurveTo(23 * e, 36 * e, 24 * e, 42 * e, 19 * e, 46 * e),
        r.bezierCurveTo(12 * e, 39 * e, 15 * e, 38 * e, 18 * e, 37 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 34 * e),
        r.bezierCurveTo(35 * e, 36 * e, 36 * e, 39 * e, 32 * e, 45 * e),
        r.bezierCurveTo(25 * e, 46 * e, 25 * e, 44 * e, 30 * e, 34 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(59 * e, 35 * e),
        r.bezierCurveTo(58 * e, 27 * e, 57 * e, 27 * e, 52 * e, 31 * e),
        r.bezierCurveTo(50 * e, 36 * e, 53 * e, 38 * e, 58 * e, 36 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(63 * e, 46 * e),
        r.bezierCurveTo(64.5 * e, 46.5 * e, 64.5 * e, 46.5 * e, 66 * e, 47 * e),
        r.bezierCurveTo(70 * e, 50 * e, 70 * e, 53 * e, 61 * e, 55 * e),
        r.bezierCurveTo(62 * e, 50.5 * e, 62 * e, 50.5 * e, 63 * e, 46 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(41 * e, 42 * e),
        r.bezierCurveTo(47 * e, 41 * e, 53 * e, 47 * e, 46 * e, 51 * e),
        r.bezierCurveTo(38 * e, 49 * e, 39 * e, 46 * e, 41 * e, 43 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(44 * e, 57 * e),
        r.bezierCurveTo(54 * e, 57 * e, 54 * e, 58 * e, 55 * e, 61 * e),
        r.bezierCurveTo(54 * e, 63 * e, 52 * e, 64 * e, 48 * e, 65 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(20 * e, 52 * e),
        r.bezierCurveTo(25 * e, 51 * e, 27 * e, 50 * e, 28 * e, 54 * e),
        r.bezierCurveTo(27 * e, 58 * e, 24 * e, 58 * e, 22 * e, 58 * e),
        r.bezierCurveTo(21 * e, 55.5 * e, 21 * e, 55.5 * e, 20 * e, 53 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 61 * e),
        r.bezierCurveTo(37 * e, 61 * e, 39 * e, 63 * e, 39 * e, 68 * e),
        r.bezierCurveTo(36 * e, 68.5 * e, 36 * e, 68.5 * e, 33 * e, 69 * e),
        r.bezierCurveTo(30.5 * e, 67.5 * e, 30.5 * e, 67.5 * e, 28 * e, 66 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(88 * e, 45 * e),
        r.bezierCurveTo(90 * e, 46.5 * e, 90 * e, 46.5 * e, 92 * e, 48 * e),
        r.bezierCurveTo(92 * e, 50 * e, 92 * e, 50 * e, 92 * e, 52 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(96 * e, 53 * e),
        r.bezierCurveTo(97.5 * e, 55 * e, 97.5 * e, 55 * e, 99 * e, 57 * e),
        r.bezierCurveTo(97.5 * e, 59.5 * e, 97.5 * e, 59.5 * e, 96 * e, 62 * e),
        r.bezierCurveTo(93.5 * e, 60.5 * e, 93.5 * e, 60.5 * e, 91 * e, 59 * e),
        r.bezierCurveTo(91.5 * e, 57 * e, 91.5 * e, 57 * e, 92 * e, 55 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(92 * e, 71 * e),
        r.bezierCurveTo(94.5 * e, 70.5 * e, 94.5 * e, 70.5 * e, 97 * e, 70 * e),
        r.bezierCurveTo(98.5 * e, 72.5 * e, 98.5 * e, 72.5 * e, 100 * e, 75 * e),
        r.bezierCurveTo(97 * e, 76.5 * e, 97 * e, 76.5 * e, 94 * e, 78 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(95 * e, 82 * e),
        r.bezierCurveTo(96 * e, 83 * e, 96 * e, 83 * e, 97 * e, 84 * e),
        r.bezierCurveTo(97 * e, 85.5 * e, 97 * e, 85.5 * e, 97 * e, 87 * e),
        r.bezierCurveTo(93.5 * e, 87.5 * e, 93.5 * e, 87.5 * e, 90 * e, 88 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(86 * e, 72 * e),
        r.bezierCurveTo(89 * e, 76 * e, 88 * e, 81 * e, 85 * e, 82 * e),
        r.bezierCurveTo(80 * e, 80 * e, 82 * e, 78 * e, 85 * e, 72 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(80 * e, 86 * e),
        r.bezierCurveTo(84 * e, 88 * e, 86 * e, 88 * e, 85 * e, 93 * e),
        r.bezierCurveTo(80 * e, 96 * e, 79 * e, 96 * e, 76 * e, 91 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(84 * e, 46 * e),
        r.bezierCurveTo(93 * e, 51 * e, 91 * e, 62 * e, 80 * e, 78 * e),
        r.bezierCurveTo(74 * e, 86 * e, 66 * e, 90 * e, 60 * e, 86 * e),
        r.bezierCurveTo(55 * e, 79 * e, 57 * e, 73 * e, 67 * e, 57 * e),
        r.bezierCurveTo(71 * e, 51 * e, 79 * e, 44 * e, 84 * e, 46 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(76 * e, 60 * e),
        r.bezierCurveTo(80 * e, 66 * e, 75 * e, 74 * e, 68 * e, 74 * e),
        r.bezierCurveTo(60 * e, 64 * e, 68 * e, 59 * e, 76 * e, 59 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 5 * e),
        n
    }
    function b1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 70 * e
          , a = 90 * e
          , s = 4 * e;
        return n.width = o,
        n.height = a,
        r.save(),
        r.translate(-80 * e, -70 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.bezierCurveTo(130 * e, 79 * e, 132 * e, 86 * e, 130 * e, 93 * e),
        r.bezierCurveTo(128 * e, 100 * e, 121 * e, 107 * e, 120 * e, 107 * e),
        r.bezierCurveTo(120 * e, 107 * e, 115 * e, 98 * e, 115 * e, 92 * e),
        r.bezierCurveTo(115 * e, 86 * e, 119 * e, 76 * e, 127 * e, 73 * e),
        r.closePath(),
        Ce(r, i[0], i[1], s),
        r.restore(),
        r.save(),
        r.translate(-80 * e, -70 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.bezierCurveTo(112 * e, 109 * e, 111 * e, 100 * e, 106 * e, 93 * e),
        r.bezierCurveTo(104 * e, 90 * e, 91 * e, 87 * e, 91 * e, 87 * e),
        r.bezierCurveTo(91 * e, 88 * e, 91 * e, 96 * e, 94 * e, 102 * e),
        r.bezierCurveTo(97 * e, 108 * e, 106 * e, 112 * e, 113 * e, 112 * e),
        r.closePath(),
        Ce(r, i[0], i[1], s),
        r.restore(),
        r.save(),
        r.translate(-80 * e, -70 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.bezierCurveTo(108 * e, 120 * e, 100 * e, 119 * e, 91 * e, 127 * e),
        r.bezierCurveTo(83 * e, 134 * e, 82 * e, 146 * e, 83 * e, 146 * e),
        r.bezierCurveTo(84 * e, 146 * e, 98 * e, 142 * e, 103 * e, 138 * e),
        r.bezierCurveTo(107 * e, 135 * e, 110 * e, 130 * e, 112 * e, 121 * e),
        r.closePath(),
        Ce(r, i[0], i[1], s),
        r.restore(),
        r.save(),
        r.translate(3 * e, -93 * e),
        r.rotate(Math.PI / 5),
        r.globalAlpha = 1,
        r.beginPath(),
        r.bezierCurveTo(130 * e, 79 * e, 132 * e, 86 * e, 130 * e, 93 * e),
        r.bezierCurveTo(128 * e, 100 * e, 121 * e, 107 * e, 120 * e, 107 * e),
        r.bezierCurveTo(120 * e, 107 * e, 115 * e, 98 * e, 115 * e, 92 * e),
        r.bezierCurveTo(115 * e, 86 * e, 119 * e, 76 * e, 127 * e, 73 * e),
        r.closePath(),
        Ce(r, i[0], i[1], s),
        r.restore(),
        n
    }
    function m1(e, t, i, n, r, o, a, s, d, _, u) {
        void 0 === u && (u = 0);
        var l = document.createElement("canvas")
          , c = l.getContext("2d")
          , h = (o = o ? o * e : 0,
        Math.floor(e * i))
          , E = (c.font = h + "px Baloo Paaji",
        c.lineJoin = "round",
        s *= e,
        a ? 2 * s : 0)
          , h = (d = d ? Math.min(c.measureText(t).width + 2 * e + E, d) : c.measureText(t).width + 2 * e + E + u * e * 2,
        (h + o + u) * e + E);
        return l.width = d,
        l.height = h,
        a && (c.fillStyle = a,
        Be(c, 0, 0, d, h, 2 * s),
        c.fill(),
        c.translate(s, s)),
        c.textBaseline = "middle",
        c.font = i + "px Baloo Paaji",
        c.lineJoin = "round",
        r && (c.beginPath(),
        c.fillStyle = r,
        c.fillText(t, 0, h / 2 + o - E / 2, d)),
        c.beginPath(),
        _ && (c.strokeStyle = _,
        c.lineWidth = u,
        c.strokeText(t, u, (h - E) / 2, d)),
        c.fillStyle = n,
        c.fillText(t, u, (h - E) / 2, d),
        l
    }
    function C1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 220 * e
          , a = 230 * e
          , s = 100 * e
          , d = s / 4
          , e = 20 * e;
        return n.width = o,
        n.height = a,
        r.translate(o / 2, a / 2 + e),
        r.globalAlpha = .5,
        A(r, 7, s, d),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -e),
        A(r, 7, s, d),
        Ce(r, i[1]),
        A(r, 6, .65 * s, .65 * d),
        Ce(r, i[2]),
        n
    }
    function R1(e, t, i, n) {
        var r = document.createElement("canvas")
          , o = r.getContext("2d")
          , a = 220 * e
          , s = 220 * e
          , d = 100 * e
          , _ = d / 4;
        return r.width = a,
        r.height = s,
        o.translate(a / 2, s / 2),
        o.globalAlpha = t ? .5 : 1,
        t || o.translate(0 * e, -8 * e),
        A(o, 7, d, _),
        Ce(o, t ? i[0] : i[1]),
        o.globalAlpha = 1,
        0 == n ? (A(o, 6, .65 * d, .65 * _),
        Ce(o, i[2])) : 1 == n && (o.translate(20 * e, 20 * e),
        A(o, 6, .45 * d, .4 * _),
        Ce(o, i[2])),
        r
    }
    function S1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 120 * e
          , a = 150 * e
          , s = 60 * e
          , d = s / 4
          , _ = 15 * e;
        return n.width = o,
        n.height = a,
        r.save(),
        r.translate(o / 2 + 0 * e, a / 2 + 0 * e + _),
        r.rotate(Math.PI / 3),
        r.globalAlpha = .5,
        A(r, 8, s, d),
        Ce(r, i[0]),
        r.restore(),
        r.save(),
        r.translate(o / 2 - 11 * e, a / 2 + 12 * e),
        r.globalAlpha = 1,
        r.rotate(Math.PI / 3),
        r.translate(0, -_),
        A(r, 8, s, d),
        Ce(r, i[1]),
        r.restore(),
        r.save(),
        r.translate(o / 2 - 9 * e, a / 2 - 12 * e),
        r.rotate(Math.PI / 2.8),
        A(r, 5, .5 * s, .4 * d),
        Ce(r, i[2]),
        r.restore(),
        r.save(),
        r.translate(o / 2 + 19 * e, a / 2 + 5 * e),
        r.rotate(+Math.PI),
        A(r, 5, .5 * s, .4 * d),
        Ce(r, i[2]),
        r.restore(),
        r.save(),
        r.translate(o / 2 - 8 * e, a / 2 + 20 * e),
        r.rotate(Math.PI / 2.25),
        A(r, 5, .5 * s, .4 * d),
        Ce(r, i[2]),
        r.restore(),
        n
    }
    function N1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 180 * e
          , a = 210 * e
          , s = 60 * e
          , d = s / 4
          , _ = 20 * e;
        n.width = o,
        n.height = a,
        r.save(),
        r.translate(o / 2 - 0 * e, a / 2 - 35 * e + _),
        r.rotate(Math.PI / -1.8),
        r.globalAlpha = .5,
        r.translate(0 * e, -20 * e),
        A(r, 5, s, d),
        Ce(r, i[0]),
        r.restore(),
        r.save(),
        r.translate(o / 2 + 10 * e, a / 2 + 15 * e + _),
        r.rotate(Math.PI / 2),
        r.globalAlpha = .5,
        r.translate(0 * e, -20 * e),
        A(r, 5, s, d),
        Ce(r, i[0]),
        r.restore(),
        r.save(),
        r.translate(o / 2 - 50 * e, a / 2 + 40 * e + _),
        r.rotate(Math.PI / 3),
        r.globalAlpha = .5,
        r.translate(0, -20 * e),
        A(r, 5, s, d),
        Ce(r, i[0]),
        r.restore(),
        r.save(),
        r.translate(o / 2 - 0 * e, a / 2 - 35 * e),
        r.rotate(Math.PI / -1.8),
        r.globalAlpha = 1,
        r.translate(0 * e, -20 * e),
        A(r, 5, s, d),
        Ce(r, i[1]),
        r.restore(),
        r.save(),
        r.translate(o / 2 + 10 * e, a / 2 + 15 * e),
        r.rotate(Math.PI / 2),
        r.globalAlpha = 1,
        r.translate(0, -20 * e),
        A(r, 5, s, d),
        Ce(r, i[1]),
        r.restore(),
        r.save(),
        r.translate(o / 2 - 50 * e, a / 2 + 40 * e),
        r.rotate(Math.PI / 3),
        r.globalAlpha = 1,
        r.translate(0, -20 * e),
        A(r, 5, s, d),
        Ce(r, i[1]),
        r.restore();
        d = (s = 30 * e) / 4;
        return r.save(),
        r.translate(o / 2 + 5 * e, a / 2 - 20 * e),
        r.rotate(Math.PI / -1.8),
        r.globalAlpha = 1,
        r.translate(0, -20 * e),
        A(r, 5, s, d),
        Ce(r, i[2]),
        r.restore(),
        r.save(),
        r.translate(o / 2 + 0 * e, a / 2 + 10 * e),
        r.rotate(Math.PI / 2),
        r.globalAlpha = 1,
        r.translate(0, -20 * e),
        A(r, 5, s, d),
        Ce(r, i[2]),
        r.restore(),
        r.save(),
        r.translate(o / 2 - 45 * e, a / 2 + 35 * e),
        r.rotate(Math.PI / 3),
        r.globalAlpha = 1,
        r.translate(0, -20 * e),
        A(r, 5, s, d),
        Ce(r, i[2]),
        r.restore(),
        we(r, o / 2 - 7 * e, a / 2 + 7 * e, 5),
        Ce(r, i[2]),
        n
    }
    function D1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 150 * e
          , a = 10 * e
          , s = 4 * e;
        return n.width = 140 * e,
        n.height = o,
        r.translate(-50 * e, -38 * e + a),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.bezierCurveTo(160 * e, 65 * e, 160 * e, 85 * e, 152 * e, 95 * e),
        r.bezierCurveTo(152 * e, 95 * e, 173 * e, 94 * e, 187 * e, 102 * e),
        r.bezierCurveTo(187 * e, 102 * e, 180 * e, 120 * e, 155 * e, 126 * e),
        r.bezierCurveTo(154 * e, 126 * e, 166 * e, 138 * e, 169 * e, 148 * e),
        r.bezierCurveTo(169 * e, 148 * e, 148 * e, 152 * e, 133 * e, 140 * e),
        r.bezierCurveTo(133 * e, 140 * e, 134 * e, 160 * e, 122 * e, 175 * e),
        r.bezierCurveTo(122 * e, 175 * e, 107 * e, 162 * e, 107 * e, 144 * e),
        r.bezierCurveTo(107 * e, 144 * e, 98 * e, 164 * e, 73 * e, 167 * e),
        r.bezierCurveTo(73 * e, 167 * e, 72 * e, 134 * e, 90 * e, 127 * e),
        r.bezierCurveTo(90 * e, 127 * e, 70 * e, 134 * e, 55 * e, 123 * e),
        r.bezierCurveTo(55 * e, 123 * e, 58 * e, 115 * e, 75 * e, 104 * e),
        r.bezierCurveTo(75 * e, 104 * e, 66 * e, 96 * e, 61 * e, 77 * e),
        r.bezierCurveTo(61 * e, 77 * e, 83 * e, 74 * e, 102 * e, 89 * e),
        r.bezierCurveTo(102 * e, 89 * e, 92 * e, 66 * e, 110 * e, 41 * e),
        r.bezierCurveTo(111 * e, 40 * e, 130 * e, 54 * e, 130 * e, 82 * e),
        r.bezierCurveTo(130 * e, 82 * e, 143 * e, 67 * e, 159 * e, 65 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(0, 0 - a),
        r.globalAlpha = 1,
        r.beginPath(),
        r.bezierCurveTo(160 * e, 65 * e, 160 * e, 85 * e, 152 * e, 95 * e),
        r.bezierCurveTo(152 * e, 95 * e, 173 * e, 94 * e, 187 * e, 102 * e),
        r.bezierCurveTo(187 * e, 102 * e, 180 * e, 120 * e, 155 * e, 126 * e),
        r.bezierCurveTo(154 * e, 126 * e, 166 * e, 138 * e, 169 * e, 148 * e),
        r.bezierCurveTo(169 * e, 148 * e, 148 * e, 152 * e, 133 * e, 140 * e),
        r.bezierCurveTo(133 * e, 140 * e, 134 * e, 160 * e, 122 * e, 175 * e),
        r.bezierCurveTo(122 * e, 175 * e, 107 * e, 162 * e, 107 * e, 144 * e),
        r.bezierCurveTo(107 * e, 144 * e, 98 * e, 164 * e, 73 * e, 167 * e),
        r.bezierCurveTo(73 * e, 167 * e, 72 * e, 134 * e, 90 * e, 127 * e),
        r.bezierCurveTo(90 * e, 127 * e, 70 * e, 134 * e, 55 * e, 123 * e),
        r.bezierCurveTo(55 * e, 123 * e, 58 * e, 115 * e, 75 * e, 104 * e),
        r.bezierCurveTo(75 * e, 104 * e, 66 * e, 96 * e, 61 * e, 77 * e),
        r.bezierCurveTo(61 * e, 77 * e, 83 * e, 74 * e, 102 * e, 89 * e),
        r.bezierCurveTo(102 * e, 89 * e, 92 * e, 66 * e, 110 * e, 41 * e),
        r.bezierCurveTo(111 * e, 40 * e, 130 * e, 54 * e, 130 * e, 82 * e),
        r.bezierCurveTo(130 * e, 82 * e, 143 * e, 67 * e, 159 * e, 65 * e),
        r.closePath(),
        Ce(r, i[1], i[2], s),
        n
    }
    function f1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 18 * e
          , o = (n.width = 18 * e,
        n.height = o,
        9 * e)
          , a = 9 * e
          , s = 8 * e
          , s = (r.save(),
        r.translate(o, a),
        r.globalAlpha = 1,
        we(r, 0, 0, s),
        Ce(r, i[0]),
        3 * e);
        return r.translate(0, -3 * e),
        r.globalAlpha = 1,
        we(r, 0, 0, s),
        Ce(r, i[1]),
        r.restore(),
        n
    }
    function v1(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 80 * e,
        i.height = 100 * e,
        n.scale(.5, .5),
        n.translate(10, 15),
        n.globalAlpha = .5,
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(47 * e, 5 * e),
        n.bezierCurveTo(19 * e, 30 * e, 12 * e, 42 * e, 10 * e, 55 * e),
        n.bezierCurveTo(11 * e, 75 * e, 27 * e, 76 * e, 36 * e, 72 * e),
        n.bezierCurveTo(52 * e, 60 * e, 53 * e, 46 * e, 54 * e, 31 * e),
        n.bezierCurveTo(53 * e, 14 * e, 50 * e, 9 * e, 48 * e, 6 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(17 * e, 70 * e),
        n.bezierCurveTo(18 * e, 77 * e, 10 * e, 83 * e, 4 * e, 87 * e),
        Ce(n, void 0, t[0], 10 * e),
        n.translate(0, -10),
        n.globalAlpha = 1,
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(47 * e, 5 * e),
        n.bezierCurveTo(19 * e, 30 * e, 12 * e, 42 * e, 10 * e, 55 * e),
        n.bezierCurveTo(11 * e, 75 * e, 27 * e, 76 * e, 36 * e, 72 * e),
        n.bezierCurveTo(52 * e, 60 * e, 53 * e, 46 * e, 54 * e, 31 * e),
        n.bezierCurveTo(53 * e, 14 * e, 50 * e, 9 * e, 48 * e, 6 * e),
        n.closePath(),
        Ce(n, t[1], t[2], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(17 * e, 70 * e),
        n.bezierCurveTo(18 * e, 77 * e, 10 * e, 83 * e, 4 * e, 87 * e),
        Ce(n, void 0, t[2], 8 * e),
        n.globalAlpha = .5,
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(17 * e, 70 * e),
        n.bezierCurveTo(33 * e, 52 * e, 39 * e, 33 * e, 48 * e, 7 * e),
        Ce(n, void 0, t[2], 8 * e),
        i
    }
    function v1(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 234 * e,
        i.height = 183 * e,
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(76 * e, 25 * e),
        n.bezierCurveTo(150 * e, 3 * e, 181 * e, 22 * e, 203 * e, 41 * e),
        n.bezierCurveTo(225 * e, 63 * e, 225 * e, 105 * e, 198 * e, 133 * e),
        n.bezierCurveTo(179 * e, 157 * e, 134 * e, 178 * e, 81 * e, 164 * e),
        n.bezierCurveTo(19 * e, 148 * e, 6 * e, 95 * e, 21 * e, 66 * e),
        n.bezierCurveTo(34 * e, 39 * e, 52 * e, 33 * e, 75 * e, 25 * e),
        n.closePath(),
        Ce(n, t[0], t[0], 4 * e),
        i
    }
    function M1(e, t, i, n) {
        var r, o = document.createElement("canvas"), a = o.getContext("2d");
        return 0 == n ? (r = 250 * e,
        o.width = 270 * e,
        o.height = r,
        a.beginPath(),
        a.moveTo(140 * e, 3 * e),
        a.translate(-25 * e, -20 * e),
        a.bezierCurveTo(218 * e, 31 * e, 251 * e, 61 * e, 265 * e, 85 * e),
        a.bezierCurveTo(278 * e, 108 * e, 295 * e, 160 * e, 285 * e, 195 * e),
        a.bezierCurveTo(271 * e, 242 * e, 213 * e, 268 * e, 188 * e, 266 * e),
        a.bezierCurveTo(139 * e, 262 * e, 70 * e, 244 * e, 47 * e, 204 * e),
        a.bezierCurveTo(20 * e, 158 * e, 35 * e, 78 * e, 59 * e, 56 * e),
        a.bezierCurveTo(90 * e, 28 * e, 124 * e, 23 * e, 140 * e, 23 * e),
        a.closePath(),
        Ce(a, i[0])) : 1 == n ? (r = 350 * e,
        o.width = 430 * e,
        o.height = r,
        a.beginPath(),
        a.moveTo(180 * e, 5 * e),
        a.translate(-30 * e, -60 * e),
        a.bezierCurveTo(283 * e, 60 * e, 265 * e, 163 * e, 335 * e, 206 * e),
        a.bezierCurveTo(376 * e, 231 * e, 492 * e, 299 * e, 434 * e, 357 * e),
        a.bezierCurveTo(371 * e, 421 * e, 289 * e, 394 * e, 255 * e, 386 * e),
        a.bezierCurveTo(218 * e, 377 * e, 91 * e, 359 * e, 50 * e, 272 * e),
        a.bezierCurveTo(12 * e, 192 * e, 107 * e, 75 * e, 178 * e, 69 * e),
        a.closePath(),
        Ce(a, i[0])) : 2 == n && (r = 300 * e,
        o.width = 400 * e,
        o.height = r,
        a.beginPath(),
        a.moveTo(80 * e, 52 * e),
        a.translate(-40 * e, -30 * e),
        a.bezierCurveTo(124 * e, 77 * e, 241 * e, 22 * e, 311 * e, 65 * e),
        a.bezierCurveTo(352 * e, 90 * e, 404 * e, 176 * e, 346 * e, 234 * e),
        a.bezierCurveTo(283 * e, 298 * e, 179 * e, 299 * e, 145 * e, 291 * e),
        a.bezierCurveTo(108 * e, 282 * e, 100 * e, 239 * e, 63 * e, 205 * e),
        a.bezierCurveTo(37 * e, 181 * e, 45 * e, 131 * e, 80 * e, 107 * e),
        a.closePath(),
        Ce(a, i[0])),
        o
    }
    function L1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = e * t * 2
          , a = e * t * 2
          , s = o / 2
          , d = a / 2;
        return n.width = o,
        n.height = a,
        r.translate(s, d),
        we(r, 0, 0, t * e),
        Ce(r, i),
        n
    }
    function G1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 373 * e,
        n.height = 314 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(184.048583984375 * e, 69.1805419921875 * e),
        Be(r, -40 * e, -28.5 * e, 80 * e, 57 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(185.048583984375 * e, 61.6805419921875 * e),
        r.bezierCurveTo(145.048583984375 * e, 59.6805419921875 * e, 138.048583984375 * e, 41.6805419921875 * e, 148.048583984375 * e, 33.6805419921875 * e),
        r.bezierCurveTo(169.048583984375 * e, 17.6805419921875 * e, 194.048583984375 * e, 20.6805419921875 * e, 210.048583984375 * e, 27.6805419921875 * e),
        r.bezierCurveTo(234.048583984375 * e, 40.6805419921875 * e, 225.048583984375 * e, 57.6805419921875 * e, 186.048583984375 * e, 61.6805419921875 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(224.048583984375 * e, 56.6805419921875 * e),
        r.bezierCurveTo(326.048583984375 * e, 69.6805419921875 * e, 363.048583984375 * e, 148.6805419921875 * e, 349.048583984375 * e, 206.6805419921875 * e),
        r.bezierCurveTo(329.048583984375 * e, 278.6805419921875 * e, 252.048583984375 * e, 283.6805419921875 * e, 206.048583984375 * e, 275.6805419921875 * e),
        r.bezierCurveTo(206.548583984375 * e, 266.6805419921875 * e, 206.548583984375 * e, 266.6805419921875 * e, 207.048583984375 * e, 257.6805419921875 * e),
        r.bezierCurveTo(276.048583984375 * e, 268.6805419921875 * e, 308.048583984375 * e, 239.6805419921875 * e, 323.048583984375 * e, 208.6805419921875 * e),
        r.bezierCurveTo(352.048583984375 * e, 145.6805419921875 * e, 292.048583984375 * e, 86.6805419921875 * e, 223.048583984375 * e, 74.6805419921875 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 6 * e),
        r.save(),
        r.translate(183.548583984375 * e, 119.6805419921875 * e),
        Be(r, -121.5 * e, -45 * e, 243 * e, 90 * e, 40 * e),
        r.restore(),
        Ce(r, i[0], i[0], 6 * e),
        r.save(),
        r.translate(183.048583984375 * e, 155.6805419921875 * e),
        Be(r, -121 * e, -52 * e, 242 * e, 104 * e, 40 * e),
        r.restore(),
        Ce(r, i[0], i[0], 6 * e),
        r.save(),
        r.translate(183.048583984375 * e, 205.1805419921875 * e),
        Be(r, -121 * e, -50.5 * e, 242 * e, 101 * e, 40 * e),
        r.restore(),
        Ce(r, i[0], i[0], 6 * e),
        r.save(),
        r.translate(185.048583984375 * e, 204.1805419921875 * e),
        Be(r, -100 * e, -34.5 * e, 200 * e, 69 * e, 40 * e),
        r.restore(),
        Ce(r, i[0], i[0], 6 * e),
        we(r, 185.048583984375 * e, 257.6805419921875 * e, 27.018512172212592 * e),
        Ce(r, i[0], i[0], 6 * e),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(224.048583984375 * e, 56.6805419921875 * e),
        r.bezierCurveTo(326.048583984375 * e, 69.6805419921875 * e, 363.048583984375 * e, 148.6805419921875 * e, 349.048583984375 * e, 206.6805419921875 * e),
        r.bezierCurveTo(329.048583984375 * e, 278.6805419921875 * e, 252.048583984375 * e, 283.6805419921875 * e, 206.048583984375 * e, 275.6805419921875 * e),
        r.bezierCurveTo(206.548583984375 * e, 266.6805419921875 * e, 206.548583984375 * e, 266.6805419921875 * e, 207.048583984375 * e, 257.6805419921875 * e),
        r.bezierCurveTo(276.048583984375 * e, 268.6805419921875 * e, 308.048583984375 * e, 239.6805419921875 * e, 323.048583984375 * e, 208.6805419921875 * e),
        r.bezierCurveTo(352.048583984375 * e, 145.6805419921875 * e, 292.048583984375 * e, 86.6805419921875 * e, 223.048583984375 * e, 74.6805419921875 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 6 * e),
        r.save(),
        r.translate(184.048583984375 * e, 69.1805419921875 * e),
        Be(r, -40 * e, -28.5 * e, 80 * e, 57 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(185.048583984375 * e, 61.6805419921875 * e),
        r.bezierCurveTo(145.048583984375 * e, 59.6805419921875 * e, 138.048583984375 * e, 41.6805419921875 * e, 148.048583984375 * e, 33.6805419921875 * e),
        r.bezierCurveTo(169.048583984375 * e, 17.6805419921875 * e, 194.048583984375 * e, 20.6805419921875 * e, 210.048583984375 * e, 27.6805419921875 * e),
        r.bezierCurveTo(234.048583984375 * e, 40.6805419921875 * e, 225.048583984375 * e, 57.6805419921875 * e, 186.048583984375 * e, 61.6805419921875 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 6 * e),
        r.save(),
        r.translate(183.548583984375 * e, 119.6805419921875 * e),
        Be(r, -121.5 * e, -45 * e, 243 * e, 90 * e, 40 * e),
        r.restore(),
        Ce(r, i[5], i[4], 6 * e),
        r.save(),
        r.translate(183.048583984375 * e, 155.6805419921875 * e),
        Be(r, -121 * e, -52 * e, 242 * e, 104 * e, 40 * e),
        r.restore(),
        Ce(r, i[3], i[4], 6 * e),
        r.save(),
        r.translate(183.048583984375 * e, 205.1805419921875 * e),
        Be(r, -121 * e, -50.5 * e, 242 * e, 101 * e, 40 * e),
        r.restore(),
        Ce(r, i[6], i[4], 6 * e),
        r.globalCompositeOperation = "destination-out",
        r.save(),
        r.translate(185.048583984375 * e, 204.1805419921875 * e),
        Be(r, -100 * e, -34.5 * e, 200 * e, 69 * e, 40 * e),
        r.restore(),
        Ce(r, i[7], i[8], 6 * e),
        r.globalCompositeOperation = "source-over",
        r.globalAlpha = .5,
        r.save(),
        r.translate(185.048583984375 * e, 204.1805419921875 * e),
        Be(r, -100 * e, -34.5 * e, 200 * e, 69 * e, 40 * e),
        r.restore(),
        Ce(r, i[7], i[8], 6 * e),
        r.globalAlpha = 1,
        r.save(),
        we(r, 185.048583984375 * e, 257.6805419921875 * e, 27.018512172212592 * e),
        Ce(r, i[3], i[4], 6 * e),
        r.restore(),
        n
    }
    function H1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 220 * e,
        n.height = 180 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(-90 * e, -150 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(104 * e, 237.8000030517578 * e),
        r.bezierCurveTo(110 * e, 237.8000030517578 * e, 110 * e, 237.8000030517578 * e, 116 * e, 237.8000030517578 * e),
        r.bezierCurveTo(116 * e, 241.8000030517578 * e, 116 * e, 241.8000030517578 * e, 116 * e, 245.8000030517578 * e),
        r.bezierCurveTo(115 * e, 245.3000030517578 * e, 115 * e, 245.3000030517578 * e, 114 * e, 244.8000030517578 * e),
        r.bezierCurveTo(109.5 * e, 244.8000030517578 * e, 109.5 * e, 244.8000030517578 * e, 105 * e, 244.8000030517578 * e),
        r.closePath(),
        Ce(r, i[5], i[5], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(115 * e, 211.20000457763672 * e),
        r.bezierCurveTo(106 * e, 216.20000457763672 * e, 101 * e, 234.20000457763672 * e, 102 * e, 241.20000457763672 * e),
        r.bezierCurveTo(102 * e, 260.2000045776367 * e, 115 * e, 269.2000045776367 * e, 115 * e, 269.2000045776367 * e),
        r.bezierCurveTo(116 * e, 265.2000045776367 * e, 115.5 * e, 265.2000045776367 * e, 116 * e, 261.2000045776367 * e),
        r.bezierCurveTo(112 * e, 264 * e, 108 * e, 254 * e, 106 * e, 242 * e),
        r.bezierCurveTo(105 * e, 232 * e, 110 * e, 222 * e, 115 * e, 218 * e),
        r.bezierCurveTo(116 * e, 216.75 * e, 115.5 * e, 217.375 * e, 116 * e, 216.75 * e),
        r.closePath(),
        Ce(r, i[5], i[5], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(120 * e, 207 * e),
        r.bezierCurveTo(115 * e, 206 * e, 114 * e, 209 * e, 114 * e, 211 * e),
        r.bezierCurveTo(114 * e, 268 * e, 114 * e, 241 * e, 114 * e, 271 * e),
        r.bezierCurveTo(115 * e, 276 * e, 118 * e, 276 * e, 120 * e, 276 * e),
        r.bezierCurveTo(122 * e, 273 * e, 120.5 * e, 274.5 * e, 121 * e, 273 * e),
        r.bezierCurveTo(121 * e, 241 * e, 121 * e, 241 * e, 121 * e, 209 * e),
        r.closePath(),
        Ce(r, i[4], i[4], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(284 * e, 238 * e),
        r.bezierCurveTo(289.5 * e, 238 * e, 289.5 * e, 238 * e, 295 * e, 238 * e),
        r.bezierCurveTo(295 * e, 241.5 * e, 295 * e, 241.5 * e, 295 * e, 245 * e),
        r.bezierCurveTo(289.5 * e, 245 * e, 289.5 * e, 245 * e, 284 * e, 245 * e),
        r.closePath(),
        Ce(r, i[4], i[4], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(283 * e, 211 * e),
        r.bezierCurveTo(293 * e, 216 * e, 297 * e, 231 * e, 297 * e, 241 * e),
        r.bezierCurveTo(298 * e, 254 * e, 290 * e, 265 * e, 284 * e, 269 * e),
        r.bezierCurveTo(283 * e, 266 * e, 283.5 * e, 266 * e, 283 * e, 263 * e),
        r.bezierCurveTo(290 * e, 260 * e, 292 * e, 251 * e, 293 * e, 242 * e),
        r.bezierCurveTo(292 * e, 223 * e, 289 * e, 224 * e, 284 * e, 218 * e),
        r.closePath(),
        Ce(r, i[4], i[4], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(280 * e, 206 * e),
        r.bezierCurveTo(284 * e, 206 * e, 285 * e, 208 * e, 285 * e, 211 * e),
        r.bezierCurveTo(285 * e, 241.5 * e, 285 * e, 241.5 * e, 285 * e, 272 * e),
        r.bezierCurveTo(284 * e, 275 * e, 284 * e, 275 * e, 280 * e, 275 * e),
        r.bezierCurveTo(279 * e, 273.5 * e, 279 * e, 273.5 * e, 278 * e, 272 * e),
        r.bezierCurveTo(278 * e, 240.5 * e, 278 * e, 240.5 * e, 278 * e, 209 * e),
        r.closePath(),
        Ce(r, i[4], i[4], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(138 * e, 298.40000915527344 * e),
        r.bezierCurveTo(141 * e, 311.40000915527344 * e, 151 * e, 314.40000915527344 * e, 162 * e, 316.40000915527344 * e),
        r.bezierCurveTo(224 * e, 316.40000915527344 * e, 200 * e, 315.90000915527344 * e, 238 * e, 315.40000915527344 * e),
        r.bezierCurveTo(254 * e, 316.40000915527344 * e, 261 * e, 306.40000915527344 * e, 264 * e, 298.40000915527344 * e),
        r.bezierCurveTo(255 * e, 304.40000915527344 * e, 250 * e, 306.40000915527344 * e, 244 * e, 306.40000915527344 * e),
        r.bezierCurveTo(201 * e, 306.90000915527344 * e, 201 * e, 306.90000915527344 * e, 158 * e, 307.40000915527344 * e),
        r.bezierCurveTo(150 * e, 306.40000915527344 * e, 148 * e, 306.40000915527344 * e, 139 * e, 300.40000915527344 * e),
        r.closePath(),
        Ce(r, i[4], i[4], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(161 * e, 177.5999984741211 * e),
        r.bezierCurveTo(130 * e, 175.5999984741211 * e, 123 * e, 190.5999984741211 * e, 122 * e, 205.5999984741211 * e),
        r.bezierCurveTo(121 * e, 277.5999984741211 * e, 122 * e, 242.5999984741211 * e, 122 * e, 279.5999984741211 * e),
        r.bezierCurveTo(128 * e, 297.5999984741211 * e, 137 * e, 299.5999984741211 * e, 143 * e, 300.5999984741211 * e),
        r.bezierCurveTo(163 * e, 301.0999984741211 * e, 163 * e, 301.0999984741211 * e, 183 * e, 301.5999984741211 * e),
        r.bezierCurveTo(150 * e, 300.5999984741211 * e, 135 * e, 290.5999984741211 * e, 134 * e, 267.5999984741211 * e),
        r.bezierCurveTo(133 * e, 245.5999984741211 * e, 146 * e, 235.5999984741211 * e, 164 * e, 235.5999984741211 * e),
        r.bezierCurveTo(206 * e, 236.0999984741211 * e, 206 * e, 236.0999984741211 * e, 248 * e, 236.5999984741211 * e),
        r.bezierCurveTo(266 * e, 243.5999984741211 * e, 268 * e, 259.5999984741211 * e, 267 * e, 266.5999984741211 * e),
        r.bezierCurveTo(266 * e, 288.5999984741211 * e, 251 * e, 294.5999984741211 * e, 244 * e, 297.5999984741211 * e),
        r.bezierCurveTo(228.5 * e, 299.5999984741211 * e, 228.5 * e, 299.5999984741211 * e, 213 * e, 301.5999984741211 * e),
        r.bezierCurveTo(236 * e, 301.0999984741211 * e, 236 * e, 301.0999984741211 * e, 259 * e, 300.5999984741211 * e),
        r.bezierCurveTo(272 * e, 295.5999984741211 * e, 277 * e, 288.5999984741211 * e, 278 * e, 271.5999984741211 * e),
        r.bezierCurveTo(277.5 * e, 236.5999984741211 * e, 277.5 * e, 236.5999984741211 * e, 277 * e, 201.5999984741211 * e),
        r.bezierCurveTo(276 * e, 186.5999984741211 * e, 265 * e, 178.5999984741211 * e, 254 * e, 177.5999984741211 * e),
        r.bezierCurveTo(247.5 * e, 177.5999984741211 * e, 247.5 * e, 177.5999984741211 * e, 241 * e, 177.5999984741211 * e),
        r.bezierCurveTo(255 * e, 202.5999984741211 * e, 214 * e, 217.5999984741211 * e, 201 * e, 215.5999984741211 * e),
        r.bezierCurveTo(170 * e, 215.5999984741211 * e, 152 * e, 197.5999984741211 * e, 161 * e, 178.5999984741211 * e),
        r.closePath(),
        Ce(r, i[4], i[4], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(162 * e, 175.5999984741211 * e),
        r.bezierCurveTo(153 * e, 176.0999984741211 * e, 153 * e, 176.0999984741211 * e, 144 * e, 176.5999984741211 * e),
        r.bezierCurveTo(125 * e, 178.5999984741211 * e, 121 * e, 196.5999984741211 * e, 121 * e, 207.5999984741211 * e),
        r.bezierCurveTo(121 * e, 243.20000076293945 * e, 121 * e, 243.20000076293945 * e, 121 * e, 278.8000030517578 * e),
        r.bezierCurveTo(126 * e, 298.8000030517578 * e, 137 * e, 300.8000030517578 * e, 146 * e, 302.8000030517578 * e),
        r.bezierCurveTo(200.5 * e, 302.8000030517578 * e, 200.5 * e, 302.8000030517578 * e, 255 * e, 302.8000030517578 * e),
        r.bezierCurveTo(271 * e, 301.8000030517578 * e, 279 * e, 288.8000030517578 * e, 279 * e, 273.8000030517578 * e),
        r.bezierCurveTo(279 * e, 236.8000030517578 * e, 279 * e, 236.8000030517578 * e, 279 * e, 199.8000030517578 * e),
        r.bezierCurveTo(274 * e, 178.8000030517578 * e, 263 * e, 177.8000030517578 * e, 255 * e, 175.8000030517578 * e),
        r.bezierCurveTo(248 * e, 175.8000030517578 * e, 248 * e, 175.8000030517578 * e, 241 * e, 175.8000030517578 * e),
        r.bezierCurveTo(240 * e, 175.8000030517578 * e, 240 * e, 175.8000030517578 * e, 239 * e, 175.8000030517578 * e),
        r.bezierCurveTo(254 * e, 200.8000030517578 * e, 222 * e, 211.8000030517578 * e, 202 * e, 212.8000030517578 * e),
        r.bezierCurveTo(168 * e, 213.8000030517578 * e, 151 * e, 190.8000030517578 * e, 163 * e, 176.8000030517578 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(198 * e, 161.4000015258789 * e),
        r.bezierCurveTo(198 * e, 186.9000015258789 * e, 198 * e, 186.9000015258789 * e, 198 * e, 212.4000015258789 * e),
        r.bezierCurveTo(201 * e, 212.4000015258789 * e, 201 * e, 212.4000015258789 * e, 204 * e, 212.4000015258789 * e),
        r.bezierCurveTo(204 * e, 186.9000015258789 * e, 204 * e, 186.9000015258789 * e, 204 * e, 161.4000015258789 * e),
        r.closePath(),
        Ce(r, i[4], i[4], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(161 * e, 194 * e),
        r.bezierCurveTo(188 * e, 169 * e, 231 * e, 179 * e, 241 * e, 194 * e),
        r.bezierCurveTo(239.5 * e, 196 * e, 239.5 * e, 196 * e, 238 * e, 198 * e),
        r.bezierCurveTo(221 * e, 179 * e, 182 * e, 182 * e, 165 * e, 198 * e),
        r.closePath(),
        Ce(r, i[4], i[4], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(157 * e, 188.80000019073486 * e),
        r.bezierCurveTo(162 * e, 150.80000019073486 * e, 241 * e, 150.80000019073486 * e, 245 * e, 188.80000019073486 * e),
        r.bezierCurveTo(242 * e, 224.80000019073486 * e, 162 * e, 228.80000019073486 * e, 157 * e, 188.80000019073486 * e),
        r.bezierCurveTo(159 * e, 188.80000019073486 * e, 159 * e, 188.80000019073486 * e, 161 * e, 188.80000019073486 * e),
        r.bezierCurveTo(168 * e, 216.80000019073486 * e, 231 * e, 218.80000019073486 * e, 241 * e, 188.80000019073486 * e),
        r.bezierCurveTo(236 * e, 156.80000019073486 * e, 169 * e, 152.80000019073486 * e, 161 * e, 188.80000019073486 * e),
        r.closePath(),
        Ce(r, i[4], i[4], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(156 * e, 188 * e),
        r.bezierCurveTo(160 * e, 164 * e, 183 * e, 159 * e, 201 * e, 158 * e),
        r.bezierCurveTo(232 * e, 159 * e, 244 * e, 174 * e, 246 * e, 188 * e),
        r.bezierCurveTo(245 * e, 212 * e, 213 * e, 219 * e, 201 * e, 218 * e),
        r.bezierCurveTo(181 * e, 221 * e, 158 * e, 207 * e, 156 * e, 190 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(162 * e, 189 * e),
        r.bezierCurveTo(166 * e, 170 * e, 185 * e, 165 * e, 201 * e, 164 * e),
        r.bezierCurveTo(227 * e, 165 * e, 240 * e, 178 * e, 239 * e, 188 * e),
        r.bezierCurveTo(239 * e, 204 * e, 210 * e, 210 * e, 201 * e, 210 * e),
        r.bezierCurveTo(182 * e, 211 * e, 166 * e, 200 * e, 162 * e, 190 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(131 * e, 262 * e),
        r.bezierCurveTo(136 * e, 241 * e, 144 * e, 236 * e, 158 * e, 233 * e),
        r.bezierCurveTo(200.5 * e, 233 * e, 229 * e, 232 * e, 243 * e, 233 * e),
        r.bezierCurveTo(259 * e, 235 * e, 267 * e, 248 * e, 269 * e, 260 * e),
        r.bezierCurveTo(269 * e, 266.5 * e, 269 * e, 266.5 * e, 269 * e, 273 * e),
        r.bezierCurveTo(265 * e, 290 * e, 251 * e, 297 * e, 242 * e, 298 * e),
        r.bezierCurveTo(202 * e, 298 * e, 202 * e, 298 * e, 162 * e, 298 * e),
        r.bezierCurveTo(148 * e, 298 * e, 136 * e, 289 * e, 132 * e, 273 * e),
        r.bezierCurveTo(131.5 * e, 268 * e, 131.5 * e, 268 * e, 131 * e, 263 * e),
        r.bezierCurveTo(135 * e, 263 * e, 135 * e, 263 * e, 139 * e, 263 * e),
        r.bezierCurveTo(139 * e, 281 * e, 151 * e, 287 * e, 160 * e, 290 * e),
        r.bezierCurveTo(200.5 * e, 290 * e, 200.5 * e, 290 * e, 241 * e, 290 * e),
        r.bezierCurveTo(252 * e, 290 * e, 257 * e, 281 * e, 262 * e, 271 * e),
        r.bezierCurveTo(261.5 * e, 267 * e, 261.5 * e, 267 * e, 261 * e, 263 * e),
        r.bezierCurveTo(260 * e, 249 * e, 251 * e, 242 * e, 241 * e, 241 * e),
        r.bezierCurveTo(240.5 * e, 240.5 * e, 240.5 * e, 240.5 * e, 240 * e, 240 * e),
        r.bezierCurveTo(200 * e, 240 * e, 200 * e, 240 * e, 160 * e, 240 * e),
        r.bezierCurveTo(145 * e, 244 * e, 142 * e, 250 * e, 139 * e, 264 * e),
        r.closePath(),
        Ce(r, i[4], i[4], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(130 * e, 264 * e),
        r.bezierCurveTo(132 * e, 244 * e, 144 * e, 235 * e, 157 * e, 232 * e),
        r.bezierCurveTo(245 * e, 232 * e, 201 * e, 232 * e, 245 * e, 232 * e),
        r.bezierCurveTo(264 * e, 235 * e, 269 * e, 251 * e, 270 * e, 264 * e),
        r.bezierCurveTo(272 * e, 291 * e, 248 * e, 299 * e, 242 * e, 299 * e),
        r.bezierCurveTo(200 * e, 299 * e, 200 * e, 299 * e, 158 * e, 299 * e),
        r.bezierCurveTo(139 * e, 298 * e, 130 * e, 276 * e, 130 * e, 265 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(140 * e, 265.33333587646484 * e),
        r.bezierCurveTo(141 * e, 250.33333587646484 * e, 148 * e, 244.33333587646484 * e, 160 * e, 241.33333587646484 * e),
        r.bezierCurveTo(200 * e, 241.33333587646484 * e, 200 * e, 241.33333587646484 * e, 240 * e, 241.33333587646484 * e),
        r.bezierCurveTo(256 * e, 243.33333587646484 * e, 260 * e, 255.33333587646484 * e, 260 * e, 265.33333587646484 * e),
        r.bezierCurveTo(261 * e, 281.33333587646484 * e, 247 * e, 289.33333587646484 * e, 240 * e, 289.33333587646484 * e),
        r.bezierCurveTo(161 * e, 289.33333587646484 * e, 200.5 * e, 289.33333587646484 * e, 161 * e, 289.33333587646484 * e),
        r.bezierCurveTo(149 * e, 288.33333587646484 * e, 142 * e, 278.33333587646484 * e, 140 * e, 266.33333587646484 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.globalAlpha = .5,
        r.scale(1, 1),
        r.translate(105 * e, 155 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(59.27557373046875 * e, 20.406280517578125 * e),
        r.bezierCurveTo(74.27557373046875 * e, 5.406280517578125 * e, 90.27557373046875 * e, 6.406280517578125 * e, 99.27557373046875 * e, 5.406280517578125 * e),
        r.bezierCurveTo(120.27557373046875 * e, 5.406280517578125 * e, 126.27557373046875 * e, 10.406280517578125 * e, 136.27557373046875 * e, 20.406280517578125 * e),
        r.bezierCurveTo(157.77557373046875 * e, 37.906280517578125 * e, 157.77557373046875 * e, 37.906280517578125 * e, 179.27557373046875 * e, 55.406280517578125 * e),
        r.bezierCurveTo(190.27557373046875 * e, 63.406280517578125 * e, 192.27557373046875 * e, 77.40628051757812 * e, 189.27557373046875 * e, 91.40628051757812 * e),
        r.bezierCurveTo(183.27557373046875 * e, 108.40628051757812 * e, 176.27557373046875 * e, 110.40628051757812 * e, 169.27557373046875 * e, 118.40628051757812 * e),
        r.bezierCurveTo(152.27557373046875 * e, 133.40628051757812 * e, 152.27557373046875 * e, 133.40628051757812 * e, 135.27557373046875 * e, 148.40628051757812 * e),
        r.bezierCurveTo(87.27557373046875 * e, 143.40628051757812 * e, 87.27557373046875 * e, 143.40628051757812 * e, 39.27557373046875 * e, 138.40628051757812 * e),
        r.bezierCurveTo(26.77557373046875 * e, 123.40628051757812 * e, 26.77557373046875 * e, 123.40628051757812 * e, 14.27557373046875 * e, 108.40628051757812 * e),
        r.bezierCurveTo(2.27557373046875 * e, 95.40628051757812 * e, 2.27557373046875 * e, 92.40628051757812 * e, 3.27557373046875 * e, 83.40628051757812 * e),
        r.bezierCurveTo(4.27557373046875 * e, 63.406280517578125 * e, 12.27557373046875 * e, 60.406280517578125 * e, 24.27557373046875 * e, 40.406280517578125 * e),
        r.closePath(),
        Ce(r, i[5], i[5], 4 * e),
        r.globalAlpha = 1,
        r.translate(-110 * e, -155 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(104 * e, 237.8000030517578 * e),
        r.bezierCurveTo(110 * e, 237.8000030517578 * e, 110 * e, 237.8000030517578 * e, 116 * e, 237.8000030517578 * e),
        r.bezierCurveTo(116 * e, 241.8000030517578 * e, 116 * e, 241.8000030517578 * e, 116 * e, 245.8000030517578 * e),
        r.bezierCurveTo(115 * e, 245.3000030517578 * e, 115 * e, 245.3000030517578 * e, 114 * e, 244.8000030517578 * e),
        r.bezierCurveTo(109.5 * e, 244.8000030517578 * e, 109.5 * e, 244.8000030517578 * e, 105 * e, 244.8000030517578 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(115 * e, 211.20000457763672 * e),
        r.bezierCurveTo(106 * e, 216.20000457763672 * e, 101 * e, 234.20000457763672 * e, 102 * e, 241.20000457763672 * e),
        r.bezierCurveTo(102 * e, 260.2000045776367 * e, 115 * e, 269.2000045776367 * e, 115 * e, 269.2000045776367 * e),
        r.bezierCurveTo(116 * e, 265.2000045776367 * e, 115.5 * e, 265.2000045776367 * e, 116 * e, 261.2000045776367 * e),
        r.bezierCurveTo(112 * e, 264 * e, 108 * e, 254 * e, 106 * e, 242 * e),
        r.bezierCurveTo(105 * e, 232 * e, 110 * e, 222 * e, 115 * e, 218 * e),
        r.bezierCurveTo(116 * e, 216.75 * e, 115.5 * e, 217.375 * e, 116 * e, 216.75 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(120 * e, 207 * e),
        r.bezierCurveTo(115 * e, 206 * e, 114 * e, 209 * e, 114 * e, 211 * e),
        r.bezierCurveTo(114 * e, 268 * e, 114 * e, 241 * e, 114 * e, 271 * e),
        r.bezierCurveTo(115 * e, 276 * e, 118 * e, 276 * e, 120 * e, 276 * e),
        r.bezierCurveTo(122 * e, 273 * e, 120.5 * e, 274.5 * e, 121 * e, 273 * e),
        r.bezierCurveTo(121 * e, 241 * e, 121 * e, 241 * e, 121 * e, 209 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(284 * e, 238 * e),
        r.bezierCurveTo(289.5 * e, 238 * e, 289.5 * e, 238 * e, 295 * e, 238 * e),
        r.bezierCurveTo(295 * e, 241.5 * e, 295 * e, 241.5 * e, 295 * e, 245 * e),
        r.bezierCurveTo(289.5 * e, 245 * e, 289.5 * e, 245 * e, 284 * e, 245 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(283 * e, 211 * e),
        r.bezierCurveTo(293 * e, 216 * e, 297 * e, 231 * e, 297 * e, 241 * e),
        r.bezierCurveTo(298 * e, 254 * e, 290 * e, 265 * e, 284 * e, 269 * e),
        r.bezierCurveTo(283 * e, 266 * e, 283.5 * e, 266 * e, 283 * e, 263 * e),
        r.bezierCurveTo(290 * e, 260 * e, 292 * e, 251 * e, 293 * e, 242 * e),
        r.bezierCurveTo(292 * e, 223 * e, 289 * e, 224 * e, 284 * e, 218 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(280 * e, 206 * e),
        r.bezierCurveTo(284 * e, 206 * e, 285 * e, 208 * e, 285 * e, 211 * e),
        r.bezierCurveTo(285 * e, 241.5 * e, 285 * e, 241.5 * e, 285 * e, 272 * e),
        r.bezierCurveTo(284 * e, 275 * e, 284 * e, 275 * e, 280 * e, 275 * e),
        r.bezierCurveTo(279 * e, 273.5 * e, 279 * e, 273.5 * e, 278 * e, 272 * e),
        r.bezierCurveTo(278 * e, 240.5 * e, 278 * e, 240.5 * e, 278 * e, 209 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(138 * e, 298.40000915527344 * e),
        r.bezierCurveTo(141 * e, 311.40000915527344 * e, 151 * e, 314.40000915527344 * e, 162 * e, 316.40000915527344 * e),
        r.bezierCurveTo(224 * e, 316.40000915527344 * e, 200 * e, 315.90000915527344 * e, 238 * e, 315.40000915527344 * e),
        r.bezierCurveTo(254 * e, 316.40000915527344 * e, 261 * e, 306.40000915527344 * e, 264 * e, 298.40000915527344 * e),
        r.bezierCurveTo(255 * e, 304.40000915527344 * e, 250 * e, 306.40000915527344 * e, 244 * e, 306.40000915527344 * e),
        r.bezierCurveTo(201 * e, 306.90000915527344 * e, 201 * e, 306.90000915527344 * e, 158 * e, 307.40000915527344 * e),
        r.bezierCurveTo(150 * e, 306.40000915527344 * e, 148 * e, 306.40000915527344 * e, 139 * e, 300.40000915527344 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(161 * e, 177.5999984741211 * e),
        r.bezierCurveTo(130 * e, 175.5999984741211 * e, 123 * e, 190.5999984741211 * e, 122 * e, 205.5999984741211 * e),
        r.bezierCurveTo(121 * e, 277.5999984741211 * e, 122 * e, 242.5999984741211 * e, 122 * e, 279.5999984741211 * e),
        r.bezierCurveTo(128 * e, 297.5999984741211 * e, 137 * e, 299.5999984741211 * e, 143 * e, 300.5999984741211 * e),
        r.bezierCurveTo(163 * e, 301.0999984741211 * e, 163 * e, 301.0999984741211 * e, 183 * e, 301.5999984741211 * e),
        r.bezierCurveTo(150 * e, 300.5999984741211 * e, 135 * e, 290.5999984741211 * e, 134 * e, 267.5999984741211 * e),
        r.bezierCurveTo(133 * e, 245.5999984741211 * e, 146 * e, 235.5999984741211 * e, 164 * e, 235.5999984741211 * e),
        r.bezierCurveTo(206 * e, 236.0999984741211 * e, 206 * e, 236.0999984741211 * e, 248 * e, 236.5999984741211 * e),
        r.bezierCurveTo(266 * e, 243.5999984741211 * e, 268 * e, 259.5999984741211 * e, 267 * e, 266.5999984741211 * e),
        r.bezierCurveTo(266 * e, 288.5999984741211 * e, 251 * e, 294.5999984741211 * e, 244 * e, 297.5999984741211 * e),
        r.bezierCurveTo(228.5 * e, 299.5999984741211 * e, 228.5 * e, 299.5999984741211 * e, 213 * e, 301.5999984741211 * e),
        r.bezierCurveTo(236 * e, 301.0999984741211 * e, 236 * e, 301.0999984741211 * e, 259 * e, 300.5999984741211 * e),
        r.bezierCurveTo(272 * e, 295.5999984741211 * e, 277 * e, 288.5999984741211 * e, 278 * e, 271.5999984741211 * e),
        r.bezierCurveTo(277.5 * e, 236.5999984741211 * e, 277.5 * e, 236.5999984741211 * e, 277 * e, 201.5999984741211 * e),
        r.bezierCurveTo(276 * e, 186.5999984741211 * e, 265 * e, 178.5999984741211 * e, 254 * e, 177.5999984741211 * e),
        r.bezierCurveTo(247.5 * e, 177.5999984741211 * e, 247.5 * e, 177.5999984741211 * e, 241 * e, 177.5999984741211 * e),
        r.bezierCurveTo(255 * e, 202.5999984741211 * e, 214 * e, 217.5999984741211 * e, 201 * e, 215.5999984741211 * e),
        r.bezierCurveTo(170 * e, 215.5999984741211 * e, 152 * e, 197.5999984741211 * e, 161 * e, 178.5999984741211 * e),
        r.closePath(),
        Ce(r, i[2], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(162 * e, 175.5999984741211 * e),
        r.bezierCurveTo(153 * e, 176.0999984741211 * e, 153 * e, 176.0999984741211 * e, 144 * e, 176.5999984741211 * e),
        r.bezierCurveTo(125 * e, 178.5999984741211 * e, 121 * e, 196.5999984741211 * e, 121 * e, 207.5999984741211 * e),
        r.bezierCurveTo(121 * e, 243.20000076293945 * e, 121 * e, 243.20000076293945 * e, 121 * e, 278.8000030517578 * e),
        r.bezierCurveTo(126 * e, 298.8000030517578 * e, 137 * e, 300.8000030517578 * e, 146 * e, 302.8000030517578 * e),
        r.bezierCurveTo(200.5 * e, 302.8000030517578 * e, 200.5 * e, 302.8000030517578 * e, 255 * e, 302.8000030517578 * e),
        r.bezierCurveTo(271 * e, 301.8000030517578 * e, 279 * e, 288.8000030517578 * e, 279 * e, 273.8000030517578 * e),
        r.bezierCurveTo(279 * e, 236.8000030517578 * e, 279 * e, 236.8000030517578 * e, 279 * e, 199.8000030517578 * e),
        r.bezierCurveTo(274 * e, 178.8000030517578 * e, 263 * e, 177.8000030517578 * e, 255 * e, 175.8000030517578 * e),
        r.bezierCurveTo(248 * e, 175.8000030517578 * e, 248 * e, 175.8000030517578 * e, 241 * e, 175.8000030517578 * e),
        r.bezierCurveTo(240 * e, 175.8000030517578 * e, 240 * e, 175.8000030517578 * e, 239 * e, 175.8000030517578 * e),
        r.bezierCurveTo(254 * e, 200.8000030517578 * e, 222 * e, 211.8000030517578 * e, 202 * e, 212.8000030517578 * e),
        r.bezierCurveTo(168 * e, 213.8000030517578 * e, 151 * e, 190.8000030517578 * e, 163 * e, 176.8000030517578 * e),
        r.closePath(),
        Ce(r, void 0, i[3], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(198 * e, 161.4000015258789 * e),
        r.bezierCurveTo(198 * e, 186.9000015258789 * e, 198 * e, 186.9000015258789 * e, 198 * e, 212.4000015258789 * e),
        r.bezierCurveTo(201 * e, 212.4000015258789 * e, 201 * e, 212.4000015258789 * e, 204 * e, 212.4000015258789 * e),
        r.bezierCurveTo(204 * e, 186.9000015258789 * e, 204 * e, 186.9000015258789 * e, 204 * e, 161.4000015258789 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(161 * e, 194 * e),
        r.bezierCurveTo(188 * e, 169 * e, 231 * e, 179 * e, 241 * e, 194 * e),
        r.bezierCurveTo(239.5 * e, 196 * e, 239.5 * e, 196 * e, 238 * e, 198 * e),
        r.bezierCurveTo(221 * e, 179 * e, 182 * e, 182 * e, 165 * e, 198 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(157 * e, 188.80000019073486 * e),
        r.bezierCurveTo(162 * e, 150.80000019073486 * e, 241 * e, 150.80000019073486 * e, 245 * e, 188.80000019073486 * e),
        r.bezierCurveTo(242 * e, 224.80000019073486 * e, 162 * e, 228.80000019073486 * e, 157 * e, 188.80000019073486 * e),
        r.bezierCurveTo(159 * e, 188.80000019073486 * e, 159 * e, 188.80000019073486 * e, 161 * e, 188.80000019073486 * e),
        r.bezierCurveTo(168 * e, 216.80000019073486 * e, 231 * e, 218.80000019073486 * e, 241 * e, 188.80000019073486 * e),
        r.bezierCurveTo(236 * e, 156.80000019073486 * e, 169 * e, 152.80000019073486 * e, 161 * e, 188.80000019073486 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(156 * e, 188 * e),
        r.bezierCurveTo(160 * e, 164 * e, 183 * e, 159 * e, 201 * e, 158 * e),
        r.bezierCurveTo(232 * e, 159 * e, 244 * e, 174 * e, 246 * e, 188 * e),
        r.bezierCurveTo(245 * e, 212 * e, 213 * e, 219 * e, 201 * e, 218 * e),
        r.bezierCurveTo(181 * e, 221 * e, 158 * e, 207 * e, 156 * e, 190 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(162 * e, 189 * e),
        r.bezierCurveTo(166 * e, 170 * e, 185 * e, 165 * e, 201 * e, 164 * e),
        r.bezierCurveTo(227 * e, 165 * e, 240 * e, 178 * e, 239 * e, 188 * e),
        r.bezierCurveTo(239 * e, 204 * e, 210 * e, 210 * e, 201 * e, 210 * e),
        r.bezierCurveTo(182 * e, 211 * e, 166 * e, 200 * e, 162 * e, 190 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(131 * e, 262 * e),
        r.bezierCurveTo(136 * e, 241 * e, 144 * e, 236 * e, 158 * e, 233 * e),
        r.bezierCurveTo(200.5 * e, 233 * e, 229 * e, 232 * e, 243 * e, 233 * e),
        r.bezierCurveTo(259 * e, 235 * e, 267 * e, 248 * e, 269 * e, 260 * e),
        r.bezierCurveTo(269 * e, 266.5 * e, 269 * e, 266.5 * e, 269 * e, 273 * e),
        r.bezierCurveTo(265 * e, 290 * e, 251 * e, 297 * e, 242 * e, 298 * e),
        r.bezierCurveTo(202 * e, 298 * e, 202 * e, 298 * e, 162 * e, 298 * e),
        r.bezierCurveTo(148 * e, 298 * e, 136 * e, 289 * e, 132 * e, 273 * e),
        r.bezierCurveTo(131.5 * e, 268 * e, 131.5 * e, 268 * e, 131 * e, 263 * e),
        r.bezierCurveTo(135 * e, 263 * e, 135 * e, 263 * e, 139 * e, 263 * e),
        r.bezierCurveTo(139 * e, 281 * e, 151 * e, 287 * e, 160 * e, 290 * e),
        r.bezierCurveTo(200.5 * e, 290 * e, 200.5 * e, 290 * e, 241 * e, 290 * e),
        r.bezierCurveTo(252 * e, 290 * e, 257 * e, 281 * e, 262 * e, 271 * e),
        r.bezierCurveTo(261.5 * e, 267 * e, 261.5 * e, 267 * e, 261 * e, 263 * e),
        r.bezierCurveTo(260 * e, 249 * e, 251 * e, 242 * e, 241 * e, 241 * e),
        r.bezierCurveTo(240.5 * e, 240.5 * e, 240.5 * e, 240.5 * e, 240 * e, 240 * e),
        r.bezierCurveTo(200 * e, 240 * e, 200 * e, 240 * e, 160 * e, 240 * e),
        r.bezierCurveTo(145 * e, 244 * e, 142 * e, 250 * e, 139 * e, 264 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(130 * e, 264 * e),
        r.bezierCurveTo(132 * e, 244 * e, 144 * e, 235 * e, 157 * e, 232 * e),
        r.bezierCurveTo(245 * e, 232 * e, 201 * e, 232 * e, 245 * e, 232 * e),
        r.bezierCurveTo(264 * e, 235 * e, 269 * e, 251 * e, 270 * e, 264 * e),
        r.bezierCurveTo(272 * e, 291 * e, 248 * e, 299 * e, 242 * e, 299 * e),
        r.bezierCurveTo(200 * e, 299 * e, 200 * e, 299 * e, 158 * e, 299 * e),
        r.bezierCurveTo(139 * e, 298 * e, 130 * e, 276 * e, 130 * e, 265 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 2 * e),
        n
    }
    function P1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 400 * e,
        n.height = 400 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(96.5 * e, 277.34375 * e),
        r.bezierCurveTo(197.5 * e, 259.84375 * e, 197.5 * e, 259.84375 * e, 298.5 * e, 242.34375 * e),
        r.bezierCurveTo(311.5 * e, 231.34375 * e, 307.5 * e, 168.34375 * e, 298.5 * e, 150.34375 * e),
        r.bezierCurveTo(198 * e, 170.34375 * e, 198 * e, 170.34375 * e, 97.5 * e, 190.34375 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(98.5 * e, 214.34375 * e),
        r.bezierCurveTo(199 * e, 196.34375 * e, 199 * e, 196.34375 * e, 299.5 * e, 178.34375 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(98.5 * e, 247.34375 * e),
        r.bezierCurveTo(201.5 * e, 229.34375 * e, 201.5 * e, 229.34375 * e, 304.5 * e, 211.34375 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(97.5 * e, 189.34375 * e),
        r.bezierCurveTo(97 * e, 199.84375 * e, 97 * e, 199.84375 * e, 96.5 * e, 210.34375 * e),
        r.bezierCurveTo(110.5 * e, 204.34375 * e, 110.5 * e, 204.34375 * e, 124.5 * e, 198.34375 * e),
        r.bezierCurveTo(137.5 * e, 203.84375 * e, 137.5 * e, 203.84375 * e, 150.5 * e, 209.34375 * e),
        r.bezierCurveTo(172 * e, 197.84375 * e, 172 * e, 197.84375 * e, 193.5 * e, 186.34375 * e),
        r.bezierCurveTo(211.5 * e, 189.84375 * e, 211.5 * e, 189.84375 * e, 229.5 * e, 193.34375 * e),
        r.bezierCurveTo(240.5 * e, 193.34375 * e, 240.5 * e, 193.34375 * e, 251.5 * e, 193.34375 * e),
        r.bezierCurveTo(261 * e, 182.84375 * e, 261 * e, 182.84375 * e, 270.5 * e, 172.34375 * e),
        r.bezierCurveTo(287.5 * e, 169.34375 * e, 287.5 * e, 169.34375 * e, 304.5 * e, 166.34375 * e),
        r.bezierCurveTo(304.5 * e, 156.34375 * e, 300.5 * e, 145.34375 * e, 298.5 * e, 147.34375 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(300.5 * e, 147.34375 * e),
        r.bezierCurveTo(293.5 * e, 121.34375 * e, 278.5 * e, 106.34375 * e, 256.5 * e, 101.34375 * e),
        r.bezierCurveTo(176.5 * e, 145.34375 * e, 176.5 * e, 145.34375 * e, 96.5 * e, 189.34375 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 12 * e),
        we(r, 252.5 * e, 129.34375 * e, 18.027756377319946 * e),
        Ce(r, i[7]),
        we(r, 248.5 * e, 121.34375 * e, 8.246211251235321 * e),
        Ce(r, i[8]),
        n
    }
    function B1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 400 * e,
        n.height = 400 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(10 * e, 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(100.5 * e, 126.34375 * e),
        r.bezierCurveTo(151.5 * e, 104.34375 * e, 279.5 * e, 188.34375 * e, 297.5 * e, 292.34375 * e),
        r.bezierCurveTo(222.5 * e, 307.34375 * e, 106.5 * e, 196.34375 * e, 100.5 * e, 127.34375 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(106.5 * e, 131.34375 * e),
        r.bezierCurveTo(140.5 * e, 142.34375 * e, 225.5 * e, 184.34375 * e, 290.5 * e, 287.34375 * e),
        r.bezierCurveTo(270.5 * e, 188.34375 * e, 152.5 * e, 118.34375 * e, 107.5 * e, 131.34375 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(157.5 * e, 137.34375 * e),
        r.bezierCurveTo(161.5 * e, 138.34375 * e, 164.5 * e, 140.34375 * e, 168.5 * e, 142.34375 * e),
        r.bezierCurveTo(165.5 * e, 156.34375 * e, 141.5 * e, 176.34375 * e, 126.5 * e, 179.34375 * e),
        r.bezierCurveTo(123.5 * e, 173.34375 * e, 120.5 * e, 169.34375 * e, 120.5 * e, 169.34375 * e),
        r.bezierCurveTo(141.5 * e, 161.34375 * e, 156.5 * e, 145.34375 * e, 155.5 * e, 136.34375 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(196.5 * e, 151.34375 * e),
        r.bezierCurveTo(211.5 * e, 158.34375 * e, 224.5 * e, 171.34375 * e, 229.5 * e, 176.34375 * e),
        r.bezierCurveTo(246.5 * e, 163.34375 * e, 259.5 * e, 166.34375 * e, 272.5 * e, 168.34375 * e),
        r.bezierCurveTo(254.5 * e, 146.34375 * e, 214.5 * e, 145.34375 * e, 198.5 * e, 151.34375 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(154.5 * e, 222.34375 * e),
        r.bezierCurveTo(164.5 * e, 234.34375 * e, 173.5 * e, 242.34375 * e, 178.5 * e, 245.34375 * e),
        r.bezierCurveTo(174.5 * e, 265.34375 * e, 180.5 * e, 274.34375 * e, 186.5 * e, 283.34375 * e),
        r.bezierCurveTo(165.5 * e, 277.34375 * e, 151.5 * e, 245.34375 * e, 155.5 * e, 224.34375 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(279.5 * e, 294.34375 * e),
        r.bezierCurveTo(286.5 * e, 285.84375 * e, 286.5 * e, 285.84375 * e, 293.5 * e, 277.34375 * e),
        r.bezierCurveTo(315.5 * e, 280.34375 * e, 315.5 * e, 280.34375 * e, 337.5 * e, 283.34375 * e),
        r.bezierCurveTo(340.5 * e, 311.34375 * e, 317.5 * e, 326.34375 * e, 307.5 * e, 331.34375 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 12 * e),
        r.globalAlpha = 1,
        r.translate(-10 * e, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(100.5 * e, 126.34375 * e),
        r.bezierCurveTo(151.5 * e, 104.34375 * e, 279.5 * e, 188.34375 * e, 297.5 * e, 292.34375 * e),
        r.bezierCurveTo(222.5 * e, 307.34375 * e, 106.5 * e, 196.34375 * e, 100.5 * e, 127.34375 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(106.5 * e, 131.34375 * e),
        r.bezierCurveTo(140.5 * e, 142.34375 * e, 225.5 * e, 184.34375 * e, 290.5 * e, 287.34375 * e),
        r.bezierCurveTo(270.5 * e, 188.34375 * e, 152.5 * e, 118.34375 * e, 107.5 * e, 131.34375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(157.5 * e, 137.34375 * e),
        r.bezierCurveTo(161.5 * e, 138.34375 * e, 164.5 * e, 140.34375 * e, 168.5 * e, 142.34375 * e),
        r.bezierCurveTo(165.5 * e, 156.34375 * e, 141.5 * e, 176.34375 * e, 126.5 * e, 179.34375 * e),
        r.bezierCurveTo(123.5 * e, 173.34375 * e, 120.5 * e, 169.34375 * e, 120.5 * e, 169.34375 * e),
        r.bezierCurveTo(141.5 * e, 161.34375 * e, 156.5 * e, 145.34375 * e, 155.5 * e, 136.34375 * e),
        r.closePath(),
        Ce(r, i[4]),
        we(r, 125.5 * e, 140.34375 * e, 11.180339887498949 * e),
        Ce(r, i[5]),
        we(r, 122.5 * e, 135.34375 * e, 5.0990195135927845 * e),
        Ce(r, i[6]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(196.5 * e, 151.34375 * e),
        r.bezierCurveTo(211.5 * e, 158.34375 * e, 224.5 * e, 171.34375 * e, 229.5 * e, 176.34375 * e),
        r.bezierCurveTo(246.5 * e, 163.34375 * e, 259.5 * e, 166.34375 * e, 272.5 * e, 168.34375 * e),
        r.bezierCurveTo(254.5 * e, 146.34375 * e, 214.5 * e, 145.34375 * e, 198.5 * e, 151.34375 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(154.5 * e, 222.34375 * e),
        r.bezierCurveTo(164.5 * e, 234.34375 * e, 173.5 * e, 242.34375 * e, 178.5 * e, 245.34375 * e),
        r.bezierCurveTo(174.5 * e, 265.34375 * e, 180.5 * e, 274.34375 * e, 186.5 * e, 283.34375 * e),
        r.bezierCurveTo(165.5 * e, 277.34375 * e, 151.5 * e, 245.34375 * e, 155.5 * e, 224.34375 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(279.5 * e, 294.34375 * e),
        r.bezierCurveTo(286.5 * e, 285.84375 * e, 286.5 * e, 285.84375 * e, 293.5 * e, 277.34375 * e),
        r.bezierCurveTo(315.5 * e, 280.34375 * e, 315.5 * e, 280.34375 * e, 337.5 * e, 283.34375 * e),
        r.bezierCurveTo(340.5 * e, 311.34375 * e, 317.5 * e, 326.34375 * e, 307.5 * e, 331.34375 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(296.5 * e, 287.34375 * e),
        r.bezierCurveTo(311.5 * e, 291.34375 * e, 311.5 * e, 291.34375 * e, 326.5 * e, 295.34375 * e),
        r.closePath(),
        Ce(r, void 0, i[9], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(294.5 * e, 289.34375 * e),
        r.bezierCurveTo(308.5 * e, 297.34375 * e, 308.5 * e, 297.34375 * e, 322.5 * e, 305.34375 * e),
        r.closePath(),
        Ce(r, void 0, i[9], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(294.5 * e, 291.34375 * e),
        r.bezierCurveTo(304 * e, 303.34375 * e, 304 * e, 303.34375 * e, 313.5 * e, 315.34375 * e),
        r.closePath(),
        Ce(r, void 0, i[9], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(226.5 * e, 161.34375 * e),
        r.bezierCurveTo(230.5 * e, 160.34375 * e, 236.5 * e, 158.34375 * e, 238.5 * e, 161.34375 * e),
        r.bezierCurveTo(238.5 * e, 157.34375 * e, 228.5 * e, 159.34375 * e, 227.5 * e, 161.34375 * e),
        r.closePath(),
        Ce(r, void 0, i[9], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(167.5 * e, 248.34375 * e),
        r.bezierCurveTo(165.5 * e, 251.34375 * e, 168.5 * e, 256.34375 * e, 168.5 * e, 253.34375 * e),
        r.bezierCurveTo(166.5 * e, 252.34375 * e, 168.5 * e, 246.34375 * e, 166.5 * e, 247.34375 * e),
        r.closePath(),
        Ce(r, void 0, i[9], 3 * e),
        n
    }
    function w1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 309 * e,
        n.height = 287 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(10 * e, 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(34.5 * e, 38.53125 * e),
        r.bezierCurveTo(91.5 * e, 30.53125 * e, 138.5 * e, 68.53125 * e, 169.5 * e, 93.53125 * e),
        r.bezierCurveTo(208.5 * e, 128.53125 * e, 226.5 * e, 157.53125 * e, 233.5 * e, 209.53125 * e),
        r.bezierCurveTo(195.5 * e, 218.53125 * e, 138.5 * e, 191.53125 * e, 105.5 * e, 157.53125 * e),
        r.bezierCurveTo(54.5 * e, 112.53125 * e, 41.5 * e, 80.53125 * e, 33.5 * e, 38.53125 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(143.5 * e, 74.53125 * e),
        r.bezierCurveTo(164.5 * e, 73.53125 * e, 159 * e, 74.53125 * e, 174.5 * e, 74.53125 * e),
        r.bezierCurveTo(186 * e, 86.53125 * e, 186 * e, 86.53125 * e, 197.5 * e, 98.53125 * e),
        r.bezierCurveTo(186 * e, 97.03125 * e, 186 * e, 97.03125 * e, 174.5 * e, 95.53125 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(87.5 * e, 142.53125 * e),
        r.bezierCurveTo(92 * e, 160.03125 * e, 92 * e, 160.03125 * e, 96.5 * e, 177.53125 * e),
        r.bezierCurveTo(108 * e, 181.53125 * e, 108 * e, 181.53125 * e, 119.5 * e, 185.53125 * e),
        r.bezierCurveTo(116.5 * e, 175.53125 * e, 116.5 * e, 175.53125 * e, 113.5 * e, 165.53125 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(236.5 * e, 189.53125 * e),
        r.bezierCurveTo(274.5 * e, 197.53125 * e, 255.5 * e, 194.03125 * e, 274.5 * e, 198.53125 * e),
        r.bezierCurveTo(272.5 * e, 236.53125 * e, 261.5 * e, 237.53125 * e, 242.5 * e, 248.53125 * e),
        r.bezierCurveTo(230.5 * e, 231.03125 * e, 230.5 * e, 231.03125 * e, 218.5 * e, 213.53125 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 10 * e),
        r.globalAlpha = 1,
        r.translate(-10 * e, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(34.5 * e, 38.53125 * e),
        r.bezierCurveTo(91.5 * e, 30.53125 * e, 138.5 * e, 68.53125 * e, 169.5 * e, 93.53125 * e),
        r.bezierCurveTo(208.5 * e, 128.53125 * e, 226.5 * e, 157.53125 * e, 233.5 * e, 209.53125 * e),
        r.bezierCurveTo(195.5 * e, 218.53125 * e, 138.5 * e, 191.53125 * e, 105.5 * e, 157.53125 * e),
        r.bezierCurveTo(54.5 * e, 112.53125 * e, 41.5 * e, 80.53125 * e, 33.5 * e, 38.53125 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(143.5 * e, 74.53125 * e),
        r.bezierCurveTo(164.5 * e, 73.53125 * e, 159 * e, 74.53125 * e, 174.5 * e, 74.53125 * e),
        r.bezierCurveTo(186 * e, 86.53125 * e, 186 * e, 86.53125 * e, 197.5 * e, 98.53125 * e),
        r.bezierCurveTo(186 * e, 97.03125 * e, 186 * e, 97.03125 * e, 174.5 * e, 95.53125 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(87.5 * e, 142.53125 * e),
        r.bezierCurveTo(92 * e, 160.03125 * e, 92 * e, 160.03125 * e, 96.5 * e, 177.53125 * e),
        r.bezierCurveTo(108 * e, 181.53125 * e, 108 * e, 181.53125 * e, 119.5 * e, 185.53125 * e),
        r.bezierCurveTo(116.5 * e, 175.53125 * e, 116.5 * e, 175.53125 * e, 113.5 * e, 165.53125 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(236.5 * e, 189.53125 * e),
        r.bezierCurveTo(274.5 * e, 197.53125 * e, 255.5 * e, 194.03125 * e, 274.5 * e, 198.53125 * e),
        r.bezierCurveTo(272.5 * e, 236.53125 * e, 261.5 * e, 237.53125 * e, 242.5 * e, 248.53125 * e),
        r.bezierCurveTo(230.5 * e, 231.03125 * e, 230.5 * e, 231.03125 * e, 218.5 * e, 213.53125 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(109.5 * e, 51.53125 * e),
        r.bezierCurveTo(107.5 * e, 92.53125 * e, 91.5 * e, 95.53125 * e, 59.5 * e, 101.53125 * e),
        Ce(r, i[1], i[2], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(72.5 * e, 51.53125 * e),
        r.bezierCurveTo(71 * e, 64.53125 * e, 69.5 * e, 76.53125 * e, 69.5 * e, 77.53125 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(84.5 * e, 63.53125 * e),
        r.bezierCurveTo(70.5 * e, 65.03125 * e, 70.5 * e, 65.03125 * e, 56.5 * e, 66.53125 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(125.5 * e, 84.53125 * e),
        r.bezierCurveTo(125.5 * e, 110.03125 * e, 125.5 * e, 110.03125 * e, 125.5 * e, 135.53125 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(149.5 * e, 108.53125 * e),
        r.bezierCurveTo(150 * e, 137.03125 * e, 150 * e, 137.03125 * e, 150.5 * e, 165.53125 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 7 * e),
        n
    }
    function z1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 130 * e
          , a = 142 * e
          , s = o / 2
          , d = a / 2;
        return n.width = o,
        n.height = a,
        r.translate(s, d + 7 * e),
        r.globalAlpha = t ? .5 : 1,
        we(r, 0, 0, 60 * e),
        Ce(r, i[0]),
        r.translate(0, -7 * e),
        r.globalAlpha = 1,
        we(r, 0, 0, 60 * e),
        Ce(r, i[1], i[2], 4 * e),
        we(r, 0, 0, 40 * e),
        Ce(r, i[3]),
        we(r, 0, 0, 25 * e),
        Ce(r, i[4], i[5], 8 * e),
        n
    }
    function k1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 130 * e,
        n.height = 142 * e,
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(65 * e, 80 * e),
        r.rotate(.2),
        A(r, 9, 60 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.save(),
        r.translate(65 * e, 71 * e),
        r.rotate(.2),
        A(r, 9, 60 * e, 10 * e),
        Ce(r, i[1], i[2], 4),
        r.rotate(-.32),
        A(r, 9, 38 * e, 10 * e),
        Ce(r, i[3], i[4], 4),
        r.rotate(.68),
        A(r, 9, 20 * e, 8 * e),
        Ce(r, i[5], i[6], 6),
        r.restore(),
        n
    }
    function W1(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 372 * e,
        i.height = 375 * e,
        n.globalAlpha = .5,
        n.translate(15 * e, 15 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(313.0000305175781 * e, 76.58523559570312 * e),
        n.bezierCurveTo(308.0000305175781 * e, 130.58523559570312 * e, 279.0000305175781 * e, 158.58523559570312 * e, 254.00003051757812 * e, 175.58523559570312 * e),
        n.bezierCurveTo(287.0000305175781 * e, 182.58523559570312 * e, 274.0000305175781 * e, 181.08523559570312 * e, 294.0000305175781 * e, 186.58523559570312 * e),
        n.bezierCurveTo(293.5000305175781 * e, 196.08523559570312 * e, 293.5000305175781 * e, 196.08523559570312 * e, 293.0000305175781 * e, 205.58523559570312 * e),
        n.bezierCurveTo(304.0000305175781 * e, 201.08523559570312 * e, 304.0000305175781 * e, 201.08523559570312 * e, 315.0000305175781 * e, 196.58523559570312 * e),
        n.bezierCurveTo(350.0000305175781 * e, 219.58523559570312 * e, 343.0000305175781 * e, 221.58523559570312 * e, 351.0000305175781 * e, 230.58523559570312 * e),
        n.bezierCurveTo(296.0000305175781 * e, 260.5852355957031 * e, 264.0000305175781 * e, 256.5852355957031 * e, 220.00003051757812 * e, 236.58523559570312 * e),
        n.bezierCurveTo(233.00003051757812 * e, 266.5852355957031 * e, 232.00003051757812 * e, 279.5852355957031 * e, 231.00003051757812 * e, 295.5852355957031 * e),
        n.bezierCurveTo(222.00003051757812 * e, 297.5852355957031 * e, 222.00003051757812 * e, 297.5852355957031 * e, 213.00003051757812 * e, 299.5852355957031 * e),
        n.bezierCurveTo(219.50003051757812 * e, 308.0852355957031 * e, 219.50003051757812 * e, 308.0852355957031 * e, 226.00003051757812 * e, 316.5852355957031 * e),
        n.bezierCurveTo(223.00003051757812 * e, 344.5852355957031 * e, 216.00003051757812 * e, 350.5852355957031 * e, 209.00003051757812 * e, 363.5852355957031 * e),
        n.bezierCurveTo(154.00003051757812 * e, 318.5852355957031 * e, 156.00003051757812 * e, 268.5852355957031 * e, 160.00003051757812 * e, 238.58523559570312 * e),
        n.bezierCurveTo(135.00003051757812 * e, 268.5852355957031 * e, 125.00003051757812 * e, 267.5852355957031 * e, 112.00003051757812 * e, 272.5852355957031 * e),
        n.bezierCurveTo(104.50003051757812 * e, 266.5852355957031 * e, 104.50003051757812 * e, 266.5852355957031 * e, 97.00003051757812 * e, 260.5852355957031 * e),
        n.bezierCurveTo(93.00003051757812 * e, 271.0852355957031 * e, 93.00003051757812 * e, 271.0852355957031 * e, 89.00003051757812 * e, 281.5852355957031 * e),
        n.bezierCurveTo(66.00003051757812 * e, 288.5852355957031 * e, 59.000030517578125 * e, 288.5852355957031 * e, 39.000030517578125 * e, 285.5852355957031 * e),
        n.bezierCurveTo(56.000030517578125 * e, 216.58523559570312 * e, 91.00003051757812 * e, 204.58523559570312 * e, 129.00003051757812 * e, 189.58523559570312 * e),
        n.bezierCurveTo(90.00003051757812 * e, 176.58523559570312 * e, 89.00003051757812 * e, 173.58523559570312 * e, 79.00003051757812 * e, 166.58523559570312 * e),
        n.bezierCurveTo(82.00003051757812 * e, 155.08523559570312 * e, 82.00003051757812 * e, 155.08523559570312 * e, 85.00003051757812 * e, 143.58523559570312 * e),
        n.bezierCurveTo(75.50003051757812 * e, 147.58523559570312 * e, 75.50003051757812 * e, 147.58523559570312 * e, 66.00003051757812 * e, 151.58523559570312 * e),
        n.bezierCurveTo(44.000030517578125 * e, 133.58523559570312 * e, 41.000030517578125 * e, 124.58523559570312 * e, 34.000030517578125 * e, 102.58523559570312 * e),
        n.bezierCurveTo(100.00003051757812 * e, 81.58523559570312 * e, 134.00003051757812 * e, 118.58523559570312 * e, 150.00003051757812 * e, 128.58523559570312 * e),
        n.bezierCurveTo(144.00003051757812 * e, 102.58523559570312 * e, 147.00003051757812 * e, 90.58523559570312 * e, 150.00003051757812 * e, 80.58523559570312 * e),
        n.bezierCurveTo(159.50003051757812 * e, 79.08523559570312 * e, 159.50003051757812 * e, 79.08523559570312 * e, 169.00003051757812 * e, 77.58523559570312 * e),
        n.bezierCurveTo(163.00003051757812 * e, 72.58523559570312 * e, 163.00003051757812 * e, 72.58523559570312 * e, 157.00003051757812 * e, 67.58523559570312 * e),
        n.bezierCurveTo(162.00003051757812 * e, 42.585235595703125 * e, 169.00003051757812 * e, 29.585235595703125 * e, 182.00003051757812 * e, 14.585235595703125 * e),
        n.bezierCurveTo(219.00003051757812 * e, 48.585235595703125 * e, 222.00003051757812 * e, 92.58523559570312 * e, 218.00003051757812 * e, 112.58523559570312 * e),
        n.bezierCurveTo(239.00003051757812 * e, 95.58523559570312 * e, 242.00003051757812 * e, 97.58523559570312 * e, 249.00003051757812 * e, 94.58523559570312 * e),
        n.bezierCurveTo(255.00003051757812 * e, 103.08523559570312 * e, 255.00003051757812 * e, 103.08523559570312 * e, 261.0000305175781 * e, 111.58523559570312 * e),
        n.bezierCurveTo(261.5000305175781 * e, 99.58523559570312 * e, 261.5000305175781 * e, 99.58523559570312 * e, 262.0000305175781 * e, 87.58523559570312 * e),
        n.bezierCurveTo(282.0000305175781 * e, 77.58523559570312 * e, 301.0000305175781 * e, 74.58523559570312 * e, 314.0000305175781 * e, 76.58523559570312 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        n.translate(-15 * e, -15 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(313.0000305175781 * e, 76.58523559570312 * e),
        n.bezierCurveTo(308.0000305175781 * e, 130.58523559570312 * e, 279.0000305175781 * e, 158.58523559570312 * e, 254.00003051757812 * e, 175.58523559570312 * e),
        n.bezierCurveTo(287.0000305175781 * e, 182.58523559570312 * e, 274.0000305175781 * e, 181.08523559570312 * e, 294.0000305175781 * e, 186.58523559570312 * e),
        n.bezierCurveTo(293.5000305175781 * e, 196.08523559570312 * e, 293.5000305175781 * e, 196.08523559570312 * e, 293.0000305175781 * e, 205.58523559570312 * e),
        n.bezierCurveTo(304.0000305175781 * e, 201.08523559570312 * e, 304.0000305175781 * e, 201.08523559570312 * e, 315.0000305175781 * e, 196.58523559570312 * e),
        n.bezierCurveTo(350.0000305175781 * e, 219.58523559570312 * e, 343.0000305175781 * e, 221.58523559570312 * e, 351.0000305175781 * e, 230.58523559570312 * e),
        n.bezierCurveTo(296.0000305175781 * e, 260.5852355957031 * e, 264.0000305175781 * e, 256.5852355957031 * e, 220.00003051757812 * e, 236.58523559570312 * e),
        n.bezierCurveTo(233.00003051757812 * e, 266.5852355957031 * e, 232.00003051757812 * e, 279.5852355957031 * e, 231.00003051757812 * e, 295.5852355957031 * e),
        n.bezierCurveTo(222.00003051757812 * e, 297.5852355957031 * e, 222.00003051757812 * e, 297.5852355957031 * e, 213.00003051757812 * e, 299.5852355957031 * e),
        n.bezierCurveTo(219.50003051757812 * e, 308.0852355957031 * e, 219.50003051757812 * e, 308.0852355957031 * e, 226.00003051757812 * e, 316.5852355957031 * e),
        n.bezierCurveTo(223.00003051757812 * e, 344.5852355957031 * e, 216.00003051757812 * e, 350.5852355957031 * e, 209.00003051757812 * e, 363.5852355957031 * e),
        n.bezierCurveTo(154.00003051757812 * e, 318.5852355957031 * e, 156.00003051757812 * e, 268.5852355957031 * e, 160.00003051757812 * e, 238.58523559570312 * e),
        n.bezierCurveTo(135.00003051757812 * e, 268.5852355957031 * e, 125.00003051757812 * e, 267.5852355957031 * e, 112.00003051757812 * e, 272.5852355957031 * e),
        n.bezierCurveTo(104.50003051757812 * e, 266.5852355957031 * e, 104.50003051757812 * e, 266.5852355957031 * e, 97.00003051757812 * e, 260.5852355957031 * e),
        n.bezierCurveTo(93.00003051757812 * e, 271.0852355957031 * e, 93.00003051757812 * e, 271.0852355957031 * e, 89.00003051757812 * e, 281.5852355957031 * e),
        n.bezierCurveTo(66.00003051757812 * e, 288.5852355957031 * e, 59.000030517578125 * e, 288.5852355957031 * e, 39.000030517578125 * e, 285.5852355957031 * e),
        n.bezierCurveTo(56.000030517578125 * e, 216.58523559570312 * e, 91.00003051757812 * e, 204.58523559570312 * e, 129.00003051757812 * e, 189.58523559570312 * e),
        n.bezierCurveTo(90.00003051757812 * e, 176.58523559570312 * e, 89.00003051757812 * e, 173.58523559570312 * e, 79.00003051757812 * e, 166.58523559570312 * e),
        n.bezierCurveTo(82.00003051757812 * e, 155.08523559570312 * e, 82.00003051757812 * e, 155.08523559570312 * e, 85.00003051757812 * e, 143.58523559570312 * e),
        n.bezierCurveTo(75.50003051757812 * e, 147.58523559570312 * e, 75.50003051757812 * e, 147.58523559570312 * e, 66.00003051757812 * e, 151.58523559570312 * e),
        n.bezierCurveTo(44.000030517578125 * e, 133.58523559570312 * e, 41.000030517578125 * e, 124.58523559570312 * e, 34.000030517578125 * e, 102.58523559570312 * e),
        n.bezierCurveTo(100.00003051757812 * e, 81.58523559570312 * e, 134.00003051757812 * e, 118.58523559570312 * e, 150.00003051757812 * e, 128.58523559570312 * e),
        n.bezierCurveTo(144.00003051757812 * e, 102.58523559570312 * e, 147.00003051757812 * e, 90.58523559570312 * e, 150.00003051757812 * e, 80.58523559570312 * e),
        n.bezierCurveTo(159.50003051757812 * e, 79.08523559570312 * e, 159.50003051757812 * e, 79.08523559570312 * e, 169.00003051757812 * e, 77.58523559570312 * e),
        n.bezierCurveTo(163.00003051757812 * e, 72.58523559570312 * e, 163.00003051757812 * e, 72.58523559570312 * e, 157.00003051757812 * e, 67.58523559570312 * e),
        n.bezierCurveTo(162.00003051757812 * e, 42.585235595703125 * e, 169.00003051757812 * e, 29.585235595703125 * e, 182.00003051757812 * e, 14.585235595703125 * e),
        n.bezierCurveTo(219.00003051757812 * e, 48.585235595703125 * e, 222.00003051757812 * e, 92.58523559570312 * e, 218.00003051757812 * e, 112.58523559570312 * e),
        n.bezierCurveTo(239.00003051757812 * e, 95.58523559570312 * e, 242.00003051757812 * e, 97.58523559570312 * e, 249.00003051757812 * e, 94.58523559570312 * e),
        n.bezierCurveTo(255.00003051757812 * e, 103.08523559570312 * e, 255.00003051757812 * e, 103.08523559570312 * e, 261.0000305175781 * e, 111.58523559570312 * e),
        n.bezierCurveTo(261.5000305175781 * e, 99.58523559570312 * e, 261.5000305175781 * e, 99.58523559570312 * e, 262.0000305175781 * e, 87.58523559570312 * e),
        n.bezierCurveTo(282.0000305175781 * e, 77.58523559570312 * e, 301.0000305175781 * e, 74.58523559570312 * e, 314.0000305175781 * e, 76.58523559570312 * e),
        n.closePath(),
        Ce(n, t[1], t[2], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(186.00003051757812 * e, 192.94886779785156 * e),
        n.bezierCurveTo(185.00003051757812 * e, 66.94886779785156 * e, 184.50003051757812 * e, 104.94886779785156 * e, 183.00003051757812 * e, 16.948867797851562 * e),
        n.bezierCurveTo(216.00003051757812 * e, 47.94886779785156 * e, 219.00003051757812 * e, 80.94886779785156 * e, 218.00003051757812 * e, 113.94886779785156 * e),
        n.bezierCurveTo(209.00003051757812 * e, 165.94886779785156 * e, 200.00003051757812 * e, 176.94886779785156 * e, 189.00003051757812 * e, 192.94886779785156 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 2 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(190.00003051757812 * e, 191.94886779785156 * e),
        n.bezierCurveTo(207.00003051757812 * e, 348.94886779785156 * e, 205.00003051757812 * e, 323.94886779785156 * e, 209.00003051757812 * e, 358.94886779785156 * e),
        n.bezierCurveTo(171.00003051757812 * e, 334.94886779785156 * e, 167.00003051757812 * e, 302.94886779785156 * e, 161.00003051757812 * e, 268.94886779785156 * e),
        n.bezierCurveTo(160.00003051757812 * e, 218.94886779785156 * e, 181.00003051757812 * e, 191.94886779785156 * e, 189.00003051757812 * e, 186.94886779785156 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 2 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(194.00003051757812 * e, 195.94886779785156 * e),
        n.bezierCurveTo(116.00003051757812 * e, 150.94886779785156 * e, 116.00003051757812 * e, 150.94886779785156 * e, 38.000030517578125 * e, 105.94886779785156 * e),
        n.bezierCurveTo(67.00003051757812 * e, 90.94886779785156 * e, 96.00003051757812 * e, 99.94886779785156 * e, 123.00003051757812 * e, 111.94886779785156 * e),
        n.bezierCurveTo(183.00003051757812 * e, 152.94886779785156 * e, 179.00003051757812 * e, 180.94886779785156 * e, 193.00003051757812 * e, 194.94886779785156 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 2 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(189.00003051757812 * e, 190.94886779785156 * e),
        n.bezierCurveTo(250.00003051757812 * e, 133.94886779785156 * e, 311.0000305175781 * e, 78.94886779785156 * e, 311.0000305175781 * e, 76.94886779785156 * e),
        n.bezierCurveTo(306.0000305175781 * e, 127.94886779785156 * e, 283.0000305175781 * e, 148.94886779785156 * e, 261.0000305175781 * e, 166.94886779785156 * e),
        n.bezierCurveTo(220.00003051757812 * e, 197.94886779785156 * e, 191.00003051757812 * e, 194.94886779785156 * e, 189.00003051757812 * e, 195.94886779785156 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 2 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(189.00003051757812 * e, 194.94886779785156 * e),
        n.bezierCurveTo(268.5000305175781 * e, 211.94886779785156 * e, 268.5000305175781 * e, 211.94886779785156 * e, 348.0000305175781 * e, 228.94886779785156 * e),
        n.bezierCurveTo(316.0000305175781 * e, 247.94886779785156 * e, 298.0000305175781 * e, 256.94886779785156 * e, 250.00003051757812 * e, 246.94886779785156 * e),
        n.bezierCurveTo(197.00003051757812 * e, 229.94886779785156 * e, 189.00003051757812 * e, 202.94886779785156 * e, 188.00003051757812 * e, 199.94886779785156 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 2 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(192.00003051757812 * e, 191.94886779785156 * e),
        n.bezierCurveTo(116.50003051757812 * e, 238.44886779785156 * e, 116.50003051757812 * e, 238.44886779785156 * e, 41.000030517578125 * e, 284.94886779785156 * e),
        n.bezierCurveTo(49.000030517578125 * e, 252.94886779785156 * e, 56.000030517578125 * e, 242.94886779785156 * e, 80.00003051757812 * e, 215.94886779785156 * e),
        n.bezierCurveTo(125.00003051757812 * e, 181.94886779785156 * e, 174.00003051757812 * e, 183.94886779785156 * e, 192.00003051757812 * e, 191.94886779785156 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 2 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(313.0000305175781 * e, 76.58523559570312 * e),
        n.bezierCurveTo(308.0000305175781 * e, 130.58523559570312 * e, 279.0000305175781 * e, 158.58523559570312 * e, 254.00003051757812 * e, 175.58523559570312 * e),
        n.bezierCurveTo(287.0000305175781 * e, 182.58523559570312 * e, 274.0000305175781 * e, 181.08523559570312 * e, 294.0000305175781 * e, 186.58523559570312 * e),
        n.bezierCurveTo(293.5000305175781 * e, 196.08523559570312 * e, 293.5000305175781 * e, 196.08523559570312 * e, 293.0000305175781 * e, 205.58523559570312 * e),
        n.bezierCurveTo(304.0000305175781 * e, 201.08523559570312 * e, 304.0000305175781 * e, 201.08523559570312 * e, 315.0000305175781 * e, 196.58523559570312 * e),
        n.bezierCurveTo(350.0000305175781 * e, 219.58523559570312 * e, 343.0000305175781 * e, 221.58523559570312 * e, 351.0000305175781 * e, 230.58523559570312 * e),
        n.bezierCurveTo(296.0000305175781 * e, 260.5852355957031 * e, 264.0000305175781 * e, 256.5852355957031 * e, 220.00003051757812 * e, 236.58523559570312 * e),
        n.bezierCurveTo(233.00003051757812 * e, 266.5852355957031 * e, 232.00003051757812 * e, 279.5852355957031 * e, 231.00003051757812 * e, 295.5852355957031 * e),
        n.bezierCurveTo(222.00003051757812 * e, 297.5852355957031 * e, 222.00003051757812 * e, 297.5852355957031 * e, 213.00003051757812 * e, 299.5852355957031 * e),
        n.bezierCurveTo(219.50003051757812 * e, 308.0852355957031 * e, 219.50003051757812 * e, 308.0852355957031 * e, 226.00003051757812 * e, 316.5852355957031 * e),
        n.bezierCurveTo(223.00003051757812 * e, 344.5852355957031 * e, 216.00003051757812 * e, 350.5852355957031 * e, 209.00003051757812 * e, 363.5852355957031 * e),
        n.bezierCurveTo(154.00003051757812 * e, 318.5852355957031 * e, 156.00003051757812 * e, 268.5852355957031 * e, 160.00003051757812 * e, 238.58523559570312 * e),
        n.bezierCurveTo(135.00003051757812 * e, 268.5852355957031 * e, 125.00003051757812 * e, 267.5852355957031 * e, 112.00003051757812 * e, 272.5852355957031 * e),
        n.bezierCurveTo(104.50003051757812 * e, 266.5852355957031 * e, 104.50003051757812 * e, 266.5852355957031 * e, 97.00003051757812 * e, 260.5852355957031 * e),
        n.bezierCurveTo(93.00003051757812 * e, 271.0852355957031 * e, 93.00003051757812 * e, 271.0852355957031 * e, 89.00003051757812 * e, 281.5852355957031 * e),
        n.bezierCurveTo(66.00003051757812 * e, 288.5852355957031 * e, 59.000030517578125 * e, 288.5852355957031 * e, 39.000030517578125 * e, 285.5852355957031 * e),
        n.bezierCurveTo(56.000030517578125 * e, 216.58523559570312 * e, 91.00003051757812 * e, 204.58523559570312 * e, 129.00003051757812 * e, 189.58523559570312 * e),
        n.bezierCurveTo(90.00003051757812 * e, 176.58523559570312 * e, 89.00003051757812 * e, 173.58523559570312 * e, 79.00003051757812 * e, 166.58523559570312 * e),
        n.bezierCurveTo(82.00003051757812 * e, 155.08523559570312 * e, 82.00003051757812 * e, 155.08523559570312 * e, 85.00003051757812 * e, 143.58523559570312 * e),
        n.bezierCurveTo(75.50003051757812 * e, 147.58523559570312 * e, 75.50003051757812 * e, 147.58523559570312 * e, 66.00003051757812 * e, 151.58523559570312 * e),
        n.bezierCurveTo(44.000030517578125 * e, 133.58523559570312 * e, 41.000030517578125 * e, 124.58523559570312 * e, 34.000030517578125 * e, 102.58523559570312 * e),
        n.bezierCurveTo(100.00003051757812 * e, 81.58523559570312 * e, 134.00003051757812 * e, 118.58523559570312 * e, 150.00003051757812 * e, 128.58523559570312 * e),
        n.bezierCurveTo(144.00003051757812 * e, 102.58523559570312 * e, 147.00003051757812 * e, 90.58523559570312 * e, 150.00003051757812 * e, 80.58523559570312 * e),
        n.bezierCurveTo(159.50003051757812 * e, 79.08523559570312 * e, 159.50003051757812 * e, 79.08523559570312 * e, 169.00003051757812 * e, 77.58523559570312 * e),
        n.bezierCurveTo(163.00003051757812 * e, 72.58523559570312 * e, 163.00003051757812 * e, 72.58523559570312 * e, 157.00003051757812 * e, 67.58523559570312 * e),
        n.bezierCurveTo(162.00003051757812 * e, 42.585235595703125 * e, 169.00003051757812 * e, 29.585235595703125 * e, 182.00003051757812 * e, 14.585235595703125 * e),
        n.bezierCurveTo(219.00003051757812 * e, 48.585235595703125 * e, 222.00003051757812 * e, 92.58523559570312 * e, 218.00003051757812 * e, 112.58523559570312 * e),
        n.bezierCurveTo(239.00003051757812 * e, 95.58523559570312 * e, 242.00003051757812 * e, 97.58523559570312 * e, 249.00003051757812 * e, 94.58523559570312 * e),
        n.bezierCurveTo(255.00003051757812 * e, 103.08523559570312 * e, 255.00003051757812 * e, 103.08523559570312 * e, 261.0000305175781 * e, 111.58523559570312 * e),
        n.bezierCurveTo(261.5000305175781 * e, 99.58523559570312 * e, 261.5000305175781 * e, 99.58523559570312 * e, 262.0000305175781 * e, 87.58523559570312 * e),
        n.bezierCurveTo(282.0000305175781 * e, 77.58523559570312 * e, 301.0000305175781 * e, 74.58523559570312 * e, 314.0000305175781 * e, 76.58523559570312 * e),
        n.closePath(),
        Ce(n, void 0, t[2], 4 * e),
        i
    }
    function V1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 248 * e,
        n.height = 128 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(137 * e, 7 * e),
        r.bezierCurveTo(169 * e, 14 * e, 212 * e, 9 * e, 241 * e, 5 * e),
        r.bezierCurveTo(211 * e, 63 * e, 158 * e, 92 * e, 103 * e, 109 * e),
        r.bezierCurveTo(73 * e, 126 * e, 54 * e, 124 * e, 6 * e, 99 * e),
        r.bezierCurveTo(82 * e, 63 * e, 113 * e, 35 * e, 137 * e, 8 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 14 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(73 * e, 124 * e),
        r.bezierCurveTo(111 * e, 126 * e, 162 * e, 97 * e, 203 * e, 61 * e),
        r.bezierCurveTo(156 * e, 98 * e, 131 * e, 106 * e, 105 * e, 109 * e),
        r.bezierCurveTo(99 * e, 121 * e, 87 * e, 124 * e, 72 * e, 124 * e),
        r.closePath(),
        Ce(r, i[2], i[3], +e),
        n
    }
    function U1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 130 * e,
        n.height = 148 * e,
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(65 * e, 85 * e),
        r.rotate(1.4),
        A(r, 7, 60 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.save(),
        r.translate(65 * e, 74 * e),
        r.rotate(1.4),
        A(r, 7, 60 * e, 10 * e),
        Ce(r, i[1], i[2], 4),
        r.rotate(.64),
        A(r, 7, 40 * e, 10 * e),
        Ce(r, i[3], i[4], 4),
        r.rotate(.12),
        A(r, 7, 23 * e, 5 * e),
        r.restore(),
        Ce(r, i[5]),
        n
    }
    function K1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 125 * e,
        n.height = 139 * e,
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(63 * e, 79 * e),
        r.rotate(1),
        A(r, 8, 60 * e, 10 * e),
        Ce(r, i[0]),
        r.restore(),
        r.globalAlpha = 1,
        r.save(),
        r.translate(63 * e, 69 * e),
        r.rotate(1),
        A(r, 8, 60 * e, 10 * e),
        Ce(r, i[1], i[2], 4),
        r.rotate(.56),
        A(r, 8, 40 * e, 10 * e),
        Ce(r, i[3], i[4], 4),
        r.rotate(.28),
        A(r, 8, 28 * e, 8 * e),
        Ce(r, i[5]),
        r.restore(),
        n
    }
    function F1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 90 * e,
        n.height = 101 * e,
        r.translate(0 * e, 5 * e),
        0 === D && (r.globalAlpha = t ? .5 : 1,
        we(r, 44 * e, 55 * e, 41 * e),
        Ce(r, i[0])),
        r.globalAlpha = 1,
        we(r, 44 * e, 45 * e, 41 * e),
        Ce(r, i[1], i[2], 4 * e),
        we(r, 44 * e, 45 * e, 31 * e),
        Ce(r, i[3]),
        r.save(),
        r.translate(45 * e, 45 * e),
        Be(r, -9 * e, -25.5 * e, 18 * e, 51 * e, 30 * e),
        r.restore(),
        Ce(r, i[4], i[4], 2 * e),
        r.save(),
        r.translate(45 * e, 45 * e),
        Be(r, -26 * e, -9 * e, 52 * e, 18 * e, 30 * e),
        r.restore(),
        Ce(r, i[4], i[4], 2 * e),
        we(r, 45 * e, 29 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 45 * e, 61 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 28 * e, 45 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 62 * e, 45 * e, 7 * e),
        Ce(r, i[5]),
        n
    }
    function Y1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 90 * e,
        n.height = 98 * e,
        r.translate(0, 4 * e),
        0 === D && (r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(44 * e, 50 * e),
        r.rotate(1.4),
        A(r, 7, 41 * e, 10 * e),
        r.restore(),
        Ce(r, i[0])),
        r.globalAlpha = 1,
        r.save(),
        r.translate(44 * e, 44 * e),
        r.rotate(1.4),
        A(r, 7, 41 * e, 10 * e),
        Ce(r, i[1], i[2], 4 * e),
        A(r, 7, 35 * e, 10 * e),
        Ce(r, i[3], i[4], 4 * e),
        A(r, 7, 23 * e, 5 * e),
        r.restore(),
        Ce(r, i[5]),
        r.save(),
        r.translate(45 * e, 45 * e),
        r.rotate(0),
        Be(r, -9 * e, -25.5 * e, 18 * e, 51 * e, 30 * e),
        r.restore(),
        Ce(r, i[4], i[4], 2 * e),
        r.save(),
        r.translate(45 * e, 45 * e),
        r.rotate(0),
        Be(r, -26 * e, -9 * e, 52 * e, 18 * e, 30 * e),
        r.restore(),
        Ce(r, i[4], i[4], 2 * e),
        we(r, 45 * e, 29 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 45 * e, 61 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 28 * e, 45 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 62 * e, 45 * e, 7 * e),
        Ce(r, i[5]),
        n
    }
    function J1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 90 * e,
        n.height = 98 * e,
        r.translate(0, 4 * e),
        0 === D && (r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(44 * e, 50 * e),
        r.rotate(1),
        A(r, 8, 41 * e, 10 * e),
        Ce(r, i[0]),
        r.restore()),
        r.globalAlpha = 1,
        r.save(),
        r.translate(44 * e, 44 * e),
        r.rotate(1),
        A(r, 8, 41 * e, 10 * e),
        Ce(r, i[1], i[2], 4 * e),
        r.rotate(.56),
        A(r, 8, 33 * e, 10 * e),
        Ce(r, i[3], i[4], 4 * e),
        r.rotate(.28),
        A(r, 8, 24 * e, 8 * e),
        Ce(r, i[5]),
        r.restore(),
        r.save(),
        r.translate(45 * e, 45 * e),
        r.rotate(0),
        Be(r, -9 * e, -25.5 * e, 18 * e, 51 * e, 30 * e),
        r.restore(),
        Ce(r, i[4], i[4], 2 * e),
        r.save(),
        r.translate(45 * e, 45 * e),
        r.rotate(0),
        Be(r, -26 * e, -9 * e, 52 * e, 18 * e, 30 * e),
        r.restore(),
        Ce(r, i[4], i[4], 2 * e),
        we(r, 45 * e, 29 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 45 * e, 61 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 28 * e, 45 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 62 * e, 45 * e, 7 * e),
        Ce(r, i[5]),
        n
    }
    function X1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 300 * e,
        n.height = 300 * e,
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(150 * e, 160 * e),
        r.rotate(6.28),
        A(r, 6, 146 * e, 30 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.save(),
        r.translate(150 * e, 150 * e),
        r.rotate(6.28),
        A(r, 6, 146 * e, 30 * e),
        r.restore(),
        Ce(r, i[1], i[2], 8 * e),
        r.save(),
        r.translate(150 * e, 150 * e),
        r.rotate(0),
        A(r, 6, 105 * e, 30 * e),
        r.restore(),
        Ce(r, i[3], i[3], 8 * e),
        r.save(),
        r.translate(150 * e, 150 * e),
        r.rotate(0),
        A(r, 6, 66 * e, 30 * e),
        r.restore(),
        Ce(r, i[4], i[2], 8 * e),
        r.save(),
        r.translate(150 * e, 150 * e),
        r.rotate(0),
        A(r, 6, 31 * e, 30 * e),
        r.restore(),
        Ce(r, i[5], i[6], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(150 * e, 207 * e),
        r.bezierCurveTo(150 * e, 151 * e, 150 * e, 101 * e, 150 * e, 94 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(118 * e, 100 * e),
        r.bezierCurveTo(118 * e, 205 * e, 118 * e, 207 * e, 118 * e, 200 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(183 * e, 100 * e),
        r.bezierCurveTo(183 * e, 203 * e, 183 * e, 203 * e, 183 * e, 200 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 8 * e),
        n
    }
    function j1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 300 * e,
        n.height = 300 * e,
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(150 * e, 160 * e),
        r.rotate(6.28),
        A(r, 6, 146 * e, 30 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.save(),
        r.translate(150 * e, 150 * e),
        r.rotate(6.28),
        A(r, 6, 146 * e, 30 * e),
        r.restore(),
        Ce(r, i[1], i[2], 8 * e),
        r.save(),
        r.translate(150 * e, 150 * e),
        r.rotate(0),
        A(r, 6, 105 * e, 30 * e),
        r.restore(),
        Ce(r, i[3], i[3], 8 * e),
        r.save(),
        r.translate(150 * e, 150 * e),
        r.rotate(0),
        A(r, 6, 66 * e, 30 * e),
        r.restore(),
        Ce(r, i[4], i[2], 8 * e),
        r.save(),
        r.translate(131 * e, 116 * e),
        A(r, 7, 17 * e, 8 * e),
        r.restore(),
        Ce(r, i[6]),
        r.save(),
        r.translate(163 * e, 168 * e),
        A(r, 7, 25 * e, 8 * e),
        r.restore(),
        Ce(r, i[6]),
        r.save(),
        r.translate(117 * e, 151 * e),
        A(r, 7, 11 * e, 8 * e),
        r.restore(),
        Ce(r, i[6]),
        r.save(),
        r.translate(167 * e, 122 * e),
        A(r, 7, 12 * e, 8 * e),
        r.restore(),
        Ce(r, i[6]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(150 * e, 207 * e),
        r.bezierCurveTo(150 * e, 151 * e, 150 * e, 101 * e, 150 * e, 94 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(118 * e, 100 * e),
        r.bezierCurveTo(118 * e, 205 * e, 118 * e, 207 * e, 118 * e, 200 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(183 * e, 100 * e),
        r.bezierCurveTo(183 * e, 203 * e, 183 * e, 203 * e, 183 * e, 200 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 8 * e),
        n
    }
    function q1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 90 * e,
        n.height = 98 * e,
        r.translate(0, 4 * e),
        0 === D && (r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(44 * e, 50 * e),
        r.rotate(.2),
        A(r, 9, 41 * e, 10 * e),
        r.restore(),
        Ce(r, i[0])),
        r.globalAlpha = 1,
        r.save(),
        r.translate(44 * e, 44 * e),
        r.rotate(.2),
        A(r, 9, 41 * e, 10 * e),
        Ce(r, i[1], i[2], 4 * e),
        r.rotate(-.32),
        A(r, 9, 32 * e, 10 * e),
        Ce(r, i[3], i[4], 4 * e),
        r.rotate(.68),
        A(r, 9, 23 * e, 8 * e),
        Ce(r, i[5], i[6], 6 * e),
        r.restore(),
        r.save(),
        r.translate(45 * e, 45 * e),
        r.rotate(0),
        Be(r, -9 * e, -25.5 * e, 18 * e, 51 * e, 30 * e),
        r.restore(),
        Ce(r, i[4], i[4], 2 * e),
        r.save(),
        r.translate(45 * e, 45 * e),
        r.rotate(0),
        Be(r, -26 * e, -9 * e, 52 * e, 18 * e, 30 * e),
        r.restore(),
        Ce(r, i[4], i[4], 2 * e),
        we(r, 45 * e, 29 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 45 * e, 61 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 28 * e, 45 * e, 7 * e),
        Ce(r, i[5]),
        we(r, 62 * e, 45 * e, 7 * e),
        Ce(r, i[5]),
        n
    }
    function Z1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 135 * e,
        n.height = 120 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(3.5 * e, 55.25 * e),
        r.bezierCurveTo(3.5 * e, 114.25 * e, 2.5 * e, 109.25 * e, 3.5 * e, 112.25 * e),
        r.bezierCurveTo(5.5 * e, 119.25 * e, 8.5 * e, 119.25 * e, 11.5 * e, 119.25 * e),
        r.bezierCurveTo(15.5 * e, 114.25 * e, 13.5 * e, 95.25 * e, 14.5 * e, 82.25 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(6.5 * e, 43.25 * e),
        r.bezierCurveTo(3.5 * e, 27.25 * e, 7.5 * e, 20.25 * e, 25.5 * e, 11.25 * e),
        r.bezierCurveTo(45.5 * e, -.75 * e, 73.5 * e, 1.25 * e, 107.5 * e, 10.25 * e),
        r.bezierCurveTo(131.5 * e, 21.25 * e, 125.5 * e, 34.25 * e, 125.5 * e, 36.25 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(120.5 * e, 62.25 * e),
        r.bezierCurveTo(121.5 * e, 95.25 * e, 120.5 * e, 80.25 * e, 120.5 * e, 100.25 * e),
        r.bezierCurveTo(118.5 * e, 119.25 * e, 123.5 * e, 118.25 * e, 129.5 * e, 113.25 * e),
        r.bezierCurveTo(133.5 * e, 107.25 * e, 130.5 * e, 97.25 * e, 130.5 * e, 87.25 * e),
        r.bezierCurveTo(129.5 * e, 56.25 * e, 130 * e, 70.75 * e, 129.5 * e, 54.25 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(17.5 * e, 27 * e),
        r.bezierCurveTo(48.5 * e, 5 * e, 93.5 * e, 14 * e, 118.5 * e, 26 * e),
        r.bezierCurveTo(132.5 * e, 35 * e, 133.5 * e, 52 * e, 132.5 * e, 68 * e),
        r.bezierCurveTo(125.5 * e, 87 * e, 116.5 * e, 84 * e, 96.5 * e, 75 * e),
        r.bezierCurveTo(60.5 * e, 66 * e, 52.5 * e, 74 * e, 37.5 * e, 78 * e),
        r.bezierCurveTo(2.5 * e, 86 * e, 3.5 * e, 78 * e, 1.5 * e, 61 * e),
        r.bezierCurveTo(1.5 * e, 37 * e, 9.5 * e, 32 * e, 15.5 * e, 28 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 7 * e),
        n
    }
    function $1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 501 * e,
        n.height = 309 * e,
        r.translate(0, 6 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(126 * e, 184 * e),
        r.bezierCurveTo(169 * e, 196 * e, 194 * e, 198 * e, 227 * e, 198 * e),
        r.bezierCurveTo(235 * e, 222 * e, 236 * e, 223 * e, 241 * e, 226 * e),
        r.bezierCurveTo(245 * e, 228 * e, 257 * e, 228 * e, 263 * e, 226 * e),
        r.bezierCurveTo(267 * e, 225 * e, 270 * e, 211 * e, 275 * e, 198 * e),
        r.bezierCurveTo(332 * e, 194 * e, 347 * e, 192 * e, 372 * e, 188 * e),
        r.bezierCurveTo(366 * e, 174.5 * e, 366 * e, 174.5 * e, 360 * e, 161 * e),
        r.bezierCurveTo(253.5 * e, 162 * e, 253.5 * e, 162 * e, 147 * e, 163 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(100 * e, 116 * e),
        r.bezierCurveTo(90 * e, 101 * e, 96 * e, 89 * e, 106 * e, 83 * e),
        r.bezierCurveTo(86 * e, 79 * e, 86 * e, 52 * e, 93 * e, 38 * e),
        r.bezierCurveTo(99 * e, 51 * e, 107 * e, 57 * e, 122 * e, 63 * e),
        r.bezierCurveTo(130 * e, 53 * e, 141 * e, 46 * e, 161 * e, 46 * e),
        r.bezierCurveTo(157 * e, 31 * e, 158 * e, 20 * e, 169 * e, 6 * e),
        r.bezierCurveTo(171 * e, 24 * e, 186 * e, 33 * e, 198 * e, 45 * e),
        r.bezierCurveTo(252 * e, 45 * e, 252 * e, 45 * e, 306 * e, 45 * e),
        r.bezierCurveTo(323 * e, 33 * e, 332 * e, 21 * e, 335 * e, 7 * e),
        r.bezierCurveTo(349 * e, 21 * e, 347 * e, 36 * e, 345 * e, 46 * e),
        r.bezierCurveTo(364 * e, 46 * e, 369 * e, 48 * e, 377 * e, 63 * e),
        r.bezierCurveTo(398 * e, 58 * e, 403 * e, 49 * e, 409 * e, 40 * e),
        r.bezierCurveTo(419 * e, 57 * e, 411 * e, 79 * e, 398 * e, 85 * e),
        r.bezierCurveTo(405 * e, 100 * e, 405 * e, 106 * e, 401 * e, 118 * e),
        r.bezierCurveTo(332.5 * e, 128.5 * e, 332.5 * e, 128.5 * e, 264 * e, 139 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(122 * e, 191 * e),
        r.bezierCurveTo(123 * e, 237 * e, 135 * e, 245 * e, 153 * e, 259 * e),
        r.bezierCurveTo(167 * e, 269 * e, 158 * e, 281 * e, 118 * e, 276 * e),
        r.bezierCurveTo(104 * e, 273 * e, 98 * e, 268 * e, 93 * e, 242 * e),
        r.bezierCurveTo(89 * e, 220 * e, 92 * e, 201 * e, 102 * e, 179 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(403 * e, 182 * e),
        r.bezierCurveTo(414 * e, 215 * e, 412 * e, 232 * e, 403 * e, 260 * e),
        r.bezierCurveTo(395 * e, 274 * e, 375 * e, 272 * e, 356 * e, 270 * e),
        r.bezierCurveTo(345 * e, 268 * e, 339 * e, 262 * e, 354 * e, 252 * e),
        r.bezierCurveTo(370 * e, 242 * e, 380 * e, 225 * e, 384 * e, 184 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(155 * e, 157 * e),
        r.bezierCurveTo(146 * e, 189 * e, 137 * e, 198 * e, 114 * e, 219 * e),
        r.bezierCurveTo(104 * e, 212 * e, 98 * e, 203 * e, 89 * e, 189 * e),
        r.bezierCurveTo(82 * e, 178 * e, 91 * e, 164 * e, 93 * e, 136 * e),
        r.closePath(),
        Ce(r, i[4], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(347 * e, 162 * e),
        r.bezierCurveTo(357 * e, 195 * e, 376 * e, 209 * e, 387 * e, 217 * e),
        r.bezierCurveTo(409 * e, 201 * e, 420 * e, 181 * e, 416 * e, 166 * e),
        r.bezierCurveTo(410 * e, 150 * e, 412 * e, 149 * e, 408 * e, 130 * e),
        r.closePath(),
        Ce(r, i[4], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(86 * e, 134 * e),
        r.bezierCurveTo(79 * e, 102 * e, 92 * e, 84 * e, 108 * e, 92 * e),
        r.bezierCurveTo(149 * e, 108 * e, 184 * e, 111 * e, 242 * e, 111 * e),
        r.bezierCurveTo(294 * e, 108 * e, 341 * e, 105 * e, 386 * e, 98 * e),
        r.bezierCurveTo(412 * e, 91 * e, 417 * e, 86 * e, 415 * e, 133 * e),
        r.bezierCurveTo(413 * e, 160 * e, 413 * e, 160 * e, 368 * e, 174 * e),
        r.bezierCurveTo(308 * e, 184 * e, 291 * e, 185 * e, 270 * e, 186 * e),
        r.bezierCurveTo(264 * e, 206 * e, 262 * e, 215 * e, 253 * e, 215 * e),
        r.bezierCurveTo(239 * e, 217 * e, 239 * e, 211 * e, 231 * e, 186 * e),
        r.bezierCurveTo(178 * e, 184 * e, 156 * e, 179 * e, 112 * e, 162 * e),
        r.bezierCurveTo(87 * e, 151 * e, 90 * e, 144 * e, 87 * e, 137 * e),
        r.closePath(),
        Ce(r, i[4], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(63 * e, 98 * e),
        r.bezierCurveTo(84 * e, 121 * e, 109 * e, 102 * e, 124 * e, 117 * e),
        r.bezierCurveTo(138 * e, 136 * e, 123 * e, 165 * e, 94 * e, 150 * e),
        r.bezierCurveTo(66 * e, 131 * e, 64 * e, 115 * e, 63 * e, 99 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(449 * e, 97 * e),
        r.bezierCurveTo(446 * e, 143 * e, 415 * e, 151 * e, 402 * e, 155 * e),
        r.bezierCurveTo(386 * e, 157 * e, 373 * e, 133 * e, 391 * e, 116 * e),
        r.bezierCurveTo(402 * e, 106 * e, 432 * e, 124 * e, 449 * e, 97 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 10 * e),
        n
    }
    function Q1(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 304 * e,
        n.height = 278 * e,
        r.translate(10 * e, 25 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(128 * e, 137 * e),
        r.bezierCurveTo(155 * e, 144 * e, 223 * e, 143 * e, 256 * e, 122 * e),
        r.bezierCurveTo(249 * e, 180 * e, 210 * e, 227 * e, 164 * e, 242 * e),
        r.bezierCurveTo(74 * e, 213 * e, 99 * e, 166 * e, 127 * e, 138 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(284 * e, 52 * e),
        r.bezierCurveTo(126 * e, 112 * e, 89 * e, 177 * e, 170 * e, 241 * e),
        r.bezierCurveTo(103 * e, 275 * e, 20 * e, 239 * e, 12 * e, 159 * e),
        r.bezierCurveTo(5 * e, 76 * e, 75 * e, 4 * e, 165 * e, 13 * e),
        r.bezierCurveTo(233 * e, 15 * e, 260 * e, 33 * e, 284 * e, 52 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(-10 * e, -25 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(128 * e, 137 * e),
        r.bezierCurveTo(155 * e, 144 * e, 223 * e, 143 * e, 256 * e, 122 * e),
        r.bezierCurveTo(249 * e, 180 * e, 210 * e, 227 * e, 164 * e, 242 * e),
        r.bezierCurveTo(74 * e, 213 * e, 99 * e, 166 * e, 127 * e, 138 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 15 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(284 * e, 52 * e),
        r.bezierCurveTo(126 * e, 112 * e, 89 * e, 177 * e, 170 * e, 241 * e),
        r.bezierCurveTo(103 * e, 275 * e, 20 * e, 239 * e, 12 * e, 159 * e),
        r.bezierCurveTo(5 * e, 76 * e, 75 * e, 4 * e, 165 * e, 13 * e),
        r.bezierCurveTo(233 * e, 15 * e, 260 * e, 33 * e, 284 * e, 52 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 15 * e),
        n
    }
    function et(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 175 * e,
        n.height = 169 * e,
        r.globalAlpha = .5,
        r.translate(0, 3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(19 * e, 139 * e),
        r.bezierCurveTo(18 * e, 163 * e, 22 * e, 156 * e, 53 * e, 157 * e),
        r.bezierCurveTo(97.5 * e, 157 * e, 97.5 * e, 157 * e, 142 * e, 157 * e),
        r.bezierCurveTo(150 * e, 157 * e, 153 * e, 156 * e, 154 * e, 142 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -3 * e),
        r.save(),
        r.translate(86.5 * e, 81.5 * e),
        Be(r, -66.5 * e, -65.5 * e, 133 * e, 131 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 5 * e),
        r.save(),
        r.translate(84.5 * e, 79 * e),
        Be(r, -50.5 * e, -49 * e, 101 * e, 98 * e, 10 * e),
        r.restore(),
        Ce(r, i[3], i[2], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(42 * e, 54 * e),
        r.bezierCurveTo(37 * e, 48 * e, 39 * e, 44 * e, 38 * e, 41 * e),
        r.bezierCurveTo(42 * e, 40 * e, 45 * e, 40 * e, 50 * e, 41 * e),
        r.bezierCurveTo(85 * e, 36 * e, 98 * e, 37 * e, 116 * e, 42 * e),
        r.bezierCurveTo(132 * e, 39 * e, 132 * e, 39 * e, 133 * e, 56 * e),
        r.bezierCurveTo(136 * e, 73 * e, 136 * e, 84 * e, 132 * e, 106 * e),
        r.bezierCurveTo(47 * e, 113 * e, 85.5 * e, 106 * e, 39 * e, 106 * e),
        r.bezierCurveTo(32 * e, 81 * e, 38 * e, 60 * e, 42 * e, 55 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.save(),
        r.translate(28 * e, 24 * e),
        r.rotate(0),
        Be(r, -14 * e, -14 * e, 28 * e, 28 * e, 4 * e),
        r.restore(),
        Ce(r, i[1], i[2], 5 * e),
        r.save(),
        r.translate(143 * e, 23 * e),
        r.rotate(0),
        Be(r, -14 * e, -14 * e, 28 * e, 28 * e, 4 * e),
        r.restore(),
        Ce(r, i[1], i[2], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55 * e, 80 * e),
        r.bezierCurveTo(73 * e, 78 * e, 84 * e, 74 * e, 100 * e, 64 * e),
        r.bezierCurveTo(111 * e, 57 * e, 125 * e, 67 * e, 108 * e, 84 * e),
        r.bezierCurveTo(96 * e, 95 * e, 86 * e, 96 * e, 70 * e, 88 * e),
        r.bezierCurveTo(62.5 * e, 84 * e, 62.5 * e, 84 * e, 55 * e, 80 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(17 * e, 112 * e),
        r.bezierCurveTo(14 * e, 146 * e, 27 * e, 152 * e, 37 * e, 149 * e),
        r.bezierCurveTo(78 * e, 155 * e, 128 * e, 150 * e, 146 * e, 150 * e),
        r.bezierCurveTo(158 * e, 144 * e, 158 * e, 121 * e, 153 * e, 114 * e),
        r.closePath(),
        Ce(r, i[8], i[9], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(127 * e, 111 * e),
        r.bezierCurveTo(133 * e, 136 * e, 115 * e, 149 * e, 88 * e, 150 * e),
        r.bezierCurveTo(119.5 * e, 151 * e, 119.5 * e, 151 * e, 151 * e, 152 * e),
        r.bezierCurveTo(159 * e, 136 * e, 155 * e, 126 * e, 154 * e, 113 * e),
        r.closePath(),
        Ce(r, i[9]),
        r.globalAlpha = .5,
        r.translate(0, 3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(15 * e, 117 * e),
        r.bezierCurveTo(34 * e, 109 * e, 61 * e, 106 * e, 94 * e, 109 * e),
        r.bezierCurveTo(126 * e, 110 * e, 142 * e, 113 * e, 154 * e, 119 * e),
        r.bezierCurveTo(154 * e, 123 * e, 154 * e, 123 * e, 154 * e, 127 * e),
        r.bezierCurveTo(127 * e, 118 * e, 15 * e, 122 * e, 18 * e, 129 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(14 * e, 127 * e),
        r.bezierCurveTo(13 * e, 117 * e, 12 * e, 109 * e, 15 * e, 103 * e),
        r.bezierCurveTo(16 * e, 95 * e, 21 * e, 92 * e, 60 * e, 93 * e),
        r.bezierCurveTo(91 * e, 93 * e, 118 * e, 93 * e, 143 * e, 96 * e),
        r.bezierCurveTo(151 * e, 96 * e, 155 * e, 99 * e, 156 * e, 112 * e),
        r.bezierCurveTo(157 * e, 124 * e, 157 * e, 127 * e, 156 * e, 128 * e),
        r.bezierCurveTo(138 * e, 112 * e, 100 * e, 118 * e, 84 * e, 118 * e),
        r.bezierCurveTo(28 * e, 118 * e, 20 * e, 120 * e, 16 * e, 127 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.save(),
        r.translate(27.5 * e, 138.5 * e),
        Be(r, -13.5 * e, -14.5 * e, 27 * e, 29 * e, 4 * e),
        r.restore(),
        Ce(r, i[1], i[2], 5 * e),
        r.save(),
        r.translate(143.5 * e, 137 * e),
        Be(r, -13.5 * e, -14 * e, 27 * e, 28 * e, 4 * e),
        r.restore(),
        Ce(r, i[1], i[2], 5 * e),
        n
    }
    function tt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 175 * e,
        n.height = 169 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(17 * e, 112 * e),
        r.bezierCurveTo(14 * e, 146 * e, 27 * e, 152 * e, 37 * e, 149 * e),
        r.bezierCurveTo(78 * e, 155 * e, 128 * e, 150 * e, 146 * e, 150 * e),
        r.bezierCurveTo(158 * e, 144 * e, 158 * e, 121 * e, 153 * e, 114 * e),
        r.closePath(),
        Ce(r, i[8], i[9], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(127 * e, 111 * e),
        r.bezierCurveTo(133 * e, 136 * e, 115 * e, 149 * e, 88 * e, 150 * e),
        r.bezierCurveTo(119.5 * e, 151 * e, 119.5 * e, 151 * e, 151 * e, 152 * e),
        r.bezierCurveTo(159 * e, 136 * e, 155 * e, 126 * e, 154 * e, 113 * e),
        r.closePath(),
        Ce(r, i[9]),
        r.globalAlpha = .5,
        r.translate(0, 3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(15 * e, 117 * e),
        r.bezierCurveTo(34 * e, 109 * e, 61 * e, 106 * e, 94 * e, 109 * e),
        r.bezierCurveTo(126 * e, 110 * e, 142 * e, 113 * e, 154 * e, 119 * e),
        r.bezierCurveTo(154 * e, 123 * e, 154 * e, 123 * e, 154 * e, 127 * e),
        r.bezierCurveTo(127 * e, 118 * e, 15 * e, 122 * e, 18 * e, 129 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(14 * e, 127 * e),
        r.bezierCurveTo(13 * e, 117 * e, 12 * e, 109 * e, 15 * e, 103 * e),
        r.bezierCurveTo(16 * e, 95 * e, 21 * e, 92 * e, 60 * e, 93 * e),
        r.bezierCurveTo(91 * e, 93 * e, 118 * e, 93 * e, 143 * e, 96 * e),
        r.bezierCurveTo(151 * e, 96 * e, 155 * e, 99 * e, 156 * e, 112 * e),
        r.bezierCurveTo(157 * e, 124 * e, 157 * e, 127 * e, 156 * e, 128 * e),
        r.bezierCurveTo(138 * e, 112 * e, 100 * e, 118 * e, 84 * e, 118 * e),
        r.bezierCurveTo(28 * e, 118 * e, 20 * e, 120 * e, 16 * e, 127 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.save(),
        r.translate(27.5 * e, 138.5 * e),
        Be(r, -13.5 * e, -14.5 * e, 27 * e, 29 * e, 4 * e),
        r.restore(),
        Ce(r, i[1], i[2], 5 * e),
        r.save(),
        r.translate(143.5 * e, 137 * e),
        Be(r, -13.5 * e, -14 * e, 27 * e, 28 * e, 4 * e),
        r.restore(),
        Ce(r, i[1], i[2], 5 * e),
        n
    }
    function it(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 115 * e,
        n.height = 585 * e,
        r.scale(-1, 1),
        r.translate(-110 * e, 0),
        r.translate(10 * e, 10 * e),
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(51.5 * e, 342 * e),
        Be(r, -14.5 * e, -225 * e, 29 * e, 450 * e, 20 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(54 * e, 83 * e),
        r.bezierCurveTo(70 * e, 69 * e, 78 * e, 62 * e, 82 * e, 40 * e),
        r.bezierCurveTo(93 * e, 48 * e, 103 * e, 64 * e, 95 * e, 102 * e),
        r.bezierCurveTo(60 * e, 114 * e, 53 * e, 103 * e, 54 * e, 85 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(95 * e, 97 * e),
        r.bezierCurveTo(56 * e, 102 * e, 43 * e, 77 * e, 71 * e, 6 * e),
        r.bezierCurveTo(34 * e, 10 * e, 6 * e, 43 * e, 5 * e, 76 * e),
        r.bezierCurveTo(4 * e, 98 * e, 15 * e, 130 * e, 64 * e, 130 * e),
        r.bezierCurveTo(76 * e, 129 * e, 95 * e, 113 * e, 97 * e, 97 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55 * e, 176 * e),
        r.bezierCurveTo(74 * e, 175 * e, 82 * e, 169 * e, 96 * e, 155 * e),
        r.bezierCurveTo(103 * e, 183 * e, 95 * e, 214 * e, 54 * e, 219 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(50 * e, 176 * e),
        r.bezierCurveTo(25 * e, 177 * e, 16 * e, 164 * e, 7 * e, 156 * e),
        r.bezierCurveTo(0 * e, 186 * e, 10 * e, 201 * e, 43 * e, 220 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 403 * e),
        r.bezierCurveTo(47 * e, 412 * e, 58 * e, 412 * e, 67 * e, 403 * e),
        r.bezierCurveTo(66.5 * e, 434 * e, 66.5 * e, 434 * e, 66 * e, 465 * e),
        r.bezierCurveTo(56 * e, 480 * e, 40 * e, 472 * e, 36 * e, 465 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(59 * e, 67 * e),
        r.bezierCurveTo(47 * e, 97 * e, 18 * e, 117 * e, 11 * e, 110 * e),
        r.bezierCurveTo(11 * e, 115 * e, 15 * e, 122 * e, 23 * e, 124 * e),
        r.bezierCurveTo(46 * e, 118 * e, 52 * e, 113 * e, 62 * e, 86 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 125 * e),
        r.bezierCurveTo(47 * e, 136 * e, 57 * e, 134 * e, 77 * e, 127 * e),
        r.bezierCurveTo(71 * e, 158 * e, 71 * e, 159 * e, 66 * e, 159 * e),
        r.bezierCurveTo(50.5 * e, 156.5 * e, 50.5 * e, 156.5 * e, 35 * e, 154 * e),
        r.bezierCurveTo(31 * e, 145 * e, 31 * e, 136 * e, 31 * e, 125 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 171 * e),
        r.bezierCurveTo(32 * e, 221 * e, 43 * e, 233 * e, 70 * e, 247 * e),
        r.bezierCurveTo(75 * e, 234 * e, 75 * e, 230 * e, 72 * e, 221 * e),
        r.bezierCurveTo(48 * e, 206 * e, 54 * e, 188 * e, 50 * e, 176 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(60 * e, 68 * e),
        r.bezierCurveTo(63 * e, 69 * e, 65 * e, 71 * e, 67 * e, 77 * e),
        r.bezierCurveTo(61 * e, 123 * e, 52 * e, 137 * e, 42 * e, 150 * e),
        r.bezierCurveTo(38 * e, 151 * e, 38 * e, 151 * e, 34 * e, 152 * e),
        r.bezierCurveTo(33 * e, 146.5 * e, 33 * e, 146.5 * e, 32 * e, 141 * e),
        r.bezierCurveTo(49 * e, 118 * e, 63 * e, 87 * e, 59 * e, 68 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(71 * e, 172 * e),
        r.bezierCurveTo(56 * e, 222 * e, 49 * e, 234 * e, 35 * e, 248 * e),
        r.bezierCurveTo(30 * e, 236 * e, 30 * e, 230 * e, 31 * e, 217 * e),
        r.bezierCurveTo(44 * e, 202 * e, 49 * e, 191 * e, 52 * e, 172 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 151 * e),
        r.bezierCurveTo(27 * e, 165 * e, 31 * e, 173 * e, 36 * e, 178 * e),
        r.bezierCurveTo(56 * e, 185 * e, 73 * e, 184 * e, 71 * e, 170 * e),
        r.bezierCurveTo(72 * e, 154 * e, 71 * e, 154 * e, 63 * e, 155 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(-10 * e, -10 * e),
        r.globalAlpha = 1,
        r.save(),
        r.translate(51.5 * e, 342 * e),
        Be(r, -14.5 * e, -225 * e, 29 * e, 450 * e, 20 * e),
        r.restore(),
        Ce(r, i[1], i[2], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(54 * e, 83 * e),
        r.bezierCurveTo(70 * e, 69 * e, 78 * e, 62 * e, 82 * e, 40 * e),
        r.bezierCurveTo(93 * e, 48 * e, 103 * e, 64 * e, 95 * e, 102 * e),
        r.bezierCurveTo(60 * e, 114 * e, 53 * e, 103 * e, 54 * e, 85 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(95 * e, 97 * e),
        r.bezierCurveTo(56 * e, 102 * e, 43 * e, 77 * e, 71 * e, 6 * e),
        r.bezierCurveTo(34 * e, 10 * e, 6 * e, 43 * e, 5 * e, 76 * e),
        r.bezierCurveTo(4 * e, 98 * e, 15 * e, 130 * e, 64 * e, 130 * e),
        r.bezierCurveTo(76 * e, 129 * e, 95 * e, 113 * e, 97 * e, 97 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 403 * e),
        r.bezierCurveTo(47 * e, 412 * e, 58 * e, 412 * e, 67 * e, 403 * e),
        r.bezierCurveTo(66.5 * e, 434 * e, 66.5 * e, 434 * e, 66 * e, 465 * e),
        r.bezierCurveTo(56 * e, 480 * e, 40 * e, 472 * e, 36 * e, 465 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(37 * e, 427 * e),
        r.bezierCurveTo(47 * e, 435 * e, 55 * e, 435 * e, 67 * e, 427 * e),
        Ce(r, void 0, i[8], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36 * e, 448 * e),
        r.bezierCurveTo(46 * e, 454 * e, 54 * e, 457 * e, 65 * e, 449 * e),
        Ce(r, void 0, i[8], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55 * e, 176 * e),
        r.bezierCurveTo(74 * e, 175 * e, 82 * e, 169 * e, 96 * e, 155 * e),
        r.bezierCurveTo(103 * e, 183 * e, 95 * e, 214 * e, 54 * e, 219 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(50 * e, 176 * e),
        r.bezierCurveTo(25 * e, 177 * e, 16 * e, 164 * e, 7 * e, 156 * e),
        r.bezierCurveTo(0 * e, 186 * e, 10 * e, 201 * e, 43 * e, 220 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(59 * e, 67 * e),
        r.bezierCurveTo(47 * e, 97 * e, 18 * e, 117 * e, 11 * e, 110 * e),
        r.bezierCurveTo(11 * e, 115 * e, 15 * e, 122 * e, 23 * e, 124 * e),
        r.bezierCurveTo(46 * e, 118 * e, 52 * e, 113 * e, 62 * e, 86 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 125 * e),
        r.bezierCurveTo(47 * e, 136 * e, 57 * e, 134 * e, 77 * e, 127 * e),
        r.bezierCurveTo(71 * e, 158 * e, 71 * e, 159 * e, 66 * e, 159 * e),
        r.bezierCurveTo(50.5 * e, 156.5 * e, 50.5 * e, 156.5 * e, 35 * e, 154 * e),
        r.bezierCurveTo(31 * e, 145 * e, 31 * e, 136 * e, 31 * e, 125 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 171 * e),
        r.bezierCurveTo(32 * e, 221 * e, 43 * e, 233 * e, 70 * e, 247 * e),
        r.bezierCurveTo(75 * e, 234 * e, 75 * e, 230 * e, 72 * e, 221 * e),
        r.bezierCurveTo(48 * e, 206 * e, 54 * e, 188 * e, 50 * e, 176 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(60 * e, 68 * e),
        r.bezierCurveTo(63 * e, 69 * e, 65 * e, 71 * e, 67 * e, 77 * e),
        r.bezierCurveTo(61 * e, 123 * e, 52 * e, 137 * e, 42 * e, 150 * e),
        r.bezierCurveTo(38 * e, 151 * e, 38 * e, 151 * e, 34 * e, 152 * e),
        r.bezierCurveTo(33 * e, 146.5 * e, 33 * e, 146.5 * e, 32 * e, 141 * e),
        r.bezierCurveTo(49 * e, 118 * e, 63 * e, 87 * e, 59 * e, 68 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(71 * e, 172 * e),
        r.bezierCurveTo(56 * e, 222 * e, 49 * e, 234 * e, 35 * e, 248 * e),
        r.bezierCurveTo(30 * e, 236 * e, 30 * e, 230 * e, 31 * e, 217 * e),
        r.bezierCurveTo(44 * e, 202 * e, 49 * e, 191 * e, 52 * e, 172 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 151 * e),
        r.bezierCurveTo(27 * e, 165 * e, 31 * e, 173 * e, 36 * e, 178 * e),
        r.bezierCurveTo(56 * e, 185 * e, 73 * e, 184 * e, 71 * e, 170 * e),
        r.bezierCurveTo(72 * e, 154 * e, 71 * e, 154 * e, 63 * e, 155 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(53 * e, 113 * e),
        r.bezierCurveTo(65 * e, 140 * e, 75 * e, 166 * e, 52 * e, 169 * e),
        r.bezierCurveTo(29 * e, 168 * e, 41 * e, 143 * e, 53 * e, 112 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 6 * e),
        n
    }
    function nt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 81 * e,
        n.height = 626 * e,
        r.translate(20 * e, 20 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55 * e, 565 * e),
        r.bezierCurveTo(56 * e, 586 * e, 53 * e, 591 * e, 40 * e, 592 * e),
        r.bezierCurveTo(28 * e, 591 * e, 27 * e, 583 * e, 28 * e, 557 * e),
        r.bezierCurveTo(27.5 * e, 346 * e, 27.5 * e, 346 * e, 27 * e, 135 * e),
        r.bezierCurveTo(26 * e, 74 * e, 36 * e, 26 * e, 41 * e, 15 * e),
        r.bezierCurveTo(54 * e, 51 * e, 54 * e, 81 * e, 55 * e, 128 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(-20 * e, -20 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55 * e, 565 * e),
        r.bezierCurveTo(56 * e, 586 * e, 53 * e, 591 * e, 40 * e, 592 * e),
        r.bezierCurveTo(28 * e, 591 * e, 27 * e, 583 * e, 28 * e, 557 * e),
        r.bezierCurveTo(27.5 * e, 346 * e, 27.5 * e, 346 * e, 27 * e, 135 * e),
        r.bezierCurveTo(26 * e, 74 * e, 36 * e, 26 * e, 41 * e, 15 * e),
        r.bezierCurveTo(54 * e, 51 * e, 54 * e, 81 * e, 55 * e, 128 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(27 * e, 129 * e),
        r.bezierCurveTo(32 * e, 135 * e, 48 * e, 136 * e, 53 * e, 129 * e),
        r.bezierCurveTo(56 * e, 97 * e, 53 * e, 82 * e, 52 * e, 64 * e),
        r.bezierCurveTo(49 * e, 33 * e, 44 * e, 27 * e, 41 * e, 21 * e),
        r.bezierCurveTo(31 * e, 40 * e, 28 * e, 84 * e, 27 * e, 127 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55 * e, 565 * e),
        r.bezierCurveTo(56 * e, 586 * e, 53 * e, 591 * e, 40 * e, 592 * e),
        r.bezierCurveTo(28 * e, 591 * e, 27 * e, 583 * e, 28 * e, 557 * e),
        r.bezierCurveTo(27.5 * e, 346 * e, 27.5 * e, 346 * e, 27 * e, 135 * e),
        r.bezierCurveTo(26 * e, 74 * e, 36 * e, 26 * e, 41 * e, 15 * e),
        r.bezierCurveTo(54 * e, 51 * e, 54 * e, 81 * e, 55 * e, 128 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(28 * e, 475 * e),
        r.bezierCurveTo(38 * e, 482 * e, 48 * e, 480 * e, 54 * e, 474 * e),
        r.bezierCurveTo(54 * e, 509.5 * e, 54 * e, 509.5 * e, 54 * e, 545 * e),
        r.bezierCurveTo(46 * e, 554 * e, 36 * e, 552 * e, 28 * e, 545 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(28 * e, 496 * e),
        r.bezierCurveTo(39 * e, 506 * e, 49 * e, 503 * e, 54 * e, 496 * e),
        Ce(r, void 0, i[5], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(28 * e, 521 * e),
        r.bezierCurveTo(41 * e, 529 * e, 49 * e, 524 * e, 54 * e, 520 * e),
        Ce(r, void 0, i[5], 8 * e),
        n
    }
    function rt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 100 * e,
        n.height = 648 * e,
        r.translate(20 * e, 20 * e),
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(50.5 * e, 349.5 * e),
        Be(r, -13.5 * e, -249.5 * e, 27 * e, 499 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36 * e, 538 * e),
        r.bezierCurveTo(49.5 * e, 538 * e, 49.5 * e, 538 * e, 63 * e, 538 * e),
        r.bezierCurveTo(63.5 * e, 568 * e, 63.5 * e, 568 * e, 64 * e, 598 * e),
        r.bezierCurveTo(50 * e, 598 * e, 50 * e, 598 * e, 36 * e, 598 * e),
        r.bezierCurveTo(36 * e, 568.5 * e, 36 * e, 568.5 * e, 36 * e, 539 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36 * e, 554 * e),
        r.bezierCurveTo(45 * e, 561 * e, 56 * e, 558 * e, 63 * e, 554 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(32 * e, 569 * e),
        r.bezierCurveTo(44 * e, 576 * e, 58 * e, 574 * e, 68 * e, 569 * e),
        r.bezierCurveTo(68 * e, 584 * e, 68 * e, 584 * e, 68 * e, 599 * e),
        r.bezierCurveTo(68 * e, 608 * e, 65 * e, 618 * e, 49 * e, 617 * e),
        r.bezierCurveTo(34 * e, 617 * e, 32 * e, 610 * e, 32 * e, 598 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(41 * e, 581 * e),
        r.bezierCurveTo(48 * e, 584 * e, 55 * e, 583 * e, 60 * e, 581 * e),
        r.bezierCurveTo(60 * e, 589.5 * e, 60 * e, 589.5 * e, 60 * e, 598 * e),
        r.bezierCurveTo(60 * e, 604 * e, 59 * e, 609 * e, 48 * e, 608 * e),
        r.bezierCurveTo(40 * e, 607 * e, 40 * e, 606 * e, 41 * e, 581 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(31 * e, 106 * e),
        r.bezierCurveTo(31 * e, 124.5 * e, 31 * e, 124.5 * e, 31 * e, 143 * e),
        r.bezierCurveTo(31 * e, 163 * e, 38 * e, 169 * e, 48 * e, 168 * e),
        r.bezierCurveTo(57 * e, 168 * e, 67 * e, 165 * e, 67 * e, 148 * e),
        r.bezierCurveTo(67 * e, 123.5 * e, 67 * e, 123.5 * e, 67 * e, 99 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(49 * e, 27 * e),
        r.bezierCurveTo(64 * e, 62.5 * e, 64 * e, 62.5 * e, 79 * e, 98 * e),
        r.bezierCurveTo(74 * e, 113 * e, 63 * e, 121 * e, 50 * e, 122 * e),
        r.bezierCurveTo(35 * e, 123 * e, 22 * e, 109 * e, 20 * e, 98 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(49 * e, 43 * e),
        r.bezierCurveTo(61 * e, 70 * e, 61 * e, 70 * e, 73 * e, 97 * e),
        r.bezierCurveTo(66 * e, 116 * e, 43 * e, 122 * e, 26 * e, 99 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(-20 * e, -20 * e),
        r.globalAlpha = 1,
        r.save(),
        r.translate(50.5 * e, 349.5 * e),
        Be(r, -13.5 * e, -249.5 * e, 27 * e, 499 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36 * e, 538 * e),
        r.bezierCurveTo(49.5 * e, 538 * e, 49.5 * e, 538 * e, 63 * e, 538 * e),
        r.bezierCurveTo(63.5 * e, 568 * e, 63.5 * e, 568 * e, 64 * e, 598 * e),
        r.bezierCurveTo(50 * e, 598 * e, 50 * e, 598 * e, 36 * e, 598 * e),
        r.bezierCurveTo(36 * e, 568.5 * e, 36 * e, 568.5 * e, 36 * e, 539 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36 * e, 554 * e),
        r.bezierCurveTo(45 * e, 561 * e, 56 * e, 558 * e, 63 * e, 554 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(32 * e, 569 * e),
        r.bezierCurveTo(44 * e, 576 * e, 58 * e, 574 * e, 68 * e, 569 * e),
        r.bezierCurveTo(68 * e, 584 * e, 68 * e, 584 * e, 68 * e, 599 * e),
        r.bezierCurveTo(68 * e, 608 * e, 65 * e, 618 * e, 49 * e, 617 * e),
        r.bezierCurveTo(34 * e, 617 * e, 32 * e, 610 * e, 32 * e, 598 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(41 * e, 581 * e),
        r.bezierCurveTo(48 * e, 584 * e, 55 * e, 583 * e, 60 * e, 581 * e),
        r.bezierCurveTo(60 * e, 589.5 * e, 60 * e, 589.5 * e, 60 * e, 598 * e),
        r.bezierCurveTo(60 * e, 604 * e, 59 * e, 609 * e, 48 * e, 608 * e),
        r.bezierCurveTo(40 * e, 607 * e, 40 * e, 606 * e, 41 * e, 581 * e),
        r.closePath(),
        Ce(r, i[7]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(31 * e, 106 * e),
        r.bezierCurveTo(31 * e, 124.5 * e, 31 * e, 124.5 * e, 31 * e, 143 * e),
        r.bezierCurveTo(31 * e, 163 * e, 38 * e, 169 * e, 48 * e, 168 * e),
        r.bezierCurveTo(57 * e, 168 * e, 67 * e, 165 * e, 67 * e, 148 * e),
        r.bezierCurveTo(67 * e, 123.5 * e, 67 * e, 123.5 * e, 67 * e, 99 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 8 * e),
        r.save(),
        r.translate(-46 * e, -50 * e),
        r.scale(2, 2),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(51 * e, 80 * e),
        r.bezierCurveTo(51 * e, 89.5 * e, 51 * e, 89.5 * e, 51 * e, 99 * e),
        r.bezierCurveTo(49 * e, 103 * e, 46 * e, 105 * e, 44 * e, 99 * e),
        r.bezierCurveTo(44 * e, 88.5 * e, 44 * e, 88.5 * e, 44 * e, 78 * e),
        r.closePath(),
        Ce(r, i[8]),
        r.restore(),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(49 * e, 27 * e),
        r.bezierCurveTo(64 * e, 62.5 * e, 64 * e, 62.5 * e, 79 * e, 98 * e),
        r.bezierCurveTo(74 * e, 113 * e, 63 * e, 121 * e, 50 * e, 122 * e),
        r.bezierCurveTo(35 * e, 123 * e, 22 * e, 109 * e, 20 * e, 98 * e),
        r.closePath(),
        Ce(r, i[8], i[9], 8 * e),
        r.scale(2, 2),
        r.translate(-23 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(57 * e, 69 * e),
        r.bezierCurveTo(50 * e, 76 * e, 43 * e, 75 * e, 38 * e, 69 * e),
        r.bezierCurveTo(43 * e, 57 * e, 43 * e, 57 * e, 48 * e, 45 * e),
        r.closePath(),
        Ce(r, i[10]),
        n
    }
    function ot(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 88 * e,
        n.height = 647 * e,
        r.translate(20 * e, 20 * e),
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(45 * e, 384.5 * e),
        Be(r, -15 * e, -216.5 * e, 30 * e, 433 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(27 * e, 572 * e),
        r.bezierCurveTo(44 * e, 580 * e, 55 * e, 576 * e, 62 * e, 572 * e),
        r.bezierCurveTo(65 * e, 585.5 * e, 65 * e, 585.5 * e, 68 * e, 599 * e),
        r.bezierCurveTo(71 * e, 612 * e, 68 * e, 618 * e, 34 * e, 616 * e),
        r.bezierCurveTo(14 * e, 615 * e, 19 * e, 607 * e, 27 * e, 573 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(32 * e, 587 * e),
        r.bezierCurveTo(39 * e, 590 * e, 48 * e, 588 * e, 54 * e, 587 * e),
        r.bezierCurveTo(57 * e, 604 * e, 59 * e, 609 * e, 46 * e, 609 * e),
        r.bezierCurveTo(27 * e, 609 * e, 28 * e, 605 * e, 33 * e, 588 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(31 * e, 113 * e),
        r.bezierCurveTo(27 * e, 139 * e, 27 * e, 139 * e, 23 * e, 165 * e),
        r.bezierCurveTo(18 * e, 187 * e, 39 * e, 195 * e, 57 * e, 186 * e),
        r.bezierCurveTo(68 * e, 180 * e, 65 * e, 171 * e, 62 * e, 153 * e),
        r.bezierCurveTo(58.5 * e, 131 * e, 58.5 * e, 131 * e, 55 * e, 109 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(39 * e, 139 * e),
        r.bezierCurveTo(43 * e, 139 * e, 43 * e, 139 * e, 47 * e, 139 * e),
        r.bezierCurveTo(51 * e, 158 * e, 56 * e, 176 * e, 44 * e, 175 * e),
        r.bezierCurveTo(33 * e, 177 * e, 34 * e, 167 * e, 39 * e, 140 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(44 * e, 29 * e),
        r.bezierCurveTo(57 * e, 63 * e, 57 * e, 63 * e, 70 * e, 97 * e),
        r.bezierCurveTo(60 * e, 111 * e, 60 * e, 111 * e, 50 * e, 125 * e),
        r.bezierCurveTo(45 * e, 128 * e, 41 * e, 128 * e, 35 * e, 124 * e),
        r.bezierCurveTo(26.5 * e, 110 * e, 26.5 * e, 110 * e, 18 * e, 96 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(44 * e, 54 * e),
        r.bezierCurveTo(50 * e, 72 * e, 50 * e, 72 * e, 56 * e, 90 * e),
        r.bezierCurveTo(58 * e, 94 * e, 59 * e, 98 * e, 53 * e, 105 * e),
        r.bezierCurveTo(47 * e, 113 * e, 43 * e, 113 * e, 36 * e, 103 * e),
        r.bezierCurveTo(29 * e, 96 * e, 31 * e, 94 * e, 35 * e, 83 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(-20 * e, -20 * e),
        r.globalAlpha = 1,
        r.save(),
        r.translate(45 * e, 384.5 * e),
        Be(r, -15 * e, -216.5 * e, 30 * e, 433 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(27 * e, 572 * e),
        r.bezierCurveTo(44 * e, 580 * e, 55 * e, 576 * e, 62 * e, 572 * e),
        r.bezierCurveTo(65 * e, 585.5 * e, 65 * e, 585.5 * e, 68 * e, 599 * e),
        r.bezierCurveTo(71 * e, 612 * e, 68 * e, 618 * e, 34 * e, 616 * e),
        r.bezierCurveTo(14 * e, 615 * e, 19 * e, 607 * e, 27 * e, 573 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(32 * e, 587 * e),
        r.bezierCurveTo(39 * e, 590 * e, 48 * e, 588 * e, 54 * e, 587 * e),
        r.bezierCurveTo(57 * e, 604 * e, 59 * e, 609 * e, 46 * e, 609 * e),
        r.bezierCurveTo(27 * e, 609 * e, 28 * e, 605 * e, 33 * e, 588 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(31 * e, 113 * e),
        r.bezierCurveTo(27 * e, 139 * e, 27 * e, 139 * e, 23 * e, 165 * e),
        r.bezierCurveTo(18 * e, 187 * e, 39 * e, 195 * e, 57 * e, 186 * e),
        r.bezierCurveTo(68 * e, 180 * e, 65 * e, 171 * e, 62 * e, 153 * e),
        r.bezierCurveTo(58.5 * e, 131 * e, 58.5 * e, 131 * e, 55 * e, 109 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(39 * e, 139 * e),
        r.bezierCurveTo(43 * e, 139 * e, 43 * e, 139 * e, 47 * e, 139 * e),
        r.bezierCurveTo(51 * e, 158 * e, 56 * e, 176 * e, 44 * e, 175 * e),
        r.bezierCurveTo(33 * e, 177 * e, 34 * e, 167 * e, 39 * e, 140 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(44 * e, 29 * e),
        r.bezierCurveTo(57 * e, 63 * e, 57 * e, 63 * e, 70 * e, 97 * e),
        r.bezierCurveTo(60 * e, 111 * e, 60 * e, 111 * e, 50 * e, 125 * e),
        r.bezierCurveTo(45 * e, 128 * e, 41 * e, 128 * e, 35 * e, 124 * e),
        r.bezierCurveTo(26.5 * e, 110 * e, 26.5 * e, 110 * e, 18 * e, 96 * e),
        r.closePath(),
        Ce(r, i[6], i[7], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(44 * e, 54 * e),
        r.bezierCurveTo(50 * e, 72 * e, 50 * e, 72 * e, 56 * e, 90 * e),
        r.bezierCurveTo(58 * e, 94 * e, 59 * e, 98 * e, 53 * e, 105 * e),
        r.bezierCurveTo(47 * e, 113 * e, 43 * e, 113 * e, 36 * e, 103 * e),
        r.bezierCurveTo(29 * e, 96 * e, 31 * e, 94 * e, 35 * e, 83 * e),
        r.closePath(),
        Ce(r, i[8]),
        n
    }
    function at(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 106 * e,
        n.height = 681 * e,
        r.translate(20 * e, 20 * e),
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(52.5 * e, 395 * e),
        r.rotate(0),
        Be(r, -11.5 * e, -226 * e, 23 * e, 452 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 588 * e),
        r.bezierCurveTo(47 * e, 596 * e, 61 * e, 594 * e, 69 * e, 588 * e),
        r.bezierCurveTo(79 * e, 615 * e, 78 * e, 632 * e, 59 * e, 643 * e),
        r.bezierCurveTo(41 * e, 650 * e, 27 * e, 632 * e, 30 * e, 610 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 135 * e),
        r.bezierCurveTo(61.5 * e, 142 * e, 61.5 * e, 142 * e, 71 * e, 149 * e),
        r.bezierCurveTo(69.5 * e, 166 * e, 69.5 * e, 166 * e, 68 * e, 183 * e),
        r.bezierCurveTo(60.5 * e, 187.5 * e, 60.5 * e, 187.5 * e, 53 * e, 192 * e),
        r.bezierCurveTo(45 * e, 187.5 * e, 45 * e, 187.5 * e, 37 * e, 183 * e),
        r.bezierCurveTo(35.5 * e, 167 * e, 35.5 * e, 167 * e, 34 * e, 151 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(64 * e, 150 * e),
        r.bezierCurveTo(63 * e, 164 * e, 63 * e, 164 * e, 62 * e, 178 * e),
        r.bezierCurveTo(58 * e, 181 * e, 58 * e, 181 * e, 54 * e, 184 * e),
        r.bezierCurveTo(48.5 * e, 181.5 * e, 48.5 * e, 181.5 * e, 43 * e, 179 * e),
        r.bezierCurveTo(42 * e, 164.5 * e, 42 * e, 164.5 * e, 41 * e, 150 * e),
        r.bezierCurveTo(46 * e, 152.5 * e, 46 * e, 152.5 * e, 51 * e, 155 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 39 * e),
        r.bezierCurveTo(65.5 * e, 82 * e, 65.5 * e, 82 * e, 79 * e, 125 * e),
        r.bezierCurveTo(66 * e, 137.5 * e, 66 * e, 137.5 * e, 53 * e, 150 * e),
        r.bezierCurveTo(39 * e, 138 * e, 39 * e, 138 * e, 25 * e, 126 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 64 * e),
        r.bezierCurveTo(60 * e, 92.5 * e, 60 * e, 92.5 * e, 68 * e, 121 * e),
        r.bezierCurveTo(61 * e, 127.5 * e, 61 * e, 127.5 * e, 54 * e, 134 * e),
        r.bezierCurveTo(46.5 * e, 127.5 * e, 46.5 * e, 127.5 * e, 39 * e, 121 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(-20 * e, -20 * e),
        r.globalAlpha = 1,
        r.save(),
        r.translate(52.5 * e, 395 * e),
        r.rotate(0),
        Be(r, -11.5 * e, -226 * e, 23 * e, 452 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 588 * e),
        r.bezierCurveTo(47 * e, 596 * e, 61 * e, 594 * e, 69 * e, 588 * e),
        r.bezierCurveTo(79 * e, 615 * e, 78 * e, 632 * e, 59 * e, 643 * e),
        r.bezierCurveTo(41 * e, 650 * e, 27 * e, 632 * e, 30 * e, 610 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 135 * e),
        r.bezierCurveTo(61.5 * e, 142 * e, 61.5 * e, 142 * e, 71 * e, 149 * e),
        r.bezierCurveTo(69.5 * e, 166 * e, 69.5 * e, 166 * e, 68 * e, 183 * e),
        r.bezierCurveTo(60.5 * e, 187.5 * e, 60.5 * e, 187.5 * e, 53 * e, 192 * e),
        r.bezierCurveTo(45 * e, 187.5 * e, 45 * e, 187.5 * e, 37 * e, 183 * e),
        r.bezierCurveTo(35.5 * e, 167 * e, 35.5 * e, 167 * e, 34 * e, 151 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(64 * e, 150 * e),
        r.bezierCurveTo(63 * e, 164 * e, 63 * e, 164 * e, 62 * e, 178 * e),
        r.bezierCurveTo(58 * e, 181 * e, 58 * e, 181 * e, 54 * e, 184 * e),
        r.bezierCurveTo(48.5 * e, 181.5 * e, 48.5 * e, 181.5 * e, 43 * e, 179 * e),
        r.bezierCurveTo(42 * e, 164.5 * e, 42 * e, 164.5 * e, 41 * e, 150 * e),
        r.bezierCurveTo(46 * e, 152.5 * e, 46 * e, 152.5 * e, 51 * e, 155 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 39 * e),
        r.bezierCurveTo(65.5 * e, 82 * e, 65.5 * e, 82 * e, 79 * e, 125 * e),
        r.bezierCurveTo(66 * e, 137.5 * e, 66 * e, 137.5 * e, 53 * e, 150 * e),
        r.bezierCurveTo(39 * e, 138 * e, 39 * e, 138 * e, 25 * e, 126 * e),
        r.closePath(),
        Ce(r, i[6], i[7], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 64 * e),
        r.bezierCurveTo(60 * e, 92.5 * e, 60 * e, 92.5 * e, 68 * e, 121 * e),
        r.bezierCurveTo(61 * e, 127.5 * e, 61 * e, 127.5 * e, 54 * e, 134 * e),
        r.bezierCurveTo(46.5 * e, 127.5 * e, 46.5 * e, 127.5 * e, 39 * e, 121 * e),
        r.closePath(),
        Ce(r, i[8]),
        n
    }
    function st(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 108 * e,
        n.height = 669 * e,
        r.translate(20 * e, 20 * e),
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(54 * e, 389.5 * e),
        Be(r, -15 * e, -228.5 * e, 30 * e, 457 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 579 * e),
        r.bezierCurveTo(47 * e, 587 * e, 61 * e, 584 * e, 71 * e, 579 * e),
        r.bezierCurveTo(75 * e, 597.5 * e, 75 * e, 597.5 * e, 79 * e, 616 * e),
        r.bezierCurveTo(66.5 * e, 628 * e, 66.5 * e, 628 * e, 54 * e, 640 * e),
        r.bezierCurveTo(41 * e, 628.5 * e, 41 * e, 628.5 * e, 28 * e, 617 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 141 * e),
        r.bezierCurveTo(40 * e, 136 * e, 40 * e, 136 * e, 50 * e, 131 * e),
        r.bezierCurveTo(63 * e, 136 * e, 63 * e, 136 * e, 76 * e, 141 * e),
        r.bezierCurveTo(72.5 * e, 161.5 * e, 72.5 * e, 161.5 * e, 69 * e, 182 * e),
        r.bezierCurveTo(61.5 * e, 186.5 * e, 61.5 * e, 186.5 * e, 54 * e, 191 * e),
        r.bezierCurveTo(45 * e, 186.5 * e, 45 * e, 186.5 * e, 36 * e, 182 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(42 * e, 152 * e),
        r.bezierCurveTo(53 * e, 152 * e, 53 * e, 152 * e, 64 * e, 152 * e),
        r.bezierCurveTo(62 * e, 171 * e, 62 * e, 176 * e, 55 * e, 177 * e),
        r.bezierCurveTo(42 * e, 176 * e, 45 * e, 174 * e, 42 * e, 152 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 28 * e),
        r.bezierCurveTo(67.5 * e, 55 * e, 67.5 * e, 55 * e, 83 * e, 82 * e),
        r.bezierCurveTo(80 * e, 106.5 * e, 80 * e, 106.5 * e, 77 * e, 131 * e),
        r.bezierCurveTo(58 * e, 147 * e, 44 * e, 141 * e, 29 * e, 131 * e),
        r.bezierCurveTo(26.5 * e, 106.5 * e, 26.5 * e, 106.5 * e, 24 * e, 82 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(53 * e, 53 * e),
        r.bezierCurveTo(61 * e, 70 * e, 61 * e, 70 * e, 69 * e, 87 * e),
        r.bezierCurveTo(67 * e, 106 * e, 67 * e, 106 * e, 65 * e, 125 * e),
        r.bezierCurveTo(54 * e, 130 * e, 51 * e, 130 * e, 41 * e, 125 * e),
        r.bezierCurveTo(39 * e, 105 * e, 39 * e, 105 * e, 37 * e, 85 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(-20 * e, -20 * e),
        r.globalAlpha = 1,
        r.save(),
        r.translate(54 * e, 389.5 * e),
        r.rotate(0),
        Be(r, -15 * e, -228.5 * e, 30 * e, 457 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 579 * e),
        r.bezierCurveTo(47 * e, 587 * e, 61 * e, 584 * e, 71 * e, 579 * e),
        r.bezierCurveTo(75 * e, 597.5 * e, 75 * e, 597.5 * e, 79 * e, 616 * e),
        r.bezierCurveTo(66.5 * e, 628 * e, 66.5 * e, 628 * e, 54 * e, 640 * e),
        r.bezierCurveTo(41 * e, 628.5 * e, 41 * e, 628.5 * e, 28 * e, 617 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 141 * e),
        r.bezierCurveTo(40 * e, 136 * e, 40 * e, 136 * e, 50 * e, 131 * e),
        r.bezierCurveTo(63 * e, 136 * e, 63 * e, 136 * e, 76 * e, 141 * e),
        r.bezierCurveTo(72.5 * e, 161.5 * e, 72.5 * e, 161.5 * e, 69 * e, 182 * e),
        r.bezierCurveTo(61.5 * e, 186.5 * e, 61.5 * e, 186.5 * e, 54 * e, 191 * e),
        r.bezierCurveTo(45 * e, 186.5 * e, 45 * e, 186.5 * e, 36 * e, 182 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(42 * e, 152 * e),
        r.bezierCurveTo(53 * e, 152 * e, 53 * e, 152 * e, 64 * e, 152 * e),
        r.bezierCurveTo(62 * e, 171 * e, 62 * e, 176 * e, 55 * e, 177 * e),
        r.bezierCurveTo(42 * e, 176 * e, 45 * e, 174 * e, 42 * e, 152 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 28 * e),
        r.bezierCurveTo(67.5 * e, 55 * e, 67.5 * e, 55 * e, 83 * e, 82 * e),
        r.bezierCurveTo(80 * e, 106.5 * e, 80 * e, 106.5 * e, 77 * e, 131 * e),
        r.bezierCurveTo(58 * e, 147 * e, 44 * e, 141 * e, 29 * e, 131 * e),
        r.bezierCurveTo(26.5 * e, 106.5 * e, 26.5 * e, 106.5 * e, 24 * e, 82 * e),
        r.closePath(),
        Ce(r, i[6], i[7], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(53 * e, 53 * e),
        r.bezierCurveTo(61 * e, 70 * e, 61 * e, 70 * e, 69 * e, 87 * e),
        r.bezierCurveTo(67 * e, 106 * e, 67 * e, 106 * e, 65 * e, 125 * e),
        r.bezierCurveTo(54 * e, 130 * e, 51 * e, 130 * e, 41 * e, 125 * e),
        r.bezierCurveTo(39 * e, 105 * e, 39 * e, 105 * e, 37 * e, 85 * e),
        r.closePath(),
        Ce(r, i[8]),
        n
    }
    function dt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 43 * e,
        n.height = 209 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 10 * e),
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(21 * e, 102.5 * e),
        Be(r, -4 * e, -76.5 * e, 8 * e, 163 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.translate(0, 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(20 * e, 10 * e),
        r.bezierCurveTo(25 * e, 25.5 * e, 25 * e, 25.5 * e, 30 * e, 41 * e),
        r.bezierCurveTo(25.5 * e, 38.5 * e, 25.5 * e, 38.5 * e, 21 * e, 36 * e),
        r.bezierCurveTo(16 * e, 38.5 * e, 16 * e, 38.5 * e, 11 * e, 41 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(21 * e, +e),
        r.bezierCurveTo(28 * e, 18 * e, 28 * e, 18 * e, 35 * e, 35 * e),
        r.bezierCurveTo(28.5 * e, 32 * e, 28.5 * e, 32 * e, 22 * e, 29 * e),
        r.bezierCurveTo(14.5 * e, 32.5 * e, 14.5 * e, 32.5 * e, 7 * e, 36 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(14 * e, 146 * e),
        r.bezierCurveTo(21 * e, 146 * e, 21 * e, 146 * e, 28 * e, 146 * e),
        r.bezierCurveTo(27.5 * e, 147.5 * e, 27.5 * e, 147.5 * e, 27 * e, 149 * e),
        r.bezierCurveTo(27 * e, 160 * e, 27 * e, 160 * e, 27 * e, 171 * e),
        r.bezierCurveTo(27.5 * e, 171.5 * e, 27.5 * e, 171.5 * e, 28 * e, 172 * e),
        r.bezierCurveTo(21 * e, 172 * e, 21 * e, 172 * e, 14 * e, 172 * e),
        r.bezierCurveTo(14 * e, 171.5 * e, 14 * e, 171.5 * e, 14 * e, 171 * e),
        r.bezierCurveTo(14.5 * e, 171.5 * e, 14.5 * e, 171.5 * e, 15 * e, 172 * e),
        r.bezierCurveTo(15 * e, 160.5 * e, 15 * e, 160.5 * e, 15 * e, 149 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(21 * e, 6 * e),
        r.bezierCurveTo(26.5 * e, 18.5 * e, 26.5 * e, 18.5 * e, 32 * e, 31 * e),
        r.bezierCurveTo(27 * e, 29 * e, 27 * e, 29 * e, 22 * e, 27 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(0, -20 * e),
        r.globalAlpha = 1,
        r.translate(0, 10 * e),
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(21 * e, 102.5 * e),
        Be(r, -4 * e, -76.5 * e, 8 * e, 163 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 4 * e),
        r.translate(0, 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(20 * e, 10 * e),
        r.bezierCurveTo(25 * e, 25.5 * e, 25 * e, 25.5 * e, 30 * e, 41 * e),
        r.bezierCurveTo(25.5 * e, 38.5 * e, 25.5 * e, 38.5 * e, 21 * e, 36 * e),
        r.bezierCurveTo(16 * e, 38.5 * e, 16 * e, 38.5 * e, 11 * e, 41 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(21 * e, +e),
        r.bezierCurveTo(28 * e, 18 * e, 28 * e, 18 * e, 35 * e, 35 * e),
        r.bezierCurveTo(28.5 * e, 32 * e, 28.5 * e, 32 * e, 22 * e, 29 * e),
        r.bezierCurveTo(14.5 * e, 32.5 * e, 14.5 * e, 32.5 * e, 7 * e, 36 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 4 * e),
        r.translate(0, 0 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(14 * e, 146 * e),
        r.bezierCurveTo(21 * e, 146 * e, 21 * e, 146 * e, 28 * e, 146 * e),
        r.bezierCurveTo(27.5 * e, 147.5 * e, 27.5 * e, 147.5 * e, 27 * e, 149 * e),
        r.bezierCurveTo(27 * e, 160 * e, 27 * e, 160 * e, 27 * e, 171 * e),
        r.bezierCurveTo(27.5 * e, 171.5 * e, 27.5 * e, 171.5 * e, 28 * e, 172 * e),
        r.bezierCurveTo(21 * e, 172 * e, 21 * e, 172 * e, 14 * e, 172 * e),
        r.bezierCurveTo(14 * e, 171.5 * e, 14 * e, 171.5 * e, 14 * e, 171 * e),
        r.bezierCurveTo(14.5 * e, 171.5 * e, 14.5 * e, 171.5 * e, 15 * e, 172 * e),
        r.bezierCurveTo(15 * e, 160.5 * e, 15 * e, 160.5 * e, 15 * e, 149 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(21 * e, 6 * e),
        r.bezierCurveTo(26.5 * e, 18.5 * e, 26.5 * e, 18.5 * e, 32 * e, 31 * e),
        r.bezierCurveTo(27 * e, 29 * e, 27 * e, 29 * e, 22 * e, 27 * e),
        r.closePath(),
        Ce(r, i[8]),
        n
    }
    function _t(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 200 * e,
        n.height = 200 * e,
        r.save(),
        r.translate(112 * e, 158 * e),
        Be(r, -86.5 * e, -86 * e, 150 * e, 35 * e, 20 * e),
        r.restore(),
        Ce(r, i[0]),
        r.save(),
        r.translate(170 * e, 100 * e),
        Be(r, -86.5 * e, -86 * e, 35 * e, 150 * e, 20 * e),
        r.restore(),
        Ce(r, i[0]),
        n
    }
    function ut(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 165 * e,
        n.height = 123 * e,
        r.save(),
        r.translate(81 * e, 65 * e),
        Be(r, -78 * e, -54.5 * e, 156 * e, 109 * e, 20 * e),
        r.restore(),
        Ce(r, i[0]),
        r.save(),
        r.translate(81 * e, 58 * e),
        Be(r, -78 * e, -54.5 * e, 156 * e, 109 * e, 20 * e),
        r.restore(),
        Ce(r, i[1], i[2], 4),
        r.save(),
        r.translate(81 * e, 58 * e),
        Be(r, -69 * e, -47 * e, 138 * e, 93 * e, 15 * e),
        r.restore(),
        Ce(r, i[3], i[4], 4),
        r.save(),
        r.translate(79 * e, 54 * e),
        Be(r, -34 * e, -40 * e, 68 * e, 88 * e, 13 * e),
        r.restore(),
        Ce(r, void 0, i[5], 4),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(44 * e, 13 * e),
        r.bezierCurveTo(43.5 * e, 55 * e, 43.5 * e, 55 * e, 43 * e, 101 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 4),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(115 * e, 13 * e),
        r.bezierCurveTo(115 * e, 56 * e, 115 * e, 56 * e, 115 * e, 101 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 4),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 6 * e),
        r.bezierCurveTo(35 * e, 56 * e, 36 * e, 109 * e, 35 * e, 110 * e),
        r.closePath(),
        Ce(r, void 0, i[7], 4),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(123 * e, 6 * e),
        r.bezierCurveTo(123 * e, 56 * e, 123 * e, 56 * e, 123 * e, 110 * e),
        r.closePath(),
        Ce(r, void 0, i[7], 4),
        r.save(),
        r.translate(79 * e, 113 * e),
        Be(r, -18 * e, -2 * e, 36 * e, 4 * e, 20 * e),
        r.restore(),
        Ce(r, void 0, i[8], 4),
        r.save(),
        r.translate(75 * e, 118 * e),
        Be(r, -6 * e, -2.5 * e, 20 * e, 5 * e, 20 * e),
        r.restore(),
        Ce(r, i[8]),
        n
    }
    function lt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 92 * e,
        n.height = 108 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(31 * e, 10 * e),
        r.bezierCurveTo(37 * e, 2 * e, 49 * e, 0 * e, 61 * e, 15 * e),
        r.bezierCurveTo(81 * e, 31 * e, 78 * e, 25 * e, 79 * e, 37 * e),
        r.bezierCurveTo(76 * e, 44 * e, 81 * e, 56 * e, 85 * e, 63 * e),
        r.bezierCurveTo(91 * e, 71 * e, 90 * e, 78 * e, 83 * e, 84 * e),
        r.bezierCurveTo(60 * e, 98 * e, 67 * e, 95 * e, 57 * e, 102 * e),
        r.bezierCurveTo(47 * e, 106 * e, 43 * e, 106 * e, 31 * e, 98 * e),
        r.bezierCurveTo(22 * e, 91 * e, 17 * e, 89 * e, 7 * e, 84 * e),
        r.bezierCurveTo(+e, 77 * e, 4 * e, 73 * e, 7 * e, 60 * e),
        r.bezierCurveTo(11 * e, 50 * e, 5 * e, 32 * e, 15 * e, 27 * e),
        r.bezierCurveTo(26 * e, 18 * e, 26 * e, 24 * e, 31 * e, 10 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 4),
        n
    }
    function ct(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 151 * e,
        n.height = 80 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(133 * e, 54 * e),
        r.bezierCurveTo(136 * e, 18 * e, 129 * e, 18 * e, 114 * e, 13 * e),
        r.bezierCurveTo(51 * e, 0 * e, 36 * e, 16 * e, 34 * e, 16 * e),
        r.bezierCurveTo(8 * e, 28 * e, 22 * e, 56 * e, 21 * e, 57 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 4),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(130 * e, 40 * e),
        r.bezierCurveTo(132 * e, 35 * e, 132 * e, 30 * e, 132 * e, 29 * e),
        r.bezierCurveTo(145 * e, 38 * e, 144 * e, 43 * e, 137 * e, 54 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 4),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(20 * e, 33 * e),
        r.bezierCurveTo(24 * e, 44 * e, 215 * e, 39 * e, 23 * e, 44 * e),
        r.bezierCurveTo(19 * e, 49 * e, 19 * e, 49 * e, 15 * e, 54 * e),
        r.bezierCurveTo(4 * e, 43 * e, 10 * e, 35 * e, 20 * e, 32 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 4),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(18 * e, 52 * e),
        r.bezierCurveTo(24 * e, 31 * e, 34 * e, 25 * e, 75 * e, 23 * e),
        r.bezierCurveTo(130 * e, 24 * e, 129 * e, 32 * e, 134 * e, 51 * e),
        r.bezierCurveTo(138 * e, 70 * e, 126 * e, 72 * e, 90 * e, 73 * e),
        r.bezierCurveTo(18 * e, 72 * e, 15 * e, 68 * e, 18 * e, 54 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 4),
        n
    }
    function ht(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 138 * e,
        n.height = 133 * e,
        r.globalAlpha = t ? .3 : 1,
        r.translate(0, 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(26 * e, 79.640625 * e),
        r.bezierCurveTo(13 * e, 84.640625 * e, 9 * e, 86.640625 * e, 7 * e, 78.640625 * e),
        r.bezierCurveTo(6 * e, 69.640625 * e, 15 * e, 67.640625 * e, 31 * e, 62.640625 * e),
        r.bezierCurveTo(63 * e, 55.640625 * e, 85 * e, 57.640625 * e, 104 * e, 63.640625 * e),
        r.bezierCurveTo(131 * e, 69.640625 * e, 132 * e, 71.640625 * e, 131 * e, 78.640625 * e),
        r.bezierCurveTo(131 * e, 91.640625 * e, 112 * e, 80.640625 * e, 91 * e, 75.640625 * e),
        r.bezierCurveTo(51 * e, 70.640625 * e, 45 * e, 74.640625 * e, 28 * e, 78.640625 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(8 * e, 82.640625 * e),
        r.bezierCurveTo(40 * e, 107.640625 * e, 53 * e, 104.640625 * e, 67 * e, 106.640625 * e),
        r.bezierCurveTo(101 * e, 103.640625 * e, 117 * e, 93.640625 * e, 127 * e, 84.640625 * e),
        r.bezierCurveTo(135 * e, 95.640625 * e, 131 * e, 107.640625 * e, 110 * e, 118.640625 * e),
        r.bezierCurveTo(78 * e, 129.640625 * e, 67 * e, 130.640625 * e, 27 * e, 119.640625 * e),
        r.bezierCurveTo(0 * e, 105.640625 * e, 8 * e, 83.640625 * e, 10 * e, 84.640625 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(8 * e, 73.640625 * e),
        r.bezierCurveTo(7 * e, 23.640625 * e, 33 * e, 19.640625 * e, 71 * e, 17.640625 * e),
        r.bezierCurveTo(129 * e, 19.640625 * e, 130 * e, 45.640625 * e, 130 * e, 76.640625 * e),
        r.bezierCurveTo(90 * e, 63.640625 * e, 85 * e, 63.640625 * e, 73 * e, 63.640625 * e),
        r.bezierCurveTo(38 * e, 63.640625 * e, 33 * e, 66.640625 * e, 8 * e, 73.640625 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(72 * e, 28.640625 * e),
        r.bezierCurveTo(51 * e, 25.640625 * e, 56 * e, 7.640625 * e, 70 * e, 5.640625 * e),
        r.bezierCurveTo(94 * e, 7.640625 * e, 87 * e, 29.640625 * e, 72 * e, 28.640625 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(51 * e, 26.640625 * e),
        r.bezierCurveTo(42 * e, 29.640625 * e, 43 * e, 31.640625 * e, 42 * e, 37.640625 * e),
        Ce(r, void 0, i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(90 * e, 26.640625 * e),
        r.bezierCurveTo(100 * e, 28.640625 * e, 98 * e, 34.640625 * e, 99 * e, 38.640625 * e),
        Ce(r, void 0, i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(26 * e, 79.640625 * e),
        r.bezierCurveTo(13 * e, 84.640625 * e, 9 * e, 86.640625 * e, 7 * e, 78.640625 * e),
        r.bezierCurveTo(6 * e, 69.640625 * e, 15 * e, 67.640625 * e, 31 * e, 62.640625 * e),
        r.bezierCurveTo(63 * e, 55.640625 * e, 85 * e, 57.640625 * e, 104 * e, 63.640625 * e),
        r.bezierCurveTo(131 * e, 69.640625 * e, 132 * e, 71.640625 * e, 131 * e, 78.640625 * e),
        r.bezierCurveTo(131 * e, 91.640625 * e, 112 * e, 80.640625 * e, 91 * e, 75.640625 * e),
        r.bezierCurveTo(51 * e, 70.640625 * e, 45 * e, 74.640625 * e, 28 * e, 78.640625 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(8 * e, 82.640625 * e),
        r.bezierCurveTo(40 * e, 107.640625 * e, 53 * e, 104.640625 * e, 67 * e, 106.640625 * e),
        r.bezierCurveTo(101 * e, 103.640625 * e, 117 * e, 93.640625 * e, 127 * e, 84.640625 * e),
        r.bezierCurveTo(135 * e, 95.640625 * e, 131 * e, 107.640625 * e, 110 * e, 118.640625 * e),
        r.bezierCurveTo(78 * e, 129.640625 * e, 67 * e, 130.640625 * e, 27 * e, 119.640625 * e),
        r.bezierCurveTo(0 * e, 105.640625 * e, 8 * e, 83.640625 * e, 10 * e, 84.640625 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        n
    }
    function Et(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d")
          , o = 170 * e
          , a = 172 * e
          , s = o / 2
          , d = a / 2;
        n.width = o,
        n.height = a,
        r.translate(s, d + 7 * e),
        r.globalAlpha = t ? .5 : 0,
        we(r, 0, 0, 60 * e),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -7 * e),
        r.save();
        for (var _ = 0; _ < 10; _++)
            r.rotate(Math.PI / 5),
            r.save(),
            r.translate(65 * e, 0),
            A(r, 3, 20 * e, 4 * e),
            Ce(r, i[1], i[2], 4 * e),
            r.restore();
        return r.restore(),
        we(r, 0, 0, 60 * e),
        Ce(r, i[3], i[4], 4 * e),
        we(r, 0, 0, 40 * e),
        Ce(r, i[5]),
        we(r, 0, 0, 25 * e),
        Ce(r, i[6], i[7], 8 * e),
        n
    }
    function Tt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        n.width = 170 * e,
        n.height = 170 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 5 * e),
        r.save(),
        r.translate(85 * e, 88 * e),
        r.rotate(1.4),
        A(r, 7, 60 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(85 * e, 80 * e);
        for (var o = 0; o < 10; o++)
            r.rotate(Math.PI / 5),
            r.save(),
            r.translate(65 * e, 0),
            A(r, 3, 21 * e, 4 * e),
            Ce(r, i[1], i[2], 4 * e),
            r.restore();
        return r.save(),
        r.translate(0 * e, 0 * e),
        r.rotate(1.4),
        A(r, 7, 60 * e, 10 * e),
        Ce(r, i[3], i[4], 4 * e),
        r.rotate(.64),
        A(r, 7, 40 * e, 10 * e),
        Ce(r, i[5], i[6], 4 * e),
        r.rotate(.12),
        A(r, 7, 23 * e, 5 * e),
        r.restore(),
        Ce(r, i[7]),
        n
    }
    function At(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        n.width = 170 * e,
        n.height = 170 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 3 * e),
        r.save(),
        r.translate(85 * e, 95 * e),
        r.rotate(1.4),
        A(r, 7, 60 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(85 * e, 82 * e);
        for (var o = 0; o < 10; o++)
            r.rotate(Math.PI / 5),
            r.save(),
            r.translate(65 * e, 0),
            A(r, 3, 21 * e, 4 * e),
            Ce(r, i[1], i[2], 4 * e),
            r.restore();
        return r.save(),
        r.translate(0 * e, 0 * e),
        r.rotate(1),
        A(r, 8, 60 * e, 10 * e),
        Ce(r, i[3], i[4], 4 * e),
        r.rotate(.56),
        A(r, 8, 40 * e, 10 * e),
        Ce(r, i[5], i[6], 4 * e),
        r.rotate(.28),
        A(r, 8, 28 * e, 8 * e),
        Ce(r, i[7]),
        r.restore(),
        n
    }
    function It(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        n.width = 170 * e,
        n.height = 170 * e,
        r.translate(0, 3 * e),
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(85 * e, 95 * e),
        r.rotate(1.4),
        A(r, 7, 60 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(85 * e, 82 * e);
        for (var o = 0; o < 10; o++)
            r.rotate(Math.PI / 5),
            r.save(),
            r.translate(65 * e, 0),
            A(r, 3, 21 * e, 4 * e),
            Ce(r, i[1], i[2], 4 * e),
            r.restore();
        return r.save(),
        r.translate(0 * e, 0 * e),
        r.rotate(.2),
        A(r, 9, 60 * e, 10 * e),
        Ce(r, i[3], i[4], 4 * e),
        r.rotate(-.32),
        A(r, 9, 38 * e, 10 * e),
        Ce(r, i[5], i[6], 4 * e),
        r.rotate(.68),
        A(r, 9, 20 * e, 8 * e),
        Ce(r, i[7], i[8], 6 * e),
        r.restore(),
        n
    }
    function pt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 69 * e,
        n.height = 120 * e,
        r.globalAlpha = t ? .5 : 1,
        r.save(),
        r.translate(30 * e, 84 * e),
        Be(r, -6 * e, -66.5 * e, 8 * e, 100 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.save(),
        r.translate(30 * e, 45 * e),
        Be(r, -9.5 * e, -6.5 * e, 16 * e, 13 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.save(),
        r.translate(30 * e, 17 * e),
        Be(r, -7.5 * e, -5.5 * e, 12 * e, 11 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.save(),
        r.translate(30 * e, 31 * e),
        Be(r, -26 * e, -14.5 * e, 52 * e, 29 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.save(),
        r.translate(36 * e, 79.140625 * e),
        Be(r, -6 * e, -66.5 * e, 8 * e, 100 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 3 * e),
        r.save(),
        r.translate(35 * e, 40.140625 * e),
        Be(r, -9.5 * e, -6.5 * e, 16 * e, 13 * e, 10 * e),
        r.restore(),
        Ce(r, i[3], i[4], 3 * e),
        r.save(),
        r.translate(35 * e, 12.140625 * e),
        Be(r, -7.5 * e, -5.5 * e, 12 * e, 11 * e, 10 * e),
        r.restore(),
        Ce(r, i[3], i[4], 3 * e),
        r.save(),
        r.translate(34.5 * e, 26.140625 * e),
        Be(r, -26 * e, -14.5 * e, 52 * e, 29 * e, 5 * e),
        r.restore(),
        Ce(r, i[3], i[4], 3 * e),
        n
    }
    function gt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return 0 == i ? (n.width = 566 * e,
        n.height = 429 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(312.625 * e, 39.046875 * e),
        r.bezierCurveTo(456.625 * e, 60.046875 * e, 521.625 * e, 134.046875 * e, 528.625 * e, 199.046875 * e),
        r.bezierCurveTo(540.625 * e, 298.046875 * e, 491.625 * e, 364.046875 * e, 405.625 * e, 394.046875 * e),
        r.bezierCurveTo(270.625 * e, 429.046875 * e, 182.625 * e, 395.046875 * e, 100.625 * e, 344.046875 * e),
        r.bezierCurveTo(15.625 * e, 283.046875 * e, 20.625 * e, 195.046875 * e, 33.625 * e, 158.046875 * e),
        r.bezierCurveTo(56.625 * e, 80.046875 * e, 102.625 * e, 46.046875 * e, 183.625 * e, 33.046875 * e),
        r.bezierCurveTo(225.625 * e, 25.046875 * e, 270.625 * e, 30.046875 * e, 312.625 * e, 39.046875 * e),
        r.closePath(),
        Ce(r, t[0])) : 1 == i ? (r = (n = document.createElement("canvas")).getContext("2d"),
        n.width = 511 * e,
        n.height = 408 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(141.625 * e, 49.296875 * e),
        r.bezierCurveTo(225.625 * e, 10.296875 * e, 320.625 * e, 16.296875 * e, 390.625 * e, 39.296875 * e),
        r.bezierCurveTo(476.625 * e, 71.296875 * e, 483.625 * e, 142.296875 * e, 486.625 * e, 197.296875 * e),
        r.bezierCurveTo(491.625 * e, 289.296875 * e, 462.625 * e, 317.296875 * e, 417.625 * e, 351.296875 * e),
        r.bezierCurveTo(367.625 * e, 385.296875 * e, 313.625 * e, 404.296875 * e, 218.625 * e, 395.296875 * e),
        r.bezierCurveTo(108.625 * e, 381.296875 * e, 81.625 * e, 350.296875 * e, 52.625 * e, 305.296875 * e),
        r.bezierCurveTo(16.625 * e, 244.296875 * e, 23.625 * e, 171.296875 * e, 37.625 * e, 145.296875 * e),
        r.bezierCurveTo(65.625 * e, 84.296875 * e, 97.625 * e, 74.296875 * e, 141.625 * e, 49.296875 * e),
        r.closePath(),
        Ce(r, t[0])) : 2 == i && (r = (n = document.createElement("canvas")).getContext("2d"),
        n.width = 504 * e,
        n.height = 408 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(153.625 * e, 46.296875 * e),
        r.bezierCurveTo(271.625 * e, 17.296875 * e, 345.625 * e, 35.296875 * e, 410.625 * e, 71.296875 * e),
        r.bezierCurveTo(473.625 * e, 109.296875 * e, 478.625 * e, 167.296875 * e, 473.625 * e, 205.296875 * e),
        r.bezierCurveTo(462.625 * e, 295.296875 * e, 438.625 * e, 316.296875 * e, 388.625 * e, 345.296875 * e),
        r.bezierCurveTo(331.625 * e, 374.296875 * e, 273.625 * e, 392.296875 * e, 180.625 * e, 387.296875 * e),
        r.bezierCurveTo(111.625 * e, 380.296875 * e, 86.625 * e, 360.296875 * e, 51.625 * e, 309.296875 * e),
        r.bezierCurveTo(23.625 * e, 267.296875 * e, 25.625 * e, 226.296875 * e, 27.625 * e, 175.296875 * e),
        r.bezierCurveTo(37.625 * e, 99.296875 * e, 88.625 * e, 57.296875 * e, 153.625 * e, 46.296875 * e),
        r.closePath(),
        Ce(r, t[0])),
        n
    }
    function Ot(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 450 * e,
        n.height = 260 * e,
        r.translate(10 * e, 10 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(20 * e, 20 * e),
        Be(r, 0, 0, 400 * e, 220 * e, 30 * e),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-20 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(9 * e, 5 * e),
        r.bezierCurveTo(381 * e, 2 * e, 197 * e, 4.5 * e, 385 * e, 4 * e),
        r.bezierCurveTo(397 * e, 4 * e, 401 * e, 4 * e, 399 * e, 23 * e),
        r.bezierCurveTo(367 * e, 27 * e, 367 * e, 27 * e, 335 * e, 31 * e),
        r.bezierCurveTo(366.5 * e, 33.5 * e, 366.5 * e, 33.5 * e, 398 * e, 36 * e),
        r.bezierCurveTo(398 * e, 41.5 * e, 398 * e, 41.5 * e, 398 * e, 47 * e),
        r.bezierCurveTo(398 * e, 56 * e, 399 * e, 56 * e, 386 * e, 56 * e),
        r.bezierCurveTo(200.5 * e, 56.5 * e, 200.5 * e, 56.5 * e, 15 * e, 57 * e),
        r.bezierCurveTo(2 * e, 55 * e, 4 * e, 52 * e, 4 * e, 43 * e),
        r.bezierCurveTo(4 * e, 30.5 * e, 4 * e, 30.5 * e, 4 * e, 18 * e),
        r.bezierCurveTo(16 * e, 18.5 * e, 16 * e, 18.5 * e, 28 * e, 19 * e),
        r.bezierCurveTo(18.5 * e, 12 * e, 18.5 * e, 12 * e, 9 * e, 5 * e),
        r.closePath(),
        Ce(r, i[2], i[1], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(5 * e, 70 * e),
        r.bezierCurveTo(5 * e, 58 * e, 5 * e, 55 * e, 17 * e, 57 * e),
        r.bezierCurveTo(203 * e, 57 * e, 203 * e, 57 * e, 389 * e, 57 * e),
        r.bezierCurveTo(400 * e, 57 * e, 400 * e, 59 * e, 400 * e, 69 * e),
        r.bezierCurveTo(400.5 * e, 83.5 * e, 400.5 * e, 83.5 * e, 401 * e, 98 * e),
        r.bezierCurveTo(402 * e, 108 * e, 401 * e, 108 * e, 388 * e, 108 * e),
        r.bezierCurveTo(201.5 * e, 108 * e, 201.5 * e, 108 * e, 15 * e, 108 * e),
        r.bezierCurveTo(+e, 106 * e, 5 * e, 106 * e, 5 * e, 87 * e),
        r.bezierCurveTo(33 * e, 84.5 * e, 33 * e, 84.5 * e, 61 * e, 82 * e),
        r.bezierCurveTo(33.5 * e, 76.5 * e, 33.5 * e, 76.5 * e, 6 * e, 71 * e),
        r.closePath(),
        Ce(r, i[3], i[1], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(19 * e, 158 * e),
        r.bezierCurveTo(2 * e, 159 * e, 4 * e, 156 * e, 5 * e, 118 * e),
        r.bezierCurveTo(4 * e, 110 * e, 6 * e, 107 * e, 26 * e, 109 * e),
        r.bezierCurveTo(206.5 * e, 109 * e, 206.5 * e, 109 * e, 387 * e, 109 * e),
        r.bezierCurveTo(400 * e, 108 * e, 400 * e, 108 * e, 398 * e, 127 * e),
        r.bezierCurveTo(384.5 * e, 130 * e, 384.5 * e, 130 * e, 371 * e, 133 * e),
        r.bezierCurveTo(385.5 * e, 138 * e, 385.5 * e, 138 * e, 400 * e, 143 * e),
        r.bezierCurveTo(402 * e, 156 * e, 402 * e, 162 * e, 385 * e, 160 * e),
        r.closePath(),
        Ce(r, i[2], i[1], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(4 * e, 183 * e),
        r.bezierCurveTo(+e, 163 * e, 4 * e, 158 * e, 28 * e, 161 * e),
        r.bezierCurveTo(207.5 * e, 161 * e, 207.5 * e, 161 * e, 387 * e, 161 * e),
        r.bezierCurveTo(401 * e, 159 * e, 400 * e, 164 * e, 400 * e, 177 * e),
        r.bezierCurveTo(364.5 * e, 184 * e, 364.5 * e, 184 * e, 329 * e, 191 * e),
        r.bezierCurveTo(364.5 * e, 192.5 * e, 364.5 * e, 192.5 * e, 400 * e, 194 * e),
        r.bezierCurveTo(403 * e, 209 * e, 401 * e, 214 * e, 385 * e, 213 * e),
        r.bezierCurveTo(201.5 * e, 213 * e, 201.5 * e, 213 * e, 18 * e, 213 * e),
        r.bezierCurveTo(3 * e, 213 * e, 2 * e, 213 * e, 4 * e, 198 * e),
        r.bezierCurveTo(12.5 * e, 193 * e, 12.5 * e, 193 * e, 21 * e, 188 * e),
        r.closePath(),
        Ce(r, i[3], i[1], 12 * e),
        we(r, 41 * e, 30 * e, 14.7648230602334 * e),
        Ce(r, i[3], i[1], 12 * e),
        we(r, 369 * e, 30 * e, 15.556349186104045 * e),
        Ce(r, i[3], i[1], 12 * e),
        we(r, 364 * e, 190 * e, 15.620499351813308 * e),
        Ce(r, i[3], i[1], 12 * e),
        we(r, 41 * e, 186 * e, 15.556349186104045 * e),
        Ce(r, i[3], i[1], 12 * e),
        n
    }
    function bt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 450 * e,
        n.height = 260 * e,
        r.translate(10 * e, 10 * e),
        1 != i && 2 != i || (r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(9 * e, 5 * e),
        r.bezierCurveTo(381 * e, 2 * e, 197 * e, 4.5 * e, 385 * e, 4 * e),
        r.bezierCurveTo(397 * e, 4 * e, 401 * e, 4 * e, 399 * e, 23 * e),
        r.bezierCurveTo(367 * e, 27 * e, 367 * e, 27 * e, 335 * e, 31 * e),
        r.bezierCurveTo(366.5 * e, 33.5 * e, 366.5 * e, 33.5 * e, 398 * e, 36 * e),
        r.bezierCurveTo(398 * e, 41.5 * e, 398 * e, 41.5 * e, 398 * e, 47 * e),
        r.bezierCurveTo(398 * e, 56 * e, 399 * e, 56 * e, 386 * e, 56 * e),
        r.bezierCurveTo(200.5 * e, 56.5 * e, 200.5 * e, 56.5 * e, 15 * e, 57 * e),
        r.bezierCurveTo(2 * e, 55 * e, 4 * e, 52 * e, 4 * e, 43 * e),
        r.bezierCurveTo(4 * e, 30.5 * e, 4 * e, 30.5 * e, 4 * e, 18 * e),
        r.bezierCurveTo(16 * e, 18.5 * e, 16 * e, 18.5 * e, 28 * e, 19 * e),
        r.bezierCurveTo(18.5 * e, 12 * e, 18.5 * e, 12 * e, 9 * e, 5 * e),
        r.closePath(),
        Ce(r, t[3], t[3], 32 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(5 * e, 70 * e),
        r.bezierCurveTo(5 * e, 58 * e, 5 * e, 55 * e, 17 * e, 57 * e),
        r.bezierCurveTo(203 * e, 57 * e, 203 * e, 57 * e, 389 * e, 57 * e),
        r.bezierCurveTo(400 * e, 57 * e, 400 * e, 59 * e, 400 * e, 69 * e),
        r.bezierCurveTo(400.5 * e, 83.5 * e, 400.5 * e, 83.5 * e, 401 * e, 98 * e),
        r.bezierCurveTo(402 * e, 108 * e, 401 * e, 108 * e, 388 * e, 108 * e),
        r.bezierCurveTo(201.5 * e, 108 * e, 201.5 * e, 108 * e, 15 * e, 108 * e),
        r.bezierCurveTo(+e, 106 * e, 5 * e, 106 * e, 5 * e, 87 * e),
        r.bezierCurveTo(33 * e, 84.5 * e, 33 * e, 84.5 * e, 61 * e, 82 * e),
        r.bezierCurveTo(33.5 * e, 76.5 * e, 33.5 * e, 76.5 * e, 6 * e, 71 * e),
        r.closePath(),
        Ce(r, t[3], t[3], 32 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(19 * e, 158 * e),
        r.bezierCurveTo(2 * e, 159 * e, 4 * e, 156 * e, 5 * e, 118 * e),
        r.bezierCurveTo(4 * e, 110 * e, 6 * e, 107 * e, 26 * e, 109 * e),
        r.bezierCurveTo(206.5 * e, 109 * e, 206.5 * e, 109 * e, 387 * e, 109 * e),
        r.bezierCurveTo(400 * e, 108 * e, 400 * e, 108 * e, 398 * e, 127 * e),
        r.bezierCurveTo(384.5 * e, 130 * e, 384.5 * e, 130 * e, 371 * e, 133 * e),
        r.bezierCurveTo(385.5 * e, 138 * e, 385.5 * e, 138 * e, 400 * e, 143 * e),
        r.bezierCurveTo(402 * e, 156 * e, 402 * e, 162 * e, 385 * e, 160 * e),
        r.closePath(),
        Ce(r, t[3], t[3], 32 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(4 * e, 183 * e),
        r.bezierCurveTo(+e, 163 * e, 4 * e, 158 * e, 28 * e, 161 * e),
        r.bezierCurveTo(207.5 * e, 161 * e, 207.5 * e, 161 * e, 387 * e, 161 * e),
        r.bezierCurveTo(401 * e, 159 * e, 400 * e, 164 * e, 400 * e, 177 * e),
        r.bezierCurveTo(364.5 * e, 184 * e, 364.5 * e, 184 * e, 329 * e, 191 * e),
        r.bezierCurveTo(364.5 * e, 192.5 * e, 364.5 * e, 192.5 * e, 400 * e, 194 * e),
        r.bezierCurveTo(403 * e, 209 * e, 401 * e, 214 * e, 385 * e, 213 * e),
        r.bezierCurveTo(201.5 * e, 213 * e, 201.5 * e, 213 * e, 18 * e, 213 * e),
        r.bezierCurveTo(3 * e, 213 * e, 2 * e, 213 * e, 4 * e, 198 * e),
        r.bezierCurveTo(12.5 * e, 193 * e, 12.5 * e, 193 * e, 21 * e, 188 * e),
        r.closePath(),
        Ce(r, t[3], t[3], 32 * e),
        we(r, 41 * e, 30 * e, 14.7648230602334 * e),
        Ce(r, t[3], t[3], 32 * e),
        we(r, 369 * e, 30 * e, 15.556349186104045 * e),
        Ce(r, t[3], t[3], 32 * e),
        we(r, 364 * e, 190 * e, 15.620499351813308 * e),
        Ce(r, t[3], t[3], 32 * e),
        we(r, 41 * e, 186 * e, 15.556349186104045 * e),
        Ce(r, t[3], t[3], 32 * e)),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(9 * e, 5 * e),
        r.bezierCurveTo(381 * e, 2 * e, 197 * e, 4.5 * e, 385 * e, 4 * e),
        r.bezierCurveTo(397 * e, 4 * e, 401 * e, 4 * e, 399 * e, 23 * e),
        r.bezierCurveTo(367 * e, 27 * e, 367 * e, 27 * e, 335 * e, 31 * e),
        r.bezierCurveTo(366.5 * e, 33.5 * e, 366.5 * e, 33.5 * e, 398 * e, 36 * e),
        r.bezierCurveTo(398 * e, 41.5 * e, 398 * e, 41.5 * e, 398 * e, 47 * e),
        r.bezierCurveTo(398 * e, 56 * e, 399 * e, 56 * e, 386 * e, 56 * e),
        r.bezierCurveTo(200.5 * e, 56.5 * e, 200.5 * e, 56.5 * e, 15 * e, 57 * e),
        r.bezierCurveTo(2 * e, 55 * e, 4 * e, 52 * e, 4 * e, 43 * e),
        r.bezierCurveTo(4 * e, 30.5 * e, 4 * e, 30.5 * e, 4 * e, 18 * e),
        r.bezierCurveTo(16 * e, 18.5 * e, 16 * e, 18.5 * e, 28 * e, 19 * e),
        r.bezierCurveTo(18.5 * e, 12 * e, 18.5 * e, 12 * e, 9 * e, 5 * e),
        r.closePath(),
        Ce(r, t[1], t[0], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(5 * e, 70 * e),
        r.bezierCurveTo(5 * e, 58 * e, 5 * e, 55 * e, 17 * e, 57 * e),
        r.bezierCurveTo(203 * e, 57 * e, 203 * e, 57 * e, 389 * e, 57 * e),
        r.bezierCurveTo(400 * e, 57 * e, 400 * e, 59 * e, 400 * e, 69 * e),
        r.bezierCurveTo(400.5 * e, 83.5 * e, 400.5 * e, 83.5 * e, 401 * e, 98 * e),
        r.bezierCurveTo(402 * e, 108 * e, 401 * e, 108 * e, 388 * e, 108 * e),
        r.bezierCurveTo(201.5 * e, 108 * e, 201.5 * e, 108 * e, 15 * e, 108 * e),
        r.bezierCurveTo(+e, 106 * e, 5 * e, 106 * e, 5 * e, 87 * e),
        r.bezierCurveTo(33 * e, 84.5 * e, 33 * e, 84.5 * e, 61 * e, 82 * e),
        r.bezierCurveTo(33.5 * e, 76.5 * e, 33.5 * e, 76.5 * e, 6 * e, 71 * e),
        r.closePath(),
        Ce(r, t[2], t[0], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(19 * e, 158 * e),
        r.bezierCurveTo(2 * e, 159 * e, 4 * e, 156 * e, 5 * e, 118 * e),
        r.bezierCurveTo(4 * e, 110 * e, 6 * e, 107 * e, 26 * e, 109 * e),
        r.bezierCurveTo(206.5 * e, 109 * e, 206.5 * e, 109 * e, 387 * e, 109 * e),
        r.bezierCurveTo(400 * e, 108 * e, 400 * e, 108 * e, 398 * e, 127 * e),
        r.bezierCurveTo(384.5 * e, 130 * e, 384.5 * e, 130 * e, 371 * e, 133 * e),
        r.bezierCurveTo(385.5 * e, 138 * e, 385.5 * e, 138 * e, 400 * e, 143 * e),
        r.bezierCurveTo(402 * e, 156 * e, 402 * e, 162 * e, 385 * e, 160 * e),
        r.closePath(),
        Ce(r, t[1], t[0], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(4 * e, 183 * e),
        r.bezierCurveTo(+e, 163 * e, 4 * e, 158 * e, 28 * e, 161 * e),
        r.bezierCurveTo(207.5 * e, 161 * e, 207.5 * e, 161 * e, 387 * e, 161 * e),
        r.bezierCurveTo(401 * e, 159 * e, 400 * e, 164 * e, 400 * e, 177 * e),
        r.bezierCurveTo(364.5 * e, 184 * e, 364.5 * e, 184 * e, 329 * e, 191 * e),
        r.bezierCurveTo(364.5 * e, 192.5 * e, 364.5 * e, 192.5 * e, 400 * e, 194 * e),
        r.bezierCurveTo(403 * e, 209 * e, 401 * e, 214 * e, 385 * e, 213 * e),
        r.bezierCurveTo(201.5 * e, 213 * e, 201.5 * e, 213 * e, 18 * e, 213 * e),
        r.bezierCurveTo(3 * e, 213 * e, 2 * e, 213 * e, 4 * e, 198 * e),
        r.bezierCurveTo(12.5 * e, 193 * e, 12.5 * e, 193 * e, 21 * e, 188 * e),
        r.closePath(),
        Ce(r, t[2], t[0], 12 * e),
        we(r, 41 * e, 30 * e, 14.7648230602334 * e),
        Ce(r, t[2], t[0], 12 * e),
        we(r, 369 * e, 30 * e, 15.556349186104045 * e),
        Ce(r, t[2], t[0], 12 * e),
        we(r, 364 * e, 190 * e, 15.620499351813308 * e),
        Ce(r, t[2], t[0], 12 * e),
        we(r, 41 * e, 186 * e, 15.556349186104045 * e),
        Ce(r, t[2], t[0], 12 * e),
        n
    }
    function mt(e, t, i, n) {
        var r = document.createElement("canvas")
          , o = r.getContext("2d")
          , a = (r.width = 450 * e,
        r.height = 260 * e,
        Ot(+e, !0, i));
        return o.drawImage(a, 0 * e, 0 * e),
        1 == n ? (o.translate(100 * e, 0 * e),
        we(o, 113 * e, 120 * e, 66 * e),
        Ce(o, void 0, i[4], 13 * e),
        a = s1(.65 * e, !0, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]),
        o.rotate(.7),
        o.drawImage(a, 133 * e, -64 * e),
        o.rotate(-.7),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(70 * e, 70 * e),
        o.bezierCurveTo(113 * e, 120.5 * e, 113 * e, 120.5 * e, 156 * e, 171 * e),
        o.closePath(),
        Ce(o, void 0, i[4], 13 * e)) : 2 == n ? (o.translate(100 * e, 0 * e),
        we(o, 113 * e, 120 * e, 66 * e),
        Ce(o, void 0, i[4], 13 * e),
        o.translate(30 * e, 40 * e),
        o.save(),
        o.translate(83.5 * e, 66.5 * e),
        Be(o, -40.5 * e, -29.5 * e, 81 * e, 59 * e, 15 * e),
        o.restore(),
        Ce(o, "#dff2f7", "#187484", 7 * e),
        we(o, 22 * e, 82 * e, 12 * e),
        Ce(o, "#dff2f7", "#187484", 7 * e),
        we(o, 145 * e, 82 * e, 12 * e),
        Ce(o, "#dff2f7", "#187484", 7 * e),
        a = D1(.5 * e, !0, ["#80500b", "#7c4908"]),
        o.drawImage(a, 10 * e, 85 * e),
        a = D1(.5 * e, !0, ["#80500b", "#7c4908"]),
        o.drawImage(a, 50 * e, 85 * e),
        a = D1(.5 * e, !0, ["#80500b", "#7c4908"]),
        o.drawImage(a, 90 * e, 85 * e),
        a = f1(+e, 0, ["#3d2a6e", "#8255b5"]),
        o.drawImage(a, 90 * e, 105 * e),
        a = f1(+e, 0, ["#3d2a6e", "#8255b5"]),
        o.drawImage(a, 90 * e, 105 * e),
        a = f1(+e, 0, ["#3d2a6e", "#8255b5"]),
        o.drawImage(a, 30 * e, 125 * e),
        a = f1(+e, 0, ["#3d2a6e", "#8255b5"]),
        o.drawImage(a, 50 * e, 115 * e),
        a = f1(+e, 0, ["#3d2a6e", "#8255b5"]),
        o.drawImage(a, 30 * e, 100 * e),
        a = f1(+e, 0, ["#3d2a6e", "#8255b5"]),
        o.drawImage(a, 80 * e, 120 * e),
        a = f1(+e, 0, ["#3d2a6e", "#8255b5"]),
        o.drawImage(a, 110 * e, 125 * e),
        a = f1(+e, 0, ["#3d2a6e", "#8255b5"]),
        o.drawImage(a, 120 * e, 105 * e)) : 3 == n ? (o.translate(100 * e, 0 * e),
        we(o, 113 * e, 120 * e, 66 * e),
        Ce(o, void 0, i[4], 13 * e),
        o.translate(40 * e, 50 * e),
        o.save(),
        o.translate(71 * e, 69 * e),
        Be(o, -30 * e, -42 * e, 60 * e, 84 * e, 10 * e),
        o.restore(),
        Ce(o, void 0, i[5], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(42 * e, 28 * e),
        o.bezierCurveTo(60 * e, 31 * e, 60 * e, 31 * e, 78 * e, 34 * e),
        o.bezierCurveTo(82 * e, 34 * e, 84 * e, 37 * e, 83 * e, 45 * e),
        o.bezierCurveTo(83 * e, 80 * e, 83 * e, 80 * e, 83 * e, 115 * e),
        o.bezierCurveTo(83 * e, 120 * e, 80 * e, 122 * e, 73 * e, 120 * e),
        o.bezierCurveTo(42 * e, 111 * e, 43 * e, 109 * e, 41 * e, 102 * e),
        o.bezierCurveTo(41 * e, 71 * e, 41 * e, 71 * e, 41 * e, 40 * e),
        o.closePath(),
        Ce(o, i[5], i[5], 4 * e),
        o.translate(-40 * e, -50 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(70 * e, 70 * e),
        o.bezierCurveTo(113 * e, 120.5 * e, 113 * e, 120.5 * e, 156 * e, 171 * e),
        o.closePath(),
        Ce(o, void 0, i[4], 13 * e)) : 4 == n && (o.scale(1, 1),
        o.translate(70 * e, 50 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(23 * e, 6 * e),
        o.bezierCurveTo(25.5 * e, 56 * e, 25.5 * e, 56 * e, 28 * e, 106 * e),
        Ce(o, void 0, i[5], 14 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(59 * e, 10 * e),
        o.bezierCurveTo(61 * e, 51.5 * e, 61 * e, 51.5 * e, 63 * e, 93 * e),
        Ce(o, void 0, i[5], 14 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(7 * e, 55 * e),
        o.bezierCurveTo(33.5 * e, 55 * e, 33.5 * e, 55 * e, 60 * e, 55 * e),
        Ce(o, void 0, i[5], 14 * e),
        o.translate(10 * e, 0 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(123 * e, 16 * e),
        o.bezierCurveTo(103 * e, 16.5 * e, 103 * e, 16.5 * e, 83 * e, 17 * e),
        o.bezierCurveTo(83.5 * e, 61 * e, 83.5 * e, 61 * e, 84 * e, 105 * e),
        o.bezierCurveTo(106 * e, 105 * e, 106 * e, 105 * e, 128 * e, 105 * e),
        Ce(o, void 0, i[5], 14 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(72 * e, 63 * e),
        o.bezierCurveTo(88.5 * e, 62.5 * e, 88.5 * e, 62.5 * e, 105 * e, 62 * e),
        Ce(o, void 0, i[5], 14 * e),
        o.translate(10 * e, 10 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(141 * e, 8 * e),
        o.bezierCurveTo(143 * e, 50 * e, 143 * e, 50 * e, 145 * e, 92 * e),
        o.bezierCurveTo(169 * e, 88.5 * e, 169 * e, 88.5 * e, 193 * e, 85 * e),
        Ce(o, void 0, i[5], 14 * e),
        o.translate(10 * e, -10 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(205 * e, 124 * e),
        o.bezierCurveTo(205 * e, 69 * e, 205 * e, 69 * e, 205 * e, 14 * e),
        o.bezierCurveTo(239 * e, 15 * e, 250 * e, 37 * e, 249 * e, 49 * e),
        o.bezierCurveTo(251 * e, 65 * e, 242 * e, 76 * e, 206 * e, 75 * e),
        Ce(o, void 0, i[5], 14 * e)),
        r
    }
    function Ct(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 345 * e,
        n.height = 250 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(105 * e, 58 * e),
        r.bezierCurveTo(100.5 * e, 43 * e, 100.5 * e, 43 * e, 96 * e, 28 * e),
        r.bezierCurveTo(119.5 * e, 33.5 * e, 119.5 * e, 33.5 * e, 143 * e, 39 * e),
        r.bezierCurveTo(170 * e, 37 * e, 177 * e, 37 * e, 188 * e, 40 * e),
        r.bezierCurveTo(213 * e, 33.5 * e, 213 * e, 33.5 * e, 238 * e, 27 * e),
        r.bezierCurveTo(231 * e, 52 * e, 234 * e, 42.5 * e, 230 * e, 58 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(108 * e, 51 * e),
        r.bezierCurveTo(91 * e, 55 * e, 85 * e, 44 * e, 86 * e, 29 * e),
        r.bezierCurveTo(62 * e, 50 * e, 78 * e, 69 * e, 92 * e, 75 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(249 * e, 27 * e),
        r.bezierCurveTo(273 * e, 49 * e, 262 * e, 68 * e, 246 * e, 77 * e),
        r.bezierCurveTo(231 * e, 59 * e, 236 * e, 66.5 * e, 226 * e, 56 * e),
        r.bezierCurveTo(243 * e, 53 * e, 252 * e, 43 * e, 249 * e, 28 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(87 * e, 78 * e),
        r.bezierCurveTo(87 * e, 59 * e, 98 * e, 46 * e, 127 * e, 48 * e),
        r.bezierCurveTo(176 * e, 48.5 * e, 176 * e, 48.5 * e, 225 * e, 49 * e),
        r.bezierCurveTo(243 * e, 49 * e, 253 * e, 59 * e, 253 * e, 76 * e),
        r.bezierCurveTo(211 * e, 85.5 * e, 211 * e, 85.5 * e, 169 * e, 95 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(56 * e, 105 * e),
        r.bezierCurveTo(56 * e, 92 * e, 59 * e, 86 * e, 65 * e, 73 * e),
        r.bezierCurveTo(62.5 * e, 61.5 * e, 62.5 * e, 61.5 * e, 60 * e, 50 * e),
        r.bezierCurveTo(99.5 * e, 64.5 * e, 99.5 * e, 64.5 * e, 139 * e, 79 * e),
        r.bezierCurveTo(164 * e, 77 * e, 177 * e, 76 * e, 203 * e, 78 * e),
        r.bezierCurveTo(242 * e, 63.5 * e, 242 * e, 63.5 * e, 281 * e, 49 * e),
        r.bezierCurveTo(279 * e, 60.5 * e, 279 * e, 60.5 * e, 277 * e, 72 * e),
        r.bezierCurveTo(286 * e, 88 * e, 286 * e, 96 * e, 287 * e, 104 * e),
        r.bezierCurveTo(228.5 * e, 127 * e, 228.5 * e, 127 * e, 170 * e, 150 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(48 * e, 130 * e),
        r.bezierCurveTo(61 * e, 155 * e, 63 * e, 165 * e, 56 * e, 171 * e),
        r.bezierCurveTo(48 * e, 177 * e, 40 * e, 171 * e, 38 * e, 178 * e),
        r.bezierCurveTo(33 * e, 180 * e, 37 * e, 188 * e, 47 * e, 208 * e),
        r.bezierCurveTo(52 * e, 221 * e, 55 * e, 222 * e, 75 * e, 229 * e),
        r.bezierCurveTo(91 * e, 213 * e, 98 * e, 212 * e, 112 * e, 219 * e),
        r.bezierCurveTo(167 * e, 225 * e, 187 * e, 224 * e, 222 * e, 220 * e),
        r.bezierCurveTo(244 * e, 214 * e, 247 * e, 213 * e, 263 * e, 229 * e),
        r.bezierCurveTo(295 * e, 220 * e, 291 * e, 215 * e, 301 * e, 194 * e),
        r.bezierCurveTo(308 * e, 178 * e, 309 * e, 176 * e, 302 * e, 173 * e),
        r.bezierCurveTo(290 * e, 177 * e, 289 * e, 177 * e, 283 * e, 169 * e),
        r.bezierCurveTo(279 * e, 163 * e, 279 * e, 161 * e, 290 * e, 130 * e),
        r.bezierCurveTo(270 * e, 127 * e, 270 * e, 127 * e, 250 * e, 124 * e),
        r.bezierCurveTo(209 * e, 137.5 * e, 209 * e, 137.5 * e, 168 * e, 151 * e),
        r.bezierCurveTo(121 * e, 135 * e, 121 * e, 135 * e, 74 * e, 119 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 8 * e),
        r.globalCompositeOperation = "destination-out",
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(133 * e, 158 * e),
        r.bezierCurveTo(152 * e, 193 * e, 158 * e, 205 * e, 140 * e, 203 * e),
        r.bezierCurveTo(99 * e, 195 * e, 96 * e, 189 * e, 86 * e, 173 * e),
        r.bezierCurveTo(80 * e, 159 * e, 88 * e, 145 * e, 104 * e, 141 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(215 * e, 146 * e),
        r.bezierCurveTo(204 * e, 167 * e, 204 * e, 167 * e, 193 * e, 188 * e),
        r.bezierCurveTo(187 * e, 201 * e, 191 * e, 209 * e, 213 * e, 201 * e),
        r.bezierCurveTo(247 * e, 192 * e, 253 * e, 181 * e, 257 * e, 169 * e),
        r.bezierCurveTo(260 * e, 157 * e, 254 * e, 149 * e, 243 * e, 141 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 8 * e),
        r.globalCompositeOperation = "source-over",
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(133 * e, 158 * e),
        r.bezierCurveTo(152 * e, 193 * e, 158 * e, 205 * e, 140 * e, 203 * e),
        r.bezierCurveTo(99 * e, 195 * e, 96 * e, 189 * e, 86 * e, 173 * e),
        r.bezierCurveTo(80 * e, 159 * e, 88 * e, 145 * e, 104 * e, 141 * e),
        r.closePath(),
        Ce(r, void 0, i[8], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(215 * e, 146 * e),
        r.bezierCurveTo(204 * e, 167 * e, 204 * e, 167 * e, 193 * e, 188 * e),
        r.bezierCurveTo(187 * e, 201 * e, 191 * e, 209 * e, 213 * e, 201 * e),
        r.bezierCurveTo(247 * e, 192 * e, 253 * e, 181 * e, 257 * e, 169 * e),
        r.bezierCurveTo(260 * e, 157 * e, 254 * e, 149 * e, 243 * e, 141 * e),
        r.closePath(),
        Ce(r, void 0, i[8], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(39 * e, 66 * e),
        r.bezierCurveTo(57 * e, 107 * e, 63 * e, 96 * e, 120 * e, 106 * e),
        r.bezierCurveTo(154 * e, 112 * e, 163 * e, 116 * e, 174 * e, 135 * e),
        r.bezierCurveTo(180 * e, 109 * e, 191 * e, 113 * e, 237 * e, 103 * e),
        r.bezierCurveTo(276 * e, 100 * e, 289 * e, 94 * e, 301 * e, 67 * e),
        r.bezierCurveTo(317 * e, 112 * e, 301 * e, 141 * e, 274 * e, 139 * e),
        r.bezierCurveTo(204 * e, 166 * e, 197 * e, 169 * e, 173 * e, 183 * e),
        r.bezierCurveTo(170 * e, 183 * e, 170 * e, 183 * e, 167 * e, 183 * e),
        r.bezierCurveTo(132 * e, 160 * e, 112 * e, 156 * e, 73 * e, 141 * e),
        r.bezierCurveTo(43 * e, 146 * e, 27 * e, 120 * e, 39 * e, 66 * e),
        r.closePath(),
        Ce(r, i[7], i[8], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(115 * e, 185 * e),
        r.bezierCurveTo(115 * e, 200 * e, 118 * e, 206 * e, 124 * e, 212 * e),
        r.bezierCurveTo(133 * e, 223 * e, 132 * e, 231 * e, 121 * e, 230 * e),
        r.bezierCurveTo(108 * e, 226 * e, 108 * e, 215 * e, 107 * e, 209 * e),
        r.bezierCurveTo(106 * e, 201 * e, 110 * e, 196 * e, 114 * e, 185 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(226 * e, 186 * e),
        r.bezierCurveTo(234 * e, 201 * e, 238 * e, 209 * e, 228 * e, 225 * e),
        r.bezierCurveTo(223 * e, 233 * e, 213 * e, 233 * e, 211 * e, 226 * e),
        r.bezierCurveTo(206 * e, 219 * e, 217 * e, 216 * e, 221 * e, 207 * e),
        r.bezierCurveTo(225 * e, 196 * e, 225 * e, 191 * e, 226 * e, 186 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(172 * e, 110 * e),
        r.bezierCurveTo(189 * e, 153 * e, 192 * e, 160 * e, 188 * e, 175 * e),
        r.bezierCurveTo(183 * e, 190 * e, 176 * e, 197 * e, 165 * e, 191 * e),
        r.bezierCurveTo(153 * e, 181 * e, 152 * e, 166 * e, 157 * e, 151 * e),
        r.bezierCurveTo(164.5 * e, 131 * e, 164.5 * e, 131 * e, 172 * e, 111 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 8 * e),
        n
    }
    function Rt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 149 * e,
        i.height = 153 * e,
        n.globalAlpha = .5,
        we(n, 74.5 * e, 85 * e, 66 * e),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        we(n, 75.5 * e, 72.5 * e, 67 * e),
        Ce(n, t[1], t[2], 4 * e),
        we(n, 75.5 * e, 73.5 * e, 54 * e),
        Ce(n, t[3]),
        n.globalAlpha = .5,
        we(n, 74.5 * e, 80.5 * e, 39 * e),
        Ce(n, t[4]),
        n.globalAlpha = 1,
        we(n, 74.5 * e, 74.5 * e, 37 * e),
        Ce(n, t[5]),
        i
    }
    function St(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 173 * e,
        i.height = 178 * e,
        n.globalAlpha = .5,
        we(n, 86.5 * e, 98 * e, 80 * e),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        we(n, 86.5 * e, 89 * e, 81 * e),
        Ce(n, t[1], t[2], 4 * e),
        we(n, 86.5 * e, 86 * e, 59 * e),
        Ce(n, t[3], t[4], 4 * e),
        n.globalAlpha = .5,
        we(n, 86.5 * e, 95 * e, 34 * e),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        we(n, 86.5 * e, 89 * e, 34 * e),
        Ce(n, t[5]),
        i
    }
    function Nt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 253 * e,
        i.height = 260 * e,
        n.globalAlpha = .5,
        we(n, 126.5 * e, 134 * e, 119 * e),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        we(n, 126.5 * e, 124 * e, 119 * e),
        Ce(n, t[1], t[2], 4 * e),
        we(n, 126.5 * e, 127 * e, 100 * e),
        Ce(n, t[3]),
        n.globalAlpha = .5,
        we(n, 126.5 * e, 135 * e, 81 * e),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        we(n, 126.5 * e, 125 * e, 84 * e),
        Ce(n, t[4], t[5], 4 * e),
        we(n, 126.5 * e, 125 * e, 61 * e),
        Ce(n, t[6], t[7], 4 * e),
        n.globalAlpha = .5,
        we(n, 126.5 * e, 134 * e, 40 * e),
        Ce(n, t[8]),
        n.globalAlpha = 1,
        we(n, 126.5 * e, 125 * e, 40 * e),
        Ce(n, t[9]),
        i
    }
    function Dt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 139 * e,
        n.height = 135 * e,
        r.translate(0, 10 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(32 * e, 77 * e),
        r.bezierCurveTo(6 * e, 41 * e, 6 * e, 33 * e, 12 * e, 27 * e),
        r.bezierCurveTo(27 * e, 6 * e, 28 * e, 6 * e, 37 * e, 6 * e),
        r.bezierCurveTo(62 * e, 3 * e, 64 * e, 5 * e, 67 * e, 13 * e),
        r.bezierCurveTo(80 * e, 36 * e, 73.5 * e, 25 * e, 80 * e, 37 * e),
        r.bezierCurveTo(73.5 * e, 54 * e, 65 * e, 74 * e, 67 * e, 71 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(65 * e, 37 * e),
        r.bezierCurveTo(105 * e, 40 * e, 113 * e, 39 * e, 117 * e, 48 * e),
        r.bezierCurveTo(126 * e, 70 * e, 128 * e, 72 * e, 124 * e, 80 * e),
        r.bezierCurveTo(112 * e, 101 * e, 110 * e, 104 * e, 99 * e, 104 * e),
        r.bezierCurveTo(59 * e, 100 * e, 55 * e, 99 * e, 56 * e, 99 * e),
        r.bezierCurveTo(47.5 * e, 79 * e, 45 * e, 66 * e, 39 * e, 59 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 63 * e),
        r.bezierCurveTo(5 * e, 99 * e, 5 * e, 101 * e, 8 * e, 103 * e),
        r.bezierCurveTo(19 * e, 123 * e, 22 * e, 125 * e, 28 * e, 126 * e),
        r.bezierCurveTo(57 * e, 127 * e, 55 * e, 127 * e, 58 * e, 120 * e),
        r.bezierCurveTo(82 * e, 86 * e, 83 * e, 78 * e, 82 * e, 87 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(0, -10 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(32 * e, 77 * e),
        r.bezierCurveTo(6 * e, 41 * e, 6 * e, 33 * e, 12 * e, 27 * e),
        r.bezierCurveTo(27 * e, 6 * e, 28 * e, 6 * e, 37 * e, 6 * e),
        r.bezierCurveTo(62 * e, 3 * e, 64 * e, 5 * e, 67 * e, 13 * e),
        r.bezierCurveTo(80 * e, 36 * e, 73.5 * e, 25 * e, 80 * e, 37 * e),
        r.bezierCurveTo(73.5 * e, 54 * e, 65 * e, 74 * e, 67 * e, 71 * e),
        r.closePath(),
        Ce(r, i[1]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(65 * e, 37 * e),
        r.bezierCurveTo(105 * e, 40 * e, 113 * e, 39 * e, 117 * e, 48 * e),
        r.bezierCurveTo(126 * e, 70 * e, 128 * e, 72 * e, 124 * e, 80 * e),
        r.bezierCurveTo(112 * e, 101 * e, 110 * e, 104 * e, 99 * e, 104 * e),
        r.bezierCurveTo(59 * e, 100 * e, 55 * e, 99 * e, 56 * e, 99 * e),
        r.bezierCurveTo(47.5 * e, 79 * e, 45 * e, 66 * e, 39 * e, 59 * e),
        r.closePath(),
        Ce(r, i[1]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 63 * e),
        r.bezierCurveTo(5 * e, 99 * e, 5 * e, 101 * e, 8 * e, 103 * e),
        r.bezierCurveTo(19 * e, 123 * e, 22 * e, 125 * e, 28 * e, 126 * e),
        r.bezierCurveTo(57 * e, 127 * e, 55 * e, 127 * e, 58 * e, 120 * e),
        r.bezierCurveTo(82 * e, 86 * e, 83 * e, 78 * e, 82 * e, 87 * e),
        r.closePath(),
        Ce(r, i[1]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(80 * e, 38 * e),
        r.bezierCurveTo(72.5 * e, 52 * e, 72.5 * e, 52 * e, 65 * e, 66 * e),
        r.bezierCurveTo(47.5 * e, 37 * e, 47.5 * e, 37 * e, 30 * e, 7 * e),
        r.bezierCurveTo(48 * e, 4 * e, 57 * e, 4 * e, 64 * e, 10 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(65 * e, 65 * e),
        r.bezierCurveTo(125 * e, 73 * e, 95.5 * e, 69 * e, 126 * e, 73 * e),
        r.bezierCurveTo(119 * e, 98 * e, 106 * e, 104 * e, 98 * e, 103 * e),
        r.bezierCurveTo(84.5 * e, 102 * e, 84.5 * e, 102 * e, 71 * e, 101 * e),
        r.bezierCurveTo(64 * e, 86 * e, 64 * e, 86 * e, 57 * e, 70 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(27 * e, 69 * e),
        r.bezierCurveTo(64 * e, 65 * e, 46 * e, 67 * e, 65 * e, 65 * e),
        r.bezierCurveTo(43.5 * e, 94 * e, 43.5 * e, 94 * e, 22 * e, 123 * e),
        r.bezierCurveTo(8 * e, 103 * e, 8 * e, 103 * e, 9 * e, 103 * e),
        r.bezierCurveTo(5 * e, 98 * e, 11 * e, 89 * e, 26 * e, 70 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(26 * e, 69 * e),
        r.bezierCurveTo(65 * e, 60 * e, 45 * e, 65 * e, 64 * e, 60 * e),
        r.bezierCurveTo(63 * e, 65 * e, 63 * e, 65 * e, 62 * e, 70 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(80 * e, 38 * e),
        r.bezierCurveTo(68 * e, 70 * e, 75 * e, 53 * e, 70 * e, 68 * e),
        r.bezierCurveTo(65 * e, 67 * e, 65 * e, 67 * e, 60 * e, 65 * e),
        r.closePath(),
        Ce(r, i[2]),
        n
    }
    function ft(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 100 * e,
        i.height = 100 * e,
        n.globalAlpha = .5,
        n.fillStyle = t[0],
        n.fillRect(0, 0, i.width, i.height),
        i
    }
    function vt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 120 * e,
        i.height = 300 * e,
        n.translate(-80 * e, -20),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(200.5 * e, 14.953125 * e),
        n.bezierCurveTo(203 * e, 171.953125 * e, 203 * e, 171.953125 * e, 205.5 * e, 328.953125 * e),
        n.bezierCurveTo(188.5 * e, 257.953125 * e, 164.5 * e, 216.953125 * e, 166.5 * e, 176.953125 * e),
        n.bezierCurveTo(168.5 * e, 133.953125 * e, 198.5 * e, 98.953125 * e, 200.5 * e, 14.953125 * e),
        n.closePath(),
        Ce(n, t[0]),
        i
    }
    function Mt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 120 * e,
        i.height = 300 * e,
        n.translate(-200 * e, -40 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(344 * e, 18.40625 * e),
        n.bezierCurveTo(345 * e, 361.40625 * e, 344 * e, 191.40625 * e, 344 * e, 364.40625 * e),
        n.bezierCurveTo(261 * e, 275.40625 * e, 274 * e, 259.40625 * e, 229 * e, 213.40625 * e),
        n.bezierCurveTo(199 * e, 187.40625 * e, 222 * e, 133.40625 * e, 273 * e, 100.40625 * e),
        n.bezierCurveTo(321 * e, 71.40625 * e, 327 * e, 34.40625 * e, 344 * e, 18.40625 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(335 * e, 38.072906494140625 * e),
        n.bezierCurveTo(307 * e, 62.072906494140625 * e, 291 * e, 60.072906494140625 * e, 262 * e, 68.07290649414062 * e),
        n.bezierCurveTo(223 * e, 80.07290649414062 * e, 225 * e, 111.07290649414062 * e, 264 * e, 139.07290649414062 * e),
        n.closePath(),
        Ce(n, t[0]),
        i
    }
    function yt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 120 * e,
        i.height = 320 * e,
        n.translate(-60 * e, -15 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(188.5 * e, 3.953125 * e),
        n.bezierCurveTo(188.5 * e, 171.453125 * e, 188.5 * e, 171.453125 * e, 188.5 * e, 338.953125 * e),
        n.bezierCurveTo(162.5 * e, 268.953125 * e, 145.5 * e, 265.953125 * e, 116.5 * e, 244.953125 * e),
        n.bezierCurveTo(67.5 * e, 204.953125 * e, 87.5 * e, 160.953125 * e, 113.5 * e, 125.953125 * e),
        n.bezierCurveTo(141.5 * e, 90.953125 * e, 176.5 * e, 56.953125 * e, 188.5 * e, 3.953125 * e),
        n.closePath(),
        Ce(n, t[0]),
        i
    }
    function Lt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 120 * e,
        i.height = 330 * e,
        n.translate(-60 * e, -10 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(188.5 * e, 7.953125 * e),
        n.bezierCurveTo(188.5 * e, 334.953125 * e, 188.5 * e, 332.953125 * e, 188.5 * e, 339.953125 * e),
        n.bezierCurveTo(166.5 * e, 295.953125 * e, 145.5 * e, 295.953125 * e, 139.5 * e, 282.953125 * e),
        n.bezierCurveTo(124.5 * e, 244.953125 * e, 139.5 * e, 243.953125 * e, 131.5 * e, 212.953125 * e),
        n.bezierCurveTo(118.5 * e, 161.953125 * e, 69.5 * e, 156.953125 * e, 74.5 * e, 92.953125 * e),
        n.bezierCurveTo(85.5 * e, 41.953125 * e, 158.5 * e, 49.953125 * e, 188.5 * e, 7.953125 * e),
        n.closePath(),
        Ce(n, t[0]),
        i
    }
    function Gt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 48 * e,
        i.height = 47 * e,
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(7.1875 * e, 25.434661865234375 * e),
        n.bezierCurveTo(11.1875 * e, 13.434661865234375 * e, 18.1875 * e, 8.434661865234375 * e, 32.1875 * e, 10.434661865234375 * e),
        n.bezierCurveTo(45.1875 * e, 14.434661865234375 * e, 41.1875 * e, 24.434661865234375 * e, 36.1875 * e, 30.434661865234375 * e),
        n.bezierCurveTo(22.1875 * e, 42.434661865234375 * e, 2.1875 * e, 41.434661865234375 * e, 7.1875 * e, 25.434661865234375 * e),
        n.closePath(),
        Ce(n, t[0]),
        i
    }
    function Ht(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 120 * e,
        i.height = 280 * e,
        n.translate(-100 * e, -20 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(228.5 * e, 331.953125 * e),
        n.bezierCurveTo(228.5 * e, 12.953125 * e, 228.5 * e, 171.453125 * e, 228.5 * e, 10.953125 * e),
        n.bezierCurveTo(196.5 * e, 76.953125 * e, 206.5 * e, 78.953125 * e, 191.5 * e, 114.953125 * e),
        n.bezierCurveTo(162.5 * e, 170.953125 * e, 206.5 * e, 220.953125 * e, 210.5 * e, 251.953125 * e),
        n.bezierCurveTo(218.5 * e, 287.953125 * e, 220.5 * e, 291.953125 * e, 228.5 * e, 331.953125 * e),
        n.closePath(),
        Ce(n, t[0]),
        i
    }
    function Pt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 33 * e,
        i.height = 35 * e,
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(12.75 * e, 7.1328125 * e),
        n.bezierCurveTo(26.75 * e, 8.1328125 * e, 27.75 * e, 14.1328125 * e, 24.75 * e, 23.1328125 * e),
        n.bezierCurveTo(19.75 * e, 31.1328125 * e, 15.75 * e, 33.1328125 * e, 6.75 * e, 26.1328125 * e),
        n.bezierCurveTo(.75 * e, 19.1328125 * e, 4.75 * e, 8.1328125 * e, 12.75 * e, 7.1328125 * e),
        n.closePath(),
        Ce(n, t[0]),
        i
    }
    function Bt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 20 * e,
        i.height = 35 * e,
        Be(n, 0, 0, 20, 35, 7),
        Ce(n, t[0]),
        i
    }
    function wt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 161 * e,
        i.height = 190 * e,
        n.globalAlpha = .5,
        n.translate(0, 8),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(9 * e, 93 * e),
        n.bezierCurveTo(17 * e, 95 * e, 19 * e, 95 * e, 21 * e, 95 * e),
        n.bezierCurveTo(9 * e, 83 * e, 17 * e, 93 * e, 4 * e, 76 * e),
        n.bezierCurveTo(11 * e, 75 * e, 11 * e, 75 * e, 18 * e, 75 * e),
        n.bezierCurveTo(13 * e, 67 * e, 13 * e, 67 * e, 7 * e, 59 * e),
        n.bezierCurveTo(14 * e, 59 * e, 14 * e, 59 * e, 21 * e, 59 * e),
        n.bezierCurveTo(46 * e, 35 * e, 35 * e, 45 * e, 49 * e, 31 * e),
        n.bezierCurveTo(53 * e, 24 * e, 51 * e, 21 * e, 51 * e, 16 * e),
        n.bezierCurveTo(63 * e, 23 * e, 63 * e, 24 * e, 69 * e, 29 * e),
        n.bezierCurveTo(76 * e, 7 * e, 75 * e, 11 * e, 76 * e, 6 * e),
        n.bezierCurveTo(81 * e, 12 * e, 84 * e, 18 * e, 89 * e, 27 * e),
        n.bezierCurveTo(95 * e, 25 * e, 100 * e, 16 * e, 105 * e, 14 * e),
        n.bezierCurveTo(103 * e, 25 * e, 111 * e, 33 * e, 110 * e, 34 * e),
        n.bezierCurveTo(123 * e, 48 * e, 123 * e, 48 * e, 136 * e, 62 * e),
        n.bezierCurveTo(142 * e, 60 * e, 147 * e, 59 * e, 155 * e, 58 * e),
        n.bezierCurveTo(147 * e, 65 * e, 147 * e, 65 * e, 139 * e, 73 * e),
        n.bezierCurveTo(145 * e, 73 * e, 145 * e, 73 * e, 151 * e, 73 * e),
        n.bezierCurveTo(145 * e, 80 * e, 145 * e, 80 * e, 138 * e, 87 * e),
        n.bezierCurveTo(144 * e, 88 * e, 144 * e, 88 * e, 150 * e, 89 * e),
        n.bezierCurveTo(125 * e, 103 * e, 125 * e, 125 * e, 113 * e, 141 * e),
        n.bezierCurveTo(92 * e, 178 * e, 85 * e, 177 * e, 76 * e, 178 * e),
        n.bezierCurveTo(64 * e, 179 * e, 51 * e, 164 * e, 35 * e, 131 * e),
        n.bezierCurveTo(18 * e, 95 * e, 13 * e, 99 * e, 8 * e, 93 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        n.translate(0, -8),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(9 * e, 93 * e),
        n.bezierCurveTo(17 * e, 95 * e, 19 * e, 95 * e, 21 * e, 95 * e),
        n.bezierCurveTo(9 * e, 83 * e, 17 * e, 93 * e, 4 * e, 76 * e),
        n.bezierCurveTo(11 * e, 75 * e, 11 * e, 75 * e, 18 * e, 75 * e),
        n.bezierCurveTo(13 * e, 67 * e, 13 * e, 67 * e, 7 * e, 59 * e),
        n.bezierCurveTo(14 * e, 59 * e, 14 * e, 59 * e, 21 * e, 59 * e),
        n.bezierCurveTo(46 * e, 35 * e, 35 * e, 45 * e, 49 * e, 31 * e),
        n.bezierCurveTo(53 * e, 24 * e, 51 * e, 21 * e, 51 * e, 16 * e),
        n.bezierCurveTo(63 * e, 23 * e, 63 * e, 24 * e, 69 * e, 29 * e),
        n.bezierCurveTo(76 * e, 7 * e, 75 * e, 11 * e, 76 * e, 6 * e),
        n.bezierCurveTo(81 * e, 12 * e, 84 * e, 18 * e, 89 * e, 27 * e),
        n.bezierCurveTo(95 * e, 25 * e, 100 * e, 16 * e, 105 * e, 14 * e),
        n.bezierCurveTo(103 * e, 25 * e, 111 * e, 33 * e, 110 * e, 34 * e),
        n.bezierCurveTo(123 * e, 48 * e, 123 * e, 48 * e, 136 * e, 62 * e),
        n.bezierCurveTo(142 * e, 60 * e, 147 * e, 59 * e, 155 * e, 58 * e),
        n.bezierCurveTo(147 * e, 65 * e, 147 * e, 65 * e, 139 * e, 73 * e),
        n.bezierCurveTo(145 * e, 73 * e, 145 * e, 73 * e, 151 * e, 73 * e),
        n.bezierCurveTo(145 * e, 80 * e, 145 * e, 80 * e, 138 * e, 87 * e),
        n.bezierCurveTo(144 * e, 88 * e, 144 * e, 88 * e, 150 * e, 89 * e),
        n.bezierCurveTo(125 * e, 103 * e, 125 * e, 125 * e, 113 * e, 141 * e),
        n.bezierCurveTo(92 * e, 178 * e, 85 * e, 177 * e, 76 * e, 178 * e),
        n.bezierCurveTo(64 * e, 179 * e, 51 * e, 164 * e, 35 * e, 131 * e),
        n.bezierCurveTo(18 * e, 95 * e, 13 * e, 99 * e, 8 * e, 93 * e),
        n.closePath(),
        Ce(n, t[1]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(28 * e, 63 * e),
        n.bezierCurveTo(23 * e, 54 * e, 24 * e, 47 * e, 26 * e, 37 * e),
        n.bezierCurveTo(28 * e, 29 * e, 31 * e, 31 * e, 41 * e, 35 * e),
        n.bezierCurveTo(52 * e, 45 * e, 55 * e, 51 * e, 57 * e, 53 * e),
        n.bezierCurveTo(50 * e, 50 * e, 44 * e, 47 * e, 43 * e, 48 * e),
        n.bezierCurveTo(43 * e, 52 * e, 43 * e, 52 * e, 42 * e, 57 * e),
        n.bezierCurveTo(38 * e, 54 * e, 38 * e, 54 * e, 33 * e, 51 * e),
        n.bezierCurveTo(34 * e, 56 * e, 34 * e, 56 * e, 34 * e, 61 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(99 * e, 55 * e),
        n.bezierCurveTo(107 * e, 43 * e, 113 * e, 39 * e, 121 * e, 34 * e),
        n.bezierCurveTo(130 * e, 29 * e, 130 * e, 34 * e, 130 * e, 42 * e),
        n.bezierCurveTo(131 * e, 57 * e, 128 * e, 61 * e, 129 * e, 63 * e),
        n.bezierCurveTo(124 * e, 62 * e, 124 * e, 62 * e, 119 * e, 61 * e),
        n.bezierCurveTo(119 * e, 56 * e, 120 * e, 61 * e, 118 * e, 52 * e),
        n.bezierCurveTo(115 * e, 55 * e, 111 * e, 59 * e, 111 * e, 58 * e),
        n.bezierCurveTo(110 * e, 54 * e, 109 * e, 57 * e, 109 * e, 51 * e),
        n.closePath(),
        Ce(n, t[3]),
        we(n, 103 * e, 110 * e, 11 * e),
        Ce(n, t[4]),
        we(n, 55 * e, 111 * e, 11 * e),
        Ce(n, t[4]),
        we(n, 99 * e, 107 * e, 5 * e),
        Ce(n, t[1]),
        we(n, 51 * e, 108 * e, 5 * e),
        Ce(n, t[1]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(31 * e, 121 * e),
        n.bezierCurveTo(45 * e, 128 * e, 51 * e, 133 * e, 53 * e, 141 * e),
        n.bezierCurveTo(59 * e, 161 * e, 70 * e, 173 * e, 80 * e, 169 * e),
        n.bezierCurveTo(89 * e, 172 * e, 99 * e, 149 * e, 107 * e, 133 * e),
        n.bezierCurveTo(114 * e, 122 * e, 119 * e, 123 * e, 124 * e, 119 * e),
        n.bezierCurveTo(109 * e, 148 * e, 117 * e, 133 * e, 109 * e, 147 * e),
        n.bezierCurveTo(87 * e, 180 * e, 84 * e, 179 * e, 76 * e, 178 * e),
        n.bezierCurveTo(49 * e, 173 * e, 44 * e, 149 * e, 31 * e, 121 * e),
        n.closePath(),
        Ce(n, t[5]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.translate(-2, 0),
        n.moveTo(71 * e, 162 * e),
        n.bezierCurveTo(80 * e, 155 * e, 85 * e, 159 * e, 89 * e, 164 * e),
        n.bezierCurveTo(90 * e, 171 * e, 86 * e, 173 * e, 79 * e, 173 * e),
        n.bezierCurveTo(67 * e, 172 * e, 67 * e, 168 * e, 71 * e, 162 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.translate(2, 0),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(9 * e, 93 * e),
        n.bezierCurveTo(17 * e, 95 * e, 19 * e, 95 * e, 21 * e, 95 * e),
        n.bezierCurveTo(9 * e, 83 * e, 17 * e, 93 * e, 4 * e, 76 * e),
        n.bezierCurveTo(11 * e, 75 * e, 11 * e, 75 * e, 18 * e, 75 * e),
        n.bezierCurveTo(13 * e, 67 * e, 13 * e, 67 * e, 7 * e, 59 * e),
        n.bezierCurveTo(14 * e, 59 * e, 14 * e, 59 * e, 21 * e, 59 * e),
        n.bezierCurveTo(46 * e, 35 * e, 35 * e, 45 * e, 49 * e, 31 * e),
        n.bezierCurveTo(53 * e, 24 * e, 51 * e, 21 * e, 51 * e, 16 * e),
        n.bezierCurveTo(63 * e, 23 * e, 63 * e, 24 * e, 69 * e, 29 * e),
        n.bezierCurveTo(76 * e, 7 * e, 75 * e, 11 * e, 76 * e, 6 * e),
        n.bezierCurveTo(81 * e, 12 * e, 84 * e, 18 * e, 89 * e, 27 * e),
        n.bezierCurveTo(95 * e, 25 * e, 100 * e, 16 * e, 105 * e, 14 * e),
        n.bezierCurveTo(103 * e, 25 * e, 111 * e, 33 * e, 110 * e, 34 * e),
        n.bezierCurveTo(123 * e, 48 * e, 123 * e, 48 * e, 136 * e, 62 * e),
        n.bezierCurveTo(142 * e, 60 * e, 147 * e, 59 * e, 155 * e, 58 * e),
        n.bezierCurveTo(147 * e, 65 * e, 147 * e, 65 * e, 139 * e, 73 * e),
        n.bezierCurveTo(145 * e, 73 * e, 145 * e, 73 * e, 151 * e, 73 * e),
        n.bezierCurveTo(145 * e, 80 * e, 145 * e, 80 * e, 138 * e, 87 * e),
        n.bezierCurveTo(144 * e, 88 * e, 144 * e, 88 * e, 150 * e, 89 * e),
        n.bezierCurveTo(125 * e, 103 * e, 125 * e, 125 * e, 113 * e, 141 * e),
        n.bezierCurveTo(92 * e, 178 * e, 85 * e, 177 * e, 76 * e, 178 * e),
        n.bezierCurveTo(64 * e, 179 * e, 51 * e, 164 * e, 35 * e, 131 * e),
        n.bezierCurveTo(18 * e, 95 * e, 13 * e, 99 * e, 8 * e, 93 * e),
        n.closePath(),
        Ce(n, void 0, t[2], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(25 * e, 63 * e),
        n.bezierCurveTo(16 * e, 58 * e, 17 * e, 51 * e, 17 * e, 33 * e),
        n.bezierCurveTo(19 * e, 12 * e, 21 * e, 12 * e, 32 * e, 17 * e),
        n.bezierCurveTo(63 * e, 31 * e, 66 * e, 45 * e, 66 * e, 54 * e),
        Ce(n, t[1], t[2], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(91 * e, 53 * e),
        n.bezierCurveTo(91 * e, 40 * e, 98 * e, 33 * e, 121 * e, 20 * e),
        n.bezierCurveTo(137 * e, 12 * e, 137 * e, 16 * e, 139 * e, 27 * e),
        n.bezierCurveTo(141 * e, 49 * e, 140 * e, 57 * e, 134 * e, 64 * e),
        Ce(n, t[1], t[2], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(31 * e, 63 * e),
        n.bezierCurveTo(23 * e, 54 * e, 24 * e, 47 * e, 26 * e, 37 * e),
        n.bezierCurveTo(28 * e, 29 * e, 31 * e, 31 * e, 41 * e, 35 * e),
        n.bezierCurveTo(52 * e, 45 * e, 55 * e, 51 * e, 57 * e, 53 * e),
        n.bezierCurveTo(50 * e, 50 * e, 44 * e, 47 * e, 43 * e, 48 * e),
        n.bezierCurveTo(43 * e, 52 * e, 43 * e, 52 * e, 42 * e, 57 * e),
        n.bezierCurveTo(38 * e, 54 * e, 38 * e, 54 * e, 33 * e, 51 * e),
        n.bezierCurveTo(34 * e, 56 * e, 34 * e, 56 * e, 34 * e, 61 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(99 * e, 55 * e),
        n.bezierCurveTo(107 * e, 43 * e, 113 * e, 39 * e, 121 * e, 34 * e),
        n.bezierCurveTo(130 * e, 29 * e, 130 * e, 34 * e, 130 * e, 42 * e),
        n.bezierCurveTo(131 * e, 57 * e, 128 * e, 61 * e, 129 * e, 63 * e),
        n.bezierCurveTo(124 * e, 62 * e, 124 * e, 62 * e, 119 * e, 61 * e),
        n.bezierCurveTo(119 * e, 56 * e, 120 * e, 61 * e, 118 * e, 52 * e),
        n.bezierCurveTo(115 * e, 55 * e, 111 * e, 59 * e, 111 * e, 58 * e),
        n.bezierCurveTo(110 * e, 54 * e, 109 * e, 57 * e, 109 * e, 51 * e),
        n.closePath(),
        Ce(n, t[3]),
        i
    }
    function zt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 147 * e,
        i.height = 172 * e,
        n.globalAlpha = .5,
        n.translate(0, 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(8 * e, 50 * e),
        n.bezierCurveTo(15 * e, 16 * e, 49 * e, 6 * e, 67 * e, 6 * e),
        n.bezierCurveTo(121 * e, 3 * e, 128 * e, 32 * e, 135 * e, 48 * e),
        n.bezierCurveTo(146 * e, 96 * e, 124 * e, 131 * e, 96 * e, 135 * e),
        n.bezierCurveTo(96 * e, 158 * e, 79 * e, 156 * e, 75 * e, 156 * e),
        n.bezierCurveTo(50 * e, 154 * e, 53 * e, 150 * e, 52 * e, 135 * e),
        n.bezierCurveTo(2 * e, 127 * e, 3 * e, 87 * e, 8 * e, 50 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.translate(0, -8 * e),
        n.globalAlpha = 1,
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(8 * e, 50 * e),
        n.bezierCurveTo(15 * e, 16 * e, 49 * e, 6 * e, 67 * e, 6 * e),
        n.bezierCurveTo(121 * e, 3 * e, 128 * e, 32 * e, 135 * e, 48 * e),
        n.bezierCurveTo(146 * e, 96 * e, 124 * e, 131 * e, 96 * e, 135 * e),
        n.bezierCurveTo(96 * e, 158 * e, 79 * e, 156 * e, 75 * e, 156 * e),
        n.bezierCurveTo(50 * e, 154 * e, 53 * e, 150 * e, 52 * e, 135 * e),
        n.bezierCurveTo(2 * e, 127 * e, 3 * e, 87 * e, 8 * e, 50 * e),
        n.closePath(),
        Ce(n, t[1], t[2], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(14 * e, 57 * e),
        n.bezierCurveTo(2 * e, 50 * e, 5 * e, 22 * e, 24 * e, 22 * e),
        n.bezierCurveTo(41 * e, 21 * e, 54 * e, 32 * e, 55 * e, 48 * e),
        Ce(n, t[1], t[2], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(93 * e, 47 * e),
        n.bezierCurveTo(94 * e, 24 * e, 116 * e, 21 * e, 120 * e, 20 * e),
        n.bezierCurveTo(144 * e, 17 * e, 146 * e, 52 * e, 133 * e, 58 * e),
        Ce(n, t[1], t[2], 4 * e),
        we(n, 51 * e, 91 * e, 9 * e),
        Ce(n, t[3]),
        we(n, 95 * e, 91 * e, 9 * e),
        Ce(n, t[3]),
        we(n, 91 * e, 89 * e, 4 * e),
        Ce(n, t[4]),
        we(n, 47 * e, 89 * e, 4 * e),
        Ce(n, t[4]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(54 * e, 133 * e),
        n.bezierCurveTo(56 * e, 108 * e, 64 * e, 99 * e, 73 * e, 98 * e),
        n.bezierCurveTo(86 * e, 97 * e, 91 * e, 119 * e, 93 * e, 133 * e),
        n.bezierCurveTo(94 * e, 155 * e, 90 * e, 150 * e, 74 * e, 155 * e),
        n.bezierCurveTo(50 * e, 152 * e, 55 * e, 145 * e, 54 * e, 134 * e),
        n.closePath(),
        Ce(n, t[5]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(65.25 * e, 135 * e),
        n.bezierCurveTo(75.25 * e, 128 * e, 83.25 * e, 133 * e, 83.25 * e, 138 * e),
        n.bezierCurveTo(88.25 * e, 148 * e, 61.25 * e, 149 * e, 64.25 * e, 137 * e),
        n.closePath(),
        Ce(n, t[6]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(74 * e, 145 * e),
        n.bezierCurveTo(74 * e, 148 * e, 74 * e, 148 * e, 74 * e, 151 * e),
        n.closePath(),
        Ce(n, void 0, t[6], 2 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(19 * e, 58 * e),
        n.bezierCurveTo(10 * e, 38 * e, 18 * e, 33 * e, 28 * e, 34 * e),
        n.bezierCurveTo(41 * e, 39 * e, 45 * e, 45 * e, 50 * e, 51 * e),
        n.closePath(),
        Ce(n, t[6]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(100 * e, 51 * e),
        n.bezierCurveTo(106 * e, 36 * e, 119 * e, 31 * e, 128 * e, 36 * e),
        n.bezierCurveTo(137 * e, 49 * e, 128 * e, 58 * e, 128 * e, 60 * e),
        n.closePath(),
        Ce(n, t[6]),
        i
    }
    function kt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 271 * e,
        i.height = 366 * e,
        n.globalAlpha = .5,
        n.translate(0, 10 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(133 * e, 99 * e),
        n.bezierCurveTo(186 * e, 123 * e, 199 * e, 152 * e, 209 * e, 169 * e),
        n.bezierCurveTo(228 * e, 205 * e, 224 * e, 245 * e, 190 * e, 276 * e),
        n.bezierCurveTo(161 * e, 296 * e, 99 * e, 292 * e, 79 * e, 274 * e),
        n.bezierCurveTo(49 * e, 253 * e, 47 * e, 214 * e, 50 * e, 197 * e),
        n.bezierCurveTo(61 * e, 143 * e, 102 * e, 113 * e, 131 * e, 99 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(73 * e, 270 * e),
        n.bezierCurveTo(79 * e, 280 * e, 77 * e, 280 * e, 78 * e, 287 * e),
        n.bezierCurveTo(78 * e, 290 * e, 83 * e, 291 * e, 82 * e, 299 * e),
        n.bezierCurveTo(81 * e, 301 * e, 87 * e, 301 * e, 92 * e, 314 * e),
        n.bezierCurveTo(94 * e, 319 * e, 100 * e, 321 * e, 107 * e, 320 * e),
        n.bezierCurveTo(111 * e, 323 * e, 114 * e, 324 * e, 119 * e, 320 * e),
        n.bezierCurveTo(137 * e, 321 * e, 146 * e, 323 * e, 139 * e, 320 * e),
        n.bezierCurveTo(141 * e, 324 * e, 150 * e, 324 * e, 153 * e, 320 * e),
        n.bezierCurveTo(168 * e, 319 * e, 171 * e, 316 * e, 173 * e, 307 * e),
        n.bezierCurveTo(180 * e, 305 * e, 180 * e, 301 * e, 178 * e, 296 * e),
        n.bezierCurveTo(183 * e, 296 * e, 185 * e, 289 * e, 188 * e, 279 * e),
        n.bezierCurveTo(171 * e, 286 * e, 149 * e, 290 * e, 132 * e, 289 * e),
        n.bezierCurveTo(101 * e, 290 * e, 86 * e, 280 * e, 74 * e, 271 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(76 * e, 252 * e),
        n.bezierCurveTo(85 * e, 294 * e, 96 * e, 314 * e, 103 * e, 314 * e),
        n.bezierCurveTo(106 * e, 316 * e, 151 * e, 314 * e, 156 * e, 314 * e),
        n.bezierCurveTo(169 * e, 317 * e, 182 * e, 285 * e, 191 * e, 256 * e),
        n.bezierCurveTo(134.5 * e, 254 * e, 134.5 * e, 254 * e, 78 * e, 252 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(84 * e, 257 * e),
        n.bezierCurveTo(122 * e, 273 * e, 146 * e, 268 * e, 179 * e, 261 * e),
        n.bezierCurveTo(190 * e, 258 * e, 187 * e, 266 * e, 178 * e, 272 * e),
        n.bezierCurveTo(160 * e, 284 * e, 123 * e, 282 * e, 100 * e, 277 * e),
        n.bezierCurveTo(73 * e, 260 * e, 79 * e, 257 * e, 84 * e, 257 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(125 * e, 65 * e),
        n.bezierCurveTo(133 * e, 45 * e, 136 * e, 42 * e, 141 * e, 55 * e),
        n.bezierCurveTo(151 * e, 96 * e, 164 * e, 117 * e, 175 * e, 134 * e),
        n.bezierCurveTo(203 * e, 181 * e, 207 * e, 182 * e, 208 * e, 215 * e),
        n.bezierCurveTo(206 * e, 240 * e, 205 * e, 246 * e, 184 * e, 258 * e),
        n.bezierCurveTo(161 * e, 267 * e, 131 * e, 272 * e, 86 * e, 258 * e),
        n.bezierCurveTo(67 * e, 252 * e, 68 * e, 239 * e, 64 * e, 216 * e),
        n.bezierCurveTo(62 * e, 194 * e, 72 * e, 169 * e, 92 * e, 142 * e),
        n.bezierCurveTo(106 * e, 121 * e, 114 * e, 101 * e, 125 * e, 65 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(115 * e, 37 * e),
        n.bezierCurveTo(116 * e, 28 * e, 119 * e, 27 * e, 126 * e, 37 * e),
        n.bezierCurveTo(134 * e, 48 * e, 134 * e, 49 * e, 132 * e, 59 * e),
        n.bezierCurveTo(131 * e, 67 * e, 127 * e, 65 * e, 120 * e, 56 * e),
        n.bezierCurveTo(114 * e, 49 * e, 113 * e, 43 * e, 115 * e, 38 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(146 * e, 34 * e),
        n.bezierCurveTo(152 * e, 28 * e, 155 * e, 27 * e, 157 * e, 39 * e),
        n.bezierCurveTo(157 * e, 45 * e, 157 * e, 49 * e, 150 * e, 56 * e),
        n.bezierCurveTo(141 * e, 66 * e, 138 * e, 66 * e, 138 * e, 57 * e),
        n.bezierCurveTo(137 * e, 50 * e, 137 * e, 47 * e, 141 * e, 42 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(143 * e, 69 * e),
        n.bezierCurveTo(148 * e, 56 * e, 156 * e, 50 * e, 158 * e, 58 * e),
        n.bezierCurveTo(159 * e, 64 * e, 160 * e, 67 * e, 153 * e, 77 * e),
        n.bezierCurveTo(148 * e, 83 * e, 145 * e, 84 * e, 143 * e, 77 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(149 * e, 92 * e),
        n.bezierCurveTo(149 * e, 89 * e, 151 * e, 84 * e, 156 * e, 79 * e),
        n.bezierCurveTo(161 * e, 73 * e, 163 * e, 78 * e, 162 * e, 86 * e),
        n.bezierCurveTo(161 * e, 91 * e, 155 * e, 99 * e, 152 * e, 98 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(111 * e, 61 * e),
        n.bezierCurveTo(114 * e, 51 * e, 117 * e, 51 * e, 124 * e, 64 * e),
        n.bezierCurveTo(128 * e, 68 * e, 128 * e, 76 * e, 126 * e, 79 * e),
        n.bezierCurveTo(123 * e, 84 * e, 122 * e, 82 * e, 115 * e, 74 * e),
        n.bezierCurveTo(112 * e, 67 * e, 115 * e, 74 * e, 115 * e, 74 * e),
        n.bezierCurveTo(111 * e, 68 * e, 111 * e, 66 * e, 111 * e, 62 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(107 * e, 81 * e),
        n.bezierCurveTo(108 * e, 74 * e, 112 * e, 73 * e, 118 * e, 84 * e),
        n.bezierCurveTo(122 * e, 88 * e, 122 * e, 93 * e, 121 * e, 98 * e),
        n.bezierCurveTo(114 * e, 98 * e, 113 * e, 98 * e, 109 * e, 90 * e),
        n.bezierCurveTo(107 * e, 87 * e, 106 * e, 85 * e, 107 * e, 82 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        n.translate(0, -10 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(133 * e, 99 * e),
        n.bezierCurveTo(186 * e, 123 * e, 199 * e, 152 * e, 209 * e, 169 * e),
        n.bezierCurveTo(228 * e, 205 * e, 224 * e, 245 * e, 190 * e, 276 * e),
        n.bezierCurveTo(161 * e, 296 * e, 99 * e, 292 * e, 79 * e, 274 * e),
        n.bezierCurveTo(49 * e, 253 * e, 47 * e, 214 * e, 50 * e, 197 * e),
        n.bezierCurveTo(61 * e, 143 * e, 102 * e, 113 * e, 131 * e, 99 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(73 * e, 270 * e),
        n.bezierCurveTo(79 * e, 280 * e, 77 * e, 280 * e, 78 * e, 287 * e),
        n.bezierCurveTo(78 * e, 290 * e, 83 * e, 291 * e, 82 * e, 299 * e),
        n.bezierCurveTo(81 * e, 301 * e, 87 * e, 301 * e, 92 * e, 314 * e),
        n.bezierCurveTo(94 * e, 319 * e, 100 * e, 321 * e, 107 * e, 320 * e),
        n.bezierCurveTo(111 * e, 323 * e, 114 * e, 324 * e, 119 * e, 320 * e),
        n.bezierCurveTo(137 * e, 321 * e, 146 * e, 323 * e, 139 * e, 320 * e),
        n.bezierCurveTo(141 * e, 324 * e, 150 * e, 324 * e, 153 * e, 320 * e),
        n.bezierCurveTo(168 * e, 319 * e, 171 * e, 316 * e, 173 * e, 307 * e),
        n.bezierCurveTo(180 * e, 305 * e, 180 * e, 301 * e, 178 * e, 296 * e),
        n.bezierCurveTo(183 * e, 296 * e, 185 * e, 289 * e, 188 * e, 279 * e),
        n.bezierCurveTo(171 * e, 286 * e, 149 * e, 290 * e, 132 * e, 289 * e),
        n.bezierCurveTo(101 * e, 290 * e, 86 * e, 280 * e, 74 * e, 271 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(76 * e, 252 * e),
        n.bezierCurveTo(85 * e, 294 * e, 96 * e, 314 * e, 103 * e, 314 * e),
        n.bezierCurveTo(106 * e, 316 * e, 151 * e, 314 * e, 156 * e, 314 * e),
        n.bezierCurveTo(169 * e, 317 * e, 182 * e, 285 * e, 191 * e, 256 * e),
        n.bezierCurveTo(134.5 * e, 254 * e, 134.5 * e, 254 * e, 78 * e, 252 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(84 * e, 257 * e),
        n.bezierCurveTo(122 * e, 273 * e, 146 * e, 268 * e, 179 * e, 261 * e),
        n.bezierCurveTo(190 * e, 258 * e, 187 * e, 266 * e, 178 * e, 272 * e),
        n.bezierCurveTo(160 * e, 284 * e, 123 * e, 282 * e, 100 * e, 277 * e),
        n.bezierCurveTo(73 * e, 260 * e, 79 * e, 257 * e, 84 * e, 257 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(125 * e, 65 * e),
        n.bezierCurveTo(133 * e, 45 * e, 136 * e, 42 * e, 141 * e, 55 * e),
        n.bezierCurveTo(151 * e, 96 * e, 164 * e, 117 * e, 175 * e, 134 * e),
        n.bezierCurveTo(203 * e, 181 * e, 207 * e, 182 * e, 208 * e, 215 * e),
        n.bezierCurveTo(206 * e, 240 * e, 205 * e, 246 * e, 184 * e, 258 * e),
        n.bezierCurveTo(161 * e, 267 * e, 131 * e, 272 * e, 86 * e, 258 * e),
        n.bezierCurveTo(67 * e, 252 * e, 68 * e, 239 * e, 64 * e, 216 * e),
        n.bezierCurveTo(62 * e, 194 * e, 72 * e, 169 * e, 92 * e, 142 * e),
        n.bezierCurveTo(106 * e, 121 * e, 114 * e, 101 * e, 125 * e, 65 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(115 * e, 37 * e),
        n.bezierCurveTo(116 * e, 28 * e, 119 * e, 27 * e, 126 * e, 37 * e),
        n.bezierCurveTo(134 * e, 48 * e, 134 * e, 49 * e, 132 * e, 59 * e),
        n.bezierCurveTo(131 * e, 67 * e, 127 * e, 65 * e, 120 * e, 56 * e),
        n.bezierCurveTo(114 * e, 49 * e, 113 * e, 43 * e, 115 * e, 38 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(146 * e, 34 * e),
        n.bezierCurveTo(152 * e, 28 * e, 155 * e, 27 * e, 157 * e, 39 * e),
        n.bezierCurveTo(157 * e, 45 * e, 157 * e, 49 * e, 150 * e, 56 * e),
        n.bezierCurveTo(141 * e, 66 * e, 138 * e, 66 * e, 138 * e, 57 * e),
        n.bezierCurveTo(137 * e, 50 * e, 137 * e, 47 * e, 141 * e, 42 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(143 * e, 69 * e),
        n.bezierCurveTo(148 * e, 56 * e, 156 * e, 50 * e, 158 * e, 58 * e),
        n.bezierCurveTo(159 * e, 64 * e, 160 * e, 67 * e, 153 * e, 77 * e),
        n.bezierCurveTo(148 * e, 83 * e, 145 * e, 84 * e, 143 * e, 77 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(149 * e, 92 * e),
        n.bezierCurveTo(149 * e, 89 * e, 151 * e, 84 * e, 156 * e, 79 * e),
        n.bezierCurveTo(161 * e, 73 * e, 163 * e, 78 * e, 162 * e, 86 * e),
        n.bezierCurveTo(161 * e, 91 * e, 155 * e, 99 * e, 152 * e, 98 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(111 * e, 61 * e),
        n.bezierCurveTo(114 * e, 51 * e, 117 * e, 51 * e, 124 * e, 64 * e),
        n.bezierCurveTo(128 * e, 68 * e, 128 * e, 76 * e, 126 * e, 79 * e),
        n.bezierCurveTo(123 * e, 84 * e, 122 * e, 82 * e, 115 * e, 74 * e),
        n.bezierCurveTo(112 * e, 67 * e, 115 * e, 74 * e, 115 * e, 74 * e),
        n.bezierCurveTo(111 * e, 68 * e, 111 * e, 66 * e, 111 * e, 62 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(107 * e, 81 * e),
        n.bezierCurveTo(108 * e, 74 * e, 112 * e, 73 * e, 118 * e, 84 * e),
        n.bezierCurveTo(122 * e, 88 * e, 122 * e, 93 * e, 121 * e, 98 * e),
        n.bezierCurveTo(114 * e, 98 * e, 113 * e, 98 * e, 109 * e, 90 * e),
        n.bezierCurveTo(107 * e, 87 * e, 106 * e, 85 * e, 107 * e, 82 * e),
        n.closePath(),
        Ce(n, t[3], t[3], 8 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(133 * e, 99 * e),
        n.bezierCurveTo(186 * e, 123 * e, 199 * e, 152 * e, 209 * e, 169 * e),
        n.bezierCurveTo(228 * e, 205 * e, 224 * e, 245 * e, 190 * e, 276 * e),
        n.bezierCurveTo(161 * e, 296 * e, 99 * e, 292 * e, 79 * e, 274 * e),
        n.bezierCurveTo(49 * e, 253 * e, 47 * e, 214 * e, 50 * e, 197 * e),
        n.bezierCurveTo(61 * e, 143 * e, 102 * e, 113 * e, 131 * e, 99 * e),
        n.closePath(),
        Ce(n, t[1]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(73 * e, 270 * e),
        n.bezierCurveTo(79 * e, 280 * e, 77 * e, 280 * e, 78 * e, 287 * e),
        n.bezierCurveTo(78 * e, 290 * e, 83 * e, 291 * e, 82 * e, 299 * e),
        n.bezierCurveTo(81 * e, 301 * e, 87 * e, 301 * e, 92 * e, 314 * e),
        n.bezierCurveTo(94 * e, 319 * e, 100 * e, 321 * e, 107 * e, 320 * e),
        n.bezierCurveTo(111 * e, 323 * e, 114 * e, 324 * e, 119 * e, 320 * e),
        n.bezierCurveTo(137 * e, 321 * e, 146 * e, 323 * e, 139 * e, 320 * e),
        n.bezierCurveTo(141 * e, 324 * e, 150 * e, 324 * e, 153 * e, 320 * e),
        n.bezierCurveTo(168 * e, 319 * e, 171 * e, 316 * e, 173 * e, 307 * e),
        n.bezierCurveTo(180 * e, 305 * e, 180 * e, 301 * e, 178 * e, 296 * e),
        n.bezierCurveTo(183 * e, 296 * e, 185 * e, 289 * e, 188 * e, 279 * e),
        n.bezierCurveTo(171 * e, 286 * e, 149 * e, 290 * e, 132 * e, 289 * e),
        n.bezierCurveTo(101 * e, 290 * e, 86 * e, 280 * e, 74 * e, 271 * e),
        n.closePath(),
        Ce(n, t[5]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(76 * e, 252 * e),
        n.bezierCurveTo(85 * e, 294 * e, 96 * e, 314 * e, 103 * e, 314 * e),
        n.bezierCurveTo(106 * e, 316 * e, 151 * e, 314 * e, 156 * e, 314 * e),
        n.bezierCurveTo(169 * e, 317 * e, 182 * e, 285 * e, 191 * e, 256 * e),
        n.bezierCurveTo(134.5 * e, 254 * e, 134.5 * e, 254 * e, 78 * e, 252 * e),
        n.closePath(),
        Ce(n, t[2]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(84 * e, 257 * e),
        n.bezierCurveTo(122 * e, 273 * e, 146 * e, 268 * e, 179 * e, 261 * e),
        n.bezierCurveTo(190 * e, 258 * e, 187 * e, 266 * e, 178 * e, 272 * e),
        n.bezierCurveTo(160 * e, 284 * e, 123 * e, 282 * e, 100 * e, 277 * e),
        n.bezierCurveTo(73 * e, 260 * e, 79 * e, 257 * e, 84 * e, 257 * e),
        n.closePath(),
        Ce(n, t[1]),
        we(n, 102 * e, 269 * e, 11 * e),
        Ce(n, t[3]),
        we(n, 98 * e, 266 * e, 5 * e),
        Ce(n, t[6]),
        we(n, 168 * e, 269 * e, 11 * e),
        Ce(n, t[3]),
        we(n, 164 * e, 266 * e, 5 * e),
        Ce(n, t[6]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(125 * e, 65 * e),
        n.bezierCurveTo(133 * e, 45 * e, 136 * e, 42 * e, 141 * e, 55 * e),
        n.bezierCurveTo(151 * e, 96 * e, 164 * e, 117 * e, 175 * e, 134 * e),
        n.bezierCurveTo(203 * e, 181 * e, 207 * e, 182 * e, 208 * e, 215 * e),
        n.bezierCurveTo(206 * e, 240 * e, 205 * e, 246 * e, 184 * e, 258 * e),
        n.bezierCurveTo(161 * e, 267 * e, 131 * e, 272 * e, 86 * e, 258 * e),
        n.bezierCurveTo(67 * e, 252 * e, 68 * e, 239 * e, 64 * e, 216 * e),
        n.bezierCurveTo(62 * e, 194 * e, 72 * e, 169 * e, 92 * e, 142 * e),
        n.bezierCurveTo(106 * e, 121 * e, 114 * e, 101 * e, 125 * e, 65 * e),
        n.closePath(),
        Ce(n, t[2]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(115 * e, 235 * e),
        n.bezierCurveTo(118 * e, 258 * e, 137 * e, 268 * e, 148 * e, 246 * e),
        n.bezierCurveTo(156 * e, 228 * e, 152 * e, 169 * e, 150 * e, 140 * e),
        n.bezierCurveTo(147 * e, 87 * e, 143 * e, 69 * e, 142 * e, 60 * e),
        n.bezierCurveTo(136 * e, 44 * e, 132 * e, 43 * e, 127 * e, 62 * e),
        n.bezierCurveTo(119 * e, 116 * e, 119 * e, 140 * e, 116 * e, 166 * e),
        n.bezierCurveTo(113 * e, 202 * e, 113 * e, 223 * e, 115 * e, 233 * e),
        n.closePath(),
        Ce(n, t[4]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(132 * e, 219 * e),
        n.bezierCurveTo(140 * e, 229 * e, 142 * e, 231 * e, 145 * e, 237 * e),
        n.bezierCurveTo(145 * e, 245 * e, 139 * e, 249 * e, 133 * e, 249 * e),
        n.bezierCurveTo(123 * e, 248 * e, 123 * e, 243 * e, 121 * e, 239 * e),
        n.bezierCurveTo(126 * e, 227 * e, 129 * e, 223 * e, 132 * e, 219 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(133 * e, 179 * e),
        n.bezierCurveTo(140 * e, 188.5 * e, 140 * e, 188.5 * e, 147 * e, 198 * e),
        n.bezierCurveTo(148 * e, 209 * e, 142 * e, 214 * e, 133 * e, 214 * e),
        n.bezierCurveTo(121 * e, 211 * e, 121 * e, 207 * e, 120 * e, 200 * e),
        n.bezierCurveTo(126.5 * e, 189.5 * e, 126.5 * e, 189.5 * e, 133 * e, 179 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(133 * e, 143 * e),
        n.bezierCurveTo(139 * e, 151.5 * e, 139 * e, 151.5 * e, 145 * e, 160 * e),
        n.bezierCurveTo(143 * e, 167 * e, 140 * e, 170 * e, 134 * e, 170 * e),
        n.bezierCurveTo(128 * e, 169 * e, 124 * e, 167 * e, 123 * e, 161 * e),
        n.bezierCurveTo(128 * e, 152 * e, 128 * e, 152 * e, 133 * e, 143 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(133 * e, 115 * e),
        n.bezierCurveTo(137.5 * e, 121.5 * e, 137.5 * e, 121.5 * e, 142 * e, 128 * e),
        n.bezierCurveTo(141 * e, 133 * e, 138 * e, 135 * e, 133 * e, 135 * e),
        n.bezierCurveTo(129 * e, 135 * e, 125 * e, 132 * e, 125 * e, 129 * e),
        n.bezierCurveTo(129 * e, 122 * e, 129 * e, 122 * e, 133 * e, 115 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(133 * e, 94 * e),
        n.bezierCurveTo(136.5 * e, 98.5 * e, 136.5 * e, 98.5 * e, 140 * e, 103 * e),
        n.bezierCurveTo(139 * e, 109 * e, 137 * e, 109 * e, 133 * e, 110 * e),
        n.bezierCurveTo(127 * e, 108 * e, 129 * e, 107 * e, 127 * e, 105 * e),
        n.bezierCurveTo(130 * e, 99.5 * e, 130 * e, 99.5 * e, 133 * e, 94 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(130 * e, 279 * e),
        n.bezierCurveTo(136.5 * e, 287.5 * e, 136.5 * e, 287.5 * e, 143 * e, 296 * e),
        n.bezierCurveTo(143 * e, 302 * e, 139 * e, 309 * e, 131 * e, 308 * e),
        n.bezierCurveTo(123 * e, 306 * e, 121 * e, 303 * e, 120 * e, 297 * e),
        n.bezierCurveTo(125.5 * e, 288.5 * e, 125.5 * e, 288.5 * e, 131 * e, 280 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(147 * e, 303 * e),
        n.bezierCurveTo(151 * e, 311 * e, 151 * e, 319 * e, 147 * e, 321 * e),
        n.bezierCurveTo(138 * e, 320 * e, 145 * e, 308 * e, 147 * e, 303 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(115 * e, 303 * e),
        n.bezierCurveTo(115 * e, 312 * e, 118 * e, 319 * e, 115 * e, 319 * e),
        n.bezierCurveTo(112 * e, 324 * e, 109 * e, 318 * e, 109 * e, 314 * e),
        n.bezierCurveTo(109 * e, 308 * e, 112 * e, 303 * e, 115 * e, 303 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(89 * e, 280 * e),
        n.bezierCurveTo(83 * e, 279 * e, 80 * e, 281 * e, 81 * e, 286 * e),
        n.bezierCurveTo(83 * e, 290 * e, 84 * e, 290 * e, 87 * e, 286 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(94 * e, 290 * e),
        n.bezierCurveTo(93 * e, 294 * e, 90 * e, 303 * e, 86 * e, 298 * e),
        n.bezierCurveTo(84 * e, 295 * e, 84 * e, 291 * e, 89 * e, 291 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(163 * e, 295 * e),
        n.bezierCurveTo(175 * e, 294 * e, 176 * e, 296 * e, 175 * e, 301 * e),
        n.bezierCurveTo(174 * e, 305 * e, 171 * e, 305 * e, 166 * e, 300 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(172 * e, 286 * e),
        n.bezierCurveTo(180 * e, 285 * e, 181 * e, 285 * e, 180 * e, 291 * e),
        n.bezierCurveTo(176 * e, 295 * e, 174 * e, 294 * e, 172 * e, 286 * e),
        n.closePath(),
        Ce(n, t[8]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(115 * e, 37 * e),
        n.bezierCurveTo(116 * e, 28 * e, 119 * e, 27 * e, 126 * e, 37 * e),
        n.bezierCurveTo(134 * e, 48 * e, 134 * e, 49 * e, 132 * e, 59 * e),
        n.bezierCurveTo(131 * e, 67 * e, 127 * e, 65 * e, 120 * e, 56 * e),
        n.bezierCurveTo(114 * e, 49 * e, 113 * e, 43 * e, 115 * e, 38 * e),
        n.closePath(),
        Ce(n, t[7]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(146 * e, 34 * e),
        n.bezierCurveTo(152 * e, 28 * e, 155 * e, 27 * e, 157 * e, 39 * e),
        n.bezierCurveTo(157 * e, 45 * e, 157 * e, 49 * e, 150 * e, 56 * e),
        n.bezierCurveTo(141 * e, 66 * e, 138 * e, 66 * e, 138 * e, 57 * e),
        n.bezierCurveTo(137 * e, 50 * e, 137 * e, 47 * e, 141 * e, 42 * e),
        n.closePath(),
        Ce(n, t[7]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(143 * e, 69 * e),
        n.bezierCurveTo(148 * e, 56 * e, 156 * e, 50 * e, 158 * e, 58 * e),
        n.bezierCurveTo(159 * e, 64 * e, 160 * e, 67 * e, 153 * e, 77 * e),
        n.bezierCurveTo(148 * e, 83 * e, 145 * e, 84 * e, 143 * e, 77 * e),
        n.closePath(),
        Ce(n, t[7]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(149 * e, 92 * e),
        n.bezierCurveTo(149 * e, 89 * e, 151 * e, 84 * e, 156 * e, 79 * e),
        n.bezierCurveTo(161 * e, 73 * e, 163 * e, 78 * e, 162 * e, 86 * e),
        n.bezierCurveTo(161 * e, 91 * e, 155 * e, 99 * e, 152 * e, 98 * e),
        n.closePath(),
        Ce(n, t[7]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(111 * e, 61 * e),
        n.bezierCurveTo(114 * e, 51 * e, 117 * e, 51 * e, 124 * e, 64 * e),
        n.bezierCurveTo(128 * e, 68 * e, 128 * e, 76 * e, 126 * e, 79 * e),
        n.bezierCurveTo(123 * e, 84 * e, 122 * e, 82 * e, 115 * e, 74 * e),
        n.bezierCurveTo(112 * e, 67 * e, 115 * e, 74 * e, 115 * e, 74 * e),
        n.bezierCurveTo(111 * e, 68 * e, 111 * e, 66 * e, 111 * e, 62 * e),
        n.closePath(),
        Ce(n, t[7]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(107 * e, 81 * e),
        n.bezierCurveTo(108 * e, 74 * e, 112 * e, 73 * e, 118 * e, 84 * e),
        n.bezierCurveTo(122 * e, 88 * e, 122 * e, 93 * e, 121 * e, 98 * e),
        n.bezierCurveTo(114 * e, 98 * e, 113 * e, 98 * e, 109 * e, 90 * e),
        n.bezierCurveTo(107 * e, 87 * e, 106 * e, 85 * e, 107 * e, 82 * e),
        n.closePath(),
        Ce(n, t[7]),
        i
    }
    function Wt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 85 * e,
        i.height = 145 * e,
        n.translate(-20 * e, -95 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(50 * e, 105 * e),
        n.bezierCurveTo(52 * e, 119 * e, 64 * e, 137 * e, 71 * e, 146 * e),
        n.bezierCurveTo(71 * e, 161 * e, 74 * e, 169 * e, 79 * e, 179 * e),
        n.bezierCurveTo(68 * e, 192 * e, 70 * e, 204 * e, 69 * e, 216 * e),
        n.bezierCurveTo(50 * e, 189.5 * e, 50 * e, 189.5 * e, 31 * e, 163 * e),
        n.closePath(),
        Ce(n, t[1]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(44 * e, 106 * e),
        n.bezierCurveTo(49 * e, 90 * e, 58 * e, 104 * e, 51 * e, 121 * e),
        n.bezierCurveTo(45 * e, 143 * e, 41 * e, 151 * e, 37 * e, 162 * e),
        n.bezierCurveTo(48 * e, 180 * e, 58 * e, 188 * e, 76 * e, 205 * e),
        n.bezierCurveTo(104 * e, 209 * e, 105 * e, 229 * e, 92 * e, 235 * e),
        n.bezierCurveTo(76 * e, 239 * e, 75 * e, 232 * e, 56 * e, 213 * e),
        n.bezierCurveTo(31 * e, 187 * e, 28 * e, 176 * e, 23 * e, 162 * e),
        n.bezierCurveTo(38 * e, 131 * e, 40 * e, 120 * e, 44 * e, 106 * e),
        n.closePath(),
        Ce(n, t[2], t[3], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(30 * e, 159 * e),
        n.bezierCurveTo(46 * e, 157 * e, 59 * e, 152 * e, 68 * e, 148 * e),
        n.bezierCurveTo(63 * e, 155 * e, 52 * e, 160 * e, 44 * e, 164 * e),
        n.bezierCurveTo(59 * e, 169 * e, 66 * e, 174 * e, 75 * e, 178 * e),
        n.bezierCurveTo(58 * e, 178 * e, 49 * e, 175 * e, 37 * e, 174 * e),
        n.closePath(),
        Ce(n, t[2]),
        i
    }
    function Vt(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 85 * e,
        i.height = 145 * e,
        n.translate(-165 * e, -95 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(217 * e, 103 * e),
        n.bezierCurveTo(209 * e, 129 * e, 203 * e, 137 * e, 195 * e, 146 * e),
        n.bezierCurveTo(195 * e, 159 * e, 194 * e, 167 * e, 189 * e, 178 * e),
        n.bezierCurveTo(193 * e, 186 * e, 196 * e, 195 * e, 198 * e, 216 * e),
        n.bezierCurveTo(217.5 * e, 189.5 * e, 217.5 * e, 189.5 * e, 237 * e, 163 * e),
        n.closePath(),
        Ce(n, t[1]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(231 * e, 163 * e),
        n.bezierCurveTo(221 * e, 139 * e, 218 * e, 128 * e, 215 * e, 114 * e),
        n.bezierCurveTo(213 * e, 102 * e, 220 * e, 92 * e, 222 * e, 107 * e),
        n.bezierCurveTo(224 * e, 118 * e, 233 * e, 138 * e, 244 * e, 161 * e),
        n.bezierCurveTo(235 * e, 188 * e, 224 * e, 198 * e, 204 * e, 221 * e),
        n.bezierCurveTo(190 * e, 233 * e, 190 * e, 235 * e, 180 * e, 235 * e),
        n.bezierCurveTo(167 * e, 235 * e, 164 * e, 216 * e, 175 * e, 211 * e),
        n.bezierCurveTo(176 * e, 208 * e, 181 * e, 207 * e, 191 * e, 205 * e),
        n.bezierCurveTo(213 * e, 186 * e, 218 * e, 180 * e, 230 * e, 163 * e),
        n.closePath(),
        Ce(n, t[2], t[3], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(234 * e, 154 * e),
        n.bezierCurveTo(227 * e, 156 * e, 222 * e, 156 * e, 199 * e, 148 * e),
        n.bezierCurveTo(201 * e, 151 * e, 216 * e, 159 * e, 224 * e, 162 * e),
        n.bezierCurveTo(209 * e, 169.5 * e, 209 * e, 169.5 * e, 194 * e, 177 * e),
        n.bezierCurveTo(213.5 * e, 175 * e, 213.5 * e, 175 * e, 233 * e, 173 * e),
        n.closePath(),
        Ce(n, t[2]),
        i
    }
    function Ut(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 187 * e,
        n.height = 119 * e,
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(0, 3),
        r.moveTo(53 * e, 45 * e),
        r.bezierCurveTo(3 * e, 60 * e, 11 * e, 72 * e, 19 * e, 81 * e),
        r.bezierCurveTo(28 * e, 82 * e, 24 * e, 81 * e, 29 * e, 82 * e),
        r.bezierCurveTo(26 * e, 87 * e, 28 * e, 84 * e, 28 * e, 87 * e),
        r.bezierCurveTo(63 * e, 101 * e, 92 * e, 100 * e, 138 * e, 93 * e),
        r.bezierCurveTo(172 * e, 87 * e, 180 * e, 72 * e, 168 * e, 62 * e),
        r.bezierCurveTo(154 * e, 51 * e, 150 * e, 50 * e, 148 * e, 49 * e),
        r.bezierCurveTo(132 * e, 42 * e, 90 * e, 40 * e, 55 * e, 45 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(0, -3),
        r.moveTo(53 * e, 45 * e),
        r.bezierCurveTo(3 * e, 60 * e, 11 * e, 72 * e, 19 * e, 81 * e),
        r.bezierCurveTo(28 * e, 82 * e, 24 * e, 81 * e, 29 * e, 82 * e),
        r.bezierCurveTo(26 * e, 87 * e, 28 * e, 84 * e, 28 * e, 87 * e),
        r.bezierCurveTo(63 * e, 101 * e, 92 * e, 100 * e, 138 * e, 93 * e),
        r.bezierCurveTo(172 * e, 87 * e, 180 * e, 72 * e, 168 * e, 62 * e),
        r.bezierCurveTo(154 * e, 51 * e, 150 * e, 50 * e, 148 * e, 49 * e),
        r.bezierCurveTo(132 * e, 42 * e, 90 * e, 40 * e, 55 * e, 45 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(151 * e, 60 * e),
        r.bezierCurveTo(140 * e, 36 * e, 137 * e, 32 * e, 124 * e, 29 * e),
        r.bezierCurveTo(98 * e, 22 * e, 80 * e, 24 * e, 62 * e, 28 * e),
        r.bezierCurveTo(42 * e, 35 * e, 38 * e, 46 * e, 34 * e, 58 * e),
        r.bezierCurveTo(53 * e, 74 * e, 76 * e, 76 * e, 91 * e, 78 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(37 * e, 53 * e),
        r.bezierCurveTo(30 * e, 56 * e, 29 * e, 67 * e, 30 * e, 68 * e),
        r.bezierCurveTo(94 * e, 108 * e, 150 * e, 76 * e, 155 * e, 70 * e),
        r.bezierCurveTo(154 * e, 60 * e, 151 * e, 54 * e, 149 * e, 53 * e),
        r.bezierCurveTo(101 * e, 74 * e, 66 * e, 66 * e, 37 * e, 53 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(100 * e, 36 * e),
        r.bezierCurveTo(92 * e, 25 * e, 86 * e, 28 * e, 82 * e, 34 * e),
        r.bezierCurveTo(88 * e, 40 * e, 93 * e, 40 * e, 98 * e, 36 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(80 * e, 43 * e),
        r.bezierCurveTo(69 * e, 46 * e, 67 * e, 52 * e, 69 * e, 58 * e),
        Ce(r, void 0, i[1], 4 * e),
        we(r, 58 * e, 50 * e, 5 * e),
        Ce(r, i[4]),
        we(r, 43 * e, 65 * e, 5 * e),
        Ce(r, i[4]),
        we(r, 58 * e, 73 * e, 5 * e),
        Ce(r, i[4]),
        we(r, 58 * e, 50 * e, 2 * e),
        Ce(r, i[5]),
        we(r, 43 * e, 65 * e, 2 * e),
        Ce(r, i[5]),
        we(r, 58 * e, 73 * e, 2 * e),
        Ce(r, i[5]),
        n
    }
    function Kt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 180 * e,
        n.height = 120 * e,
        r.translate(-65 * e, -35 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 10 * e),
        r.save(),
        r.translate(150.5 * e, 63.84375 * e),
        Be(r, -67 * e, -16.5 * e, 134 * e, 33 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(80.5 * e, 75.34375 * e),
        r.bezierCurveTo(83 * e, 106.34375 * e, 83 * e, 106.34375 * e, 85.5 * e, 137.34375 * e),
        r.bezierCurveTo(93 * e, 135.84375 * e, 93 * e, 135.84375 * e, 100.5 * e, 134.34375 * e),
        r.bezierCurveTo(99.5 * e, 100.84375 * e, 99.5 * e, 100.84375 * e, 98.5 * e, 67.34375 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(206.5 * e, 71.34375 * e),
        r.bezierCurveTo(203.5 * e, 104.34375 * e, 203.5 * e, 104.34375 * e, 200.5 * e, 137.34375 * e),
        r.bezierCurveTo(208.5 * e, 137.34375 * e, 208.5 * e, 137.34375 * e, 216.5 * e, 137.34375 * e),
        r.bezierCurveTo(219 * e, 102.84375 * e, 219 * e, 102.84375 * e, 221.5 * e, 68.34375 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(136.5 * e, 75.34375 * e),
        r.bezierCurveTo(139 * e, 94.34375 * e, 139 * e, 94.34375 * e, 141.5 * e, 113.34375 * e),
        r.bezierCurveTo(149.5 * e, 115.34375 * e, 149.5 * e, 115.34375 * e, 157.5 * e, 117.34375 * e),
        r.bezierCurveTo(162 * e, 97.34375 * e, 162 * e, 97.34375 * e, 166.5 * e, 77.34375 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.save(),
        r.translate(152.5 * e, 80.84375 * e),
        r.rotate(3.12),
        Be(r, -73 * e, -20.5 * e, 146 * e, 41 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -10 * e),
        r.save(),
        r.translate(150.5 * e, 63.84375 * e),
        Be(r, -67 * e, -16.5 * e, 134 * e, 33 * e, 5 * e),
        r.restore(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(80.5 * e, 75.34375 * e),
        r.bezierCurveTo(83 * e, 106.34375 * e, 83 * e, 106.34375 * e, 85.5 * e, 137.34375 * e),
        r.bezierCurveTo(93 * e, 135.84375 * e, 93 * e, 135.84375 * e, 100.5 * e, 134.34375 * e),
        r.bezierCurveTo(99.5 * e, 100.84375 * e, 99.5 * e, 100.84375 * e, 98.5 * e, 67.34375 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(206.5 * e, 71.34375 * e),
        r.bezierCurveTo(203.5 * e, 104.34375 * e, 203.5 * e, 104.34375 * e, 200.5 * e, 137.34375 * e),
        r.bezierCurveTo(208.5 * e, 137.34375 * e, 208.5 * e, 137.34375 * e, 216.5 * e, 137.34375 * e),
        r.bezierCurveTo(219 * e, 102.84375 * e, 219 * e, 102.84375 * e, 221.5 * e, 68.34375 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(136.5 * e, 75.34375 * e),
        r.bezierCurveTo(139 * e, 94.34375 * e, 139 * e, 94.34375 * e, 141.5 * e, 113.34375 * e),
        r.bezierCurveTo(149.5 * e, 115.34375 * e, 149.5 * e, 115.34375 * e, 157.5 * e, 117.34375 * e),
        r.bezierCurveTo(162 * e, 97.34375 * e, 162 * e, 97.34375 * e, 166.5 * e, 77.34375 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.save(),
        r.translate(152.5 * e, 80.84375 * e),
        r.rotate(3.12),
        Be(r, -73 * e, -20.5 * e, 146 * e, 41 * e, 5 * e),
        r.restore(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(83.5 * e, 73.34375 * e),
        r.bezierCurveTo(93.5 * e, 70.34375 * e, 105.5 * e, 70.34375 * e, 124.5 * e, 72.34375 * e),
        r.bezierCurveTo(132.5 * e, 78.34375 * e, 162.5 * e, 80.34375 * e, 176.5 * e, 76.34375 * e),
        r.bezierCurveTo(194.5 * e, 69.34375 * e, 192.5 * e, 68.34375 * e, 199.5 * e, 63.34375 * e),
        r.bezierCurveTo(204.5 * e, 63.34375 * e, 204.5 * e, 63.34375 * e, 209.5 * e, 63.34375 * e),
        r.bezierCurveTo(153.5 * e, 82.34375 * e, 157.5 * e, 85.34375 * e, 209.5 * e, 63.34375 * e),
        r.bezierCurveTo(194.5 * e, 88.34375 * e, 162.5 * e, 87.34375 * e, 149.5 * e, 88.34375 * e),
        r.bezierCurveTo(129.5 * e, 81.34375 * e, 103.5 * e, 75.34375 * e, 83.5 * e, 82.34375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(137.5 * e, 65.34375 * e),
        r.bezierCurveTo(150.5 * e, 76.34375 * e, 170.5 * e, 71.34375 * e, 174.5 * e, 65.34375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(221.5 * e, 85.34375 * e),
        r.bezierCurveTo(211.5 * e, 79.34375 * e, 191.5 * e, 88.34375 * e, 181.5 * e, 96.34375 * e),
        r.bezierCurveTo(201.5 * e, 96.34375 * e, 201.5 * e, 96.34375 * e, 221.5 * e, 96.34375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(84.5 * e, 89.34375 * e),
        r.bezierCurveTo(102.5 * e, 87.34375 * e, 112.5 * e, 88.34375 * e, 119.5 * e, 97.34375 * e),
        r.bezierCurveTo(102 * e, 98.34375 * e, 102 * e, 98.34375 * e, 84.5 * e, 99.34375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(208.5 * e, 104.34375 * e),
        r.bezierCurveTo(208.5 * e, 110.34375 * e, 208.5 * e, 110.34375 * e, 208.5 * e, 116.34375 * e),
        r.bezierCurveTo(211.5 * e, 110.34375 * e, 211.5 * e, 110.34375 * e, 214.5 * e, 104.34375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(87.5 * e, 117.34375 * e),
        r.bezierCurveTo(92 * e, 118.84375 * e, 92 * e, 118.84375 * e, 96.5 * e, 120.34375 * e),
        r.bezierCurveTo(93 * e, 123.84375 * e, 93 * e, 123.84375 * e, 89.5 * e, 127.34375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(107.5 * e, 51.34375 * e),
        r.bezierCurveTo(122.5 * e, 54.34375 * e, 122.5 * e, 54.34375 * e, 137.5 * e, 57.34375 * e),
        r.bezierCurveTo(118 * e, 57.34375 * e, 118 * e, 57.34375 * e, 98.5 * e, 57.34375 * e),
        r.bezierCurveTo(94.5 * e, 54.84375 * e, 94.5 * e, 54.84375 * e, 90.5 * e, 52.34375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(170.5 * e, 52.34375 * e),
        r.bezierCurveTo(179.5 * e, 51.84375 * e, 179.5 * e, 51.84375 * e, 188.5 * e, 51.34375 * e),
        r.bezierCurveTo(187.5 * e, 53.84375 * e, 187.5 * e, 53.84375 * e, 186.5 * e, 56.34375 * e),
        r.bezierCurveTo(177 * e, 56.34375 * e, 177 * e, 56.34375 * e, 167.5 * e, 56.34375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(80.5 * e, 69.34375 * e),
        r.bezierCurveTo(86.5 * e, 70.34375 * e, 86.5 * e, 70.34375 * e, 92.5 * e, 71.34375 * e),
        r.bezierCurveTo(86 * e, 73.34375 * e, 86 * e, 73.34375 * e, 79.5 * e, 75.34375 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(222.5 * e, 75.34375 * e),
        r.bezierCurveTo(214.5 * e, 76.34375 * e, 214.5 * e, 76.34375 * e, 206.5 * e, 77.34375 * e),
        r.bezierCurveTo(216.5 * e, 79.34375 * e, 216.5 * e, 79.34375 * e, 226.5 * e, 81.34375 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(116.5 * e, 100.34375 * e),
        r.bezierCurveTo(128 * e, 97.34375 * e, 128 * e, 97.34375 * e, 139.5 * e, 94.34375 * e),
        r.bezierCurveTo(140 * e, 96.84375 * e, 140 * e, 96.84375 * e, 140.5 * e, 99.34375 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(112.5 * e, 48.34375 * e),
        r.bezierCurveTo(115.5 * e, 50.84375 * e, 115.5 * e, 50.84375 * e, 118.5 * e, 53.34375 * e),
        r.bezierCurveTo(131 * e, 50.84375 * e, 131 * e, 50.84375 * e, 143.5 * e, 48.34375 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(216.5 * e, 109.34375 * e),
        r.bezierCurveTo(213 * e, 114.84375 * e, 213 * e, 114.84375 * e, 209.5 * e, 120.34375 * e),
        r.bezierCurveTo(212 * e, 118.84375 * e, 212 * e, 118.84375 * e, 214.5 * e, 117.34375 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(86.5 * e, 133.34375 * e),
        r.bezierCurveTo(89 * e, 127.34375 * e, 89 * e, 127.34375 * e, 91.5 * e, 121.34375 * e),
        r.bezierCurveTo(92.5 * e, 127.34375 * e, 92.5 * e, 127.34375 * e, 93.5 * e, 133.34375 * e),
        r.closePath(),
        Ce(r, i[2]),
        n
    }
    function xt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 175 * e,
        n.height = 106 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(28 * e, 67 * e),
        r.bezierCurveTo(55 * e, 80 * e, 126 * e, 74 * e, 144 * e, 68 * e),
        r.bezierCurveTo(144.5 * e, 75 * e, 144.5 * e, 75 * e, 145 * e, 82 * e),
        r.bezierCurveTo(114 * e, 94 * e, 47 * e, 91 * e, 28 * e, 82 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(145 * e, 75 * e),
        r.bezierCurveTo(143 * e, 51 * e, 133 * e, 29 * e, 100 * e, 27 * e),
        r.bezierCurveTo(52 * e, 21 * e, 37 * e, 37 * e, 31 * e, 54 * e),
        r.bezierCurveTo(23 * e, 78 * e, 28 * e, 77 * e, 36 * e, 79 * e),
        r.bezierCurveTo(80 * e, 87 * e, 120 * e, 81 * e, 145 * e, 76 * e),
        r.closePath(),
        Ce(r, i[1]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(38 * e, 46 * e),
        r.bezierCurveTo(52 * e, 37 * e, 69 * e, 36 * e, 85 * e, 36 * e),
        r.bezierCurveTo(118 * e, 38 * e, 129 * e, 42 * e, 137 * e, 48 * e),
        r.bezierCurveTo(135 * e, 45 * e, 135 * e, 45 * e, 133 * e, 42 * e),
        r.bezierCurveTo(124 * e, 32 * e, 116 * e, 28 * e, 88 * e, 25 * e),
        r.bezierCurveTo(47 * e, 28 * e, 40 * e, 32 * e, 36 * e, 44 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(145 * e, 75 * e),
        r.bezierCurveTo(143 * e, 51 * e, 133 * e, 29 * e, 100 * e, 27 * e),
        r.bezierCurveTo(52 * e, 21 * e, 37 * e, 37 * e, 31 * e, 54 * e),
        r.bezierCurveTo(23 * e, 78 * e, 28 * e, 77 * e, 36 * e, 79 * e),
        r.bezierCurveTo(80 * e, 87 * e, 120 * e, 81 * e, 145 * e, 76 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 4 * e),
        r.translate(0, -3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(28 * e, 67 * e),
        r.bezierCurveTo(55 * e, 80 * e, 126 * e, 74 * e, 144 * e, 68 * e),
        r.bezierCurveTo(144.5 * e, 75 * e, 144.5 * e, 75 * e, 145 * e, 82 * e),
        r.bezierCurveTo(114 * e, 94 * e, 47 * e, 91 * e, 28 * e, 82 * e),
        r.closePath(),
        Ce(r, i[10], i[10], 4 * e),
        r.translate(0, 3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(131 * e, 43 * e),
        r.bezierCurveTo(145 * e, 40 * e, 148 * e, 32 * e, 147 * e, 17 * e),
        r.bezierCurveTo(166 * e, 39 * e, 155 * e, 62 * e, 140 * e, 67 * e),
        r.bezierCurveTo(128 * e, 65 * e, 128 * e, 52 * e, 131 * e, 45 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(41 * e, 43 * e),
        r.bezierCurveTo(30 * e, 42 * e, 24 * e, 33 * e, 25 * e, 17 * e),
        r.bezierCurveTo(7 * e, 34 * e, 17 * e, 63 * e, 33 * e, 66 * e),
        r.bezierCurveTo(45 * e, 59 * e, 44 * e, 53 * e, 42 * e, 44 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(24 * e, 19 * e),
        r.bezierCurveTo(24 * e, 35 * e, 35 * e, 42 * e, 42 * e, 44 * e),
        r.bezierCurveTo(43 * e, 51 * e, 43 * e, 48 * e, 43 * e, 56 * e),
        r.bezierCurveTo(25 * e, 47 * e, 17 * e, 36 * e, 23 * e, 20 * e),
        r.closePath(),
        Ce(r, i[6]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(148 * e, 18 * e),
        r.bezierCurveTo(159 * e, 44 * e, 139 * e, 52 * e, 130 * e, 55 * e),
        r.bezierCurveTo(129 * e, 48 * e, 129 * e, 46 * e, 131 * e, 43 * e),
        r.bezierCurveTo(144 * e, 37 * e, 148 * e, 35 * e, 147 * e, 18 * e),
        r.closePath(),
        Ce(r, i[6]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(131 * e, 43 * e),
        r.bezierCurveTo(145 * e, 40 * e, 148 * e, 32 * e, 147 * e, 17 * e),
        r.bezierCurveTo(166 * e, 39 * e, 155 * e, 62 * e, 140 * e, 67 * e),
        r.bezierCurveTo(128 * e, 65 * e, 128 * e, 52 * e, 131 * e, 45 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(41 * e, 43 * e),
        r.bezierCurveTo(30 * e, 42 * e, 24 * e, 33 * e, 25 * e, 17 * e),
        r.bezierCurveTo(7 * e, 34 * e, 17 * e, 63 * e, 33 * e, 66 * e),
        r.bezierCurveTo(45 * e, 59 * e, 44 * e, 53 * e, 42 * e, 44 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 4 * e),
        r.save(),
        r.translate(87 * e, 34.5 * e),
        r.rotate(0),
        Be(r, -8 * e, -10.5 * e, 16 * e, 21 * e, 10 * e),
        r.restore(),
        Ce(r, i[7], i[2], 4 * e),
        r.save(),
        r.translate(87 * e, 57 * e),
        r.rotate(0),
        Be(r, -8 * e, -23 * e, 16 * e, 46 * e, 10 * e),
        r.restore(),
        Ce(r, i[8], i[2], 4 * e),
        we(r, 87 * e, 39 * e, 4.123105625617661 * e),
        Ce(r, i[9], i[2], 4 * e),
        we(r, 87 * e, 60 * e, 4.242640687119285 * e),
        Ce(r, i[9], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(28 * e, 67 * e),
        r.bezierCurveTo(55 * e, 80 * e, 126 * e, 74 * e, 144 * e, 68 * e),
        r.bezierCurveTo(144.5 * e, 75 * e, 144.5 * e, 75 * e, 145 * e, 82 * e),
        r.bezierCurveTo(114 * e, 94 * e, 47 * e, 91 * e, 28 * e, 82 * e),
        r.closePath(),
        Ce(r, i[8], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(27 * e, 69 * e),
        r.bezierCurveTo(13 * e, 77 * e, 16 * e, 74 * e, 27 * e, 80 * e),
        r.closePath(),
        Ce(r, i[9], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(145 * e, 70 * e),
        r.bezierCurveTo(149.5 * e, 72 * e, 149.5 * e, 72 * e, 154 * e, 74 * e),
        r.bezierCurveTo(150 * e, 77 * e, 150 * e, 77 * e, 146 * e, 80 * e),
        r.closePath(),
        Ce(r, i[9], i[2], 4 * e),
        we(r, 50 * e, 80 * e, 5 * e),
        Ce(r, i[9], i[2], 4 * e),
        we(r, 86.01141357421875 * e, 81.76705932617188 * e, 5 * e),
        Ce(r, i[9], i[2], 4 * e),
        we(r, 119.01141357421875 * e, 80.13069152832031 * e, 5 * e),
        Ce(r, i[9], i[2], 4 * e),
        n
    }
    function Ft(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 142 * e,
        n.height = 118 * e,
        r.save(),
        r.translate(70.16665649414062 * e, 38.20831298828125 * e),
        Be(r, -58.5 * e, -27.5 * e, 117 * e, 55 * e, 20 * e),
        r.restore(),
        Ce(r, i[0], i[1], 4 * e),
        r.save(),
        r.translate(70 * e, 42.70831298828125 * e),
        Be(r, -61 * e, -20 * e, 122 * e, 40 * e, 20 * e),
        r.restore(),
        Ce(r, i[2], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(123 * e, 70.375 * e),
        r.bezierCurveTo(115 * e, 99.375 * e, 119 * e, 85.375 * e, 115 * e, 100.375 * e),
        r.bezierCurveTo(112 * e, 116.375 * e, 117 * e, 109.375 * e, 131 * e, 100.375 * e),
        r.bezierCurveTo(131 * e, 83.375 * e, 131 * e, 83.375 * e, 131 * e, 66.375 * e),
        r.closePath(),
        Ce(r, i[2], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(11 * e, 68.375 * e),
        r.bezierCurveTo(11.166656494140625 * e, 84.375 * e, 9 * e, 99.375 * e, 10 * e, 100.375 * e),
        r.bezierCurveTo(35 * e, 113.375 * e, 27 * e, 110.375 * e, 25 * e, 95.375 * e),
        r.bezierCurveTo(16 * e, 68.375 * e, 17 * e, 69.375 * e, 17 * e, 68.375 * e),
        r.closePath(),
        Ce(r, i[2], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(46 * e, 32.375 * e),
        r.bezierCurveTo(43 * e, 8.375 * e, 45 * e, 7.375 * e, 56 * e, 6.375 * e),
        r.bezierCurveTo(105 * e, 4.375 * e, 102 * e, 6.375 * e, 97 * e, 32.375 * e),
        r.bezierCurveTo(138 * e, 43.375 * e, 133 * e, 45.375 * e, 133 * e, 58.375 * e),
        r.bezierCurveTo(133 * e, 85.375 * e, 125 * e, 74.375 * e, 111 * e, 70.375 * e),
        r.bezierCurveTo(70 * e, 69.875 * e, 29 * e, 69.375 * e, 29 * e, 69.375 * e),
        r.bezierCurveTo(7 * e, 84.375 * e, 7 * e, 70.375 * e, 7 * e, 59.375 * e),
        r.bezierCurveTo(6 * e, 28.375 * e, 32 * e, 39.375 * e, 44 * e, 32.375 * e),
        r.closePath(),
        Ce(r, i[2], i[1], 4 * e),
        we(r, 71 * e, 44.375 * e, 16.55294535724685 * e),
        Ce(r, i[2], i[1], 4 * e),
        we(r, 71 * e, 43.70831298828125 * e, 8.94427190999916 * e),
        Ce(r, i[2], i[1], 4 * e),
        n
    }
    function Yt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 142 * e,
        n.height = 118 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(111 * e, 27.3671875 * e),
        r.bezierCurveTo(128 * e, 9.3671875 * e, 125 * e, 13.3671875 * e, 126 * e, 21.3671875 * e),
        r.bezierCurveTo(126 * e, 33.3671875 * e, 119 * e, 43.3671875 * e, 118 * e, 42.3671875 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(31 * e, 23.3671875 * e),
        r.bezierCurveTo(17 * e, 15.3671875 * e, 16 * e, 14.3671875 * e, 17 * e, 20.3671875 * e),
        r.bezierCurveTo(22 * e, 33.3671875 * e, 20 * e, 27.3671875 * e, 24 * e, 34.3671875 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.save(),
        r.translate(70.5 * e, 34.8671875 * e),
        r.rotate(0),
        Be(r, -49.5 * e, -21.5 * e, 99 * e, 43 * e, 15 * e),
        r.restore(),
        Ce(r, i[0], i[1], 4 * e),
        r.save(),
        r.translate(71 * e, 40.8671875 * e),
        r.rotate(0),
        Be(r, -49 * e, -12.5 * e, 98 * e, 25 * e, 15 * e),
        r.restore(),
        Ce(r, i[2], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(19.800003051757812 * e, 75.95625305175781 * e),
        r.bezierCurveTo(19.300003051757812 * e, 82.95625305175781 * e, 19.300003051757812 * e, 82.95625305175781 * e, 18.800003051757812 * e, 89.95625305175781 * e),
        r.bezierCurveTo(38.80000305175781 * e, 115.95625305175781 * e, 37.80000305175781 * e, 104.95625305175781 * e, 31.800003051757812 * e, 91.95625305175781 * e),
        r.closePath(),
        Ce(r, i[2], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(119.80000305175781 * e, 75.95625305175781 * e),
        r.bezierCurveTo(120.80000305175781 * e, 82.95625305175781 * e, 120.80000305175781 * e, 82.95625305175781 * e, 121.80000305175781 * e, 89.95625305175781 * e),
        r.bezierCurveTo(101.80000305175781 * e, 111.95625305175781 * e, 99.80000305175781 * e, 111.95625305175781 * e, 112.80000305175781 * e, 81.95625305175781 * e),
        r.closePath(),
        Ce(r, i[2], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(17.800003051757812 * e, 49.15625 * e),
        r.bezierCurveTo(17.800003051757812 * e, 64.15625 * e, 17.800003051757812 * e, 64.15625 * e, 17.800003051757812 * e, 79.15625 * e),
        r.bezierCurveTo(23.300003051757812 * e, 85.15625 * e, 23.300003051757812 * e, 85.15625 * e, 28.800003051757812 * e, 91.15625 * e),
        r.bezierCurveTo(36.80000305175781 * e, 96.15625 * e, 32.80000305175781 * e, 91.15625 * e, 28.800003051757812 * e, 77.15625 * e),
        r.bezierCurveTo(33.80000305175781 * e, 65.15625 * e, 33.80000305175781 * e, 65.15625 * e, 38.80000305175781 * e, 53.15625 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(123.80000305175781 * e, 53.95625305175781 * e),
        r.bezierCurveTo(121.80000305175781 * e, 77.95625305175781 * e, 121.80000305175781 * e, 74.95625305175781 * e, 121.80000305175781 * e, 78.95625305175781 * e),
        r.bezierCurveTo(115.80000305175781 * e, 84.95625305175781 * e, 115.80000305175781 * e, 84.95625305175781 * e, 109.80000305175781 * e, 90.95625305175781 * e),
        r.bezierCurveTo(102.80000305175781 * e, 93.95625305175781 * e, 105.80000305175781 * e, 86.95625305175781 * e, 110.80000305175781 * e, 76.95625305175781 * e),
        r.bezierCurveTo(107.30000305175781 * e, 65.45625305175781 * e, 103.80000305175781 * e, 53.95625305175781 * e, 103.80000305175781 * e, 53.95625305175781 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(18 * e, 56.3671875 * e),
        r.bezierCurveTo(70 * e, 56.8671875 * e, 70 * e, 56.8671875 * e, 122 * e, 57.3671875 * e),
        r.bezierCurveTo(137 * e, 20.3671875 * e, 137 * e, 16.3671875 * e, 126 * e, 22.3671875 * e),
        r.bezierCurveTo(115.5 * e, 34.3671875 * e, 115.5 * e, 34.3671875 * e, 105 * e, 46.3671875 * e),
        r.bezierCurveTo(70.5 * e, 46.3671875 * e, 70.5 * e, 46.3671875 * e, 36 * e, 46.3671875 * e),
        r.bezierCurveTo(4 * e, 14.3671875 * e, 7 * e, 18.3671875 * e, 8 * e, 27.3671875 * e),
        r.bezierCurveTo(12.5 * e, 41.8671875 * e, 12.5 * e, 41.8671875 * e, 17 * e, 56.3671875 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.save(),
        r.translate(68.30000305175781 * e, 41.45625305175781 * e),
        r.rotate(.76),
        Be(r, -20.5 * e, -20.5 * e, 41 * e, 41 * e, 10 * e),
        r.restore(),
        Ce(r, void 0, i[5], 4 * e),
        r.save(),
        r.translate(68.80000305175781 * e, 44.45625305175781 * e),
        r.rotate(.76),
        Be(r, -21 * e, -20.5 * e, 42 * e, 41 * e, 10 * e),
        r.restore(),
        Ce(r, i[3], i[4], 4 * e),
        r.save(),
        r.translate(69.80000305175781 * e, 44.556243896484375 * e),
        r.rotate(.76),
        Be(r, -10 * e, -10 * e, 20 * e, 20 * e, 5 * e),
        r.restore(),
        Ce(r, i[6], i[7], 4 * e),
        n
    }
    function Jt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 145 * e,
        n.height = 120 * e,
        r.beginPath(),
        r.scale(.6, .6),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(18 * e, -8 * e),
        r.moveTo(101 * e, 72 * e),
        r.bezierCurveTo(144 * e, 69 * e, 149 * e, 58 * e, 162 * e, 49 * e),
        r.bezierCurveTo(174 * e, 31 * e, 173 * e, 38 * e, 172 * e, 45 * e),
        r.bezierCurveTo(168 * e, 73 * e, 158 * e, 75 * e, 152 * e, 78 * e),
        r.bezierCurveTo(106 * e, 89 * e, 107 * e, 91 * e, 107 * e, 94 * e),
        r.bezierCurveTo(107 * e, 100 * e, 107 * e, 107 * e, 107 * e, 107 * e),
        r.bezierCurveTo(99 * e, 112 * e, 98 * e, 110 * e, 93 * e, 107 * e),
        r.bezierCurveTo(94 * e, 107 * e, 93 * e, 107 * e, 93 * e, 107 * e),
        r.bezierCurveTo(93 * e, 100 * e, 93 * e, 100 * e, 92 * e, 94 * e),
        r.bezierCurveTo(92 * e, 89 * e, 90 * e, 90 * e, 73 * e, 86 * e),
        r.bezierCurveTo(45 * e, 81 * e, 40 * e, 77 * e, 35 * e, 68 * e),
        r.bezierCurveTo(23 * e, 36 * e, 28 * e, 34 * e, 36 * e, 46 * e),
        r.bezierCurveTo(45 * e, 58 * e, 83 * e, 72 * e, 98 * e, 72 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 4 * e),
        r.beginPath(),
        r.scale(1.1, 1.1),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(-9 * e, 4 * e),
        r.moveTo(101 * e, 72 * e),
        r.bezierCurveTo(144 * e, 69 * e, 149 * e, 58 * e, 162 * e, 49 * e),
        r.bezierCurveTo(174 * e, 31 * e, 173 * e, 38 * e, 172 * e, 45 * e),
        r.bezierCurveTo(168 * e, 73 * e, 158 * e, 75 * e, 152 * e, 78 * e),
        r.bezierCurveTo(106 * e, 89 * e, 107 * e, 91 * e, 107 * e, 94 * e),
        r.bezierCurveTo(107 * e, 100 * e, 107 * e, 107 * e, 107 * e, 107 * e),
        r.bezierCurveTo(99 * e, 112 * e, 98 * e, 110 * e, 93 * e, 107 * e),
        r.bezierCurveTo(94 * e, 107 * e, 93 * e, 107 * e, 93 * e, 107 * e),
        r.bezierCurveTo(93 * e, 100 * e, 93 * e, 100 * e, 92 * e, 94 * e),
        r.bezierCurveTo(92 * e, 89 * e, 90 * e, 90 * e, 73 * e, 86 * e),
        r.bezierCurveTo(45 * e, 81 * e, 40 * e, 77 * e, 35 * e, 68 * e),
        r.bezierCurveTo(23 * e, 36 * e, 28 * e, 34 * e, 36 * e, 46 * e),
        r.bezierCurveTo(45 * e, 58 * e, 83 * e, 72 * e, 98 * e, 72 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 4 * e),
        r.scale(1.1, 1.1),
        r.translate(-9 * e, 4 * e),
        r.save(),
        r.translate(100 * e, 73.06874084472656 * e),
        r.rotate(0),
        Be(r, -61 * e, -38.5 * e, 122 * e, 40 * e, 20 * e),
        r.restore(),
        Ce(r, i[1], i[2], 4 * e),
        r.save(),
        r.translate(100 * e, 71.36874389648438 * e),
        r.rotate(0),
        Be(r, -60.5 * e, -18 * e, 121 * e, 30 * e, 20 * e),
        r.restore(),
        Ce(r, i[3], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(144 * e, 80 * e),
        r.bezierCurveTo(152 * e, 100 * e, 152 * e, 101 * e, 153 * e, 102 * e),
        r.bezierCurveTo(159 * e, 100 * e, 159 * e, 100 * e, 160 * e, 100 * e),
        r.bezierCurveTo(161 * e, 84 * e, 161 * e, 84 * e, 162 * e, 68 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(57 * e, 75 * e),
        r.bezierCurveTo(48 * e, 101 * e, 53 * e, 89 * e, 48 * e, 102 * e),
        r.bezierCurveTo(44 * e, 100 * e, 44 * e, 100 * e, 39 * e, 97 * e),
        r.bezierCurveTo(39 * e, 83 * e, 39 * e, 83 * e, 39 * e, 69 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(101 * e, 72 * e),
        r.bezierCurveTo(144 * e, 69 * e, 149 * e, 58 * e, 162 * e, 49 * e),
        r.bezierCurveTo(174 * e, 31 * e, 173 * e, 38 * e, 172 * e, 45 * e),
        r.bezierCurveTo(168 * e, 73 * e, 158 * e, 75 * e, 152 * e, 78 * e),
        r.bezierCurveTo(106 * e, 89 * e, 107 * e, 91 * e, 107 * e, 94 * e),
        r.bezierCurveTo(107 * e, 100 * e, 107 * e, 107 * e, 107 * e, 107 * e),
        r.bezierCurveTo(99 * e, 112 * e, 98 * e, 110 * e, 93 * e, 107 * e),
        r.bezierCurveTo(94 * e, 107 * e, 93 * e, 107 * e, 93 * e, 107 * e),
        r.bezierCurveTo(93 * e, 100 * e, 93 * e, 100 * e, 92 * e, 94 * e),
        r.bezierCurveTo(92 * e, 89 * e, 90 * e, 90 * e, 73 * e, 86 * e),
        r.bezierCurveTo(45 * e, 81 * e, 40 * e, 77 * e, 35 * e, 68 * e),
        r.bezierCurveTo(23 * e, 36 * e, 28 * e, 34 * e, 36 * e, 46 * e),
        r.bezierCurveTo(45 * e, 58 * e, 83 * e, 72 * e, 98 * e, 72 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 4 * e),
        r.translate(0, 0),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(115.5 * e, 116.07290649414062 * e),
        r.bezierCurveTo(159.5 * e, 99.07290649414062 * e, 159.5 * e, 98.07290649414062 * e, 159.5 * e, 98.07290649414062 * e),
        r.bezierCurveTo(155.5 * e, 116.07290649414062 * e, 159.5 * e, 116.07290649414062 * e, 159.5 * e, 118.07290649414062 * e),
        r.bezierCurveTo(147.5 * e, 130.07290649414062 * e, 136.5 * e, 132.07290649414062 * e, 115.5 * e, 138.07290649414062 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(39.5 * e, 96.07290649414062 * e),
        r.bezierCurveTo(85.5 * e, 114.07290649414062 * e, 62.5 * e, 105.57290649414062 * e, 85.5 * e, 115.07290649414062 * e),
        r.bezierCurveTo(85.5 * e, 125.57290649414062 * e, 85.5 * e, 125.57290649414062 * e, 85.5 * e, 136.07290649414062 * e),
        r.bezierCurveTo(51.5 * e, 129.07290649414062 * e, 51.5 * e, 125.07290649414062 * e, 41.5 * e, 118.07290649414062 * e),
        r.bezierCurveTo(44.5 * e, 106.07290649414062 * e, 42.5 * e, 103.07290649414062 * e, 40.5 * e, 96.07290649414062 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(86 * e, 80 * e),
        r.bezierCurveTo(97 * e, 88 * e, 106 * e, 84 * e, 112 * e, 80 * e),
        r.bezierCurveTo(112 * e, 62 * e, 106 * e, 59 * e, 99 * e, 54 * e),
        r.bezierCurveTo(86 * e, 62 * e, 86 * e, 73 * e, 86 * e, 80 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 4 * e),
        r.scale(.5, .5),
        r.translate(100 * e, 71 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(86 * e, 80 * e),
        r.bezierCurveTo(97 * e, 88 * e, 106 * e, 84 * e, 112 * e, 80 * e),
        r.bezierCurveTo(112 * e, 62 * e, 106 * e, 59 * e, 99 * e, 54 * e),
        r.bezierCurveTo(86 * e, 62 * e, 86 * e, 73 * e, 86 * e, 80 * e),
        r.closePath(),
        Ce(r, i[6], i[2], 4 * e),
        n
    }
    function Xt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 400 * e,
        n.height = 400 * e,
        r.save(),
        r.translate(204 * e, 195.0833282470703 * e),
        r.rotate(10.16),
        Be(r, -97.5 * e, -134.5 * e, 195 * e, 269 * e, 10 * e),
        r.restore(),
        Ce(r, i[0], i[1], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(58.5 * e, 226.5833282470703 * e),
        r.bezierCurveTo(120.5 * e, 281.5833282470703 * e, 120.5 * e, 281.5833282470703 * e, 182.5 * e, 336.5833282470703 * e),
        r.bezierCurveTo(263 * e, 248.5833282470703 * e, 263 * e, 248.5833282470703 * e, 343.5 * e, 160.5833282470703 * e),
        r.bezierCurveTo(280.5 * e, 104.58332824707031 * e, 280.5 * e, 104.58332824707031 * e, 217.5 * e, 48.58332824707031 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 4 * e),
        r.save(),
        r.translate(197 * e, 169.0833282470703 * e),
        r.rotate(10.16),
        Be(r, -93.5 * e, -126.5 * e, 187 * e, 253 * e, 10 * e),
        r.restore(),
        Ce(r, i[4], i[1], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(226.5 * e, 24.583328247070312 * e),
        r.bezierCurveTo(58.5 * e, 207.5833282470703 * e, 143 * e, 116.58332824707031 * e, 59.5 * e, 208.5833282470703 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(46.133331298828125 * e, 202.64999389648438 * e),
        r.bezierCurveTo(46.133331298828125 * e, 215.64999389648438 * e, 46.133331298828125 * e, 215.64999389648438 * e, 46.133331298828125 * e, 228.64999389648438 * e),
        r.closePath(),
        Ce(r, i[4], i[1], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55.133331298828125 * e, 211.64999389648438 * e),
        r.bezierCurveTo(55.133331298828125 * e, 225.14999389648438 * e, 55.133331298828125 * e, 225.14999389648438 * e, 55.133331298828125 * e, 238.64999389648438 * e),
        r.bezierCurveTo(50.133331298828125 * e, 235.64999389648438 * e, 50.133331298828125 * e, 235.64999389648438 * e, 45.133331298828125 * e, 232.64999389648438 * e),
        r.bezierCurveTo(45.133331298828125 * e, 216.64999389648438 * e, 45.133331298828125 * e, 216.64999389648438 * e, 45.133331298828125 * e, 200.64999389648438 * e),
        r.closePath(),
        Ce(r, i[4], i[1], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(46.133331298828125 * e, 198.39999389648438 * e),
        r.bezierCurveTo(46.133331298828125 * e, 199.89999389648438 * e, 46.133331298828125 * e, 199.89999389648438 * e, 46.133331298828125 * e, 201.39999389648438 * e),
        r.closePath(),
        Ce(r, i[4], i[1], 8 * e),
        r.save(),
        r.translate(249.63333129882812 * e, 120.89999389648438 * e),
        r.rotate(7.04),
        Be(r, -58.5 * e, -32 * e, 117 * e, 64 * e, 10 * e),
        r.restore(),
        Ce(r, i[5]),
        n
    }
    function jt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 170 * e,
        n.height = 170 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(-10 * e, 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(72.5 * e, 4.109375 * e),
        r.bezierCurveTo(117 * e, 9.609375 * e, 117 * e, 9.609375 * e, 161.5 * e, 15.109375 * e),
        r.bezierCurveTo(134.5 * e, 106.109375 * e, 110.5 * e, 130.109375 * e, 63.5 * e, 145.109375 * e),
        r.bezierCurveTo(33.5 * e, 120.609375 * e, 33.5 * e, 120.609375 * e, 3.5 * e, 96.109375 * e),
        r.bezierCurveTo(82.5 * e, 75.109375 * e, 69.5 * e, 29.109375 * e, 71.5 * e, 6.109375 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(10 * e, -10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(72.5 * e, 4.109375 * e),
        r.bezierCurveTo(117 * e, 9.609375 * e, 117 * e, 9.609375 * e, 161.5 * e, 15.109375 * e),
        r.bezierCurveTo(134.5 * e, 106.109375 * e, 110.5 * e, 130.109375 * e, 63.5 * e, 145.109375 * e),
        r.bezierCurveTo(33.5 * e, 120.609375 * e, 33.5 * e, 120.609375 * e, 3.5 * e, 96.109375 * e),
        r.bezierCurveTo(82.5 * e, 75.109375 * e, 69.5 * e, 29.109375 * e, 71.5 * e, 6.109375 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 10 * e),
        n
    }
    function qt(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        n.width = 47 * e,
        n.height = 60 * e;
        r = (n = document.createElement("canvas")).getContext("2d");
        return n.width = 47 * e,
        n.height = 60 * e,
        we(r, 23.5 * e, 20.734375 * e, 15.132745950421556 * e),
        Ce(r, void 0, i[2], 4 * e),
        we(r, 23.5 * e, 20.734375 * e, 18.601075237738275 * e),
        Ce(r, void 0, i[1], 4 * e),
        we(r, 23.5 * e, 20.734375 * e, 11.40175425099138 * e),
        Ce(r, void 0, i[1], 4 * e),
        r.save(),
        r.translate(23 * e, 38.734375 * e),
        r.rotate(0),
        Be(r, -21.5 * e, -19 * e, 43 * e, 38 * e, 10 * e),
        r.restore(),
        Ce(r, i[2], i[1], 4 * e),
        r.save(),
        r.translate(23.5 * e, 43.734375 * e),
        r.rotate(.5235987755982988),
        A(r, 3, 8.06225774829855 * e, 0 * e),
        r.restore(),
        Ce(r, i[3]),
        we(r, 23.5 * e, 35.734375 * e, 7.0710678118654755 * e),
        Ce(r, i[3]),
        n
    }
    function Zt(e, t, i, n) {
        var r = document.createElement("canvas")
          , o = r.getContext("2d");
        return r.width = 501 * e,
        r.height = 564 * e,
        o.scale(.5, .5),
        o.translate(240 * e, 255 * e),
        o.rotate(n),
        o.globalAlpha = t ? .5 : .2,
        we(o, 174 * e, 87.984375 * e, 20.8806130178211 * e),
        Ce(o, i[0], i[0], 8 * e),
        we(o, 174 * e, 87.984375 * e, 12.165525060596439 * e),
        Ce(o, i[0], i[0], 8 * e),
        we(o, 174 * e, 87.484375 * e, 6 * e),
        Ce(o, i[0]),
        we(o, 30 * e, 87.984375 * e, 20.8806130178211 * e),
        Ce(o, i[0], i[0], 4 * e),
        we(o, 30 * e, 87.984375 * e, 12.165525060596439 * e),
        Ce(o, i[0], i[0], 4 * e),
        we(o, 30 * e, 87.484375 * e, 6 * e),
        Ce(o, i[0]),
        we(o, 100 * e, 30 * e, 20.8806130178211 * e),
        Ce(o, i[0], i[0], 4 * e),
        we(o, 100 * e, 30 * e, 12.165525060596439 * e),
        Ce(o, i[0], i[0], 4 * e),
        we(o, 100 * e, 30 * e, 6 * e),
        Ce(o, i[0]),
        we(o, 100 * e, 130 * e, 20.8806130178211 * e),
        Ce(o, i[0], i[0], 4 * e),
        we(o, 100 * e, 130 * e, 12.165525060596439 * e),
        Ce(o, i[0], i[0], 4 * e),
        we(o, 100 * e, 130 * e, 6 * e),
        Ce(o, i[0]),
        o.save(),
        o.translate(102 * e, 81.984375 * e),
        o.rotate(0),
        Be(o, -74 * e, -57 * e, 148 * e, 114 * e, 23 * e),
        o.restore(),
        Ce(o, i[0], i[0], 4 * e),
        o.save(),
        o.translate(101 * e, 64.984375 * e),
        o.rotate(0),
        Be(o, -33 * e, -10 * e, 66 * e, 20 * e, 15 * e),
        o.restore(),
        Ce(o, i[0], i[0], 4 * e),
        o.save(),
        o.translate(102 * e, 63.484375 * e),
        o.rotate(0),
        Be(o, -9 * e, -27.5 * e, 18 * e, 55 * e, 15 * e),
        o.restore(),
        o.translate(5, -5),
        o.globalAlpha = 1,
        we(o, 174 * e, 87.984375 * e, 20.8806130178211 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 174 * e, 87.984375 * e, 12.165525060596439 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 174 * e, 87.484375 * e, 6 * e),
        Ce(o, i[2]),
        we(o, 30 * e, 87.984375 * e, 20.8806130178211 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 30 * e, 87.984375 * e, 12.165525060596439 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 30 * e, 87.484375 * e, 6 * e),
        Ce(o, i[2]),
        we(o, 102 * e, 30 * e, 20.8806130178211 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 102 * e, 30 * e, 12.165525060596439 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 102 * e, 30 * e, 6 * e),
        Ce(o, i[1]),
        we(o, 102 * e, 130 * e, 20.8806130178211 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 102 * e, 130 * e, 12.165525060596439 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 102 * e, 130 * e, 6 * e),
        Ce(o, i[1]),
        o.save(),
        o.translate(102 * e, 81.984375 * e),
        Be(o, -74 * e, -57 * e, 148 * e, 114 * e, 23 * e),
        o.restore(),
        Ce(o, i[1], i[3], 8 * e),
        o.save(),
        o.translate(101 * e, 64.984375 * e),
        Be(o, -33 * e, -10 * e, 66 * e, 20 * e, 15 * e),
        o.restore(),
        Ce(o, i[2], i[1], 8 * e),
        o.save(),
        o.translate(102 * e, 63.484375 * e),
        Be(o, -9 * e, -27.5 * e, 18 * e, 55 * e, 15 * e),
        o.restore(),
        Ce(o, i[2], i[1], 8 * e),
        we(o, 135 * e, 107.36605834960938 * e, 21.095023109728988 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 135 * e, 107.36605834960938 * e, 13 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 135 * e, 107.36605834960938 * e, 6.082762530298219 * e),
        Ce(o, i[2]),
        we(o, 70 * e, 107.36605834960938 * e, 21.095023109728988 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 70 * e, 107.36605834960938 * e, 13 * e),
        Ce(o, i[1], i[3], 8 * e),
        we(o, 70 * e, 107.36605834960938 * e, 6.082762530298219 * e),
        Ce(o, i[2]),
        r
    }
    function $t(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 95 * e,
        n.height = 85 * e,
        0 == i ? (r.translate(7 * e, 15 * e),
        r.scale(.9, .9),
        r.save(),
        Be(r, 0 * e, 5 * e, 90 * e, 60 * e, 10),
        Ce(r, t[0]),
        r.globalCompositeOperation = "destination-out",
        we(r, 25 * e, 40 * e, 10 * e),
        r.fill(),
        we(r, 65 * e, 40 * e, 10 * e),
        r.fill(),
        r.restore(),
        r.save(),
        Be(r, 0, 0, 90 * e, 60 * e, 10 * e),
        Ce(r, t[1]),
        r.globalCompositeOperation = "destination-out",
        we(r, 25 * e, 40 * e, 10 * e),
        r.fill(),
        we(r, 65 * e, 40 * e, 10 * e),
        r.fill(),
        r.restore()) : 1 == i && (r.scale(.8, .8),
        r.translate(15 * e, 33 * e),
        r.save(),
        r.scale(.56, .56),
        r.translate(-39 * e, -60 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(32.5 * e, 50.642852783203125 * e),
        r.bezierCurveTo(83 * e, 69.64285278320312 * e, 83 * e, 69.64285278320312 * e, 133.5 * e, 88.64285278320312 * e),
        r.bezierCurveTo(93 * e, 92.64285278320312 * e, 93 * e, 92.64285278320312 * e, 52.5 * e, 96.64285278320312 * e),
        r.bezierCurveTo(30.5 * e, 100.64285278320312 * e, 36.5 * e, 94.64285278320312 * e, 32.5 * e, 84.64285278320312 * e),
        r.bezierCurveTo(21.5 * e, 45.642852783203125 * e, 24.5 * e, 48.642852783203125 * e, 31.5 * e, 50.642852783203125 * e),
        r.closePath(),
        Ce(r, t[1]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(116.5 * e, 85.64285278320312 * e),
        r.bezierCurveTo(160.5 * e, 67.14285278320312 * e, 160.5 * e, 67.14285278320312 * e, 204.5 * e, 48.642852783203125 * e),
        r.bezierCurveTo(220.5 * e, 42.642852783203125 * e, 208.5 * e, 68.64285278320312 * e, 205.5 * e, 85.64285278320312 * e),
        r.bezierCurveTo(202.5 * e, 98.64285278320312 * e, 199.5 * e, 98.64285278320312 * e, 188.5 * e, 100.64285278320312 * e),
        r.closePath(),
        Ce(r, t[1]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(166.5 * e, 68.64285278320312 * e),
        r.bezierCurveTo(147.5 * e, 72.64285278320312 * e, 145.5 * e, 73.64285278320312 * e, 142.5 * e, 62.642852783203125 * e),
        r.bezierCurveTo(121.5 * e, 12.642852783203125 * e, 122.5 * e, 5.642852783203125 * e, 117.5 * e, 15.642852783203125 * e),
        r.bezierCurveTo(105.5 * e, 40.642852783203125 * e, 105.5 * e, 40.642852783203125 * e, 93.5 * e, 65.64285278320312 * e),
        r.bezierCurveTo(89.5 * e, 74.64285278320312 * e, 84.5 * e, 72.64285278320312 * e, 73.5 * e, 74.64285278320312 * e),
        r.bezierCurveTo(98 * e, 87.64285278320312 * e, 98 * e, 87.64285278320312 * e, 122.5 * e, 100.64285278320312 * e),
        r.closePath(),
        Ce(r, t[1]),
        r.restore(),
        r.save(),
        Be(r, 0, 15 * e, 90 * e, 50 * e, 10 * e),
        Ce(r, t[0]),
        Be(r, 0, 10 * e, 90 * e, 50 * e, 10 * e),
        Ce(r, t[1]),
        r.globalCompositeOperation = "destination-out",
        we(r, 25 * e, 40 * e, 10 * e),
        r.fill(),
        we(r, 65 * e, 40 * e, 10 * e),
        r.fill(),
        r.restore()),
        n
    }
    function Qt(e, t, i) {
        var n, r = document.createElement("canvas"), o = r.getContext("2d");
        return r.width = 120 * e,
        r.height = 100 * e,
        Be(o, 10 * e, 10 * e, 95 * e, 80 * e, 10 * e),
        Ce(o, t[2]),
        Be(o, 10 * e, 5 * e, 95 * e, 80 * e, 10 * e),
        Ce(o, t[3], t[4], 4 * e),
        0 == i ? (n = $t(.75 * e, t, 0),
        o.drawImage(n, 22 * e, 18 * e)) : 1 == i && (n = $t(.75 * e, t, 1),
        o.drawImage(n, 22 * e, 18 * e)),
        r
    }
    function ei(e, t, i) {
        var n, r, o, a, s = document.createElement("canvas"), d = s.getContext("2d"), _ = (s.width = 185 * e,
        s.height = 164 * e,
        d.translate(0, 0),
        n = e,
        _ = t,
        r = i,
        o = document.createElement("canvas"),
        a = o.getContext("2d"),
        o.width = 201 * n,
        o.height = 164 * n,
        a.translate(0, 5 * n),
        a.globalAlpha = _ ? .5 : 1,
        we(a, 100.5 * n, 82 * n, 74.92746655359852 * n),
        Ce(a, r[0], r[0], 4 * n),
        we(a, 100.5 * n, 82 * n, 65.9417374971317 * n),
        Ce(a, r[0], r[0], 4 * n),
        a.translate(0, -5),
        a.globalAlpha = 1,
        we(a, 100.5 * n, 82 * n, 74.92746655359852 * n),
        Ce(a, r[1], r[3], 4 * n),
        we(a, 100.5 * n, 82 * n, 65.9417374971317 * n),
        Ce(a, r[1], r[2], 4 * n),
        we(a, 100.5 * n, 82 * n, 35.9417374971317 * n),
        Ce(a, r[1], r[2], 20 * n),
        we(a, 100.5 * n, 82 * n, 15.9417374971317 * n),
        Ce(a, r[1], r[2], 6 * n),
        o), _ = (d.drawImage(_, -10 * e, 0 * e),
        Zt(e, t, i, 0)), _ = (d.drawImage(_, -83 * e, -40 * e),
        Zt(e, t, i, Math.PI / 1.4)), _ = (d.drawImage(_, -15 * e, -88 * e),
        Zt(e, t, i, Math.PI / -1.4));
        return d.drawImage(_, 15 * e, -8 * e),
        s
    }
    function ti(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 450 * e,
        n.height = 790 * e,
        r.translate(5 * e, 5 * e),
        r.globalAlpha = 0,
        we(r, 178.5 * e, 172.828125 * e, 150 * e),
        Ce(r, void 0, i[0], 65 * e),
        we(r, 178.5 * e, 172.828125 * e, 150 * e),
        Ce(r, void 0, i[0], 55 * e),
        r.closePath(),
        r.save(),
        r.translate(177 * e, 512.328125 * e),
        Be(r, -25 * e, -202.5 * e, 65 * e, 405 * e, 25 * e),
        r.restore(),
        Ce(r, i[0]),
        r.save(),
        r.translate(136 * e, 581.828125 * e),
        Be(r, -39 * e, -23 * e, 78 * e, 46 * e, 25 * e),
        r.restore(),
        Ce(r, i[0]),
        r.save(),
        r.translate(135.5 * e, 663.828125 * e),
        Be(r, -39.5 * e, -22 * e, 79 * e, 44 * e, 25 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(114 * e, 594.828125 * e),
        r.bezierCurveTo(175 * e, 596.828125 * e, 163 * e, 596.828125 * e, 172 * e, 594.828125 * e),
        r.bezierCurveTo(171.5 * e, 633.828125 * e, 171.5 * e, 633.828125 * e, 171 * e, 672.828125 * e),
        r.bezierCurveTo(110 * e, 673.828125 * e, 140.5 * e, 673.328125 * e, 110 * e, 673.828125 * e),
        r.bezierCurveTo(110.5 * e, 661.828125 * e, 110.5 * e, 661.828125 * e, 111 * e, 649.828125 * e),
        r.bezierCurveTo(157 * e, 633.828125 * e, 134 * e, 607.828125 * e, 114 * e, 594.828125 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(0, 5 * e),
        r.moveTo(140 * e, 294.828125 * e),
        r.bezierCurveTo(212 * e, 295.828125 * e, 176.5 * e, 295.328125 * e, 213 * e, 295.828125 * e),
        r.bezierCurveTo(201.5 * e, 325.328125 * e, 201.5 * e, 325.328125 * e, 190 * e, 354.828125 * e),
        r.bezierCurveTo(175.5 * e, 355.828125 * e, 175.5 * e, 355.828125 * e, 161 * e, 356.828125 * e),
        r.bezierCurveTo(154.5 * e, 328.828125 * e, 154.5 * e, 328.828125 * e, 148 * e, 300.828125 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(3, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(159 * e, 679.828125 * e),
        r.bezierCurveTo(180 * e, 665.828125 * e, 155 * e, 675.828125 * e, 151 * e, 671.828125 * e),
        r.bezierCurveTo(154.5 * e, 685.328125 * e, 154.5 * e, 685.328125 * e, 158 * e, 698.828125 * e),
        r.bezierCurveTo(171 * e, 699.828125 * e, 171 * e, 699.828125 * e, 184 * e, 700.828125 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.save(),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(157 * e, 548.828125 * e),
        r.bezierCurveTo(157 * e, 561.828125 * e, 157 * e, 561.828125 * e, 157 * e, 574.828125 * e),
        r.bezierCurveTo(132.5 * e, 580.828125 * e, 132.5 * e, 580.828125 * e, 108 * e, 586.828125 * e),
        r.bezierCurveTo(112 * e, 599.828125 * e, 111 * e, 593.828125 * e, 112 * e, 599.828125 * e),
        r.bezierCurveTo(159 * e, 603.828125 * e, 126.5 * e, 601.328125 * e, 141 * e, 602.828125 * e),
        r.bezierCurveTo(145 * e, 641.828125 * e, 143.5 * e, 623.828125 * e, 146 * e, 644.828125 * e),
        r.bezierCurveTo(129.5 * e, 645.328125 * e, 129.5 * e, 645.328125 * e, 113 * e, 645.828125 * e),
        r.bezierCurveTo(107.5 * e, 652.828125 * e, 107.5 * e, 652.828125 * e, 102 * e, 659.828125 * e),
        r.bezierCurveTo(104 * e, 669.328125 * e, 104 * e, 669.328125 * e, 106 * e, 678.828125 * e),
        r.bezierCurveTo(145 * e, 679.328125 * e, 145 * e, 679.328125 * e, 184 * e, 679.828125 * e),
        r.bezierCurveTo(185 * e, 615.828125 * e, 185 * e, 615.828125 * e, 186 * e, 551.828125 * e),
        r.bezierCurveTo(172.5 * e, 551.328125 * e, 172.5 * e, 551.328125 * e, 159 * e, 550.828125 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 7 * e),
        r.restore(),
        r.globalAlpha = 1,
        r.translate(15 * e, 35 * e),
        we(r, 178.5 * e, 172.828125 * e, 150 * e),
        Ce(r, void 0, i[2], 95 * e),
        we(r, 178.5 * e, 172.828125 * e, 150 * e),
        Ce(r, void 0, i[1], 55 * e),
        r.closePath(),
        r.save(),
        r.translate(177 * e, 512.328125 * e),
        Be(r, -25 * e, -202.5 * e, 65 * e, 405 * e, 25 * e),
        r.restore(),
        Ce(r, i[1], i[2], 20 * e),
        r.save(),
        r.translate(136 * e, 581.828125 * e),
        Be(r, -39 * e, -23 * e, 78 * e, 46 * e, 25 * e),
        r.restore(),
        Ce(r, i[1], i[2], 20 * e),
        r.save(),
        r.translate(135.5 * e, 663.828125 * e),
        Be(r, -39.5 * e, -22 * e, 79 * e, 44 * e, 25 * e),
        r.restore(),
        Ce(r, i[1], i[2], 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(114 * e, 594.828125 * e),
        r.bezierCurveTo(175 * e, 596.828125 * e, 163 * e, 596.828125 * e, 172 * e, 594.828125 * e),
        r.bezierCurveTo(171.5 * e, 633.828125 * e, 171.5 * e, 633.828125 * e, 171 * e, 672.828125 * e),
        r.bezierCurveTo(110 * e, 673.828125 * e, 140.5 * e, 673.328125 * e, 110 * e, 673.828125 * e),
        r.bezierCurveTo(110.5 * e, 661.828125 * e, 110.5 * e, 661.828125 * e, 111 * e, 649.828125 * e),
        r.bezierCurveTo(157 * e, 633.828125 * e, 134 * e, 607.828125 * e, 114 * e, 594.828125 * e),
        r.closePath(),
        Ce(r, i[1]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(0, 5 * e),
        r.moveTo(123 * e, 294.828125 * e),
        r.bezierCurveTo(212 * e, 295.828125 * e, 190.5 * e, 295.328125 * e, 250 * e, 295.828125 * e),
        r.bezierCurveTo(231.5 * e, 325.328125 * e, 231.5 * e, 325.328125 * e, 220 * e, 354.828125 * e),
        r.bezierCurveTo(175.5 * e, 355.828125 * e, 175.5 * e, 355.828125 * e, 140 * e, 356.828125 * e),
        r.bezierCurveTo(123.5 * e, 328.828125 * e, 123.5 * e, 328.828125 * e, 123 * e, 294.828125 * e),
        r.closePath(),
        Ce(r, i[1]),
        r.translate(0, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(159 * e, 679.828125 * e),
        r.bezierCurveTo(180 * e, 665.828125 * e, 155 * e, 675.828125 * e, 151 * e, 671.828125 * e),
        r.bezierCurveTo(154.5 * e, 685.328125 * e, 154.5 * e, 685.328125 * e, 158 * e, 698.828125 * e),
        r.bezierCurveTo(171 * e, 699.828125 * e, 171 * e, 699.828125 * e, 184 * e, 700.828125 * e),
        r.closePath(),
        Ce(r, i[1]),
        r.save(),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(157 * e, 548.828125 * e),
        r.bezierCurveTo(157 * e, 561.828125 * e, 157 * e, 561.828125 * e, 157 * e, 574.828125 * e),
        r.bezierCurveTo(132.5 * e, 580.828125 * e, 132.5 * e, 580.828125 * e, 108 * e, 586.828125 * e),
        r.bezierCurveTo(112 * e, 599.828125 * e, 111 * e, 593.828125 * e, 112 * e, 599.828125 * e),
        r.bezierCurveTo(159 * e, 603.828125 * e, 126.5 * e, 601.328125 * e, 141 * e, 602.828125 * e),
        r.bezierCurveTo(145 * e, 641.828125 * e, 143.5 * e, 623.828125 * e, 146 * e, 644.828125 * e),
        r.bezierCurveTo(129.5 * e, 645.328125 * e, 129.5 * e, 645.328125 * e, 113 * e, 645.828125 * e),
        r.bezierCurveTo(107.5 * e, 652.828125 * e, 107.5 * e, 652.828125 * e, 102 * e, 659.828125 * e),
        r.bezierCurveTo(104 * e, 669.328125 * e, 104 * e, 669.328125 * e, 106 * e, 678.828125 * e),
        r.bezierCurveTo(145 * e, 679.328125 * e, 145 * e, 679.328125 * e, 184 * e, 679.828125 * e),
        r.bezierCurveTo(185 * e, 615.828125 * e, 185 * e, 615.828125 * e, 186 * e, 551.828125 * e),
        r.bezierCurveTo(172.5 * e, 551.328125 * e, 172.5 * e, 551.328125 * e, 159 * e, 550.828125 * e),
        r.closePath(),
        Ce(r, i[1], i[1], 7 * e),
        r.restore(),
        n
    }
    function ii(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 202 * e,
        n.height = 202 * e,
        r.translate(2 * e, +e),
        r.globalAlpha = .3,
        we(r, 98 * e, 99 * e, 100 * e),
        Ce(r, i[0]),
        r.globalAlpha = .5,
        we(r, 98 * e, 99 * e, 90 * e),
        Ce(r, i[1]),
        n
    }
    function ni(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 89 * e,
        n.height = 89 * e,
        r.save(),
        r.translate(44.5 * e, 44.5 * e),
        A(r, 6, 40 * e, 10 * e),
        r.restore(),
        Ce(r, i[0], i[1], 5 * e),
        r.save(),
        r.translate(44.5 * e, 44.5 * e),
        A(r, 6, 25.11521001172521 * e, 10 * e),
        r.restore(),
        Ce(r, i[2], i[3], 5 * e),
        n
    }
    function ri(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 88 * e,
        n.height = 88 * e,
        r.save(),
        r.translate(44 * e, 44 * e),
        r.rotate(.52),
        A(r, 6, 43 * e, 10 * e),
        r.restore(),
        Ce(r, i[0], i[1], 3 * e),
        n
    }
    function oi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 202 * e,
        n.height = 202 * e,
        r.translate(2 * e, +e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 10 * e),
        r.save(),
        r.translate(98 * e, 41.15177917480469 * e),
        r.rotate(.8),
        Be(r, -16 * e, -16.5 * e, 32 * e, 33 * e, 7 * e),
        r.restore(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(98 * e, 22.5089111328125 * e),
        r.bezierCurveTo(97.5 * e, 41.5089111328125 * e, 97.5 * e, 41.5089111328125 * e, 97 * e, 60.5089111328125 * e),
        Ce(r, i[2]),
        r.save(),
        r.translate(147.5 * e, 69.5089111328125 * e),
        r.rotate(.2),
        Be(r, -15.5 * e, -16 * e, 31 * e, 32 * e, 7 * e),
        r.restore(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(163 * e, 59.50892639160156 * e),
        r.bezierCurveTo(147 * e, 69.50892639160156 * e, 127 * e, 82.50892639160156 * e, 131 * e, 79.50892639160156 * e),
        Ce(r, i[2]),
        r.save(),
        r.translate(143.5 * e, 128.2946319580078 * e),
        r.rotate(1.24),
        Be(r, -16.5 * e, -17.5 * e, 33 * e, 35 * e, 7 * e),
        r.restore(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(162 * e, 135.93748474121094 * e),
        r.bezierCurveTo(143.5 * e, 128.43748474121094 * e, 129 * e, 120.93748474121094 * e, 125 * e, 120.93748474121094 * e),
        Ce(r, i[2]),
        r.save(),
        r.translate(99 * e, 156.08035278320312 * e),
        r.rotate(.84),
        Be(r, -18 * e, -18 * e, 36 * e, 36 * e, 7 * e),
        r.restore(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(98 * e, 136.08035278320312 * e),
        r.bezierCurveTo(98 * e, 156.08035278320312 * e, 98 * e, 156.08035278320312 * e, 98 * e, 176.08035278320312 * e),
        Ce(r, i[2]),
        r.save(),
        r.translate(54 * e, 72.22320556640625 * e),
        r.rotate(1.32),
        Be(r, -18 * e, -19 * e, 36 * e, 38 * e, 7 * e),
        r.restore(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(34 * e, 60.79463195800781 * e),
        r.bezierCurveTo(53.5 * e, 72.29463195800781 * e, 69 * e, 79.79463195800781 * e, 73 * e, 83.79463195800781 * e),
        Ce(r, i[2]),
        r.save(),
        r.translate(49 * e, 127.29463195800781 * e),
        r.rotate(1.76),
        Be(r, -20 * e, -17.5 * e, 40 * e, 35 * e, 7 * e),
        r.restore(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 141.7946319580078 * e),
        r.bezierCurveTo(47 * e, 130.2946319580078 * e, 64 * e, 119.79463195800781 * e, 64 * e, 118.79463195800781 * e),
        Ce(r, i[2]),
        r.globalAlpha = 1,
        r.translate(0, -10 * e),
        r.save(),
        r.translate(98 * e, 41.15177917480469 * e),
        r.rotate(.8),
        Be(r, -16 * e, -16.5 * e, 32 * e, 33 * e, 7 * e),
        r.restore(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(98 * e, 22.5089111328125 * e),
        r.bezierCurveTo(97.5 * e, 41.5089111328125 * e, 97.5 * e, 41.5089111328125 * e, 97 * e, 60.5089111328125 * e),
        Ce(r, void 0, i[4], 5 * e),
        r.save(),
        r.translate(147.5 * e, 69.5089111328125 * e),
        r.rotate(.2),
        Be(r, -15.5 * e, -16 * e, 31 * e, 32 * e, 7 * e),
        r.restore(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(163 * e, 59.50892639160156 * e),
        r.bezierCurveTo(147 * e, 69.50892639160156 * e, 127 * e, 82.50892639160156 * e, 131 * e, 79.50892639160156 * e),
        Ce(r, void 0, i[4], 5 * e),
        r.save(),
        r.translate(143.5 * e, 128.2946319580078 * e),
        r.rotate(1.24),
        Be(r, -16.5 * e, -17.5 * e, 33 * e, 35 * e, 7 * e),
        r.restore(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(162 * e, 135.93748474121094 * e),
        r.bezierCurveTo(143.5 * e, 128.43748474121094 * e, 129 * e, 120.93748474121094 * e, 125 * e, 120.93748474121094 * e),
        Ce(r, void 0, i[4], 5 * e),
        r.save(),
        r.translate(99 * e, 156.08035278320312 * e),
        r.rotate(.84),
        Be(r, -18 * e, -18 * e, 36 * e, 36 * e, 7 * e),
        r.restore(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(98 * e, 136.08035278320312 * e),
        r.bezierCurveTo(98 * e, 156.08035278320312 * e, 98 * e, 156.08035278320312 * e, 98 * e, 176.08035278320312 * e),
        Ce(r, void 0, i[4], 5 * e),
        r.save(),
        r.translate(54 * e, 72.22320556640625 * e),
        r.rotate(1.32),
        Be(r, -18 * e, -19 * e, 36 * e, 38 * e, 7 * e),
        r.restore(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(34 * e, 60.79463195800781 * e),
        r.bezierCurveTo(53.5 * e, 72.29463195800781 * e, 69 * e, 79.79463195800781 * e, 73 * e, 83.79463195800781 * e),
        Ce(r, void 0, i[4], 5 * e),
        r.save(),
        r.translate(49 * e, 127.29463195800781 * e),
        r.rotate(1.76),
        Be(r, -20 * e, -17.5 * e, 40 * e, 35 * e, 7 * e),
        r.restore(),
        Ce(r, i[3], i[4], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(30 * e, 141.7946319580078 * e),
        r.bezierCurveTo(47 * e, 130.2946319580078 * e, 64 * e, 119.79463195800781 * e, 64 * e, 118.79463195800781 * e),
        Ce(r, void 0, i[4], 5 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 10 * e),
        r.save(),
        r.translate(98 * e, 99 * e),
        A(r, 6, 70.28669492273468 * e, 10 * e),
        r.restore(),
        Ce(r, i[2]),
        r.save(),
        r.translate(98 * e, 99 * e),
        A(r, 6, 56.455940020351264 * e, 10 * e),
        r.restore(),
        Ce(r, i[2]),
        r.globalAlpha = 1,
        r.translate(0, -10 * e),
        r.save(),
        r.translate(98 * e, 99 * e),
        A(r, 6, 70.28669492273468 * e, 10 * e),
        r.restore(),
        Ce(r, i[5], i[6], 5 * e),
        r.save(),
        r.translate(98 * e, 99 * e),
        A(r, 6, 56.455940020351264 * e, 10 * e),
        r.restore(),
        Ce(r, i[7], i[8], 7 * e),
        n
    }
    function ai(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 161 * e,
        n.height = 184 * e,
        r.translate(0, 10 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(105.5 * e, 34.609375 * e),
        r.bezierCurveTo(48.5 * e, 7.609375 * e, 11.5 * e, 58.609375 * e, 20.5 * e, 97.609375 * e),
        r.bezierCurveTo(44.5 * e, 161.609375 * e, 70.5 * e, 171.609375 * e, 88.5 * e, 156.609375 * e),
        r.bezierCurveTo(120.5 * e, 129.609375 * e, 123.5 * e, 105.609375 * e, 128.5 * e, 83.609375 * e),
        r.bezierCurveTo(137.5 * e, 79.609375 * e, 141.5 * e, 79.609375 * e, 146.5 * e, 81.609375 * e),
        r.bezierCurveTo(153.5 * e, 70.609375 * e, 151.5 * e, 65.609375 * e, 148.5 * e, 61.609375 * e),
        r.bezierCurveTo(134.5 * e, 60.609375 * e, 131.5 * e, 63.609375 * e, 127.5 * e, 66.609375 * e),
        r.bezierCurveTo(127.5 * e, 55.609375 * e, 125.5 * e, 54.609375 * e, 120.5 * e, 51.609375 * e),
        r.bezierCurveTo(128.5 * e, 42.609375 * e, 136.5 * e, 38.609375 * e, 147.5 * e, 39.609375 * e),
        r.bezierCurveTo(152.5 * e, 23.609375 * e, 147.5 * e, 21.609375 * e, 140.5 * e, 17.609375 * e),
        r.bezierCurveTo(120.5 * e, 17.609375 * e, 114.5 * e, 27.609375 * e, 106.5 * e, 35.609375 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(45.5 * e, 144.609375 * e),
        r.bezierCurveTo(35.5 * e, 155.609375 * e, 37 * e, 152.109375 * e, 28.5 * e, 159.609375 * e),
        r.bezierCurveTo(16.5 * e, 154.609375 * e, 16.5 * e, 151.609375 * e, 17.5 * e, 141.609375 * e),
        r.bezierCurveTo(25.5 * e, 134.109375 * e, 25.5 * e, 134.109375 * e, 33.5 * e, 126.609375 * e),
        Ce(r, i[0]),
        r.translate(0, -10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(45.5 * e, 144.609375 * e),
        r.bezierCurveTo(35.5 * e, 155.609375 * e, 37 * e, 152.109375 * e, 28.5 * e, 159.609375 * e),
        r.bezierCurveTo(16.5 * e, 154.609375 * e, 16.5 * e, 151.609375 * e, 17.5 * e, 141.609375 * e),
        r.bezierCurveTo(25.5 * e, 134.109375 * e, 25.5 * e, 134.109375 * e, 33.5 * e, 126.609375 * e),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(105.5 * e, 34.609375 * e),
        r.bezierCurveTo(48.5 * e, 7.609375 * e, 11.5 * e, 58.609375 * e, 20.5 * e, 97.609375 * e),
        r.bezierCurveTo(44.5 * e, 161.609375 * e, 70.5 * e, 171.609375 * e, 88.5 * e, 156.609375 * e),
        r.bezierCurveTo(120.5 * e, 129.609375 * e, 123.5 * e, 105.609375 * e, 128.5 * e, 83.609375 * e),
        r.bezierCurveTo(137.5 * e, 79.609375 * e, 141.5 * e, 79.609375 * e, 146.5 * e, 81.609375 * e),
        r.bezierCurveTo(153.5 * e, 70.609375 * e, 151.5 * e, 65.609375 * e, 148.5 * e, 61.609375 * e),
        r.bezierCurveTo(134.5 * e, 60.609375 * e, 131.5 * e, 63.609375 * e, 127.5 * e, 66.609375 * e),
        r.bezierCurveTo(127.5 * e, 55.609375 * e, 125.5 * e, 54.609375 * e, 120.5 * e, 51.609375 * e),
        r.bezierCurveTo(128.5 * e, 42.609375 * e, 136.5 * e, 38.609375 * e, 147.5 * e, 39.609375 * e),
        r.bezierCurveTo(152.5 * e, 23.609375 * e, 147.5 * e, 21.609375 * e, 140.5 * e, 17.609375 * e),
        r.bezierCurveTo(120.5 * e, 17.609375 * e, 114.5 * e, 27.609375 * e, 106.5 * e, 35.609375 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(104.5 * e, 35.609375 * e),
        r.bezierCurveTo(71.5 * e, 36.609375 * e, 57.5 * e, 52.609375 * e, 58.5 * e, 81.609375 * e),
        r.bezierCurveTo(59.5 * e, 103.609375 * e, 66.5 * e, 107.609375 * e, 66.5 * e, 116.609375 * e),
        r.bezierCurveTo(67.5 * e, 128.609375 * e, 65.5 * e, 131.609375 * e, 63.5 * e, 137.609375 * e),
        Ce(r, void 0, i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(59.5 * e, 72.609375 * e),
        r.bezierCurveTo(38.5 * e, 80.609375 * e, 43.5 * e, 81.609375 * e, 37.5 * e, 89.609375 * e),
        Ce(r, void 0, i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(60.5 * e, 85.609375 * e),
        r.bezierCurveTo(75.5 * e, 91.609375 * e, 76.5 * e, 96.609375 * e, 81.5 * e, 104.609375 * e),
        Ce(r, void 0, i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(68.5 * e, 122.609375 * e),
        r.bezierCurveTo(79.5 * e, 130.609375 * e, 74.5 * e, 128.609375 * e, 80.5 * e, 134.609375 * e),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(142.5 * e, 18.609375 * e),
        r.bezierCurveTo(151.5 * e, 28.609375 * e, 151.5 * e, 32.609375 * e, 146.5 * e, 40.609375 * e),
        r.bezierCurveTo(137.5 * e, 26.609375 * e, 138.5 * e, 24.609375 * e, 142.5 * e, 19.609375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(146.5 * e, 61.50892639160156 * e),
        r.bezierCurveTo(157.5 * e, 69.50892639160156 * e, 150.5 * e, 79.50892639160156 * e, 145.5 * e, 81.50892639160156 * e),
        r.bezierCurveTo(140.5 * e, 65.50892639160156 * e, 144.5 * e, 64.50892639160156 * e, 146.5 * e, 62.50892639160156 * e),
        r.closePath(),
        Ce(r, i[3]),
        n
    }
    function si(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 104 * e,
        n.height = 117 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(4 * e, 90 * e),
        r.bezierCurveTo(20 * e, 99.5 * e, 20 * e, 99.5 * e, 36 * e, 109 * e),
        r.bezierCurveTo(67 * e, 92 * e, 67 * e, 92 * e, 98 * e, 75 * e),
        r.bezierCurveTo(91 * e, 27 * e, 91 * e, 27 * e, 91 * e, 28 * e),
        r.bezierCurveTo(72.5 * e, 16 * e, 72.5 * e, 16 * e, 54 * e, 4 * e),
        r.bezierCurveTo(33.5 * e, 10 * e, 33.5 * e, 10 * e, 13 * e, 16 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(6 * e, 76 * e),
        r.bezierCurveTo(13.5 * e, 51.5 * e, 13.5 * e, 51.5 * e, 21 * e, 27 * e),
        r.bezierCurveTo(37.5 * e, 17 * e, 37.5 * e, 17 * e, 54 * e, 7 * e),
        r.bezierCurveTo(33.5 * e, 12.5 * e, 33.5 * e, 12.5 * e, 13 * e, 18 * e),
        r.closePath(),
        Ce(r, i[1]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(24 * e, 62 * e),
        r.bezierCurveTo(28.5 * e, 53 * e, 28.5 * e, 53 * e, 33 * e, 44 * e),
        r.bezierCurveTo(41.5 * e, 41 * e, 41.5 * e, 41 * e, 50 * e, 38 * e),
        r.bezierCurveTo(52.5 * e, 35 * e, 52.5 * e, 35 * e, 55 * e, 32 * e),
        r.bezierCurveTo(52 * e, 30 * e, 52 * e, 30 * e, 49 * e, 28 * e),
        r.bezierCurveTo(38 * e, 31.5 * e, 38 * e, 31.5 * e, 27 * e, 35 * e),
        r.closePath(),
        Ce(r, i[1]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36 * e, 107 * e),
        r.bezierCurveTo(66 * e, 90.5 * e, 66 * e, 90.5 * e, 96 * e, 74 * e),
        r.bezierCurveTo(93 * e, 52.5 * e, 93 * e, 52.5 * e, 90 * e, 31 * e),
        r.bezierCurveTo(87 * e, 48 * e, 87 * e, 48 * e, 84 * e, 65 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(+e, 89 * e),
        r.bezierCurveTo(18 * e, 100 * e, 34 * e, 110 * e, 35 * e, 111 * e),
        r.bezierCurveTo(67 * e, 93 * e, 67 * e, 93 * e, 99 * e, 75 * e),
        r.bezierCurveTo(100 * e, 78.5 * e, 100 * e, 78.5 * e, 101 * e, 82 * e),
        r.bezierCurveTo(68 * e, 99 * e, 68 * e, 99 * e, 35 * e, 116 * e),
        r.bezierCurveTo(18 * e, 106.5 * e, 18 * e, 106.5 * e, +e, 97 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36 * e, 107 * e),
        r.bezierCurveTo(66.5 * e, 91.5 * e, 66.5 * e, 91.5 * e, 97 * e, 76 * e),
        r.bezierCurveTo(94.5 * e, 52 * e, 94.5 * e, 52 * e, 92 * e, 28 * e),
        r.bezierCurveTo(73 * e, 15.5 * e, 73 * e, 15.5 * e, 54 * e, 3 * e),
        r.bezierCurveTo(33 * e, 9.5 * e, 33 * e, 9.5 * e, 12 * e, 16 * e),
        r.bezierCurveTo(8 * e, 53 * e, 8 * e, 53 * e, 4 * e, 90 * e),
        r.bezierCurveTo(18.5 * e, 99 * e, 18.5 * e, 99 * e, 33 * e, 108 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(22 * e, 71 * e),
        r.bezierCurveTo(30 * e, 76.5 * e, 30 * e, 76.5 * e, 38 * e, 82 * e),
        r.bezierCurveTo(53 * e, 72 * e, 53 * e, 72 * e, 68 * e, 62 * e),
        r.bezierCurveTo(68 * e, 52 * e, 68 * e, 52 * e, 68 * e, 42 * e),
        r.bezierCurveTo(59.5 * e, 35.5 * e, 59.5 * e, 35.5 * e, 51 * e, 29 * e),
        r.bezierCurveTo(39.5 * e, 32 * e, 39.5 * e, 32 * e, 28 * e, 35 * e),
        r.bezierCurveTo(25 * e, 52 * e, 25 * e, 52 * e, 22 * e, 69 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(5 * e, 89 * e),
        r.bezierCurveTo(20 * e, 73 * e, 12.5 * e, 80.5 * e, 20 * e, 72 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35 * e, 102 * e),
        r.bezierCurveTo(36 * e, 92.5 * e, 36 * e, 92.5 * e, 37 * e, 83 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(68 * e, 62 * e),
        r.bezierCurveTo(81 * e, 67.5 * e, 81 * e, 67.5 * e, 94 * e, 73 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(70 * e, 41 * e),
        r.bezierCurveTo(80 * e, 35.5 * e, 80 * e, 35.5 * e, 90 * e, 30 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(28 * e, 33 * e),
        r.bezierCurveTo(21.5 * e, 26.5 * e, 21.5 * e, 26.5 * e, 15 * e, 20 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(51 * e, 28 * e),
        r.bezierCurveTo(53 * e, 17 * e, 53 * e, 17 * e, 55 * e, 6 * e),
        r.closePath(),
        Ce(r, void 0, i[4], 6 * e),
        n
    }
    function di(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 105 * e,
        n.height = 144 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(-5 * e, 0 * e),
        r.save(),
        r.translate(52.5 * e, 91.5 * e),
        Be(r, -4.5 * e, -39 * e, 9 * e, 78 * e, 5 * e),
        r.restore(),
        Ce(r, i[0], i[0], 3 * e),
        r.save(),
        r.translate(53 * e, 36 * e),
        Be(r, -29 * e, -17.5 * e, 58 * e, 35 * e, 5 * e),
        r.restore(),
        Ce(r, i[0], i[0], 4 * e),
        r.save(),
        r.translate(53.5 * e, 35.5 * e),
        Be(r, -26.5 * e, -15 * e, 53 * e, 30 * e, 5 * e),
        r.restore(),
        Ce(r, i[0], i[0], 4 * e),
        r.translate(5 * e, 0 * e),
        r.globalAlpha = 1,
        r.save(),
        r.translate(52.5 * e, 91.5 * e),
        Be(r, -4.5 * e, -39 * e, 9 * e, 78 * e, 5 * e),
        r.restore(),
        Ce(r, i[1], i[2], 3 * e),
        r.save(),
        r.translate(53 * e, 36 * e),
        Be(r, -29 * e, -17.5 * e, 58 * e, 35 * e, 5 * e),
        r.restore(),
        Ce(r, i[3], i[4], 4 * e),
        r.save(),
        r.translate(53.5 * e, 35.5 * e),
        Be(r, -26.5 * e, -15 * e, 53 * e, 30 * e, 5 * e),
        r.restore(),
        Ce(r, i[5], i[6], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(49 * e, 60.5 * e),
        r.bezierCurveTo(44 * e, 56.5 * e, 44 * e, 56.5 * e, 39 * e, 52.5 * e),
        r.bezierCurveTo(39 * e, 46.5 * e, 39 * e, 46.5 * e, 39 * e, 40.5 * e),
        r.bezierCurveTo(44 * e, 44 * e, 44 * e, 44 * e, 49 * e, 47.5 * e),
        r.bezierCurveTo(49 * e, 54 * e, 49 * e, 54 * e, 49 * e, 60.5 * e),
        r.closePath(),
        Ce(r, i[7], i[6], 3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(66 * e, 40.5 * e),
        r.bezierCurveTo(66 * e, 46.5 * e, 66 * e, 46.5 * e, 66 * e, 52.5 * e),
        r.bezierCurveTo(60.5 * e, 56.5 * e, 60.5 * e, 56.5 * e, 55 * e, 60.5 * e),
        r.bezierCurveTo(56 * e, 53 * e, 56 * e, 53 * e, 57 * e, 45.5 * e),
        r.bezierCurveTo(61.5 * e, 43 * e, 61.5 * e, 43 * e, 66 * e, 40.5 * e),
        r.closePath(),
        Ce(r, i[7], i[6], 3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 33.5 * e),
        r.bezierCurveTo(55.5 * e, 41 * e, 55.5 * e, 41 * e, 59 * e, 48.5 * e),
        r.bezierCurveTo(56 * e, 58 * e, 56 * e, 58 * e, 53 * e, 67.5 * e),
        r.bezierCurveTo(49 * e, 58 * e, 49 * e, 58 * e, 45 * e, 48.5 * e),
        r.bezierCurveTo(48.5 * e, 41 * e, 48.5 * e, 41 * e, 52 * e, 33.5 * e),
        r.closePath(),
        Ce(r, i[9], i[8], 3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(52 * e, 47.5 * e),
        r.bezierCurveTo(54.5 * e, 50.5 * e, 54.5 * e, 50.5 * e, 57 * e, 53.5 * e),
        r.bezierCurveTo(55 * e, 60 * e, 55 * e, 60 * e, 53 * e, 66.5 * e),
        r.bezierCurveTo(50.5 * e, 61 * e, 50.5 * e, 61 * e, 48 * e, 55.5 * e),
        r.bezierCurveTo(50 * e, 52 * e, 50 * e, 52 * e, 52 * e, 48.5 * e),
        r.closePath(),
        Ce(r, i[11], i[10], 3 * e),
        n
    }
    function _i(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 46 * e,
        n.height = 140 * e,
        r.scale(-1 * e, +e),
        r.translate(-50 * e, 40 * e),
        r.translate(-20 * e, 0),
        r.globalAlpha = t ? .5 : 1,
        r.translate(10 * e, 0),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(22.599990844726562 * e, 85.94999694824219 * e),
        r.bezierCurveTo(17.599990844726562 * e, 83.94999694824219 * e, 17.599990844726562 * e, 83.94999694824219 * e, 12.599990844726562 * e, 81.94999694824219 * e),
        r.bezierCurveTo(19.599990844726562 * e, 73.94999694824219 * e, 2.5999908447265625 * e, 22.949996948242188 * e, 33.59999084472656 * e, 7.9499969482421875 * e),
        r.bezierCurveTo(27.599990844726562 * e, 28.949996948242188 * e, 33.59999084472656 * e, 26.949996948242188 * e, 35.59999084472656 * e, 32.94999694824219 * e),
        r.bezierCurveTo(25.599990844726562 * e, 59.94999694824219 * e, 26.599990844726562 * e, 69.94999694824219 * e, 29.599990844726562 * e, 82.94999694824219 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(-1 * e, 0),
        r.moveTo(17.599990844726562 * e, 89.75 * e),
        r.bezierCurveTo(24.599990844726562 * e, 99.75 * e, 24.599990844726562 * e, 101.75 * e, 20.599990844726562 * e, 111.75 * e),
        r.bezierCurveTo(28.599990844726562 * e, 110.75 * e, 26.599990844726562 * e, 112.75 * e, 28.599990844726562 * e, 111.75 * e),
        r.bezierCurveTo(30.599990844726562 * e, 96.75 * e, 32.59999084472656 * e, 96.75 * e, 30.599990844726562 * e, 87.75 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(+e, 0),
        r.moveTo(7.5999908447265625 * e, 86.34999084472656 * e),
        r.bezierCurveTo(12.599990844726562 * e, 85.34999084472656 * e, 14.599990844726562 * e, 84.34999084472656 * e, 13.599990844726562 * e, 84.34999084472656 * e),
        r.bezierCurveTo(21.599990844726562 * e, 83.34999084472656 * e, 21.599990844726562 * e, 83.34999084472656 * e, 29.599990844726562 * e, 82.34999084472656 * e),
        r.bezierCurveTo(33.59999084472656 * e, 85.84999084472656 * e, 33.59999084472656 * e, 85.84999084472656 * e, 37.59999084472656 * e, 89.34999084472656 * e),
        r.bezierCurveTo(34.09999084472656 * e, 91.84999084472656 * e, 34.09999084472656 * e, 91.84999084472656 * e, 30.599990844726562 * e, 94.34999084472656 * e),
        r.bezierCurveTo(21.099990844726562 * e, 93.34999084472656 * e, 21.099990844726562 * e, 93.34999084472656 * e, 11.599990844726562 * e, 92.34999084472656 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.save(),
        r.translate(23.599990844726562 * e, 110.94999694824219 * e),
        r.rotate(0),
        Be(r, -7 * e, -4 * e, 14 * e, 8 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.translate(0 * e, 0),
        r.globalAlpha = 1,
        r.translate(10 * e, 0),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(22.599990844726562 * e, 85.94999694824219 * e),
        r.bezierCurveTo(17.599990844726562 * e, 83.94999694824219 * e, 17.599990844726562 * e, 83.94999694824219 * e, 12.599990844726562 * e, 81.94999694824219 * e),
        r.bezierCurveTo(19.599990844726562 * e, 73.94999694824219 * e, 2.5999908447265625 * e, 22.949996948242188 * e, 33.59999084472656 * e, 7.9499969482421875 * e),
        r.bezierCurveTo(27.599990844726562 * e, 28.949996948242188 * e, 33.59999084472656 * e, 26.949996948242188 * e, 35.59999084472656 * e, 32.94999694824219 * e),
        r.bezierCurveTo(25.599990844726562 * e, 59.94999694824219 * e, 26.599990844726562 * e, 69.94999694824219 * e, 29.599990844726562 * e, 82.94999694824219 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(-1 * e, 0),
        r.moveTo(17.599990844726562 * e, 89.75 * e),
        r.bezierCurveTo(24.599990844726562 * e, 99.75 * e, 24.599990844726562 * e, 101.75 * e, 20.599990844726562 * e, 111.75 * e),
        r.bezierCurveTo(28.599990844726562 * e, 110.75 * e, 26.599990844726562 * e, 112.75 * e, 28.599990844726562 * e, 111.75 * e),
        r.bezierCurveTo(30.599990844726562 * e, 96.75 * e, 32.59999084472656 * e, 96.75 * e, 30.599990844726562 * e, 87.75 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 3 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(+e, 0),
        r.moveTo(7.5999908447265625 * e, 86.34999084472656 * e),
        r.bezierCurveTo(12.599990844726562 * e, 85.34999084472656 * e, 14.599990844726562 * e, 84.34999084472656 * e, 13.599990844726562 * e, 84.34999084472656 * e),
        r.bezierCurveTo(21.599990844726562 * e, 83.34999084472656 * e, 21.599990844726562 * e, 83.34999084472656 * e, 29.599990844726562 * e, 82.34999084472656 * e),
        r.bezierCurveTo(33.59999084472656 * e, 85.84999084472656 * e, 33.59999084472656 * e, 85.84999084472656 * e, 37.59999084472656 * e, 89.34999084472656 * e),
        r.bezierCurveTo(34.09999084472656 * e, 91.84999084472656 * e, 34.09999084472656 * e, 91.84999084472656 * e, 30.599990844726562 * e, 94.34999084472656 * e),
        r.bezierCurveTo(21.099990844726562 * e, 93.34999084472656 * e, 21.099990844726562 * e, 93.34999084472656 * e, 11.599990844726562 * e, 92.34999084472656 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 3 * e),
        r.save(),
        r.translate(23.599990844726562 * e, 110.94999694824219 * e),
        r.rotate(0),
        Be(r, -7 * e, -4 * e, 14 * e, 8 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 3 * e),
        n
    }
    function ui(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d")
          , r = 140 * e
          , r = (i.width = 120 * e,
        i.height = r,
        i.width = 130 * e,
        i.height = 120 * e,
        Be(n, 10 * e, 12 * e, 110 * e, 90 * e, 10 * e),
        Ce(n, t[0]),
        Be(n, 10 * e, 5 * e, 110 * e, 90 * e, 10 * e),
        Ce(n, t[1], t[2], 4 * e),
        I(-Math.PI / 5, r1(.5 * e, !0, ["rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"])))
          , r = (n.drawImage(r, 12 * e, 18 * e),
        I(Math.PI / 4, pt(.55 * e, !0, ["rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"])));
        return n.drawImage(r, 36 * e, 16 * e),
        i
    }
    function li(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 137 * e,
        n.height = 129 * e,
        r.globalAlpha = .5,
        we(r, 69 * e, 64 * e, 48.16637831516918 * e),
        Ce(r, i[1]),
        r.globalAlpha = .7,
        we(r, 69 * e, 64 * e, 38.23105625617661 * e),
        Ce(r, i[2]),
        r.globalAlpha = .7,
        we(r, 69 * e, 64 * e, 32.01562118716424 * e),
        Ce(r, i[2], i[3], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(72 * e, 41 * e),
        r.bezierCurveTo(52 * e, 41 * e, 48 * e, 50 * e, 45 * e, 58 * e),
        r.bezierCurveTo(43 * e, 67 * e, 45 * e, 68 * e, 46 * e, 72 * e),
        r.bezierCurveTo(52 * e, 53 * e, 60 * e, 48 * e, 72 * e, 42 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(93 * e, 62 * e),
        r.bezierCurveTo(95 * e, 72 * e, 90 * e, 81 * e, 81 * e, 87 * e),
        r.bezierCurveTo(74 * e, 91 * e, 69 * e, 89 * e, 64 * e, 88 * e),
        r.bezierCurveTo(77 * e, 83 * e, 84 * e, 82 * e, 92 * e, 62 * e),
        r.closePath(),
        Ce(r, i[3]),
        n
    }
    function ci(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 137 * e,
        n.height = 129 * e,
        r.globalAlpha = .4,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(42.000030517578125 * e, 41.17047119140625 * e),
        r.bezierCurveTo(45.000030517578125 * e, 38.17047119140625 * e, 49.000030517578125 * e, 37.17047119140625 * e, 62.000030517578125 * e, 38.17047119140625 * e),
        r.bezierCurveTo(78.00003051757812 * e, 38.17047119140625 * e, 78.00003051757812 * e, 38.17047119140625 * e, 94.00003051757812 * e, 38.17047119140625 * e),
        r.bezierCurveTo(100.00003051757812 * e, 38.17047119140625 * e, 102.00003051757812 * e, 38.17047119140625 * e, 101.00003051757812 * e, 47.17047119140625 * e),
        r.bezierCurveTo(101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 80.17047119140625 * e),
        r.bezierCurveTo(102.00003051757812 * e, 84.17047119140625 * e, 100.00003051757812 * e, 86.17047119140625 * e, 95.00003051757812 * e, 88.17047119140625 * e),
        r.bezierCurveTo(84.00003051757812 * e, 94.17047119140625 * e, 89.00003051757812 * e, 94.17047119140625 * e, 79.00003051757812 * e, 94.17047119140625 * e),
        r.bezierCurveTo(59.500030517578125 * e, 94.17047119140625 * e, 59.500030517578125 * e, 94.17047119140625 * e, 40.000030517578125 * e, 94.17047119140625 * e),
        r.bezierCurveTo(33.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 86.17047119140625 * e),
        r.bezierCurveTo(34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 53.17047119140625 * e),
        r.bezierCurveTo(33.000030517578125 * e, 47.17047119140625 * e, 34.000030517578125 * e, 47.17047119140625 * e, 40.000030517578125 * e, 42.17047119140625 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 40 * e),
        r.globalAlpha = .4,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(42.000030517578125 * e, 41.17047119140625 * e),
        r.bezierCurveTo(45.000030517578125 * e, 38.17047119140625 * e, 49.000030517578125 * e, 37.17047119140625 * e, 62.000030517578125 * e, 38.17047119140625 * e),
        r.bezierCurveTo(78.00003051757812 * e, 38.17047119140625 * e, 78.00003051757812 * e, 38.17047119140625 * e, 94.00003051757812 * e, 38.17047119140625 * e),
        r.bezierCurveTo(100.00003051757812 * e, 38.17047119140625 * e, 102.00003051757812 * e, 38.17047119140625 * e, 101.00003051757812 * e, 47.17047119140625 * e),
        r.bezierCurveTo(101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 80.17047119140625 * e),
        r.bezierCurveTo(102.00003051757812 * e, 84.17047119140625 * e, 100.00003051757812 * e, 86.17047119140625 * e, 95.00003051757812 * e, 88.17047119140625 * e),
        r.bezierCurveTo(84.00003051757812 * e, 94.17047119140625 * e, 89.00003051757812 * e, 94.17047119140625 * e, 79.00003051757812 * e, 94.17047119140625 * e),
        r.bezierCurveTo(59.500030517578125 * e, 94.17047119140625 * e, 59.500030517578125 * e, 94.17047119140625 * e, 40.000030517578125 * e, 94.17047119140625 * e),
        r.bezierCurveTo(33.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 86.17047119140625 * e),
        r.bezierCurveTo(34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 53.17047119140625 * e),
        r.bezierCurveTo(33.000030517578125 * e, 47.17047119140625 * e, 34.000030517578125 * e, 47.17047119140625 * e, 40.000030517578125 * e, 42.17047119140625 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 20 * e),
        r.globalAlpha = .8,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(42.000030517578125 * e, 41.17047119140625 * e),
        r.bezierCurveTo(45.000030517578125 * e, 38.17047119140625 * e, 49.000030517578125 * e, 37.17047119140625 * e, 62.000030517578125 * e, 38.17047119140625 * e),
        r.bezierCurveTo(78.00003051757812 * e, 38.17047119140625 * e, 78.00003051757812 * e, 38.17047119140625 * e, 94.00003051757812 * e, 38.17047119140625 * e),
        r.bezierCurveTo(100.00003051757812 * e, 38.17047119140625 * e, 102.00003051757812 * e, 38.17047119140625 * e, 101.00003051757812 * e, 47.17047119140625 * e),
        r.bezierCurveTo(101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 80.17047119140625 * e),
        r.bezierCurveTo(102.00003051757812 * e, 84.17047119140625 * e, 100.00003051757812 * e, 86.17047119140625 * e, 95.00003051757812 * e, 88.17047119140625 * e),
        r.bezierCurveTo(84.00003051757812 * e, 94.17047119140625 * e, 89.00003051757812 * e, 94.17047119140625 * e, 79.00003051757812 * e, 94.17047119140625 * e),
        r.bezierCurveTo(59.500030517578125 * e, 94.17047119140625 * e, 59.500030517578125 * e, 94.17047119140625 * e, 40.000030517578125 * e, 94.17047119140625 * e),
        r.bezierCurveTo(33.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 86.17047119140625 * e),
        r.bezierCurveTo(34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 53.17047119140625 * e),
        r.bezierCurveTo(33.000030517578125 * e, 47.17047119140625 * e, 34.000030517578125 * e, 47.17047119140625 * e, 40.000030517578125 * e, 42.17047119140625 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(51.000030517578125 * e, 37.9886474609375 * e),
        r.bezierCurveTo(51.000030517578125 * e, 61.9886474609375 * e, 51.000030517578125 * e, 61.9886474609375 * e, 51.000030517578125 * e, 85.9886474609375 * e),
        r.bezierCurveTo(75.50003051757812 * e, 85.9886474609375 * e, 75.50003051757812 * e, 85.9886474609375 * e, 100.00003051757812 * e, 85.9886474609375 * e),
        r.bezierCurveTo(100.00003051757812 * e, 61.9886474609375 * e, 100.00003051757812 * e, 61.9886474609375 * e, 100.00003051757812 * e, 37.9886474609375 * e),
        r.bezierCurveTo(76.00003051757812 * e, 37.9886474609375 * e, 76.00003051757812 * e, 37.9886474609375 * e, 52.000030517578125 * e, 37.9886474609375 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(99.00003051757812 * e, 38.9886474609375 * e),
        r.bezierCurveTo(93.50003051757812 * e, 44.9886474609375 * e, 93.50003051757812 * e, 44.9886474609375 * e, 88.00003051757812 * e, 50.9886474609375 * e),
        r.bezierCurveTo(88.00003051757812 * e, 72.4886474609375 * e, 88.00003051757812 * e, 72.4886474609375 * e, 88.00003051757812 * e, 93.9886474609375 * e),
        r.bezierCurveTo(94.00003051757812 * e, 90.4886474609375 * e, 94.00003051757812 * e, 90.4886474609375 * e, 100.00003051757812 * e, 86.9886474609375 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(87.00003051757812 * e, 49.625 * e),
        r.bezierCurveTo(61.000030517578125 * e, 49.625 * e, 61.000030517578125 * e, 49.625 * e, 35.000030517578125 * e, 49.625 * e),
        r.bezierCurveTo(35.000030517578125 * e, 70.625 * e, 35.000030517578125 * e, 70.625 * e, 35.000030517578125 * e, 91.625 * e),
        r.bezierCurveTo(60.500030517578125 * e, 91.625 * e, 60.500030517578125 * e, 91.625 * e, 86.00003051757812 * e, 91.625 * e),
        r.bezierCurveTo(86.50003051757812 * e, 70.625 * e, 86.50003051757812 * e, 70.625 * e, 87.00003051757812 * e, 49.625 * e),
        r.closePath(),
        Ce(r, i[1], i[3], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(47.000030517578125 * e, 36.625 * e),
        r.bezierCurveTo(73.00003051757812 * e, 37.125 * e, 73.00003051757812 * e, 37.125 * e, 99.00003051757812 * e, 37.625 * e),
        r.bezierCurveTo(93.50003051757812 * e, 44.125 * e, 93.50003051757812 * e, 44.125 * e, 88.00003051757812 * e, 50.625 * e),
        r.bezierCurveTo(60.500030517578125 * e, 50.125 * e, 60.500030517578125 * e, 50.125 * e, 33.000030517578125 * e, 49.625 * e),
        r.closePath(),
        Ce(r, i[1], i[3], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(53.000030517578125 * e, 52.625 * e),
        r.bezierCurveTo(40.000030517578125 * e, 54.625 * e, 39.000030517578125 * e, 59.625 * e, 40.000030517578125 * e, 67.625 * e),
        r.bezierCurveTo(45.000030517578125 * e, 59.625 * e, 48.000030517578125 * e, 58.625 * e, 54.000030517578125 * e, 53.625 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(42.000030517578125 * e, 41.17047119140625 * e),
        r.bezierCurveTo(45.000030517578125 * e, 38.17047119140625 * e, 49.000030517578125 * e, 37.17047119140625 * e, 62.000030517578125 * e, 38.17047119140625 * e),
        r.bezierCurveTo(78.00003051757812 * e, 38.17047119140625 * e, 78.00003051757812 * e, 38.17047119140625 * e, 94.00003051757812 * e, 38.17047119140625 * e),
        r.bezierCurveTo(100.00003051757812 * e, 38.17047119140625 * e, 102.00003051757812 * e, 38.17047119140625 * e, 101.00003051757812 * e, 47.17047119140625 * e),
        r.bezierCurveTo(101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 63.67047119140625 * e, 101.00003051757812 * e, 80.17047119140625 * e),
        r.bezierCurveTo(102.00003051757812 * e, 84.17047119140625 * e, 100.00003051757812 * e, 86.17047119140625 * e, 95.00003051757812 * e, 88.17047119140625 * e),
        r.bezierCurveTo(84.00003051757812 * e, 94.17047119140625 * e, 89.00003051757812 * e, 94.17047119140625 * e, 79.00003051757812 * e, 94.17047119140625 * e),
        r.bezierCurveTo(59.500030517578125 * e, 94.17047119140625 * e, 59.500030517578125 * e, 94.17047119140625 * e, 40.000030517578125 * e, 94.17047119140625 * e),
        r.bezierCurveTo(33.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 94.17047119140625 * e, 34.000030517578125 * e, 86.17047119140625 * e),
        r.bezierCurveTo(34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 69.67047119140625 * e, 34.000030517578125 * e, 53.17047119140625 * e),
        r.bezierCurveTo(33.000030517578125 * e, 47.17047119140625 * e, 34.000030517578125 * e, 47.17047119140625 * e, 40.000030517578125 * e, 42.17047119140625 * e),
        r.closePath(),
        Ce(r, void 0, i[3], 4 * e),
        n
    }
    function hi(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 376 * e,
        i.height = 371 * e,
        n.globalAlpha = .5,
        n.translate(5 * e, 5 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(191.633544921875 * e, 123.98580932617188 * e),
        n.bezierCurveTo(215.633544921875 * e, 85.98580932617188 * e, 187.633544921875 * e, 71.98580932617188 * e, 202.633544921875 * e, 19.985809326171875 * e),
        n.bezierCurveTo(231.633544921875 * e, 68.98580932617188 * e, 253.633544921875 * e, 71.98580932617188 * e, 256.633544921875 * e, 93.98580932617188 * e),
        n.bezierCurveTo(306.633544921875 * e, 64.98580932617188 * e, 319.633544921875 * e, 61.985809326171875 * e, 350.633544921875 * e, 58.985809326171875 * e),
        n.bezierCurveTo(280.633544921875 * e, 86.98580932617188 * e, 281.633544921875 * e, 106.98580932617188 * e, 268.633544921875 * e, 130.98580932617188 * e),
        n.bezierCurveTo(295.633544921875 * e, 158.98580932617188 * e, 328.633544921875 * e, 155.98580932617188 * e, 353.633544921875 * e, 90.98580932617188 * e),
        n.bezierCurveTo(371.633544921875 * e, 158.98580932617188 * e, 337.633544921875 * e, 210.98580932617188 * e, 286.633544921875 * e, 209.98580932617188 * e),
        n.bezierCurveTo(323.633544921875 * e, 230.98580932617188 * e, 317.633544921875 * e, 274.9858093261719 * e, 356.633544921875 * e, 305.9858093261719 * e),
        n.bezierCurveTo(288.633544921875 * e, 297.9858093261719 * e, 288.633544921875 * e, 265.9858093261719 * e, 275.633544921875 * e, 266.9858093261719 * e),
        n.bezierCurveTo(280.633544921875 * e, 294.9858093261719 * e, 315.633544921875 * e, 306.9858093261719 * e, 336.633544921875 * e, 316.9858093261719 * e),
        n.bezierCurveTo(295.633544921875 * e, 318.9858093261719 * e, 264.633544921875 * e, 302.9858093261719 * e, 254.633544921875 * e, 289.9858093261719 * e),
        n.bezierCurveTo(252.633544921875 * e, 301.9858093261719 * e, 224.633544921875 * e, 315.9858093261719 * e, 201.633544921875 * e, 356.9858093261719 * e),
        n.bezierCurveTo(195.633544921875 * e, 313.9858093261719 * e, 195.633544921875 * e, 308.9858093261719 * e, 196.633544921875 * e, 307.9858093261719 * e),
        n.bezierCurveTo(197.633544921875 * e, 289.9858093261719 * e, 207.633544921875 * e, 283.9858093261719 * e, 195.633544921875 * e, 258.9858093261719 * e),
        n.bezierCurveTo(182.633544921875 * e, 282.9858093261719 * e, 190.633544921875 * e, 287.9858093261719 * e, 193.633544921875 * e, 297.9858093261719 * e),
        n.bezierCurveTo(195.633544921875 * e, 306.9858093261719 * e, 191.633544921875 * e, 334.9858093261719 * e, 187.633544921875 * e, 354.9858093261719 * e),
        n.bezierCurveTo(165.633544921875 * e, 320.9858093261719 * e, 138.633544921875 * e, 307.9858093261719 * e, 135.633544921875 * e, 288.9858093261719 * e),
        n.bezierCurveTo(110.633544921875 * e, 318.9858093261719 * e, 68.633544921875 * e, 323.9858093261719 * e, 49.633544921875 * e, 320.9858093261719 * e),
        n.bezierCurveTo(88.633544921875 * e, 308.9858093261719 * e, 108.633544921875 * e, 284.9858093261719 * e, 118.633544921875 * e, 258.9858093261719 * e),
        n.bezierCurveTo(86.633544921875 * e, 264.9858093261719 * e, 75.633544921875 * e, 310.9858093261719 * e, 19.633544921875 * e, 304.9858093261719 * e),
        n.bezierCurveTo(54.633544921875 * e, 276.9858093261719 * e, 59.633544921875 * e, 214.98580932617188 * e, 105.633544921875 * e, 205.98580932617188 * e),
        n.bezierCurveTo(14.633544921875 * e, 201.98580932617188 * e, 24.633544921875 * e, 141.98580932617188 * e, 25.633544921875 * e, 82.98580932617188 * e),
        n.bezierCurveTo(49.633544921875 * e, 168.98580932617188 * e, 87.633544921875 * e, 141.98580932617188 * e, 112.633544921875 * e, 123.98580932617188 * e),
        n.bezierCurveTo(95.633544921875 * e, 75.98580932617188 * e, 70.633544921875 * e, 68.98580932617188 * e, 35.633544921875 * e, 50.985809326171875 * e),
        n.bezierCurveTo(70.633544921875 * e, 53.985809326171875 * e, 102.633544921875 * e, 65.98580932617188 * e, 125.633544921875 * e, 84.98580932617188 * e),
        n.bezierCurveTo(133.633544921875 * e, 69.98580932617188 * e, 166.633544921875 * e, 42.985809326171875 * e, 176.633544921875 * e, 21.985809326171875 * e),
        n.bezierCurveTo(185.633544921875 * e, 49.985809326171875 * e, 168.633544921875 * e, 95.98580932617188 * e, 191.633544921875 * e, 121.98580932617188 * e),
        n.closePath(),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        n.translate(-4 * e, -5 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(191.633544921875 * e, 123.98580932617188 * e),
        n.bezierCurveTo(215.633544921875 * e, 85.98580932617188 * e, 187.633544921875 * e, 71.98580932617188 * e, 202.633544921875 * e, 19.985809326171875 * e),
        n.bezierCurveTo(231.633544921875 * e, 68.98580932617188 * e, 253.633544921875 * e, 71.98580932617188 * e, 256.633544921875 * e, 93.98580932617188 * e),
        n.bezierCurveTo(306.633544921875 * e, 64.98580932617188 * e, 319.633544921875 * e, 61.985809326171875 * e, 350.633544921875 * e, 58.985809326171875 * e),
        n.bezierCurveTo(280.633544921875 * e, 86.98580932617188 * e, 281.633544921875 * e, 106.98580932617188 * e, 268.633544921875 * e, 130.98580932617188 * e),
        n.bezierCurveTo(295.633544921875 * e, 158.98580932617188 * e, 328.633544921875 * e, 155.98580932617188 * e, 353.633544921875 * e, 90.98580932617188 * e),
        n.bezierCurveTo(371.633544921875 * e, 158.98580932617188 * e, 337.633544921875 * e, 210.98580932617188 * e, 286.633544921875 * e, 209.98580932617188 * e),
        n.bezierCurveTo(323.633544921875 * e, 230.98580932617188 * e, 317.633544921875 * e, 274.9858093261719 * e, 356.633544921875 * e, 305.9858093261719 * e),
        n.bezierCurveTo(288.633544921875 * e, 297.9858093261719 * e, 288.633544921875 * e, 265.9858093261719 * e, 275.633544921875 * e, 266.9858093261719 * e),
        n.bezierCurveTo(280.633544921875 * e, 294.9858093261719 * e, 315.633544921875 * e, 306.9858093261719 * e, 336.633544921875 * e, 316.9858093261719 * e),
        n.bezierCurveTo(295.633544921875 * e, 318.9858093261719 * e, 264.633544921875 * e, 302.9858093261719 * e, 254.633544921875 * e, 289.9858093261719 * e),
        n.bezierCurveTo(252.633544921875 * e, 301.9858093261719 * e, 224.633544921875 * e, 315.9858093261719 * e, 201.633544921875 * e, 356.9858093261719 * e),
        n.bezierCurveTo(195.633544921875 * e, 313.9858093261719 * e, 195.633544921875 * e, 308.9858093261719 * e, 196.633544921875 * e, 307.9858093261719 * e),
        n.bezierCurveTo(197.633544921875 * e, 289.9858093261719 * e, 207.633544921875 * e, 283.9858093261719 * e, 195.633544921875 * e, 258.9858093261719 * e),
        n.bezierCurveTo(182.633544921875 * e, 282.9858093261719 * e, 190.633544921875 * e, 287.9858093261719 * e, 193.633544921875 * e, 297.9858093261719 * e),
        n.bezierCurveTo(195.633544921875 * e, 306.9858093261719 * e, 191.633544921875 * e, 334.9858093261719 * e, 187.633544921875 * e, 354.9858093261719 * e),
        n.bezierCurveTo(165.633544921875 * e, 320.9858093261719 * e, 138.633544921875 * e, 307.9858093261719 * e, 135.633544921875 * e, 288.9858093261719 * e),
        n.bezierCurveTo(110.633544921875 * e, 318.9858093261719 * e, 68.633544921875 * e, 323.9858093261719 * e, 49.633544921875 * e, 320.9858093261719 * e),
        n.bezierCurveTo(88.633544921875 * e, 308.9858093261719 * e, 108.633544921875 * e, 284.9858093261719 * e, 118.633544921875 * e, 258.9858093261719 * e),
        n.bezierCurveTo(86.633544921875 * e, 264.9858093261719 * e, 75.633544921875 * e, 310.9858093261719 * e, 19.633544921875 * e, 304.9858093261719 * e),
        n.bezierCurveTo(54.633544921875 * e, 276.9858093261719 * e, 59.633544921875 * e, 214.98580932617188 * e, 105.633544921875 * e, 205.98580932617188 * e),
        n.bezierCurveTo(14.633544921875 * e, 201.98580932617188 * e, 24.633544921875 * e, 141.98580932617188 * e, 25.633544921875 * e, 82.98580932617188 * e),
        n.bezierCurveTo(49.633544921875 * e, 168.98580932617188 * e, 87.633544921875 * e, 141.98580932617188 * e, 112.633544921875 * e, 123.98580932617188 * e),
        n.bezierCurveTo(95.633544921875 * e, 75.98580932617188 * e, 70.633544921875 * e, 68.98580932617188 * e, 35.633544921875 * e, 50.985809326171875 * e),
        n.bezierCurveTo(70.633544921875 * e, 53.985809326171875 * e, 102.633544921875 * e, 65.98580932617188 * e, 125.633544921875 * e, 84.98580932617188 * e),
        n.bezierCurveTo(133.633544921875 * e, 69.98580932617188 * e, 166.633544921875 * e, 42.985809326171875 * e, 176.633544921875 * e, 21.985809326171875 * e),
        n.bezierCurveTo(185.633544921875 * e, 49.985809326171875 * e, 168.633544921875 * e, 95.98580932617188 * e, 191.633544921875 * e, 121.98580932617188 * e),
        n.closePath(),
        Ce(n, void 0, t[1], 12 * e),
        n.translate(-1 * e, 0 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(270.633544921875 * e, 88.98580932617188 * e),
        n.bezierCurveTo(296.633544921875 * e, 65.98580932617188 * e, 318.633544921875 * e, 62.985809326171875 * e, 348.633544921875 * e, 57.985809326171875 * e),
        n.bezierCurveTo(309.633544921875 * e, 76.98580932617188 * e, 291.633544921875 * e, 88.98580932617188 * e, 280.633544921875 * e, 99.98580932617188 * e),
        n.closePath(),
        Ce(n, t[4], t[5], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(275.633544921875 * e, 281.9858093261719 * e),
        n.bezierCurveTo(303.633544921875 * e, 308.9858093261719 * e, 321.633544921875 * e, 308.9858093261719 * e, 335.633544921875 * e, 315.9858093261719 * e),
        n.bezierCurveTo(305.633544921875 * e, 320.9858093261719 * e, 278.633544921875 * e, 307.9858093261719 * e, 264.633544921875 * e, 293.9858093261719 * e),
        n.closePath(),
        Ce(n, t[4], t[5], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(124.633544921875 * e, 291.9858093261719 * e),
        n.bezierCurveTo(106.633544921875 * e, 316.9858093261719 * e, 72.633544921875 * e, 325.9858093261719 * e, 53.633544921875 * e, 319.9858093261719 * e),
        n.bezierCurveTo(83.633544921875 * e, 308.9858093261719 * e, 97.633544921875 * e, 298.9858093261719 * e, 112.633544921875 * e, 284.9858093261719 * e),
        n.closePath(),
        Ce(n, t[4], t[5], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(113.633544921875 * e, 80.98580932617188 * e),
        n.bezierCurveTo(91.633544921875 * e, 54.985809326171875 * e, 72.633544921875 * e, 56.985809326171875 * e, 36.633544921875 * e, 49.985809326171875 * e),
        n.bezierCurveTo(87.633544921875 * e, 72.98580932617188 * e, 95.633544921875 * e, 82.98580932617188 * e, 106.633544921875 * e, 96.98580932617188 * e),
        n.closePath(),
        Ce(n, t[4], t[5], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(202.633544921875 * e, 20.985809326171875 * e),
        n.bezierCurveTo(219.633544921875 * e, 49.985809326171875 * e, 259.633544921875 * e, 80.98580932617188 * e, 255.633544921875 * e, 92.98580932617188 * e),
        n.bezierCurveTo(268.633544921875 * e, 86.98580932617188 * e, 265.633544921875 * e, 87.98580932617188 * e, 275.633544921875 * e, 82.98580932617188 * e),
        n.bezierCurveTo(283.633544921875 * e, 87.98580932617188 * e, 283.633544921875 * e, 87.98580932617188 * e, 291.633544921875 * e, 92.98580932617188 * e),
        n.bezierCurveTo(269.633544921875 * e, 116.98580932617188 * e, 270.633544921875 * e, 124.98580932617188 * e, 267.633544921875 * e, 130.98580932617188 * e),
        n.bezierCurveTo(307.633544921875 * e, 168.98580932617188 * e, 339.633544921875 * e, 132.98580932617188 * e, 352.633544921875 * e, 93.98580932617188 * e),
        n.bezierCurveTo(366.633544921875 * e, 145.98580932617188 * e, 345.633544921875 * e, 207.98580932617188 * e, 286.633544921875 * e, 208.98580932617188 * e),
        n.bezierCurveTo(315.633544921875 * e, 223.98580932617188 * e, 327.633544921875 * e, 287.9858093261719 * e, 355.633544921875 * e, 305.9858093261719 * e),
        n.bezierCurveTo(293.633544921875 * e, 298.9858093261719 * e, 293.633544921875 * e, 275.9858093261719 * e, 276.633544921875 * e, 266.9858093261719 * e),
        n.bezierCurveTo(274.633544921875 * e, 282.9858093261719 * e, 287.633544921875 * e, 288.9858093261719 * e, 295.633544921875 * e, 296.9858093261719 * e),
        n.bezierCurveTo(287.133544921875 * e, 302.4858093261719 * e, 287.133544921875 * e, 302.4858093261719 * e, 278.633544921875 * e, 307.9858093261719 * e),
        n.bezierCurveTo(261.633544921875 * e, 297.9858093261719 * e, 258.633544921875 * e, 293.9858093261719 * e, 255.633544921875 * e, 290.9858093261719 * e),
        n.bezierCurveTo(249.633544921875 * e, 301.9858093261719 * e, 225.633544921875 * e, 320.9858093261719 * e, 202.633544921875 * e, 354.9858093261719 * e),
        n.bezierCurveTo(195.633544921875 * e, 318.9858093261719 * e, 196.633544921875 * e, 306.9858093261719 * e, 198.633544921875 * e, 300.9858093261719 * e),
        n.bezierCurveTo(209.633544921875 * e, 268.9858093261719 * e, 199.633544921875 * e, 266.9858093261719 * e, 195.633544921875 * e, 256.9858093261719 * e),
        n.bezierCurveTo(183.633544921875 * e, 274.9858093261719 * e, 182.633544921875 * e, 281.9858093261719 * e, 192.633544921875 * e, 305.9858093261719 * e),
        n.bezierCurveTo(194.633544921875 * e, 317.9858093261719 * e, 191.633544921875 * e, 336.9858093261719 * e, 186.633544921875 * e, 351.9858093261719 * e),
        n.bezierCurveTo(166.633544921875 * e, 318.9858093261719 * e, 141.633544921875 * e, 303.9858093261719 * e, 136.633544921875 * e, 286.9858093261719 * e),
        n.bezierCurveTo(122.633544921875 * e, 303.9858093261719 * e, 115.633544921875 * e, 305.9858093261719 * e, 109.633544921875 * e, 306.9858093261719 * e),
        n.bezierCurveTo(101.133544921875 * e, 301.9858093261719 * e, 94.633544921875 * e, 297.9858093261719 * e, 92.633544921875 * e, 296.9858093261719 * e),
        n.bezierCurveTo(116.633544921875 * e, 277.9858093261719 * e, 116.633544921875 * e, 266.9858093261719 * e, 119.633544921875 * e, 257.9858093261719 * e),
        n.bezierCurveTo(107.633544921875 * e, 257.9858093261719 * e, 65.633544921875 * e, 308.9858093261719 * e, 24.633544921875 * e, 303.9858093261719 * e),
        n.bezierCurveTo(51.633544921875 * e, 275.9858093261719 * e, 64.633544921875 * e, 220.98580932617188 * e, 108.633544921875 * e, 205.98580932617188 * e),
        n.bezierCurveTo(14.633544921875 * e, 198.98580932617188 * e, 26.633544921875 * e, 142.98580932617188 * e, 25.633544921875 * e, 86.98580932617188 * e),
        n.bezierCurveTo(41.633544921875 * e, 155.98580932617188 * e, 81.633544921875 * e, 148.98580932617188 * e, 113.633544921875 * e, 124.98580932617188 * e),
        n.bezierCurveTo(102.633544921875 * e, 93.98580932617188 * e, 95.633544921875 * e, 88.98580932617188 * e, 89.633544921875 * e, 81.98580932617188 * e),
        n.bezierCurveTo(97.633544921875 * e, 76.48580932617188 * e, 97.633544921875 * e, 76.48580932617188 * e, 105.633544921875 * e, 70.98580932617188 * e),
        n.bezierCurveTo(120.633544921875 * e, 78.98580932617188 * e, 121.633544921875 * e, 81.98580932617188 * e, 124.633544921875 * e, 86.98580932617188 * e),
        n.bezierCurveTo(132.633544921875 * e, 71.98580932617188 * e, 160.633544921875 * e, 56.985809326171875 * e, 175.633544921875 * e, 23.985809326171875 * e),
        n.bezierCurveTo(182.633544921875 * e, 53.985809326171875 * e, 170.633544921875 * e, 102.98580932617188 * e, 191.633544921875 * e, 125.98580932617188 * e),
        n.bezierCurveTo(214.633544921875 * e, 89.98580932617188 * e, 192.633544921875 * e, 58.985809326171875 * e, 202.633544921875 * e, 20.985809326171875 * e),
        n.closePath(),
        Ce(n, t[2], t[3], 5 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(203.633544921875 * e, 21.985809326171875 * e),
        n.bezierCurveTo(223.633544921875 * e, 63.985809326171875 * e, 227.633544921875 * e, 72.98580932617188 * e, 235.633544921875 * e, 98.98580932617188 * e),
        n.bezierCurveTo(241.633544921875 * e, 123.98580932617188 * e, 225.633544921875 * e, 138.98580932617188 * e, 196.633544921875 * e, 122.98580932617188 * e),
        n.bezierCurveTo(213.633544921875 * e, 93.98580932617188 * e, 199.633544921875 * e, 49.985809326171875 * e, 203.633544921875 * e, 26.985809326171875 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(175.633544921875 * e, 25.985809326171875 * e),
        n.bezierCurveTo(176.633544921875 * e, 51.985809326171875 * e, 171.633544921875 * e, 88.98580932617188 * e, 186.633544921875 * e, 121.98580932617188 * e),
        n.bezierCurveTo(156.633544921875 * e, 144.98580932617188 * e, 139.633544921875 * e, 120.98580932617188 * e, 147.633544921875 * e, 97.98580932617188 * e),
        n.bezierCurveTo(152.633544921875 * e, 77.98580932617188 * e, 162.633544921875 * e, 60.985809326171875 * e, 176.633544921875 * e, 25.985809326171875 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(26.633544921875 * e, 96.98580932617188 * e),
        n.bezierCurveTo(38.633544921875 * e, 151.98580932617188 * e, 61.633544921875 * e, 161.98580932617188 * e, 88.633544921875 * e, 168.98580932617188 * e),
        n.bezierCurveTo(117.633544921875 * e, 177.98580932617188 * e, 113.633544921875 * e, 185.98580932617188 * e, 106.633544921875 * e, 204.98580932617188 * e),
        n.bezierCurveTo(32.633544921875 * e, 204.98580932617188 * e, 25.633544921875 * e, 149.98580932617188 * e, 25.633544921875 * e, 97.98580932617188 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(351.633544921875 * e, 99.98580932617188 * e),
        n.bezierCurveTo(365.633544921875 * e, 161.98580932617188 * e, 333.633544921875 * e, 203.98580932617188 * e, 287.633544921875 * e, 207.98580932617188 * e),
        n.bezierCurveTo(255.633544921875 * e, 208.98580932617188 * e, 266.633544921875 * e, 174.98580932617188 * e, 285.633544921875 * e, 176.98580932617188 * e),
        n.bezierCurveTo(313.633544921875 * e, 178.98580932617188 * e, 348.633544921875 * e, 135.98580932617188 * e, 353.633544921875 * e, 99.98580932617188 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(350.633544921875 * e, 302.9858093261719 * e),
        n.bezierCurveTo(310.633544921875 * e, 280.9858093261719 * e, 314.633544921875 * e, 244.98580932617188 * e, 292.633544921875 * e, 230.98580932617188 * e),
        n.bezierCurveTo(272.633544921875 * e, 215.98580932617188 * e, 263.633544921875 * e, 222.98580932617188 * e, 256.633544921875 * e, 236.98580932617188 * e),
        n.bezierCurveTo(251.633544921875 * e, 249.98580932617188 * e, 264.633544921875 * e, 255.98580932617188 * e, 279.633544921875 * e, 268.9858093261719 * e),
        n.bezierCurveTo(306.633544921875 * e, 295.9858093261719 * e, 325.633544921875 * e, 299.9858093261719 * e, 349.633544921875 * e, 302.9858093261719 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(95.633544921875 * e, 224.98580932617188 * e),
        n.bezierCurveTo(64.633544921875 * e, 245.98580932617188 * e, 62.633544921875 * e, 280.9858093261719 * e, 32.633544921875 * e, 303.9858093261719 * e),
        n.bezierCurveTo(59.633544921875 * e, 301.9858093261719 * e, 102.633544921875 * e, 260.9858093261719 * e, 116.633544921875 * e, 255.98580932617188 * e),
        n.bezierCurveTo(139.633544921875 * e, 229.98580932617188 * e, 108.633544921875 * e, 209.98580932617188 * e, 97.633544921875 * e, 224.98580932617188 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(195.633544921875 * e, 253.98580932617188 * e),
        n.bezierCurveTo(209.633544921875 * e, 282.9858093261719 * e, 205.633544921875 * e, 278.9858093261719 * e, 199.633544921875 * e, 307.9858093261719 * e),
        n.bezierCurveTo(198.633544921875 * e, 332.9858093261719 * e, 201.633544921875 * e, 340.9858093261719 * e, 202.633544921875 * e, 348.9858093261719 * e),
        n.bezierCurveTo(215.633544921875 * e, 313.9858093261719 * e, 226.633544921875 * e, 291.9858093261719 * e, 235.633544921875 * e, 270.9858093261719 * e),
        n.bezierCurveTo(243.633544921875 * e, 247.98580932617188 * e, 219.633544921875 * e, 235.98580932617188 * e, 196.633544921875 * e, 252.98580932617188 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(195.633544921875 * e, 251.98580932617188 * e),
        n.bezierCurveTo(176.633544921875 * e, 275.9858093261719 * e, 182.633544921875 * e, 285.9858093261719 * e, 191.633544921875 * e, 308.9858093261719 * e),
        n.bezierCurveTo(194.633544921875 * e, 318.9858093261719 * e, 190.633544921875 * e, 334.9858093261719 * e, 186.633544921875 * e, 348.9858093261719 * e),
        n.bezierCurveTo(175.633544921875 * e, 307.9858093261719 * e, 157.633544921875 * e, 291.9858093261719 * e, 155.633544921875 * e, 272.9858093261719 * e),
        n.bezierCurveTo(150.633544921875 * e, 243.98580932617188 * e, 170.633544921875 * e, 236.98580932617188 * e, 195.633544921875 * e, 251.98580932617188 * e),
        n.closePath(),
        Ce(n, t[3]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(316 * e, 186.8020782470703 * e),
        n.bezierCurveTo(315 * e, 173.8020782470703 * e, 298 * e, 177.8020782470703 * e, 293 * e, 183.8020782470703 * e),
        n.bezierCurveTo(285 * e, 195.8020782470703 * e, 314 * e, 197.8020782470703 * e, 315 * e, 187.8020782470703 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(340 * e, 157.8020782470703 * e),
        n.bezierCurveTo(327 * e, 153.8020782470703 * e, 321 * e, 168.8020782470703 * e, 330 * e, 174.8020782470703 * e),
        n.bezierCurveTo(341 * e, 178.8020782470703 * e, 347 * e, 161.8020782470703 * e, 341 * e, 157.8020782470703 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(349 * e, 136.8020782470703 * e),
        n.bezierCurveTo(343 * e, 135.8020782470703 * e, 342 * e, 139.8020782470703 * e, 341 * e, 147.8020782470703 * e),
        n.bezierCurveTo(343 * e, 155.8020782470703 * e, 353 * e, 143.8020782470703 * e, 349 * e, 137.8020782470703 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(278.75 * e, 246.4375 * e),
        n.bezierCurveTo(288.75 * e, 242.4375 * e, 301.75 * e, 248.4375 * e, 298.75 * e, 262.4375 * e),
        n.bezierCurveTo(293.75 * e, 271.4375 * e, 287.75 * e, 271.4375 * e, 278.75 * e, 262.4375 * e),
        n.bezierCurveTo(271.75 * e, 255.4375 * e, 274.75 * e, 250.4375 * e, 277.75 * e, 247.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(310.75 * e, 277.4375 * e),
        n.bezierCurveTo(319.75 * e, 280.4375 * e, 322.75 * e, 283.4375 * e, 321.75 * e, 289.4375 * e),
        n.bezierCurveTo(319.75 * e, 295.4375 * e, 313.75 * e, 291.4375 * e, 308.75 * e, 288.4375 * e),
        n.bezierCurveTo(301.75 * e, 281.4375 * e, 306.75 * e, 277.4375 * e, 309.75 * e, 277.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(217.75 * e, 257.4375 * e),
        n.bezierCurveTo(227.75 * e, 269.4375 * e, 220.75 * e, 281.4375 * e, 212.75 * e, 280.4375 * e),
        n.bezierCurveTo(206.75 * e, 279.4375 * e, 206.75 * e, 269.4375 * e, 204.75 * e, 260.4375 * e),
        n.bezierCurveTo(204.75 * e, 254.4375 * e, 211.75 * e, 253.4375 * e, 216.75 * e, 256.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(211.75 * e, 289.4375 * e),
        n.bezierCurveTo(219.75 * e, 292.4375 * e, 213.75 * e, 306.4375 * e, 206.75 * e, 307.4375 * e),
        n.bezierCurveTo(199.75 * e, 303.4375 * e, 209.75 * e, 287.4375 * e, 210.75 * e, 289.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(171.75 * e, 256.4375 * e),
        n.bezierCurveTo(162.75 * e, 273.4375 * e, 166.75 * e, 278.4375 * e, 175.75 * e, 280.4375 * e),
        n.bezierCurveTo(183.75 * e, 278.4375 * e, 185.75 * e, 257.4375 * e, 182.75 * e, 255.4375 * e),
        n.bezierCurveTo(176.75 * e, 251.4375 * e, 172.75 * e, 253.4375 * e, 172.75 * e, 256.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(175.75 * e, 289.9375 * e),
        n.bezierCurveTo(183.75 * e, 287.9375 * e, 186.75 * e, 301.9375 * e, 182.75 * e, 305.9375 * e),
        n.bezierCurveTo(176.75 * e, 307.9375 * e, 171.75 * e, 292.9375 * e, 174.75 * e, 290.9375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(205.75 * e, 314.4375 * e),
        n.bezierCurveTo(209.75 * e, 316.4375 * e, 210.75 * e, 320.4375 * e, 206.75 * e, 323.4375 * e),
        n.bezierCurveTo(201.75 * e, 324.4375 * e, 201.75 * e, 314.4375 * e, 204.75 * e, 314.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(186.75 * e, 313.4375 * e),
        n.bezierCurveTo(181.75 * e, 315.4375 * e, 180.75 * e, 321.4375 * e, 185.75 * e, 326.4375 * e),
        n.bezierCurveTo(190.75 * e, 327.4375 * e, 190.75 * e, 313.4375 * e, 187.75 * e, 314.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(103.75 * e, 244.4375 * e),
        n.bezierCurveTo(96.75 * e, 239.4375 * e, 83.75 * e, 240.4375 * e, 81.75 * e, 255.4375 * e),
        n.bezierCurveTo(80.75 * e, 264.4375 * e, 89.75 * e, 269.4375 * e, 99.75 * e, 260.4375 * e),
        n.bezierCurveTo(106.75 * e, 254.4375 * e, 106.75 * e, 250.4375 * e, 104.75 * e, 245.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(86.75 * e, 182.4375 * e),
        n.bezierCurveTo(82.75 * e, 170.4375 * e, 66.75 * e, 169.4375 * e, 61.75 * e, 181.4375 * e),
        n.bezierCurveTo(58.75 * e, 187.4375 * e, 68.75 * e, 194.4375 * e, 75.75 * e, 192.4375 * e),
        n.bezierCurveTo(83.75 * e, 192.4375 * e, 86.75 * e, 187.4375 * e, 86.75 * e, 183.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(44.75 * e, 152.4375 * e),
        n.bezierCurveTo(55.75 * e, 159.4375 * e, 54.75 * e, 170.4375 * e, 46.75 * e, 171.4375 * e),
        n.bezierCurveTo(39.75 * e, 170.4375 * e, 34.75 * e, 151.4375 * e, 43.75 * e, 152.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(31.75 * e, 130.4375 * e),
        n.bezierCurveTo(35.75 * e, 132.4375 * e, 35.75 * e, 131.4375 * e, 37.75 * e, 137.4375 * e),
        n.bezierCurveTo(36.75 * e, 144.4375 * e, 36.75 * e, 145.4375 * e, 33.75 * e, 144.4375 * e),
        n.bezierCurveTo(26.75 * e, 137.4375 * e, 29.75 * e, 131.4375 * e, 31.75 * e, 130.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(69.75 * e, 274.4375 * e),
        n.bezierCurveTo(62.75 * e, 272.4375 * e, 59.75 * e, 277.4375 * e, 57.75 * e, 284.4375 * e),
        n.bezierCurveTo(56.75 * e, 290.4375 * e, 63.75 * e, 289.4375 * e, 71.75 * e, 282.4375 * e),
        n.bezierCurveTo(75.75 * e, 277.4375 * e, 72.75 * e, 275.4375 * e, 69.75 * e, 274.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(165.75 * e, 95.4375 * e),
        n.bezierCurveTo(177.75 * e, 97.4375 * e, 182.75 * e, 115.4375 * e, 173.75 * e, 121.4375 * e),
        n.bezierCurveTo(164.75 * e, 126.4375 * e, 149.75 * e, 102.4375 * e, 164.75 * e, 96.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(216.75 * e, 94.4375 * e),
        n.bezierCurveTo(227.75 * e, 99.4375 * e, 223.75 * e, 122.4375 * e, 210.75 * e, 119.4375 * e),
        n.bezierCurveTo(203.75 * e, 115.4375 * e, 207.75 * e, 93.4375 * e, 216.75 * e, 94.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(211.75 * e, 68.4375 * e),
        n.bezierCurveTo(218.75 * e, 69.4375 * e, 220.75 * e, 77.4375 * e, 216.75 * e, 83.4375 * e),
        n.bezierCurveTo(208.75 * e, 89.4375 * e, 205.75 * e, 68.4375 * e, 210.75 * e, 68.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(169.75 * e, 71.4375 * e),
        n.bezierCurveTo(162.75 * e, 72.4375 * e, 159.75 * e, 83.4375 * e, 167.75 * e, 88.4375 * e),
        n.bezierCurveTo(174.75 * e, 90.4375 * e, 174.75 * e, 72.4375 * e, 170.75 * e, 71.4375 * e),
        n.closePath(),
        Ce(n, t[6], t[7], 4 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(193.75 * e, 160.4375 * e),
        n.bezierCurveTo(215.75 * e, 168.4375 * e, 224.75 * e, 180.4375 * e, 229.75 * e, 193.4375 * e),
        n.bezierCurveTo(223.75 * e, 211.4375 * e, 205.75 * e, 225.4375 * e, 193.75 * e, 229.4375 * e),
        n.bezierCurveTo(167.75 * e, 217.4375 * e, 161.75 * e, 205.4375 * e, 156.75 * e, 192.4375 * e),
        n.bezierCurveTo(164.75 * e, 175.4375 * e, 176.75 * e, 166.4375 * e, 192.75 * e, 160.4375 * e),
        n.closePath(),
        Ce(n, t[8], t[9], 3 * e),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(189.1999969482422 * e, 182.61249923706055 * e),
        n.bezierCurveTo(190.1999969482422 * e, 184.11249923706055 * e, 190.1999969482422 * e, 184.11249923706055 * e, 191.1999969482422 * e, 185.61249923706055 * e),
        n.bezierCurveTo(192.1999969482422 * e, 180.61249923706055 * e, 192.1999969482422 * e, 180.61249923706055 * e, 193.1999969482422 * e, 175.61249923706055 * e),
        n.bezierCurveTo(195.6999969482422 * e, 177.11249923706055 * e, 195.6999969482422 * e, 177.11249923706055 * e, 198.1999969482422 * e, 178.61249923706055 * e),
        n.bezierCurveTo(198.1999969482422 * e, 181.11249923706055 * e, 198.1999969482422 * e, 181.11249923706055 * e, 198.1999969482422 * e, 183.61249923706055 * e),
        n.bezierCurveTo(201.6999969482422 * e, 181.11249923706055 * e, 201.6999969482422 * e, 181.11249923706055 * e, 205.1999969482422 * e, 178.61249923706055 * e),
        n.bezierCurveTo(206.6999969482422 * e, 180.61249923706055 * e, 206.6999969482422 * e, 180.61249923706055 * e, 208.1999969482422 * e, 182.61249923706055 * e),
        n.bezierCurveTo(206.1999969482422 * e, 185.61249923706055 * e, 206.1999969482422 * e, 185.61249923706055 * e, 204.1999969482422 * e, 188.61249923706055 * e),
        n.bezierCurveTo(208.6999969482422 * e, 188.61249923706055 * e, 208.6999969482422 * e, 188.61249923706055 * e, 213.1999969482422 * e, 188.61249923706055 * e),
        n.bezierCurveTo(213.1999969482422 * e, 191.11249923706055 * e, 213.1999969482422 * e, 191.11249923706055 * e, 213.1999969482422 * e, 193.61249923706055 * e),
        n.bezierCurveTo(209.6999969482422 * e, 194.61249923706055 * e, 209.6999969482422 * e, 194.61249923706055 * e, 206.1999969482422 * e, 195.61249923706055 * e),
        n.bezierCurveTo(210.1999969482422 * e, 198.61249923706055 * e, 210.1999969482422 * e, 198.61249923706055 * e, 214.1999969482422 * e, 201.61249923706055 * e),
        n.bezierCurveTo(212.1999969482422 * e, 203.61249923706055 * e, 212.1999969482422 * e, 203.61249923706055 * e, 210.1999969482422 * e, 205.61249923706055 * e),
        n.bezierCurveTo(207.1999969482422 * e, 204.11249923706055 * e, 207.1999969482422 * e, 204.11249923706055 * e, 204.1999969482422 * e, 202.61249923706055 * e),
        n.bezierCurveTo(205.6999969482422 * e, 207.61249923706055 * e, 205.6999969482422 * e, 207.61249923706055 * e, 207.1999969482422 * e, 212.61249923706055 * e),
        n.bezierCurveTo(204.6999969482422 * e, 213.61249923706055 * e, 204.6999969482422 * e, 213.61249923706055 * e, 202.1999969482422 * e, 214.61249923706055 * e),
        n.bezierCurveTo(200.1999969482422 * e, 210.61249923706055 * e, 200.1999969482422 * e, 210.61249923706055 * e, 198.1999969482422 * e, 206.61249923706055 * e),
        n.bezierCurveTo(196.6999969482422 * e, 211.61249923706055 * e, 196.6999969482422 * e, 211.61249923706055 * e, 195.1999969482422 * e, 216.61249923706055 * e),
        n.bezierCurveTo(192.6999969482422 * e, 216.11249923706055 * e, 192.6999969482422 * e, 216.11249923706055 * e, 190.1999969482422 * e, 215.61249923706055 * e),
        n.bezierCurveTo(190.1999969482422 * e, 211.61249923706055 * e, 190.1999969482422 * e, 211.61249923706055 * e, 190.1999969482422 * e, 207.61249923706055 * e),
        n.bezierCurveTo(186.1999969482422 * e, 210.61249923706055 * e, 186.1999969482422 * e, 210.61249923706055 * e, 182.1999969482422 * e, 213.61249923706055 * e),
        n.bezierCurveTo(181.1999969482422 * e, 211.11249923706055 * e, 181.1999969482422 * e, 211.11249923706055 * e, 180.1999969482422 * e, 208.61249923706055 * e),
        n.bezierCurveTo(183.1999969482422 * e, 205.61249923706055 * e, 183.1999969482422 * e, 205.61249923706055 * e, 186.1999969482422 * e, 202.61249923706055 * e),
        n.bezierCurveTo(180.6999969482422 * e, 203.11249923706055 * e, 180.6999969482422 * e, 203.11249923706055 * e, 175.1999969482422 * e, 203.61249923706055 * e),
        n.bezierCurveTo(174.6999969482422 * e, 200.11249923706055 * e, 174.6999969482422 * e, 200.11249923706055 * e, 174.1999969482422 * e, 196.61249923706055 * e),
        n.bezierCurveTo(177.1999969482422 * e, 195.61249923706055 * e, 177.1999969482422 * e, 195.61249923706055 * e, 180.1999969482422 * e, 194.61249923706055 * e),
        n.bezierCurveTo(177.1999969482422 * e, 191.61249923706055 * e, 177.1999969482422 * e, 191.61249923706055 * e, 174.1999969482422 * e, 188.61249923706055 * e),
        n.bezierCurveTo(175.6999969482422 * e, 187.11249923706055 * e, 175.6999969482422 * e, 187.11249923706055 * e, 177.1999969482422 * e, 185.61249923706055 * e),
        n.bezierCurveTo(180.6999969482422 * e, 187.11249923706055 * e, 180.6999969482422 * e, 187.11249923706055 * e, 184.1999969482422 * e, 188.61249923706055 * e),
        n.bezierCurveTo(182.6999969482422 * e, 183.61249923706055 * e, 182.6999969482422 * e, 183.61249923706055 * e, 181.1999969482422 * e, 178.61249923706055 * e),
        n.bezierCurveTo(183.1999969482422 * e, 177.11249923706055 * e, 183.1999969482422 * e, 177.11249923706055 * e, 185.1999969482422 * e, 175.61249923706055 * e),
        n.closePath(),
        Ce(n, t[10]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(185.1999969482422 * e, 173.8125 * e),
        n.bezierCurveTo(187.1999969482422 * e, 179.3125 * e, 187.1999969482422 * e, 179.3125 * e, 189.1999969482422 * e, 184.8125 * e),
        n.bezierCurveTo(184.1999969482422 * e, 181.8125 * e, 184.1999969482422 * e, 181.8125 * e, 179.1999969482422 * e, 178.8125 * e),
        n.bezierCurveTo(181.1999969482422 * e, 175.8125 * e, 182.1999969482422 * e, 174.8125 * e, 185.1999969482422 * e, 173.8125 * e),
        n.closePath(),
        Ce(n, t[11]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(192.1999969482422 * e, 173.61249542236328 * e),
        n.bezierCurveTo(194.1999969482422 * e, 172.61249542236328 * e, 196.1999969482422 * e, 171.61249542236328 * e, 199.1999969482422 * e, 173.61249542236328 * e),
        n.bezierCurveTo(197.6999969482422 * e, 179.61249542236328 * e, 197.6999969482422 * e, 179.61249542236328 * e, 196.1999969482422 * e, 185.61249542236328 * e),
        n.bezierCurveTo(194.1999969482422 * e, 179.61249542236328 * e, 194.1999969482422 * e, 179.61249542236328 * e, 192.1999969482422 * e, 173.61249542236328 * e),
        n.closePath(),
        Ce(n, t[11]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(205.1999969482422 * e, 176.2125015258789 * e),
        n.bezierCurveTo(210.1999969482422 * e, 178.2125015258789 * e, 211.1999969482422 * e, 179.2125015258789 * e, 211.1999969482422 * e, 181.2125015258789 * e),
        n.bezierCurveTo(206.6999969482422 * e, 184.7125015258789 * e, 206.6999969482422 * e, 184.7125015258789 * e, 202.1999969482422 * e, 188.2125015258789 * e),
        n.bezierCurveTo(203.6999969482422 * e, 182.2125015258789 * e, 203.6999969482422 * e, 182.2125015258789 * e, 205.1999969482422 * e, 176.2125015258789 * e),
        n.closePath(),
        Ce(n, t[11]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(214.1999969482422 * e, 187.21249985694885 * e),
        n.bezierCurveTo(216.1999969482422 * e, 191.21249985694885 * e, 216.1999969482422 * e, 192.21249985694885 * e, 215.1999969482422 * e, 195.21249985694885 * e),
        n.bezierCurveTo(206.1999969482422 * e, 194.21249985694885 * e, 205.1999969482422 * e, 194.21249985694885 * e, 205.1999969482422 * e, 194.21249985694885 * e),
        n.bezierCurveTo(209.6999969482422 * e, 190.71249985694885 * e, 209.6999969482422 * e, 190.71249985694885 * e, 214.1999969482422 * e, 187.21249985694885 * e),
        n.closePath(),
        Ce(n, t[11]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(204.1999969482422 * e, 201.8125 * e),
        n.bezierCurveTo(209.1999969482422 * e, 201.3125 * e, 209.1999969482422 * e, 201.3125 * e, 214.1999969482422 * e, 200.8125 * e),
        n.bezierCurveTo(215.1999969482422 * e, 204.8125 * e, 214.1999969482422 * e, 205.8125 * e, 213.1999969482422 * e, 208.8125 * e),
        n.bezierCurveTo(208.6999969482422 * e, 205.3125 * e, 208.6999969482422 * e, 205.3125 * e, 204.1999969482422 * e, 201.8125 * e),
        n.closePath(),
        Ce(n, t[11]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(199.1999969482422 * e, 205.61249923706055 * e),
        n.bezierCurveTo(207.1999969482422 * e, 212.61249923706055 * e, 203.6999969482422 * e, 209.11249923706055 * e, 208.1999969482422 * e, 212.61249923706055 * e),
        n.bezierCurveTo(206.1999969482422 * e, 215.61249923706055 * e, 204.1999969482422 * e, 217.61249923706055 * e, 203.1999969482422 * e, 216.61249923706055 * e),
        n.bezierCurveTo(201.1999969482422 * e, 211.11249923706055 * e, 201.1999969482422 * e, 211.11249923706055 * e, 199.1999969482422 * e, 205.61249923706055 * e),
        n.closePath(),
        Ce(n, t[11]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(191.1999969482422 * e, 207.01250076293945 * e),
        n.bezierCurveTo(194.1999969482422 * e, 213.01250076293945 * e, 194.1999969482422 * e, 216.01250076293945 * e, 196.1999969482422 * e, 218.01250076293945 * e),
        n.bezierCurveTo(193.1999969482422 * e, 220.01250076293945 * e, 190.1999969482422 * e, 220.01250076293945 * e, 188.1999969482422 * e, 218.01250076293945 * e),
        n.bezierCurveTo(189.6999969482422 * e, 213.01250076293945 * e, 189.6999969482422 * e, 213.01250076293945 * e, 191.1999969482422 * e, 208.01250076293945 * e),
        n.closePath(),
        Ce(n, t[11]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(186.1999969482422 * e, 203.21249961853027 * e),
        n.bezierCurveTo(184.1999969482422 * e, 209.21249961853027 * e, 184.1999969482422 * e, 209.21249961853027 * e, 182.1999969482422 * e, 215.21249961853027 * e),
        n.bezierCurveTo(177.1999969482422 * e, 212.21249961853027 * e, 176.1999969482422 * e, 211.21249961853027 * e, 177.1999969482422 * e, 210.21249961853027 * e),
        n.bezierCurveTo(181.6999969482422 * e, 206.71249961853027 * e, 181.6999969482422 * e, 206.71249961853027 * e, 186.1999969482422 * e, 203.21249961853027 * e),
        n.closePath(),
        Ce(n, t[11]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(183.1999969482422 * e, 196.8125 * e),
        n.bezierCurveTo(177.1999969482422 * e, 196.3125 * e, 177.1999969482422 * e, 196.3125 * e, 171.1999969482422 * e, 195.8125 * e),
        n.bezierCurveTo(171.1999969482422 * e, 199.8125 * e, 171.1999969482422 * e, 202.8125 * e, 174.1999969482422 * e, 204.8125 * e),
        n.bezierCurveTo(178.6999969482422 * e, 200.8125 * e, 178.6999969482422 * e, 200.8125 * e, 183.1999969482422 * e, 196.8125 * e),
        n.closePath(),
        Ce(n, t[11]),
        n.beginPath(),
        n.lineCap = "round",
        n.lineJoin = "round",
        n.moveTo(185.1999969482422 * e, 190.21249771118164 * e),
        n.bezierCurveTo(179.6999969482422 * e, 186.71249771118164 * e, 179.6999969482422 * e, 186.71249771118164 * e, 174.1999969482422 * e, 183.21249771118164 * e),
        n.bezierCurveTo(172.1999969482422 * e, 186.21249771118164 * e, 172.1999969482422 * e, 187.21249771118164 * e, 172.1999969482422 * e, 190.21249771118164 * e),
        n.bezierCurveTo(178.1999969482422 * e, 190.21249771118164 * e, 178.1999969482422 * e, 190.21249771118164 * e, 184.1999969482422 * e, 190.21249771118164 * e),
        n.closePath(),
        Ce(n, t[11]),
        we(n, 126.19999694824219 * e, 169.8125 * e, 8.94427190999916 * e),
        Ce(n, t[12]),
        we(n, 123.19999694824219 * e, 164.8125 * e, 2.8284271247461903 * e),
        Ce(n, t[13]),
        we(n, 253.1999969482422 * e, 169.8125 * e, 8.94427190999916 * e),
        Ce(n, t[12]),
        we(n, 255.1999969482422 * e, 164.8125 * e, 2.23606797749979 * e),
        Ce(n, t[13]),
        i
    }
    function Ei(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 400 * e,
        n.height = 400 * e,
        r.globalAlpha = 1,
        r.translate(20 * e, 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36.5 * e, 278.0625 * e),
        r.bezierCurveTo(67.5 * e, 316.0625 * e, 134.5 * e, 334.0625 * e, 199.5 * e, 319.0625 * e),
        r.bezierCurveTo(254.5 * e, 304.0625 * e, 346.5 * e, 270.0625 * e, 348.5 * e, 237.0625 * e),
        r.bezierCurveTo(359.5 * e, 206.0625 * e, 318.5 * e, 129.0625 * e, 262.5 * e, 122.0625 * e),
        r.bezierCurveTo(213.5 * e, 115.0625 * e, 166.5 * e, 133.0625 * e, 104.5 * e, 166.0625 * e),
        r.bezierCurveTo(54.5 * e, 194.0625 * e, 23.5 * e, 241.0625 * e, 36.5 * e, 277.0625 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(-20 * e, -20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36.5 * e, 278.0625 * e),
        r.bezierCurveTo(67.5 * e, 316.0625 * e, 134.5 * e, 334.0625 * e, 199.5 * e, 319.0625 * e),
        r.bezierCurveTo(254.5 * e, 304.0625 * e, 346.5 * e, 270.0625 * e, 348.5 * e, 237.0625 * e),
        r.bezierCurveTo(359.5 * e, 206.0625 * e, 318.5 * e, 129.0625 * e, 262.5 * e, 122.0625 * e),
        r.bezierCurveTo(213.5 * e, 115.0625 * e, 166.5 * e, 133.0625 * e, 104.5 * e, 166.0625 * e),
        r.bezierCurveTo(54.5 * e, 194.0625 * e, 23.5 * e, 241.0625 * e, 36.5 * e, 277.0625 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 19 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(214.5 * e, 124.0625 * e),
        r.bezierCurveTo(242.5 * e, 125.0625 * e, 272.5 * e, 159.0625 * e, 283.5 * e, 184.0625 * e),
        r.bezierCurveTo(277.5 * e, 161.0625 * e, 233.5 * e, 128.0625 * e, 219.5 * e, 122.0625 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 19 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(157.5 * e, 145.0625 * e),
        r.bezierCurveTo(176.5 * e, 148.0625 * e, 205.5 * e, 176.0625 * e, 212.5 * e, 197.0625 * e),
        r.bezierCurveTo(205.5 * e, 178.0625 * e, 177.5 * e, 152.0625 * e, 156.5 * e, 142.0625 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 19 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(103.5 * e, 169.0625 * e),
        r.bezierCurveTo(160.5 * e, 166.0625 * e, 228.5 * e, 312.0625 * e, 162.5 * e, 323.0625 * e),
        r.bezierCurveTo(128.5 * e, 330.0625 * e, 45.5 * e, 312.0625 * e, 34.5 * e, 268.0625 * e),
        r.bezierCurveTo(30.5 * e, 238.0625 * e, 44.5 * e, 222.0625 * e, 52.5 * e, 211.0625 * e),
        r.bezierCurveTo(82.5 * e, 174.0625 * e, 104.5 * e, 166.0625 * e, 119.5 * e, 172.0625 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 19 * e),
        we(r, 92.5 * e, 216.0625 * e, 13.892443989449804 * e),
        Ce(r, i[4]),
        we(r, 68.5 * e, 227.0625 * e, 8.06225774829855 * e),
        Ce(r, i[4]),
        we(r, 85.5 * e, 240.0625 * e, 6.708203932499369 * e),
        Ce(r, i[4]),
        we(r, 147.5 * e, 294.0625 * e, 17.46424919657298 * e),
        Ce(r, i[4]),
        we(r, 166.5 * e, 273.0625 * e, 6.708203932499369 * e),
        Ce(r, i[4]),
        we(r, 114.5 * e, 294.0625 * e, 12.36931687685298 * e),
        Ce(r, i[4]),
        we(r, 123.5 * e, 220.0625 * e, 5.830951894845301 * e),
        Ce(r, i[4]),
        we(r, 114.5 * e, 259.0625 * e, 4.123105625617661 * e),
        Ce(r, i[4]),
        we(r, 63.5 * e, 265.0625 * e, 5.385164807134504 * e),
        Ce(r, i[4]),
        we(r, 148.5 * e, 235.0625 * e, 4.47213595499958 * e),
        Ce(r, i[4]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(194.5 * e, 313.0625 * e),
        r.bezierCurveTo(222.5 * e, 306.0625 * e, 319.5 * e, 271.0625 * e, 337.5 * e, 241.0625 * e),
        r.bezierCurveTo(274.5 * e, 270.0625 * e, 216.5 * e, 288.0625 * e, 199.5 * e, 287.0625 * e),
        r.bezierCurveTo(198.5 * e, 302.0625 * e, 195.5 * e, 311.0625 * e, 193.5 * e, 312.0625 * e),
        r.closePath(),
        Ce(r, i[5]),
        n
    }
    function Ti(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 440 * e,
        n.height = 388 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        we(r, 220 * e, 201 * e, 170.41713528867922 * e),
        Ce(r, i[0], i[0], 6 * e),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        we(r, 220 * e, 201 * e, 170.41713528867922 * e),
        Ce(r, i[1], i[2], 6 * e),
        we(r, 220 * e, 201 * e, 130 * e),
        Ce(r, i[11], i[2], 6 * e),
        we(r, 222 * e, 199 * e, 120.74767078498864 * e),
        Ce(r, void 0, i[3], 40 * e),
        we(r, 220 * e, 200 * e, 95.44108130150245 * e),
        Ce(r, void 0, i[2], 15 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        we(r, 63 * e, 136 * e, 49.193495504995376 * e),
        Ce(r, i[0], i[0], 4 * e),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        we(r, 63 * e, 136 * e, 49.193495504995376 * e),
        Ce(r, i[8], i[2], 4 * e),
        we(r, 63 * e, 137 * e, 25.632011235952593 * e),
        Ce(r, i[7], i[2], 4 * e),
        n
    }
    function Ai(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 440 * e,
        n.height = 388 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        we(r, 220 * e, 201 * e, 170.41713528867922 * e),
        Ce(r, i[0], i[0], 6 * e),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        we(r, 220 * e, 201 * e, 170.41713528867922 * e),
        Ce(r, i[1], i[2], 6 * e),
        we(r, 220 * e, 201 * e, 130 * e),
        Ce(r, i[11], i[2], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(218 * e, 97 * e),
        r.bezierCurveTo(219 * e, 163 * e, 201 * e, 176 * e, 191 * e, 175 * e),
        r.bezierCurveTo(176 * e, 177 * e, 168 * e, 167 * e, 160 * e, 115 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(224 * e, 181 * e),
        r.bezierCurveTo(225 * e, 138 * e, 246 * e, 115 * e, 263 * e, 137 * e),
        r.bezierCurveTo(282 * e, 174 * e, 279 * e, 217 * e, 265 * e, 243 * e),
        r.bezierCurveTo(253 * e, 264 * e, 240 * e, 256 * e, 233 * e, 238 * e),
        r.bezierCurveTo(221 * e, 212 * e, 225 * e, 198 * e, 224 * e, 184 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(169 * e, 289 * e),
        r.bezierCurveTo(161 * e, 234 * e, 168 * e, 197 * e, 187 * e, 195 * e),
        r.bezierCurveTo(219 * e, 189 * e, 222 * e, 256 * e, 216 * e, 307 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(143 * e, 146 * e),
        r.bezierCurveTo(161 * e, 199 * e, 151 * e, 245 * e, 138 * e, 266 * e),
        r.bezierCurveTo(120.5 * e, 239.5 * e, 120.5 * e, 239.5 * e, 103 * e, 213 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(283 * e, 135 * e),
        r.bezierCurveTo(277 * e, 176 * e, 298 * e, 194 * e, 315 * e, 205 * e),
        r.bezierCurveTo(323.5 * e, 175 * e, 323.5 * e, 175 * e, 332 * e, 145 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(318 * e, 223 * e),
        r.bezierCurveTo(290 * e, 195 * e, 271 * e, 256 * e, 283 * e, 281 * e),
        r.bezierCurveTo(303.5 * e, 267 * e, 303.5 * e, 267 * e, 324 * e, 253 * e),
        r.closePath(),
        Ce(r, i[5], i[6], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(142 * e, 223 * e),
        r.bezierCurveTo(128 * e, 213 * e, 123 * e, 214 * e, 111 * e, 223 * e),
        r.closePath(),
        Ce(r, i[10], i[10], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(251 * e, 133 * e),
        r.bezierCurveTo(269 * e, 188 * e, 262 * e, 229 * e, 251 * e, 253 * e),
        r.bezierCurveTo(288 * e, 224 * e, 273 * e, 139 * e, 252 * e, 133 * e),
        r.closePath(),
        Ce(r, i[10], i[10], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(203 * e, 102 * e),
        r.bezierCurveTo(204 * e, 136 * e, 200 * e, 159 * e, 189 * e, 174 * e),
        r.bezierCurveTo(223 * e, 164 * e, 219 * e, 87 * e, 205 * e, 83 * e),
        r.closePath(),
        Ce(r, i[10], i[10], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(196 * e, 324 * e),
        r.bezierCurveTo(209 * e, 239 * e, 200 * e, 219 * e, 192 * e, 196 * e),
        r.bezierCurveTo(229 * e, 216 * e, 219 * e, 316 * e, 198 * e, 325 * e),
        r.closePath(),
        Ce(r, i[10], i[10], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(266 * e, 166 * e),
        r.bezierCurveTo(249 * e, 154 * e, 243 * e, 161 * e, 233 * e, 167 * e),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(269 * e, 192 * e),
        r.bezierCurveTo(256 * e, 183 * e, 241 * e, 186 * e, 233 * e, 192 * e),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(263 * e, 217 * e),
        r.bezierCurveTo(251 * e, 211 * e, 242 * e, 213 * e, 236 * e, 218 * e),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(204 * e, 141 * e),
        r.bezierCurveTo(191 * e, 131 * e, 187 * e, 133 * e, 176 * e, 141 * e),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(207 * e, 230 * e),
        r.bezierCurveTo(193 * e, 222 * e, 185 * e, 224 * e, 177 * e, 231 * e),
        Ce(r, void 0, i[6], 6 * e),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(210 * e, 258 * e),
        r.bezierCurveTo(196 * e, 247 * e, 191 * e, 250 * e, 177 * e, 259 * e),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(145 * e, 196 * e),
        r.bezierCurveTo(130 * e, 186 * e, 124 * e, 187 * e, 114 * e, 195 * e),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(218 * e, 97 * e),
        r.bezierCurveTo(219 * e, 163 * e, 201 * e, 176 * e, 191 * e, 175 * e),
        r.bezierCurveTo(176 * e, 177 * e, 168 * e, 167 * e, 160 * e, 115 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(224 * e, 181 * e),
        r.bezierCurveTo(225 * e, 138 * e, 246 * e, 115 * e, 263 * e, 137 * e),
        r.bezierCurveTo(282 * e, 174 * e, 279 * e, 217 * e, 265 * e, 243 * e),
        r.bezierCurveTo(253 * e, 264 * e, 240 * e, 256 * e, 233 * e, 238 * e),
        r.bezierCurveTo(221 * e, 212 * e, 225 * e, 198 * e, 224 * e, 184 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(169 * e, 289 * e),
        r.bezierCurveTo(161 * e, 234 * e, 168 * e, 197 * e, 187 * e, 195 * e),
        r.bezierCurveTo(219 * e, 189 * e, 222 * e, 256 * e, 216 * e, 307 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(143 * e, 146 * e),
        r.bezierCurveTo(161 * e, 199 * e, 151 * e, 245 * e, 138 * e, 266 * e),
        r.bezierCurveTo(120.5 * e, 239.5 * e, 120.5 * e, 239.5 * e, 103 * e, 213 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(283 * e, 135 * e),
        r.bezierCurveTo(277 * e, 176 * e, 298 * e, 194 * e, 315 * e, 205 * e),
        r.bezierCurveTo(323.5 * e, 175 * e, 323.5 * e, 175 * e, 332 * e, 145 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(318 * e, 223 * e),
        r.bezierCurveTo(290 * e, 195 * e, 271 * e, 256 * e, 283 * e, 281 * e),
        r.bezierCurveTo(303.5 * e, 267 * e, 303.5 * e, 267 * e, 324 * e, 253 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 6 * e),
        we(r, 222 * e, 199 * e, 120.74767078498864 * e),
        Ce(r, void 0, i[3], 40 * e),
        we(r, 220 * e, 200 * e, 95.44108130150245 * e),
        Ce(r, void 0, i[2], 15 * e),
        we(r, 220 * e, 201 * e, 85 * e),
        Ce(r, void 0, i[4], 10 * e),
        r.globalAlpha = .5,
        we(r, 220 * e, 201 * e, 82 * e),
        Ce(r, i[9]),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        we(r, 63 * e, 136 * e, 49.193495504995376 * e),
        Ce(r, i[0], i[0], 4 * e),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        we(r, 63 * e, 136 * e, 49.193495504995376 * e),
        Ce(r, i[8], i[2], 4 * e),
        we(r, 63 * e, 137 * e, 25.632011235952593 * e),
        Ce(r, i[7], i[2], 4 * e),
        n
    }
    function Ii(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 110 * e,
        i.height = 110 * e,
        n.globalAlpha = .2,
        we(n, 55 * e, 55 * e, 55 * e),
        Ce(n, t[0]),
        i
    }
    function pi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 102 * e,
        n.height = 102 * e,
        r.globalAlpha = 1,
        r.translate(-3, -3),
        Be(r, 5 * e, 3 * e, 22 * e, 94 * e, 5 * e),
        Ce(r, i[2], i[3], 4 * e),
        Be(r, 40 * e, 3 * e, 22 * e, 94 * e, 5 * e),
        Ce(r, i[2], i[3], 4 * e),
        Be(r, 75 * e, 3 * e, 22 * e, 94 * e, 5 * e),
        Ce(r, i[2], i[3], 4 * e),
        n
    }
    function gi(e, t, i) {
        var n, r, o, a = document.createElement("canvas"), s = a.getContext("2d"), d = (a.width = 496 * e,
        a.height = 520 * e,
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 10 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(19.000030517578125 * e, 256.67613983154297 * e),
        s.bezierCurveTo(1.000030517578125 * e, 332.67613983154297 * e, 23.000030517578125 * e, 404.67613983154297 * e, 95.00003051757812 * e, 463.67613983154297 * e),
        s.bezierCurveTo(128.00003051757812 * e, 491.67613983154297 * e, 165.00003051757812 * e, 507.67613983154297 * e, 194.00003051757812 * e, 512.676139831543 * e),
        s.bezierCurveTo(280.0000305175781 * e, 517.676139831543 * e, 291.0000305175781 * e, 516.676139831543 * e, 342.0000305175781 * e, 497.67613983154297 * e),
        s.bezierCurveTo(425.0000305175781 * e, 454.67613983154297 * e, 469.0000305175781 * e, 392.67613983154297 * e, 468.0000305175781 * e, 300.67613983154297 * e),
        s.bezierCurveTo(408.5000305175781 * e, 365.17613983154297 * e, 408.5000305175781 * e, 365.17613983154297 * e, 349.0000305175781 * e, 429.67613983154297 * e),
        s.bezierCurveTo(256.0000305175781 * e, 473.67613983154297 * e, 167.00003051757812 * e, 459.67613983154297 * e, 78.00003051757812 * e, 384.67613983154297 * e),
        s.closePath(),
        Ce(s, i[0]),
        s.globalAlpha = 1,
        s.translate(0, -10 * e),
        we(s, 247.01138305664062 * e, 249.3125 * e, 161.4465855941215 * e),
        Ce(s, i[5], void 0, 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 10 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(65.00003051757812 * e, 263.4034118652344 * e),
        s.bezierCurveTo(109.00003051757812 * e, 160.40341186523438 * e, 185.00003051757812 * e, 128.40341186523438 * e, 222.00003051757812 * e, 124.40341186523438 * e),
        s.bezierCurveTo(277.0000305175781 * e, 116.40341186523438 * e, 339.0000305175781 * e, 134.40341186523438 * e, 379.0000305175781 * e, 195.40341186523438 * e),
        s.bezierCurveTo(409.0000305175781 * e, 242.40341186523438 * e, 416.0000305175781 * e, 256.4034118652344 * e, 428.0000305175781 * e, 304.4034118652344 * e),
        s.bezierCurveTo(457.0000305175781 * e, 203.40341186523438 * e, 449.0000305175781 * e, 183.40341186523438 * e, 438.0000305175781 * e, 162.40341186523438 * e),
        s.bezierCurveTo(381.0000305175781 * e, 73.40341186523438 * e, 360.0000305175781 * e, 66.40341186523438 * e, 257.0000305175781 * e, 46.403411865234375 * e),
        s.bezierCurveTo(191.00003051757812 * e, 45.403411865234375 * e, 142.00003051757812 * e, 65.40341186523438 * e, 101.00003051757812 * e, 115.40341186523438 * e),
        s.closePath(),
        Ce(s, i[0]),
        s.globalAlpha = 1,
        n = e,
        d = i,
        r = document.createElement("canvas"),
        o = r.getContext("2d"),
        r.width = 496 * n,
        r.height = 520 * n,
        o.globalAlpha = 1,
        o.translate(0, -10 * n),
        we(o, 247.01138305664062 * n, 250.13068389892578 * n, 232.81967270830015 * n),
        Ce(o, d[1], d[2], 14 * n),
        o.globalCompositeOperation = "destination-out",
        we(o, 247.01138305664062 * n, 249.3125 * n, 161.4465855941215 * n),
        Ce(o, d[0], d[0], 14 * n),
        o.globalCompositeOperation = "source-over",
        r);
        return s.drawImage(d, 0, 0),
        s.translate(0, -10 * e),
        we(s, 247.01138305664062 * e, 249.3125 * e, 161.4465855941215 * e),
        Ce(s, void 0, i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(325.0113830566406 * e, 13.767059326171875 * e),
        s.bezierCurveTo(349.5113830566406 * e, 25.767059326171875 * e, 349.5113830566406 * e, 25.767059326171875 * e, 374.0113830566406 * e, 37.767059326171875 * e),
        s.bezierCurveTo(384.0113830566406 * e, 44.767059326171875 * e, 383.0113830566406 * e, 50.767059326171875 * e, 368.0113830566406 * e, 68.76705932617188 * e),
        s.bezierCurveTo(352.5113830566406 * e, 91.26705932617188 * e, 352.5113830566406 * e, 91.26705932617188 * e, 337.0113830566406 * e, 113.76705932617188 * e),
        s.bezierCurveTo(328.0113830566406 * e, 119.76705932617188 * e, 328.0113830566406 * e, 121.76705932617188 * e, 312.0113830566406 * e, 112.76705932617188 * e),
        s.bezierCurveTo(303.0113830566406 * e, 108.26705932617188 * e, 303.0113830566406 * e, 108.26705932617188 * e, 294.0113830566406 * e, 103.76705932617188 * e),
        s.bezierCurveTo(287.0113830566406 * e, 99.76705932617188 * e, 293.0113830566406 * e, 84.76705932617188 * e, 297.0113830566406 * e, 67.76705932617188 * e),
        s.bezierCurveTo(302.0113830566406 * e, 47.767059326171875 * e, 302.0113830566406 * e, 47.767059326171875 * e, 307.0113830566406 * e, 27.767059326171875 * e),
        s.bezierCurveTo(310.0113830566406 * e, 15.767059326171875 * e, 317.0113830566406 * e, 12.767059326171875 * e, 323.0113830566406 * e, 13.767059326171875 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(325.0113830566406 * e, 13.767059326171875 * e),
        s.bezierCurveTo(349.5113830566406 * e, 25.767059326171875 * e, 349.5113830566406 * e, 25.767059326171875 * e, 374.0113830566406 * e, 37.767059326171875 * e),
        s.bezierCurveTo(384.0113830566406 * e, 44.767059326171875 * e, 383.0113830566406 * e, 50.767059326171875 * e, 368.0113830566406 * e, 68.76705932617188 * e),
        s.bezierCurveTo(352.5113830566406 * e, 91.26705932617188 * e, 352.5113830566406 * e, 91.26705932617188 * e, 337.0113830566406 * e, 113.76705932617188 * e),
        s.bezierCurveTo(328.0113830566406 * e, 119.76705932617188 * e, 328.0113830566406 * e, 121.76705932617188 * e, 312.0113830566406 * e, 112.76705932617188 * e),
        s.bezierCurveTo(303.0113830566406 * e, 108.26705932617188 * e, 303.0113830566406 * e, 108.26705932617188 * e, 294.0113830566406 * e, 103.76705932617188 * e),
        s.bezierCurveTo(287.0113830566406 * e, 99.76705932617188 * e, 293.0113830566406 * e, 84.76705932617188 * e, 297.0113830566406 * e, 67.76705932617188 * e),
        s.bezierCurveTo(302.0113830566406 * e, 47.767059326171875 * e, 302.0113830566406 * e, 47.767059326171875 * e, 307.0113830566406 * e, 27.767059326171875 * e),
        s.bezierCurveTo(310.0113830566406 * e, 15.767059326171875 * e, 317.0113830566406 * e, 12.767059326171875 * e, 323.0113830566406 * e, 13.767059326171875 * e),
        s.closePath(),
        Ce(s, i[3], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(403.0113830566406 * e, 89.76705932617188 * e),
        s.bezierCurveTo(413.0113830566406 * e, 76.76705932617188 * e, 418.0113830566406 * e, 79.76705932617188 * e, 428.0113830566406 * e, 92.76705932617188 * e),
        s.bezierCurveTo(435.0113830566406 * e, 99.76705932617188 * e, 435.0113830566406 * e, 99.76705932617188 * e, 442.0113830566406 * e, 106.76705932617188 * e),
        s.bezierCurveTo(450.0113830566406 * e, 116.76705932617188 * e, 445.0113830566406 * e, 119.76705932617188 * e, 433.0113830566406 * e, 128.76705932617188 * e),
        s.bezierCurveTo(408.0113830566406 * e, 146.26705932617188 * e, 408.0113830566406 * e, 146.26705932617188 * e, 383.0113830566406 * e, 163.76705932617188 * e),
        s.bezierCurveTo(376.0113830566406 * e, 166.76705932617188 * e, 377.0113830566406 * e, 165.76705932617188 * e, 368.0113830566406 * e, 156.76705932617188 * e),
        s.bezierCurveTo(359.0113830566406 * e, 144.76705932617188 * e, 359.0113830566406 * e, 142.76705932617188 * e, 367.0113830566406 * e, 133.76705932617188 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(403.0113830566406 * e, 89.76705932617188 * e),
        s.bezierCurveTo(413.0113830566406 * e, 76.76705932617188 * e, 418.0113830566406 * e, 79.76705932617188 * e, 428.0113830566406 * e, 92.76705932617188 * e),
        s.bezierCurveTo(435.0113830566406 * e, 99.76705932617188 * e, 435.0113830566406 * e, 99.76705932617188 * e, 442.0113830566406 * e, 106.76705932617188 * e),
        s.bezierCurveTo(450.0113830566406 * e, 116.76705932617188 * e, 445.0113830566406 * e, 119.76705932617188 * e, 433.0113830566406 * e, 128.76705932617188 * e),
        s.bezierCurveTo(408.0113830566406 * e, 146.26705932617188 * e, 408.0113830566406 * e, 146.26705932617188 * e, 383.0113830566406 * e, 163.76705932617188 * e),
        s.bezierCurveTo(376.0113830566406 * e, 166.76705932617188 * e, 377.0113830566406 * e, 165.76705932617188 * e, 368.0113830566406 * e, 156.76705932617188 * e),
        s.bezierCurveTo(359.0113830566406 * e, 144.76705932617188 * e, 359.0113830566406 * e, 142.76705932617188 * e, 367.0113830566406 * e, 133.76705932617188 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(228.01138305664062 * e, 1.767059326171875 * e),
        s.bezierCurveTo(246.51138305664062 * e, 3.267059326171875 * e, 246.51138305664062 * e, 3.267059326171875 * e, 265.0113830566406 * e, 4.767059326171875 * e),
        s.bezierCurveTo(273.0113830566406 * e, 5.767059326171875 * e, 275.0113830566406 * e, 11.767059326171875 * e, 270.0113830566406 * e, 27.767059326171875 * e),
        s.bezierCurveTo(264.0113830566406 * e, 54.267059326171875 * e, 264.0113830566406 * e, 54.267059326171875 * e, 258.0113830566406 * e, 80.76705932617188 * e),
        s.bezierCurveTo(256.0113830566406 * e, 92.76705932617188 * e, 256.0113830566406 * e, 94.76705932617188 * e, 242.01138305664062 * e, 93.76705932617188 * e),
        s.bezierCurveTo(226.01138305664062 * e, 95.76705932617188 * e, 225.01138305664062 * e, 91.76705932617188 * e, 225.01138305664062 * e, 80.76705932617188 * e),
        s.bezierCurveTo(223.51138305664062 * e, 50.267059326171875 * e, 223.51138305664062 * e, 50.267059326171875 * e, 222.01138305664062 * e, 19.767059326171875 * e),
        s.bezierCurveTo(219.01138305664062 * e, 8.767059326171875 * e, 224.01138305664062 * e, 4.767059326171875 * e, 227.01138305664062 * e, 2.767059326171875 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(228.01138305664062 * e, 1.767059326171875 * e),
        s.bezierCurveTo(246.51138305664062 * e, 3.267059326171875 * e, 246.51138305664062 * e, 3.267059326171875 * e, 265.0113830566406 * e, 4.767059326171875 * e),
        s.bezierCurveTo(273.0113830566406 * e, 5.767059326171875 * e, 275.0113830566406 * e, 11.767059326171875 * e, 270.0113830566406 * e, 27.767059326171875 * e),
        s.bezierCurveTo(264.0113830566406 * e, 54.267059326171875 * e, 264.0113830566406 * e, 54.267059326171875 * e, 258.0113830566406 * e, 80.76705932617188 * e),
        s.bezierCurveTo(256.0113830566406 * e, 92.76705932617188 * e, 256.0113830566406 * e, 94.76705932617188 * e, 242.01138305664062 * e, 93.76705932617188 * e),
        s.bezierCurveTo(226.01138305664062 * e, 95.76705932617188 * e, 225.01138305664062 * e, 91.76705932617188 * e, 225.01138305664062 * e, 80.76705932617188 * e),
        s.bezierCurveTo(223.51138305664062 * e, 50.267059326171875 * e, 223.51138305664062 * e, 50.267059326171875 * e, 222.01138305664062 * e, 19.767059326171875 * e),
        s.bezierCurveTo(219.01138305664062 * e, 8.767059326171875 * e, 224.01138305664062 * e, 4.767059326171875 * e, 227.01138305664062 * e, 2.767059326171875 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(142.01138305664062 * e, 25.767059326171875 * e),
        s.bezierCurveTo(158.51138305664062 * e, 19.767059326171875 * e, 158.51138305664062 * e, 19.767059326171875 * e, 175.01138305664062 * e, 13.767059326171875 * e),
        s.bezierCurveTo(188.01138305664062 * e, 11.767059326171875 * e, 188.01138305664062 * e, 16.767059326171875 * e, 191.01138305664062 * e, 29.767059326171875 * e),
        s.bezierCurveTo(197.01138305664062 * e, 60.267059326171875 * e, 197.01138305664062 * e, 60.267059326171875 * e, 203.01138305664062 * e, 90.76705932617188 * e),
        s.bezierCurveTo(206.01138305664062 * e, 102.76705932617188 * e, 196.01138305664062 * e, 99.76705932617188 * e, 181.01138305664062 * e, 105.76705932617188 * e),
        s.bezierCurveTo(175.01138305664062 * e, 108.76705932617188 * e, 172.01138305664062 * e, 104.76705932617188 * e, 164.01138305664062 * e, 84.76705932617188 * e),
        s.bezierCurveTo(152.51138305664062 * e, 63.267059326171875 * e, 152.51138305664062 * e, 63.267059326171875 * e, 141.01138305664062 * e, 41.767059326171875 * e),
        s.bezierCurveTo(138.01138305664062 * e, 35.767059326171875 * e, 138.01138305664062 * e, 29.767059326171875 * e, 141.01138305664062 * e, 27.767059326171875 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(142.01138305664062 * e, 25.767059326171875 * e),
        s.bezierCurveTo(158.51138305664062 * e, 19.767059326171875 * e, 158.51138305664062 * e, 19.767059326171875 * e, 175.01138305664062 * e, 13.767059326171875 * e),
        s.bezierCurveTo(188.01138305664062 * e, 11.767059326171875 * e, 188.01138305664062 * e, 16.767059326171875 * e, 191.01138305664062 * e, 29.767059326171875 * e),
        s.bezierCurveTo(197.01138305664062 * e, 60.267059326171875 * e, 197.01138305664062 * e, 60.267059326171875 * e, 203.01138305664062 * e, 90.76705932617188 * e),
        s.bezierCurveTo(206.01138305664062 * e, 102.76705932617188 * e, 196.01138305664062 * e, 99.76705932617188 * e, 181.01138305664062 * e, 105.76705932617188 * e),
        s.bezierCurveTo(175.01138305664062 * e, 108.76705932617188 * e, 172.01138305664062 * e, 104.76705932617188 * e, 164.01138305664062 * e, 84.76705932617188 * e),
        s.bezierCurveTo(152.51138305664062 * e, 63.267059326171875 * e, 152.51138305664062 * e, 63.267059326171875 * e, 141.01138305664062 * e, 41.767059326171875 * e),
        s.bezierCurveTo(138.01138305664062 * e, 35.767059326171875 * e, 138.01138305664062 * e, 29.767059326171875 * e, 141.01138305664062 * e, 27.767059326171875 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(70.01138305664062 * e, 76.76705932617188 * e),
        s.bezierCurveTo(83.01138305664062 * e, 64.26705932617188 * e, 83.01138305664062 * e, 64.26705932617188 * e, 96.01138305664062 * e, 51.767059326171875 * e),
        s.bezierCurveTo(104.01138305664062 * e, 44.767059326171875 * e, 110.01138305664062 * e, 51.767059326171875 * e, 119.01138305664062 * e, 66.76705932617188 * e),
        s.bezierCurveTo(135.01138305664062 * e, 88.26705932617188 * e, 135.01138305664062 * e, 88.26705932617188 * e, 151.01138305664062 * e, 109.76705932617188 * e),
        s.bezierCurveTo(157.01138305664062 * e, 119.76705932617188 * e, 153.01138305664062 * e, 122.76705932617188 * e, 147.01138305664062 * e, 129.76705932617188 * e),
        s.bezierCurveTo(138.01138305664062 * e, 140.76705932617188 * e, 136.01138305664062 * e, 140.76705932617188 * e, 122.01138305664062 * e, 127.76705932617188 * e),
        s.bezierCurveTo(99.51138305664062 * e, 110.26705932617188 * e, 99.51138305664062 * e, 110.26705932617188 * e, 77.01138305664062 * e, 92.76705932617188 * e),
        s.bezierCurveTo(66.01138305664062 * e, 83.76705932617188 * e, 66.01138305664062 * e, 82.76705932617188 * e, 69.01138305664062 * e, 78.76705932617188 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(70.01138305664062 * e, 76.76705932617188 * e),
        s.bezierCurveTo(83.01138305664062 * e, 64.26705932617188 * e, 83.01138305664062 * e, 64.26705932617188 * e, 96.01138305664062 * e, 51.767059326171875 * e),
        s.bezierCurveTo(104.01138305664062 * e, 44.767059326171875 * e, 110.01138305664062 * e, 51.767059326171875 * e, 119.01138305664062 * e, 66.76705932617188 * e),
        s.bezierCurveTo(135.01138305664062 * e, 88.26705932617188 * e, 135.01138305664062 * e, 88.26705932617188 * e, 151.01138305664062 * e, 109.76705932617188 * e),
        s.bezierCurveTo(157.01138305664062 * e, 119.76705932617188 * e, 153.01138305664062 * e, 122.76705932617188 * e, 147.01138305664062 * e, 129.76705932617188 * e),
        s.bezierCurveTo(138.01138305664062 * e, 140.76705932617188 * e, 136.01138305664062 * e, 140.76705932617188 * e, 122.01138305664062 * e, 127.76705932617188 * e),
        s.bezierCurveTo(99.51138305664062 * e, 110.26705932617188 * e, 99.51138305664062 * e, 110.26705932617188 * e, 77.01138305664062 * e, 92.76705932617188 * e),
        s.bezierCurveTo(66.01138305664062 * e, 83.76705932617188 * e, 66.01138305664062 * e, 82.76705932617188 * e, 69.01138305664062 * e, 78.76705932617188 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(33.011383056640625 * e, 126.76705932617188 * e),
        s.bezierCurveTo(22.011383056640625 * e, 149.76705932617188 * e, 22.011383056640625 * e, 149.76705932617188 * e, 11.011383056640625 * e, 172.76705932617188 * e),
        s.bezierCurveTo(7.011383056640625 * e, 184.76705932617188 * e, 11.011383056640625 * e, 189.76705932617188 * e, 36.011383056640625 * e, 195.76705932617188 * e),
        s.bezierCurveTo(61.011383056640625 * e, 202.26705932617188 * e, 61.011383056640625 * e, 202.26705932617188 * e, 86.01138305664062 * e, 208.76705932617188 * e),
        s.bezierCurveTo(100.01138305664062 * e, 214.76705932617188 * e, 102.01138305664062 * e, 203.76705932617188 * e, 109.01138305664062 * e, 189.76705932617188 * e),
        s.bezierCurveTo(117.01138305664062 * e, 171.76705932617188 * e, 116.01138305664062 * e, 166.76705932617188 * e, 97.01138305664062 * e, 156.76705932617188 * e),
        s.bezierCurveTo(74.01138305664062 * e, 140.76705932617188 * e, 74.01138305664062 * e, 140.76705932617188 * e, 51.011383056640625 * e, 124.76705932617188 * e),
        s.bezierCurveTo(42.011383056640625 * e, 118.76705932617188 * e, 37.011383056640625 * e, 119.76705932617188 * e, 33.011383056640625 * e, 126.76705932617188 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(33.011383056640625 * e, 126.76705932617188 * e),
        s.bezierCurveTo(22.011383056640625 * e, 149.76705932617188 * e, 22.011383056640625 * e, 149.76705932617188 * e, 11.011383056640625 * e, 172.76705932617188 * e),
        s.bezierCurveTo(7.011383056640625 * e, 184.76705932617188 * e, 11.011383056640625 * e, 189.76705932617188 * e, 36.011383056640625 * e, 195.76705932617188 * e),
        s.bezierCurveTo(61.011383056640625 * e, 202.26705932617188 * e, 61.011383056640625 * e, 202.26705932617188 * e, 86.01138305664062 * e, 208.76705932617188 * e),
        s.bezierCurveTo(100.01138305664062 * e, 214.76705932617188 * e, 102.01138305664062 * e, 203.76705932617188 * e, 109.01138305664062 * e, 189.76705932617188 * e),
        s.bezierCurveTo(117.01138305664062 * e, 171.76705932617188 * e, 116.01138305664062 * e, 166.76705932617188 * e, 97.01138305664062 * e, 156.76705932617188 * e),
        s.bezierCurveTo(74.01138305664062 * e, 140.76705932617188 * e, 74.01138305664062 * e, 140.76705932617188 * e, 51.011383056640625 * e, 124.76705932617188 * e),
        s.bezierCurveTo(42.011383056640625 * e, 118.76705932617188 * e, 37.011383056640625 * e, 119.76705932617188 * e, 33.011383056640625 * e, 126.76705932617188 * e),
        s.closePath(),
        Ce(s, i[3], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(13.011383056640625 * e, 229.76705932617188 * e),
        s.bezierCurveTo(45.511383056640625 * e, 233.76705932617188 * e, 45.511383056640625 * e, 233.76705932617188 * e, 78.01138305664062 * e, 237.76705932617188 * e),
        s.bezierCurveTo(92.01138305664062 * e, 239.76705932617188 * e, 92.01138305664062 * e, 246.76705932617188 * e, 91.01138305664062 * e, 257.7670593261719 * e),
        s.bezierCurveTo(92.01138305664062 * e, 275.7670593261719 * e, 91.01138305664062 * e, 274.7670593261719 * e, 68.01138305664062 * e, 276.7670593261719 * e),
        s.bezierCurveTo(42.511383056640625 * e, 279.7670593261719 * e, 42.511383056640625 * e, 279.7670593261719 * e, 17.011383056640625 * e, 282.7670593261719 * e),
        s.bezierCurveTo(2.011383056640625 * e, 282.7670593261719 * e, 3.011383056640625 * e, 276.7670593261719 * e, 2.011383056640625 * e, 260.7670593261719 * e),
        s.bezierCurveTo(2.011383056640625 * e, 231.76705932617188 * e, 4.011383056640625 * e, 232.76705932617188 * e, 11.011383056640625 * e, 230.76705932617188 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(13.011383056640625 * e, 229.76705932617188 * e),
        s.bezierCurveTo(45.511383056640625 * e, 233.76705932617188 * e, 45.511383056640625 * e, 233.76705932617188 * e, 78.01138305664062 * e, 237.76705932617188 * e),
        s.bezierCurveTo(92.01138305664062 * e, 239.76705932617188 * e, 92.01138305664062 * e, 246.76705932617188 * e, 91.01138305664062 * e, 257.7670593261719 * e),
        s.bezierCurveTo(92.01138305664062 * e, 275.7670593261719 * e, 91.01138305664062 * e, 274.7670593261719 * e, 68.01138305664062 * e, 276.7670593261719 * e),
        s.bezierCurveTo(42.511383056640625 * e, 279.7670593261719 * e, 42.511383056640625 * e, 279.7670593261719 * e, 17.011383056640625 * e, 282.7670593261719 * e),
        s.bezierCurveTo(2.011383056640625 * e, 282.7670593261719 * e, 3.011383056640625 * e, 276.7670593261719 * e, 2.011383056640625 * e, 260.7670593261719 * e),
        s.bezierCurveTo(2.011383056640625 * e, 231.76705932617188 * e, 4.011383056640625 * e, 232.76705932617188 * e, 11.011383056640625 * e, 230.76705932617188 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(97.01138305664062 * e, 329.7670593261719 * e),
        s.bezierCurveTo(68.51138305664062 * e, 343.7670593261719 * e, 68.51138305664062 * e, 343.7670593261719 * e, 40.011383056640625 * e, 357.7670593261719 * e),
        s.bezierCurveTo(29.011383056640625 * e, 360.7670593261719 * e, 27.011383056640625 * e, 361.7670593261719 * e, 20.011383056640625 * e, 346.7670593261719 * e),
        s.bezierCurveTo(16.511383056640625 * e, 336.2670593261719 * e, 16.511383056640625 * e, 336.2670593261719 * e, 13.011383056640625 * e, 325.7670593261719 * e),
        s.bezierCurveTo(10.011383056640625 * e, 307.7670593261719 * e, 18.011383056640625 * e, 312.7670593261719 * e, 34.011383056640625 * e, 306.7670593261719 * e),
        s.bezierCurveTo(59.511383056640625 * e, 302.2670593261719 * e, 59.511383056640625 * e, 302.2670593261719 * e, 85.01138305664062 * e, 297.7670593261719 * e),
        s.bezierCurveTo(97.01138305664062 * e, 294.7670593261719 * e, 100.01138305664062 * e, 297.7670593261719 * e, 100.01138305664062 * e, 307.7670593261719 * e),
        s.bezierCurveTo(105.01138305664062 * e, 326.7670593261719 * e, 103.01138305664062 * e, 325.7670593261719 * e, 97.01138305664062 * e, 329.7670593261719 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(97.01138305664062 * e, 329.7670593261719 * e),
        s.bezierCurveTo(68.51138305664062 * e, 343.7670593261719 * e, 68.51138305664062 * e, 343.7670593261719 * e, 40.011383056640625 * e, 357.7670593261719 * e),
        s.bezierCurveTo(29.011383056640625 * e, 360.7670593261719 * e, 27.011383056640625 * e, 361.7670593261719 * e, 20.011383056640625 * e, 346.7670593261719 * e),
        s.bezierCurveTo(16.511383056640625 * e, 336.2670593261719 * e, 16.511383056640625 * e, 336.2670593261719 * e, 13.011383056640625 * e, 325.7670593261719 * e),
        s.bezierCurveTo(10.011383056640625 * e, 307.7670593261719 * e, 18.011383056640625 * e, 312.7670593261719 * e, 34.011383056640625 * e, 306.7670593261719 * e),
        s.bezierCurveTo(59.511383056640625 * e, 302.2670593261719 * e, 59.511383056640625 * e, 302.2670593261719 * e, 85.01138305664062 * e, 297.7670593261719 * e),
        s.bezierCurveTo(97.01138305664062 * e, 294.7670593261719 * e, 100.01138305664062 * e, 297.7670593261719 * e, 100.01138305664062 * e, 307.7670593261719 * e),
        s.bezierCurveTo(105.01138305664062 * e, 326.7670593261719 * e, 103.01138305664062 * e, 325.7670593261719 * e, 97.01138305664062 * e, 329.7670593261719 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(394.0113830566406 * e, 181.76705932617188 * e),
        s.bezierCurveTo(426.5113830566406 * e, 166.76705932617188 * e, 426.5113830566406 * e, 166.76705932617188 * e, 459.0113830566406 * e, 151.76705932617188 * e),
        s.bezierCurveTo(469.0113830566406 * e, 152.76705932617188 * e, 469.0113830566406 * e, 155.76705932617188 * e, 472.0113830566406 * e, 165.76705932617188 * e),
        s.bezierCurveTo(476.0113830566406 * e, 177.26705932617188 * e, 476.0113830566406 * e, 177.26705932617188 * e, 480.0113830566406 * e, 188.76705932617188 * e),
        s.bezierCurveTo(483.0113830566406 * e, 199.76705932617188 * e, 480.0113830566406 * e, 200.76705932617188 * e, 460.0113830566406 * e, 205.76705932617188 * e),
        s.bezierCurveTo(433.5113830566406 * e, 210.26705932617188 * e, 433.5113830566406 * e, 210.26705932617188 * e, 407.0113830566406 * e, 214.76705932617188 * e),
        s.bezierCurveTo(395.0113830566406 * e, 218.76705932617188 * e, 397.0113830566406 * e, 211.76705932617188 * e, 393.0113830566406 * e, 202.76705932617188 * e),
        s.bezierCurveTo(387.0113830566406 * e, 188.76705932617188 * e, 387.0113830566406 * e, 187.76705932617188 * e, 394.0113830566406 * e, 181.76705932617188 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(394.0113830566406 * e, 181.76705932617188 * e),
        s.bezierCurveTo(426.5113830566406 * e, 166.76705932617188 * e, 426.5113830566406 * e, 166.76705932617188 * e, 459.0113830566406 * e, 151.76705932617188 * e),
        s.bezierCurveTo(469.0113830566406 * e, 152.76705932617188 * e, 469.0113830566406 * e, 155.76705932617188 * e, 472.0113830566406 * e, 165.76705932617188 * e),
        s.bezierCurveTo(476.0113830566406 * e, 177.26705932617188 * e, 476.0113830566406 * e, 177.26705932617188 * e, 480.0113830566406 * e, 188.76705932617188 * e),
        s.bezierCurveTo(483.0113830566406 * e, 199.76705932617188 * e, 480.0113830566406 * e, 200.76705932617188 * e, 460.0113830566406 * e, 205.76705932617188 * e),
        s.bezierCurveTo(433.5113830566406 * e, 210.26705932617188 * e, 433.5113830566406 * e, 210.26705932617188 * e, 407.0113830566406 * e, 214.76705932617188 * e),
        s.bezierCurveTo(395.0113830566406 * e, 218.76705932617188 * e, 397.0113830566406 * e, 211.76705932617188 * e, 393.0113830566406 * e, 202.76705932617188 * e),
        s.bezierCurveTo(387.0113830566406 * e, 188.76705932617188 * e, 387.0113830566406 * e, 187.76705932617188 * e, 394.0113830566406 * e, 181.76705932617188 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(411.0113830566406 * e, 234.76705932617188 * e),
        s.bezierCurveTo(446.0113830566406 * e, 233.26705932617188 * e, 446.0113830566406 * e, 233.26705932617188 * e, 481.0113830566406 * e, 231.76705932617188 * e),
        s.bezierCurveTo(491.0113830566406 * e, 232.76705932617188 * e, 493.0113830566406 * e, 239.76705932617188 * e, 491.0113830566406 * e, 251.76705932617188 * e),
        s.bezierCurveTo(490.0113830566406 * e, 263.7670593261719 * e, 490.0113830566406 * e, 263.7670593261719 * e, 489.0113830566406 * e, 275.7670593261719 * e),
        s.bezierCurveTo(487.0113830566406 * e, 283.7670593261719 * e, 483.0113830566406 * e, 284.7670593261719 * e, 464.0113830566406 * e, 280.7670593261719 * e),
        s.bezierCurveTo(437.0113830566406 * e, 273.7670593261719 * e, 437.0113830566406 * e, 273.7670593261719 * e, 410.0113830566406 * e, 266.7670593261719 * e),
        s.bezierCurveTo(400.0113830566406 * e, 261.7670593261719 * e, 401.0113830566406 * e, 259.7670593261719 * e, 402.0113830566406 * e, 249.76705932617188 * e),
        s.bezierCurveTo(401.0113830566406 * e, 237.76705932617188 * e, 403.0113830566406 * e, 235.76705932617188 * e, 408.0113830566406 * e, 234.76705932617188 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(411.0113830566406 * e, 234.76705932617188 * e),
        s.bezierCurveTo(446.0113830566406 * e, 233.26705932617188 * e, 446.0113830566406 * e, 233.26705932617188 * e, 481.0113830566406 * e, 231.76705932617188 * e),
        s.bezierCurveTo(491.0113830566406 * e, 232.76705932617188 * e, 493.0113830566406 * e, 239.76705932617188 * e, 491.0113830566406 * e, 251.76705932617188 * e),
        s.bezierCurveTo(490.0113830566406 * e, 263.7670593261719 * e, 490.0113830566406 * e, 263.7670593261719 * e, 489.0113830566406 * e, 275.7670593261719 * e),
        s.bezierCurveTo(487.0113830566406 * e, 283.7670593261719 * e, 483.0113830566406 * e, 284.7670593261719 * e, 464.0113830566406 * e, 280.7670593261719 * e),
        s.bezierCurveTo(437.0113830566406 * e, 273.7670593261719 * e, 437.0113830566406 * e, 273.7670593261719 * e, 410.0113830566406 * e, 266.7670593261719 * e),
        s.bezierCurveTo(400.0113830566406 * e, 261.7670593261719 * e, 401.0113830566406 * e, 259.7670593261719 * e, 402.0113830566406 * e, 249.76705932617188 * e),
        s.bezierCurveTo(401.0113830566406 * e, 237.76705932617188 * e, 403.0113830566406 * e, 235.76705932617188 * e, 408.0113830566406 * e, 234.76705932617188 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(400.0113830566406 * e, 290.7670593261719 * e),
        s.bezierCurveTo(437.0113830566406 * e, 301.2670593261719 * e, 437.0113830566406 * e, 301.2670593261719 * e, 474.0113830566406 * e, 311.7670593261719 * e),
        s.bezierCurveTo(484.0113830566406 * e, 319.7670593261719 * e, 481.0113830566406 * e, 322.7670593261719 * e, 474.0113830566406 * e, 335.7670593261719 * e),
        s.bezierCurveTo(465.5113830566406 * e, 354.7670593261719 * e, 465.5113830566406 * e, 354.7670593261719 * e, 457.0113830566406 * e, 373.7670593261719 * e),
        s.bezierCurveTo(449.0113830566406 * e, 386.7670593261719 * e, 444.0113830566406 * e, 384.7670593261719 * e, 427.0113830566406 * e, 370.7670593261719 * e),
        s.bezierCurveTo(403.0113830566406 * e, 354.7670593261719 * e, 403.0113830566406 * e, 354.7670593261719 * e, 379.0113830566406 * e, 338.7670593261719 * e),
        s.bezierCurveTo(371.0113830566406 * e, 327.7670593261719 * e, 373.0113830566406 * e, 323.7670593261719 * e, 377.0113830566406 * e, 313.7670593261719 * e),
        s.bezierCurveTo(386.0113830566406 * e, 292.7670593261719 * e, 393.0113830566406 * e, 288.7670593261719 * e, 398.0113830566406 * e, 291.7670593261719 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(400.0113830566406 * e, 290.7670593261719 * e),
        s.bezierCurveTo(437.0113830566406 * e, 301.2670593261719 * e, 437.0113830566406 * e, 301.2670593261719 * e, 474.0113830566406 * e, 311.7670593261719 * e),
        s.bezierCurveTo(484.0113830566406 * e, 319.7670593261719 * e, 481.0113830566406 * e, 322.7670593261719 * e, 474.0113830566406 * e, 335.7670593261719 * e),
        s.bezierCurveTo(465.5113830566406 * e, 354.7670593261719 * e, 465.5113830566406 * e, 354.7670593261719 * e, 457.0113830566406 * e, 373.7670593261719 * e),
        s.bezierCurveTo(449.0113830566406 * e, 386.7670593261719 * e, 444.0113830566406 * e, 384.7670593261719 * e, 427.0113830566406 * e, 370.7670593261719 * e),
        s.bezierCurveTo(403.0113830566406 * e, 354.7670593261719 * e, 403.0113830566406 * e, 354.7670593261719 * e, 379.0113830566406 * e, 338.7670593261719 * e),
        s.bezierCurveTo(371.0113830566406 * e, 327.7670593261719 * e, 373.0113830566406 * e, 323.7670593261719 * e, 377.0113830566406 * e, 313.7670593261719 * e),
        s.bezierCurveTo(386.0113830566406 * e, 292.7670593261719 * e, 393.0113830566406 * e, 288.7670593261719 * e, 398.0113830566406 * e, 291.7670593261719 * e),
        s.closePath(),
        Ce(s, i[3], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(366.0113830566406 * e, 361.2216033935547 * e),
        s.bezierCurveTo(393.0113830566406 * e, 383.2216033935547 * e, 393.0113830566406 * e, 383.2216033935547 * e, 420.0113830566406 * e, 405.2216033935547 * e),
        s.bezierCurveTo(427.0113830566406 * e, 414.2216033935547 * e, 425.0113830566406 * e, 417.2216033935547 * e, 413.0113830566406 * e, 428.2216033935547 * e),
        s.bezierCurveTo(405.5113830566406 * e, 435.2216033935547 * e, 405.5113830566406 * e, 435.2216033935547 * e, 398.0113830566406 * e, 442.2216033935547 * e),
        s.bezierCurveTo(388.0113830566406 * e, 451.2216033935547 * e, 385.0113830566406 * e, 445.2216033935547 * e, 373.0113830566406 * e, 428.2216033935547 * e),
        s.bezierCurveTo(358.5113830566406 * e, 408.2216033935547 * e, 358.5113830566406 * e, 408.2216033935547 * e, 344.0113830566406 * e, 388.2216033935547 * e),
        s.bezierCurveTo(337.0113830566406 * e, 378.2216033935547 * e, 342.0113830566406 * e, 377.2216033935547 * e, 347.0113830566406 * e, 371.2216033935547 * e),
        s.bezierCurveTo(359.0113830566406 * e, 359.2216033935547 * e, 361.0113830566406 * e, 358.2216033935547 * e, 364.0113830566406 * e, 361.2216033935547 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(366.0113830566406 * e, 361.2216033935547 * e),
        s.bezierCurveTo(393.0113830566406 * e, 383.2216033935547 * e, 393.0113830566406 * e, 383.2216033935547 * e, 420.0113830566406 * e, 405.2216033935547 * e),
        s.bezierCurveTo(427.0113830566406 * e, 414.2216033935547 * e, 425.0113830566406 * e, 417.2216033935547 * e, 413.0113830566406 * e, 428.2216033935547 * e),
        s.bezierCurveTo(405.5113830566406 * e, 435.2216033935547 * e, 405.5113830566406 * e, 435.2216033935547 * e, 398.0113830566406 * e, 442.2216033935547 * e),
        s.bezierCurveTo(388.0113830566406 * e, 451.2216033935547 * e, 385.0113830566406 * e, 445.2216033935547 * e, 373.0113830566406 * e, 428.2216033935547 * e),
        s.bezierCurveTo(358.5113830566406 * e, 408.2216033935547 * e, 358.5113830566406 * e, 408.2216033935547 * e, 344.0113830566406 * e, 388.2216033935547 * e),
        s.bezierCurveTo(337.0113830566406 * e, 378.2216033935547 * e, 342.0113830566406 * e, 377.2216033935547 * e, 347.0113830566406 * e, 371.2216033935547 * e),
        s.bezierCurveTo(359.0113830566406 * e, 359.2216033935547 * e, 361.0113830566406 * e, 358.2216033935547 * e, 364.0113830566406 * e, 361.2216033935547 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(323.0113830566406 * e, 393.2216033935547 * e),
        s.bezierCurveTo(338.0113830566406 * e, 424.7216033935547 * e, 338.0113830566406 * e, 424.7216033935547 * e, 353.0113830566406 * e, 456.2216033935547 * e),
        s.bezierCurveTo(355.0113830566406 * e, 467.2216033935547 * e, 354.0113830566406 * e, 469.2216033935547 * e, 336.0113830566406 * e, 475.2216033935547 * e),
        s.bezierCurveTo(326.0113830566406 * e, 478.2216033935547 * e, 326.0113830566406 * e, 478.2216033935547 * e, 316.0113830566406 * e, 481.2216033935547 * e),
        s.bezierCurveTo(304.0113830566406 * e, 484.2216033935547 * e, 304.0113830566406 * e, 477.2216033935547 * e, 301.0113830566406 * e, 454.2216033935547 * e),
        s.bezierCurveTo(295.5113830566406 * e, 429.2216033935547 * e, 295.5113830566406 * e, 429.2216033935547 * e, 290.0113830566406 * e, 404.2216033935547 * e),
        s.bezierCurveTo(287.0113830566406 * e, 396.2216033935547 * e, 297.0113830566406 * e, 394.2216033935547 * e, 303.0113830566406 * e, 392.2216033935547 * e),
        s.bezierCurveTo(316.0113830566406 * e, 387.2216033935547 * e, 318.0113830566406 * e, 387.2216033935547 * e, 323.0113830566406 * e, 394.2216033935547 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(323.0113830566406 * e, 393.2216033935547 * e),
        s.bezierCurveTo(338.0113830566406 * e, 424.7216033935547 * e, 338.0113830566406 * e, 424.7216033935547 * e, 353.0113830566406 * e, 456.2216033935547 * e),
        s.bezierCurveTo(355.0113830566406 * e, 467.2216033935547 * e, 354.0113830566406 * e, 469.2216033935547 * e, 336.0113830566406 * e, 475.2216033935547 * e),
        s.bezierCurveTo(326.0113830566406 * e, 478.2216033935547 * e, 326.0113830566406 * e, 478.2216033935547 * e, 316.0113830566406 * e, 481.2216033935547 * e),
        s.bezierCurveTo(304.0113830566406 * e, 484.2216033935547 * e, 304.0113830566406 * e, 477.2216033935547 * e, 301.0113830566406 * e, 454.2216033935547 * e),
        s.bezierCurveTo(295.5113830566406 * e, 429.2216033935547 * e, 295.5113830566406 * e, 429.2216033935547 * e, 290.0113830566406 * e, 404.2216033935547 * e),
        s.bezierCurveTo(287.0113830566406 * e, 396.2216033935547 * e, 297.0113830566406 * e, 394.2216033935547 * e, 303.0113830566406 * e, 392.2216033935547 * e),
        s.bezierCurveTo(316.0113830566406 * e, 387.2216033935547 * e, 318.0113830566406 * e, 387.2216033935547 * e, 323.0113830566406 * e, 394.2216033935547 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(270.0113830566406 * e, 413.2216033935547 * e),
        s.bezierCurveTo(271.0113830566406 * e, 445.7216033935547 * e, 271.0113830566406 * e, 445.7216033935547 * e, 272.0113830566406 * e, 478.2216033935547 * e),
        s.bezierCurveTo(273.0113830566406 * e, 490.2216033935547 * e, 267.0113830566406 * e, 493.2216033935547 * e, 249.01138305664062 * e, 490.2216033935547 * e),
        s.bezierCurveTo(222.01138305664062 * e, 492.2216033935547 * e, 220.01138305664062 * e, 485.2216033935547 * e, 225.01138305664062 * e, 467.2216033935547 * e),
        s.bezierCurveTo(230.51138305664062 * e, 440.2216033935547 * e, 230.51138305664062 * e, 440.2216033935547 * e, 236.01138305664062 * e, 413.2216033935547 * e),
        s.bezierCurveTo(237.01138305664062 * e, 405.2216033935547 * e, 238.01138305664062 * e, 404.2216033935547 * e, 253.01138305664062 * e, 403.2216033935547 * e),
        s.bezierCurveTo(269.0113830566406 * e, 405.2216033935547 * e, 270.0113830566406 * e, 407.2216033935547 * e, 269.0113830566406 * e, 412.2216033935547 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(270.0113830566406 * e, 413.2216033935547 * e),
        s.bezierCurveTo(271.0113830566406 * e, 445.7216033935547 * e, 271.0113830566406 * e, 445.7216033935547 * e, 272.0113830566406 * e, 478.2216033935547 * e),
        s.bezierCurveTo(273.0113830566406 * e, 490.2216033935547 * e, 267.0113830566406 * e, 493.2216033935547 * e, 249.01138305664062 * e, 490.2216033935547 * e),
        s.bezierCurveTo(222.01138305664062 * e, 492.2216033935547 * e, 220.01138305664062 * e, 485.2216033935547 * e, 225.01138305664062 * e, 467.2216033935547 * e),
        s.bezierCurveTo(230.51138305664062 * e, 440.2216033935547 * e, 230.51138305664062 * e, 440.2216033935547 * e, 236.01138305664062 * e, 413.2216033935547 * e),
        s.bezierCurveTo(237.01138305664062 * e, 405.2216033935547 * e, 238.01138305664062 * e, 404.2216033935547 * e, 253.01138305664062 * e, 403.2216033935547 * e),
        s.bezierCurveTo(269.0113830566406 * e, 405.2216033935547 * e, 270.0113830566406 * e, 407.2216033935547 * e, 269.0113830566406 * e, 412.2216033935547 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(207.01138305664062 * e, 406.2216033935547 * e),
        s.bezierCurveTo(197.51138305664062 * e, 440.7216033935547 * e, 197.51138305664062 * e, 440.7216033935547 * e, 188.01138305664062 * e, 475.2216033935547 * e),
        s.bezierCurveTo(184.01138305664062 * e, 485.2216033935547 * e, 179.01138305664062 * e, 491.2216033935547 * e, 152.01138305664062 * e, 477.2216033935547 * e),
        s.bezierCurveTo(136.51138305664062 * e, 469.7216033935547 * e, 136.51138305664062 * e, 469.7216033935547 * e, 121.01138305664062 * e, 462.2216033935547 * e),
        s.bezierCurveTo(109.01138305664062 * e, 453.2216033935547 * e, 117.01138305664062 * e, 447.2216033935547 * e, 133.01138305664062 * e, 427.2216033935547 * e),
        s.bezierCurveTo(146.51138305664062 * e, 406.7216033935547 * e, 146.51138305664062 * e, 406.7216033935547 * e, 160.01138305664062 * e, 386.2216033935547 * e),
        s.bezierCurveTo(163.01138305664062 * e, 377.2216033935547 * e, 168.01138305664062 * e, 378.2216033935547 * e, 187.01138305664062 * e, 387.2216033935547 * e),
        s.bezierCurveTo(206.01138305664062 * e, 395.2216033935547 * e, 208.01138305664062 * e, 398.2216033935547 * e, 207.01138305664062 * e, 405.2216033935547 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(207.01138305664062 * e, 406.2216033935547 * e),
        s.bezierCurveTo(197.51138305664062 * e, 440.7216033935547 * e, 197.51138305664062 * e, 440.7216033935547 * e, 188.01138305664062 * e, 475.2216033935547 * e),
        s.bezierCurveTo(184.01138305664062 * e, 485.2216033935547 * e, 179.01138305664062 * e, 491.2216033935547 * e, 152.01138305664062 * e, 477.2216033935547 * e),
        s.bezierCurveTo(136.51138305664062 * e, 469.7216033935547 * e, 136.51138305664062 * e, 469.7216033935547 * e, 121.01138305664062 * e, 462.2216033935547 * e),
        s.bezierCurveTo(109.01138305664062 * e, 453.2216033935547 * e, 117.01138305664062 * e, 447.2216033935547 * e, 133.01138305664062 * e, 427.2216033935547 * e),
        s.bezierCurveTo(146.51138305664062 * e, 406.7216033935547 * e, 146.51138305664062 * e, 406.7216033935547 * e, 160.01138305664062 * e, 386.2216033935547 * e),
        s.bezierCurveTo(163.01138305664062 * e, 377.2216033935547 * e, 168.01138305664062 * e, 378.2216033935547 * e, 187.01138305664062 * e, 387.2216033935547 * e),
        s.bezierCurveTo(206.01138305664062 * e, 395.2216033935547 * e, 208.01138305664062 * e, 398.2216033935547 * e, 207.01138305664062 * e, 405.2216033935547 * e),
        s.closePath(),
        Ce(s, i[3], i[2], 12 * e),
        s.globalAlpha = t ? .5 : 1,
        s.translate(0, 5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(130.01138305664062 * e, 375.2216033935547 * e),
        s.bezierCurveTo(109.51138305664062 * e, 400.7216033935547 * e, 109.51138305664062 * e, 400.7216033935547 * e, 89.01138305664062 * e, 426.2216033935547 * e),
        s.bezierCurveTo(82.01138305664062 * e, 435.2216033935547 * e, 77.01138305664062 * e, 435.2216033935547 * e, 62.011383056640625 * e, 417.2216033935547 * e),
        s.bezierCurveTo(43.011383056640625 * e, 397.2216033935547 * e, 47.011383056640625 * e, 395.2216033935547 * e, 62.011383056640625 * e, 382.2216033935547 * e),
        s.bezierCurveTo(84.01138305664062 * e, 366.7216033935547 * e, 84.01138305664062 * e, 366.7216033935547 * e, 106.01138305664062 * e, 351.2216033935547 * e),
        s.bezierCurveTo(116.01138305664062 * e, 344.2216033935547 * e, 120.01138305664062 * e, 347.2216033935547 * e, 127.01138305664062 * e, 356.2216033935547 * e),
        s.bezierCurveTo(137.01138305664062 * e, 366.2216033935547 * e, 137.01138305664062 * e, 366.2216033935547 * e, 131.01138305664062 * e, 376.2216033935547 * e),
        s.closePath(),
        Ce(s, i[0], i[0], 12 * e),
        s.globalAlpha = 1,
        s.translate(0, -5 * e),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(130.01138305664062 * e, 375.2216033935547 * e),
        s.bezierCurveTo(109.51138305664062 * e, 400.7216033935547 * e, 109.51138305664062 * e, 400.7216033935547 * e, 89.01138305664062 * e, 426.2216033935547 * e),
        s.bezierCurveTo(82.01138305664062 * e, 435.2216033935547 * e, 77.01138305664062 * e, 435.2216033935547 * e, 62.011383056640625 * e, 417.2216033935547 * e),
        s.bezierCurveTo(43.011383056640625 * e, 397.2216033935547 * e, 47.011383056640625 * e, 395.2216033935547 * e, 62.011383056640625 * e, 382.2216033935547 * e),
        s.bezierCurveTo(84.01138305664062 * e, 366.7216033935547 * e, 84.01138305664062 * e, 366.7216033935547 * e, 106.01138305664062 * e, 351.2216033935547 * e),
        s.bezierCurveTo(116.01138305664062 * e, 344.2216033935547 * e, 120.01138305664062 * e, 347.2216033935547 * e, 127.01138305664062 * e, 356.2216033935547 * e),
        s.bezierCurveTo(137.01138305664062 * e, 366.2216033935547 * e, 137.01138305664062 * e, 366.2216033935547 * e, 131.01138305664062 * e, 376.2216033935547 * e),
        s.closePath(),
        Ce(s, i[4], i[2], 12 * e),
        a
    }
    function Oi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 218 * e,
        n.height = 185 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(64 * e, 53.135406494140625 * e),
        r.bezierCurveTo(92 * e, 17.135406494140625 * e, 116 * e, 11.135406494140625 * e, 158 * e, 53.135406494140625 * e),
        r.bezierCurveTo(178 * e, 74.13540649414062 * e, 181 * e, 81.13540649414062 * e, 196 * e, 101.13540649414062 * e),
        r.bezierCurveTo(214 * e, 127.13540649414062 * e, 192 * e, 138.13540649414062 * e, 173 * e, 149.13540649414062 * e),
        r.bezierCurveTo(137 * e, 166.13540649414062 * e, 74 * e, 170.13540649414062 * e, 36 * e, 141.13540649414062 * e),
        r.bezierCurveTo(13 * e, 127.13540649414062 * e, 20 * e, 119.13540649414062 * e, 30 * e, 103.13540649414062 * e),
        r.bezierCurveTo(48 * e, 71.13540649414062 * e, 54 * e, 67.13540649414062 * e, 63 * e, 54.135406494140625 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(107 * e, 25.135406494140625 * e),
        r.bezierCurveTo(62 * e, 90.13540649414062 * e, 54 * e, 129.13540649414062 * e, 53 * e, 151.13540649414062 * e),
        r.bezierCurveTo(39.5 * e, 142.13540649414062 * e, 39.5 * e, 142.13540649414062 * e, 26 * e, 133.13540649414062 * e),
        r.bezierCurveTo(23.5 * e, 128.63540649414062 * e, 23.5 * e, 128.63540649414062 * e, 21 * e, 124.13540649414062 * e),
        r.bezierCurveTo(22 * e, 113.13540649414062 * e, 31 * e, 99.13540649414062 * e, 40 * e, 88.13540649414062 * e),
        r.bezierCurveTo(54.5 * e, 67.13540649414062 * e, 54.5 * e, 67.13540649414062 * e, 69 * e, 46.135406494140625 * e),
        r.bezierCurveTo(80.5 * e, 36.635406494140625 * e, 80.5 * e, 36.635406494140625 * e, 92 * e, 27.135406494140625 * e),
        r.closePath(),
        Ce(r, i[1]),
        n
    }
    function bi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 167 * e,
        n.height = 136 * e,
        r.globalAlpha = .5,
        r.save(),
        r.translate(76.71426391601562 * e, 67.85713195800781 * e),
        Be(r, -57.5 * e, -54.5 * e, 115 * e, 109 * e, 15 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = .8,
        r.save(),
        r.translate(76.71426391601562 * e, 67.85713195800781 * e),
        Be(r, -57.5 * e, -54.5 * e, 115 * e, 109 * e, 15 * e),
        r.restore(),
        Ce(r, void 0, i[1], 7 * e),
        r.globalAlpha = .5,
        r.save(),
        r.translate(91.21426391601562 * e, 67.35713195800781 * e),
        Be(r, -56 * e, -55 * e, 115 * e, 109 * e, 15 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.save(),
        r.translate(91.21426391601562 * e, 67.35713195800781 * e),
        Be(r, -56 * e, -55 * e, 115 * e, 109 * e, 15 * e),
        r.restore(),
        Ce(r, void 0, i[1], 7 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(131.21426391601562 * e, 70.35713195800781 * e),
        r.bezierCurveTo(133.21426391601562 * e, 95.35713195800781 * e, 128.21426391601562 * e, 109.35713195800781 * e, 108.21426391601562 * e, 108.35713195800781 * e),
        Ce(r, void 0, i[1], 10 * e),
        n
    }
    function mi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 163 * e,
        n.height = 163 * e,
        r.save(),
        r.translate(82.5 * e, 81.1015625 * e),
        r.rotate(0),
        Be(r, -65.5 * e, -66 * e, 131 * e, 131 * e, 5 * e),
        r.restore(),
        Ce(r, i[1]),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(80 * e, 17.1015625 * e),
        Be(r, -64 * e, -4.5 * e, 129 * e, 9 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(80 * e, 17.1015625 * e),
        Be(r, -64 * e, -4.5 * e, 129 * e, 9 * e, 5 * e),
        r.restore(),
        Ce(r, i[2], i[3], 3 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(145.5 * e, 83.6015625 * e),
        Be(r, -4.5 * e, -61 * e, 9 * e, 129 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(145.5 * e, 83.6015625 * e),
        Be(r, -4.5 * e, -61 * e, 9 * e, 129 * e, 5 * e),
        r.restore(),
        Ce(r, i[2], i[3], 3 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(17.5 * e, 82.6015625 * e),
        Be(r, -4.5 * e, -65 * e, 9 * e, 129 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(17.5 * e, 82.6015625 * e),
        Be(r, -4.5 * e, -65 * e, 9 * e, 129 * e, 5 * e),
        r.restore(),
        Ce(r, i[2], i[3], 3 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(80.5 * e, 145.6015625 * e),
        Be(r, -65.5 * e, -4 * e, 129 * e, 9 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(80.5 * e, 145.6015625 * e),
        Be(r, -65.5 * e, -4 * e, 129 * e, 9 * e, 5 * e),
        r.restore(),
        Ce(r, i[2], i[3], 3 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(17 * e, 18.1015625 * e),
        Be(r, -11 * e, -11.5 * e, 22 * e, 22 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(17 * e, 18.1015625 * e),
        Be(r, -11 * e, -11.5 * e, 22 * e, 22 * e, 5 * e),
        r.restore(),
        Ce(r, i[2], i[3], 3 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(145.5 * e, 16.6015625 * e),
        Be(r, -10.5 * e, -11.5 * e, 21 * e, 22 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(145.5 * e, 16.6015625 * e),
        Be(r, -10.5 * e, -11.5 * e, 21 * e, 22 * e, 5 * e),
        r.restore(),
        Ce(r, i[2], i[3], 3 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(145.5 * e, 144.1015625 * e),
        Be(r, -10.5 * e, -11 * e, 22 * e, 22 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(145.5 * e, 144.1015625 * e),
        Be(r, -10.5 * e, -11 * e, 22 * e, 22 * e, 5 * e),
        r.restore(),
        Ce(r, i[2], i[3], 3 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        r.translate(17.5 * e, 145.1015625 * e),
        Be(r, -11.5 * e, -12 * e, 22 * e, 22 * e, 5 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        r.translate(17.5 * e, 145.1015625 * e),
        Be(r, -11.5 * e, -12 * e, 22 * e, 22 * e, 5 * e),
        r.restore(),
        Ce(r, i[2], i[3], 3 * e),
        n
    }
    function Ci(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 168 * e,
        n.height = 100 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(10 * e, 5 * e),
        r.save(),
        r.translate(24.5 * e, 44.30000305175781 * e),
        Be(r, -19.5 * e, -8.5 * e, 39 * e, 17 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(115 * e, 37.80000305175781 * e),
        r.bezierCurveTo(142 * e, 37.80000305175781 * e, 140 * e, 37.80000305175781 * e, 141 * e, 37.80000305175781 * e),
        r.bezierCurveTo(147 * e, 28.800003051757812 * e, 149 * e, 26.800003051757812 * e, 153 * e, 32.80000305175781 * e),
        r.bezierCurveTo(160 * e, 42.80000305175781 * e, 157 * e, 50.80000305175781 * e, 153 * e, 58.80000305175781 * e),
        r.bezierCurveTo(148 * e, 62.80000305175781 * e, 147 * e, 59.80000305175781 * e, 143 * e, 52.80000305175781 * e),
        r.bezierCurveTo(129 * e, 52.80000305175781 * e, 129 * e, 52.80000305175781 * e, 115 * e, 52.80000305175781 * e),
        r.closePath(),
        Ce(r, i[0]),
        we(r, 78 * e, 44.80000305175781 * e, 39.44616584663204 * e),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-10 * e, -5 * e),
        r.save(),
        r.translate(24.5 * e, 44.30000305175781 * e),
        Be(r, -19.5 * e, -8.5 * e, 39 * e, 17 * e, 10 * e),
        r.restore(),
        Ce(r, void 0, i[3], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(115 * e, 37.80000305175781 * e),
        r.bezierCurveTo(142 * e, 37.80000305175781 * e, 140 * e, 37.80000305175781 * e, 141 * e, 37.80000305175781 * e),
        r.bezierCurveTo(147 * e, 28.800003051757812 * e, 149 * e, 26.800003051757812 * e, 153 * e, 32.80000305175781 * e),
        r.bezierCurveTo(160 * e, 42.80000305175781 * e, 157 * e, 50.80000305175781 * e, 153 * e, 58.80000305175781 * e),
        r.bezierCurveTo(148 * e, 62.80000305175781 * e, 147 * e, 59.80000305175781 * e, 143 * e, 52.80000305175781 * e),
        r.bezierCurveTo(129 * e, 52.80000305175781 * e, 129 * e, 52.80000305175781 * e, 115 * e, 52.80000305175781 * e),
        r.closePath(),
        Ce(r, void 0, i[3], 6 * e),
        we(r, 78 * e, 44.80000305175781 * e, 42.44616584663204 * e),
        Ce(r, void 0, i[3], 6 * e),
        r.save(),
        r.translate(24.5 * e, 44.30000305175781 * e),
        Be(r, -19.5 * e, -8.5 * e, 39 * e, 17 * e, 10 * e),
        r.restore(),
        Ce(r, i[1]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(115 * e, 37.80000305175781 * e),
        r.bezierCurveTo(142 * e, 37.80000305175781 * e, 140 * e, 37.80000305175781 * e, 141 * e, 37.80000305175781 * e),
        r.bezierCurveTo(147 * e, 28.800003051757812 * e, 149 * e, 26.800003051757812 * e, 153 * e, 32.80000305175781 * e),
        r.bezierCurveTo(160 * e, 42.80000305175781 * e, 157 * e, 50.80000305175781 * e, 153 * e, 58.80000305175781 * e),
        r.bezierCurveTo(148 * e, 62.80000305175781 * e, 147 * e, 59.80000305175781 * e, 143 * e, 52.80000305175781 * e),
        r.bezierCurveTo(129 * e, 52.80000305175781 * e, 129 * e, 52.80000305175781 * e, 115 * e, 52.80000305175781 * e),
        r.closePath(),
        Ce(r, i[1]),
        we(r, 78 * e, 44.80000305175781 * e, 39.44616584663204 * e),
        Ce(r, i[2], i[1], 4 * e),
        we(r, 78 * e, 44.80000305175781 * e, 29.68164415931166 * e),
        Ce(r, i[3], i[1], 4 * e),
        we(r, 78 * e, 44 * e, 20 * e),
        Ce(r, i[4]),
        n
    }
    function Ri(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 158 * e,
        n.height = 201 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(96.5 * e, 76.421875 * e),
        r.bezierCurveTo(100.5 * e, 64.421875 * e, 103.5 * e, 62.421875 * e, 110.5 * e, 65.421875 * e),
        r.bezierCurveTo(116.5 * e, 66.421875 * e, 117.5 * e, 67.421875 * e, 112.5 * e, 73.421875 * e),
        r.bezierCurveTo(107 * e, 79.921875 * e, 107 * e, 79.921875 * e, 101.5 * e, 86.421875 * e),
        r.closePath(),
        Ce(r, i[8], i[8], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(61.5 * e, 78.421875 * e),
        r.bezierCurveTo(57.5 * e, 73.421875 * e, 51.5 * e, 66.421875 * e, 45.5 * e, 68.421875 * e),
        r.bezierCurveTo(32.5 * e, 73.421875 * e, 38.5 * e, 75.421875 * e, 46.5 * e, 81.421875 * e),
        r.bezierCurveTo(51.5 * e, 84.921875 * e, 51.5 * e, 84.921875 * e, 56.5 * e, 88.421875 * e),
        r.closePath(),
        Ce(r, i[8], i[8], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(116.5 * e, 127.421875 * e),
        r.bezierCurveTo(124.5 * e, 108.421875 * e, 129.5 * e, 104.421875 * e, 141.5 * e, 107.421875 * e),
        r.bezierCurveTo(156.5 * e, 112.421875 * e, 153.5 * e, 113.421875 * e, 132.5 * e, 134.421875 * e),
        r.bezierCurveTo(123.5 * e, 141.921875 * e, 123.5 * e, 141.921875 * e, 114.5 * e, 149.421875 * e),
        r.closePath(),
        Ce(r, i[8], i[8], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(41.5 * e, 134.421875 * e),
        r.bezierCurveTo(30.5 * e, 119.421875 * e, 25.5 * e, 111.421875 * e, 12.5 * e, 115.421875 * e),
        r.bezierCurveTo(4.5 * e, 120.421875 * e, 4.5 * e, 121.421875 * e, 26.5 * e, 142.421875 * e),
        r.bezierCurveTo(35 * e, 149.921875 * e, 35 * e, 149.921875 * e, 43.5 * e, 157.421875 * e),
        r.closePath(),
        Ce(r, i[8], i[8], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(78.5 * e, 51.921875 * e),
        r.bezierCurveTo(99.5 * e, 75.921875 * e, 110.5 * e, 96.921875 * e, 118.5 * e, 120.921875 * e),
        r.bezierCurveTo(121.5 * e, 140.921875 * e, 107.5 * e, 179.921875 * e, 75.5 * e, 183.921875 * e),
        r.bezierCurveTo(30.5 * e, 169.921875 * e, 37.5 * e, 131.921875 * e, 34.5 * e, 120.921875 * e),
        r.bezierCurveTo(41.5 * e, 89.921875 * e, 61.5 * e, 67.921875 * e, 78.5 * e, 51.921875 * e),
        r.closePath(),
        Ce(r, i[8], i[8], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(72.5 * e, 72.421875 * e),
        r.bezierCurveTo(76.5 * e, 79.421875 * e, 79.5 * e, 80.421875 * e, 83.5 * e, 73.421875 * e),
        r.bezierCurveTo(80.5 * e, 96.921875 * e, 79.5 * e, 114.421875 * e, 77.5 * e, 120.421875 * e),
        r.closePath(),
        Ce(r, i[8], i[8], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(42.5 * e, 163.421875 * e),
        r.bezierCurveTo(62.5 * e, 185.421875 * e, 86.5 * e, 186.421875 * e, 111.5 * e, 165.421875 * e),
        r.bezierCurveTo(107.5 * e, 176.421875 * e, 95.5 * e, 187.421875 * e, 75.5 * e, 188.421875 * e),
        r.bezierCurveTo(53.5 * e, 188.421875 * e, 43.5 * e, 171.421875 * e, 42.5 * e, 164.421875 * e),
        r.closePath(),
        Ce(r, i[8], i[8], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(79.5 * e, 61.421875 * e),
        r.bezierCurveTo(88.5 * e, 31.421875 * e, 81.5 * e, 16.421875 * e, 75.5 * e, 7.421875 * e),
        r.bezierCurveTo(77.5 * e, 28.421875 * e, 77.5 * e, 37.421875 * e, 68.5 * e, 42.421875 * e),
        r.bezierCurveTo(79.5 * e, 57.421875 * e, 79.5 * e, 58.421875 * e, 80.5 * e, 61.421875 * e),
        r.closePath(),
        Ce(r, i[8], i[8], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(72.5 * e, 72.421875 * e),
        r.bezierCurveTo(76.5 * e, 79.421875 * e, 79.5 * e, 80.421875 * e, 83.5 * e, 73.421875 * e),
        r.bezierCurveTo(80.5 * e, 96.921875 * e, 79.5 * e, 114.421875 * e, 77.5 * e, 120.421875 * e),
        r.closePath(),
        Ce(r, i[8], i[8], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(96.5 * e, 76.421875 * e),
        r.bezierCurveTo(100.5 * e, 64.421875 * e, 103.5 * e, 62.421875 * e, 110.5 * e, 65.421875 * e),
        r.bezierCurveTo(116.5 * e, 66.421875 * e, 117.5 * e, 67.421875 * e, 112.5 * e, 73.421875 * e),
        r.bezierCurveTo(107 * e, 79.921875 * e, 107 * e, 79.921875 * e, 101.5 * e, 86.421875 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(61.5 * e, 78.421875 * e),
        r.bezierCurveTo(57.5 * e, 73.421875 * e, 51.5 * e, 66.421875 * e, 45.5 * e, 68.421875 * e),
        r.bezierCurveTo(32.5 * e, 73.421875 * e, 38.5 * e, 75.421875 * e, 46.5 * e, 81.421875 * e),
        r.bezierCurveTo(51.5 * e, 84.921875 * e, 51.5 * e, 84.921875 * e, 56.5 * e, 88.421875 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(116.5 * e, 127.421875 * e),
        r.bezierCurveTo(124.5 * e, 108.421875 * e, 129.5 * e, 104.421875 * e, 141.5 * e, 107.421875 * e),
        r.bezierCurveTo(156.5 * e, 112.421875 * e, 153.5 * e, 113.421875 * e, 132.5 * e, 134.421875 * e),
        r.bezierCurveTo(123.5 * e, 141.921875 * e, 123.5 * e, 141.921875 * e, 114.5 * e, 149.421875 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(41.5 * e, 134.421875 * e),
        r.bezierCurveTo(30.5 * e, 119.421875 * e, 25.5 * e, 111.421875 * e, 12.5 * e, 115.421875 * e),
        r.bezierCurveTo(4.5 * e, 120.421875 * e, 4.5 * e, 121.421875 * e, 26.5 * e, 142.421875 * e),
        r.bezierCurveTo(35 * e, 149.921875 * e, 35 * e, 149.921875 * e, 43.5 * e, 157.421875 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(78.5 * e, 51.921875 * e),
        r.bezierCurveTo(99.5 * e, 75.921875 * e, 110.5 * e, 96.921875 * e, 118.5 * e, 120.921875 * e),
        r.bezierCurveTo(121.5 * e, 140.921875 * e, 107.5 * e, 179.921875 * e, 75.5 * e, 183.921875 * e),
        r.bezierCurveTo(30.5 * e, 169.921875 * e, 37.5 * e, 131.921875 * e, 34.5 * e, 120.921875 * e),
        r.bezierCurveTo(41.5 * e, 89.921875 * e, 61.5 * e, 67.921875 * e, 78.5 * e, 51.921875 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 4 * e),
        we(r, 108.5 * e, 148.421875 * e, 9 * e),
        Ce(r, i[5]),
        we(r, 106.5 * e, 144.421875 * e, 3 * e),
        Ce(r, i[6]),
        we(r, 46.5 * e, 148.421875 * e, 9 * e),
        Ce(r, i[5]),
        we(r, 44.5 * e, 144.421875 * e, 3 * e),
        Ce(r, i[6]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(116.5 * e, 114.421875 * e),
        r.bezierCurveTo(121.5 * e, 137.421875 * e, 118.5 * e, 133.421875 * e, 108.5 * e, 139.421875 * e),
        r.bezierCurveTo(94.5 * e, 146.421875 * e, 96.5 * e, 148.421875 * e, 95.5 * e, 152.421875 * e),
        Ce(r, i[3], i[2], 4 * e),
        r.beginPath(),
        r.translate(0, -2 * e),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(35.5 * e, 131.421875 * e),
        r.bezierCurveTo(36.5 * e, 140.421875 * e, 39.5 * e, 140.421875 * e, 49.5 * e, 143.421875 * e),
        r.bezierCurveTo(59.5 * e, 149.421875 * e, 57.5 * e, 151.421875 * e, 59.5 * e, 155.421875 * e),
        Ce(r, i[3], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(84.5 * e, 57.421875 * e),
        r.bezierCurveTo(101.5 * e, 120.421875 * e, 92.5 * e, 127.421875 * e, 78.5 * e, 134.421875 * e),
        r.bezierCurveTo(51.5 * e, 131.421875 * e, 63.5 * e, 102.421875 * e, 70.5 * e, 59.421875 * e),
        r.bezierCurveTo(75 * e, 55.421875 * e, 78.5 * e, 52.421875 * e, 79.5 * e, 51.421875 * e),
        r.closePath(),
        Ce(r, i[4]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(79.5 * e, 61.421875 * e),
        r.bezierCurveTo(88.5 * e, 31.421875 * e, 81.5 * e, 16.421875 * e, 75.5 * e, 7.421875 * e),
        r.bezierCurveTo(77.5 * e, 28.421875 * e, 77.5 * e, 37.421875 * e, 68.5 * e, 42.421875 * e),
        r.bezierCurveTo(79.5 * e, 57.421875 * e, 79.5 * e, 58.421875 * e, 80.5 * e, 61.421875 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(72.5 * e, 72.421875 * e),
        r.bezierCurveTo(76.5 * e, 79.421875 * e, 79.5 * e, 80.421875 * e, 83.5 * e, 73.421875 * e),
        r.bezierCurveTo(80.5 * e, 96.921875 * e, 79.5 * e, 114.421875 * e, 77.5 * e, 120.421875 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(87.5 * e, 154.421875 * e),
        r.bezierCurveTo(93.5 * e, 163.921875 * e, 93.5 * e, 163.921875 * e, 99.5 * e, 173.421875 * e),
        r.bezierCurveTo(95 * e, 177.421875 * e, 95 * e, 177.421875 * e, 90.5 * e, 181.421875 * e),
        r.bezierCurveTo(89 * e, 167.921875 * e, 89 * e, 167.921875 * e, 87.5 * e, 154.421875 * e),
        r.closePath(),
        Ce(r, i[6], i[7], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(81.5 * e, 164.421875 * e),
        r.bezierCurveTo(84 * e, 172.921875 * e, 84 * e, 172.921875 * e, 86.5 * e, 181.421875 * e),
        r.bezierCurveTo(82.5 * e, 182.421875 * e, 82.5 * e, 182.421875 * e, 78.5 * e, 183.421875 * e),
        r.closePath(),
        Ce(r, i[6], i[7], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(72.5 * e, 164.421875 * e),
        r.bezierCurveTo(73.5 * e, 173.921875 * e, 73.5 * e, 173.921875 * e, 74.5 * e, 183.421875 * e),
        r.bezierCurveTo(70.5 * e, 182.921875 * e, 70.5 * e, 182.921875 * e, 66.5 * e, 182.421875 * e),
        r.closePath(),
        Ce(r, i[6], i[7], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(65.5 * e, 156.421875 * e),
        r.bezierCurveTo(65 * e, 168.421875 * e, 65 * e, 168.421875 * e, 64.5 * e, 180.421875 * e),
        r.bezierCurveTo(58.5 * e, 177.421875 * e, 58.5 * e, 177.421875 * e, 52.5 * e, 174.421875 * e),
        r.closePath(),
        Ce(r, i[6], i[7], 2 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(42.5 * e, 163.421875 * e),
        r.bezierCurveTo(62.5 * e, 185.421875 * e, 86.5 * e, 186.421875 * e, 111.5 * e, 165.421875 * e),
        r.bezierCurveTo(107.5 * e, 176.421875 * e, 95.5 * e, 187.421875 * e, 75.5 * e, 188.421875 * e),
        r.bezierCurveTo(53.5 * e, 188.421875 * e, 43.5 * e, 171.421875 * e, 42.5 * e, 164.421875 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 4 * e),
        n
    }
    function Si(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 400 * e,
        n.height = 170 * e,
        r.translate(0, -170 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(159.5 * e, 322.0625 * e),
        r.bezierCurveTo(240.5 * e, 293.0625 * e, 240.5 * e, 293.0625 * e, 321.5 * e, 264.0625 * e),
        r.bezierCurveTo(276.5 * e, 230.0625 * e, 276.5 * e, 230.0625 * e, 231.5 * e, 196.0625 * e),
        r.bezierCurveTo(158.5 * e, 221.5625 * e, 158.5 * e, 221.5625 * e, 85.5 * e, 247.0625 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(212.5 * e, 270.0625 * e),
        r.bezierCurveTo(235 * e, 261.5625 * e, 235 * e, 261.5625 * e, 257.5 * e, 253.0625 * e),
        r.closePath(),
        Ce(r, void 0, i[0], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(193.5 * e, 226.0625 * e),
        r.bezierCurveTo(204.5 * e, 242.0625 * e, 242.5 * e, 237.0625 * e, 251.5 * e, 225.0625 * e),
        r.bezierCurveTo(246.5 * e, 195.0625 * e, 205.5 * e, 190.0625 * e, 193.5 * e, 227.0625 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(164.5 * e, 245.0625 * e),
        r.bezierCurveTo(182.5 * e, 264.0625 * e, 252.5 * e, 258.0625 * e, 276.5 * e, 244.0625 * e),
        r.bezierCurveTo(265.5 * e, 226.0625 * e, 244.5 * e, 231.0625 * e, 229.5 * e, 230.0625 * e),
        r.bezierCurveTo(205.5 * e, 227.0625 * e, 175.5 * e, 202.0625 * e, 162.5 * e, 244.0625 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(115.5 * e, 260.0625 * e),
        r.bezierCurveTo(134.5 * e, 279.0625 * e, 170.5 * e, 275.0625 * e, 191.5 * e, 257.0625 * e),
        r.bezierCurveTo(174.5 * e, 208.0625 * e, 142.5 * e, 197.0625 * e, 116.5 * e, 259.0625 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(152.5 * e, 278.0625 * e),
        r.bezierCurveTo(165.5 * e, 294.0625 * e, 200.5 * e, 287.0625 * e, 216.5 * e, 278.0625 * e),
        r.bezierCurveTo(206.5 * e, 247.0625 * e, 173.5 * e, 233.0625 * e, 153.5 * e, 276.0625 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 12 * e),
        n
    }
    function Ni(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 272 * e,
        n.height = 264 * e,
        r.translate(0, 20 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(56.999969482421875 * e, 84.517333984375 * e),
        r.bezierCurveTo(61.999969482421875 * e, 58.517333984375 * e, 79.99996948242188 * e, 50.517333984375 * e, 102.99996948242188 * e, 50.517333984375 * e),
        r.bezierCurveTo(119.99996948242188 * e, 26.517333984375 * e, 137.99996948242188 * e, 32.517333984375 * e, 156.99996948242188 * e, 44.517333984375 * e),
        r.bezierCurveTo(187.99996948242188 * e, 42.517333984375 * e, 195.99996948242188 * e, 50.517333984375 * e, 202.99996948242188 * e, 77.517333984375 * e),
        r.bezierCurveTo(229.99996948242188 * e, 80.517333984375 * e, 231.99996948242188 * e, 96.517333984375 * e, 229.99996948242188 * e, 118.517333984375 * e),
        r.bezierCurveTo(241.99996948242188 * e, 147.517333984375 * e, 236.99996948242188 * e, 148.517333984375 * e, 220.99996948242188 * e, 165.517333984375 * e),
        r.bezierCurveTo(222.99996948242188 * e, 192.517333984375 * e, 209.99996948242188 * e, 212.517333984375 * e, 177.99996948242188 * e, 213.517333984375 * e),
        r.bezierCurveTo(159.99996948242188 * e, 234.517333984375 * e, 141.99996948242188 * e, 234.517333984375 * e, 116.99996948242188 * e, 222.517333984375 * e),
        r.bezierCurveTo(72.99996948242188 * e, 226.517333984375 * e, 66.99996948242188 * e, 207.517333984375 * e, 65.99996948242188 * e, 190.517333984375 * e),
        r.bezierCurveTo(35.999969482421875 * e, 180.517333984375 * e, 30.999969482421875 * e, 162.517333984375 * e, 39.999969482421875 * e, 135.517333984375 * e),
        r.bezierCurveTo(23.999969482421875 * e, 110.517333984375 * e, 43.999969482421875 * e, 90.517333984375 * e, 55.999969482421875 * e, 85.517333984375 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(0, -20 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(56.999969482421875 * e, 84.517333984375 * e),
        r.bezierCurveTo(61.999969482421875 * e, 58.517333984375 * e, 79.99996948242188 * e, 50.517333984375 * e, 102.99996948242188 * e, 50.517333984375 * e),
        r.bezierCurveTo(119.99996948242188 * e, 26.517333984375 * e, 137.99996948242188 * e, 32.517333984375 * e, 156.99996948242188 * e, 44.517333984375 * e),
        r.bezierCurveTo(187.99996948242188 * e, 42.517333984375 * e, 195.99996948242188 * e, 50.517333984375 * e, 202.99996948242188 * e, 77.517333984375 * e),
        r.bezierCurveTo(229.99996948242188 * e, 80.517333984375 * e, 231.99996948242188 * e, 96.517333984375 * e, 229.99996948242188 * e, 118.517333984375 * e),
        r.bezierCurveTo(241.99996948242188 * e, 147.517333984375 * e, 236.99996948242188 * e, 148.517333984375 * e, 220.99996948242188 * e, 165.517333984375 * e),
        r.bezierCurveTo(222.99996948242188 * e, 192.517333984375 * e, 209.99996948242188 * e, 212.517333984375 * e, 177.99996948242188 * e, 213.517333984375 * e),
        r.bezierCurveTo(159.99996948242188 * e, 234.517333984375 * e, 141.99996948242188 * e, 234.517333984375 * e, 116.99996948242188 * e, 222.517333984375 * e),
        r.bezierCurveTo(72.99996948242188 * e, 226.517333984375 * e, 66.99996948242188 * e, 207.517333984375 * e, 65.99996948242188 * e, 190.517333984375 * e),
        r.bezierCurveTo(35.999969482421875 * e, 180.517333984375 * e, 30.999969482421875 * e, 162.517333984375 * e, 39.999969482421875 * e, 135.517333984375 * e),
        r.bezierCurveTo(23.999969482421875 * e, 110.517333984375 * e, 43.999969482421875 * e, 90.517333984375 * e, 55.999969482421875 * e, 85.517333984375 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 8 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(123.99996948242188 * e, 116.18402099609375 * e),
        r.bezierCurveTo(115.99996948242188 * e, 99.18402099609375 * e, 109.99996948242188 * e, 74.18402099609375 * e, 109.99996948242188 * e, 63.18402099609375 * e),
        r.bezierCurveTo(115.99996948242188 * e, 69.18402099609375 * e, 125.99996948242188 * e, 87.18402099609375 * e, 137.99996948242188 * e, 112.18402099609375 * e),
        r.bezierCurveTo(142.99996948242188 * e, 84.18402099609375 * e, 143.99996948242188 * e, 76.18402099609375 * e, 153.99996948242188 * e, 62.18402099609375 * e),
        r.bezierCurveTo(155.99996948242188 * e, 79.18402099609375 * e, 149.99996948242188 * e, 110.18402099609375 * e, 151.99996948242188 * e, 117.18402099609375 * e),
        r.bezierCurveTo(162.99996948242188 * e, 104.18402099609375 * e, 180.99996948242188 * e, 91.18402099609375 * e, 191.99996948242188 * e, 91.18402099609375 * e),
        r.bezierCurveTo(185.99996948242188 * e, 102.18402099609375 * e, 180.99996948242188 * e, 106.18402099609375 * e, 160.99996948242188 * e, 124.18402099609375 * e),
        r.bezierCurveTo(190.99996948242188 * e, 121.18402099609375 * e, 199.99996948242188 * e, 120.18402099609375 * e, 207.99996948242188 * e, 123.18402099609375 * e),
        r.bezierCurveTo(199.99996948242188 * e, 129.18402099609375 * e, 181.99996948242188 * e, 132.18402099609375 * e, 160.99996948242188 * e, 135.18402099609375 * e),
        r.bezierCurveTo(179.99996948242188 * e, 142.18402099609375 * e, 193.99996948242188 * e, 151.18402099609375 * e, 196.99996948242188 * e, 156.18402099609375 * e),
        r.bezierCurveTo(185.99996948242188 * e, 156.18402099609375 * e, 163.99996948242188 * e, 149.18402099609375 * e, 152.99996948242188 * e, 147.18402099609375 * e),
        r.bezierCurveTo(157.99996948242188 * e, 155.18402099609375 * e, 165.99996948242188 * e, 176.18402099609375 * e, 169.99996948242188 * e, 195.18402099609375 * e),
        r.bezierCurveTo(162.99996948242188 * e, 190.18402099609375 * e, 147.99996948242188 * e, 167.18402099609375 * e, 139.99996948242188 * e, 153.18402099609375 * e),
        r.bezierCurveTo(137.99996948242188 * e, 167.18402099609375 * e, 126.99996948242188 * e, 194.18402099609375 * e, 119.99996948242188 * e, 204.18402099609375 * e),
        r.bezierCurveTo(117.99996948242188 * e, 186.18402099609375 * e, 123.99996948242188 * e, 165.18402099609375 * e, 126.99996948242188 * e, 149.18402099609375 * e),
        r.bezierCurveTo(110.99996948242188 * e, 163.18402099609375 * e, 103.99996948242188 * e, 170.18402099609375 * e, 82.99996948242188 * e, 177.18402099609375 * e),
        r.bezierCurveTo(90.99996948242188 * e, 162.18402099609375 * e, 99.99996948242188 * e, 153.18402099609375 * e, 117.99996948242188 * e, 140.18402099609375 * e),
        r.bezierCurveTo(97.99996948242188 * e, 140.18402099609375 * e, 83.99996948242188 * e, 139.18402099609375 * e, 65.99996948242188 * e, 132.18402099609375 * e),
        r.bezierCurveTo(77.99996948242188 * e, 127.18402099609375 * e, 95.99996948242188 * e, 127.18402099609375 * e, 115.99996948242188 * e, 127.18402099609375 * e),
        r.bezierCurveTo(91.99996948242188 * e, 113.18402099609375 * e, 84.99996948242188 * e, 107.18402099609375 * e, 76.99996948242188 * e, 96.18402099609375 * e),
        r.bezierCurveTo(94.99996948242188 * e, 99.18402099609375 * e, 109.99996948242188 * e, 109.18402099609375 * e, 123.99996948242188 * e, 116.18402099609375 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(131.99996948242188 * e, 119.18402099609375 * e),
        r.bezierCurveTo(141.99996948242188 * e, 119.18402099609375 * e, 145.99996948242188 * e, 116.18402099609375 * e, 147.99996948242188 * e, 109.18402099609375 * e),
        r.bezierCurveTo(151.99996948242188 * e, 107.18402099609375 * e, 159.99996948242188 * e, 107.18402099609375 * e, 156.99996948242188 * e, 123.18402099609375 * e),
        r.bezierCurveTo(155.99996948242188 * e, 140.18402099609375 * e, 142.99996948242188 * e, 149.18402099609375 * e, 132.99996948242188 * e, 147.18402099609375 * e),
        r.bezierCurveTo(119.99996948242188 * e, 144.18402099609375 * e, 113.99996948242188 * e, 122.18402099609375 * e, 131.99996948242188 * e, 119.18402099609375 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 6 * e),
        n
    }
    function Di(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 247 * e,
        n.height = 247 * e,
        r.translate(0, 10 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(150 * e, 62 * e),
        r.bezierCurveTo(151.5 * e, 71.5 * e, 149 * e, 70 * e, 153 * e, 81 * e),
        r.bezierCurveTo(158 * e, 73.5 * e, 158 * e, 73.5 * e, 163 * e, 66 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(164 * e, 171 * e),
        r.bezierCurveTo(149 * e, 159 * e, 156.5 * e, 165 * e, 149 * e, 159 * e),
        r.bezierCurveTo(149 * e, 167 * e, 149 * e, 170 * e, 152 * e, 178 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(132 * e, 95 * e),
        r.bezierCurveTo(154 * e, 102 * e, 154 * e, 126 * e, 137 * e, 139 * e),
        r.bezierCurveTo(113 * e, 152 * e, 89 * e, 136 * e, 80 * e, 121 * e),
        r.bezierCurveTo(57 * e, 89 * e, 69 * e, 63 * e, 79 * e, 52 * e),
        r.bezierCurveTo(110 * e, 20 * e, 139 * e, 21 * e, 150 * e, 25 * e),
        r.bezierCurveTo(197 * e, 36 * e, 221 * e, 67 * e, 226 * e, 90 * e),
        r.bezierCurveTo(234 * e, 134 * e, 214 * e, 177 * e, 195 * e, 197 * e),
        r.bezierCurveTo(144 * e, 242 * e, 79 * e, 216 * e, 58 * e, 206 * e),
        r.bezierCurveTo(13 * e, 174 * e, 20 * e, 134 * e, 23 * e, 107 * e),
        r.bezierCurveTo(26 * e, 78 * e, 33 * e, 60 * e, 38 * e, 43 * e),
        r.bezierCurveTo(42 * e, 32 * e, 47 * e, 32 * e, 50 * e, 36 * e),
        r.bezierCurveTo(54 * e, 37 * e, 50 * e, 52 * e, 44 * e, 87 * e),
        r.bezierCurveTo(40 * e, 115 * e, 46 * e, 142 * e, 57 * e, 158 * e),
        r.bezierCurveTo(76 * e, 189 * e, 129 * e, 182 * e, 152 * e, 173 * e),
        r.bezierCurveTo(186 * e, 156 * e, 191 * e, 106 * e, 176 * e, 85 * e),
        r.bezierCurveTo(159 * e, 61 * e, 132 * e, 62 * e, 122 * e, 66 * e),
        r.bezierCurveTo(108 * e, 74 * e, 108 * e, 89 * e, 116 * e, 90 * e),
        r.bezierCurveTo(123 * e, 92 * e, 130 * e, 93 * e, 131 * e, 94 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.translate(0, -10 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(150 * e, 62 * e),
        r.bezierCurveTo(151.5 * e, 71.5 * e, 149 * e, 70 * e, 153 * e, 81 * e),
        r.bezierCurveTo(158 * e, 73.5 * e, 158 * e, 73.5 * e, 163 * e, 66 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(164 * e, 171 * e),
        r.bezierCurveTo(149 * e, 159 * e, 156.5 * e, 165 * e, 149 * e, 159 * e),
        r.bezierCurveTo(149 * e, 167 * e, 149 * e, 170 * e, 152 * e, 178 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(132 * e, 95 * e),
        r.bezierCurveTo(154 * e, 102 * e, 154 * e, 126 * e, 137 * e, 139 * e),
        r.bezierCurveTo(113 * e, 152 * e, 89 * e, 136 * e, 80 * e, 121 * e),
        r.bezierCurveTo(57 * e, 89 * e, 69 * e, 63 * e, 79 * e, 52 * e),
        r.bezierCurveTo(110 * e, 20 * e, 139 * e, 21 * e, 150 * e, 25 * e),
        r.bezierCurveTo(197 * e, 36 * e, 221 * e, 67 * e, 226 * e, 90 * e),
        r.bezierCurveTo(234 * e, 134 * e, 214 * e, 177 * e, 195 * e, 197 * e),
        r.bezierCurveTo(144 * e, 242 * e, 79 * e, 216 * e, 58 * e, 206 * e),
        r.bezierCurveTo(13 * e, 174 * e, 20 * e, 134 * e, 23 * e, 107 * e),
        r.bezierCurveTo(26 * e, 78 * e, 33 * e, 60 * e, 38 * e, 43 * e),
        r.bezierCurveTo(42 * e, 32 * e, 47 * e, 32 * e, 50 * e, 36 * e),
        r.bezierCurveTo(54 * e, 37 * e, 50 * e, 52 * e, 44 * e, 87 * e),
        r.bezierCurveTo(40 * e, 115 * e, 46 * e, 142 * e, 57 * e, 158 * e),
        r.bezierCurveTo(76 * e, 189 * e, 129 * e, 182 * e, 152 * e, 173 * e),
        r.bezierCurveTo(186 * e, 156 * e, 191 * e, 106 * e, 176 * e, 85 * e),
        r.bezierCurveTo(159 * e, 61 * e, 132 * e, 62 * e, 122 * e, 66 * e),
        r.bezierCurveTo(108 * e, 74 * e, 108 * e, 89 * e, 116 * e, 90 * e),
        r.bezierCurveTo(123 * e, 92 * e, 130 * e, 93 * e, 131 * e, 94 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(137 * e, 137 * e),
        r.bezierCurveTo(145 * e, 125 * e, 138 * e, 108 * e, 123 * e, 104 * e),
        r.bezierCurveTo(81 * e, 101 * e, 88 * e, 77 * e, 98 * e, 65 * e),
        r.bezierCurveTo(117 * e, 38 * e, 138 * e, 39 * e, 165 * e, 52 * e),
        r.bezierCurveTo(197 * e, 72 * e, 207 * e, 111 * e, 197 * e, 140 * e),
        r.bezierCurveTo(182 * e, 180 * e, 161 * e, 197 * e, 112 * e, 194 * e),
        r.bezierCurveTo(58 * e, 194 * e, 37 * e, 170 * e, 34 * e, 142 * e),
        r.bezierCurveTo(29 * e, 102 * e, 40 * e, 63 * e, 51 * e, 45 * e),
        r.bezierCurveTo(43 * e, 78 * e, 41 * e, 103 * e, 43 * e, 122 * e),
        r.bezierCurveTo(51 * e, 158 * e, 63 * e, 174 * e, 95 * e, 179 * e),
        r.bezierCurveTo(129 * e, 186 * e, 169 * e, 172 * e, 177 * e, 144 * e),
        r.bezierCurveTo(197 * e, 105 * e, 172 * e, 76 * e, 160 * e, 71 * e),
        r.bezierCurveTo(125 * e, 52 * e, 111 * e, 73 * e, 111 * e, 81 * e),
        r.bezierCurveTo(106 * e, 93 * e, 140 * e, 92 * e, 147 * e, 107 * e),
        r.bezierCurveTo(153 * e, 128 * e, 140 * e, 135 * e, 137 * e, 139 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(132 * e, 95 * e),
        r.bezierCurveTo(154 * e, 102 * e, 154 * e, 126 * e, 137 * e, 139 * e),
        r.bezierCurveTo(113 * e, 152 * e, 89 * e, 136 * e, 80 * e, 121 * e),
        r.bezierCurveTo(57 * e, 89 * e, 69 * e, 63 * e, 79 * e, 52 * e),
        r.bezierCurveTo(110 * e, 20 * e, 139 * e, 21 * e, 150 * e, 25 * e),
        r.bezierCurveTo(197 * e, 36 * e, 221 * e, 67 * e, 226 * e, 90 * e),
        r.bezierCurveTo(234 * e, 134 * e, 214 * e, 177 * e, 195 * e, 197 * e),
        r.bezierCurveTo(144 * e, 242 * e, 79 * e, 216 * e, 58 * e, 206 * e),
        r.bezierCurveTo(13 * e, 174 * e, 20 * e, 134 * e, 23 * e, 107 * e),
        r.bezierCurveTo(26 * e, 78 * e, 33 * e, 60 * e, 38 * e, 43 * e),
        r.bezierCurveTo(42 * e, 32 * e, 47 * e, 32 * e, 50 * e, 36 * e),
        r.bezierCurveTo(54 * e, 37 * e, 50 * e, 52 * e, 44 * e, 87 * e),
        r.bezierCurveTo(40 * e, 115 * e, 46 * e, 142 * e, 57 * e, 158 * e),
        r.bezierCurveTo(76 * e, 189 * e, 129 * e, 182 * e, 152 * e, 173 * e),
        r.bezierCurveTo(186 * e, 156 * e, 191 * e, 106 * e, 176 * e, 85 * e),
        r.bezierCurveTo(159 * e, 61 * e, 132 * e, 62 * e, 122 * e, 66 * e),
        r.bezierCurveTo(108 * e, 74 * e, 108 * e, 89 * e, 116 * e, 90 * e),
        r.bezierCurveTo(123 * e, 92 * e, 130 * e, 93 * e, 131 * e, 94 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(82 * e, 63 * e),
        r.bezierCurveTo(91 * e, 64 * e, 96 * e, 62 * e, 98 * e, 53 * e),
        r.bezierCurveTo(91 * e, 45 * e, 85 * e, 42 * e, 78 * e, 41 * e),
        r.bezierCurveTo(81 * e, 51 * e, 82 * e, 57 * e, 82 * e, 63 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(148 * e, 40 * e),
        r.bezierCurveTo(140 * e, 52 * e, 131 * e, 51 * e, 123 * e, 43 * e),
        r.bezierCurveTo(123 * e, 25 * e, 129 * e, 17 * e, 134 * e, 12 * e),
        r.bezierCurveTo(138 * e, 35 * e, 142 * e, 31 * e, 148 * e, 40 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(189 * e, 43 * e),
        r.bezierCurveTo(191 * e, 54 * e, 196 * e, 58 * e, 205 * e, 59 * e),
        r.bezierCurveTo(211 * e, 42 * e, 214 * e, 37 * e, 216 * e, 31 * e),
        r.bezierCurveTo(202 * e, 34 * e, 195 * e, 39 * e, 190 * e, 43 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(216 * e, 98 * e),
        r.bezierCurveTo(219 * e, 105 * e, 225 * e, 107 * e, 230 * e, 109 * e),
        r.bezierCurveTo(227 * e, 113 * e, 221 * e, 115 * e, 215 * e, 115 * e),
        r.bezierCurveTo(208 * e, 109 * e, 211 * e, 101 * e, 216 * e, 98 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(180 * e, 85 * e),
        r.bezierCurveTo(193 * e, 86 * e, 196 * e, 98 * e, 191 * e, 108 * e),
        r.bezierCurveTo(179 * e, 112 * e, 167 * e, 113 * e, 155 * e, 111 * e),
        r.bezierCurveTo(169 * e, 100 * e, 176 * e, 96 * e, 180 * e, 85 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(96 * e, 114 * e),
        r.bezierCurveTo(102 * e, 109 * e, 112 * e, 110 * e, 114 * e, 118 * e),
        r.bezierCurveTo(111 * e, 134 * e, 102 * e, 143 * e, 95 * e, 147 * e),
        r.bezierCurveTo(98 * e, 123 * e, 97 * e, 119 * e, 96 * e, 115 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(79 * e, 92 * e),
        r.bezierCurveTo(86 * e, 95 * e, 89 * e, 102 * e, 83 * e, 111 * e),
        r.bezierCurveTo(70 * e, 110 * e, 61 * e, 107 * e, 54 * e, 100 * e),
        r.bezierCurveTo(70 * e, 97 * e, 70 * e, 95 * e, 78 * e, 92 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(39 * e, 130 * e),
        r.bezierCurveTo(37 * e, 141 * e, 41 * e, 143 * e, 48 * e, 144 * e),
        r.bezierCurveTo(54 * e, 134 * e, 55 * e, 131 * e, 56 * e, 123 * e),
        r.bezierCurveTo(47 * e, 129 * e, 43 * e, 129 * e, 39 * e, 129 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(113 * e, 189 * e),
        r.bezierCurveTo(119 * e, 201 * e, 127 * e, 198 * e, 134 * e, 192 * e),
        r.bezierCurveTo(128 * e, 175 * e, 128 * e, 173 * e, 128 * e, 165 * e),
        r.bezierCurveTo(117 * e, 176 * e, 116 * e, 182 * e, 113 * e, 187 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(74 * e, 154 * e),
        r.bezierCurveTo(76 * e, 163 * e, 76 * e, 170 * e, 75 * e, 177 * e),
        r.bezierCurveTo(68 * e, 179 * e, 66 * e, 176 * e, 63 * e, 171 * e),
        r.bezierCurveTo(69 * e, 164 * e, 72 * e, 159 * e, 74 * e, 154 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(206 * e, 152 * e),
        r.bezierCurveTo(198 * e, 158 * e, 198 * e, 166 * e, 201 * e, 171 * e),
        r.bezierCurveTo(209 * e, 170 * e, 221 * e, 170 * e, 226 * e, 172 * e),
        r.bezierCurveTo(219 * e, 159 * e, 210 * e, 155 * e, 207 * e, 153 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(181 * e, 184 * e),
        r.bezierCurveTo(170 * e, 184 * e, 167 * e, 187 * e, 163 * e, 195 * e),
        r.bezierCurveTo(171 * e, 207 * e, 183 * e, 214 * e, 191 * e, 217 * e),
        r.bezierCurveTo(183 * e, 204 * e, 184 * e, 196 * e, 181 * e, 184 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(66 * e, 199 * e),
        r.bezierCurveTo(73 * e, 197 * e, 78 * e, 199 * e, 79 * e, 206 * e),
        r.bezierCurveTo(71 * e, 216 * e, 67 * e, 221 * e, 57 * e, 223 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(182 * e, 143 * e),
        r.bezierCurveTo(183 * e, 146 * e, 183 * e, 149 * e, 179 * e, 152 * e),
        r.bezierCurveTo(174 * e, 146 * e, 174 * e, 146 * e, 169 * e, 140 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(32 * e, 159 * e),
        r.bezierCurveTo(45 * e, 160 * e, 48 * e, 164 * e, 45 * e, 175 * e),
        r.bezierCurveTo(28 * e, 183 * e, 25 * e, 184 * e, 19 * e, 184 * e),
        r.bezierCurveTo(30 * e, 170 * e, 29 * e, 164 * e, 31 * e, 160 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(110 * e, 214 * e),
        r.bezierCurveTo(106 * e, 212 * e, 104 * e, 213 * e, 102 * e, 218 * e),
        r.bezierCurveTo(104 * e, 220 * e, 107 * e, 222 * e, 110 * e, 224 * e),
        r.bezierCurveTo(110.5 * e, 219 * e, 110.5 * e, 219 * e, 111 * e, 214 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(40 * e, 52 * e),
        r.bezierCurveTo(41 * e, 57 * e, 40 * e, 61 * e, 34 * e, 60 * e),
        r.bezierCurveTo(31.5 * e, 55 * e, 31.5 * e, 55 * e, 29 * e, 50 * e),
        r.bezierCurveTo(34 * e, 50.5 * e, 34 * e, 50.5 * e, 39 * e, 51 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(31 * e, 81 * e),
        r.bezierCurveTo(37 * e, 84 * e, 38 * e, 90 * e, 34 * e, 99 * e),
        r.bezierCurveTo(23 * e, 97 * e, 19 * e, 96 * e, 16 * e, 93 * e),
        r.bezierCurveTo(24 * e, 88 * e, 28 * e, 85 * e, 30 * e, 81 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 5 * e),
        n
    }
    function fi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 465 * e,
        n.height = 310 * e,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(126 * e, 192 * e),
        r.bezierCurveTo(198 * e, 202 * e, 245 * e, 203 * e, 335 * e, 194 * e),
        r.bezierCurveTo(336 * e, 232 * e, 326 * e, 235 * e, 232 * e, 237 * e),
        r.bezierCurveTo(161 * e, 235 * e, 122 * e, 235 * e, 126 * e, 193 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(146 * e, 239 * e),
        r.bezierCurveTo(174 * e, 74 * e, 287 * e, 88 * e, 320 * e, 240 * e),
        r.bezierCurveTo(329 * e, 231 * e, 340 * e, 219 * e, 332 * e, 115 * e),
        r.bezierCurveTo(330 * e, 40 * e, 144 * e, 30 * e, 129 * e, 116 * e),
        r.bezierCurveTo(124 * e, 217 * e, 124 * e, 228 * e, 143 * e, 237 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(126 * e, 193 * e),
        r.bezierCurveTo(173 * e, 94 * e, 209 * e, 100 * e, 228 * e, 57 * e),
        r.bezierCurveTo(190 * e, 112 * e, 165 * e, 115 * e, 127 * e, 184 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(230 * e, 57 * e),
        r.bezierCurveTo(266 * e, 117 * e, 310 * e, 130 * e, 332 * e, 183 * e),
        r.bezierCurveTo(290 * e, 112 * e, 262 * e, 109 * e, 230 * e, 56 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(154 * e, 212 * e),
        r.bezierCurveTo(208 * e, 224 * e, 252 * e, 219 * e, 305 * e, 212 * e),
        r.bezierCurveTo(267 * e, 219 * e, 204 * e, 222 * e, 155 * e, 212 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(239 * e, 59 * e),
        r.bezierCurveTo(302 * e, 72 * e, 325 * e, 84 * e, 326 * e, 115 * e),
        r.bezierCurveTo(289 * e, 80 * e, 270 * e, 88 * e, 253 * e, 78 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(216 * e, 61 * e),
        r.bezierCurveTo(209 * e, 70 * e, 209 * e, 70 * e, 202 * e, 79 * e),
        r.bezierCurveTo(173 * e, 87 * e, 162 * e, 91 * e, 137 * e, 107 * e),
        r.bezierCurveTo(153 * e, 78 * e, 174 * e, 67 * e, 212 * e, 62 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(175 * e, 125 * e),
        r.bezierCurveTo(218 * e, 94 * e, 238 * e, 90 * e, 281 * e, 125 * e),
        r.bezierCurveTo(245 * e, 89 * e, 240 * e, 80 * e, 228 * e, 67 * e),
        r.bezierCurveTo(207 * e, 100 * e, 192 * e, 104 * e, 177 * e, 123 * e),
        r.closePath(),
        Ce(r, i[2]),
        n
    }
    function vi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 465 * e,
        n.height = 405 * e,
        r.globalAlpha = 1,
        r.translate(6 * e, 0 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(39.000030517578125 * e, 162.03977966308594 * e),
        r.bezierCurveTo(125.00003051757812 * e, 84.03977966308594 * e, 108.50003051757812 * e, 115.03977966308594 * e, 178.00003051757812 * e, 68.03977966308594 * e),
        r.bezierCurveTo(299.0000305175781 * e, 146.53977966308594 * e, 299.0000305175781 * e, 146.53977966308594 * e, 420.0000305175781 * e, 225.03977966308594 * e),
        r.bezierCurveTo(400.0000305175781 * e, 288.53977966308594 * e, 400.0000305175781 * e, 288.53977966308594 * e, 380.0000305175781 * e, 352.03977966308594 * e),
        r.bezierCurveTo(216.50003051757812 * e, 345.53977966308594 * e, 216.50003051757812 * e, 345.53977966308594 * e, 53.000030517578125 * e, 339.03977966308594 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(23.000030517578125 * e, 306.94886779785156 * e),
        r.bezierCurveTo(5.000030517578125 * e, 275.94886779785156 * e, 6.000030517578125 * e, 201.94886779785156 * e, 14.000030517578125 * e, 150.94886779785156 * e),
        r.bezierCurveTo(40.000030517578125 * e, 34.94886779785156 * e, 157.00003051757812 * e, 14.948867797851562 * e, 199.00003051757812 * e, 11.948867797851562 * e),
        r.bezierCurveTo(331.0000305175781 * e, .9488677978515625 * e, 409.0000305175781 * e, 61.94886779785156 * e, 428.0000305175781 * e, 133.94886779785156 * e),
        r.bezierCurveTo(445.0000305175781 * e, 207.94886779785156 * e, 439.0000305175781 * e, 274.94886779785156 * e, 426.0000305175781 * e, 342.94886779785156 * e),
        r.bezierCurveTo(355.0000305175781 * e, 207.94886779785156 * e, 345.0000305175781 * e, 208.94886779785156 * e, 333.0000305175781 * e, 202.94886779785156 * e),
        r.bezierCurveTo(262.0000305175781 * e, 143.94886779785156 * e, 236.00003051757812 * e, 148.94886779785156 * e, 189.00003051757812 * e, 162.94886779785156 * e),
        r.bezierCurveTo(82.00003051757812 * e, 190.94886779785156 * e, 78.00003051757812 * e, 235.94886779785156 * e, 62.000030517578125 * e, 279.94886779785156 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(17.000030517578125 * e, 149.94886779785156 * e),
        r.bezierCurveTo(76.00003051757812 * e, 67.94886779785156 * e, 177.00003051757812 * e, 40.94886779785156 * e, 232.00003051757812 * e, 45.94886779785156 * e),
        r.bezierCurveTo(316.0000305175781 * e, 46.94886779785156 * e, 359.0000305175781 * e, 74.94886779785156 * e, 428.0000305175781 * e, 145.94886779785156 * e),
        r.bezierCurveTo(414.0000305175781 * e, 73.94886779785156 * e, 386.0000305175781 * e, 68.94886779785156 * e, 359.0000305175781 * e, 43.94886779785156 * e),
        r.bezierCurveTo(295.0000305175781 * e, 5.9488677978515625 * e, 239.00003051757812 * e, 10.948867797851562 * e, 207.00003051757812 * e, 10.948867797851562 * e),
        r.bezierCurveTo(121.00003051757812 * e, 20.948867797851562 * e, 104.00003051757812 * e, 34.94886779785156 * e, 45.000030517578125 * e, 84.94886779785156 * e),
        r.bezierCurveTo(14.000030517578125 * e, 128.94886779785156 * e, 18.000030517578125 * e, 142.94886779785156 * e, 16.000030517578125 * e, 151.94886779785156 * e),
        r.closePath(),
        Ce(r, i[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(23.000030517578125 * e, 306.94886779785156 * e),
        r.bezierCurveTo(5.000030517578125 * e, 275.94886779785156 * e, 6.000030517578125 * e, 201.94886779785156 * e, 14.000030517578125 * e, 150.94886779785156 * e),
        r.bezierCurveTo(40.000030517578125 * e, 34.94886779785156 * e, 157.00003051757812 * e, 14.948867797851562 * e, 199.00003051757812 * e, 11.948867797851562 * e),
        r.bezierCurveTo(331.0000305175781 * e, .9488677978515625 * e, 409.0000305175781 * e, 61.94886779785156 * e, 428.0000305175781 * e, 133.94886779785156 * e),
        r.bezierCurveTo(445.0000305175781 * e, 207.94886779785156 * e, 439.0000305175781 * e, 274.94886779785156 * e, 426.0000305175781 * e, 342.94886779785156 * e),
        r.bezierCurveTo(355.0000305175781 * e, 207.94886779785156 * e, 345.0000305175781 * e, 208.94886779785156 * e, 333.0000305175781 * e, 202.94886779785156 * e),
        r.bezierCurveTo(262.0000305175781 * e, 143.94886779785156 * e, 236.00003051757812 * e, 148.94886779785156 * e, 189.00003051757812 * e, 162.94886779785156 * e),
        r.bezierCurveTo(82.00003051757812 * e, 190.94886779785156 * e, 78.00003051757812 * e, 235.94886779785156 * e, 62.000030517578125 * e, 279.94886779785156 * e),
        r.closePath(),
        Ce(r, void 0, i[1], 16 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(60.000030517578125 * e, 288.03977966308594 * e),
        r.bezierCurveTo(183.00003051757812 * e, 320.03977966308594 * e, 342.0000305175781 * e, 306.03977966308594 * e, 399.0000305175781 * e, 286.03977966308594 * e),
        r.bezierCurveTo(420.0000305175781 * e, 345.03977966308594 * e, 410.0000305175781 * e, 335.03977966308594 * e, 415.0000305175781 * e, 362.03977966308594 * e),
        r.bezierCurveTo(351.0000305175781 * e, 384.03977966308594 * e, 299.0000305175781 * e, 389.03977966308594 * e, 215.00003051757812 * e, 391.03977966308594 * e),
        r.bezierCurveTo(128.00003051757812 * e, 388.03977966308594 * e, 69.00003051757812 * e, 373.03977966308594 * e, 39.000030517578125 * e, 359.03977966308594 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 13 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(47.000030517578125 * e, 327.03977966308594 * e),
        r.bezierCurveTo(203.00003051757812 * e, 377.03977966308594 * e, 331.0000305175781 * e, 349.03977966308594 * e, 410.0000305175781 * e, 330.03977966308594 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(9.000030517578125 * e, 339.1306915283203 * e),
        r.bezierCurveTo(2.000030517578125 * e, 280.1306915283203 * e, 30.000030517578125 * e, 219.1306915283203 * e, 85.00003051757812 * e, 167.1306915283203 * e),
        r.bezierCurveTo(174.00003051757812 * e, 82.13069152832031 * e, 241.00003051757812 * e, 101.13069152832031 * e, 284.0000305175781 * e, 115.13069152832031 * e),
        r.bezierCurveTo(333.0000305175781 * e, 134.1306915283203 * e, 376.0000305175781 * e, 177.1306915283203 * e, 410.0000305175781 * e, 247.1306915283203 * e),
        r.bezierCurveTo(439.0000305175781 * e, 300.1306915283203 * e, 442.0000305175781 * e, 346.1306915283203 * e, 430.0000305175781 * e, 363.1306915283203 * e),
        r.bezierCurveTo(418.0000305175781 * e, 366.1306915283203 * e, 395.0000305175781 * e, 295.1306915283203 * e, 355.0000305175781 * e, 223.1306915283203 * e),
        r.bezierCurveTo(299.0000305175781 * e, 156.1306915283203 * e, 262.0000305175781 * e, 155.1306915283203 * e, 215.00003051757812 * e, 159.1306915283203 * e),
        r.bezierCurveTo(133.00003051757812 * e, 171.1306915283203 * e, 120.00003051757812 * e, 193.1306915283203 * e, 96.00003051757812 * e, 221.1306915283203 * e),
        r.bezierCurveTo(49.000030517578125 * e, 262.1306915283203 * e, 47.000030517578125 * e, 306.1306915283203 * e, 38.000030517578125 * e, 336.1306915283203 * e),
        r.bezierCurveTo(30.000030517578125 * e, 349.1306915283203 * e, 30.000030517578125 * e, 349.1306915283203 * e, 22.000030517578125 * e, 362.1306915283203 * e),
        r.closePath(),
        Ce(r, i[2], i[1], 20 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(228.00003051757812 * e, 128.03977966308594 * e),
        r.bezierCurveTo(315.0000305175781 * e, 131.03977966308594 * e, 349.0000305175781 * e, 178.03977966308594 * e, 386.0000305175781 * e, 234.03977966308594 * e),
        r.bezierCurveTo(444.0000305175781 * e, 329.03977966308594 * e, 446.0000305175781 * e, 354.03977966308594 * e, 427.0000305175781 * e, 373.03977966308594 * e),
        r.bezierCurveTo(389.0000305175781 * e, 389.03977966308594 * e, 399.0000305175781 * e, 329.03977966308594 * e, 361.0000305175781 * e, 277.03977966308594 * e),
        r.bezierCurveTo(306.0000305175781 * e, 191.03977966308594 * e, 266.0000305175781 * e, 183.03977966308594 * e, 220.00003051757812 * e, 181.03977966308594 * e),
        r.bezierCurveTo(138.00003051757812 * e, 184.03977966308594 * e, 123.00003051757812 * e, 212.03977966308594 * e, 89.00003051757812 * e, 271.03977966308594 * e),
        r.bezierCurveTo(52.000030517578125 * e, 349.03977966308594 * e, 68.00003051757812 * e, 364.03977966308594 * e, 33.000030517578125 * e, 369.03977966308594 * e),
        r.bezierCurveTo(6.000030517578125 * e, 366.03977966308594 * e, 5.000030517578125 * e, 341.03977966308594 * e, 26.000030517578125 * e, 288.03977966308594 * e),
        r.bezierCurveTo(60.000030517578125 * e, 207.03977966308594 * e, 100.00003051757812 * e, 180.03977966308594 * e, 113.00003051757812 * e, 170.03977966308594 * e),
        r.bezierCurveTo(159.00003051757812 * e, 132.03977966308594 * e, 196.00003051757812 * e, 133.03977966308594 * e, 226.00003051757812 * e, 129.03977966308594 * e),
        r.closePath(),
        Ce(r, i[0], i[1], 20 * e),
        n
    }
    function Mi(e, t, i, n) {
        var r = document.createElement("canvas")
          , o = r.getContext("2d");
        return r.width = 198 * e,
        r.height = 147 * e,
        o.globalAlpha = t ? .5 : 1,
        o.translate(0, 6 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(44 * e, 76 * e),
        o.bezierCurveTo(50 * e, 82 * e, 50 * e, 82 * e, 56 * e, 88 * e),
        o.bezierCurveTo(59 * e, 82 * e, 59 * e, 82 * e, 62 * e, 76 * e),
        o.bezierCurveTo(59 * e, 71 * e, 59 * e, 71 * e, 56 * e, 66 * e),
        o.bezierCurveTo(59 * e, 69 * e, 59 * e, 69 * e, 62 * e, 72 * e),
        o.bezierCurveTo(80 * e, 48 * e, 102 * e, 50 * e, 120 * e, 62 * e),
        o.bezierCurveTo(127 * e, 58 * e, 127 * e, 58 * e, 134 * e, 54 * e),
        o.bezierCurveTo(129 * e, 60 * e, 129 * e, 60 * e, 124 * e, 66 * e),
        o.bezierCurveTo(129 * e, 73 * e, 129 * e, 73 * e, 134 * e, 80 * e),
        o.bezierCurveTo(140 * e, 74 * e, 140 * e, 74 * e, 146 * e, 68 * e),
        o.bezierCurveTo(142 * e, 76 * e, 142 * e, 76 * e, 138 * e, 84 * e),
        o.bezierCurveTo(144 * e, 90 * e, 142 * e, 90 * e, 144 * e, 90 * e),
        o.bezierCurveTo(136 * e, 97 * e, 136 * e, 97 * e, 128 * e, 104 * e),
        o.bezierCurveTo(154 * e, 110 * e, 164 * e, 90 * e, 160 * e, 80 * e),
        o.bezierCurveTo(138 * e, 22 * e, 148 * e, 51 * e, 136 * e, 22 * e),
        o.bezierCurveTo(97 * e, 24 * e, 97 * e, 24 * e, 58 * e, 26 * e),
        o.bezierCurveTo(47 * e, 54 * e, 36 * e, 80 * e, 36 * e, 82 * e),
        o.bezierCurveTo(40 * e, 108 * e, 54 * e, 104 * e, 62 * e, 104 * e),
        o.bezierCurveTo(46 * e, 92 * e, 54 * e, 97 * e, 46 * e, 90 * e),
        o.closePath(),
        Ce(o, i[0]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(36 * e, 80 * e),
        o.bezierCurveTo(30 * e, 84 * e, 28 * e, 92 * e, 34 * e, 100 * e),
        o.bezierCurveTo(41.5 * e, 102 * e, 41.5 * e, 102 * e, 49 * e, 104 * e),
        o.bezierCurveTo(43 * e, 105.5 * e, 43 * e, 105.5 * e, 37 * e, 107 * e),
        o.bezierCurveTo(46 * e, 111 * e, 60 * e, 114 * e, 76 * e, 114 * e),
        o.bezierCurveTo(78 * e, 110.5 * e, 78 * e, 110.5 * e, 80 * e, 107 * e),
        o.bezierCurveTo(81 * e, 110.5 * e, 81 * e, 110.5 * e, 82 * e, 114 * e),
        o.bezierCurveTo(94.5 * e, 113.5 * e, 94.5 * e, 113.5 * e, 107 * e, 113 * e),
        o.bezierCurveTo(108.5 * e, 110 * e, 108.5 * e, 110 * e, 110 * e, 107 * e),
        o.bezierCurveTo(111.5 * e, 110.5 * e, 111.5 * e, 110.5 * e, 113 * e, 114 * e),
        o.bezierCurveTo(131 * e, 112.5 * e, 131 * e, 112.5 * e, 149 * e, 111 * e),
        o.bezierCurveTo(148.5 * e, 107.5 * e, 148.5 * e, 107.5 * e, 148 * e, 104 * e),
        o.bezierCurveTo(150.5 * e, 107 * e, 150.5 * e, 107 * e, 153 * e, 110 * e),
        o.bezierCurveTo(155.5 * e, 108.5 * e, 155.5 * e, 108.5 * e, 158 * e, 107 * e),
        o.bezierCurveTo(156.5 * e, 104 * e, 156.5 * e, 104 * e, 155 * e, 101 * e),
        o.bezierCurveTo(158.5 * e, 102.5 * e, 158.5 * e, 102.5 * e, 162 * e, 104 * e),
        o.bezierCurveTo(168 * e, 100 * e, 170 * e, 92 * e, 169 * e, 85 * e),
        o.bezierCurveTo(166 * e, 86 * e, 166 * e, 86 * e, 163 * e, 87 * e),
        o.bezierCurveTo(165.5 * e, 83 * e, 165.5 * e, 83 * e, 168 * e, 79 * e),
        o.bezierCurveTo(165.5 * e, 76.5 * e, 165.5 * e, 76.5 * e, 163 * e, 74 * e),
        o.bezierCurveTo(155 * e, 82.5 * e, 155 * e, 82.5 * e, 147 * e, 91 * e),
        o.bezierCurveTo(139 * e, 95.5 * e, 139 * e, 95.5 * e, 131 * e, 100 * e),
        o.bezierCurveTo(97.5 * e, 100.5 * e, 97.5 * e, 100.5 * e, 64 * e, 101 * e),
        o.bezierCurveTo(49 * e, 102 * e, 43 * e, 90 * e, 36 * e, 80 * e),
        o.closePath(),
        Ce(o, i[0]),
        o.globalAlpha = 1,
        o.translate(0, -6 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(36 * e, 80 * e),
        o.bezierCurveTo(30 * e, 84 * e, 28 * e, 92 * e, 34 * e, 100 * e),
        o.bezierCurveTo(41.5 * e, 102 * e, 41.5 * e, 102 * e, 49 * e, 104 * e),
        o.bezierCurveTo(43 * e, 105.5 * e, 43 * e, 105.5 * e, 37 * e, 107 * e),
        o.bezierCurveTo(46 * e, 111 * e, 60 * e, 114 * e, 76 * e, 114 * e),
        o.bezierCurveTo(78 * e, 110.5 * e, 78 * e, 110.5 * e, 80 * e, 107 * e),
        o.bezierCurveTo(81 * e, 110.5 * e, 81 * e, 110.5 * e, 82 * e, 114 * e),
        o.bezierCurveTo(94.5 * e, 113.5 * e, 94.5 * e, 113.5 * e, 107 * e, 113 * e),
        o.bezierCurveTo(108.5 * e, 110 * e, 108.5 * e, 110 * e, 110 * e, 107 * e),
        o.bezierCurveTo(111.5 * e, 110.5 * e, 111.5 * e, 110.5 * e, 113 * e, 114 * e),
        o.bezierCurveTo(131 * e, 112.5 * e, 131 * e, 112.5 * e, 149 * e, 111 * e),
        o.bezierCurveTo(148.5 * e, 107.5 * e, 148.5 * e, 107.5 * e, 148 * e, 104 * e),
        o.bezierCurveTo(150.5 * e, 107 * e, 150.5 * e, 107 * e, 153 * e, 110 * e),
        o.bezierCurveTo(155.5 * e, 108.5 * e, 155.5 * e, 108.5 * e, 158 * e, 107 * e),
        o.bezierCurveTo(156.5 * e, 104 * e, 156.5 * e, 104 * e, 155 * e, 101 * e),
        o.bezierCurveTo(158.5 * e, 102.5 * e, 158.5 * e, 102.5 * e, 162 * e, 104 * e),
        o.bezierCurveTo(168 * e, 100 * e, 170 * e, 92 * e, 169 * e, 85 * e),
        o.bezierCurveTo(166 * e, 86 * e, 166 * e, 86 * e, 163 * e, 87 * e),
        o.bezierCurveTo(165.5 * e, 83 * e, 165.5 * e, 83 * e, 168 * e, 79 * e),
        o.bezierCurveTo(165.5 * e, 76.5 * e, 165.5 * e, 76.5 * e, 163 * e, 74 * e),
        o.bezierCurveTo(155 * e, 82.5 * e, 155 * e, 82.5 * e, 147 * e, 91 * e),
        o.bezierCurveTo(139 * e, 95.5 * e, 139 * e, 95.5 * e, 131 * e, 100 * e),
        o.bezierCurveTo(97.5 * e, 100.5 * e, 97.5 * e, 100.5 * e, 64 * e, 101 * e),
        o.bezierCurveTo(49 * e, 102 * e, 43 * e, 90 * e, 36 * e, 80 * e),
        o.closePath(),
        Ce(o, i[1], i[2], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(49 * e, 98 * e),
        o.bezierCurveTo(96.5 * e, 98 * e, 96.5 * e, 98 * e, 144 * e, 98 * e),
        o.bezierCurveTo(136.5 * e, 102 * e, 136.5 * e, 102 * e, 129 * e, 106 * e),
        o.bezierCurveTo(103 * e, 105.5 * e, 103 * e, 105.5 * e, 77 * e, 105 * e),
        o.bezierCurveTo(65 * e, 105 * e, 65 * e, 105 * e, 53 * e, 105 * e),
        o.closePath(),
        Ce(o, i[1]),
        o.globalAlpha = .5,
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(54 * e, 98 * e),
        o.bezierCurveTo(97 * e, 98 * e, 97 * e, 98 * e, 140 * e, 98 * e),
        o.bezierCurveTo(134 * e, 101 * e, 134 * e, 101 * e, 128 * e, 104 * e),
        o.bezierCurveTo(92 * e, 104 * e, 92 * e, 104 * e, 56 * e, 104 * e),
        o.closePath(),
        Ce(o, i[0]),
        o.globalAlpha = 1,
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(118 * e, 47 * e),
        o.bezierCurveTo(124.5 * e, 43.5 * e, 124.5 * e, 43.5 * e, 131 * e, 40 * e),
        o.bezierCurveTo(128 * e, 46 * e, 128 * e, 46 * e, 125 * e, 52 * e),
        o.bezierCurveTo(131 * e, 57 * e, 135 * e, 64 * e, 139 * e, 73 * e),
        o.bezierCurveTo(142.5 * e, 69.5 * e, 142.5 * e, 69.5 * e, 146 * e, 66 * e),
        o.bezierCurveTo(143.5 * e, 72.5 * e, 143.5 * e, 72.5 * e, 141 * e, 79 * e),
        o.bezierCurveTo(142 * e, 91 * e, 141 * e, 94 * e, 132 * e, 98 * e),
        o.bezierCurveTo(117 * e, 102 * e, 126 * e, 108 * e, 142 * e, 102 * e),
        o.bezierCurveTo(159 * e, 98 * e, 164 * e, 80 * e, 162 * e, 47 * e),
        o.bezierCurveTo(160 * e, 19 * e, 150 * e, 6 * e, 117 * e, 4 * e),
        o.bezierCurveTo(44 * e, 0 * e, 35 * e, 20 * e, 33 * e, 37 * e),
        o.bezierCurveTo(29 * e, 69 * e, 33 * e, 88 * e, 44 * e, 96 * e),
        o.bezierCurveTo(64 * e, 107 * e, 70 * e, 102 * e, 54 * e, 93 * e),
        o.bezierCurveTo(49 * e, 88 * e, 50 * e, 82 * e, 53 * e, 77 * e),
        o.bezierCurveTo(51.5 * e, 71 * e, 51.5 * e, 71 * e, 50 * e, 65 * e),
        o.bezierCurveTo(53 * e, 68.5 * e, 53 * e, 68.5 * e, 56 * e, 72 * e),
        o.bezierCurveTo(59 * e, 67.5 * e, 59 * e, 67.5 * e, 62 * e, 63 * e),
        o.bezierCurveTo(60.5 * e, 59.5 * e, 60.5 * e, 59.5 * e, 59 * e, 56 * e),
        o.bezierCurveTo(62 * e, 57 * e, 62 * e, 57 * e, 65 * e, 58 * e),
        o.bezierCurveTo(78 * e, 35 * e, 103 * e, 36 * e, 117 * e, 47 * e),
        o.closePath(),
        Ce(o, i[1], i[2], 6 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(62 * e, 21 * e),
        o.bezierCurveTo(63 * e, 34 * e, 64 * e, 37 * e, 66 * e, 40 * e),
        o.bezierCurveTo(54 * e, 49 * e, 53 * e, 51 * e, 48 * e, 58 * e),
        o.bezierCurveTo(44 * e, 51 * e, 42 * e, 43 * e, 40 * e, 36 * e),
        o.bezierCurveTo(47 * e, 28 * e, 52 * e, 25 * e, 61 * e, 21 * e),
        o.closePath(),
        Ce(o, i[4]),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(60 * e, 29 * e),
        o.bezierCurveTo(62 * e, 25 * e, 65 * e, 24 * e, 70 * e, 23 * e),
        Ce(o, void 0, i[3], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(61 * e, 37 * e),
        o.bezierCurveTo(63 * e, 32 * e, 66 * e, 32 * e, 71 * e, 32 * e),
        Ce(o, void 0, i[3], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(52 * e, 31 * e),
        o.bezierCurveTo(50 * e, 26 * e, 50 * e, 25 * e, 51 * e, 23 * e),
        Ce(o, void 0, i[3], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(46 * e, 35 * e),
        o.bezierCurveTo(44 * e, 31 * e, 43 * e, 29 * e, 45 * e, 26 * e),
        Ce(o, void 0, i[3], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(58 * e, 44 * e),
        o.bezierCurveTo(57 * e, 48 * e, 57 * e, 50 * e, 60 * e, 52 * e),
        Ce(o, void 0, i[3], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(53 * e, 48 * e),
        o.bezierCurveTo(52 * e, 52 * e, 52 * e, 54 * e, 55 * e, 57 * e),
        Ce(o, void 0, i[3], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(46 * e, 41 * e),
        o.bezierCurveTo(41 * e, 42 * e, 39 * e, 45 * e, 38 * e, 48 * e),
        Ce(o, void 0, i[3], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(48 * e, 48 * e),
        o.bezierCurveTo(42 * e, 51 * e, 42 * e, 53 * e, 40 * e, 55 * e),
        Ce(o, void 0, i[3], 4 * e),
        0 == n ? (o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(99 * e, 101 * e),
        o.bezierCurveTo(118.6666259765625 * e, 104.33331298828125 * e, 124.6666259765625 * e, 116.33331298828125 * e, 112.6666259765625 * e, 114.33331298828125 * e),
        o.bezierCurveTo(104.6666259765625 * e, 112.33331298828125 * e, 100.6666259765625 * e, 105.33331298828125 * e, 99.6666259765625 * e, 101.33331298828125 * e),
        Ce(o, void 0, i[5], 6 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(97.6666259765625 * e, 101.33331298828125 * e),
        o.bezierCurveTo(81.6666259765625 * e, 106.33331298828125 * e, 79.6666259765625 * e, 114.33331298828125 * e, 89.6666259765625 * e, 114.33331298828125 * e),
        o.bezierCurveTo(95.6666259765625 * e, 111.33331298828125 * e, 95.6666259765625 * e, 109.33331298828125 * e, 98.6666259765625 * e, 102.33331298828125 * e),
        Ce(o, void 0, i[5], 6 * e)) : (o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(103 * e, 100.39999389648438 * e),
        o.bezierCurveTo(120 * e, 106.39999389648438 * e, 118 * e, 107.39999389648438 * e, 120 * e, 111.39999389648438 * e),
        Ce(o, void 0, i[5], 6 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(103 * e, 100.39999389648438 * e),
        o.bezierCurveTo(90 * e, 103.39999389648438 * e, 89 * e, 106.39999389648438 * e, 87 * e, 112.39999389648438 * e),
        Ce(o, void 0, i[5], 6 * e),
        we(o, 86 * e, 114.39999389648438 * e, 4.5 * e),
        Ce(o, i[1], i[5], 6 * e),
        we(o, 121 * e, 114.39999389648438 * e, 4.5 * e),
        Ce(o, i[1], i[5], 6 * e)),
        r
    }
    function yi(e, t) {
        var i = document.createElement("canvas")
          , n = i.getContext("2d");
        return i.width = 253 * e,
        i.height = 192 * e,
        n.globalAlpha = .5,
        n.save(),
        n.translate(42 * e, 99 * e),
        n.globalAlpha = .5,
        Be(n, -7 * e, -20 * e, 14 * e, 39 * e, 20 * e),
        n.restore(),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        n.save(),
        n.translate(37 * e, 94 * e),
        Be(n, -7 * e, -20 * e, 14 * e, 37 * e, 20 * e),
        n.restore(),
        Ce(n, t[2]),
        n.globalAlpha = .5,
        n.save(),
        n.translate(136 * e, 99 * e),
        n.globalAlpha = .5,
        Be(n, -84 * e, -67 * e, 168 * e, 134 * e, 20 * e),
        n.restore(),
        Ce(n, t[0], t[0], 13 * e),
        n.globalAlpha = 1,
        n.save(),
        n.translate(131 * e, 94 * e),
        Be(n, -84 * e, -67 * e, 168 * e, 134 * e, 20 * e),
        n.restore(),
        Ce(n, t[2], t[2], 13 * e),
        n.save(),
        n.translate(131 * e, 94 * e),
        Be(n, -76 * e, -61 * e, 152 * e, 122 * e, 20 * e),
        n.restore(),
        Ce(n, t[3], t[1], 8 * e),
        n.save(),
        n.translate(168.5 * e, 93.5 * e),
        Be(n, -30.5 * e, -58.5 * e, 61 * e, 117 * e, 20 * e),
        n.restore(),
        Ce(n, t[3], t[4], 6 * e),
        n.save(),
        n.translate(93.5 * e, 95.5 * e),
        Be(n, -32 * e, -59.5 * e, 59 * e, 119 * e, 20 * e),
        n.restore(),
        Ce(n, t[3], t[4], 6 * e),
        n.save(),
        n.translate(130.5 * e, 94 * e),
        Be(n, -36 * e, -67 * e, 73 * e, 134 * e, 20 * e),
        n.restore(),
        Ce(n, t[3], t[2], 8 * e),
        n.globalAlpha = .5,
        n.save(),
        n.translate(133 * e, 97 * e),
        Be(n, -83 * e, -12 * e, 160 * e, 24 * e, 0 * e),
        n.restore(),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        n.save(),
        n.translate(133 * e, 92 * e),
        Be(n, -83 * e, -12 * e, 160 * e, 24 * e, 0 * e),
        n.restore(),
        Ce(n, t[2]),
        n.globalAlpha = .5,
        n.save(),
        n.translate(228 * e, 99.5 * e),
        n.globalAlpha = .5,
        Be(n, -5 * e, -18.5 * e, 10 * e, 37 * e, 20 * e),
        n.restore(),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        n.save(),
        n.translate(223 * e, 94.5 * e),
        Be(n, -5 * e, -18.5 * e, 10 * e, 37 * e, 20 * e),
        n.restore(),
        Ce(n, t[2]),
        n.save(),
        n.translate(133.5 * e, 175.5 * e),
        n.globalAlpha = .5,
        Be(n, -22.5 * e, -6.5 * e, 45 * e, 13 * e, 20 * e),
        n.restore(),
        Ce(n, t[0]),
        n.globalAlpha = 1,
        n.save(),
        n.translate(128.5 * e, 170.5 * e),
        Be(n, -22.5 * e, -6.5 * e, 45 * e, 13 * e, 20 * e),
        n.restore(),
        Ce(n, t[2]),
        i
    }
    function Li(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 316 * e,
        n.height = 365 * e,
        r.save(),
        r.translate(156.07142639160156 * e, 51.81248474121094 * e),
        r.rotate(0),
        Be(r, -21.5 * e, -34 * e, 43 * e, 68 * e, 8 * e),
        r.restore(),
        Ce(r, i[1], i[2], 15 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(110.57142639160156 * e, 197.09820556640625 * e),
        r.bezierCurveTo(158.07142639160156 * e, 179.09820556640625 * e, 158.07142639160156 * e, 179.09820556640625 * e, 205.57142639160156 * e, 161.09820556640625 * e),
        r.bezierCurveTo(205.57142639160156 * e, 235.45535278320312 * e, 205.57142639160156 * e, 235.45535278320312 * e, 205.57142639160156 * e, 309.8125 * e),
        r.bezierCurveTo(205.57142639160156 * e, 323.8125 * e, 200.57142639160156 * e, 325.8125 * e, 187.57142639160156 * e, 326.8125 * e),
        r.bezierCurveTo(155.57142639160156 * e, 326.3125 * e, 155.57142639160156 * e, 326.3125 * e, 123.57142639160156 * e, 325.8125 * e),
        r.bezierCurveTo(111.57142639160156 * e, 326.8125 * e, 109.57142639160156 * e, 321.8125 * e, 110.57142639160156 * e, 312.8125 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 15 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(126.57142639160156 * e, 67.38392639160156 * e),
        r.bezierCurveTo(126.57142639160156 * e, 57.38392639160156 * e, 132.57142639160156 * e, 54.38392639160156 * e, 140.57142639160156 * e, 54.38392639160156 * e),
        r.bezierCurveTo(177.57142639160156 * e, 55.38392639160156 * e, 158.07142639160156 * e, 54.38392639160156 * e, 175.57142639160156 * e, 54.38392639160156 * e),
        r.bezierCurveTo(185.57142639160156 * e, 56.38392639160156 * e, 185.57142639160156 * e, 57.38392639160156 * e, 184.57142639160156 * e, 66.38392639160156 * e),
        r.bezierCurveTo(184.57142639160156 * e, 78.38392639160156 * e, 184.57142639160156 * e, 89.38392639160156 * e, 184.57142639160156 * e, 90.38392639160156 * e),
        r.bezierCurveTo(177.57142639160156 * e, 107.38392639160156 * e, 180.57142639160156 * e, 112.38392639160156 * e, 189.57142639160156 * e, 116.38392639160156 * e),
        r.bezierCurveTo(212.57142639160156 * e, 127.38392639160156 * e, 212.57142639160156 * e, 132.38392639160156 * e, 211.57142639160156 * e, 150.38392639160156 * e),
        r.bezierCurveTo(211.57142639160156 * e, 227.59821128845215 * e, 211.57142639160156 * e, 227.59821128845215 * e, 211.57142639160156 * e, 304.81249618530273 * e),
        r.bezierCurveTo(212.57142639160156 * e, 328.81249618530273 * e, 209.57142639160156 * e, 330.81249618530273 * e, 188.57142639160156 * e, 333.81249618530273 * e),
        r.bezierCurveTo(155.07142639160156 * e, 333.31249618530273 * e, 155.07142639160156 * e, 333.31249618530273 * e, 121.57142639160156 * e, 332.81249618530273 * e),
        r.bezierCurveTo(104.57142639160156 * e, 327.81249618530273 * e, 105.57142639160156 * e, 328.81249618530273 * e, 104.57142639160156 * e, 312.81249618530273 * e),
        r.bezierCurveTo(104.57142639160156 * e, 228.16963958740234 * e, 104.57142639160156 * e, 228.16963958740234 * e, 104.57142639160156 * e, 143.52678298950195 * e),
        r.bezierCurveTo(106.57142639160156 * e, 124.52678298950195 * e, 110.57142639160156 * e, 123.52678298950195 * e, 123.57142639160156 * e, 116.52678298950195 * e),
        r.bezierCurveTo(136.57142639160156 * e, 110.52678298950195 * e, 130.57142639160156 * e, 106.52678298950195 * e, 126.57142639160156 * e, 98.52678298950195 * e),
        r.closePath(),
        Ce(r, void 0, i[5], 15 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(125.57142639160156 * e, 156.66963958740234 * e),
        r.bezierCurveTo(125.57142639160156 * e, 182.66963958740234 * e, 125.57142639160156 * e, 182.66963958740234 * e, 125.57142639160156 * e, 208.66963958740234 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 15 * e),
        n
    }
    function Gi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 316 * e,
        n.height = 365 * e,
        r.save(),
        r.translate(156.07142639160156 * e, 51.81248474121094 * e),
        r.rotate(0),
        Be(r, -21.5 * e, -34 * e, 43 * e, 68 * e, 8 * e),
        r.restore(),
        Ce(r, i[1], i[2], 15 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(126.57142639160156 * e, 67.38392639160156 * e),
        r.bezierCurveTo(126.57142639160156 * e, 57.38392639160156 * e, 132.57142639160156 * e, 54.38392639160156 * e, 140.57142639160156 * e, 54.38392639160156 * e),
        r.bezierCurveTo(177.57142639160156 * e, 55.38392639160156 * e, 158.07142639160156 * e, 54.38392639160156 * e, 175.57142639160156 * e, 54.38392639160156 * e),
        r.bezierCurveTo(185.57142639160156 * e, 56.38392639160156 * e, 185.57142639160156 * e, 57.38392639160156 * e, 184.57142639160156 * e, 66.38392639160156 * e),
        r.bezierCurveTo(184.57142639160156 * e, 78.38392639160156 * e, 184.57142639160156 * e, 89.38392639160156 * e, 184.57142639160156 * e, 90.38392639160156 * e),
        r.bezierCurveTo(177.57142639160156 * e, 107.38392639160156 * e, 180.57142639160156 * e, 112.38392639160156 * e, 189.57142639160156 * e, 116.38392639160156 * e),
        r.bezierCurveTo(212.57142639160156 * e, 127.38392639160156 * e, 212.57142639160156 * e, 132.38392639160156 * e, 211.57142639160156 * e, 150.38392639160156 * e),
        r.bezierCurveTo(211.57142639160156 * e, 227.59821128845215 * e, 211.57142639160156 * e, 227.59821128845215 * e, 211.57142639160156 * e, 304.81249618530273 * e),
        r.bezierCurveTo(212.57142639160156 * e, 328.81249618530273 * e, 209.57142639160156 * e, 330.81249618530273 * e, 188.57142639160156 * e, 333.81249618530273 * e),
        r.bezierCurveTo(155.07142639160156 * e, 333.31249618530273 * e, 155.07142639160156 * e, 333.31249618530273 * e, 121.57142639160156 * e, 332.81249618530273 * e),
        r.bezierCurveTo(104.57142639160156 * e, 327.81249618530273 * e, 105.57142639160156 * e, 328.81249618530273 * e, 104.57142639160156 * e, 312.81249618530273 * e),
        r.bezierCurveTo(104.57142639160156 * e, 228.16963958740234 * e, 104.57142639160156 * e, 228.16963958740234 * e, 104.57142639160156 * e, 143.52678298950195 * e),
        r.bezierCurveTo(106.57142639160156 * e, 124.52678298950195 * e, 110.57142639160156 * e, 123.52678298950195 * e, 123.57142639160156 * e, 116.52678298950195 * e),
        r.bezierCurveTo(136.57142639160156 * e, 110.52678298950195 * e, 130.57142639160156 * e, 106.52678298950195 * e, 126.57142639160156 * e, 98.52678298950195 * e),
        r.closePath(),
        Ce(r, void 0, i[5], 15 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(125.57142639160156 * e, 156.66963958740234 * e),
        r.bezierCurveTo(125.57142639160156 * e, 182.66963958740234 * e, 125.57142639160156 * e, 182.66963958740234 * e, 125.57142639160156 * e, 208.66963958740234 * e),
        r.closePath(),
        Ce(r, void 0, i[6], 15 * e),
        n
    }
    function Hi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 400 * e,
        n.height = 400 * e,
        r.translate(0, 15 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(102 * e, 154 * e),
        r.bezierCurveTo(108 * e, 216.5 * e, 108 * e, 216.5 * e, 114 * e, 279 * e),
        r.bezierCurveTo(124 * e, 300 * e, 237 * e, 299 * e, 251 * e, 279 * e),
        r.bezierCurveTo(257 * e, 217 * e, 257 * e, 217 * e, 263 * e, 155 * e),
        r.bezierCurveTo(248 * e, 194 * e, 91 * e, 180 * e, 103 * e, 156 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(102 * e, 154 * e),
        r.bezierCurveTo(106 * e, 53 * e, 255 * e, 53 * e, 263 * e, 154 * e),
        r.bezierCurveTo(248 * e, 38 * e, 99 * e, 69 * e, 103 * e, 154 * e),
        r.closePath(),
        Ce(r, void 0, i[0], 11 * e),
        r.translate(0, -5 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(103 * e, 154 * e),
        r.bezierCurveTo(98 * e, 119 * e, 264 * e, 119 * e, 264 * e, 154 * e),
        r.bezierCurveTo(271 * e, 189 * e, 94 * e, 188 * e, 103 * e, 154 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(102 * e, 154 * e),
        r.bezierCurveTo(108 * e, 216.5 * e, 108 * e, 216.5 * e, 114 * e, 279 * e),
        r.bezierCurveTo(124 * e, 300 * e, 237 * e, 299 * e, 251 * e, 279 * e),
        r.bezierCurveTo(257 * e, 217 * e, 257 * e, 217 * e, 263 * e, 155 * e),
        r.bezierCurveTo(248 * e, 194 * e, 91 * e, 180 * e, 103 * e, 156 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(182 * e, 185 * e),
        r.bezierCurveTo(182.5 * e, 237.5 * e, 182.5 * e, 237.5 * e, 183 * e, 290 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(222 * e, 287 * e),
        r.bezierCurveTo(226 * e, 233.5 * e, 226 * e, 233.5 * e, 230 * e, 180 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(145 * e, 290 * e),
        r.bezierCurveTo(140.5 * e, 237 * e, 140.5 * e, 237 * e, 136 * e, 184 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 11 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(105 * e, 184 * e),
        r.bezierCurveTo(148 * e, 205 * e, 231 * e, 202 * e, 260 * e, 182 * e),
        r.bezierCurveTo(259 * e, 195.5 * e, 259 * e, 195.5 * e, 258 * e, 209 * e),
        r.bezierCurveTo(217 * e, 218 * e, 163 * e, 225 * e, 108 * e, 207 * e),
        r.closePath(),
        Ce(r, i[4], i[2], 11 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(251 * e, 276 * e),
        r.bezierCurveTo(251.5 * e, 267.5 * e, 251.5 * e, 267.5 * e, 252 * e, 259 * e),
        r.bezierCurveTo(212 * e, 272 * e, 156 * e, 275 * e, 112 * e, 260 * e),
        r.bezierCurveTo(112.5 * e, 269 * e, 112.5 * e, 269 * e, 113 * e, 278 * e),
        r.bezierCurveTo(155 * e, 306 * e, 253 * e, 286 * e, 250 * e, 276 * e),
        r.closePath(),
        Ce(r, i[4], i[2], 11 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(102 * e, 154 * e),
        r.bezierCurveTo(106 * e, 53 * e, 255 * e, 53 * e, 263 * e, 154 * e),
        r.bezierCurveTo(248 * e, 38 * e, 99 * e, 69 * e, 103 * e, 154 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 11 * e),
        n
    }
    function Pi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 400 * e,
        n.height = 400 * e,
        r.translate(0, 15 * e),
        r.globalAlpha = t ? .5 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(102 * e, 154 * e),
        r.bezierCurveTo(108 * e, 216.5 * e, 108 * e, 216.5 * e, 114 * e, 279 * e),
        r.bezierCurveTo(124 * e, 300 * e, 237 * e, 299 * e, 251 * e, 279 * e),
        r.bezierCurveTo(257 * e, 217 * e, 257 * e, 217 * e, 263 * e, 155 * e),
        r.bezierCurveTo(248 * e, 194 * e, 91 * e, 180 * e, 103 * e, 156 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(102 * e, 154 * e),
        r.bezierCurveTo(106 * e, 53 * e, 255 * e, 53 * e, 263 * e, 154 * e),
        r.bezierCurveTo(248 * e, 38 * e, 99 * e, 69 * e, 103 * e, 154 * e),
        r.closePath(),
        Ce(r, void 0, i[0], 11 * e),
        r.translate(0, -5 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(103 * e, 154 * e),
        r.bezierCurveTo(98 * e, 119 * e, 264 * e, 119 * e, 264 * e, 154 * e),
        r.bezierCurveTo(271 * e, 189 * e, 94 * e, 188 * e, 103 * e, 154 * e),
        r.closePath(),
        Ce(r, i[3], i[2], 12 * e),
        r.translate(0, 25 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(103 * e, 154 * e),
        r.bezierCurveTo(98 * e, 119 * e, 264 * e, 119 * e, 264 * e, 154 * e),
        r.bezierCurveTo(271 * e, 189 * e, 94 * e, 188 * e, 103 * e, 154 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.translate(0, -25 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(102 * e, 154 * e),
        r.bezierCurveTo(108 * e, 216.5 * e, 108 * e, 216.5 * e, 114 * e, 279 * e),
        r.bezierCurveTo(124 * e, 300 * e, 237 * e, 299 * e, 251 * e, 279 * e),
        r.bezierCurveTo(257 * e, 217 * e, 257 * e, 217 * e, 263 * e, 155 * e),
        r.bezierCurveTo(248 * e, 194 * e, 91 * e, 180 * e, 103 * e, 156 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(182 * e, 185 * e),
        r.bezierCurveTo(182.5 * e, 237.5 * e, 182.5 * e, 237.5 * e, 183 * e, 290 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(222 * e, 287 * e),
        r.bezierCurveTo(226 * e, 233.5 * e, 226 * e, 233.5 * e, 230 * e, 180 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(145 * e, 290 * e),
        r.bezierCurveTo(140.5 * e, 237 * e, 140.5 * e, 237 * e, 136 * e, 184 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 11 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(105 * e, 184 * e),
        r.bezierCurveTo(148 * e, 205 * e, 231 * e, 202 * e, 260 * e, 182 * e),
        r.bezierCurveTo(259 * e, 195.5 * e, 259 * e, 195.5 * e, 258 * e, 209 * e),
        r.bezierCurveTo(217 * e, 218 * e, 163 * e, 225 * e, 108 * e, 207 * e),
        r.closePath(),
        Ce(r, i[4], i[2], 11 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(251 * e, 276 * e),
        r.bezierCurveTo(251.5 * e, 267.5 * e, 251.5 * e, 267.5 * e, 252 * e, 259 * e),
        r.bezierCurveTo(212 * e, 272 * e, 156 * e, 275 * e, 112 * e, 260 * e),
        r.bezierCurveTo(112.5 * e, 269 * e, 112.5 * e, 269 * e, 113 * e, 278 * e),
        r.bezierCurveTo(155 * e, 306 * e, 253 * e, 286 * e, 250 * e, 276 * e),
        r.closePath(),
        Ce(r, i[4], i[2], 11 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(102 * e, 154 * e),
        r.bezierCurveTo(106 * e, 53 * e, 255 * e, 53 * e, 263 * e, 154 * e),
        r.bezierCurveTo(248 * e, 38 * e, 99 * e, 69 * e, 103 * e, 154 * e),
        r.closePath(),
        Ce(r, void 0, i[2], 11 * e),
        n
    }
    function Bi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 80 * e,
        n.height = 160 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.save(),
        Be(r, 33 * e, 53 * e, 10 * e, 98 * e, 10 * e),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(-150 * e, -100 * e),
        r.moveTo(167.5 * e, 171.0625 * e),
        r.bezierCurveTo(188 * e, 171.0625 * e, 188 * e, 171.0625 * e, 208.5 * e, 171.0625 * e),
        r.bezierCurveTo(208.5 * e, 156.0625 * e, 208.5 * e, 156.0625 * e, 208.5 * e, 141.0625 * e),
        r.bezierCurveTo(203.5 * e, 113.0625 * e, 179.5 * e, 96.0625 * e, 167.5 * e, 141.0625 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.restore(),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.save(),
        Be(r, 33 * e, 53 * e, 10 * e, 98 * e, 10 * e),
        Ce(r, i[1], i[2], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(-150 * e, -100 * e),
        r.moveTo(167.5 * e, 171.0625 * e),
        r.bezierCurveTo(188 * e, 171.0625 * e, 188 * e, 171.0625 * e, 208.5 * e, 171.0625 * e),
        r.bezierCurveTo(208.5 * e, 156.0625 * e, 208.5 * e, 156.0625 * e, 208.5 * e, 141.0625 * e),
        r.bezierCurveTo(203.5 * e, 113.0625 * e, 179.5 * e, 96.0625 * e, 167.5 * e, 141.0625 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.translate(0 * e, +e),
        r.moveTo(180.5 * e, 169.0625 * e),
        r.bezierCurveTo(180.5 * e, 157.5625 * e, 180.5 * e, 157.5625 * e, 180.5 * e, 146.0625 * e),
        r.bezierCurveTo(181.5 * e, 134.0625 * e, 193.5 * e, 129.0625 * e, 196.5 * e, 146.0625 * e),
        r.bezierCurveTo(196.5 * e, 157.5625 * e, 196.5 * e, 157.5625 * e, 196.5 * e, 169.0625 * e),
        r.closePath(),
        Ce(r, i[5]),
        r.restore(),
        n
    }
    function wi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 109 * e,
        n.height = 110 * e,
        we(r, 54.5 * e, 55 * e, 48.038209575038294 * e),
        Ce(r, t[0], t[1], 8 * e),
        0 == i ? (r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(54.928558349609375 * e, 43.72320556640625 * e),
        r.bezierCurveTo(66.92855834960938 * e, 31.72320556640625 * e, 69.92855834960938 * e, 29.72320556640625 * e, 74.92855834960938 * e, 29.72320556640625 * e),
        r.bezierCurveTo(86.92855834960938 * e, 28.72320556640625 * e, 91.92855834960938 * e, 42.72320556640625 * e, 89.92855834960938 * e, 52.72320556640625 * e),
        r.bezierCurveTo(88.92855834960938 * e, 63.72320556640625 * e, 73.92855834960938 * e, 75.72320556640625 * e, 55.928558349609375 * e, 87.72320556640625 * e),
        r.bezierCurveTo(37.928558349609375 * e, 78.72320556640625 * e, 26.928558349609375 * e, 65.72320556640625 * e, 19.928558349609375 * e, 54.72320556640625 * e),
        r.bezierCurveTo(13.928558349609375 * e, 42.72320556640625 * e, 21.928558349609375 * e, 28.72320556640625 * e, 35.928558349609375 * e, 29.72320556640625 * e),
        r.bezierCurveTo(45.928558349609375 * e, 31.72320556640625 * e, 51.928558349609375 * e, 40.72320556640625 * e, 53.928558349609375 * e, 44.72320556640625 * e),
        r.closePath(),
        Ce(r, t[2])) : 1 == i ? (r.save(),
        r.translate(55 * e, 39.48748779296875 * e),
        Be(r, -11.5 * e, -36 * e, 23 * e, 72 * e, 10 * e),
        r.restore(),
        Ce(r, t[2], t[3], 4 * e),
        we(r, 54.5 * e, 78.48748779296875 * e, 22.02271554554524 * e),
        Ce(r, t[4], t[3], 4 * e),
        r.save(),
        r.translate(55.5 * e, 57.287506103515625 * e),
        Be(r, -9 * e, -16 * e, 18 * e, 32 * e, 10 * e),
        r.restore(),
        Ce(r, t[4]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(66.5 * e, 25.287506103515625 * e),
        r.bezierCurveTo(60.5 * e, 25.287506103515625 * e, 63.5 * e, 25.287506103515625 * e, 54.5 * e, 25.287506103515625 * e),
        r.closePath(),
        Ce(r, void 0, t[5], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(66.5 * e, 37.287506103515625 * e),
        r.bezierCurveTo(60.5 * e, 37.287506103515625 * e, 60.5 * e, 37.287506103515625 * e, 54.5 * e, 37.287506103515625 * e),
        r.closePath(),
        Ce(r, void 0, t[5], 4 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(66.5 * e, 50.287506103515625 * e),
        r.bezierCurveTo(61 * e, 50.287506103515625 * e, 61 * e, 50.287506103515625 * e, 55.5 * e, 50.287506103515625 * e),
        r.closePath(),
        Ce(r, void 0, t[5], 4 * e)) : 2 == i ? (r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(45.928558349609375 * e, 55.29463195800781 * e),
        r.bezierCurveTo(38.928558349609375 * e, 67.29463195800781 * e, 38.928558349609375 * e, 67.29463195800781 * e, 31.928558349609375 * e, 79.29463195800781 * e),
        r.bezierCurveTo(15.928558349609375 * e, 85.29463195800781 * e, 17.928558349609375 * e, 86.29463195800781 * e, 17.928558349609375 * e, 90.29463195800781 * e),
        r.bezierCurveTo(19.928558349609375 * e, 94.29463195800781 * e, 21.928558349609375 * e, 94.29463195800781 * e, 27.928558349609375 * e, 92.29463195800781 * e),
        r.bezierCurveTo(29.928558349609375 * e, 98.29463195800781 * e, 30.928558349609375 * e, 99.29463195800781 * e, 33.928558349609375 * e, 99.29463195800781 * e),
        r.bezierCurveTo(38.928558349609375 * e, 97.29463195800781 * e, 38.928558349609375 * e, 93.29463195800781 * e, 37.928558349609375 * e, 86.29463195800781 * e),
        r.bezierCurveTo(45.428558349609375 * e, 73.29463195800781 * e, 51.928558349609375 * e, 64.29463195800781 * e, 52.928558349609375 * e, 60.29463195800781 * e),
        r.closePath(),
        Ce(r, t[2]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(55.928558349609375 * e, 8.866058349609375 * e),
        r.bezierCurveTo(35.928558349609375 * e, 35.866058349609375 * e, 37.928558349609375 * e, 48.866058349609375 * e, 46.928558349609375 * e, 62.866058349609375 * e),
        r.bezierCurveTo(65.92855834960938 * e, 72.86605834960938 * e, 80.92855834960938 * e, 55.866058349609375 * e, 93.92855834960938 * e, 36.866058349609375 * e),
        r.closePath(),
        Ce(r, t[3], t[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(93.92855834960938 * e, 36.866058349609375 * e),
        r.bezierCurveTo(82.92855834960938 * e, 37.866058349609375 * e, 77.92855834960938 * e, 36.866058349609375 * e, 67.92855834960938 * e, 28.866058349609375 * e),
        r.bezierCurveTo(53.928558349609375 * e, 16.866058349609375 * e, 53.928558349609375 * e, 14.866058349609375 * e, 55.928558349609375 * e, 7.866058349609375 * e),
        r.bezierCurveTo(65.92855834960938 * e, 4.866058349609375 * e, 71.92855834960938 * e, 7.866058349609375 * e, 83.92855834960938 * e, 13.866058349609375 * e),
        r.bezierCurveTo(96.92855834960938 * e, 21.866058349609375 * e, 95.92855834960938 * e, 31.866058349609375 * e, 92.92855834960938 * e, 36.866058349609375 * e),
        r.closePath(),
        Ce(r, t[3], t[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(68.92855834960938 * e, 16.866058349609375 * e),
        r.bezierCurveTo(71.92855834960938 * e, 13.866058349609375 * e, 76.92855834960938 * e, 16.866058349609375 * e, 79.92855834960938 * e, 21.866058349609375 * e),
        r.bezierCurveTo(82.92855834960938 * e, 24.866058349609375 * e, 81.92855834960938 * e, 27.866058349609375 * e, 73.92855834960938 * e, 24.866058349609375 * e),
        r.bezierCurveTo(67.92855834960938 * e, 20.866058349609375 * e, 66.92855834960938 * e, 19.866058349609375 * e, 67.92855834960938 * e, 17.866058349609375 * e),
        r.closePath(),
        Ce(r, t[2])) : 3 == i && (r.scale(.9, .9),
        r.translate(6 * e, 0),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(54 * e, .421875 * e),
        r.bezierCurveTo(84 * e, 45.421875 * e, 89 * e, 51.421875 * e, 83 * e, 74.421875 * e),
        r.bezierCurveTo(74 * e, 95.421875 * e, 46 * e, 98.421875 * e, 30 * e, 78.421875 * e),
        r.bezierCurveTo(22 * e, 59.421875 * e, 27 * e, 49.421875 * e, 34 * e, 36.421875 * e),
        r.closePath(),
        Ce(r, t[2], t[3], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(74 * e, 52.421875 * e),
        r.bezierCurveTo(77 * e, 73.421875 * e, 69 * e, 81.421875 * e, 58 * e, 81.421875 * e),
        r.bezierCurveTo(66 * e, 71.421875 * e, 70 * e, 66.421875 * e, 74 * e, 52.421875 * e),
        r.closePath(),
        Ce(r, t[3])),
        n
    }
    function zi(e) {
        var t = document.createElement("canvas")
          , i = t.getContext("2d")
          , n = 600 * e
          , r = 22 * e
          , o = 4 * e
          , a = 4 * e;
        return Be(i, 5 * e, 5 * e, (t.width = n) - 10 * e, (t.height = r) - 10 * e, o),
        Ce(i, null, "#BBE8EF", a),
        t
    }
    function ki(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return r.globalAlph = .6,
        n.width = 573 * e,
        n.height = 350 * e,
        1 == i && (r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(336 * e, 72 * e),
        r.bezierCurveTo(366 * e, 15 * e, 426 * e, 36 * e, 497 * e, 83 * e),
        r.bezierCurveTo(522 * e, 85 * e, 522 * e, 85 * e, 547 * e, 87 * e),
        r.bezierCurveTo(476.5 * e, 205 * e, 476.5 * e, 205 * e, 406 * e, 323 * e),
        r.bezierCurveTo(297.5 * e, 319 * e, 297.5 * e, 319 * e, 189 * e, 315 * e),
        r.bezierCurveTo(105.5 * e, 279 * e, 105.5 * e, 279 * e, 22 * e, 243 * e),
        r.bezierCurveTo(92 * e, 140 * e, 92 * e, 140 * e, 162 * e, 37 * e),
        r.bezierCurveTo(173 * e, 39 * e, 173 * e, 39 * e, 184 * e, 41 * e),
        r.bezierCurveTo(185 * e, 38.5 * e, 185 * e, 38.5 * e, 186 * e, 36 * e),
        r.bezierCurveTo(323 * e, 13 * e, 322 * e, 25 * e, 337 * e, 74 * e),
        r.closePath(),
        Ce(r, t[4], t[4], 35 * e)),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(168 * e, 42 * e),
        r.bezierCurveTo(255 * e, 60 * e, 255 * e, 60 * e, 342 * e, 78 * e),
        r.bezierCurveTo(443 * e, 81.5 * e, 443 * e, 81.5 * e, 544 * e, 85 * e),
        r.bezierCurveTo(475 * e, 204.5 * e, 475 * e, 204.5 * e, 406 * e, 324 * e),
        r.bezierCurveTo(297.5 * e, 320 * e, 297.5 * e, 320 * e, 189 * e, 316 * e),
        r.bezierCurveTo(105.5 * e, 279 * e, 105.5 * e, 279 * e, 22 * e, 242 * e),
        r.closePath(),
        Ce(r, t[0], t[1], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(188 * e, 41 * e),
        r.bezierCurveTo(308 * e, 15 * e, 325 * e, 18 * e, 337 * e, 66 * e),
        r.bezierCurveTo(191 * e, 305 * e, 196 * e, 286 * e, 184 * e, 307 * e),
        r.bezierCurveTo(175 * e, 250 * e, 90 * e, 254 * e, 52 * e, 241 * e),
        r.closePath(),
        Ce(r, t[2], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(336 * e, 71 * e),
        r.bezierCurveTo(375 * e, 8 * e, 429 * e, 50 * e, 518 * e, 92 * e),
        r.bezierCurveTo(455 * e, 199.5 * e, 455 * e, 199.5 * e, 392 * e, 307 * e),
        r.bezierCurveTo(227 * e, 301 * e, 261 * e, 255 * e, 188 * e, 308 * e),
        r.closePath(),
        Ce(r, t[2], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(357 * e, 76 * e),
        r.bezierCurveTo(390 * e, 67 * e, 414 * e, 86 * e, 435 * e, 104 * e),
        r.bezierCurveTo(417 * e, 135 * e, 417 * e, 135 * e, 399 * e, 166 * e),
        r.bezierCurveTo(352 * e, 140 * e, 345 * e, 139 * e, 319 * e, 142 * e),
        r.closePath(),
        Ce(r, t[3], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(309 * e, 168 * e),
        r.bezierCurveTo(345 * e, 163 * e, 372 * e, 180 * e, 412 * e, 203 * e),
        Ce(r, t[2], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(263 * e, 54 * e),
        r.bezierCurveTo(305 * e, 44 * e, 307 * e, 51 * e, 311 * e, 64 * e),
        r.bezierCurveTo(270.5 * e, 129.5 * e, 270.5 * e, 129.5 * e, 230 * e, 195 * e),
        r.bezierCurveTo(221 * e, 175 * e, 203 * e, 171 * e, 186 * e, 172 * e),
        r.closePath(),
        Ce(r, t[3], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(292 * e, 198 * e),
        r.bezierCurveTo(328 * e, 191 * e, 364 * e, 211 * e, 401 * e, 237 * e),
        Ce(r, t[2], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(245 * e, 68 * e),
        r.bezierCurveTo(210 * e, 72 * e, 210 * e, 72 * e, 189 * e, 69 * e),
        Ce(r, t[2], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(222 * e, 96 * e),
        r.bezierCurveTo(196 * e, 97 * e, 193 * e, 97 * e, 177 * e, 92 * e),
        Ce(r, t[2], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(207 * e, 124 * e),
        r.bezierCurveTo(179 * e, 123 * e, 177 * e, 124 * e, 161 * e, 119 * e),
        Ce(r, t[2], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(115 * e, 183 * e),
        r.bezierCurveTo(184 * e, 185 * e, 203 * e, 198 * e, 219 * e, 221 * e),
        Ce(r, t[2], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(98 * e, 213 * e),
        r.bezierCurveTo(161 * e, 214 * e, 193 * e, 227 * e, 201 * e, 249 * e),
        Ce(r, t[2], t[3], 12 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(399 * e, 257 * e),
        r.bezierCurveTo(287 * e, 215 * e, 280 * e, 215 * e, 263 * e, 222 * e),
        r.bezierCurveTo(253 * e, 238 * e, 247 * e, 245 * e, 243 * e, 254 * e),
        r.bezierCurveTo(267 * e, 236 * e, 292 * e, 263 * e, 377 * e, 284 * e),
        Ce(r, t[3], t[3], 12 * e),
        n
    }
    function Wi(e, t, i, n) {
        var r = document.createElement("canvas")
          , o = r.getContext("2d");
        return o.globalAlph = .6,
        r.width = 170 * e,
        r.height = 200 * e,
        o.translate(5 * e, 15 * e),
        1 == n && (o.translate(0, -5 * e),
        we(o, 77.00003051757812 * e, 104.49432373046875 * e, 71.84010022264724 * e),
        Ce(o, i[1], i[5], 20 * e),
        we(o, 77.00003051757812 * e, 104.22160339355469 * e, 61.554853586049575 * e),
        Ce(o, i[1], i[5], 20 * e),
        o.save(),
        o.translate(77.00003051757812 * e, 31.267044067382812 * e),
        Be(o, -6 * e, -12.5 * e, 12 * e, 25 * e, 10 * e),
        o.restore(),
        Ce(o, i[1], i[5], 20 * e),
        o.save(),
        o.translate(77.00003051757812 * e, 13.267044067382812 * e),
        Be(o, -15 * e, -10.5 * e, 30 * e, 21 * e, 10 * e),
        o.restore(),
        Ce(o, i[1], i[5], 20 * e)),
        we(o, 77.00003051757812 * e, 104.49432373046875 * e, 71.84010022264724 * e),
        Ce(o, i[1], i[2], 7 * e),
        we(o, 77.00003051757812 * e, 104.22160339355469 * e, 61.554853586049575 * e),
        Ce(o, i[1], i[2], 7 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(18.000030517578125 * e, 105.85795593261719 * e),
        o.bezierCurveTo(134.00003051757812 * e, 104.85795593261719 * e, 77.00003051757812 * e, 104.85795593261719 * e, 136.00003051757812 * e, 103.85795593261719 * e),
        o.closePath(),
        Ce(o, i[1], i[2], 8 * e),
        we(o, 77.00003051757812 * e, 104.6761474609375 * e, 32.55764119219941 * e),
        Ce(o, i[1], i[2], 8 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(78.00003051757812 * e, 112.03977966308594 * e),
        o.bezierCurveTo(78.00003051757812 * e, 87.03977966308594 * e, 78.00003051757812 * e, 87.03977966308594 * e, 78.00003051757812 * e, 62.03977966308594 * e),
        o.closePath(),
        Ce(o, i[3], i[2], 8 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(78.00003051757812 * e, 48.03977966308594 * e),
        o.bezierCurveTo(82.00003051757812 * e, 55.53977966308594 * e, 82.00003051757812 * e, 55.53977966308594 * e, 86.00003051757812 * e, 63.03977966308594 * e),
        o.bezierCurveTo(78.00003051757812 * e, 63.03977966308594 * e, 78.00003051757812 * e, 63.03977966308594 * e, 70.00003051757812 * e, 63.03977966308594 * e),
        o.closePath(),
        Ce(o, i[3], i[2], 4 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(80.00003051757812 * e, 111.6761474609375 * e),
        o.bezierCurveTo(95.00003051757812 * e, 97.1761474609375 * e, 95.00003051757812 * e, 97.1761474609375 * e, 110.00003051757812 * e, 82.6761474609375 * e),
        o.closePath(),
        Ce(o, i[3], i[2], 8 * e),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(107.00003051757812 * e, 76.6761474609375 * e),
        o.bezierCurveTo(111.50003051757812 * e, 82.6761474609375 * e, 111.50003051757812 * e, 82.6761474609375 * e, 116.00003051757812 * e, 88.6761474609375 * e),
        o.bezierCurveTo(118.50003051757812 * e, 81.6761474609375 * e, 118.50003051757812 * e, 81.6761474609375 * e, 121.00003051757812 * e, 74.6761474609375 * e),
        o.closePath(),
        Ce(o, i[3], i[2], 4 * e),
        we(o, 77.00003051757812 * e, 105.03977966308594 * e, 15.556349186104045 * e),
        Ce(o, i[3], i[2], 4 * e),
        o.save(),
        o.translate(77.00003051757812 * e, 31.267044067382812 * e),
        o.rotate(0),
        Be(o, -6 * e, -12.5 * e, 12 * e, 25 * e, 10 * e),
        o.restore(),
        Ce(o, i[1], i[2], 7 * e),
        o.save(),
        o.translate(77.00003051757812 * e, 13.267044067382812 * e),
        o.rotate(0),
        Be(o, -15 * e, -10.5 * e, 30 * e, 21 * e, 10 * e),
        o.restore(),
        Ce(o, i[1], i[2], 7 * e),
        r
    }
    function Vi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return r.globalAlph = .6,
        n.width = 81 * e,
        n.height = 77 * e,
        r.translate(0, 10 * e),
        r.scale(.2, .2),
        r.translate(0, -30 * e),
        1 == i && (r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36.5 * e, 278.0625 * e),
        r.bezierCurveTo(67.5 * e, 316.0625 * e, 134.5 * e, 334.0625 * e, 199.5 * e, 319.0625 * e),
        r.bezierCurveTo(254.5 * e, 304.0625 * e, 346.5 * e, 270.0625 * e, 348.5 * e, 237.0625 * e),
        r.bezierCurveTo(359.5 * e, 206.0625 * e, 318.5 * e, 129.0625 * e, 262.5 * e, 122.0625 * e),
        r.bezierCurveTo(213.5 * e, 115.0625 * e, 166.5 * e, 133.0625 * e, 104.5 * e, 166.0625 * e),
        r.bezierCurveTo(54.5 * e, 194.0625 * e, 23.5 * e, 241.0625 * e, 36.5 * e, 277.0625 * e),
        r.closePath(),
        Ce(r, t[0], t[3], 50 * e)),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(36.5 * e, 278.0625 * e),
        r.bezierCurveTo(67.5 * e, 316.0625 * e, 134.5 * e, 334.0625 * e, 199.5 * e, 319.0625 * e),
        r.bezierCurveTo(254.5 * e, 304.0625 * e, 346.5 * e, 270.0625 * e, 348.5 * e, 237.0625 * e),
        r.bezierCurveTo(359.5 * e, 206.0625 * e, 318.5 * e, 129.0625 * e, 262.5 * e, 122.0625 * e),
        r.bezierCurveTo(213.5 * e, 115.0625 * e, 166.5 * e, 133.0625 * e, 104.5 * e, 166.0625 * e),
        r.bezierCurveTo(54.5 * e, 194.0625 * e, 23.5 * e, 241.0625 * e, 36.5 * e, 277.0625 * e),
        r.closePath(),
        Ce(r, t[0], t[1], 19 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(214.5 * e, 124.0625 * e),
        r.bezierCurveTo(242.5 * e, 125.0625 * e, 272.5 * e, 159.0625 * e, 283.5 * e, 184.0625 * e),
        r.bezierCurveTo(277.5 * e, 161.0625 * e, 233.5 * e, 128.0625 * e, 219.5 * e, 122.0625 * e),
        r.closePath(),
        Ce(r, t[0], t[1], 19 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(157.5 * e, 145.0625 * e),
        r.bezierCurveTo(176.5 * e, 148.0625 * e, 205.5 * e, 176.0625 * e, 212.5 * e, 197.0625 * e),
        r.bezierCurveTo(205.5 * e, 178.0625 * e, 177.5 * e, 152.0625 * e, 156.5 * e, 142.0625 * e),
        r.closePath(),
        Ce(r, t[0], t[1], 19 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(103.5 * e, 169.0625 * e),
        r.bezierCurveTo(160.5 * e, 166.0625 * e, 228.5 * e, 312.0625 * e, 162.5 * e, 323.0625 * e),
        r.bezierCurveTo(128.5 * e, 330.0625 * e, 45.5 * e, 312.0625 * e, 34.5 * e, 268.0625 * e),
        r.bezierCurveTo(30.5 * e, 238.0625 * e, 44.5 * e, 222.0625 * e, 52.5 * e, 211.0625 * e),
        r.bezierCurveTo(82.5 * e, 174.0625 * e, 104.5 * e, 166.0625 * e, 119.5 * e, 172.0625 * e),
        r.closePath(),
        Ce(r, t[2], t[1], 19 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(194.5 * e, 313.0625 * e),
        r.bezierCurveTo(222.5 * e, 306.0625 * e, 319.5 * e, 271.0625 * e, 337.5 * e, 241.0625 * e),
        r.bezierCurveTo(274.5 * e, 270.0625 * e, 216.5 * e, 288.0625 * e, 199.5 * e, 287.0625 * e),
        r.bezierCurveTo(198.5 * e, 302.0625 * e, 195.5 * e, 311.0625 * e, 193.5 * e, 312.0625 * e),
        r.closePath(),
        Ce(r, t[1]),
        r.scale(3, 3),
        r.translate(15, 10 * e),
        1 == i && (r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(4 * e, 32 * e),
        r.bezierCurveTo(19 * e, 25 * e, 19 * e, 25 * e, 34 * e, 18 * e),
        r.bezierCurveTo(41.5 * e, 23.5 * e, 41.5 * e, 23.5 * e, 49 * e, 29 * e),
        r.bezierCurveTo(59.5 * e, 20 * e, 59.5 * e, 20 * e, 70 * e, 11 * e),
        Ce(r, void 0, t[3], 28 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(56 * e, 6 * e),
        r.bezierCurveTo(63.5 * e, 13.5 * e, 63.5 * e, 13.5 * e, 71 * e, 21 * e),
        r.bezierCurveTo(74.5 * e, 11.5 * e, 74.5 * e, 11.5 * e, 78 * e, 2 * e),
        r.closePath(),
        Ce(r, t[3], t[3], 28 * e)),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(4 * e, 32 * e),
        r.bezierCurveTo(19 * e, 25 * e, 19 * e, 25 * e, 34 * e, 18 * e),
        r.bezierCurveTo(41.5 * e, 23.5 * e, 41.5 * e, 23.5 * e, 49 * e, 29 * e),
        r.bezierCurveTo(59.5 * e, 20 * e, 59.5 * e, 20 * e, 70 * e, 11 * e),
        Ce(r, void 0, t[1], 17 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(56 * e, 6 * e),
        r.bezierCurveTo(63.5 * e, 13.5 * e, 63.5 * e, 13.5 * e, 71 * e, 21 * e),
        r.bezierCurveTo(74.5 * e, 11.5 * e, 74.5 * e, 11.5 * e, 78 * e, 2 * e),
        r.closePath(),
        Ce(r, t[1], t[1], 17 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(4 * e, 32 * e),
        r.bezierCurveTo(19 * e, 25 * e, 19 * e, 25 * e, 34 * e, 18 * e),
        r.bezierCurveTo(41.5 * e, 23.5 * e, 41.5 * e, 23.5 * e, 49 * e, 29 * e),
        r.bezierCurveTo(59.5 * e, 20 * e, 59.5 * e, 20 * e, 70 * e, 11 * e),
        Ce(r, void 0, t[2], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(56 * e, 6 * e),
        r.bezierCurveTo(63.5 * e, 13.5 * e, 63.5 * e, 13.5 * e, 71 * e, 21 * e),
        r.bezierCurveTo(74.5 * e, 11.5 * e, 74.5 * e, 11.5 * e, 78 * e, 2 * e),
        r.closePath(),
        Ce(r, t[2], t[2], 10 * e),
        n
    }
    function Ui(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 144 * e,
        n.height = 280 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(5 * e, 5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(62 * e, 103.79999542236328 * e),
        r.bezierCurveTo(62.5 * e, 148.79999542236328 * e, 62.5 * e, 148.79999542236328 * e, 63 * e, 193.79999542236328 * e),
        r.bezierCurveTo(63 * e, 219.79999542236328 * e, 47 * e, 217.79999542236328 * e, 51 * e, 230.79999542236328 * e),
        r.bezierCurveTo(62 * e, 255.79999542236328 * e, 74 * e, 260.7999954223633 * e, 72 * e, 248.79999542236328 * e),
        r.bezierCurveTo(65 * e, 226.79999542236328 * e, 71 * e, 229.79999542236328 * e, 76 * e, 225.79999542236328 * e),
        r.bezierCurveTo(90 * e, 224.79999542236328 * e, 89 * e, 232.79999542236328 * e, 90 * e, 243.79999542236328 * e),
        r.bezierCurveTo(95 * e, 253.79999542236328 * e, 99 * e, 249.79999542236328 * e, 100 * e, 229.79999542236328 * e),
        r.bezierCurveTo(102 * e, 213.79999542236328 * e, 98 * e, 214.79999542236328 * e, 90 * e, 205.79999542236328 * e),
        r.bezierCurveTo(82 * e, 201.79999542236328 * e, 82 * e, 185.79999542236328 * e, 82 * e, 114.79999542236328 * e),
        r.bezierCurveTo(80 * e, 73 * e, 82 * e, 68 * e, 93 * e, 53 * e),
        r.bezierCurveTo(98 * e, 37 * e, 65 * e, 14 * e, 74 * e, 33 * e),
        r.bezierCurveTo(82 * e, 56 * e, 77 * e, 52 * e, 69 * e, 54 * e),
        r.bezierCurveTo(55 * e, 57 * e, 57 * e, 53 * e, 54 * e, 39 * e),
        r.bezierCurveTo(46 * e, 20 * e, 37 * e, 61 * e, 50 * e, 68 * e),
        r.bezierCurveTo(65 * e, 81 * e, 60 * e, 89 * e, 62 * e, 102 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(-5 * e, -5 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(62 * e, 103.79999542236328 * e),
        r.bezierCurveTo(62.5 * e, 148.79999542236328 * e, 62.5 * e, 148.79999542236328 * e, 63 * e, 193.79999542236328 * e),
        r.bezierCurveTo(63 * e, 219.79999542236328 * e, 47 * e, 217.79999542236328 * e, 51 * e, 230.79999542236328 * e),
        r.bezierCurveTo(62 * e, 255.79999542236328 * e, 74 * e, 260.7999954223633 * e, 72 * e, 248.79999542236328 * e),
        r.bezierCurveTo(65 * e, 226.79999542236328 * e, 71 * e, 229.79999542236328 * e, 76 * e, 225.79999542236328 * e),
        r.bezierCurveTo(90 * e, 224.79999542236328 * e, 89 * e, 232.79999542236328 * e, 90 * e, 243.79999542236328 * e),
        r.bezierCurveTo(95 * e, 253.79999542236328 * e, 99 * e, 249.79999542236328 * e, 100 * e, 229.79999542236328 * e),
        r.bezierCurveTo(102 * e, 213.79999542236328 * e, 98 * e, 214.79999542236328 * e, 90 * e, 205.79999542236328 * e),
        r.bezierCurveTo(82 * e, 201.79999542236328 * e, 82 * e, 185.79999542236328 * e, 82 * e, 114.79999542236328 * e),
        r.bezierCurveTo(80 * e, 73 * e, 82 * e, 68 * e, 93 * e, 53 * e),
        r.bezierCurveTo(98 * e, 37 * e, 65 * e, 14 * e, 74 * e, 33 * e),
        r.bezierCurveTo(82 * e, 56 * e, 77 * e, 52 * e, 69 * e, 54 * e),
        r.bezierCurveTo(55 * e, 57 * e, 57 * e, 53 * e, 54 * e, 39 * e),
        r.bezierCurveTo(46 * e, 20 * e, 37 * e, 61 * e, 50 * e, 68 * e),
        r.bezierCurveTo(65 * e, 81 * e, 60 * e, 89 * e, 62 * e, 102 * e),
        r.closePath(),
        Ce(r, i[1], i[2], 6 * e),
        n
    }
    function Ki(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 160 * e,
        n.height = 161 * e,
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 10 * e),
        r.save(),
        r.translate(80.5 * e, 78 * e),
        Be(r, -71.5 * e, -71 * e, 143 * e, 143 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -10 * e),
        r.save(),
        r.translate(80.5 * e, 78 * e),
        Be(r, -71.5 * e, -71 * e, 143 * e, 143 * e, 10 * e),
        r.restore(),
        Ce(r, i[1], i[2], 6 * e),
        r.save(),
        r.translate(80 * e, 78.5 * e),
        Be(r, -17 * e, -72.5 * e, 34 * e, 145 * e, 10 * e),
        r.restore(),
        Ce(r, i[3], i[4], 6 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 10 * e),
        r.save(),
        r.translate(80 * e, 79.5 * e),
        Be(r, -73 * e, -16.5 * e, 145 * e, 34 * e, 10 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -10 * e),
        r.save(),
        r.translate(80 * e, 79.5 * e),
        Be(r, -73 * e, -16.5 * e, 145 * e, 34 * e, 10 * e),
        r.restore(),
        Ce(r, i[3], i[4], 6 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(79 * e, 71 * e),
        r.bezierCurveTo(90 * e, 42 * e, 98 * e, 36 * e, 109 * e, 43 * e),
        r.bezierCurveTo(119 * e, 47 * e, 128 * e, 62 * e, 107 * e, 72 * e),
        r.bezierCurveTo(96 * e, 78.5 * e, 96 * e, 78.5 * e, 85 * e, 85 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(84 * e, 78 * e),
        r.bezierCurveTo(113 * e, 82 * e, 123 * e, 97 * e, 115 * e, 108 * e),
        r.bezierCurveTo(110 * e, 119 * e, 98 * e, 124 * e, 87 * e, 107 * e),
        r.bezierCurveTo(81.5 * e, 94.5 * e, 81.5 * e, 94.5 * e, 76 * e, 82 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(80 * e, 73 * e),
        r.bezierCurveTo(64 * e, 37 * e, 55 * e, 34 * e, 45 * e, 42 * e),
        r.bezierCurveTo(30 * e, 54 * e, 36 * e, 65 * e, 51 * e, 72 * e),
        r.bezierCurveTo(62.5 * e, 77 * e, 62.5 * e, 77 * e, 74 * e, 82 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(82 * e, 83 * e),
        r.bezierCurveTo(73 * e, 107 * e, 60 * e, 123 * e, 47 * e, 113 * e),
        r.bezierCurveTo(33 * e, 105 * e, 33 * e, 92 * e, 52 * e, 85 * e),
        r.bezierCurveTo(74 * e, 73 * e, 77 * e, 76 * e, 76 * e, 75 * e),
        r.closePath(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(79 * e, 71 * e),
        r.bezierCurveTo(90 * e, 42 * e, 98 * e, 36 * e, 109 * e, 43 * e),
        r.bezierCurveTo(119 * e, 47 * e, 128 * e, 62 * e, 107 * e, 72 * e),
        r.bezierCurveTo(96 * e, 78.5 * e, 96 * e, 78.5 * e, 85 * e, 85 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(84 * e, 78 * e),
        r.bezierCurveTo(113 * e, 82 * e, 123 * e, 97 * e, 115 * e, 108 * e),
        r.bezierCurveTo(110 * e, 119 * e, 98 * e, 124 * e, 87 * e, 107 * e),
        r.bezierCurveTo(81.5 * e, 94.5 * e, 81.5 * e, 94.5 * e, 76 * e, 82 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(80 * e, 73 * e),
        r.bezierCurveTo(64 * e, 37 * e, 55 * e, 34 * e, 45 * e, 42 * e),
        r.bezierCurveTo(30 * e, 54 * e, 36 * e, 65 * e, 51 * e, 72 * e),
        r.bezierCurveTo(62.5 * e, 77 * e, 62.5 * e, 77 * e, 74 * e, 82 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 6 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(82 * e, 83 * e),
        r.bezierCurveTo(73 * e, 107 * e, 60 * e, 123 * e, 47 * e, 113 * e),
        r.bezierCurveTo(33 * e, 105 * e, 33 * e, 92 * e, 52 * e, 85 * e),
        r.bezierCurveTo(74 * e, 73 * e, 77 * e, 76 * e, 76 * e, 75 * e),
        r.closePath(),
        Ce(r, i[3], i[4], 6 * e),
        r.globalAlpha = t ? .5 : 1,
        r.translate(0, 10 * e),
        r.save(),
        r.translate(78.5 * e, 78 * e),
        Be(r, -13.5 * e, -14 * e, 27 * e, 27 * e, 6 * e),
        r.restore(),
        Ce(r, i[0]),
        r.globalAlpha = 1,
        r.translate(0, -10 * e),
        r.save(),
        r.translate(78.5 * e, 78 * e),
        Be(r, -13.5 * e, -14 * e, 27 * e, 27 * e, 6 * e),
        r.restore(),
        Ce(r, i[3], i[4], 6 * e),
        n
    }
    function xi(e, t, i) {
        var n = document.createElement("canvas")
          , r = n.getContext("2d");
        return n.width = 372 * e,
        n.height = 358 * e,
        r.translate(0 * e, 10 * e),
        r.globalAlpha = t ? .2 : 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(247.00003051757812 * e, 115.76704406738281 * e),
        r.bezierCurveTo(305.0000305175781 * e, 124.76704406738281 * e, 335.0000305175781 * e, 112.76704406738281 * e, 359.0000305175781 * e, 93.76704406738281 * e),
        r.bezierCurveTo(359.5000305175781 * e, 113.26704406738281 * e, 359.5000305175781 * e, 113.26704406738281 * e, 360.0000305175781 * e, 132.7670440673828 * e),
        r.bezierCurveTo(339.0000305175781 * e, 177.7670440673828 * e, 281.0000305175781 * e, 178.7670440673828 * e, 243.00003051757812 * e, 183.7670440673828 * e),
        r.bezierCurveTo(214.50003051757812 * e, 214.2670440673828 * e, 214.50003051757812 * e, 214.2670440673828 * e, 186.00003051757812 * e, 244.7670440673828 * e),
        r.bezierCurveTo(155.00003051757812 * e, 214.2670440673828 * e, 155.00003051757812 * e, 214.2670440673828 * e, 124.00003051757812 * e, 183.7670440673828 * e),
        r.bezierCurveTo(51.000030517578125 * e, 180.7670440673828 * e, 21.000030517578125 * e, 161.7670440673828 * e, 9.000030517578125 * e, 129.7670440673828 * e),
        r.bezierCurveTo(8.500030517578125 * e, 110.76704406738281 * e, 8.500030517578125 * e, 110.76704406738281 * e, 8.000030517578125 * e, 91.76704406738281 * e),
        r.bezierCurveTo(31.000030517578125 * e, 112.76704406738281 * e, 87.00003051757812 * e, 119.76704406738281 * e, 116.00003051757812 * e, 117.76704406738281 * e),
        r.bezierCurveTo(175.00003051757812 * e, 18.767044067382812 * e, 170.00003051757812 * e, 23.767044067382812 * e, 181.00003051757812 * e, 14.767044067382812 * e),
        r.bezierCurveTo(199.00003051757812 * e, 34.76704406738281 * e, 203.00003051757812 * e, 54.76704406738281 * e, 247.00003051757812 * e, 115.76704406738281 * e),
        r.closePath(),
        Ce(r, i[0], i[0], 10 * e),
        r.translate(0 * e, -10 * e),
        r.globalAlpha = 1,
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(107.00003051757812 * e, 54.13069152832031 * e),
        r.bezierCurveTo(106.50003051757812 * e, 38.63069152832031 * e, 106.50003051757812 * e, 38.63069152832031 * e, 106.00003051757812 * e, 23.130691528320312 * e),
        r.bezierCurveTo(121.50003051757812 * e, 38.13069152832031 * e, 121.50003051757812 * e, 38.13069152832031 * e, 137.00003051757812 * e, 53.13069152832031 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(233.00003051757812 * e, 53.6761474609375 * e),
        r.bezierCurveTo(247.00003051757812 * e, 37.1761474609375 * e, 247.00003051757812 * e, 37.1761474609375 * e, 261.0000305175781 * e, 20.6761474609375 * e),
        r.bezierCurveTo(261.0000305175781 * e, 36.1761474609375 * e, 261.0000305175781 * e, 36.1761474609375 * e, 261.0000305175781 * e, 51.6761474609375 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(293.0000305175781 * e, 54.403411865234375 * e),
        r.bezierCurveTo(300.0000305175781 * e, 49.903411865234375 * e, 300.0000305175781 * e, 49.903411865234375 * e, 307.0000305175781 * e, 45.403411865234375 * e),
        r.bezierCurveTo(307.0000305175781 * e, 49.903411865234375 * e, 307.0000305175781 * e, 49.903411865234375 * e, 307.0000305175781 * e, 54.403411865234375 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(77.00003051757812 * e, 54.403411865234375 * e),
        r.bezierCurveTo(70.00003051757812 * e, 50.403411865234375 * e, 70.00003051757812 * e, 50.403411865234375 * e, 63.000030517578125 * e, 46.403411865234375 * e),
        r.bezierCurveTo(62.500030517578125 * e, 50.903411865234375 * e, 62.500030517578125 * e, 50.903411865234375 * e, 62.000030517578125 * e, 55.403411865234375 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(58.000030517578125 * e, 122.3125 * e),
        r.bezierCurveTo(59.500030517578125 * e, 97.3125 * e, 59.500030517578125 * e, 97.3125 * e, 61.000030517578125 * e, 72.3125 * e),
        r.bezierCurveTo(91.00003051757812 * e, 89.3125 * e, 91.00003051757812 * e, 89.3125 * e, 121.00003051757812 * e, 106.3125 * e),
        r.closePath(),
        Ce(r, i[1], i[1], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(310.0000305175781 * e, 127.3125 * e),
        r.bezierCurveTo(308.0000305175781 * e, 98.3125 * e, 308.0000305175781 * e, 98.3125 * e, 306.0000305175781 * e, 69.3125 * e),
        r.bezierCurveTo(274.5000305175781 * e, 88.8125 * e, 274.5000305175781 * e, 88.8125 * e, 243.00003051757812 * e, 108.3125 * e),
        r.closePath(),
        Ce(r, i[1], i[1], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(226.00003051757812 * e, 87.85795593261719 * e),
        r.bezierCurveTo(243.50003051757812 * e, 66.85795593261719 * e, 243.50003051757812 * e, 66.85795593261719 * e, 261.0000305175781 * e, 45.85795593261719 * e),
        r.bezierCurveTo(265.0000305175781 * e, 83.85795593261719 * e, 265.0000305175781 * e, 83.85795593261719 * e, 269.0000305175781 * e, 121.85795593261719 * e),
        r.bezierCurveTo(235.00003051757812 * e, 122.85795593261719 * e, 233.00003051757812 * e, 107.85795593261719 * e, 228.00003051757812 * e, 90.85795593261719 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(105.00003051757812 * e, 128.8579559326172 * e),
        r.bezierCurveTo(104.50003051757812 * e, 87.85795593261719 * e, 104.50003051757812 * e, 87.85795593261719 * e, 104.00003051757812 * e, 46.85795593261719 * e),
        r.bezierCurveTo(126.50003051757812 * e, 69.35795593261719 * e, 126.50003051757812 * e, 69.35795593261719 * e, 149.00003051757812 * e, 91.85795593261719 * e),
        r.bezierCurveTo(130.00003051757812 * e, 123.85795593261719 * e, 123.00003051757812 * e, 132.8579559326172 * e, 107.00003051757812 * e, 130.8579559326172 * e),
        r.closePath(),
        Ce(r, i[1], i[1], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(59.000030517578125 * e, 121.85795593261719 * e),
        r.bezierCurveTo(59.500030517578125 * e, 99.35795593261719 * e, 59.500030517578125 * e, 99.35795593261719 * e, 60.000030517578125 * e, 76.85795593261719 * e),
        r.bezierCurveTo(84.00003051757812 * e, 92.35795593261719 * e, 84.00003051757812 * e, 92.35795593261719 * e, 108.00003051757812 * e, 107.85795593261719 * e),
        r.bezierCurveTo(106.00003051757812 * e, 148.8579559326172 * e, 86.00003051757812 * e, 148.8579559326172 * e, 62.000030517578125 * e, 123.85795593261719 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(105.00003051757812 * e, 132.8579559326172 * e),
        r.bezierCurveTo(104.50003051757812 * e, 93.35795593261719 * e, 104.50003051757812 * e, 93.35795593261719 * e, 104.00003051757812 * e, 53.85795593261719 * e),
        r.bezierCurveTo(126.50003051757812 * e, 75.85795593261719 * e, 126.50003051757812 * e, 75.85795593261719 * e, 149.00003051757812 * e, 97.85795593261719 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(311.0000305175781 * e, 126.85795593261719 * e),
        r.bezierCurveTo(309.0000305175781 * e, 101.35795593261719 * e, 309.0000305175781 * e, 101.35795593261719 * e, 307.0000305175781 * e, 75.85795593261719 * e),
        r.bezierCurveTo(271.0000305175781 * e, 96.85795593261719 * e, 271.0000305175781 * e, 96.85795593261719 * e, 235.00003051757812 * e, 117.85795593261719 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(228.00003051757812 * e, 96.85795593261719 * e),
        r.bezierCurveTo(244.50003051757812 * e, 74.85795593261719 * e, 244.50003051757812 * e, 74.85795593261719 * e, 261.0000305175781 * e, 52.85795593261719 * e),
        r.bezierCurveTo(265.5000305175781 * e, 89.85795593261719 * e, 265.5000305175781 * e, 89.85795593261719 * e, 270.0000305175781 * e, 126.85795593261719 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(12.000030517578125 * e, 86.13069152832031 * e),
        r.bezierCurveTo(36.000030517578125 * e, 113.13069152832031 * e, 84.00003051757812 * e, 111.13069152832031 * e, 116.00003051757812 * e, 113.13069152832031 * e),
        r.bezierCurveTo(164.00003051757812 * e, 23.130691528320312 * e, 172.00003051757812 * e, 18.130691528320312 * e, 181.00003051757812 * e, 9.130691528320312 * e),
        r.bezierCurveTo(199.00003051757812 * e, 29.130691528320312 * e, 221.00003051757812 * e, 78.13069152832031 * e, 247.00003051757812 * e, 112.13069152832031 * e),
        r.bezierCurveTo(301.0000305175781 * e, 122.13069152832031 * e, 338.0000305175781 * e, 111.13069152832031 * e, 359.0000305175781 * e, 94.13069152832031 * e),
        r.bezierCurveTo(359.0000305175781 * e, 113.13069152832031 * e, 358.5000305175781 * e, 105.13069152832031 * e, 358.0000305175781 * e, 116.13069152832031 * e),
        r.bezierCurveTo(270.5000305175781 * e, 130.1306915283203 * e, 270.5000305175781 * e, 130.1306915283203 * e, 183.00003051757812 * e, 144.1306915283203 * e),
        r.bezierCurveTo(98.00003051757812 * e, 128.6306915283203 * e, 98.00003051757812 * e, 128.6306915283203 * e, 13.000030517578125 * e, 113.13069152832031 * e),
        r.closePath(),
        Ce(r, i[1], i[1], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(247.00003051757812 * e, 115.76704406738281 * e),
        r.bezierCurveTo(305.0000305175781 * e, 124.76704406738281 * e, 335.0000305175781 * e, 112.76704406738281 * e, 359.0000305175781 * e, 93.76704406738281 * e),
        r.bezierCurveTo(359.5000305175781 * e, 113.26704406738281 * e, 359.5000305175781 * e, 113.26704406738281 * e, 360.0000305175781 * e, 132.7670440673828 * e),
        r.bezierCurveTo(339.0000305175781 * e, 177.7670440673828 * e, 281.0000305175781 * e, 178.7670440673828 * e, 243.00003051757812 * e, 183.7670440673828 * e),
        r.bezierCurveTo(214.50003051757812 * e, 214.2670440673828 * e, 214.50003051757812 * e, 214.2670440673828 * e, 186.00003051757812 * e, 244.7670440673828 * e),
        r.bezierCurveTo(155.00003051757812 * e, 214.2670440673828 * e, 155.00003051757812 * e, 214.2670440673828 * e, 124.00003051757812 * e, 183.7670440673828 * e),
        r.bezierCurveTo(51.000030517578125 * e, 180.7670440673828 * e, 21.000030517578125 * e, 161.7670440673828 * e, 9.000030517578125 * e, 129.7670440673828 * e),
        r.bezierCurveTo(8.500030517578125 * e, 110.76704406738281 * e, 8.500030517578125 * e, 110.76704406738281 * e, 8.000030517578125 * e, 91.76704406738281 * e),
        r.bezierCurveTo(31.000030517578125 * e, 112.76704406738281 * e, 87.00003051757812 * e, 119.76704406738281 * e, 116.00003051757812 * e, 117.76704406738281 * e),
        r.bezierCurveTo(175.00003051757812 * e, 18.767044067382812 * e, 170.00003051757812 * e, 23.767044067382812 * e, 181.00003051757812 * e, 14.767044067382812 * e),
        r.bezierCurveTo(199.00003051757812 * e, 34.76704406738281 * e, 203.00003051757812 * e, 54.76704406738281 * e, 247.00003051757812 * e, 115.76704406738281 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(27.000030517578125 * e, 94.76704406738281 * e),
        r.bezierCurveTo(11.000030517578125 * e, 81.76704406738281 * e, 31.000030517578125 * e, 72.76704406738281 * e, 44.000030517578125 * e, 59.76704406738281 * e),
        r.bezierCurveTo(9.000030517578125 * e, 65.76704406738281 * e, 4.000030517578125 * e, 78.76704406738281 * e, 9.000030517578125 * e, 89.76704406738281 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(352.0000305175781 * e, 100.76705932617188 * e),
        r.bezierCurveTo(362.0000305175781 * e, 92.76705932617188 * e, 352.0000305175781 * e, 84.76705932617188 * e, 340.0000305175781 * e, 68.76705932617188 * e),
        r.bezierCurveTo(360.0000305175781 * e, 69.76705932617188 * e, 364.0000305175781 * e, 79.76705932617188 * e, 364.0000305175781 * e, 94.76705932617188 * e),
        r.closePath(),
        Ce(r, i[1], i[1], +e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(25.000030517578125 * e, 97.94886779785156 * e),
        r.bezierCurveTo(2.000030517578125 * e, 76.94886779785156 * e, 29.000030517578125 * e, 62.94886779785156 * e, 44.000030517578125 * e, 59.94886779785156 * e),
        r.bezierCurveTo(8.000030517578125 * e, 59.94886779785156 * e, -.999969482421875 * e, 81.94886779785156 * e, 4.000030517578125 * e, 92.94886779785156 * e),
        r.closePath(),
        Ce(r, i[3]),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(349.0000305175781 * e, 100.94886779785156 * e),
        r.bezierCurveTo(366.0000305175781 * e, 82.94886779785156 * e, 353.0000305175781 * e, 76.94886779785156 * e, 337.0000305175781 * e, 67.94886779785156 * e),
        r.bezierCurveTo(366.0000305175781 * e, 69.94886779785156 * e, 366.0000305175781 * e, 83.94886779785156 * e, 363.0000305175781 * e, 101.94886779785156 * e),
        r.closePath(),
        Ce(r, i[2], i[3], 10 * e),
        we(r, 46.000030517578125 * e, 137.5852279663086 * e, 9.219544457292887 * e),
        Ce(r, i[4], i[5], +e),
        we(r, 308.0000305175781 * e, 141.5852279663086 * e, 8.54400374531753 * e),
        Ce(r, i[4], i[5], +e),
        we(r, 92.00003051757812 * e, 149.58523559570312 * e, 14.866068747318506 * e),
        Ce(r, i[4], i[5], +e),
        we(r, 262.0000305175781 * e, 148.8579559326172 * e, 15.620499351813308 * e),
        Ce(r, i[4], i[5], +e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(184.00003051757812 * e, 68.85795593261719 * e),
        r.bezierCurveTo(203.00003051757812 * e, 108.85795593261719 * e, 203.00003051757812 * e, 108.85795593261719 * e, 222.00003051757812 * e, 148.8579559326172 * e),
        r.bezierCurveTo(202.50003051757812 * e, 177.8579559326172 * e, 202.50003051757812 * e, 177.8579559326172 * e, 183.00003051757812 * e, 206.8579559326172 * e),
        r.bezierCurveTo(162.00003051757812 * e, 178.8579559326172 * e, 162.00003051757812 * e, 178.8579559326172 * e, 141.00003051757812 * e, 150.8579559326172 * e),
        r.closePath(),
        Ce(r, i[4], i[5], 10 * e),
        r.beginPath(),
        r.lineCap = "round",
        r.lineJoin = "round",
        r.moveTo(183.00003051757812 * e, 104.94886779785156 * e),
        r.bezierCurveTo(192.50003051757812 * e, 125.44886779785156 * e, 192.50003051757812 * e, 125.44886779785156 * e, 202.00003051757812 * e, 145.94886779785156 * e),
        r.bezierCurveTo(192.00003051757812 * e, 163.94886779785156 * e, 192.00003051757812 * e, 163.94886779785156 * e, 182.00003051757812 * e, 181.94886779785156 * e),
        r.bezierCurveTo(172.50003051757812 * e, 164.44886779785156 * e, 172.50003051757812 * e, 164.44886779785156 * e, 163.00003051757812 * e, 146.94886779785156 * e),
        r.closePath(),
        Ce(r, i[6]),
        n
    }
    function Fi() {
        var e, t = performance.now();
        function i(e) {
            for (var t = 0, i = 0, n = 0; i < e.length; i++) {
                var r = e.charAt(i);
                "_" !== r && 5 !== i && ("1" === r && (t += Math.pow(2, n)),
                n++)
            }
            return t
        }
        for (e in render_cosmetics(),
        sprite[Le.RIVER_WAVE] = [IMAGES.RIVER_WAVED, IMAGES.RIVER_WAVEN],
        sprite[Le.RIVER_DECO] = [],
        sprite[Le.RIVER_DECO][Le.DAY] = [],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_010_000")] = [IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO20],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_010_010")] = sprite[Le.RIVER_DECO][Le.DAY][i("000_010_000")],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_011_000")] = sprite[Le.RIVER_DECO][Le.DAY][i("000_010_000")],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_011_010")] = [IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_011_011")] = [IMAGES.DAY_RIVER_COMPO4, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_110_000")] = [IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO20],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_110_010")] = [IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO27],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_110_110")] = [IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO8, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO27],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_111_000")] = [IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_111_111")] = [IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO4, IMAGES.DAY_RIVER_COMPO13],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_010_000")] = [IMAGES.DAY_RIVER_COMPO20],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_010_010")] = [IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_011_000")] = [IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO26],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_110_000")] = [IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")] = [IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_011_010")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_011_011")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_111_011")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_110_010")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_111_000")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_111_010")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_111_011")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_111_110")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("010_111_111")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_111_110")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("000_111_010")] = sprite[Le.RIVER_DECO][Le.DAY][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("011_011_000")] = [IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO26],
        sprite[Le.RIVER_DECO][Le.DAY][i("011_011_010")] = [IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("011_011_011")] = [IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO4, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO15],
        sprite[Le.RIVER_DECO][Le.DAY][i("011_111_000")] = sprite[Le.RIVER_DECO][Le.DAY][i("011_011_010")],
        sprite[Le.RIVER_DECO][Le.DAY][i("011_111_010")] = [IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("011_111_011")] = sprite[Le.RIVER_DECO][Le.DAY][i("011_111_010")],
        sprite[Le.RIVER_DECO][Le.DAY][i("011_111_110")] = sprite[Le.RIVER_DECO][Le.DAY][i("011_111_010")],
        sprite[Le.RIVER_DECO][Le.DAY][i("011_111_111")] = [IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO4, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("110_110_000")] = [IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO12, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("110_110_010")] = [IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("110_110_110")] = [IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("110_111_000")] = [IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO12, IMAGES.DAY_RIVER_COMPO14, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("110_111_110")] = [IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO14, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("110_111_111")] = sprite[Le.RIVER_DECO][Le.DAY][i("110_111_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("110_111_011")] = sprite[Le.RIVER_DECO][Le.DAY][i("110_111_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("110_111_010")] = sprite[Le.RIVER_DECO][Le.DAY][i("110_111_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("111_111_110")] = [IMAGES.DAY_RIVER_COMPO28, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO14, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO1],
        sprite[Le.RIVER_DECO][Le.DAY][i("111_111_011")] = sprite[Le.RIVER_DECO][Le.DAY][i("111_111_110")],
        sprite[Le.RIVER_DECO][Le.DAY][i("111_111_000")] = [IMAGES.DAY_RIVER_COMPO12, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO14],
        sprite[Le.RIVER_DECO][Le.DAY][i("111_111_111")] = [IMAGES.DAY_RIVER_COMPO1, IMAGES.DAY_RIVER_COMPO2, IMAGES.DAY_RIVER_COMPO3, IMAGES.DAY_RIVER_COMPO4, IMAGES.DAY_RIVER_COMPO5, IMAGES.DAY_RIVER_COMPO6, IMAGES.DAY_RIVER_COMPO7, IMAGES.DAY_RIVER_COMPO9, IMAGES.DAY_RIVER_COMPO10, IMAGES.DAY_RIVER_COMPO11, IMAGES.DAY_RIVER_COMPO13, IMAGES.DAY_RIVER_COMPO15, IMAGES.DAY_RIVER_COMPO16, IMAGES.DAY_RIVER_COMPO17, IMAGES.DAY_RIVER_COMPO18, IMAGES.DAY_RIVER_COMPO19, IMAGES.DAY_RIVER_COMPO20, IMAGES.DAY_RIVER_COMPO21, IMAGES.DAY_RIVER_COMPO22, IMAGES.DAY_RIVER_COMPO23, IMAGES.DAY_RIVER_COMPO24, IMAGES.DAY_RIVER_COMPO25, IMAGES.DAY_RIVER_COMPO26, IMAGES.DAY_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.DAY][i("111_111_010")] = sprite[Le.RIVER_DECO][Le.DAY][i("111_111_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT] = [],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_010_000")] = [IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO20],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_010_010")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("000_010_000")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_011_000")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("000_010_000")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_011_010")] = [IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_011_011")] = [IMAGES.NIGHT_RIVER_COMPO4, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_110_000")] = [IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO20],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_110_010")] = [IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO27],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_110_110")] = [IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO8, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO27],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_111_000")] = [IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_111_111")] = [IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO4, IMAGES.NIGHT_RIVER_COMPO13],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_010_000")] = [IMAGES.NIGHT_RIVER_COMPO20],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_010_010")] = [IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_011_000")] = [IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO26],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_000")] = [IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")] = [IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_011_010")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_011_011")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_111_011")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_010")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_111_000")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_111_010")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_111_011")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_111_110")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("010_111_111")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_111_110")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("000_111_010")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("010_110_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("011_011_000")] = [IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO26],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("011_011_010")] = [IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("011_011_011")] = [IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO4, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO15],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("011_111_000")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("011_011_010")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("011_111_010")] = [IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("011_111_011")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("011_111_010")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("011_111_110")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("011_111_010")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("011_111_111")] = [IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO4, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("110_110_000")] = [IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO12, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("110_110_010")] = [IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("110_110_110")] = [IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("110_111_000")] = [IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO12, IMAGES.NIGHT_RIVER_COMPO14, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("110_111_110")] = [IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO14, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("110_111_111")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("110_111_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("110_111_011")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("110_111_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("110_111_010")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("110_111_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("111_111_110")] = [IMAGES.NIGHT_RIVER_COMPO28, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO14, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO1],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("111_111_011")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("111_111_110")],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("111_111_000")] = [IMAGES.NIGHT_RIVER_COMPO12, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO14],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("111_111_111")] = [IMAGES.NIGHT_RIVER_COMPO1, IMAGES.NIGHT_RIVER_COMPO2, IMAGES.NIGHT_RIVER_COMPO3, IMAGES.NIGHT_RIVER_COMPO4, IMAGES.NIGHT_RIVER_COMPO5, IMAGES.NIGHT_RIVER_COMPO6, IMAGES.NIGHT_RIVER_COMPO7, IMAGES.NIGHT_RIVER_COMPO9, IMAGES.NIGHT_RIVER_COMPO10, IMAGES.NIGHT_RIVER_COMPO11, IMAGES.NIGHT_RIVER_COMPO13, IMAGES.NIGHT_RIVER_COMPO15, IMAGES.NIGHT_RIVER_COMPO16, IMAGES.NIGHT_RIVER_COMPO17, IMAGES.NIGHT_RIVER_COMPO18, IMAGES.NIGHT_RIVER_COMPO19, IMAGES.NIGHT_RIVER_COMPO20, IMAGES.NIGHT_RIVER_COMPO21, IMAGES.NIGHT_RIVER_COMPO22, IMAGES.NIGHT_RIVER_COMPO23, IMAGES.NIGHT_RIVER_COMPO24, IMAGES.NIGHT_RIVER_COMPO25, IMAGES.NIGHT_RIVER_COMPO26, IMAGES.NIGHT_RIVER_COMPO28],
        sprite[Le.RIVER_DECO][Le.NIGHT][i("111_111_010")] = sprite[Le.RIVER_DECO][Le.NIGHT][i("111_111_110")],
        sprite[Le.RIVER] = [],
        sprite[Le.RIVER][Le.DAY] = [],
        sprite[Le.RIVER][Le.DAY][i("000_010_000")] = IMAGES.DAY_RIVER_000_010_000,
        sprite[Le.RIVER][Le.DAY][i("000_010_010")] = IMAGES.DAY_RIVER_000_010_010,
        sprite[Le.RIVER][Le.DAY][i("000_011_000")] = IMAGES.DAY_RIVER_000_011_000,
        sprite[Le.RIVER][Le.DAY][i("000_011_010")] = IMAGES.DAY_RIVER_000_011_010,
        sprite[Le.RIVER][Le.DAY][i("000_011_011")] = IMAGES.DAY_RIVER_000_011_011,
        sprite[Le.RIVER][Le.DAY][i("000_110_000")] = IMAGES.DAY_RIVER_000_110_000,
        sprite[Le.RIVER][Le.DAY][i("000_110_010")] = IMAGES.DAY_RIVER_000_110_010,
        sprite[Le.RIVER][Le.DAY][i("000_110_110")] = IMAGES.DAY_RIVER_000_110_110,
        sprite[Le.RIVER][Le.DAY][i("000_111_000")] = IMAGES.DAY_RIVER_000_111_000,
        sprite[Le.RIVER][Le.DAY][i("000_111_010")] = IMAGES.DAY_RIVER_000_111_010,
        sprite[Le.RIVER][Le.DAY][i("000_111_011")] = IMAGES.DAY_RIVER_000_111_011,
        sprite[Le.RIVER][Le.DAY][i("000_111_110")] = IMAGES.DAY_RIVER_000_111_110,
        sprite[Le.RIVER][Le.DAY][i("000_111_111")] = IMAGES.DAY_RIVER_000_111_111,
        sprite[Le.RIVER][Le.DAY][i("010_010_000")] = IMAGES.DAY_RIVER_010_010_000,
        sprite[Le.RIVER][Le.DAY][i("010_010_010")] = IMAGES.DAY_RIVER_010_010_010,
        sprite[Le.RIVER][Le.DAY][i("010_011_000")] = IMAGES.DAY_RIVER_010_011_000,
        sprite[Le.RIVER][Le.DAY][i("010_011_010")] = IMAGES.DAY_RIVER_010_011_010,
        sprite[Le.RIVER][Le.DAY][i("010_011_011")] = IMAGES.DAY_RIVER_010_011_011,
        sprite[Le.RIVER][Le.DAY][i("010_110_000")] = IMAGES.DAY_RIVER_010_110_000,
        sprite[Le.RIVER][Le.DAY][i("010_110_010")] = IMAGES.DAY_RIVER_010_110_010,
        sprite[Le.RIVER][Le.DAY][i("010_110_110")] = IMAGES.DAY_RIVER_010_110_110,
        sprite[Le.RIVER][Le.DAY][i("010_111_000")] = IMAGES.DAY_RIVER_010_111_000,
        sprite[Le.RIVER][Le.DAY][i("010_111_010")] = IMAGES.DAY_RIVER_010_111_010,
        sprite[Le.RIVER][Le.DAY][i("010_111_011")] = IMAGES.DAY_RIVER_010_111_011,
        sprite[Le.RIVER][Le.DAY][i("010_111_110")] = IMAGES.DAY_RIVER_010_111_110,
        sprite[Le.RIVER][Le.DAY][i("010_111_111")] = IMAGES.DAY_RIVER_010_111_111,
        sprite[Le.RIVER][Le.DAY][i("011_011_000")] = IMAGES.DAY_RIVER_011_011_000,
        sprite[Le.RIVER][Le.DAY][i("011_011_010")] = IMAGES.DAY_RIVER_011_011_010,
        sprite[Le.RIVER][Le.DAY][i("011_011_011")] = IMAGES.DAY_RIVER_011_011_011,
        sprite[Le.RIVER][Le.DAY][i("011_111_000")] = IMAGES.DAY_RIVER_011_111_000,
        sprite[Le.RIVER][Le.DAY][i("011_111_010")] = IMAGES.DAY_RIVER_011_111_010,
        sprite[Le.RIVER][Le.DAY][i("011_111_011")] = IMAGES.DAY_RIVER_011_111_011,
        sprite[Le.RIVER][Le.DAY][i("011_111_110")] = IMAGES.DAY_RIVER_011_111_110,
        sprite[Le.RIVER][Le.DAY][i("011_111_111")] = IMAGES.DAY_RIVER_011_111_111,
        sprite[Le.RIVER][Le.DAY][i("110_110_000")] = IMAGES.DAY_RIVER_110_110_000,
        sprite[Le.RIVER][Le.DAY][i("110_110_010")] = IMAGES.DAY_RIVER_110_110_010,
        sprite[Le.RIVER][Le.DAY][i("110_110_110")] = IMAGES.DAY_RIVER_110_110_110,
        sprite[Le.RIVER][Le.DAY][i("110_111_000")] = IMAGES.DAY_RIVER_110_111_000,
        sprite[Le.RIVER][Le.DAY][i("110_111_010")] = IMAGES.DAY_RIVER_110_111_010,
        sprite[Le.RIVER][Le.DAY][i("110_111_011")] = IMAGES.DAY_RIVER_110_111_011,
        sprite[Le.RIVER][Le.DAY][i("110_111_110")] = IMAGES.DAY_RIVER_110_111_110,
        sprite[Le.RIVER][Le.DAY][i("110_111_111")] = IMAGES.DAY_RIVER_110_111_111,
        sprite[Le.RIVER][Le.DAY][i("111_111_011")] = IMAGES.DAY_RIVER_111_111_011,
        sprite[Le.RIVER][Le.DAY][i("111_111_110")] = IMAGES.DAY_RIVER_111_111_110,
        sprite[Le.RIVER][Le.DAY][i("111_111_011")] = IMAGES.DAY_RIVER_111_111_011,
        sprite[Le.RIVER][Le.DAY][i("111_111_000")] = IMAGES.DAY_RIVER_111_111_000,
        sprite[Le.RIVER][Le.DAY][i("111_111_111")] = IMAGES.DAY_RIVER_111_111_111,
        sprite[Le.RIVER][Le.DAY][i("111_111_010")] = IMAGES.DAY_RIVER_111_111_010,
        sprite[Le.RIVER][Le.NIGHT] = [],
        sprite[Le.RIVER][Le.NIGHT][i("000_010_000")] = IMAGES.NIGHT_RIVER_000_010_000,
        sprite[Le.RIVER][Le.NIGHT][i("000_010_010")] = IMAGES.NIGHT_RIVER_000_010_010,
        sprite[Le.RIVER][Le.NIGHT][i("000_011_000")] = IMAGES.NIGHT_RIVER_000_011_000,
        sprite[Le.RIVER][Le.NIGHT][i("000_011_010")] = IMAGES.NIGHT_RIVER_000_011_010,
        sprite[Le.RIVER][Le.NIGHT][i("000_011_011")] = IMAGES.NIGHT_RIVER_000_011_011,
        sprite[Le.RIVER][Le.NIGHT][i("000_110_000")] = IMAGES.NIGHT_RIVER_000_110_000,
        sprite[Le.RIVER][Le.NIGHT][i("000_110_010")] = IMAGES.NIGHT_RIVER_000_110_010,
        sprite[Le.RIVER][Le.NIGHT][i("000_110_110")] = IMAGES.NIGHT_RIVER_000_110_110,
        sprite[Le.RIVER][Le.NIGHT][i("000_111_000")] = IMAGES.NIGHT_RIVER_000_111_000,
        sprite[Le.RIVER][Le.NIGHT][i("000_111_010")] = IMAGES.NIGHT_RIVER_000_111_010,
        sprite[Le.RIVER][Le.NIGHT][i("000_111_011")] = IMAGES.NIGHT_RIVER_000_111_011,
        sprite[Le.RIVER][Le.NIGHT][i("000_111_110")] = IMAGES.NIGHT_RIVER_000_111_110,
        sprite[Le.RIVER][Le.NIGHT][i("000_111_111")] = IMAGES.NIGHT_RIVER_000_111_111,
        sprite[Le.RIVER][Le.NIGHT][i("010_010_000")] = IMAGES.NIGHT_RIVER_010_010_000,
        sprite[Le.RIVER][Le.NIGHT][i("010_010_010")] = IMAGES.NIGHT_RIVER_010_010_010,
        sprite[Le.RIVER][Le.NIGHT][i("010_011_000")] = IMAGES.NIGHT_RIVER_010_011_000,
        sprite[Le.RIVER][Le.NIGHT][i("010_011_010")] = IMAGES.NIGHT_RIVER_010_011_010,
        sprite[Le.RIVER][Le.NIGHT][i("010_011_011")] = IMAGES.NIGHT_RIVER_010_011_011,
        sprite[Le.RIVER][Le.NIGHT][i("010_110_000")] = IMAGES.NIGHT_RIVER_010_110_000,
        sprite[Le.RIVER][Le.NIGHT][i("010_110_010")] = IMAGES.NIGHT_RIVER_010_110_010,
        sprite[Le.RIVER][Le.NIGHT][i("010_110_110")] = IMAGES.NIGHT_RIVER_010_110_110,
        sprite[Le.RIVER][Le.NIGHT][i("010_111_000")] = IMAGES.NIGHT_RIVER_010_111_000,
        sprite[Le.RIVER][Le.NIGHT][i("010_111_010")] = IMAGES.NIGHT_RIVER_010_111_010,
        sprite[Le.RIVER][Le.NIGHT][i("010_111_011")] = IMAGES.NIGHT_RIVER_010_111_011,
        sprite[Le.RIVER][Le.NIGHT][i("010_111_110")] = IMAGES.NIGHT_RIVER_010_111_110,
        sprite[Le.RIVER][Le.NIGHT][i("010_111_111")] = IMAGES.NIGHT_RIVER_010_111_111,
        sprite[Le.RIVER][Le.NIGHT][i("011_011_000")] = IMAGES.NIGHT_RIVER_011_011_000,
        sprite[Le.RIVER][Le.NIGHT][i("011_011_010")] = IMAGES.NIGHT_RIVER_011_011_010,
        sprite[Le.RIVER][Le.NIGHT][i("011_011_011")] = IMAGES.NIGHT_RIVER_011_011_011,
        sprite[Le.RIVER][Le.NIGHT][i("011_111_000")] = IMAGES.NIGHT_RIVER_011_111_000,
        sprite[Le.RIVER][Le.NIGHT][i("011_111_010")] = IMAGES.NIGHT_RIVER_011_111_010,
        sprite[Le.RIVER][Le.NIGHT][i("011_111_011")] = IMAGES.NIGHT_RIVER_011_111_011,
        sprite[Le.RIVER][Le.NIGHT][i("011_111_110")] = IMAGES.NIGHT_RIVER_011_111_110,
        sprite[Le.RIVER][Le.NIGHT][i("011_111_111")] = IMAGES.NIGHT_RIVER_011_111_111,
        sprite[Le.RIVER][Le.NIGHT][i("110_110_000")] = IMAGES.NIGHT_RIVER_110_110_000,
        sprite[Le.RIVER][Le.NIGHT][i("110_110_010")] = IMAGES.NIGHT_RIVER_110_110_010,
        sprite[Le.RIVER][Le.NIGHT][i("110_110_110")] = IMAGES.NIGHT_RIVER_110_110_110,
        sprite[Le.RIVER][Le.NIGHT][i("110_111_000")] = IMAGES.NIGHT_RIVER_110_111_000,
        sprite[Le.RIVER][Le.NIGHT][i("110_111_010")] = IMAGES.NIGHT_RIVER_110_111_010,
        sprite[Le.RIVER][Le.NIGHT][i("110_111_011")] = IMAGES.NIGHT_RIVER_110_111_011,
        sprite[Le.RIVER][Le.NIGHT][i("110_111_110")] = IMAGES.NIGHT_RIVER_110_111_110,
        sprite[Le.RIVER][Le.NIGHT][i("110_111_111")] = IMAGES.NIGHT_RIVER_110_111_111,
        sprite[Le.RIVER][Le.NIGHT][i("111_111_011")] = IMAGES.NIGHT_RIVER_111_111_011,
        sprite[Le.RIVER][Le.NIGHT][i("111_111_110")] = IMAGES.NIGHT_RIVER_111_111_110,
        sprite[Le.RIVER][Le.NIGHT][i("111_111_011")] = IMAGES.NIGHT_RIVER_111_111_011,
        sprite[Le.RIVER][Le.NIGHT][i("111_111_000")] = IMAGES.NIGHT_RIVER_111_111_000,
        sprite[Le.RIVER][Le.NIGHT][i("111_111_111")] = IMAGES.NIGHT_RIVER_111_111_111,
        sprite[Le.RIVER][Le.NIGHT][i("111_111_010")] = IMAGES.NIGHT_RIVER_111_111_010,
        sprite[Le.PICK_REIDITE] = [],
        sprite[Le.PICK_REIDITE][Le.DAY] = IMAGES.PICK_REIDITED,
        sprite[Le.PICK_REIDITE][Le.NIGHT] = IMAGES.PICK_REIDITEN,
        sprite[Le.CARROT] = [],
        sprite[Le.CARROT][Le.DAY] = IMAGES.CARROTD,
        sprite[Le.CARROT][Le.NIGHT] = IMAGES.CARROTN,
        sprite[Le.TOMATO_MINI] = [],
        sprite[Le.TOMATO_MINI][Le.DAY] = IMAGES.TOMATO_MINID,
        sprite[Le.TOMATO_MINI][Le.NIGHT] = IMAGES.TOMATO_MININ,
        sprite[Le.TOMATO] = [],
        sprite[Le.TOMATO][Le.DAY] = IMAGES.TOMATOD,
        sprite[Le.TOMATO][Le.NIGHT] = IMAGES.TOMATON,
        sprite[Le.DRIED_CARROT] = [],
        sprite[Le.DRIED_CARROT][Le.DAY] = IMAGES.CARROT_DRIEDD,
        sprite[Le.DRIED_CARROT][Le.NIGHT] = IMAGES.CARROT_DRIEDN,
        sprite[Le.DRIED_TOMATO_MINI] = [],
        sprite[Le.DRIED_TOMATO_MINI][Le.DAY] = IMAGES.TOMATO_MINI_DRIEDD,
        sprite[Le.DRIED_TOMATO_MINI][Le.NIGHT] = IMAGES.TOMATO_MINI_DRIEDN,
        sprite[Le.WATERMELON] = [],
        sprite[Le.WATERMELON][Le.DAY] = IMAGES.WATERMELOND,
        sprite[Le.WATERMELON][Le.NIGHT] = IMAGES.WATERMELONN,
        sprite[Le.DRIED_WATERMELON] = [],
        sprite[Le.DRIED_WATERMELON][Le.DAY] = IMAGES.DRIED_WATERMELOND,
        sprite[Le.DRIED_WATERMELON][Le.NIGHT] = IMAGES.DRIED_WATERMELONN,
        sprite[Le.ALOE_VERA_GROWN] = [],
        sprite[Le.ALOE_VERA_GROWN][Le.DAY] = IMAGES.ALOE_VERA_GROWND,
        sprite[Le.ALOE_VERA_GROWN][Le.NIGHT] = IMAGES.ALOE_VERA_GROWNN,
        sprite[Le.DRIED_ALOE_VERA] = [],
        sprite[Le.DRIED_ALOE_VERA][Le.DAY] = IMAGES.ALOE_VERA_DRIEDD,
        sprite[Le.DRIED_ALOE_VERA][Le.NIGHT] = IMAGES.ALOE_VERAN_DRIEDN,
        sprite[Le.CACTUS] = [],
        sprite[Le.CACTUS][Le.DAY] = [IMAGES.CACTUSD],
        sprite[Le.CACTUS][Le.NIGHT] = [IMAGES.CACTUSN],
        sprite[Le.REIDITE_WALL] = [],
        sprite[Le.REIDITE_WALL][Le.DAY] = IMAGES.REIDITE_WALLD,
        sprite[Le.REIDITE_WALL][Le.NIGHT] = IMAGES.REIDITE_WALLN,
        sprite[Le.REIDITE_SPIKE] = [],
        sprite[Le.REIDITE_SPIKE][Le.DAY] = g(It(.8 * We, !Ve.boostfps, ["#dc5252", "#be332e", "#9facaa", "#c03a29", "#9b3422", "#db4935", "#db4935", "#f06351", "#f06351"])),
        sprite[Le.REIDITE_SPIKE][Le.NIGHT] = g(It(.8 * We, !Ve.boostfps, ["#dc5252", "#be332e", "#546d77", "#c03a29", "#9b3422", "#db4935", "#db4935", "#83ddd4", "#f06351"])),
        sprite[Le.REIDITE_SPIKE2] = [],
        sprite[Le.REIDITE_SPIKE2][Le.DAY] = g(It(.8 * We, !Ve.boostfps, ["#00c291", "#00af6d", "#9facaa", "#c03a29", "#9b3422", "#db4935", "#db4935", "#f06351", "#f06351"])),
        sprite[Le.REIDITE_SPIKE2][Le.NIGHT] = g(It(.8 * We, !Ve.boostfps, ["#00c291", "#00af6d", "#546d77", "#c03a29", "#9b3422", "#db4935", "#db4935", "#f06351", "#f06351"])),
        sprite[Le.REIDITE_DOOR] = [],
        sprite[Le.REIDITE_DOOR][Le.DAY] = IMAGES.REIDITE_DOORD,
        sprite[Le.REIDITE_DOOR][Le.NIGHT] = IMAGES.REIDITE_DOORN,
        sprite[Le.WOOD_DOOR_SPIKE] = [],
        sprite[Le.WOOD_DOOR_SPIKE][Le.DAY] = IMAGES.WOOD_DOOR_SPIKED,
        sprite[Le.WOOD_DOOR_SPIKE][Le.NIGHT] = IMAGES.WOOD_DOOR_SPIKEN,
        sprite[Le.STONE_DOOR_SPIKE] = [],
        sprite[Le.STONE_DOOR_SPIKE][Le.DAY] = IMAGES.STONE_DOOR_SPIKED,
        sprite[Le.STONE_DOOR_SPIKE][Le.NIGHT] = IMAGES.STONE_DOOR_SPIKEN,
        sprite[Le.GOLD_DOOR_SPIKE] = [],
        sprite[Le.GOLD_DOOR_SPIKE][Le.DAY] = IMAGES.GOLD_DOOR_SPIKED,
        sprite[Le.GOLD_DOOR_SPIKE][Le.NIGHT] = IMAGES.GOLD_DOOR_SPIKEN,
        sprite[Le.DIAMOND_DOOR_SPIKE] = [],
        sprite[Le.DIAMOND_DOOR_SPIKE][Le.DAY] = IMAGES.DIAMOND_DOOR_SPIKED,
        sprite[Le.DIAMOND_DOOR_SPIKE][Le.NIGHT] = IMAGES.DIAMOND_DOOR_SPIKEN,
        sprite[Le.AMETHYST_DOOR_SPIKE] = [],
        sprite[Le.AMETHYST_DOOR_SPIKE][Le.DAY] = IMAGES.AMETHYST_DOOR_SPIKED,
        sprite[Le.AMETHYST_DOOR_SPIKE][Le.NIGHT] = IMAGES.AMETHYST_DOOR_SPIKEN,
        sprite[Le.REIDITE_DOOR_SPIKE] = [],
        sprite[Le.REIDITE_DOOR_SPIKE][Le.DAY] = IMAGES.REIDITE_DOOR_SPIKED,
        sprite[Le.REIDITE_DOOR_SPIKE][Le.NIGHT] = IMAGES.REIDITE_DOOR_SPIKEN,
        sprite[Le.GOLDEN_HEN] = [],
        sprite[Le.GOLDEN_HEN][Le.DAY] = IMAGES.HEND,
        sprite[Le.GOLDEN_HEN][Le.NIGHT] = IMAGES.HENN,
        sprite[Le.GOLDEN_CHICKEN] = [],
        sprite[Le.GOLDEN_CHICKEN][Le.DAY] = IMAGES.CHICKEND,
        sprite[Le.GOLDEN_CHICKEN][Le.NIGHT] = IMAGES.CHICKENN,
        sprite[Le.HAMMER_REIDITE] = [],
        sprite[Le.HAMMER_REIDITE][Le.DAY] = IMAGES.HAMMER_REIDITED,
        sprite[Le.HAMMER_REIDITE][Le.NIGHT] = IMAGES.HAMMER_REIDITEN,
        sprite[Le.HURT_GOLDEN_HEN] = IMAGES.HURT_GOLDEN_HEN,
        sprite[Le.HURT_GOLDEN_CHICKEN] = IMAGES.HURT_GOLDEN_CHICKEN,
        sprite[Le.FOG] = [],
        sprite[Le.FOG][Le.DAY] = [],
        sprite[Le.FOG][Le.NIGHT] = [],
        sprite[Le.FOG][Le.DAY].push(IMAGES.FOG0D),
        sprite[Le.FOG][Le.DAY].push(IMAGES.FOG1D),
        sprite[Le.FOG][Le.DAY].push(IMAGES.FOG2D),
        sprite[Le.FOG][Le.NIGHT].push(IMAGES.FOG0N),
        sprite[Le.FOG][Le.NIGHT].push(IMAGES.FOG1N),
        sprite[Le.FOG][Le.NIGHT].push(IMAGES.FOG2N),
        sprite[Le.FOD] = [],
        sprite[Le.FOD][Le.DAY] = [],
        sprite[Le.FOD][Le.NIGHT] = [],
        sprite[Le.FOD][Le.DAY].push(IMAGES.FOD0D),
        sprite[Le.FOD][Le.DAY].push(IMAGES.FOD1D),
        sprite[Le.FOD][Le.DAY].push(IMAGES.FOD2D),
        sprite[Le.FOD][Le.NIGHT].push(IMAGES.FOD0N),
        sprite[Le.FOD][Le.NIGHT].push(IMAGES.FOD1N),
        sprite[Le.FOD][Le.NIGHT].push(IMAGES.FOD2N),
        sprite[Le.MARKER] = [],
        sprite[Le.MARKER][Le.DAY] = [],
        sprite[Le.MARKER][Le.NIGHT] = [],
        sprite[Le.MARKER][Le.DAY].push(IMAGES.MARKER0D),
        sprite[Le.MARKER][Le.DAY].push(IMAGES.MARKER1D),
        sprite[Le.MARKER][Le.DAY].push(IMAGES.MARKER2D),
        sprite[Le.MARKER][Le.DAY].push(IMAGES.MARKER3D),
        sprite[Le.MARKER][Le.NIGHT].push(IMAGES.MARKER0N),
        sprite[Le.MARKER][Le.NIGHT].push(IMAGES.MARKER1N),
        sprite[Le.MARKER][Le.NIGHT].push(IMAGES.MARKER2N),
        sprite[Le.MARKER][Le.NIGHT].push(IMAGES.MARKER3N),
        sprite[Le.LAVA_DRAGON] = [],
        sprite[Le.LAVA_DRAGON][Le.DAY] = IMAGES.LAVA_DRAGOND,
        sprite[Le.LAVA_DRAGON][Le.NIGHT] = IMAGES.LAVA_DRAGONN,
        sprite[Le.LAVA_WING_LEFT] = [],
        sprite[Le.LAVA_WING_LEFT][Le.DAY] = IMAGES.LAVA_WING_LEFTD,
        sprite[Le.LAVA_WING_LEFT][Le.NIGHT] = IMAGES.LAVA_WING_LEFTN,
        sprite[Le.LAVA_WING_RIGHT] = [],
        sprite[Le.LAVA_WING_RIGHT][Le.DAY] = IMAGES.LAVA_WING_RIGHTD,
        sprite[Le.LAVA_WING_RIGHT][Le.NIGHT] = IMAGES.LAVA_WING_RIGHTN,
        sprite[Le.HURT_LAVA_DRAGON] = IMAGES.HURT_LAVA_DRAGON,
        sprite[Le.HURT_LAVA_WING_LEFT] = IMAGES.HURT_LAVA_WING_LEFT,
        sprite[Le.HURT_LAVA_WING_RIGHT] = IMAGES.HURT_LAVA_WING_RIGHT,
        sprite[Le.DIAMOND_PROTECTION] = [],
        sprite[Le.DIAMOND_PROTECTION][Le.DAY] = IMAGES.DIAMOND_PROTECTIOND,
        sprite[Le.DIAMOND_PROTECTION][Le.NIGHT] = IMAGES.DIAMOND_PROTECTIONN,
        sprite[Le.GLOVES_DIAMOND_PROTECTION] = [],
        sprite[Le.GLOVES_DIAMOND_PROTECTION][Le.DAY] = IMAGES.HAND_DIAMOND_PROTECTIOND,
        sprite[Le.GLOVES_DIAMOND_PROTECTION][Le.NIGHT] = IMAGES.HAND_DIAMOND_PROTECTIONN,
        sprite[Le.AMETHYST_PROTECTION] = [],
        sprite[Le.AMETHYST_PROTECTION][Le.DAY] = IMAGES.AMETHYST_PROTECTIOND,
        sprite[Le.AMETHYST_PROTECTION][Le.NIGHT] = IMAGES.AMETHYST_PROTECTIONN,
        sprite[Le.GLOVES_AMETHYST_PROTECTION] = [],
        sprite[Le.GLOVES_AMETHYST_PROTECTION][Le.DAY] = IMAGES.HAND_DIAMOND_PROTECTIOND,
        sprite[Le.GLOVES_AMETHYST_PROTECTION][Le.NIGHT] = IMAGES.HAND_DIAMOND_PROTECTIONN,
        sprite[Le.REIDITE_HELMET] = [],
        sprite[Le.REIDITE_HELMET][Le.DAY] = IMAGES.REIDITE_HELMETD,
        sprite[Le.REIDITE_HELMET][Le.NIGHT] = IMAGES.REIDITE_HELMETN,
        sprite[Le.REIDITE_SWORD] = [],
        sprite[Le.REIDITE_SWORD][Le.DAY] = IMAGES.REIDITE_SWORDD,
        sprite[Le.REIDITE_SWORD][Le.NIGHT] = IMAGES.REIDITE_SWORDN,
        sprite[Le.REIDITE_SPEAR] = [],
        sprite[Le.REIDITE_SPEAR][Le.DAY] = IMAGES.REIDITE_SPEARD,
        sprite[Le.REIDITE_SPEAR][Le.NIGHT] = IMAGES.REIDITE_SPEARN,
        sprite[Le.LAVA_SPEAR] = [],
        sprite[Le.LAVA_SPEAR][Le.DAY] = IMAGES.LAVA_SPEARD,
        sprite[Le.LAVA_SPEAR][Le.NIGHT] = IMAGES.LAVA_SPEARN,
        sprite[Le.LAVA_SWORD] = [],
        sprite[Le.LAVA_SWORD][Le.DAY] = IMAGES.LAVA_SWORDD,
        sprite[Le.LAVA_SWORD][Le.NIGHT] = IMAGES.LAVA_SWORDN,
        sprite[Le.LAVA_HELMET] = [],
        sprite[Le.LAVA_HELMET][Le.DAY] = IMAGES.LAVA_HELMETD,
        sprite[Le.LAVA_HELMET][Le.NIGHT] = IMAGES.LAVA_HELMETN,
        sprite[Le.WITCH] = [],
        sprite[Le.WITCH][Le.DAY] = IMAGES.WITCHD,
        sprite[Le.WITCH][Le.NIGHT] = IMAGES.WITCHN,
        sprite[Le.NIMBUS] = [],
        sprite[Le.NIMBUS][Le.DAY] = IMAGES.NIMBUSD,
        sprite[Le.NIMBUS][Le.NIGHT] = IMAGES.NIMBUSN,
        sprite[Le.WOOD_SHIELD] = [],
        sprite[Le.WOOD_SHIELD][Le.DAY] = IMAGES.WOOD_SHIELDD,
        sprite[Le.WOOD_SHIELD][Le.NIGHT] = IMAGES.WOOD_SHIELDN,
        sprite[Le.STONE_SHIELD] = [],
        sprite[Le.STONE_SHIELD][Le.DAY] = IMAGES.STONE_SHIELDD,
        sprite[Le.STONE_SHIELD][Le.NIGHT] = IMAGES.STONE_SHIELDN,
        sprite[Le.GOLD_SHIELD] = [],
        sprite[Le.GOLD_SHIELD][Le.DAY] = IMAGES.GOLD_SHIELDD,
        sprite[Le.GOLD_SHIELD][Le.NIGHT] = IMAGES.GOLD_SHIELDN,
        sprite[Le.DIAMOND_SHIELD] = [],
        sprite[Le.DIAMOND_SHIELD][Le.DAY] = IMAGES.DIAMOND_SHIELDD,
        sprite[Le.DIAMOND_SHIELD][Le.NIGHT] = IMAGES.DIAMOND_SHIELDN,
        sprite[Le.AMETHYST_SHIELD] = [],
        sprite[Le.AMETHYST_SHIELD][Le.DAY] = IMAGES.AMETHYST_SHIELDD,
        sprite[Le.AMETHYST_SHIELD][Le.NIGHT] = IMAGES.AMETHYST_SHIELDN,
        sprite[Le.REIDITE_SHIELD] = [],
        sprite[Le.REIDITE_SHIELD][Le.DAY] = IMAGES.REIDITE_SHIELDD,
        sprite[Le.REIDITE_SHIELD][Le.NIGHT] = IMAGES.REIDITE_SHIELDN,
        sprite[Le.WOOD_ARROW] = [],
        sprite[Le.WOOD_ARROW][Le.DAY] = IMAGES.WOOD_ARROWD,
        sprite[Le.WOOD_ARROW][Le.NIGHT] = IMAGES.WOOD_ARROWN,
        sprite[Le.WOOD_BOW] = [],
        sprite[Le.WOOD_BOW][Le.DAY] = IMAGES.WOOD_BOWD,
        sprite[Le.WOOD_BOW][Le.NIGHT] = IMAGES.WOOD_BOWN,
        sprite[Le.STONE_ARROW] = [],
        sprite[Le.STONE_ARROW][Le.DAY] = IMAGES.STONE_ARROWD,
        sprite[Le.STONE_ARROW][Le.NIGHT] = IMAGES.STONE_ARROWN,
        sprite[Le.STONE_BOW] = [],
        sprite[Le.STONE_BOW][Le.DAY] = IMAGES.STONE_BOWD,
        sprite[Le.STONE_BOW][Le.NIGHT] = IMAGES.STONE_BOWN,
        sprite[Le.GOLD_ARROW] = [],
        sprite[Le.GOLD_ARROW][Le.DAY] = IMAGES.GOLD_ARROWD,
        sprite[Le.GOLD_ARROW][Le.NIGHT] = IMAGES.GOLD_ARROWN,
        sprite[Le.GOLD_BOW] = [],
        sprite[Le.GOLD_BOW][Le.DAY] = IMAGES.GOLD_BOWD,
        sprite[Le.GOLD_BOW][Le.NIGHT] = IMAGES.GOLD_BOWN,
        sprite[Le.DIAMOND_ARROW] = [],
        sprite[Le.DIAMOND_ARROW][Le.DAY] = IMAGES.DIAMOND_ARROWD,
        sprite[Le.DIAMOND_ARROW][Le.NIGHT] = IMAGES.DIAMOND_ARROWN,
        sprite[Le.DIAMOND_BOW] = [],
        sprite[Le.DIAMOND_BOW][Le.DAY] = IMAGES.DIAMOND_BOWD,
        sprite[Le.DIAMOND_BOW][Le.NIGHT] = IMAGES.DIAMOND_BOWN,
        sprite[Le.AMETHYST_ARROW] = [],
        sprite[Le.AMETHYST_ARROW][Le.DAY] = IMAGES.AMETHYST_ARROWD,
        sprite[Le.AMETHYST_ARROW][Le.NIGHT] = IMAGES.AMETHYST_ARROWN,
        sprite[Le.AMETHYST_BOW] = [],
        sprite[Le.AMETHYST_BOW][Le.DAY] = IMAGES.AMETHYST_BOWD,
        sprite[Le.AMETHYST_BOW][Le.NIGHT] = IMAGES.AMETHYST_BOWN,
        sprite[Le.REIDITE_ARROW] = [],
        sprite[Le.REIDITE_ARROW][Le.DAY] = IMAGES.REIDITE_ARROWD,
        sprite[Le.REIDITE_ARROW][Le.NIGHT] = IMAGES.REIDITE_ARROWN,
        sprite[Le.REIDITE_BOW] = [],
        sprite[Le.REIDITE_BOW][Le.DAY] = IMAGES.REIDITE_BOWD,
        sprite[Le.REIDITE_BOW][Le.NIGHT] = IMAGES.REIDITE_BOWN,
        sprite[Le.DRAGON_ARROW] = [],
        sprite[Le.DRAGON_ARROW][Le.DAY] = IMAGES.DRAGON_ARROWD,
        sprite[Le.DRAGON_ARROW][Le.NIGHT] = IMAGES.DRAGON_ARROWN,
        sprite[Le.DRAGON_BOW] = [],
        sprite[Le.DRAGON_BOW][Le.DAY] = IMAGES.DRAGON_BOWD,
        sprite[Le.DRAGON_BOW][Le.NIGHT] = IMAGES.DRAGON_BOWN,
        sprite[Le.TURBAN1] = [],
        sprite[Le.TURBAN1][Le.DAY] = IMAGES.TURBAN1D,
        sprite[Le.TURBAN1][Le.NIGHT] = IMAGES.TURBAN1N,
        sprite[Le.TURBAN2] = [],
        sprite[Le.TURBAN2][Le.DAY] = IMAGES.TURBAN2D,
        sprite[Le.TURBAN2][Le.NIGHT] = IMAGES.TURBAN2N,
        sprite[Le.REIDITE_PROTECTION] = [],
        sprite[Le.REIDITE_PROTECTION][Le.DAY] = IMAGES.REIDITE_PROTECTIOND,
        sprite[Le.REIDITE_PROTECTION][Le.NIGHT] = IMAGES.REIDITE_PROTECTIONN,
        sprite[Le.GLOVES_REIDITE_PROTECTION] = [],
        sprite[Le.GLOVES_REIDITE_PROTECTION][Le.DAY] = IMAGES.HAND_REIDITE_PROTECTIOND,
        sprite[Le.GLOVES_REIDITE_PROTECTION][Le.NIGHT] = IMAGES.HAND_REIDITE_PROTECTIONN,
        sprite[Le.LAVA_SHINGLE] = [],
        sprite[Le.LAVA_SHINGLE][Le.DAY] = [],
        sprite[Le.LAVA_SHINGLE][Le.NIGHT] = [],
        sprite[Le.LAVA_SHINGLE][Le.DAY].push(IMAGES.LAVA_SHINGLES0D),
        sprite[Le.LAVA_SHINGLE][Le.DAY].push(IMAGES.LAVA_SHINGLES1D),
        sprite[Le.LAVA_SHINGLE][Le.NIGHT].push(IMAGES.LAVA_SHINGLES1D),
        sprite[Le.LAVA_SHINGLE][Le.NIGHT].push(IMAGES.LAVA_SHINGLES1N),
        sprite[Le.LAVA_BUBBLE] = [],
        sprite[Le.LAVA_BUBBLE][Le.DAY] = [],
        sprite[Le.LAVA_BUBBLE][Le.NIGHT] = [],
        sprite[Le.LAVA_BUBBLE][Le.DAY].push(IMAGES.LAVA_BUBLE0D),
        sprite[Le.LAVA_BUBBLE][Le.DAY].push(IMAGES.LAVA_BUBLE1D),
        sprite[Le.LAVA_BUBBLE][Le.DAY].push(IMAGES.LAVA_BUBLE2D),
        sprite[Le.LAVA_BUBBLE][Le.NIGHT].push(IMAGES.LAVA_BUBLE0N),
        sprite[Le.LAVA_BUBBLE][Le.NIGHT].push(IMAGES.LAVA_BUBLE1N),
        sprite[Le.LAVA_BUBBLE][Le.NIGHT].push(IMAGES.LAVA_BUBLE2N),
        sprite[Le.PITCHFORK] = [],
        sprite[Le.PITCHFORK][Le.DAY] = IMAGES.PITCHFORKD,
        sprite[Le.PITCHFORK][Le.NIGHT] = IMAGES.PITCHFORKN,
        sprite[Le.PITCHFORK2] = [],
        sprite[Le.PITCHFORK2][Le.DAY] = IMAGES.PITCHFORK2D,
        sprite[Le.PITCHFORK2][Le.NIGHT] = IMAGES.PITCHFORK2N,
        sprite[Le.EMERALD] = [],
        sprite[Le.EMERALD][Le.DAY] = [],
        sprite[Le.EMERALD][Le.NIGHT] = [],
        sprite[Le.EMERALD][Le.DAY].push(IMAGES.EMERALD0D),
        sprite[Le.EMERALD][Le.DAY].push(IMAGES.EMERALD1D),
        sprite[Le.EMERALD][Le.DAY].push(IMAGES.EMERALD2D),
        sprite[Le.EMERALD][Le.NIGHT].push(IMAGES.EMERALD0N),
        sprite[Le.EMERALD][Le.NIGHT].push(IMAGES.EMERALD1N),
        sprite[Le.EMERALD][Le.NIGHT].push(IMAGES.EMERALD2N),
        sprite[Le.REIDITE] = [],
        sprite[Le.REIDITE][Le.DAY] = [],
        sprite[Le.REIDITE][Le.NIGHT] = [],
        sprite[Le.REIDITE][Le.DAY].push(IMAGES.REIDITE0D),
        sprite[Le.REIDITE][Le.DAY].push(IMAGES.REIDITE1D),
        sprite[Le.REIDITE][Le.DAY].push(IMAGES.REIDITE2D),
        sprite[Le.REIDITE][Le.NIGHT].push(IMAGES.REIDITE0N),
        sprite[Le.REIDITE][Le.NIGHT].push(IMAGES.REIDITE1N),
        sprite[Le.REIDITE][Le.NIGHT].push(IMAGES.REIDITE2N),
        sprite[Le.MAGMA] = [],
        sprite[Le.MAGMA][Le.DAY] = [],
        sprite[Le.MAGMA][Le.NIGHT] = [],
        sprite[Le.MAGMA][Le.DAY].push(IMAGES.MAGMA1D),
        sprite[Le.MAGMA][Le.DAY].push(IMAGES.MAGMA2D),
        sprite[Le.MAGMA][Le.DAY].push(IMAGES.MAGMA3D),
        sprite[Le.MAGMA][Le.DAY].push(IMAGES.MAGMA4D),
        sprite[Le.MAGMA][Le.DAY].push(IMAGES.MAGMA5D),
        sprite[Le.MAGMA][Le.DAY].push(IMAGES.MAGMA6D),
        sprite[Le.MAGMA][Le.NIGHT].push(IMAGES.MAGMA1N),
        sprite[Le.MAGMA][Le.NIGHT].push(IMAGES.MAGMA2N),
        sprite[Le.MAGMA][Le.NIGHT].push(IMAGES.MAGMA3N),
        sprite[Le.MAGMA][Le.NIGHT].push(IMAGES.MAGMA4N),
        sprite[Le.MAGMA][Le.NIGHT].push(IMAGES.MAGMA5N),
        sprite[Le.MAGMA][Le.NIGHT].push(IMAGES.MAGMA6N),
        sprite[Le.LAVA_GROUND] = [],
        sprite[Le.LAVA_GROUND][Le.DAY] = [],
        sprite[Le.LAVA_GROUND][Le.NIGHT] = [],
        sprite[Le.LAVA_GROUND][Le.DAY].push(IMAGES.LAVA_GROUND1D),
        sprite[Le.LAVA_GROUND][Le.DAY].push(IMAGES.LAVA_GROUND2D),
        sprite[Le.LAVA_GROUND][Le.DAY].push(IMAGES.LAVA_GROUND3D),
        sprite[Le.LAVA_GROUND][Le.DAY].push(IMAGES.LAVA_GROUND4D),
        sprite[Le.LAVA_GROUND][Le.DAY].push(IMAGES.LAVA_GROUND5D),
        sprite[Le.LAVA_GROUND][Le.DAY].push(IMAGES.LAVA_GROUND6D),
        sprite[Le.LAVA_GROUND][Le.NIGHT].push(IMAGES.LAVA_GROUND1N),
        sprite[Le.LAVA_GROUND][Le.NIGHT].push(IMAGES.LAVA_GROUND2N),
        sprite[Le.LAVA_GROUND][Le.NIGHT].push(IMAGES.LAVA_GROUND3N),
        sprite[Le.LAVA_GROUND][Le.NIGHT].push(IMAGES.LAVA_GROUND4N),
        sprite[Le.LAVA_GROUND][Le.NIGHT].push(IMAGES.LAVA_GROUND5N),
        sprite[Le.LAVA_GROUND][Le.NIGHT].push(IMAGES.LAVA_GROUND6N),
        sprite[Le.FIRE_MOB] = [],
        sprite[Le.FIRE_MOB][Le.DAY] = IMAGES.FIRE_MOBD,
        sprite[Le.FIRE_MOB][Le.NIGHT] = IMAGES.FIRE_MOBN,
        sprite[Le.HURT_FIRE_MOB] = IMAGES.FIRE_MOB_HURT,
        sprite[Le.MACHETE] = [],
        sprite[Le.MACHETE][Le.DAY] = IMAGES.MACHETED,
        sprite[Le.MACHETE][Le.NIGHT] = IMAGES.MACHETEN,
        sprite[Le.BOAT] = [],
        sprite[Le.BOAT][Le.DAY] = IMAGES.BOATD,
        sprite[Le.BOAT][Le.NIGHT] = IMAGES.BOATN,
        sprite[Le.SLED] = [],
        sprite[Le.SLED][Le.DAY] = IMAGES.SLEDD,
        sprite[Le.SLED][Le.NIGHT] = IMAGES.SLEDN,
        sprite[Le.PLANE] = [],
        sprite[Le.PLANE][Le.DAY] = IMAGES.PLANED,
        sprite[Le.PLANE][Le.NIGHT] = IMAGES.PLANEN,
        sprite[Le.PENGUIN] = [],
        sprite[Le.PENGUIN][Le.DAY] = IMAGES.PENGUIND,
        sprite[Le.PENGUIN][Le.NIGHT] = IMAGES.PENGUINN,
        sprite[Le.HURT_PENGUIN] = IMAGES.HURT_PENGUIN,
        sprite[Le.SAND_WORM1] = [],
        sprite[Le.SAND_WORM1][Le.DAY] = IMAGES.SAND_WORM1D,
        sprite[Le.SAND_WORM1][Le.NIGHT] = IMAGES.SAND_WORM1N,
        sprite[Le.SAND_WORM2] = [],
        sprite[Le.SAND_WORM2][Le.DAY] = IMAGES.SAND_WORM2D,
        sprite[Le.SAND_WORM2][Le.NIGHT] = IMAGES.SAND_WORM2N,
        sprite[Le.HURT_SAND_WORM0] = IMAGES.HURT_SAND_WORM0,
        sprite[Le.HURT_SAND_WORM1] = IMAGES.HURT_SAND_WORM1,
        sprite[Le.HURT_SAND_WORM2] = IMAGES.HURT_SAND_WORM2,
        sprite[Le.SCORPION] = [],
        sprite[Le.SCORPION][Le.DAY] = IMAGES.SCORPIOND,
        sprite[Le.SCORPION][Le.NIGHT] = IMAGES.SCORPIONN,
        sprite[Le.SCORPION_HAND_LEFT] = [],
        sprite[Le.SCORPION_HAND_LEFT][Le.DAY] = IMAGES.SCORPION_HAND_LEFTD,
        sprite[Le.SCORPION_HAND_LEFT][Le.NIGHT] = IMAGES.SCORPION_HAND_LEFTN,
        sprite[Le.SCORPION_HAND_RIGHT] = [],
        sprite[Le.SCORPION_HAND_RIGHT][Le.DAY] = IMAGES.SCORPION_HAND_RIGHTD,
        sprite[Le.SCORPION_HAND_RIGHT][Le.NIGHT] = IMAGES.SCORPION_HAND_RIGHTN,
        sprite[Le.HURT_SCORPION] = IMAGES.HURT_SCORPION,
        sprite[Le.HURT_SCORPION_HAND_RIGHT] = IMAGES.HURT_SCORPION_HAND_RIGHT,
        sprite[Le.HURT_SCORPION_HAND_LEFT] = IMAGES.HURT_SCORPION_HAND_LEFT,
        sprite[Le.CRAB_BOSS_ATTACK] = [],
        sprite[Le.CRAB_BOSS_ATTACK][Le.DAY] = IMAGES.CRAB_BOSS_ATTACKD,
        sprite[Le.CRAB_BOSS_ATTACK][Le.NIGHT] = IMAGES.CRAB_BOSS_ATTACKN,
        sprite[Le.CRAB_BOSS_TAMED] = [],
        sprite[Le.CRAB_BOSS_TAMED][Le.DAY] = IMAGES.CRAB_BOSS_TAMEDD,
        sprite[Le.CRAB_BOSS_TAMED][Le.NIGHT] = IMAGES.CRAB_BOSS_TAMEDN,
        sprite[Le.CRAB_BOSS] = [],
        sprite[Le.CRAB_BOSS][Le.DAY] = IMAGES.CRAB_BOSSD,
        sprite[Le.CRAB_BOSS][Le.NIGHT] = IMAGES.CRAB_BOSSN,
        sprite[Le.CRAB_BOSS_CLAW_LEFT] = [],
        sprite[Le.CRAB_BOSS_CLAW_LEFT][Le.DAY] = IMAGES.CRAB_BOSS_CLAW_LEFTD,
        sprite[Le.CRAB_BOSS_CLAW_LEFT][Le.NIGHT] = IMAGES.CRAB_BOSS_CLAW_LEFTN,
        sprite[Le.CRAB_BOSS_CLAW_RIGHT] = [],
        sprite[Le.CRAB_BOSS_CLAW_RIGHT][Le.DAY] = IMAGES.CRAB_BOSS_CLAW_RIGHTD,
        sprite[Le.CRAB_BOSS_CLAW_RIGHT][Le.NIGHT] = IMAGES.CRAB_BOSS_CLAW_RIGHTN,
        sprite[Le.CRAB_BOSS_CLAW_LEFT_ATTACK] = [],
        sprite[Le.CRAB_BOSS_CLAW_LEFT_ATTACK][Le.DAY] = IMAGES.CRAB_BOSS_CLAW_LEFT_ATTACKD,
        sprite[Le.CRAB_BOSS_CLAW_LEFT_ATTACK][Le.NIGHT] = IMAGES.CRAB_BOSS_CLAW_LEFT_ATTACKN,
        sprite[Le.CRAB_BOSS_CLAW_RIGHT_ATTACK] = [],
        sprite[Le.CRAB_BOSS_CLAW_RIGHT_ATTACK][Le.DAY] = IMAGES.CRAB_BOSS_CLAW_RIGHT_ATTACKD,
        sprite[Le.CRAB_BOSS_CLAW_RIGHT_ATTACK][Le.NIGHT] = IMAGES.CRAB_BOSS_CLAW_RIGHT_ATTACKN,
        sprite[Le.HURT_CRAB_BOSS] = IMAGES.HURT_CRAB_BOSS,
        sprite[Le.HURT_CRAB_BOSS_CLAW_LEFT] = IMAGES.HURT_CRAB_BOSS_CLAW_LEFT,
        sprite[Le.HURT_CRAB_BOSS_CLAW_RIGHT] = IMAGES.HURT_CRAB_BOSS_CLAW_RIGHT,
        sprite[Le.HEAL_CRAB_BOSS] = IMAGES.HEAL_CRAB_BOSS,
        sprite[Le.HEAL_CRAB_BOSS_CLAW_LEFT] = IMAGES.HEAL_CRAB_BOSS_CLAW_LEFT,
        sprite[Le.HEAL_CRAB_BOSS_CLAW_RIGHT] = IMAGES.HEAL_CRAB_BOSS_CLAW_RIGHT,
        sprite[Le.BABY_MAMMOTH_ATTACK] = [],
        sprite[Le.BABY_MAMMOTH_ATTACK][Le.DAY] = IMAGES.BABY_MAMMOTH_ATTACKD,
        sprite[Le.BABY_MAMMOTH_ATTACK][Le.NIGHT] = IMAGES.BABY_MAMMOTH_ATTACKN,
        sprite[Le.BABY_MAMMOTH] = [],
        sprite[Le.BABY_MAMMOTH][Le.DAY] = IMAGES.BABY_MAMMOTHD,
        sprite[Le.BABY_MAMMOTH][Le.NIGHT] = IMAGES.BABY_MAMMOTHN,
        sprite[Le.MAMMOTH] = [],
        sprite[Le.MAMMOTH][Le.DAY] = IMAGES.MAMMOTHD,
        sprite[Le.MAMMOTH][Le.NIGHT] = IMAGES.MAMMOTHN,
        sprite[Le.BABY_MAMMOTH_TAMED] = [],
        sprite[Le.BABY_MAMMOTH_TAMED][Le.DAY] = IMAGES.BABY_MAMMOTH_TAMEDD,
        sprite[Le.BABY_MAMMOTH_TAMED][Le.NIGHT] = IMAGES.BABY_MAMMOTH_TAMEDN,
        sprite[Le.HURT_BABY_MAMMOTH] = IMAGES.HURT_BABY_MAMMOTH,
        sprite[Le.HURT_MAMMOTH] = IMAGES.HURT_MAMMOTH,
        sprite[Le.BABY_DRAGON_ATTACK] = [],
        sprite[Le.BABY_DRAGON_ATTACK][Le.DAY] = IMAGES.BABY_DRAGON_ATTACKD,
        sprite[Le.BABY_DRAGON_ATTACK][Le.NIGHT] = IMAGES.BABY_DRAGON_ATTACKN,
        sprite[Le.BABY_DRAGON] = [],
        sprite[Le.BABY_DRAGON][Le.DAY] = IMAGES.BABY_DRAGOND,
        sprite[Le.BABY_DRAGON][Le.NIGHT] = IMAGES.BABY_DRAGONN,
        sprite[Le.BABY_DRAGON_TAMED] = [],
        sprite[Le.BABY_DRAGON_TAMED][Le.DAY] = IMAGES.BABY_DRAGON_TAMEDD,
        sprite[Le.BABY_DRAGON_TAMED][Le.NIGHT] = IMAGES.BABY_DRAGON_TAMEDN,
        sprite[Le.BABY_DRAGON_WING_LEFT] = [],
        sprite[Le.BABY_DRAGON_WING_LEFT][Le.DAY] = IMAGES.BABY_DRAGON_WING_LEFTD,
        sprite[Le.BABY_DRAGON_WING_LEFT][Le.NIGHT] = IMAGES.BABY_DRAGON_WING_LEFTN,
        sprite[Le.BABY_DRAGON_WING_RIGHT] = [],
        sprite[Le.BABY_DRAGON_WING_RIGHT][Le.DAY] = IMAGES.BABY_DRAGON_WING_RIGHTD,
        sprite[Le.BABY_DRAGON_WING_RIGHT][Le.NIGHT] = IMAGES.BABY_DRAGON_WING_RIGHTN,
        sprite[Le.BABY_DRAGON_WING_LEFT_ATTACK] = [],
        sprite[Le.BABY_DRAGON_WING_LEFT_ATTACK][Le.DAY] = IMAGES.BABY_DRAGON_WING_LEFT_ATTACKD,
        sprite[Le.BABY_DRAGON_WING_LEFT_ATTACK][Le.NIGHT] = IMAGES.BABY_DRAGON_WING_LEFT_ATTACKN,
        sprite[Le.BABY_DRAGON_WING_RIGHT_ATTACK] = [],
        sprite[Le.BABY_DRAGON_WING_RIGHT_ATTACK][Le.DAY] = IMAGES.BABY_DRAGON_WING_RIGHT_ATTACKD,
        sprite[Le.BABY_DRAGON_WING_RIGHT_ATTACK][Le.NIGHT] = IMAGES.BABY_DRAGON_WING_RIGHT_ATTACKN,
        sprite[Le.BABY_DRAGON_WING_LEFT_TAMED] = [],
        sprite[Le.BABY_DRAGON_WING_LEFT_TAMED][Le.DAY] = IMAGES.BABY_DRAGON_WING_LEFT_TAMEDD,
        sprite[Le.BABY_DRAGON_WING_LEFT_TAMED][Le.NIGHT] = IMAGES.BABY_DRAGON_WING_LEFT_TAMEDN,
        sprite[Le.BABY_DRAGON_WING_RIGHT_TAMED] = [],
        sprite[Le.BABY_DRAGON_WING_RIGHT_TAMED][Le.DAY] = IMAGES.BABY_DRAGON_WING_RIGHT_TAMEDD,
        sprite[Le.BABY_DRAGON_WING_RIGHT_TAMED][Le.NIGHT] = IMAGES.BABY_DRAGON_WING_RIGHT_TAMEDN,
        sprite[Le.HURT_BABY_DRAGON] = IMAGES.HURT_BABY_DRAGON,
        sprite[Le.HURT_BABY_DRAGON_WING_LEFT] = IMAGES.HURT_BABY_DRAGON_WING_LEFT,
        sprite[Le.HURT_BABY_DRAGON_WING_RIGHT] = IMAGES.HURT_BABY_DRAGON_WING_RIGHT,
        sprite[Le.BABY_LAVA_ATTACK] = [],
        sprite[Le.BABY_LAVA_ATTACK][Le.DAY] = IMAGES.BABY_LAVA_ATTACKD,
        sprite[Le.BABY_LAVA_ATTACK][Le.NIGHT] = IMAGES.BABY_LAVA_ATTACKN,
        sprite[Le.BABY_LAVA] = [],
        sprite[Le.BABY_LAVA][Le.DAY] = IMAGES.BABY_LAVAD,
        sprite[Le.BABY_LAVA][Le.NIGHT] = IMAGES.BABY_LAVAN,
        sprite[Le.BABY_LAVA_TAMED] = [],
        sprite[Le.BABY_LAVA_TAMED][Le.DAY] = IMAGES.BABY_LAVA_TAMEDD,
        sprite[Le.BABY_LAVA_TAMED][Le.NIGHT] = IMAGES.BABY_LAVA_TAMEDN,
        sprite[Le.BABY_LAVA_WING_LEFT] = [],
        sprite[Le.BABY_LAVA_WING_LEFT][Le.DAY] = IMAGES.BABY_LAVA_WING_LEFTD,
        sprite[Le.BABY_LAVA_WING_LEFT][Le.NIGHT] = IMAGES.BABY_LAVA_WING_LEFTN,
        sprite[Le.BABY_LAVA_WING_RIGHT] = [],
        sprite[Le.BABY_LAVA_WING_RIGHT][Le.DAY] = IMAGES.BABY_LAVA_WING_RIGHTD,
        sprite[Le.BABY_LAVA_WING_RIGHT][Le.NIGHT] = IMAGES.BABY_LAVA_WING_RIGHTN,
        sprite[Le.BABY_LAVA_WING_LEFT_ATTACK] = [],
        sprite[Le.BABY_LAVA_WING_LEFT_ATTACK][Le.DAY] = IMAGES.BABY_LAVA_WING_LEFT_ATTACKD,
        sprite[Le.BABY_LAVA_WING_LEFT_ATTACK][Le.NIGHT] = IMAGES.BABY_LAVA_WING_LEFT_ATTACKN,
        sprite[Le.BABY_LAVA_WING_RIGHT_ATTACK] = [],
        sprite[Le.BABY_LAVA_WING_RIGHT_ATTACK][Le.DAY] = IMAGES.BABY_LAVA_WING_RIGHT_ATTACKD,
        sprite[Le.BABY_LAVA_WING_RIGHT_ATTACK][Le.NIGHT] = IMAGES.BABY_LAVA_WING_RIGHT_ATTACKN,
        sprite[Le.BABY_LAVA_WING_LEFT_TAMED] = [],
        sprite[Le.BABY_LAVA_WING_LEFT_TAMED][Le.DAY] = IMAGES.BABY_LAVA_WING_LEFT_TAMEDD,
        sprite[Le.BABY_LAVA_WING_LEFT_TAMED][Le.NIGHT] = IMAGES.BABY_LAVA_WING_LEFT_TAMEDN,
        sprite[Le.BABY_LAVA_WING_RIGHT_TAMED] = [],
        sprite[Le.BABY_LAVA_WING_RIGHT_TAMED][Le.DAY] = IMAGES.BABY_LAVA_WING_RIGHT_TAMEDD,
        sprite[Le.BABY_LAVA_WING_RIGHT_TAMED][Le.NIGHT] = IMAGES.BABY_LAVA_WING_RIGHT_TAMEDN,
        sprite[Le.HURT_BABY_LAVA] = IMAGES.HURT_BABY_LAVA,
        sprite[Le.HURT_BABY_LAVA_WING_LEFT] = IMAGES.HURT_BABY_LAVA_WING_LEFT,
        sprite[Le.HURT_BABY_LAVA_WING_RIGHT] = IMAGES.HURT_BABY_LAVA_WING_RIGHT,
        sprite[Le.HAWK_ATTACK] = [],
        sprite[Le.HAWK_ATTACK][Le.DAY] = IMAGES.HAWK_ATTACKD,
        sprite[Le.HAWK_ATTACK][Le.NIGHT] = IMAGES.HAWK_ATTACKN,
        sprite[Le.HAWK] = [],
        sprite[Le.HAWK][Le.DAY] = IMAGES.HAWKD,
        sprite[Le.HAWK][Le.NIGHT] = IMAGES.HAWKN,
        sprite[Le.HURT_HAWK_GROUND] = IMAGES.HURT_HAWK_GROUND,
        sprite[Le.HAWK_GROUND] = [],
        sprite[Le.HAWK_GROUND][Le.DAY] = IMAGES.HAWK_GROUNDD,
        sprite[Le.HAWK_GROUND][Le.NIGHT] = IMAGES.HAWK_GROUNDN,
        sprite[Le.HAWK_GROUND_ATTACK] = [],
        sprite[Le.HAWK_GROUND_ATTACK][Le.DAY] = IMAGES.HAWK_GROUND_ATTACKD,
        sprite[Le.HAWK_GROUND_ATTACK][Le.NIGHT] = IMAGES.HAWK_GROUND_ATTACKN,
        sprite[Le.HAWK_TAMED] = [],
        sprite[Le.HAWK_TAMED][Le.DAY] = IMAGES.HAWK_TAMEDD,
        sprite[Le.HAWK_TAMED][Le.NIGHT] = IMAGES.HAWK_TAMEDN,
        sprite[Le.HAWK_WING_LEFT] = [],
        sprite[Le.HAWK_WING_LEFT][Le.DAY] = IMAGES.HAWK_WING_LEFTD,
        sprite[Le.HAWK_WING_LEFT][Le.NIGHT] = IMAGES.HAWK_WING_LEFTN,
        sprite[Le.HAWK_WING_RIGHT] = [],
        sprite[Le.HAWK_WING_RIGHT][Le.DAY] = IMAGES.HAWK_WING_RIGHTD,
        sprite[Le.HAWK_WING_RIGHT][Le.NIGHT] = IMAGES.HAWK_WING_RIGHTN,
        sprite[Le.HAWK_WING_LEFT_ATTACK] = [],
        sprite[Le.HAWK_WING_LEFT_ATTACK][Le.DAY] = IMAGES.HAWK_WING_LEFT_ATTACKD,
        sprite[Le.HAWK_WING_LEFT_ATTACK][Le.NIGHT] = IMAGES.HAWK_WING_LEFT_ATTACKN,
        sprite[Le.HAWK_WING_RIGHT_ATTACK] = [],
        sprite[Le.HAWK_WING_RIGHT_ATTACK][Le.DAY] = IMAGES.HAWK_WING_RIGHT_ATTACKD,
        sprite[Le.HAWK_WING_RIGHT_ATTACK][Le.NIGHT] = IMAGES.HAWK_WING_RIGHT_ATTACKN,
        sprite[Le.HAWK_WING_LEFT_TAMED] = [],
        sprite[Le.HAWK_WING_LEFT_TAMED][Le.DAY] = IMAGES.HAWK_WING_LEFT_TAMEDD,
        sprite[Le.HAWK_WING_LEFT_TAMED][Le.NIGHT] = IMAGES.HAWK_WING_LEFT_TAMEDN,
        sprite[Le.HAWK_WING_RIGHT_TAMED] = [],
        sprite[Le.HAWK_WING_RIGHT_TAMED][Le.DAY] = IMAGES.HAWK_WING_RIGHT_TAMEDD,
        sprite[Le.HAWK_WING_RIGHT_TAMED][Le.NIGHT] = IMAGES.HAWK_WING_RIGHT_TAMEDN,
        sprite[Le.HURT_HAWK] = IMAGES.HURT_HAWK,
        sprite[Le.HURT_HAWK_WING_LEFT] = IMAGES.HURT_HAWK_WING_LEFT,
        sprite[Le.HURT_HAWK_WING_RIGHT] = IMAGES.HURT_HAWK_WING_RIGHT,
        sprite[Le.VULTURE_ATTACK] = [],
        sprite[Le.VULTURE_ATTACK][Le.DAY] = IMAGES.VULTURE_ATTACKD,
        sprite[Le.VULTURE_ATTACK][Le.NIGHT] = IMAGES.VULTURE_ATTACKN,
        sprite[Le.VULTURE] = [],
        sprite[Le.VULTURE][Le.DAY] = IMAGES.VULTURED,
        sprite[Le.VULTURE][Le.NIGHT] = IMAGES.VULTUREN,
        sprite[Le.HURT_VULTURE_GROUND] = IMAGES.HURT_VULTURE_GROUND,
        sprite[Le.VULTURE_GROUND] = [],
        sprite[Le.VULTURE_GROUND][Le.DAY] = IMAGES.VULTURE_GROUNDD,
        sprite[Le.VULTURE_GROUND][Le.NIGHT] = IMAGES.VULTURE_GROUNDN,
        sprite[Le.VULTURE_GROUND_ATTACK] = [],
        sprite[Le.VULTURE_GROUND_ATTACK][Le.DAY] = IMAGES.VULTURE_GROUND_ATTACKD,
        sprite[Le.VULTURE_GROUND_ATTACK][Le.NIGHT] = IMAGES.VULTURE_GROUND_ATTACKN,
        sprite[Le.VULTURE_TAMED] = [],
        sprite[Le.VULTURE_TAMED][Le.DAY] = IMAGES.VULTURE_TAMEDD,
        sprite[Le.VULTURE_TAMED][Le.NIGHT] = IMAGES.VULTURE_TAMEDN,
        sprite[Le.VULTURE_WING_LEFT] = [],
        sprite[Le.VULTURE_WING_LEFT][Le.DAY] = IMAGES.VULTURE_WING_LEFTD,
        sprite[Le.VULTURE_WING_LEFT][Le.NIGHT] = IMAGES.VULTURE_WING_LEFTN,
        sprite[Le.VULTURE_WING_RIGHT] = [],
        sprite[Le.VULTURE_WING_RIGHT][Le.DAY] = IMAGES.VULTURE_WING_RIGHTD,
        sprite[Le.VULTURE_WING_RIGHT][Le.NIGHT] = IMAGES.VULTURE_WING_RIGHTN,
        sprite[Le.VULTURE_WING_LEFT_ATTACK] = [],
        sprite[Le.VULTURE_WING_LEFT_ATTACK][Le.DAY] = IMAGES.VULTURE_WING_LEFT_ATTACKD,
        sprite[Le.VULTURE_WING_LEFT_ATTACK][Le.NIGHT] = IMAGES.VULTURE_WING_LEFT_ATTACKN,
        sprite[Le.VULTURE_WING_RIGHT_ATTACK] = [],
        sprite[Le.VULTURE_WING_RIGHT_ATTACK][Le.DAY] = IMAGES.VULTURE_WING_RIGHT_ATTACKD,
        sprite[Le.VULTURE_WING_RIGHT_ATTACK][Le.NIGHT] = IMAGES.VULTURE_WING_RIGHT_ATTACKN,
        sprite[Le.VULTURE_WING_LEFT_TAMED] = [],
        sprite[Le.VULTURE_WING_LEFT_TAMED][Le.DAY] = IMAGES.VULTURE_WING_LEFT_TAMEDD,
        sprite[Le.VULTURE_WING_LEFT_TAMED][Le.NIGHT] = IMAGES.VULTURE_WING_LEFT_TAMEDN,
        sprite[Le.VULTURE_WING_RIGHT_TAMED] = [],
        sprite[Le.VULTURE_WING_RIGHT_TAMED][Le.DAY] = IMAGES.VULTURE_WING_RIGHT_TAMEDD,
        sprite[Le.VULTURE_WING_RIGHT_TAMED][Le.NIGHT] = IMAGES.VULTURE_WING_RIGHT_TAMEDN,
        sprite[Le.HURT_VULTURE] = IMAGES.HURT_VULTURE,
        sprite[Le.HURT_VULTURE_WING_LEFT] = IMAGES.HURT_VULTURE_WING_LEFT,
        sprite[Le.HURT_VULTURE_WING_RIGHT] = IMAGES.HURT_VULTURE_WING_RIGHT,
        sprite[Le.BOAR] = [],
        sprite[Le.BOAR][Le.DAY] = IMAGES.BOARD,
        sprite[Le.BOAR][Le.NIGHT] = IMAGES.BOARN,
        sprite[Le.BOAR_TAMED] = [],
        sprite[Le.BOAR_TAMED][Le.DAY] = IMAGES.BOAR_TAMEDD,
        sprite[Le.BOAR_TAMED][Le.NIGHT] = IMAGES.BOAR_TAMEDN,
        sprite[Le.BOAR_ATTACK] = [],
        sprite[Le.BOAR_ATTACK][Le.DAY] = IMAGES.BOAR_ANGRYD,
        sprite[Le.BOAR_ATTACK][Le.NIGHT] = IMAGES.BOAR_ANGRYN,
        sprite[Le.BOAR_STEP] = [],
        sprite[Le.BOAR_STEP][Le.DAY] = IMAGES.BOAR_STEP,
        sprite[Le.BOAR_STEP][Le.NIGHT] = IMAGES.BOAR_STEP,
        sprite[Le.CRAB_STEP] = [],
        sprite[Le.CRAB_STEP][Le.DAY] = IMAGES.CRAB_STEP,
        sprite[Le.CRAB_STEP][Le.NIGHT] = IMAGES.CRAB_STEP,
        sprite[Le.BABY_MAMMOTH_STEP] = [],
        sprite[Le.BABY_MAMMOTH_STEP][Le.DAY] = IMAGES.BABY_MAMMOTH_STEP,
        sprite[Le.BABY_MAMMOTH_STEP][Le.NIGHT] = IMAGES.BABY_MAMMOTH_STEP,
        sprite[Le.HURT_BOAR] = IMAGES.HURT_BOAR,
        sprite[Le.SADDLE] = [],
        sprite[Le.SADDLE][Le.DAY] = IMAGES.SADDLED,
        sprite[Le.SADDLE][Le.NIGHT] = IMAGES.SADDLEN,
        sprite[Le.WAND1] = [],
        sprite[Le.WAND1][Le.DAY] = IMAGES.WAND1D,
        sprite[Le.WAND1][Le.NIGHT] = IMAGES.WAND1N,
        sprite[Le.SPELL] = [],
        sprite[Le.SPELL][Le.DAY] = [IMAGES.LIGHT_WAND0D, IMAGES.LIGHT_WAND1D, IMAGES.WOOD_ARROWD, IMAGES.STONE_ARROWD, IMAGES.GOLD_ARROWD, IMAGES.DIAMOND_ARROWD, IMAGES.AMETHYST_ARROWD, IMAGES.REIDITE_ARROWD, IMAGES.DRAGON_ARROWD],
        sprite[Le.SPELL][Le.NIGHT] = [IMAGES.LIGHT_WAND0N, IMAGES.LIGHT_WAND1N, IMAGES.WOOD_ARROWN, IMAGES.STONE_ARROWN, IMAGES.GOLD_ARROWN, IMAGES.DIAMOND_ARROWN, IMAGES.AMETHYST_ARROWN, IMAGES.REIDITE_ARROWD, IMAGES.DRAGON_ARROWN],
        sprite[Le.WAND2] = [],
        sprite[Le.WAND2][Le.DAY] = IMAGES.WAND2D,
        sprite[Le.WAND2][Le.NIGHT] = IMAGES.WAND2N,
        sprite[Le.BOAT_WAVE] = [],
        sprite[Le.BOAT_WAVE][Le.DAY] = IMAGES.BOAT_WAVED,
        sprite[Le.BOAT_WAVE][Le.NIGHT] = IMAGES.BOAT_WAVEN,
        sprite[Le.SLED_WAVE] = [],
        sprite[Le.SLED_WAVE][Le.DAY] = IMAGES.SLED_WAVED,
        sprite[Le.SLED_WAVE][Le.NIGHT] = IMAGES.SLED_WAVEN,
        sprite[Le.PIRATE_HAT] = [],
        sprite[Le.PIRATE_HAT][Le.DAY] = IMAGES.PIRATE_HATD,
        sprite[Le.PIRATE_HAT][Le.NIGHT] = IMAGES.PIRATE_HATN,
        sprite[Le.FUR_HAT] = [],
        sprite[Le.FUR_HAT][Le.DAY] = IMAGES.FUR_HATD,
        sprite[Le.FUR_HAT][Le.NIGHT] = IMAGES.FUR_HATN,
        sprite[Le.FLOWER_HAT] = [],
        sprite[Le.FLOWER_HAT][Le.DAY] = IMAGES.FLOWER_HATD,
        sprite[Le.FLOWER_HAT][Le.NIGHT] = IMAGES.FLOWER_HATN,
        sprite[Le.PILOT_HELMET] = [],
        sprite[Le.PILOT_HELMET][Le.DAY] = IMAGES.PILOT_HELMETD,
        sprite[Le.PILOT_HELMET][Le.NIGHT] = IMAGES.PILOT_HELMETN,
        sprite[Le.LAKE_EDGE] = [],
        sprite[Le.LAKE_EDGE][Le.DAY] = [],
        sprite[Le.LAKE_EDGE][Le.NIGHT] = [],
        sprite[Le.LAKE_EDGE][Le.DAY].push(IMAGES.LAKE0D_EDGE),
        sprite[Le.LAKE_EDGE][Le.DAY].push(IMAGES.LAKE1D_EDGE),
        sprite[Le.LAKE_EDGE][Le.DAY].push(IMAGES.LAKE2D_EDGE),
        sprite[Le.LAKE_EDGE][Le.NIGHT].push(IMAGES.LAKE0N_EDGE),
        sprite[Le.LAKE_EDGE][Le.NIGHT].push(IMAGES.LAKE1N_EDGE),
        sprite[Le.LAKE_EDGE][Le.NIGHT].push(IMAGES.LAKE2N_EDGE),
        sprite[Le.LAKE_DEEP] = [],
        sprite[Le.LAKE_DEEP][Le.DAY] = [],
        sprite[Le.LAKE_DEEP][Le.NIGHT] = [],
        sprite[Le.LAKE_DEEP][Le.DAY].push(IMAGES.LAKE0D_DEEP),
        sprite[Le.LAKE_DEEP][Le.DAY].push(IMAGES.LAKE1D_DEEP),
        sprite[Le.LAKE_DEEP][Le.DAY].push(IMAGES.LAKE2D_DEEP),
        sprite[Le.LAKE_DEEP][Le.NIGHT].push(IMAGES.LAKE0N_DEEP),
        sprite[Le.LAKE_DEEP][Le.NIGHT].push(IMAGES.LAKE1N_DEEP),
        sprite[Le.LAKE_DEEP][Le.NIGHT].push(IMAGES.LAKE2N_DEEP),
        sprite[Le.LAKE] = [],
        sprite[Le.LAKE][Le.DAY] = [],
        sprite[Le.LAKE][Le.NIGHT] = [],
        sprite[Le.LAKE][Le.DAY].push(IMAGES.LAKE0D),
        sprite[Le.LAKE][Le.DAY].push(IMAGES.LAKE1D),
        sprite[Le.LAKE][Le.DAY].push(IMAGES.LAKE2D),
        sprite[Le.LAKE][Le.NIGHT].push(IMAGES.LAKE0N),
        sprite[Le.LAKE][Le.NIGHT].push(IMAGES.LAKE1N),
        sprite[Le.LAKE][Le.NIGHT].push(IMAGES.LAKE2N),
        sprite[1e4] = [new Image],
        sprite[10001] = [new Image],
        sprite[10002] = [new Image],
        sprite[10003] = [new Image],
        sprite[10004] = [new Image],
        sprite[10005] = [new Image],
        sprite[10006] = [new Image],
        sprite[10007] = [new Image],
        sprite[10008] = [new Image],
        sprite[10009] = [new Image],
        sprite[10010] = [new Image],
        sprite[10011] = [new Image],
        sprite[10012] = [new Image],
        sprite[10013] = [new Image],
        sprite[10014] = [new Image],
        sprite[10015] = [new Image],
        sprite[10016] = [new Image],
        sprite[10017] = [new Image],
        sprite[10018] = [new Image],
        sprite[10019] = [new Image],
        sprite[10020] = [new Image],
        sprite[10021] = [new Image],
        sprite[10022] = [new Image],
        sprite[10023] = [new Image],
        sprite[10024] = [new Image],
        sprite[10025] = [new Image],
        sprite[10026] = [new Image],
        sprite[10027] = [new Image],
        sprite[10028] = [new Image],
        sprite[10029] = [new Image],
        sprite[10030] = [new Image],
        sprite[10031] = [new Image],
        sprite[10032] = [new Image],
        sprite[10033] = [new Image],
        sprite[10034] = [new Image],
        sprite[10035] = [new Image],
        sprite[1e4][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-ally.png",
        sprite[10001][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-enemy.png",
        sprite[10002][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-ally.png",
        sprite[10003][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-enemy.png",
        sprite[10004][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-ally.png",
        sprite[10005][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-enemy.png",
        sprite[10006][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-ally.png",
        sprite[10007][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-enemy.png",
        sprite[10008][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-ally.png",
        sprite[10009][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-enemy.png",
        sprite[10010][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-ally.png",
        sprite[10011][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-enemy.png",
        sprite[10012][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_wood2.png",
        sprite[10013][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_wood1.png",
        sprite[10014][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_stone1.png",
        sprite[10015][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_stone2.png",
        sprite[10016][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_gold2.png",
        sprite[10017][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_gold1.png",
        sprite[10018][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_diamond2.png",
        sprite[10019][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_diamond1.png",
        sprite[10020][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_amethyst1.png",
        sprite[10021][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_amethyst2.png",
        sprite[10022][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_reidite2.png",
        sprite[10023][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_reidite1.png",
        sprite[10024][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-door-ally.png",
        sprite[10025][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-door-enemy.png",
        sprite[10026][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-door-ally.png",
        sprite[10027][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-door-enemy.png",
        sprite[10028][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-door-ally.png",
        sprite[10029][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-door-enemy.png",
        sprite[10030][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-door-ally.png",
        sprite[10031][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-door-enemy.png",
        sprite[10032][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-door-ally.png",
        sprite[10033][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-door-enemy.png",
        sprite[10034][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-door-ally.png",
        sprite[10035][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-door-enemy.png",
        sprite[1e4][1] = sprite[1e4][0],
        sprite[10001][1] = sprite[10001][0],
        sprite[10002][1] = sprite[10002][0],
        sprite[10003][1] = sprite[10003][0],
        sprite[10004][1] = sprite[10004][0],
        sprite[10005][1] = sprite[10005][0],
        sprite[10006][1] = sprite[10006][0],
        sprite[10007][1] = sprite[10007][0],
        sprite[10008][1] = sprite[10008][0],
        sprite[10009][1] = sprite[10009][0],
        sprite[10010][1] = sprite[10010][0],
        sprite[10011][1] = sprite[10011][0],
        sprite[10012][1] = sprite[10012][0],
        sprite[10013][1] = sprite[10013][0],
        sprite[10014][1] = sprite[10014][0],
        sprite[10015][1] = sprite[10015][0],
        sprite[10016][1] = sprite[10016][0],
        sprite[10017][1] = sprite[10017][0],
        sprite[10018][1] = sprite[10018][0],
        sprite[10019][1] = sprite[10019][0],
        sprite[10020][1] = sprite[10020][0],
        sprite[10021][1] = sprite[10021][0],
        sprite[10022][1] = sprite[10022][0],
        sprite[10023][1] = sprite[10023][0],
        sprite[10024][1] = sprite[10024][0],
        sprite[10025][1] = sprite[10025][0],
        sprite[10026][1] = sprite[10026][0],
        sprite[10027][1] = sprite[10027][0],
        sprite[10028][1] = sprite[10028][0],
        sprite[10029][1] = sprite[10029][0],
        sprite[10030][1] = sprite[10030][0],
        sprite[10031][1] = sprite[10031][0],
        sprite[10032][1] = sprite[10032][0],
        sprite[10033][1] = sprite[10033][0],
        sprite[10034][1] = sprite[10034][0],
        sprite[10035][1] = sprite[10035][0],
        MINIMAP_Utils.g = [],
        MINIMAP_Utils.g[0] = [IMAGES.MAPDAY_GOLD1, IMAGES.MAPNIGHT_GOLD1],
        MINIMAP_Utils.g[1] = MINIMAP_Utils.g[0],
        MINIMAP_Utils.g[2] = [IMAGES.MAPDAY_GOLD2, IMAGES.MAPNIGHT_GOLD2],
        MINIMAP_Utils.m = [],
        MINIMAP_Utils.m[0] = [IMAGES.MAPDAY_EMERALD1, IMAGES.MAPNIGHT_EMERALD1],
        MINIMAP_Utils.m[1] = MINIMAP_Utils.m[0],
        MINIMAP_Utils.m[2] = [IMAGES.MAPDAY_EMERALD2, IMAGES.MAPNIGHT_EMERALD2],
        MINIMAP_Utils.la = [],
        MINIMAP_Utils.la[0] = [IMAGES.MAPDAY_MAGMA, IMAGES.MAPNIGHT_MAGMA],
        MINIMAP_Utils.la[1] = MINIMAP_Utils.la[0],
        MINIMAP_Utils.la[2] = MINIMAP_Utils.la[0],
        MINIMAP_Utils.la[3] = MINIMAP_Utils.la[0],
        MINIMAP_Utils.la[4] = MINIMAP_Utils.la[0],
        MINIMAP_Utils.la[5] = MINIMAP_Utils.la[0],
        MINIMAP_Utils.s = [],
        MINIMAP_Utils.s[0] = [IMAGES.MAPDAY_STONE1, IMAGES.MAPNIGHT_STONE1],
        MINIMAP_Utils.s[1] = MINIMAP_Utils.s[0],
        MINIMAP_Utils.s[2] = [IMAGES.MAPDAY_STONE2, IMAGES.MAPNIGHT_STONE2],
        MINIMAP_Utils.p = [],
        MINIMAP_Utils.p[0] = [IMAGES.MAPDAY_BERRY, IMAGES.MAPDAY_BERRY],
        MINIMAP_Utils.a = [],
        MINIMAP_Utils.a[0] = [IMAGES.MAPDAY_AMETHYST, IMAGES.MAPNIGHT_AMETHYST],
        MINIMAP_Utils.a[1] = MINIMAP_Utils.a[0],
        MINIMAP_Utils.a[2] = MINIMAP_Utils.a[0],
        MINIMAP_Utils.d = [],
        MINIMAP_Utils.d[0] = [IMAGES.MAPDAY_DIAMOND, IMAGES.MAPNIGHT_DIAMOND],
        MINIMAP_Utils.d[1] = MINIMAP_Utils.d[0],
        MINIMAP_Utils.d[2] = MINIMAP_Utils.d[0],
        MINIMAP_Utils.re = [],
        MINIMAP_Utils.re[0] = [IMAGES.MAPDAY_REIDITE, IMAGES.MAPNIGHT_REIDITE],
        MINIMAP_Utils.re[1] = MINIMAP_Utils.re[0],
        MINIMAP_Utils.re[2] = MINIMAP_Utils.re[0],
        MINIMAP_Utils.f = [],
        MINIMAP_Utils.f[0] = [IMAGES.MAPDAY_FIR_TREE, IMAGES.MAPNIGHT_FIR_TREE],
        MINIMAP_Utils.f[1] = MINIMAP_Utils.f[0],
        MINIMAP_Utils.f[2] = MINIMAP_Utils.f[0],
        MINIMAP_Utils.isl = [],
        MINIMAP_Utils.isl[0] = [IMAGES.MAPDAY_ISLAND, IMAGES.MAPNIGHT_ISLAND],
        MINIMAP_Utils.isl[1] = MINIMAP_Utils.isl[0],
        MINIMAP_Utils.isl[2] = MINIMAP_Utils.isl[0],
        MINIMAP_Utils.c = [],
        MINIMAP_Utils.c[0] = [IMAGES.MAPDAY_CACTUS, IMAGES.MAPNIGHT_CACTUS],
        MINIMAP_Utils.c[1] = MINIMAP_Utils.c[0],
        MINIMAP_Utils.c[2] = MINIMAP_Utils.c[0],
        MINIMAP_Utils.wtb = [],
        MINIMAP_Utils.wtb[0] = [IMAGES.MAPDAY_RIVER, IMAGES.MAPNIGHT_RIVER],
        MINIMAP_Utils.PIRANHA = [IMAGES.MAPDAY_PIRANHA, IMAGES.MAPNIGHT_PIRANHA],
        MINIMAP_Utils.KRAKEN = [IMAGES.MAPDAY_KRAKEN, IMAGES.MAPNIGHT_KRAKEN],
        MINIMAP_Utils.FOX = [IMAGES.MAPDAY_FOX, IMAGES.MAPNIGHT_FOX],
        MINIMAP_Utils.WOLF = [IMAGES.MAPDAY_WOLF, IMAGES.MAPNIGHT_WOLF],
        MINIMAP_Utils.SPIDER = [IMAGES.MAPDAY_SPIDER, IMAGES.MAPNIGHT_SPIDER],
        MINIMAP_Utils.BEAR = [IMAGES.MAPDAY_BEAR, IMAGES.MAPNIGHT_BEAR],
        MINIMAP_Utils.CAVE = [IMAGES.MAPDAY_CAVE, IMAGES.MAPNIGHT_CAVE],
        MINIMAP_Utils.MAP = [IMAGES.BIGDAY, IMAGES.BIGNIGHT],
        MINIMAP_Utils.FOREST = [IMAGES.MAPDAY_FOREST, IMAGES.MAPNIGHT_FOREST],
        MINIMAP_Utils.WINTER = [IMAGES.MAPDAY_WINTER, IMAGES.MAPNIGHT_WINTER],
        MINIMAP_Utils.DESERT = [IMAGES.MAPDAY_DESERT, IMAGES.MAPNIGHT_DESERT],
        MINIMAP_Utils.LAVA = [IMAGES.MAPDAY_LAVA, IMAGES.MAPNIGHT_LAVA],
        MINIMAP_Utils)
            for (var n = MINIMAP_Utils[e], r = 0; r < n.length; r++) {
                var o = n[r];
                if (void 0 !== o.tryLoad)
                    o.tryLoad();
                else if (0 < o.length)
                    for (var a = 0; a < o.length; a++)
                        void 0 !== o[a].tryLoad && o[a].tryLoad()
            }
        console.log("Load images", performance.now() - t)
    }
    function Yi() {
        var e = performance.now();
        Fi(),
        sprite[Le.INV_PUMPKIN] = p(1, [{
            f: Ni,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#352b10", "#c06937", "#cd733b", "#b25e34", "#244e2b", "#214224", "#6f4424", "#3c3009"]
        }], .2, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CHEST_PUMPKIN] = sprite[Le.INV_PUMPKIN],
        sprite[Le.INV_CARROT] = [],
        sprite[Le.INV_CARROT][0] = IMAGES.INV_CARROT_OUT,
        sprite[Le.INV_CARROT][1] = IMAGES.INV_CARROT_IN,
        sprite[Le.INV_CARROT][2] = IMAGES.INV_CARROT_CLICK,
        sprite[Le.CHEST_CARROT] = sprite[Le.INV_CARROT],
        sprite[Le.INV_WATERMELON] = [],
        sprite[Le.INV_WATERMELON][0] = IMAGES.INV_WATERMELON_OUT,
        sprite[Le.INV_WATERMELON][1] = IMAGES.INV_WATERMELON_IN,
        sprite[Le.INV_WATERMELON][2] = IMAGES.INV_WATERMELON_CLICK,
        sprite[Le.CHEST_WATERMELON] = sprite[Le.INV_WATERMELON],
        sprite[Le.INV_ALOE_VERA] = [],
        sprite[Le.INV_ALOE_VERA][0] = IMAGES.INV_ALOE_VERA_OUT,
        sprite[Le.INV_ALOE_VERA][1] = IMAGES.INV_ALOE_VERA_IN,
        sprite[Le.INV_ALOE_VERA][2] = IMAGES.INV_ALOE_VERA_CLICK,
        sprite[Le.CHEST_ALOE_VERA] = sprite[Le.INV_ALOE_VERA],
        sprite[Le.INV_CACTUS] = [],
        sprite[Le.INV_CACTUS][0] = IMAGES.INV_CACTUS_OUT,
        sprite[Le.INV_CACTUS][1] = IMAGES.INV_CACTUS_IN,
        sprite[Le.INV_CACTUS][2] = IMAGES.INV_CACTUS_CLICK,
        sprite[Le.CHEST_CACTUS] = sprite[Le.INV_CACTUS],
        sprite[Le.INV_TOMATO] = [],
        sprite[Le.INV_TOMATO][0] = IMAGES.INV_TOMATO_OUT,
        sprite[Le.INV_TOMATO][1] = IMAGES.INV_TOMATO_IN,
        sprite[Le.INV_TOMATO][2] = IMAGES.INV_TOMATO_CLICK,
        sprite[Le.CHEST_TOMATO] = sprite[Le.INV_TOMATO],
        sprite[Le.INV_BOAT] = [],
        sprite[Le.INV_BOAT][0] = IMAGES.INV_BOAT_OUT,
        sprite[Le.INV_BOAT][1] = IMAGES.INV_BOAT_IN,
        sprite[Le.INV_BOAT][2] = IMAGES.INV_BOAT_CLICK,
        sprite[Le.CHEST_BOAT] = sprite[Le.INV_BOAT],
        sprite[Le.CRAFT_BOAT] = sprite[Le.INV_BOAT],
        sprite[Le.INV_MACHETE] = [],
        sprite[Le.INV_MACHETE][0] = IMAGES.INV_MACHETE_OUT,
        sprite[Le.INV_MACHETE][1] = IMAGES.INV_MACHETE_IN,
        sprite[Le.INV_MACHETE][2] = IMAGES.INV_MACHETE_CLICK,
        sprite[Le.CHEST_MACHETE] = sprite[Le.INV_MACHETE],
        sprite[Le.CRAFT_MACHETE] = sprite[Le.INV_MACHETE],
        sprite[Le.INV_SLED] = [],
        sprite[Le.INV_SLED][0] = IMAGES.INV_SLED_OUT,
        sprite[Le.INV_SLED][1] = IMAGES.INV_SLED_IN,
        sprite[Le.INV_SLED][2] = IMAGES.INV_SLED_CLICK,
        sprite[Le.CHEST_SLED] = sprite[Le.INV_SLED],
        sprite[Le.CRAFT_SLED] = sprite[Le.INV_SLED],
        sprite[Le.INV_PIRATE_HAT] = [],
        sprite[Le.INV_PIRATE_HAT][0] = IMAGES.INV_PIRATE_HAT_OUT,
        sprite[Le.INV_PIRATE_HAT][1] = IMAGES.INV_PIRATE_HAT_IN,
        sprite[Le.INV_PIRATE_HAT][2] = IMAGES.INV_PIRATE_HAT_CLICK,
        sprite[Le.CHEST_PIRATE_HAT] = sprite[Le.INV_PIRATE_HAT],
        sprite[Le.CRAFT_PIRATE_HAT] = sprite[Le.INV_PIRATE_HAT],
        sprite[Le.INV_FUR_MAMMOTH] = [],
        sprite[Le.INV_FUR_MAMMOTH][0] = IMAGES.INV_FUR_MAMMOTH_OUT,
        sprite[Le.INV_FUR_MAMMOTH][1] = IMAGES.INV_FUR_MAMMOTH_IN,
        sprite[Le.INV_FUR_MAMMOTH][2] = IMAGES.INV_FUR_MAMMOTH_CLICK,
        sprite[Le.CHEST_FUR_MAMMOTH] = sprite[Le.INV_FUR_MAMMOTH],
        sprite[Le.INV_FUR_HAT] = [],
        sprite[Le.INV_FUR_HAT][0] = IMAGES.INV_FUR_HAT_OUT,
        sprite[Le.INV_FUR_HAT][1] = IMAGES.INV_FUR_HAT_IN,
        sprite[Le.INV_FUR_HAT][2] = IMAGES.INV_FUR_HAT_CLICK,
        sprite[Le.CHEST_FUR_HAT] = sprite[Le.INV_FUR_HAT],
        sprite[Le.CRAFT_FUR_HAT] = sprite[Le.INV_FUR_HAT],
        sprite[Le.INV_WOOD_BOW] = [],
        sprite[Le.INV_WOOD_BOW][0] = IMAGES.INV_WOOD_BOW_OUT,
        sprite[Le.INV_WOOD_BOW][1] = IMAGES.INV_WOOD_BOW_IN,
        sprite[Le.INV_WOOD_BOW][2] = IMAGES.INV_WOOD_BOW_CLICK,
        sprite[Le.CHEST_WOOD_BOW] = sprite[Le.INV_WOOD_BOW],
        sprite[Le.CRAFT_WOOD_BOW] = sprite[Le.INV_WOOD_BOW],
        sprite[Le.INV_WOOD_ARROW] = [],
        sprite[Le.INV_WOOD_ARROW][0] = IMAGES.INV_WOOD_ARROW_OUT,
        sprite[Le.INV_WOOD_ARROW][1] = IMAGES.INV_WOOD_ARROW_IN,
        sprite[Le.INV_WOOD_ARROW][2] = IMAGES.INV_WOOD_ARROW_CLICK,
        sprite[Le.CHEST_WOOD_ARROW] = sprite[Le.INV_WOOD_ARROW],
        sprite[Le.CRAFT_WOOD_ARROW] = sprite[Le.INV_WOOD_ARROW],
        sprite[Le.INV_STONE_BOW] = [],
        sprite[Le.INV_STONE_BOW][0] = IMAGES.INV_STONE_BOW_OUT,
        sprite[Le.INV_STONE_BOW][1] = IMAGES.INV_STONE_BOW_IN,
        sprite[Le.INV_STONE_BOW][2] = IMAGES.INV_STONE_BOW_CLICK,
        sprite[Le.CHEST_STONE_BOW] = sprite[Le.INV_STONE_BOW],
        sprite[Le.CRAFT_STONE_BOW] = sprite[Le.INV_STONE_BOW],
        sprite[Le.INV_STONE_ARROW] = [],
        sprite[Le.INV_STONE_ARROW][0] = IMAGES.INV_STONE_ARROW_OUT,
        sprite[Le.INV_STONE_ARROW][1] = IMAGES.INV_STONE_ARROW_IN,
        sprite[Le.INV_STONE_ARROW][2] = IMAGES.INV_STONE_ARROW_CLICK,
        sprite[Le.CHEST_STONE_ARROW] = sprite[Le.INV_STONE_ARROW],
        sprite[Le.CRAFT_STONE_ARROW] = sprite[Le.INV_STONE_ARROW],
        sprite[Le.INV_GOLD_BOW] = [],
        sprite[Le.INV_GOLD_BOW][0] = IMAGES.INV_GOLD_BOW_OUT,
        sprite[Le.INV_GOLD_BOW][1] = IMAGES.INV_GOLD_BOW_IN,
        sprite[Le.INV_GOLD_BOW][2] = IMAGES.INV_GOLD_BOW_CLICK,
        sprite[Le.CHEST_GOLD_BOW] = sprite[Le.INV_GOLD_BOW],
        sprite[Le.CRAFT_GOLD_BOW] = sprite[Le.INV_GOLD_BOW],
        sprite[Le.INV_GOLD_ARROW] = [],
        sprite[Le.INV_GOLD_ARROW][0] = IMAGES.INV_GOLD_ARROW_OUT,
        sprite[Le.INV_GOLD_ARROW][1] = IMAGES.INV_GOLD_ARROW_IN,
        sprite[Le.INV_GOLD_ARROW][2] = IMAGES.INV_GOLD_ARROW_CLICK,
        sprite[Le.CHEST_GOLD_ARROW] = sprite[Le.INV_GOLD_ARROW],
        sprite[Le.CRAFT_GOLD_ARROW] = sprite[Le.INV_GOLD_ARROW],
        sprite[Le.INV_DIAMOND_BOW] = [],
        sprite[Le.INV_DIAMOND_BOW][0] = IMAGES.INV_DIAMOND_BOW_OUT,
        sprite[Le.INV_DIAMOND_BOW][1] = IMAGES.INV_DIAMOND_BOW_IN,
        sprite[Le.INV_DIAMOND_BOW][2] = IMAGES.INV_DIAMOND_BOW_CLICK,
        sprite[Le.CHEST_DIAMOND_BOW] = sprite[Le.INV_DIAMOND_BOW],
        sprite[Le.CRAFT_DIAMOND_BOW] = sprite[Le.INV_DIAMOND_BOW],
        sprite[Le.INV_DIAMOND_ARROW] = [],
        sprite[Le.INV_DIAMOND_ARROW][0] = IMAGES.INV_DIAMOND_ARROW_OUT,
        sprite[Le.INV_DIAMOND_ARROW][1] = IMAGES.INV_DIAMOND_ARROW_IN,
        sprite[Le.INV_DIAMOND_ARROW][2] = IMAGES.INV_DIAMOND_ARROW_CLICK,
        sprite[Le.CHEST_DIAMOND_ARROW] = sprite[Le.INV_DIAMOND_ARROW],
        sprite[Le.CRAFT_DIAMOND_ARROW] = sprite[Le.INV_DIAMOND_ARROW],
        sprite[Le.INV_AMETHYST_BOW] = [],
        sprite[Le.INV_AMETHYST_BOW][0] = IMAGES.INV_AMETHYST_BOW_OUT,
        sprite[Le.INV_AMETHYST_BOW][1] = IMAGES.INV_AMETHYST_BOW_IN,
        sprite[Le.INV_AMETHYST_BOW][2] = IMAGES.INV_AMETHYST_BOW_CLICK,
        sprite[Le.CHEST_AMETHYST_BOW] = sprite[Le.INV_AMETHYST_BOW],
        sprite[Le.CRAFT_AMETHYST_BOW] = sprite[Le.INV_AMETHYST_BOW],
        sprite[Le.INV_AMETHYST_ARROW] = [],
        sprite[Le.INV_AMETHYST_ARROW][0] = IMAGES.INV_AMETHYST_ARROW_OUT,
        sprite[Le.INV_AMETHYST_ARROW][1] = IMAGES.INV_AMETHYST_ARROW_IN,
        sprite[Le.INV_AMETHYST_ARROW][2] = IMAGES.INV_AMETHYST_ARROW_CLICK,
        sprite[Le.CHEST_AMETHYST_ARROW] = sprite[Le.INV_AMETHYST_ARROW],
        sprite[Le.CRAFT_AMETHYST_ARROW] = sprite[Le.INV_AMETHYST_ARROW],
        sprite[Le.INV_REIDITE_BOW] = [],
        sprite[Le.INV_REIDITE_BOW][0] = IMAGES.INV_REIDITE_BOW_OUT,
        sprite[Le.INV_REIDITE_BOW][1] = IMAGES.INV_REIDITE_BOW_IN,
        sprite[Le.INV_REIDITE_BOW][2] = IMAGES.INV_REIDITE_BOW_CLICK,
        sprite[Le.CHEST_REIDITE_BOW] = sprite[Le.INV_REIDITE_BOW],
        sprite[Le.CRAFT_REIDITE_BOW] = sprite[Le.INV_REIDITE_BOW],
        sprite[Le.INV_REIDITE_ARROW] = [],
        sprite[Le.INV_REIDITE_ARROW][0] = IMAGES.INV_REIDITE_ARROW_OUT,
        sprite[Le.INV_REIDITE_ARROW][1] = IMAGES.INV_REIDITE_ARROW_IN,
        sprite[Le.INV_REIDITE_ARROW][2] = IMAGES.INV_REIDITE_ARROW_CLICK,
        sprite[Le.CHEST_REIDITE_ARROW] = sprite[Le.INV_REIDITE_ARROW],
        sprite[Le.CRAFT_REIDITE_ARROW] = sprite[Le.INV_REIDITE_ARROW],
        sprite[Le.INV_DRAGON_BOW] = [],
        sprite[Le.INV_DRAGON_BOW][0] = IMAGES.INV_DRAGON_BOW_OUT,
        sprite[Le.INV_DRAGON_BOW][1] = IMAGES.INV_DRAGON_BOW_IN,
        sprite[Le.INV_DRAGON_BOW][2] = IMAGES.INV_DRAGON_BOW_CLICK,
        sprite[Le.CHEST_DRAGON_BOW] = sprite[Le.INV_DRAGON_BOW],
        sprite[Le.CRAFT_DRAGON_BOW] = sprite[Le.INV_DRAGON_BOW],
        sprite[Le.INV_DRAGON_ARROW] = [],
        sprite[Le.INV_DRAGON_ARROW][0] = IMAGES.INV_DRAGON_ARROW_OUT,
        sprite[Le.INV_DRAGON_ARROW][1] = IMAGES.INV_DRAGON_ARROW_IN,
        sprite[Le.INV_DRAGON_ARROW][2] = IMAGES.INV_DRAGON_ARROW_CLICK,
        sprite[Le.CHEST_DRAGON_ARROW] = sprite[Le.INV_DRAGON_ARROW],
        sprite[Le.CRAFT_DRAGON_ARROW] = sprite[Le.INV_DRAGON_ARROW],
        sprite[Le.INV_WOOD_SHIELD] = [],
        sprite[Le.INV_WOOD_SHIELD][0] = IMAGES.INV_WOOD_SHIELD_OUT,
        sprite[Le.INV_WOOD_SHIELD][1] = IMAGES.INV_WOOD_SHIELD_IN,
        sprite[Le.INV_WOOD_SHIELD][2] = IMAGES.INV_WOOD_SHIELD_CLICK,
        sprite[Le.CHEST_WOOD_SHIELD] = sprite[Le.INV_WOOD_SHIELD],
        sprite[Le.CRAFT_WOOD_SHIELD] = sprite[Le.INV_WOOD_SHIELD],
        sprite[Le.INV_STONE_SHIELD] = [],
        sprite[Le.INV_STONE_SHIELD][0] = IMAGES.INV_STONE_SHIELD_OUT,
        sprite[Le.INV_STONE_SHIELD][1] = IMAGES.INV_STONE_SHIELD_IN,
        sprite[Le.INV_STONE_SHIELD][2] = IMAGES.INV_STONE_SHIELD_CLICK,
        sprite[Le.CHEST_STONE_SHIELD] = sprite[Le.INV_STONE_SHIELD],
        sprite[Le.CRAFT_STONE_SHIELD] = sprite[Le.INV_STONE_SHIELD],
        sprite[Le.INV_GOLD_SHIELD] = [],
        sprite[Le.INV_GOLD_SHIELD][0] = IMAGES.INV_GOLD_SHIELD_OUT,
        sprite[Le.INV_GOLD_SHIELD][1] = IMAGES.INV_GOLD_SHIELD_IN,
        sprite[Le.INV_GOLD_SHIELD][2] = IMAGES.INV_GOLD_SHIELD_CLICK,
        sprite[Le.CHEST_GOLD_SHIELD] = sprite[Le.INV_GOLD_SHIELD],
        sprite[Le.CRAFT_GOLD_SHIELD] = sprite[Le.INV_GOLD_SHIELD],
        sprite[Le.INV_DIAMOND_SHIELD] = [],
        sprite[Le.INV_DIAMOND_SHIELD][0] = IMAGES.INV_DIAMOND_SHIELD_OUT,
        sprite[Le.INV_DIAMOND_SHIELD][1] = IMAGES.INV_DIAMOND_SHIELD_IN,
        sprite[Le.INV_DIAMOND_SHIELD][2] = IMAGES.INV_DIAMOND_SHIELD_CLICK,
        sprite[Le.CHEST_DIAMOND_SHIELD] = sprite[Le.INV_DIAMOND_SHIELD],
        sprite[Le.CRAFT_DIAMOND_SHIELD] = sprite[Le.INV_DIAMOND_SHIELD],
        sprite[Le.INV_AMETHYST_SHIELD] = [],
        sprite[Le.INV_AMETHYST_SHIELD][0] = IMAGES.INV_AMETHYST_SHIELD_OUT,
        sprite[Le.INV_AMETHYST_SHIELD][1] = IMAGES.INV_AMETHYST_SHIELD_IN,
        sprite[Le.INV_AMETHYST_SHIELD][2] = IMAGES.INV_AMETHYST_SHIELD_CLICK,
        sprite[Le.CHEST_AMETHYST_SHIELD] = sprite[Le.INV_AMETHYST_SHIELD],
        sprite[Le.CRAFT_AMETHYST_SHIELD] = sprite[Le.INV_AMETHYST_SHIELD],
        sprite[Le.INV_REIDITE_SHIELD] = [],
        sprite[Le.INV_REIDITE_SHIELD][0] = IMAGES.INV_REIDITE_SHIELD_OUT,
        sprite[Le.INV_REIDITE_SHIELD][1] = IMAGES.INV_REIDITE_SHIELD_IN,
        sprite[Le.INV_REIDITE_SHIELD][2] = IMAGES.INV_REIDITE_SHIELD_CLICK,
        sprite[Le.CHEST_REIDITE_SHIELD] = sprite[Le.INV_REIDITE_SHIELD],
        sprite[Le.CRAFT_REIDITE_SHIELD] = sprite[Le.INV_REIDITE_SHIELD],
        sprite[Le.INV_FLOWER_HAT] = [],
        sprite[Le.INV_FLOWER_HAT][0] = IMAGES.INV_FLOWER_HAT_OUT,
        sprite[Le.INV_FLOWER_HAT][1] = IMAGES.INV_FLOWER_HAT_IN,
        sprite[Le.INV_FLOWER_HAT][2] = IMAGES.INV_FLOWER_HAT_CLICK,
        sprite[Le.CHEST_FLOWER_HAT] = sprite[Le.INV_FLOWER_HAT],
        sprite[Le.CRAFT_FLOWER_HAT] = sprite[Le.INV_FLOWER_HAT],
        sprite[Le.INV_SANDWORM_JUICE] = [],
        sprite[Le.INV_SANDWORM_JUICE][0] = IMAGES.INV_SANDWORM_JUICE_OUT,
        sprite[Le.INV_SANDWORM_JUICE][1] = IMAGES.INV_SANDWORM_JUICE_IN,
        sprite[Le.INV_SANDWORM_JUICE][2] = IMAGES.INV_SANDWORM_JUICE_CLICK,
        sprite[Le.CHEST_SANDWORM_JUICE] = sprite[Le.INV_SANDWORM_JUICE],
        sprite[Le.CRAFT_SANDWORM_JUICE] = sprite[Le.INV_SANDWORM_JUICE],
        sprite[Le.INV_GARLIC] = p(1, [{
            f: L,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#352b10", "#e8e8e8", "#bbbbbb", "#e0e1e0", "#c4c4c4"]
        }], .22, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CHEST_GARLIC] = sprite[Le.INV_GARLIC],
        sprite[Le.INV_THORNBUSH] = p(1, [{
            f: Di,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#352b10", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]
        }], .2, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CHEST_THORNBUSH] = sprite[Le.INV_THORNBUSH],
        sprite[Le.INV_WINDMILL] = p(1, [{
            f: le,
            x: -1,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
        }, {
            f: ce,
            x: -1,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
        }, {
            f: Ae,
            x: -1,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
        }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_WINDMILL] = sprite[Le.INV_WINDMILL],
        sprite[Le.INV_WILD_WHEAT] = p(1, [{
            f: ue,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#A89F67", "#9E8456"]
        }], 1.2, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.INV_SIGN] = p(1, [{
            f: Ot,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#44301b", "#57442a", "#523e26"]
        }], .14, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_SIGN] = sprite[Le.INV_SIGN],
        sprite[Le.INV_WHEAT_SEED] = p(1, [{
            f: b1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#A89F67", "#9E8456"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_WHEAT_SEED] = sprite[Le.INV_WHEAT_SEED],
        sprite[Le.INV_SEED] = p(1, [{
            f: b1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#493d36", "#332b28"]
        }], .7, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_SEED] = sprite[Le.INV_SEED],
        sprite[Le.INV_PUMPKIN_SEED] = p(1, [{
            f: b1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#c67933", "#b17238"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_PUMPKIN_SEED] = sprite[Le.INV_PUMPKIN_SEED],
        sprite[Le.INV_GARLIC_SEED] = p(1, [{
            f: b1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#e8e8e8", "#bbbbbb"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_GARLIC_SEED] = sprite[Le.INV_GARLIC_SEED],
        sprite[Le.INV_THORNBUSH_SEED] = p(1, [{
            f: b1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#328a56", "#449573"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_THORNBUSH_SEED] = sprite[Le.INV_THORNBUSH_SEED],
        sprite[Le.INV_CARROT_SEED] = p(1, [{
            f: b1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#c98e2f", "#a36b11"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_CARROT_SEED] = sprite[Le.INV_CARROT_SEED],
        sprite[Le.CHEST_CARROT_SEED] = sprite[Le.INV_CARROT_SEED],
        sprite[Le.INV_WATERMELON_SEED] = p(1, [{
            f: b1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#13a56d", "#098a58"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_WATERMELON_SEED] = sprite[Le.INV_WATERMELON_SEED],
        sprite[Le.CHEST_WATERMELON_SEED] = sprite[Le.INV_WATERMELON_SEED],
        sprite[Le.INV_ALOE_VERA_SEED] = p(1, [{
            f: b1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#3a8214", "#4a9c1e"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_ALOE_VERA_SEED] = sprite[Le.INV_ALOE_VERA_SEED],
        sprite[Le.CHEST_ALOE_VERA_SEED] = sprite[Le.INV_ALOE_VERA_SEED],
        sprite[Le.INV_TOMATO_SEED] = p(1, [{
            f: b1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#b22419", "#99110e"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_TOMATO_SEED] = sprite[Le.INV_TOMATO_SEED],
        sprite[Le.CHEST_TOMATO_SEED] = sprite[Le.INV_TOMATO_SEED],
        sprite[Le.INV_FIRE] = p(1, [{
            f: be,
            x: -2,
            y: -2,
            a: 1,
            r: -Math.PI / 7,
            c: ["#4d2d14", "#432516"]
        }, {
            f: Oe,
            x: -2,
            y: -2,
            a: 1,
            r: -Math.PI / 7,
            c: ["#efd435", "#ec8d35", "#e96132"]
        }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_FIRE] = sprite[Le.INV_FIRE],
        sprite[Le.INV_BIG_FIRE] = p(1, [{
            f: ge,
            x: -2,
            y: -1,
            a: 1,
            r: -Math.PI / 7,
            c: ["#4d2d14", "#432516", "#58645F", "#75827D", "#0c2c2e"]
        }, {
            f: Oe,
            x: -2,
            y: -1,
            a: 1,
            r: -Math.PI / 7,
            c: ["#efd435", "#ec8d35", "#e96132"]
        }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_BIG_FIRE] = sprite[Le.INV_BIG_FIRE],
        sprite[Le.INV_PIRATE_SWORD] = p(1, [{
            f: a1,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"]
        }], .1, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_SUGAR_CAN] = p(1, [{
            f: I1,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"]
        }], .3, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_SWORD_WOOD] = p(1, [{
            f: o1,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#252525", "#73583e", "#493425", "#7d6144", "#5e4530", "#563e2b"]
        }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_SWORD] = p(1, [{
            f: d1,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"]
        }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_SWORD_GOLD] = p(1, [{
            f: E1,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"]
        }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_SWORD_DIAMOND] = p(1, [{
            f: T1,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"]
        }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_SWORD_AMETHYST] = p(1, [{
            f: A1,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"]
        }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_PICK_WOOD] = p(1, [{
            f: r1,
            x: -2,
            y: 5,
            a: 1,
            r: -Math.PI / 5,
            c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"]
        }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_PICK] = p(1, [{
            f: r1,
            x: -2,
            y: 5,
            a: 1,
            r: -Math.PI / 5,
            c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
        }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_PICK_GOLD] = p(1, [{
            f: r1,
            x: -2,
            y: 5,
            a: 1,
            r: -Math.PI / 5,
            c: ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
        }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_PICK_DIAMOND] = p(1, [{
            f: r1,
            x: -2,
            y: 5,
            a: 1,
            r: -Math.PI / 5,
            c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
        }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_PICK_AMETHYST] = p(1, [{
            f: r1,
            x: -2,
            y: 5,
            a: 1,
            r: -Math.PI / 5,
            c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
        }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_PICK_REIDITE] = [],
        sprite[Le.INV_PICK_REIDITE][0] = IMAGES.INV_PICK_REIDITE_OUT,
        sprite[Le.INV_PICK_REIDITE][1] = IMAGES.INV_PICK_REIDITE_IN,
        sprite[Le.INV_PICK_REIDITE][2] = IMAGES.INV_PICK_REIDITE_CLICK,
        sprite[Le.CRAFT_PICK_REIDITE] = sprite[Le.INV_PICK_REIDITE],
        sprite[Le.CHEST_PICK_REIDITE] = sprite[Le.INV_PICK_REIDITE],
        sprite[Le.INV_STONE] = p(1, [{
            f: C1,
            x: -5,
            y: -5,
            a: 1,
            r: 0,
            c: ["#252B28", "#58645F", "#75827D"]
        }], .23, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_GOLD] = p(1, [{
            f: S1,
            x: -5,
            y: -5,
            a: 1,
            r: 0,
            c: ["#282823", "#877c2d", "#c4bc51"]
        }], .43, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_DIAMOND] = p(1, [{
            f: N1,
            x: -5,
            y: -5,
            a: 1,
            r: 0,
            c: ["#232828", "#3fc9c9", "#74ede6"]
        }], .33, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_WOOD] = p(1, [{
            f: be,
            x: 0,
            y: -5,
            a: 1,
            r: Math.PI / 2.5,
            c: ["#4d2d14", "#432516"]
        }], .3, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.CRAFT_SWORD_WOOD] = sprite[Le.INV_SWORD_WOOD],
        sprite[Le.CRAFT_SWORD] = sprite[Le.INV_SWORD],
        sprite[Le.CRAFT_SWORD_GOLD] = sprite[Le.INV_SWORD_GOLD],
        sprite[Le.CRAFT_SWORD_DIAMOND] = sprite[Le.INV_SWORD_DIAMOND],
        sprite[Le.CRAFT_SWORD_AMETHYST] = sprite[Le.INV_SWORD_AMETHYST],
        sprite[Le.CRAFT_PICK_WOOD] = sprite[Le.INV_PICK_WOOD],
        sprite[Le.CRAFT_PICK] = sprite[Le.INV_PICK],
        sprite[Le.CRAFT_PICK_GOLD] = sprite[Le.INV_PICK_GOLD],
        sprite[Le.CRAFT_PICK_DIAMOND] = sprite[Le.INV_PICK_DIAMOND],
        sprite[Le.CRAFT_PICK_AMETHYST] = sprite[Le.INV_PICK_AMETHYST],
        sprite[Le.INV_PLANT] = p(1, [{
            f: Q,
            x: 0,
            y: 0,
            a: 1,
            r: 0
        }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.INV_WORK] = p(1, [{
            f: ie,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]
        }], .45, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_WORK] = sprite[Le.INV_WORK],
        sprite[Le.INV_STONE_WALL] = p(1, [{
            f: U1,
            x: -2,
            y: -2,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
        }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_STONE_WALL] = sprite[Le.INV_STONE_WALL],
        sprite[Le.INV_DIAMOND_WALL] = p(1, [{
            f: k1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
        }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_DIAMOND_WALL] = sprite[Le.INV_DIAMOND_WALL],
        sprite[Le.INV_AMETHYST_WALL] = p(1, [{
            f: U1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
        }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_AMETHYST_WALL] = sprite[Le.INV_AMETHYST_WALL],
        sprite[Le.INV_GOLD_WALL] = p(1, [{
            f: K1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
        }], .4, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_GOLD_WALL] = sprite[Le.INV_GOLD_WALL],
        sprite[Le.INV_WALL] = p(1, [{
            f: z1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
        }], .45, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_WALL] = sprite[Le.INV_WALL],
        sprite[Le.INV_SPIKE] = p(1, [{
            f: Et,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
        }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_SPIKE] = sprite[Le.INV_SPIKE],
        sprite[Le.INV_GOLD_SPIKE] = p(1, [{
            f: At,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#5f6061", "#939393", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
        }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_GOLD_SPIKE] = sprite[Le.INV_GOLD_SPIKE],
        sprite[Le.INV_DIAMOND_SPIKE] = p(1, [{
            f: At,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
        }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_DIAMOND_SPIKE] = sprite[Le.INV_DIAMOND_SPIKE],
        sprite[Le.INV_STONE_SPIKE] = p(1, [{
            f: Tt,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#5f6061", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
        }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_STONE_SPIKE] = sprite[Le.INV_STONE_SPIKE],
        sprite[Le.INV_AMETHYST_SPIKE] = p(1, [{
            f: Tt,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#5f6061", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
        }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_AMETHYST_SPIKE] = sprite[Le.INV_AMETHYST_SPIKE],
        sprite[Le.INV_DOOR_WOOD_CLOSE] = p(1, [{
            f: F1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_DOOR_WOOD_CLOSE] = sprite[Le.INV_DOOR_WOOD_CLOSE],
        sprite[Le.INV_DOOR_STONE_CLOSE] = p(1, [{
            f: Y1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_DOOR_STONE_CLOSE] = sprite[Le.INV_DOOR_STONE_CLOSE],
        sprite[Le.INV_DOOR_AMETHYST_CLOSE] = p(1, [{
            f: Y1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_DOOR_AMETHYST_CLOSE] = sprite[Le.INV_DOOR_AMETHYST_CLOSE],
        sprite[Le.INV_DOOR_GOLD_CLOSE] = p(1, [{
            f: J1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_DOOR_GOLD_CLOSE] = sprite[Le.INV_DOOR_GOLD_CLOSE],
        sprite[Le.INV_DOOR_DIAMOND_CLOSE] = p(1, [{
            f: q1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_DOOR_DIAMOND_CLOSE] = sprite[Le.INV_DOOR_DIAMOND_CLOSE],
        sprite[Le.INV_CHEST] = p(1, [{
            f: ut,
            x: 0,
            y: 2,
            a: 1,
            r: 0,
            c: ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]
        }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_CHEST] = sprite[Le.INV_CHEST],
        sprite[Le.INV_MEAT] = p(1, [{
            f: oe,
            x: 0,
            y: -3,
            a: 1,
            r: 0,
            c: ["#dd5d57", "#ffffff", "#5e5d5e", "#ffffff"]
        }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.INV_COOKED_MEAT] = p(1, [{
            f: oe,
            x: 0,
            y: -3,
            a: 1,
            r: 0,
            c: ["#602920", "#844f49", "#5e5d5e", "#d3ccc7"]
        }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_COOKED_MEAT] = sprite[Le.INV_COOKED_MEAT],
        sprite[Le.INV_CORD] = p(1, [{
            f: Ie,
            x: -3,
            y: -3,
            a: 1,
            r: 0,
            c: ["#cec0c4", "#ffffff", "#6d6768"]
        }], .9, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.INV_BLUE_CORD] = p(1, [{
            f: Ie,
            x: -3,
            y: -3,
            a: 1,
            r: 0,
            c: ["#d4e9ec", "#37b1d7", "#506c71"]
        }], .9, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_BLUE_CORD] = sprite[Le.INV_BLUE_CORD],
        sprite[Le.INV_FUR] = p(1, [{
            f: lt,
            x: -3,
            y: -3,
            a: 1,
            r: 0,
            c: ["#ef96be", "#ffffff"]
        }], .5, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_FUR_BOAR] = p(1, [{
            f: lt,
            x: -3,
            y: -3,
            a: 1,
            r: 0,
            c: ["#55423e", "#ffffff"]
        }], .5, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_SPECIAL_FUR] = p(1, [{
            f: V1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#ffffff", "#e7e2e2", "#b35c46", "#a34d37"]
        }], .25, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_SPECIAL_FUR_2] = p(1, [{
            f: V1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#14151b", "#000000", "#b35c46", "#a34d37"]
        }], .25, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_KRAKEN_SKIN] = p(1, [{
            f: lt,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#201851", "#b6222a"]
        }], .5, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_FUR_WOLF] = p(1, [{
            f: lt,
            x: -3,
            y: -3,
            a: 1,
            r: 0,
            c: ["#231f20", "#b6222a"]
        }], .5, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_FUR_WINTER] = p(1, [{
            f: lt,
            x: -3,
            y: -3,
            a: 1,
            r: 0,
            c: ["#ffffff", "#b6222a"]
        }], .5, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_EARMUFFS] = p(1, [{
            f: ct,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]
        }], .4, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_EARMUFFS] = sprite[Le.INV_EARMUFFS],
        sprite[Le.INV_COAT] = p(1, [{
            f: Z1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]
        }], .4, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_COAT] = sprite[Le.INV_COAT],
        sprite[Le.INV_CAP_SCARF] = p(1, [{
            f: ht,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]
        }], .4, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_CAP_SCARF] = sprite[Le.INV_CAP_SCARF],
        sprite[Le.INV_CHRISTMAS_HAT] = p(1, [{
            f: ye,
            x: 0,
            y: 5,
            a: 1,
            r: 0,
            c: ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]
        }], .35, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CHEST_CHRISTMAS_HAT] = sprite[Le.INV_CHRISTMAS_HAT],
        sprite[Le.INV_ELF_HAT] = p(1, [{
            f: Me,
            x: 0,
            y: 5,
            a: 1,
            r: 0,
            c: ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]
        }], .35, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CHEST_ELF_HAT] = sprite[Le.INV_ELF_HAT],
        sprite[Le.INV_BANDAGE] = p(1, [{
            f: pe,
            x: -2,
            y: -2,
            a: 1,
            r: 0,
            c: ["#ffffff", "#cec0c4"]
        }], .35, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_BANDAGE] = sprite[Le.INV_BANDAGE],
        sprite[Le.INV_BAG] = [],
        sprite[Le.INV_BAG][0] = IMAGES.INV_BAG_OUT,
        sprite[Le.INV_BAG][1] = IMAGES.INV_BAG_IN,
        sprite[Le.INV_BAG][2] = IMAGES.INV_BAG_CLICK,
        sprite[Le.CRAFT_BAG] = sprite[Le.INV_BAG],
        sprite[Le.INV_PITCHFORK] = [],
        sprite[Le.INV_PITCHFORK][0] = IMAGES.INV_PITCHFORK_OUT,
        sprite[Le.INV_PITCHFORK][1] = IMAGES.INV_PITCHFORK_IN,
        sprite[Le.INV_PITCHFORK][2] = IMAGES.INV_PITCHFORK_CLICK,
        sprite[Le.CRAFT_PITCHFORK] = sprite[Le.INV_PITCHFORK],
        sprite[Le.CHEST_PITCHFORK] = sprite[Le.INV_PITCHFORK],
        sprite[Le.INV_PITCHFORK2] = [],
        sprite[Le.INV_PITCHFORK2][0] = IMAGES.INV_PITCHFORK2_OUT,
        sprite[Le.INV_PITCHFORK2][1] = IMAGES.INV_PITCHFORK2_IN,
        sprite[Le.INV_PITCHFORK2][2] = IMAGES.INV_PITCHFORK2_CLICK,
        sprite[Le.CRAFT_PITCHFORK2] = sprite[Le.INV_PITCHFORK2],
        sprite[Le.CHEST_PITCHFORK2] = sprite[Le.INV_PITCHFORK2],
        sprite[Le.INV_PITCHFORK_PART] = [],
        sprite[Le.INV_PITCHFORK_PART][0] = IMAGES.INV_PITCHFORK_PART_CLICK,
        sprite[Le.INV_PITCHFORK_PART][1] = IMAGES.INV_PITCHFORK_PART_CLICK,
        sprite[Le.INV_PITCHFORK_PART][2] = IMAGES.INV_PITCHFORK_PART_CLICK,
        sprite[Le.CHEST_PITCHFORK_PART] = sprite[Le.INV_PITCHFORK_PART],
        sprite[Le.INV_PILOT_HELMET] = [],
        sprite[Le.INV_PILOT_HELMET][0] = IMAGES.INV_PILOT_HELMET_OUT,
        sprite[Le.INV_PILOT_HELMET][1] = IMAGES.INV_PILOT_HELMET_IN,
        sprite[Le.INV_PILOT_HELMET][2] = IMAGES.INV_PILOT_HELMET_CLICK,
        sprite[Le.CRAFT_PILOT_HELMET] = sprite[Le.INV_PILOT_HELMET],
        sprite[Le.CHEST_PILOT_HELMET] = sprite[Le.INV_PILOT_HELMET],
        sprite[Le.INV_PILOT_GLASSES] = [],
        sprite[Le.INV_PILOT_GLASSES][0] = IMAGES.INV_PILOT_GLASSES_CLICK,
        sprite[Le.INV_PILOT_GLASSES][1] = IMAGES.INV_PILOT_GLASSES_CLICK,
        sprite[Le.INV_PILOT_GLASSES][2] = IMAGES.INV_PILOT_GLASSES_CLICK,
        sprite[Le.CHEST_PILOT_GLASSES] = sprite[Le.INV_PILOT_GLASSES],
        sprite[Le.INV_WOOD_TOWER] = [],
        sprite[Le.INV_WOOD_TOWER][0] = IMAGES.INV_WOOD_TOWER_OUT,
        sprite[Le.INV_WOOD_TOWER][1] = IMAGES.INV_WOOD_TOWER_IN,
        sprite[Le.INV_WOOD_TOWER][2] = IMAGES.INV_WOOD_TOWER_CLICK,
        sprite[Le.CRAFT_WOOD_TOWER] = sprite[Le.INV_WOOD_TOWER],
        sprite[Le.CHEST_WOOD_TOWER] = sprite[Le.INV_WOOD_TOWER],
        sprite[Le.INV_WOOD_DOOR_SPIKE] = [],
        sprite[Le.INV_WOOD_DOOR_SPIKE][0] = IMAGES.INV_WOOD_DOOR_SPIKE_OUT,
        sprite[Le.INV_WOOD_DOOR_SPIKE][1] = IMAGES.INV_WOOD_DOOR_SPIKE_IN,
        sprite[Le.INV_WOOD_DOOR_SPIKE][2] = IMAGES.INV_WOOD_DOOR_SPIKE_CLICK,
        sprite[Le.CRAFT_WOOD_DOOR_SPIKE] = sprite[Le.INV_WOOD_DOOR_SPIKE],
        sprite[Le.CHEST_WOOD_DOOR_SPIKE] = sprite[Le.INV_WOOD_DOOR_SPIKE],
        sprite[Le.INV_STONE_DOOR_SPIKE] = [],
        sprite[Le.INV_STONE_DOOR_SPIKE][0] = IMAGES.INV_STONE_DOOR_SPIKE_OUT,
        sprite[Le.INV_STONE_DOOR_SPIKE][1] = IMAGES.INV_STONE_DOOR_SPIKE_IN,
        sprite[Le.INV_STONE_DOOR_SPIKE][2] = IMAGES.INV_STONE_DOOR_SPIKE_CLICK,
        sprite[Le.CRAFT_STONE_DOOR_SPIKE] = sprite[Le.INV_STONE_DOOR_SPIKE],
        sprite[Le.CHEST_STONE_DOOR_SPIKE] = sprite[Le.INV_STONE_DOOR_SPIKE],
        sprite[Le.INV_GOLD_DOOR_SPIKE] = [],
        sprite[Le.INV_GOLD_DOOR_SPIKE][0] = IMAGES.INV_GOLD_DOOR_SPIKE_OUT,
        sprite[Le.INV_GOLD_DOOR_SPIKE][1] = IMAGES.INV_GOLD_DOOR_SPIKE_IN,
        sprite[Le.INV_GOLD_DOOR_SPIKE][2] = IMAGES.INV_GOLD_DOOR_SPIKE_CLICK,
        sprite[Le.CRAFT_GOLD_DOOR_SPIKE] = sprite[Le.INV_GOLD_DOOR_SPIKE],
        sprite[Le.CHEST_GOLD_DOOR_SPIKE] = sprite[Le.INV_GOLD_DOOR_SPIKE],
        sprite[Le.INV_DIAMOND_DOOR_SPIKE] = [],
        sprite[Le.INV_DIAMOND_DOOR_SPIKE][0] = IMAGES.INV_DIAMOND_DOOR_SPIKE_OUT,
        sprite[Le.INV_DIAMOND_DOOR_SPIKE][1] = IMAGES.INV_DIAMOND_DOOR_SPIKE_IN,
        sprite[Le.INV_DIAMOND_DOOR_SPIKE][2] = IMAGES.INV_DIAMOND_DOOR_SPIKE_CLICK,
        sprite[Le.CRAFT_DIAMOND_DOOR_SPIKE] = sprite[Le.INV_DIAMOND_DOOR_SPIKE],
        sprite[Le.CHEST_DIAMOND_DOOR_SPIKE] = sprite[Le.INV_DIAMOND_DOOR_SPIKE],
        sprite[Le.INV_AMETHYST_DOOR_SPIKE] = [],
        sprite[Le.INV_AMETHYST_DOOR_SPIKE][0] = IMAGES.INV_AMETHYST_DOOR_SPIKE_OUT,
        sprite[Le.INV_AMETHYST_DOOR_SPIKE][1] = IMAGES.INV_AMETHYST_DOOR_SPIKE_IN,
        sprite[Le.INV_AMETHYST_DOOR_SPIKE][2] = IMAGES.INV_AMETHYST_DOOR_SPIKE_CLICK,
        sprite[Le.CRAFT_AMETHYST_DOOR_SPIKE] = sprite[Le.INV_AMETHYST_DOOR_SPIKE],
        sprite[Le.CHEST_AMETHYST_DOOR_SPIKE] = sprite[Le.INV_AMETHYST_DOOR_SPIKE],
        sprite[Le.INV_REIDITE_DOOR_SPIKE] = [],
        sprite[Le.INV_REIDITE_DOOR_SPIKE][0] = IMAGES.INV_REIDITE_DOOR_SPIKE_OUT,
        sprite[Le.INV_REIDITE_DOOR_SPIKE][1] = IMAGES.INV_REIDITE_DOOR_SPIKE_IN,
        sprite[Le.INV_REIDITE_DOOR_SPIKE][2] = IMAGES.INV_REIDITE_DOOR_SPIKE_CLICK,
        sprite[Le.CRAFT_REIDITE_DOOR_SPIKE] = sprite[Le.INV_REIDITE_DOOR_SPIKE],
        sprite[Le.CHEST_REIDITE_DOOR_SPIKE] = sprite[Le.INV_REIDITE_DOOR_SPIKE],
        sprite[Le.INV_REIDITE_DOOR] = [],
        sprite[Le.INV_REIDITE_DOOR][0] = IMAGES.INV_REIDITE_DOOR_OUT,
        sprite[Le.INV_REIDITE_DOOR][1] = IMAGES.INV_REIDITE_DOOR_IN,
        sprite[Le.INV_REIDITE_DOOR][2] = IMAGES.INV_REIDITE_DOOR_CLICK,
        sprite[Le.CRAFT_REIDITE_DOOR] = sprite[Le.INV_REIDITE_DOOR],
        sprite[Le.CHEST_REIDITE_DOOR] = sprite[Le.INV_REIDITE_DOOR],
        sprite[Le.INV_REIDITE_SPIKE] = [],
        sprite[Le.INV_REIDITE_SPIKE][0] = IMAGES.INV_REIDITE_SPIKE_OUT,
        sprite[Le.INV_REIDITE_SPIKE][1] = IMAGES.INV_REIDITE_SPIKE_IN,
        sprite[Le.INV_REIDITE_SPIKE][2] = IMAGES.INV_REIDITE_SPIKE_CLICK,
        sprite[Le.CRAFT_REIDITE_SPIKE] = sprite[Le.INV_REIDITE_SPIKE],
        sprite[Le.CHEST_REIDITE_SPIKE] = sprite[Le.INV_REIDITE_SPIKE],
        sprite[Le.INV_REIDITE_WALL] = [],
        sprite[Le.INV_REIDITE_WALL][0] = IMAGES.INV_REIDITE_WALL_OUT,
        sprite[Le.INV_REIDITE_WALL][1] = IMAGES.INV_REIDITE_WALL_IN,
        sprite[Le.INV_REIDITE_WALL][2] = IMAGES.INV_REIDITE_WALL_CLICK,
        sprite[Le.CRAFT_REIDITE_WALL] = sprite[Le.INV_REIDITE_WALL],
        sprite[Le.CHEST_REIDITE_WALL] = sprite[Le.INV_REIDITE_WALL],
        sprite[Le.INV_PENGUIN_FEATHER] = [],
        sprite[Le.INV_PENGUIN_FEATHER][0] = IMAGES.INV_PENGUIN_FEATHER,
        sprite[Le.INV_PENGUIN_FEATHER][1] = IMAGES.INV_PENGUIN_FEATHER,
        sprite[Le.INV_PENGUIN_FEATHER][2] = IMAGES.INV_PENGUIN_FEATHER,
        sprite[Le.CRAFT_PENGUIN_FEATHER] = sprite[Le.INV_PENGUIN_FEATHER],
        sprite[Le.CHEST_PENGUIN_FEATHER] = sprite[Le.INV_PENGUIN_FEATHER],
        sprite[Le.INV_HAWK_FEATHER] = [],
        sprite[Le.INV_HAWK_FEATHER][0] = IMAGES.INV_HAWK_FEATHER,
        sprite[Le.INV_HAWK_FEATHER][1] = IMAGES.INV_HAWK_FEATHER,
        sprite[Le.INV_HAWK_FEATHER][2] = IMAGES.INV_HAWK_FEATHER,
        sprite[Le.CRAFT_HAWK_FEATHER] = sprite[Le.INV_HAWK_FEATHER],
        sprite[Le.CHEST_HAWK_FEATHER] = sprite[Le.INV_HAWK_FEATHER],
        sprite[Le.INV_VULTURE_FEATHER] = [],
        sprite[Le.INV_VULTURE_FEATHER][0] = IMAGES.INV_VULTURE_FEATHER,
        sprite[Le.INV_VULTURE_FEATHER][1] = IMAGES.INV_VULTURE_FEATHER,
        sprite[Le.INV_VULTURE_FEATHER][2] = IMAGES.INV_VULTURE_FEATHER,
        sprite[Le.CRAFT_VULTURE_FEATHER] = sprite[Le.INV_VULTURE_FEATHER],
        sprite[Le.CHEST_VULTURE_FEATHER] = sprite[Le.INV_VULTURE_FEATHER],
        sprite[Le.INV_EMERALD] = [],
        sprite[Le.INV_EMERALD][0] = IMAGES.INV_EMERALD,
        sprite[Le.INV_EMERALD][1] = IMAGES.INV_EMERALD,
        sprite[Le.INV_EMERALD][2] = IMAGES.INV_EMERALD,
        sprite[Le.CHEST_EMERALD] = sprite[Le.INV_EMERALD],
        sprite[Le.INV_SADDLE] = [],
        sprite[Le.INV_SADDLE][0] = IMAGES.INV_SADDLE_OUT,
        sprite[Le.INV_SADDLE][1] = IMAGES.INV_SADDLE_IN,
        sprite[Le.INV_SADDLE][2] = IMAGES.INV_SADDLE_CLICK,
        sprite[Le.CRAFT_SADDLE] = sprite[Le.INV_SADDLE],
        sprite[Le.CHEST_SADDLE] = sprite[Le.INV_SADDLE],
        sprite[Le.INV_WAND1] = [],
        sprite[Le.INV_WAND1][0] = IMAGES.INV_WAND1_OUT,
        sprite[Le.INV_WAND1][1] = IMAGES.INV_WAND1_IN,
        sprite[Le.INV_WAND1][2] = IMAGES.INV_WAND1_CLICK,
        sprite[Le.CRAFT_WAND1] = sprite[Le.INV_WAND1],
        sprite[Le.CHEST_WAND1] = sprite[Le.INV_WAND1],
        sprite[Le.INV_WAND2] = [],
        sprite[Le.INV_WAND2][0] = IMAGES.INV_WAND2_OUT,
        sprite[Le.INV_WAND2][1] = IMAGES.INV_WAND2_IN,
        sprite[Le.INV_WAND2][2] = IMAGES.INV_WAND2_CLICK,
        sprite[Le.CRAFT_WAND2] = sprite[Le.INV_WAND2],
        sprite[Le.CHEST_WAND2] = sprite[Le.INV_WAND2],
        sprite[Le.INV_MOUNT_BOAR] = [],
        sprite[Le.INV_MOUNT_BOAR][0] = IMAGES.INV_MOUNT_BOAR_OUT,
        sprite[Le.INV_MOUNT_BOAR][1] = IMAGES.INV_MOUNT_BOAR_IN,
        sprite[Le.INV_MOUNT_BOAR][2] = IMAGES.INV_MOUNT_BOAR_CLICK,
        sprite[Le.CRAFT_MOUNT_BOAR] = sprite[Le.INV_MOUNT_BOAR],
        sprite[Le.CHEST_MOUNT_BOAR] = sprite[Le.INV_MOUNT_BOAR],
        sprite[Le.INV_CRAB_BOSS] = [],
        sprite[Le.INV_CRAB_BOSS][0] = IMAGES.INV_CRAB_BOSS_OUT,
        sprite[Le.INV_CRAB_BOSS][1] = IMAGES.INV_CRAB_BOSS_IN,
        sprite[Le.INV_CRAB_BOSS][2] = IMAGES.INV_CRAB_BOSS_CLICK,
        sprite[Le.CRAFT_CRAB_BOSS] = sprite[Le.INV_CRAB_BOSS],
        sprite[Le.CHEST_CRAB_BOSS] = sprite[Le.INV_CRAB_BOSS],
        sprite[Le.INV_HAWK] = [],
        sprite[Le.INV_HAWK][0] = IMAGES.INV_HAWK_OUT,
        sprite[Le.INV_HAWK][1] = IMAGES.INV_HAWK_IN,
        sprite[Le.INV_HAWK][2] = IMAGES.INV_HAWK_CLICK,
        sprite[Le.CRAFT_HAWK] = sprite[Le.INV_HAWK],
        sprite[Le.CHEST_HAWK] = sprite[Le.INV_HAWK],
        sprite[Le.INV_VULTURE] = [],
        sprite[Le.INV_VULTURE][0] = IMAGES.INV_VULTURE_OUT,
        sprite[Le.INV_VULTURE][1] = IMAGES.INV_VULTURE_IN,
        sprite[Le.INV_VULTURE][2] = IMAGES.INV_VULTURE_CLICK,
        sprite[Le.CRAFT_VULTURE] = sprite[Le.INV_VULTURE],
        sprite[Le.CHEST_VULTURE] = sprite[Le.INV_VULTURE],
        sprite[Le.INV_TURBAN1] = [],
        sprite[Le.INV_TURBAN1][0] = IMAGES.INV_TURBAN1_OUT,
        sprite[Le.INV_TURBAN1][1] = IMAGES.INV_TURBAN1_IN,
        sprite[Le.INV_TURBAN1][2] = IMAGES.INV_TURBAN1_CLICK,
        sprite[Le.CRAFT_TURBAN1] = sprite[Le.INV_TURBAN1],
        sprite[Le.CHEST_TURBAN1] = sprite[Le.INV_TURBAN1],
        sprite[Le.INV_TURBAN2] = [],
        sprite[Le.INV_TURBAN2][0] = IMAGES.INV_TURBAN2_OUT,
        sprite[Le.INV_TURBAN2][1] = IMAGES.INV_TURBAN2_IN,
        sprite[Le.INV_TURBAN2][2] = IMAGES.INV_TURBAN2_CLICK,
        sprite[Le.CRAFT_TURBAN2] = sprite[Le.INV_TURBAN2],
        sprite[Le.CHEST_TURBAN2] = sprite[Le.INV_TURBAN2],
        sprite[Le.INV_PLANE] = [],
        sprite[Le.INV_PLANE][0] = IMAGES.INV_PLANE_OUT,
        sprite[Le.INV_PLANE][1] = IMAGES.INV_PLANE_IN,
        sprite[Le.INV_PLANE][2] = IMAGES.INV_PLANE_CLICK,
        sprite[Le.CRAFT_PLANE] = sprite[Le.INV_PLANE],
        sprite[Le.CHEST_PLANE] = sprite[Le.INV_PLANE],
        sprite[Le.INV_BABY_DRAGON] = [],
        sprite[Le.INV_BABY_DRAGON][0] = IMAGES.INV_BABY_DRAGON_OUT,
        sprite[Le.INV_BABY_DRAGON][1] = IMAGES.INV_BABY_DRAGON_IN,
        sprite[Le.INV_BABY_DRAGON][2] = IMAGES.INV_BABY_DRAGON_CLICK,
        sprite[Le.CRAFT_BABY_DRAGON] = sprite[Le.INV_BABY_DRAGON],
        sprite[Le.CHEST_BABY_DRAGON] = sprite[Le.INV_BABY_DRAGON],
        sprite[Le.INV_BABY_MAMMOTH] = [],
        sprite[Le.INV_BABY_MAMMOTH][0] = IMAGES.INV_BABY_MAMMOTH_OUT,
        sprite[Le.INV_BABY_MAMMOTH][1] = IMAGES.INV_BABY_MAMMOTH_IN,
        sprite[Le.INV_BABY_MAMMOTH][2] = IMAGES.INV_BABY_MAMMOTH_CLICK,
        sprite[Le.CRAFT_BABY_MAMMOTH] = sprite[Le.INV_BABY_MAMMOTH],
        sprite[Le.CHEST_BABY_MAMMOTH] = sprite[Le.INV_BABY_MAMMOTH],
        sprite[Le.INV_BABY_LAVA] = [],
        sprite[Le.INV_BABY_LAVA][0] = IMAGES.INV_BABY_LAVA_OUT,
        sprite[Le.INV_BABY_LAVA][1] = IMAGES.INV_BABY_LAVA_IN,
        sprite[Le.INV_BABY_LAVA][2] = IMAGES.INV_BABY_LAVA_CLICK,
        sprite[Le.CRAFT_BABY_LAVA] = sprite[Le.INV_BABY_LAVA],
        sprite[Le.CHEST_BABY_LAVA] = sprite[Le.INV_BABY_LAVA],
        sprite[Le.INV_BREAD_OVEN] = p(1, [{
            f: Ai,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]
        }, {
            f: Ii,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#e4c027"]
        }], .14, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_BREAD_OVEN] = sprite[Le.INV_BREAD_OVEN],
        sprite[Le.INV_FURNACE] = p(1, [{
            f: X1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]
        }], .18, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_FURNACE] = sprite[Le.INV_FURNACE],
        sprite[Le.INV_BED] = p(1, [{
            f: et,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99", "#ded4b4", "#d6ceab", "#c796c2", "#bc83b7", "#ffffff", "#87519c", "#703e94", "#3eb67f", "#218f65", "#efe7c5", "#d093c4"]
        }], .32, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_BED] = sprite[Le.INV_BED],
        sprite[Le.CHEST_BED] = sprite[Le.INV_BED],
        sprite[Le.INV_CRAB_LOOT] = p(1, [{
            f: Q1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]
        }], .17, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CHEST_CRAB_LOOT] = sprite[Le.INV_CRAB_LOOT],
        sprite[Le.INV_CRAB_SPEAR] = p(1, [{
            f: it,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"]
        }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_CRAB_SPEAR] = sprite[Le.INV_CRAB_SPEAR],
        sprite[Le.CHEST_CRAB_SPEAR] = sprite[Le.INV_CRAB_SPEAR],
        sprite[Le.INV_WOOD_SPEAR] = p(1, [{
            f: nt,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"]
        }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_WOOD_SPEAR] = sprite[Le.INV_WOOD_SPEAR],
        sprite[Le.INV_SPEAR] = p(1, [{
            f: rt,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"]
        }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_SPEAR] = sprite[Le.INV_SPEAR],
        sprite[Le.INV_GOLD_SPEAR] = p(1, [{
            f: ot,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"]
        }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_GOLD_SPEAR] = sprite[Le.INV_GOLD_SPEAR],
        sprite[Le.INV_DIAMOND_SPEAR] = p(1, [{
            f: at,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"]
        }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_DIAMOND_SPEAR] = sprite[Le.INV_DIAMOND_SPEAR],
        sprite[Le.INV_AMETHYST_SPEAR] = p(1, [{
            f: st,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"]
        }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_AMETHYST_SPEAR] = sprite[Le.INV_AMETHYST_SPEAR],
        sprite[Le.INV_DRAGON_SPEAR] = p(1, [{
            f: dt,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"]
        }], .38, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_DRAGON_SPEAR] = sprite[Le.INV_DRAGON_SPEAR],
        sprite[Le.CHEST_DRAGON_SPEAR] = sprite[Le.INV_DRAGON_SPEAR],
        sprite[Le.INV_HAMMER] = p(1, [{
            f: pt,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
        }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_HAMMER] = sprite[Le.INV_HAMMER],
        sprite[Le.INV_SPANNER] = p(1, [{
            f: Ui,
            x: 0,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#939393", "#5f6061"]
        }], .3, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_SPANNER] = sprite[Le.INV_SPANNER],
        sprite[Le.INV_SUPER_HAMMER] = p(1, [{
            f: di,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb", "#42cc90"]
        }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_SUPER_HAMMER] = sprite[Le.INV_SUPER_HAMMER],
        sprite[Le.INV_HAMMER_GOLD] = p(1, [{
            f: pt,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
        }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_HAMMER_GOLD] = sprite[Le.INV_HAMMER_GOLD],
        sprite[Le.INV_HAMMER_DIAMOND] = p(1, [{
            f: pt,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
        }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_HAMMER_DIAMOND] = sprite[Le.INV_HAMMER_DIAMOND],
        sprite[Le.INV_HAMMER_AMETHYST] = p(1, [{
            f: pt,
            x: 2,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
        }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_HAMMER_AMETHYST] = sprite[Le.INV_HAMMER_AMETHYST],
        sprite[Le.INV_HAMMER_REIDITE] = [],
        sprite[Le.INV_HAMMER_REIDITE][0] = IMAGES.INV_HAMMER_REIDITE_OUT,
        sprite[Le.INV_HAMMER_REIDITE][1] = IMAGES.INV_HAMMER_REIDITE_IN,
        sprite[Le.INV_HAMMER_REIDITE][2] = IMAGES.INV_HAMMER_REIDITE_CLICK,
        sprite[Le.CHEST_HAMMER_REIDITE] = sprite[Le.INV_HAMMER_REIDITE],
        sprite[Le.CRAFT_HAMMER_REIDITE] = sprite[Le.INV_HAMMER_REIDITE],
        sprite[Le.INV_EMERALD_MACHINE] = [],
        sprite[Le.INV_EMERALD_MACHINE][0] = IMAGES.INV_EMERALD_MACHINE_OUT,
        sprite[Le.INV_EMERALD_MACHINE][1] = IMAGES.INV_EMERALD_MACHINE_IN,
        sprite[Le.INV_EMERALD_MACHINE][2] = IMAGES.INV_EMERALD_MACHINE_CLICK,
        sprite[Le.CHEST_EMERALD_MACHINE] = sprite[Le.INV_EMERALD_MACHINE],
        sprite[Le.CRAFT_EMERALD_MACHINE] = sprite[Le.INV_EMERALD_MACHINE],
        sprite[Le.INV_EXTRACTOR_MACHINE_STONE] = [],
        sprite[Le.INV_EXTRACTOR_MACHINE_STONE][0] = IMAGES.INV_EXTRACTOR_MACHINE_STONE_OUT,
        sprite[Le.INV_EXTRACTOR_MACHINE_STONE][1] = IMAGES.INV_EXTRACTOR_MACHINE_STONE_IN,
        sprite[Le.INV_EXTRACTOR_MACHINE_STONE][2] = IMAGES.INV_EXTRACTOR_MACHINE_STONE_CLICK,
        sprite[Le.CHEST_EXTRACTOR_MACHINE_STONE] = sprite[Le.INV_EXTRACTOR_MACHINE_STONE],
        sprite[Le.CRAFT_EXTRACTOR_MACHINE_STONE] = sprite[Le.INV_EXTRACTOR_MACHINE_STONE],
        sprite[Le.INV_EXTRACTOR_MACHINE_GOLD] = [],
        sprite[Le.INV_EXTRACTOR_MACHINE_GOLD][0] = IMAGES.INV_EXTRACTOR_MACHINE_GOLD_OUT,
        sprite[Le.INV_EXTRACTOR_MACHINE_GOLD][1] = IMAGES.INV_EXTRACTOR_MACHINE_GOLD_IN,
        sprite[Le.INV_EXTRACTOR_MACHINE_GOLD][2] = IMAGES.INV_EXTRACTOR_MACHINE_GOLD_CLICK,
        sprite[Le.CHEST_EXTRACTOR_MACHINE_GOLD] = sprite[Le.INV_EXTRACTOR_MACHINE_GOLD],
        sprite[Le.CRAFT_EXTRACTOR_MACHINE_GOLD] = sprite[Le.INV_EXTRACTOR_MACHINE_GOLD],
        sprite[Le.INV_EXTRACTOR_MACHINE_DIAMOND] = [],
        sprite[Le.INV_EXTRACTOR_MACHINE_DIAMOND][0] = IMAGES.INV_EXTRACTOR_MACHINE_DIAMOND_OUT,
        sprite[Le.INV_EXTRACTOR_MACHINE_DIAMOND][1] = IMAGES.INV_EXTRACTOR_MACHINE_DIAMOND_IN,
        sprite[Le.INV_EXTRACTOR_MACHINE_DIAMOND][2] = IMAGES.INV_EXTRACTOR_MACHINE_DIAMOND_CLICK,
        sprite[Le.CHEST_EXTRACTOR_MACHINE_DIAMOND] = sprite[Le.INV_EXTRACTOR_MACHINE_DIAMOND],
        sprite[Le.CRAFT_EXTRACTOR_MACHINE_DIAMOND] = sprite[Le.INV_EXTRACTOR_MACHINE_DIAMOND],
        sprite[Le.INV_EXTRACTOR_MACHINE_AMETHYST] = [],
        sprite[Le.INV_EXTRACTOR_MACHINE_AMETHYST][0] = IMAGES.INV_EXTRACTOR_MACHINE_AMETHYST_OUT,
        sprite[Le.INV_EXTRACTOR_MACHINE_AMETHYST][1] = IMAGES.INV_EXTRACTOR_MACHINE_AMETHYST_IN,
        sprite[Le.INV_EXTRACTOR_MACHINE_AMETHYST][2] = IMAGES.INV_EXTRACTOR_MACHINE_AMETHYST_CLICK,
        sprite[Le.CHEST_EXTRACTOR_MACHINE_AMETHYST] = sprite[Le.INV_EXTRACTOR_MACHINE_AMETHYST],
        sprite[Le.CRAFT_EXTRACTOR_MACHINE_AMETHYST] = sprite[Le.INV_EXTRACTOR_MACHINE_AMETHYST],
        sprite[Le.INV_EXTRACTOR_MACHINE_REIDITE] = [],
        sprite[Le.INV_EXTRACTOR_MACHINE_REIDITE][0] = IMAGES.INV_EXTRACTOR_MACHINE_REIDITE_OUT,
        sprite[Le.INV_EXTRACTOR_MACHINE_REIDITE][1] = IMAGES.INV_EXTRACTOR_MACHINE_REIDITE_IN,
        sprite[Le.INV_EXTRACTOR_MACHINE_REIDITE][2] = IMAGES.INV_EXTRACTOR_MACHINE_REIDITE_CLICK,
        sprite[Le.CHEST_EXTRACTOR_MACHINE_REIDITE] = sprite[Le.INV_EXTRACTOR_MACHINE_REIDITE],
        sprite[Le.CRAFT_EXTRACTOR_MACHINE_REIDITE] = sprite[Le.INV_EXTRACTOR_MACHINE_REIDITE],
        sprite[Le.INV_LOCK] = p(1, [{
            f: qt,
            x: -2,
            y: -2,
            a: 1,
            r: 0,
            c: ["#141414", "#816511", "#c4a23a", "#3a3a3a"]
        }], .8, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.CRAFT_LOCK] = sprite[Le.INV_LOCK],
        sprite[Le.INV_LOCKPICK] = p(1, [{
            f: ti,
            x: -2,
            y: -2,
            a: 1,
            r: -Math.PI / 5,
            c: ["#141414", "#c4a23a", "#816511"]
        }], .08, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.CRAFT_LOCKPICK] = sprite[Le.INV_LOCKPICK],
        sprite[Le.INV_DRAGON_HEART] = p(1, [{
            f: ai,
            x: -2,
            y: -2,
            a: 1,
            r: 0,
            c: ["#141414", "#178a99", "#0a6372", "#03282e"]
        }], .3, ["#2b5c48", "#2b5c48", "#2b5c48"], .7),
        sprite[Le.INV_LAVA_HEART] = p(1, [{
            f: ai,
            x: -2,
            y: -2,
            a: 1,
            r: 0,
            c: ["#120202", "#991616", "#750a0a", "#120202"]
        }], .3, ["#2b5c48", "#2b5c48", "#2b5c48"], .7),
        sprite[Le.INV_RESURRECTION] = p(1, [{
            f: ii,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#347f93", "#54a4ba"]
        }, {
            f: oi,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc", "#418ba5", "#59b8ce"]
        }, {
            f: ri,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#a9e4ed", "#86d4e0"]
        }, {
            f: ni,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]
        }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_RESURRECTION] = sprite[Le.INV_RESURRECTION],
        sprite[Le.INV_TOTEM] = p(1, [{
            f: Zt,
            x: 45,
            y: 70,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#4c3a15", "#634828", "#564021"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_TOTEM] = sprite[Le.INV_TOTEM],
        sprite[Le.INV_AMETHYST_HELMET] = p(1, [{
            f: Jt,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]
        }], .52, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_AMETHYST_HELMET] = sprite[Le.INV_AMETHYST_HELMET],
        sprite[Le.INV_WINTER_HOOD] = p(1, [{
            f: vi,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#2a2938", "#242330", "#313041", "#1b1a25"]
        }], .12, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_WINTER_HOOD] = sprite[Le.INV_WINTER_HOOD],
        sprite[Le.INV_HOOD] = p(1, [{
            f: fi,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#2a2938", "#242330", "#313041"]
        }], .25, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_HOOD] = sprite[Le.INV_HOOD],
        sprite[Le.INV_WINTER_PEASANT] = p(1, [{
            f: Mi,
            x: 0,
            y: 3,
            a: 1,
            r: 0,
            c: ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"]
        }], .39, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_WINTER_PEASANT] = sprite[Le.INV_WINTER_PEASANT],
        sprite[Le.INV_PEASANT] = p(1, [{
            f: Mi,
            x: 0,
            y: 3,
            a: 1,
            r: 0,
            c: ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"]
        }], .39, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_PEASANT] = sprite[Le.INV_PEASANT],
        sprite[Le.INV_CROWN_GREEN] = p(1, [{
            f: xi,
            x: 0,
            y: 10,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]
        }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_CROWN_GREEN] = sprite[Le.INV_CROWN_GREEN],
        sprite[Le.INV_CROWN_ORANGE] = p(1, [{
            f: xi,
            x: 0,
            y: 10,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]
        }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_CROWN_ORANGE] = sprite[Le.INV_CROWN_ORANGE],
        sprite[Le.INV_CROWN_BLUE] = p(1, [{
            f: xi,
            x: 0,
            y: 10,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]
        }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_CROWN_BLUE] = sprite[Le.INV_CROWN_BLUE],
        sprite[Le.INV_CROWN_CRAB] = p(1, [{
            f: $1,
            x: -1,
            y: 0,
            a: 1,
            r: 0,
            c: ["#000000", "#b03431", "#94312d", "#bd3c33", "#de5445"]
        }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_CROWN_CRAB] = sprite[Le.INV_CROWN_CRAB],
        sprite[Le.CHEST_CROWN_CRAB] = sprite[Le.INV_CROWN_CRAB],
        sprite[Le.INV_DRAGON_HELMET] = p(1, [{
            f: Ct,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]
        }], .2, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_DRAGON_HELMET] = sprite[Le.INV_DRAGON_HELMET],
        sprite[Le.INV_DRAGON_SWORD] = p(1, [{
            f: _i,
            x: 0,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#284c4a", "#193533", "#c7efef", "#7fccca"]
        }], .75, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_DRAGON_SWORD] = sprite[Le.INV_DRAGON_SWORD],
        sprite[Le.INV_DRAGON_CUBE] = p(1, [{
            f: ci,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
        }], .55, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_DRAGON_ORB] = p(1, [{
            f: li,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
        }], .55, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_LAVA_CUBE] = p(1, [{
            f: ci,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
        }], .55, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_LAVA_ORB] = p(1, [{
            f: li,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
        }], .55, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_GEMME_GREEN] = p(1, [{
            f: si,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#59ba72", "#94d966", "#5aa628", "#0d1b1c", "#38874d"]
        }], .35, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_GEMME_ORANGE] = p(1, [{
            f: si,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#C45727", "#de7d46", "#DB9358", "#0d1b1c", "#994617"]
        }], .35, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_GEMME_BLUE] = p(1, [{
            f: si,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#3a9dbd", "#59C0D8", "#48abcb", "#0d1b1c", "#196599"]
        }], .35, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_SHOVEL] = p(1, [{
            f: Bi,
            x: 0,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"]
        }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_SHOVEL] = sprite[Le.INV_SHOVEL],
        sprite[Le.INV_SHOVEL_GOLD] = p(1, [{
            f: Bi,
            x: 0,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#b4ac45"]
        }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_SHOVEL_GOLD] = sprite[Le.INV_SHOVEL_GOLD],
        sprite[Le.INV_SHOVEL_DIAMOND] = p(1, [{
            f: Bi,
            x: 0,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"]
        }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_SHOVEL_DIAMOND] = sprite[Le.INV_SHOVEL_DIAMOND],
        sprite[Le.INV_SHOVEL_AMETHYST] = p(1, [{
            f: Bi,
            x: 0,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#a853c7"]
        }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_SHOVEL_AMETHYST] = sprite[Le.INV_SHOVEL_AMETHYST],
        sprite[Le.INV_EXPLORER_HAT] = p(1, [{
            f: Ut,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]
        }], .35, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_EXPLORER_HAT] = sprite[Le.INV_EXPLORER_HAT],
        sprite[Le.INV_WOOD_HELMET] = p(1, [{
            f: Kt,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#252525", "#73583e", "#493425", "#7d6144"]
        }], .35, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_WOOD_HELMET] = sprite[Le.INV_WOOD_HELMET],
        sprite[Le.INV_STONE_HELMET] = p(1, [{
            f: xt,
            x: 0,
            y: -2,
            a: 1,
            r: 0,
            c: ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]
        }], .4, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_STONE_HELMET] = sprite[Le.INV_STONE_HELMET],
        sprite[Le.INV_GOLD_HELMET] = p(1, [{
            f: Ft,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#dbce71", "#b29c32", "#c4bc51"]
        }], .35, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_GOLD_HELMET] = sprite[Le.INV_GOLD_HELMET],
        sprite[Le.INV_DIAMOND_HELMET] = p(1, [{
            f: Yt,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]
        }], .45, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_DIAMOND_HELMET] = sprite[Le.INV_DIAMOND_HELMET],
        sprite[Le.INV_BOOK] = p(1, [{
            f: Xt,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#511f00", "#2f1300", "#ffffff", "#d4d4d4", "#5b2400", "#984e21"]
        }], .15, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_BOOK] = sprite[Le.INV_BOOK],
        sprite[Le.INV_PAPER] = p(1, [{
            f: jt,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#221e1b", "#ffffff", "#f6f0e7"]
        }], .3, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.CRAFT_PAPER] = sprite[Le.INV_PAPER],
        sprite[Le.INV_AMETHYST] = p(1, [{
            f: Dt,
            x: -5,
            y: -5,
            a: 1,
            r: 0,
            c: ["#1d051e", "#c27add", "#cd98e5"]
        }], .31, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_SAND] = p(1, [{
            f: Oi,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#D7C393", "#a48c6c"]
        }], .22, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_ICE] = p(1, [{
            f: bi,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#93CBCE", "#E9F6F6"]
        }], .3, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.INV_GROUND] = p(1, [{
            f: Oi,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#866432", "#6b4f25"]
        }], .22, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_BUCKET_FULL] = p(1, [{
            f: Pi,
            x: 3,
            y: 2,
            a: 1,
            r: 0,
            c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
        }], .22, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_BUCKET_EMPTY] = p(1, [{
            f: Hi,
            x: 3,
            y: 2,
            a: 1,
            r: 0,
            c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
        }], .22, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.CRAFT_BUCKET_FULL] = sprite[Le.INV_BUCKET_FULL],
        sprite[Le.CRAFT_BUCKET_EMPTY] = sprite[Le.INV_BUCKET_EMPTY],
        sprite[Le.INV_WELL] = p(1, [{
            f: gi,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]
        }], .1, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_WELL] = sprite[Le.INV_WELL],
        sprite[Le.INV_BOTTLE_FULL] = p(1, [{
            f: Li,
            x: 0,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
        }], .18, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.INV_BOTTLE_EMPTY] = p(1, [{
            f: Gi,
            x: 0,
            y: 0,
            a: 1,
            r: Math.PI / 5,
            c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
        }], .18, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.CRAFT_BOTTLE_FULL] = sprite[Le.INV_BOTTLE_FULL],
        sprite[Le.CRAFT_BOTTLE_EMPTY] = sprite[Le.INV_BOTTLE_EMPTY],
        sprite[Le.INV_COOKIE] = p(1, [{
            f: p1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#eedacc", "#dfbda7", "#dab094", "#63391a", "#523124"]
        }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_COOKIE] = sprite[Le.INV_COOKIE],
        sprite[Le.INV_CANDY] = p(1, [{
            f: g1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1a1011", "#e29c2b", "#b76413", "#d6c418", "#e0bf32", "#b78a1a", "#aa1a17", "#cc9f2f", "#cc741d", "#b51524", "#bc1522", "#991922", "#a01ed5", "#d51e81"]
        }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.INV_FERRERO] = p(1, [{
            f: O1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1a1011", "#693c2a", "#54311f", "#9f7a3d", "#492d1d", "#dbb175", "#54311f", "#9f7a3d", "#604720"]
        }], .6, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.INV_BREAD] = p(1, [{
            f: Ei,
            x: 0,
            y: -2,
            a: 1,
            r: 0,
            c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
        }], .17, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_BREAD] = sprite[Le.INV_BREAD],
        sprite[Le.INV_FOODFISH] = p(1, [{
            f: B1,
            x: -3,
            y: -5,
            a: 1,
            r: 0,
            c: ["#1d051e", "#63767c", "#424f51", "#6c8288", "#536468", "#202020", "#ffffff", "#806f60", "#514942", "#756557"]
        }], .23, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.INV_FOODFISH_COOKED] = p(1, [{
            f: w1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1d051e", "#42261A", "#281818"]
        }], .23, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_FOODFISH_COOKED] = sprite[Le.INV_FOODFISH_COOKED],
        sprite[Le.INV_DIVING_MASK] = p(1, [{
            f: G1,
            x: -3,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]
        }], .2, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_DIVING_MASK] = sprite[Le.INV_DIVING_MASK],
        sprite[Le.INV_SCALES] = p(1, [{
            f: _e,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1e2021", "#961B1B", "#702727", "#C43B3B"]
        }], .15, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_SUPER_DIVING_SUIT] = p(1, [{
            f: H1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#F0D200", "#B09A00", "#79359E", "#652D8E", "#1e2021"]
        }], .3, ["#35b1b5", "#46c2c9", "#33b4e4"], .5),
        sprite[Le.CRAFT_SUPER_DIVING_SUIT] = sprite[Le.INV_SUPER_DIVING_SUIT],
        sprite[Le.INV_PLOT] = p(1, [{
            f: mi,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1e2021", "#352E1E", "#4C3B19", "#574122"]
        }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_PLOT] = sprite[Le.INV_PLOT],
        sprite[Le.INV_GARLAND] = p(1, [{
            f: G,
            x: -5,
            y: -5,
            a: 1,
            r: 0,
            c: ["#e2d63b", "#ee71a9", "#42b672"]
        }], 1, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CHEST_GARLAND] = sprite[Le.INV_GARLAND],
        sprite[Le.INV_BRIDGE] = p(1, [{
            f: pi,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1e2021", "#332715", "#4C3B19", "#574122"]
        }], .5, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_BRIDGE] = sprite[Le.INV_BRIDGE],
        sprite[Le.INV_ROOF] = p(1, [{
            f: P,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1e2021", "#352618", "#402b18", "#4c3b19", "#574122", "#52391e"]
        }], .3, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_ROOF] = sprite[Le.INV_ROOF],
        sprite[Le.INV_WATERING_CAN_FULL] = p(1, [{
            f: Ci,
            x: -1,
            y: 0,
            a: 1,
            r: -Math.PI / 5,
            c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"]
        }], .4, ["#35b1b5", "#46c2c9", "#33b4e4"], .7),
        sprite[Le.CRAFT_WATERING_CAN_FULL] = sprite[Le.INV_WATERING_CAN_FULL],
        sprite[Le.INV_WATERING_CAN] = p(1, [{
            f: Ci,
            x: -1,
            y: 0,
            a: 1,
            r: -Math.PI / 5,
            c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#3F2D18", "#2D2112"]
        }], .4, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.CRAFT_WATERING_CAN] = sprite[Le.INV_WATERING_CAN],
        sprite[Le.INV_FLOUR] = p(1, [{
            f: Si,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
        }], .25, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.INV_CRAB_STICK] = p(1, [{
            f: h1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]
        }], .2, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CHEST_CRAB_STICK] = sprite[Le.INV_CRAB_STICK],
        sprite[Le.INV_CAKE] = p(1, [{
            f: P1,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#1e2021", "#63391a", "#523124", "#d2c4b9", "#c1aca2", "#d8cbc2", "#c8b5ac", "#ac222a", "#e6636a"]
        }], .25, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_CAKE] = sprite[Le.INV_CAKE],
        sprite[Le.INV_SANDWICH] = p(1, [{
            f: de,
            x: -2,
            y: -8,
            a: 1,
            r: 0,
            c: ["#dfd6bc", "#7b5139", "#bf8d50", "#834e49", "#602820", "#d7ccaa"]
        }], .25, ["#3ba578", "#4eb687", "#3da34d"], .5),
        sprite[Le.CRAFT_SANDWICH] = sprite[Le.INV_SANDWICH],
        sprite[Le.INV_LAVA_SWORD] = [],
        sprite[Le.INV_LAVA_SWORD][0] = IMAGES.INV_LAVA_SWORD_OUT,
        sprite[Le.INV_LAVA_SWORD][1] = IMAGES.INV_LAVA_SWORD_IN,
        sprite[Le.INV_LAVA_SWORD][2] = IMAGES.INV_LAVA_SWORD_CLICK,
        sprite[Le.CRAFT_LAVA_SWORD] = sprite[Le.INV_LAVA_SWORD],
        sprite[Le.CHEST_LAVA_SWORD] = sprite[Le.INV_LAVA_SWORD],
        sprite[Le.INV_LAVA_SPEAR] = [],
        sprite[Le.INV_LAVA_SPEAR][0] = IMAGES.INV_LAVA_SPEAR_OUT,
        sprite[Le.INV_LAVA_SPEAR][1] = IMAGES.INV_LAVA_SPEAR_IN,
        sprite[Le.INV_LAVA_SPEAR][2] = IMAGES.INV_LAVA_SPEAR_CLICK,
        sprite[Le.CRAFT_LAVA_SPEAR] = sprite[Le.INV_LAVA_SPEAR],
        sprite[Le.CHEST_LAVA_SPEAR] = sprite[Le.INV_LAVA_SPEAR],
        sprite[Le.CRAFT_REIDITE_SWORD] = sprite[Le.INV_REIDITE_SWORD],
        sprite[Le.CHEST_REIDITE_SWORD] = sprite[Le.INV_REIDITE_SWORD],
        sprite[Le.INV_REIDITE_SWORD] = [],
        sprite[Le.INV_REIDITE_SWORD][0] = IMAGES.INV_REIDITE_SWORD_OUT,
        sprite[Le.INV_REIDITE_SWORD][1] = IMAGES.INV_REIDITE_SWORD_IN,
        sprite[Le.INV_REIDITE_SWORD][2] = IMAGES.INV_REIDITE_SWORD_CLICK,
        sprite[Le.CRAFT_REIDITE_SWORD] = sprite[Le.INV_REIDITE_SWORD],
        sprite[Le.CHEST_REIDITE_SWORD] = sprite[Le.INV_REIDITE_SWORD],
        sprite[Le.INV_REIDITE_SPEAR] = [],
        sprite[Le.INV_REIDITE_SPEAR][0] = IMAGES.INV_REIDITE_SPEAR_OUT,
        sprite[Le.INV_REIDITE_SPEAR][1] = IMAGES.INV_REIDITE_SPEAR_IN,
        sprite[Le.INV_REIDITE_SPEAR][2] = IMAGES.INV_REIDITE_SPEAR_CLICK,
        sprite[Le.CRAFT_REIDITE_SPEAR] = sprite[Le.INV_REIDITE_SPEAR],
        sprite[Le.CHEST_REIDITE_SPEAR] = sprite[Le.INV_REIDITE_SPEAR],
        sprite[Le.INV_DIAMOND_PROTECTION] = [],
        sprite[Le.INV_DIAMOND_PROTECTION][0] = IMAGES.INV_DIAMOND_PROTECTION_OUT,
        sprite[Le.INV_DIAMOND_PROTECTION][1] = IMAGES.INV_DIAMOND_PROTECTION_IN,
        sprite[Le.INV_DIAMOND_PROTECTION][2] = IMAGES.INV_DIAMOND_PROTECTION_CLICK,
        sprite[Le.CRAFT_DIAMOND_PROTECTION] = sprite[Le.INV_DIAMOND_PROTECTION],
        sprite[Le.CHEST_DIAMOND_PROTECTION] = sprite[Le.INV_DIAMOND_PROTECTION],
        sprite[Le.INV_AMETHYST_PROTECTION] = [],
        sprite[Le.INV_AMETHYST_PROTECTION][0] = IMAGES.INV_AMETHYST_PROTECTION_OUT,
        sprite[Le.INV_AMETHYST_PROTECTION][1] = IMAGES.INV_AMETHYST_PROTECTION_IN,
        sprite[Le.INV_AMETHYST_PROTECTION][2] = IMAGES.INV_AMETHYST_PROTECTION_CLICK,
        sprite[Le.CRAFT_AMETHYST_PROTECTION] = sprite[Le.INV_AMETHYST_PROTECTION],
        sprite[Le.CHEST_AMETHYST_PROTECTION] = sprite[Le.INV_AMETHYST_PROTECTION],
        sprite[Le.INV_REIDITE_PROTECTION] = [],
        sprite[Le.INV_REIDITE_PROTECTION][0] = IMAGES.INV_REIDITE_PROTECTION_OUT,
        sprite[Le.INV_REIDITE_PROTECTION][1] = IMAGES.INV_REIDITE_PROTECTION_IN,
        sprite[Le.INV_REIDITE_PROTECTION][2] = IMAGES.INV_REIDITE_PROTECTION_CLICK,
        sprite[Le.CRAFT_REIDITE_PROTECTION] = sprite[Le.INV_REIDITE_PROTECTION],
        sprite[Le.CHEST_REIDITE_PROTECTION] = sprite[Le.INV_REIDITE_PROTECTION],
        sprite[Le.INV_REIDITE_HELMET] = [],
        sprite[Le.INV_REIDITE_HELMET][0] = IMAGES.INV_REIDITE_HELMET_OUT,
        sprite[Le.INV_REIDITE_HELMET][1] = IMAGES.INV_REIDITE_HELMET_IN,
        sprite[Le.INV_REIDITE_HELMET][2] = IMAGES.INV_REIDITE_HELMET_CLICK,
        sprite[Le.CRAFT_REIDITE_HELMET] = sprite[Le.INV_REIDITE_HELMET],
        sprite[Le.CHEST_REIDITE_HELMET] = sprite[Le.INV_REIDITE_HELMET],
        sprite[Le.INV_LAVA_HELMET] = [],
        sprite[Le.INV_LAVA_HELMET][0] = IMAGES.INV_LAVA_HELMET_OUT,
        sprite[Le.INV_LAVA_HELMET][1] = IMAGES.INV_LAVA_HELMET_IN,
        sprite[Le.INV_LAVA_HELMET][2] = IMAGES.INV_LAVA_HELMET_CLICK,
        sprite[Le.CRAFT_LAVA_HELMET] = sprite[Le.INV_LAVA_HELMET],
        sprite[Le.CHEST_LAVA_HELMET] = sprite[Le.INV_LAVA_HELMET],
        sprite[Le.INV_FIREFLY] = [],
        sprite[Le.INV_FIREFLY][0] = IMAGES.INV_FIREFLY_OUT,
        sprite[Le.INV_FIREFLY][1] = IMAGES.INV_FIREFLY_IN,
        sprite[Le.INV_FIREFLY][2] = IMAGES.INV_FIREFLY_CLICK,
        sprite[Le.CRAFT_FIREFLY] = sprite[Le.INV_FIREFLY],
        sprite[Le.CHEST_FIREFLY] = sprite[Le.INV_FIREFLY],
        sprite[Le.INV_WITCH] = [],
        sprite[Le.INV_WITCH][0] = IMAGES.INV_WITCH_OUT,
        sprite[Le.INV_WITCH][1] = IMAGES.INV_WITCH_IN,
        sprite[Le.INV_WITCH][2] = IMAGES.INV_WITCH_CLICK,
        sprite[Le.CRAFT_WITCH] = sprite[Le.INV_WITCH],
        sprite[Le.CHEST_WITCH] = sprite[Le.INV_WITCH],
        sprite[Le.INV_NIMBUS] = [],
        sprite[Le.INV_NIMBUS][0] = IMAGES.INV_NIMBUS_OUT,
        sprite[Le.INV_NIMBUS][1] = IMAGES.INV_NIMBUS_IN,
        sprite[Le.INV_NIMBUS][2] = IMAGES.INV_NIMBUS_CLICK,
        sprite[Le.CRAFT_NIMBUS] = sprite[Le.INV_NIMBUS],
        sprite[Le.CHEST_NIMBUS] = sprite[Le.INV_NIMBUS],
        sprite[Le.INV_REIDITE] = [],
        sprite[Le.INV_REIDITE][0] = IMAGES.INV_REIDITE_OUT,
        sprite[Le.INV_REIDITE][1] = IMAGES.INV_REIDITE_IN,
        sprite[Le.INV_REIDITE][2] = IMAGES.INV_REIDITE_CLICK,
        sprite[Le.CHEST_REIDITE] = sprite[Le.INV_REIDITE],
        sprite[Le.INV_FLAME] = [],
        sprite[Le.INV_FLAME][0] = IMAGES.INV_FLAME_OUT,
        sprite[Le.INV_FLAME][1] = IMAGES.INV_FLAME_IN,
        sprite[Le.INV_FLAME][2] = IMAGES.INV_FLAME_CLICK,
        sprite[Le.CHEST_FLAME] = sprite[Le.INV_FLAME],
        sprite[Le.CHEST_SHOVEL] = sprite[Le.INV_SHOVEL],
        sprite[Le.CHEST_SHOVEL_GOLD] = sprite[Le.INV_SHOVEL_GOLD],
        sprite[Le.CHEST_SHOVEL_DIAMOND] = sprite[Le.INV_SHOVEL_DIAMOND],
        sprite[Le.CHEST_SHOVEL_AMETHYST] = sprite[Le.INV_SHOVEL_AMETHYST],
        sprite[Le.CHEST_SEED] = sprite[Le.INV_SEED],
        sprite[Le.CHEST_WHEAT_SEED] = sprite[Le.INV_WHEAT_SEED],
        sprite[Le.CHEST_WINDMILL] = sprite[Le.INV_WINDMILL],
        sprite[Le.CHEST_WILD_WHEAT] = sprite[Le.INV_WILD_WHEAT],
        sprite[Le.CHEST_FIRE] = sprite[Le.INV_FIRE],
        sprite[Le.CHEST_DRAGON_ORB] = sprite[Le.INV_DRAGON_ORB],
        sprite[Le.CHEST_DRAGON_CUBE] = sprite[Le.INV_DRAGON_CUBE],
        sprite[Le.CHEST_LAVA_ORB] = sprite[Le.INV_LAVA_ORB],
        sprite[Le.CHEST_LAVA_CUBE] = sprite[Le.INV_LAVA_CUBE];
        sprite[Le.CHEST_BIG_FIRE] = sprite[Le.INV_BIG_FIRE],
        sprite[Le.CHEST_SUGAR_CAN] = sprite[Le.INV_SUGAR_CAN],
        sprite[Le.CHEST_PIRATE_SWORD] = sprite[Le.INV_PIRATE_SWORD],
        sprite[Le.CHEST_SWORD_WOOD] = sprite[Le.INV_SWORD_WOOD],
        sprite[Le.CHEST_SWORD] = sprite[Le.INV_SWORD],
        sprite[Le.CHEST_CURSED_SWORD] = sprite[Le.INV_CURSED_SWORD],
        sprite[Le.CHEST_SWORD_GOLD] = sprite[Le.INV_SWORD_GOLD],
        sprite[Le.CHEST_SWORD_DIAMOND] = sprite[Le.INV_SWORD_DIAMOND],
        sprite[Le.CHEST_SWORD_AMETHYST] = sprite[Le.INV_SWORD_AMETHYST],
        sprite[Le.CHEST_PICK_WOOD] = sprite[Le.INV_PICK_WOOD],
        sprite[Le.CHEST_PICK] = sprite[Le.INV_PICK],
        sprite[Le.CHEST_PICK_GOLD] = sprite[Le.INV_PICK_GOLD],
        sprite[Le.CHEST_PICK_DIAMOND] = sprite[Le.INV_PICK_DIAMOND],
        sprite[Le.CHEST_PICK_AMETHYST] = sprite[Le.INV_PICK_AMETHYST],
        sprite[Le.CHEST_STONE] = sprite[Le.INV_STONE],
        sprite[Le.CHEST_GOLD] = sprite[Le.INV_GOLD],
        sprite[Le.CHEST_DIAMOND] = sprite[Le.INV_DIAMOND],
        sprite[Le.CHEST_WOOD] = sprite[Le.INV_WOOD],
        sprite[Le.CHEST_PLANT] = sprite[Le.INV_PLANT],
        sprite[Le.CHEST_WORKBENCH] = sprite[Le.INV_WORK],
        sprite[Le.CHEST_STONE_WALL] = sprite[Le.INV_STONE_WALL],
        sprite[Le.CHEST_DIAMOND_WALL] = sprite[Le.INV_DIAMOND_WALL],
        sprite[Le.CHEST_GOLD_WALL] = sprite[Le.INV_GOLD_WALL],
        sprite[Le.CHEST_AMETHYST_WALL] = sprite[Le.INV_AMETHYST_WALL],
        sprite[Le.CHEST_WALL] = sprite[Le.INV_WALL],
        sprite[Le.CHEST_SPIKE] = sprite[Le.INV_SPIKE],
        sprite[Le.CHEST_MEAT] = sprite[Le.INV_MEAT],
        sprite[Le.CHEST_COOKED_MEAT] = sprite[Le.INV_COOKED_MEAT],
        sprite[Le.CHEST_CORD] = sprite[Le.INV_CORD],
        sprite[Le.CHEST_BLUE_CORD] = sprite[Le.INV_BLUE_CORD],
        sprite[Le.CHEST_BANDAGE] = sprite[Le.INV_BANDAGE],
        sprite[Le.CHEST_LOCK] = sprite[Le.INV_LOCK],
        sprite[Le.CHEST_LOCKPICK] = sprite[Le.INV_LOCKPICK],
        sprite[Le.CHEST_RESURRECTION] = sprite[Le.INV_RESURRECTION],
        sprite[Le.CHEST_DRAGON_HEART] = sprite[Le.INV_DRAGON_HEART],
        sprite[Le.CHEST_LAVA_HEART] = sprite[Le.INV_LAVA_HEART],
        sprite[Le.CHEST_DRAGON_SWORD] = sprite[Le.INV_DRAGON_SWORD],
        sprite[Le.CHEST_TOTEM] = sprite[Le.INV_TOTEM],
        sprite[Le.CHEST_DOOR_WOOD_CLOSE] = sprite[Le.INV_DOOR_WOOD_CLOSE],
        sprite[Le.CHEST_CHEST] = sprite[Le.INV_CHEST],
        sprite[Le.CHEST_SLOT] = g(function(e, t) {
            var i = document.createElement("canvas")
              , n = i.getContext("2d");
            return i.width = 118 * e,
            i.height = 129 * e,
            n.save(),
            n.translate(90 * e, 90 * e),
            Be(n, -86.5 * e, -86 * e, 110 * e, 110 * e, 15 * e),
            n.restore(),
            Ce(n, t[0], t[1], 4),
            n.save(),
            Be(n, 30 * e, 115 * e, 60 * e, 5 * e, 15 * e),
            n.restore(),
            Ce(n, t[2], t[3], 4),
            n.save(),
            Be(n, 50 * e, 117 * e, 20 * e, 10 * e, 15 * e),
            n.restore(),
            Ce(n, t[2]),
            i
        }(.8, (Ve.boostfps,
        ["#4c3b19", "#c4a23a", "#c4a23a", "#c4a23a"]))),
        sprite[Le.CHEST_PLUS] = p(.5, [{
            f: _t,
            x: 0,
            y: 2,
            a: 1,
            r: 0,
            c: ["#ffffff"]
        }], .16, ["#c4a23a", "#d0ad41", "#b89733"], .9),
        sprite[Le.CHEST_STONE_SPIKE] = sprite[Le.INV_STONE_SPIKE],
        sprite[Le.CHEST_GOLD_SPIKE] = sprite[Le.INV_GOLD_SPIKE],
        sprite[Le.CHEST_DIAMOND_SPIKE] = sprite[Le.INV_DIAMOND_SPIKE],
        sprite[Le.CHEST_AMETHYST_SPIKE] = sprite[Le.INV_AMETHYST_SPIKE],
        sprite[Le.CHEST_BAG] = sprite[Le.INV_BAG],
        sprite[Le.CHEST_SPECIAL_FUR] = sprite[Le.INV_SPECIAL_FUR],
        sprite[Le.CHEST_SPECIAL_FUR_2] = sprite[Le.INV_SPECIAL_FUR_2],
        sprite[Le.CHEST_FUR] = sprite[Le.INV_FUR],
        sprite[Le.CHEST_KRAKEN_SKIN] = sprite[Le.INV_KRAKEN_SKIN],
        sprite[Le.CHEST_FUR_WOLF] = sprite[Le.INV_FUR_WOLF],
        sprite[Le.CHEST_FUR_BOAR] = sprite[Le.INV_FUR_BOAR],
        sprite[Le.CHEST_FUR_WINTER] = sprite[Le.INV_FUR_WINTER],
        sprite[Le.CHEST_EARMUFFS] = sprite[Le.INV_EARMUFFS],
        sprite[Le.CHEST_CAP_SCARF] = sprite[Le.INV_CAP_SCARF],
        sprite[Le.CHEST_DOOR_STONE_CLOSE] = sprite[Le.INV_DOOR_STONE_CLOSE],
        sprite[Le.CHEST_DOOR_GOLD_CLOSE] = sprite[Le.INV_DOOR_GOLD_CLOSE],
        sprite[Le.CHEST_DOOR_DIAMOND_CLOSE] = sprite[Le.INV_DOOR_DIAMOND_CLOSE],
        sprite[Le.CHEST_DOOR_AMETHYST_CLOSE] = sprite[Le.INV_DOOR_AMETHYST_CLOSE],
        sprite[Le.CHEST_COAT] = sprite[Le.INV_COAT],
        sprite[Le.CHEST_WOOD_SPEAR] = sprite[Le.INV_WOOD_SPEAR],
        sprite[Le.CHEST_SPEAR] = sprite[Le.INV_SPEAR],
        sprite[Le.CHEST_GOLD_SPEAR] = sprite[Le.INV_GOLD_SPEAR],
        sprite[Le.CHEST_DIAMOND_SPEAR] = sprite[Le.INV_DIAMOND_SPEAR],
        sprite[Le.CHEST_AMETHYST_SPEAR] = sprite[Le.INV_AMETHYST_SPEAR],
        sprite[Le.CHEST_DRAGON_SPEAR] = sprite[Le.INV_DRAGON_SPEAR],
        sprite[Le.CHEST_SUPER_HAMMER] = sprite[Le.INV_SUPER_HAMMER],
        sprite[Le.CHEST_SPANNER] = sprite[Le.INV_SPANNER],
        sprite[Le.CHEST_HAMMER] = sprite[Le.INV_HAMMER],
        sprite[Le.CHEST_HAMMER_GOLD] = sprite[Le.INV_HAMMER_GOLD],
        sprite[Le.CHEST_HAMMER_DIAMOND] = sprite[Le.INV_HAMMER_DIAMOND],
        sprite[Le.CHEST_HAMMER_AMETHYST] = sprite[Le.INV_HAMMER_AMETHYST],
        sprite[Le.CHEST_FURNACE] = sprite[Le.INV_FURNACE],
        sprite[Le.CHEST_BREAD_OVEN] = sprite[Le.INV_BREAD_OVEN],
        sprite[Le.CHEST_EXPLORER_HAT] = sprite[Le.INV_EXPLORER_HAT],
        sprite[Le.CHEST_STONE_HELMET] = sprite[Le.INV_STONE_HELMET],
        sprite[Le.CHEST_GOLD_HELMET] = sprite[Le.INV_GOLD_HELMET],
        sprite[Le.CHEST_DIAMOND_HELMET] = sprite[Le.INV_DIAMOND_HELMET],
        sprite[Le.CHEST_AMETHYST_HELMET] = sprite[Le.INV_AMETHYST_HELMET],
        sprite[Le.CHEST_DRAGON_HELMET] = sprite[Le.INV_DRAGON_HELMET],
        sprite[Le.CHEST_BOOK] = sprite[Le.INV_BOOK],
        sprite[Le.CHEST_PAPER] = sprite[Le.INV_PAPER],
        sprite[Le.CHEST_AMETHYST] = sprite[Le.INV_AMETHYST],
        sprite[Le.CHEST_BRIDGE] = sprite[Le.INV_BRIDGE],
        sprite[Le.CHEST_ROOF] = sprite[Le.INV_ROOF],
        sprite[Le.CHEST_PLOT] = sprite[Le.INV_PLOT],
        sprite[Le.CHEST_SAND] = sprite[Le.INV_SAND],
        sprite[Le.CHEST_BREAD] = sprite[Le.INV_BREAD],
        sprite[Le.CHEST_ICE] = sprite[Le.INV_ICE],
        sprite[Le.CHEST_GROUND] = sprite[Le.INV_GROUND],
        sprite[Le.CHEST_BOTTLE_FULL] = sprite[Le.INV_BOTTLE_FULL],
        sprite[Le.CHEST_BOTTLE_EMPTY] = sprite[Le.INV_BOTTLE_EMPTY],
        sprite[Le.CHEST_WATERING_CAN] = sprite[Le.INV_WATERING_CAN],
        sprite[Le.CHEST_FLOUR] = sprite[Le.INV_FLOUR],
        sprite[Le.CHEST_COOKIE] = sprite[Le.INV_COOKIE],
        sprite[Le.CHEST_CANDY] = sprite[Le.INV_CANDY],
        sprite[Le.CHEST_FERRERO] = sprite[Le.INV_FERRERO],
        sprite[Le.CHEST_SUPER_DIVING_SUIT] = sprite[Le.INV_SUPER_DIVING_SUIT],
        sprite[Le.CHEST_DIVING_MASK] = sprite[Le.INV_DIVING_MASK],
        sprite[Le.CHEST_WATERING_CAN_FULL] = sprite[Le.INV_WATERING_CAN_FULL],
        sprite[Le.CHEST_CAKE] = sprite[Le.INV_CAKE],
        sprite[Le.CHEST_CRAB_STICK] = sprite[Le.INV_CRAB_STICK],
        sprite[Le.CHEST_FOODFISH] = sprite[Le.INV_FOODFISH],
        sprite[Le.CHEST_FOODFISH_COOKED] = sprite[Le.INV_FOODFISH_COOKED],
        sprite[Le.CHEST_SCALES] = sprite[Le.INV_SCALES],
        sprite[Le.CHEST_SANDWICH] = sprite[Le.INV_SANDWICH],
        sprite[Le.CHEST_CROWN_GREEN] = sprite[Le.INV_CROWN_GREEN],
        sprite[Le.CHEST_GEMME_GREEN] = sprite[Le.INV_GEMME_GREEN],
        sprite[Le.CHEST_CROWN_ORANGE] = sprite[Le.INV_CROWN_ORANGE],
        sprite[Le.CHEST_GEMME_ORANGE] = sprite[Le.INV_GEMME_ORANGE],
        sprite[Le.CHEST_CROWN_BLUE] = sprite[Le.INV_CROWN_BLUE],
        sprite[Le.CHEST_GEMME_BLUE] = sprite[Le.INV_GEMME_BLUE],
        sprite[Le.CHEST_HOOD] = sprite[Le.INV_HOOD],
        sprite[Le.CHEST_PEASANT] = sprite[Le.INV_PEASANT],
        sprite[Le.CHEST_WINTER_PEASANT] = sprite[Le.INV_WINTER_PEASANT],
        sprite[Le.CHEST_WINTER_HOOD] = sprite[Le.INV_WINTER_HOOD],
        sprite[Le.CHEST_BUCKET_EMPTY] = sprite[Le.INV_BUCKET_EMPTY],
        sprite[Le.CHEST_BUCKET_FULL] = sprite[Le.INV_BUCKET_FULL],
        sprite[Le.CHEST_WELL] = sprite[Le.INV_WELL],
        sprite[Le.CHEST_SIGN] = sprite[Le.INV_SIGN],
        sprite[Le.CHEST_PUMPKIN_SEED] = sprite[Le.INV_PUMPKIN_SEED],
        sprite[Le.CHEST_GARLIC_SEED] = sprite[Le.INV_GARLIC_SEED],
        sprite[Le.CHEST_THORNBUSH_SEED] = sprite[Le.INV_THORNBUSH_SEED],
        sprite[Le.CHEST_WOOD_HELMET] = sprite[Le.INV_WOOD_HELMET],
        sprite[Le.BUBBLES] = [],
        sprite[Le.BUBBLES][Le.DAY] = [],
        sprite[Le.BUBBLES][Le.NIGHT] = [];
        for (var t = 0; t < Le.BUBBLES_SIZES; t++)
            sprite[Le.BUBBLES][Le.DAY].push(g(L1(1, 4 + t, "#59B8CE"))),
            sprite[Le.BUBBLES][Le.NIGHT].push(g(L1(1, 4 + t, "#90DDD9")));
        sprite[Le.FLAKES] = [],
        sprite[Le.FLAKES][Le.DAY] = [],
        sprite[Le.FLAKES][Le.NIGHT] = [];
        for (t = 0; t < Le.FLAKES_SIZES; t++)
            sprite[Le.FLAKES][Le.DAY].push(g(L1(1, 4 + t, "#fff"))),
            sprite[Le.FLAKES][Le.NIGHT].push(g(L1(1, 4 + t, "#fff")));
        sprite[Le.DESERT] = [],
        sprite[Le.DESERT][Le.DAY] = [],
        sprite[Le.DESERT][Le.NIGHT] = [];
        for (t = 0; t < Le.FLAKES_SIZES; t++)
            sprite[Le.DESERT][Le.DAY].push(g(L1(1, 6 + t, "#DDCD8A"))),
            sprite[Le.DESERT][Le.NIGHT].push(g(L1(1, 6 + t, "#155E57")));
        sprite[Le.ASHES] = [],
        sprite[Le.ASHES][Le.DAY] = [],
        sprite[Le.ASHES][Le.NIGHT] = [];
        for (t = 0; t < Le.ASHES_SIZES; t++)
            sprite[Le.ASHES][Le.DAY].push(g(L1(1, 4 + t, "#353326"))),
            sprite[Le.ASHES][Le.NIGHT].push(g(L1(1, 4 + t, "#1D2526")));
        sprite[Le.GARLAND] = [],
        sprite[Le.GARLAND][Le.DAY] = g(H(1.5, Ve.boostfps, ["#ee71a9"])),
        sprite[Le.GARLAND][Le.NIGHT] = g(H(1.5, Ve.boostfps, ["#ee71a9"])),
        sprite[Le.GARLANDS] = [sprite[Le.GARLAND]],
        sprite[Le.GARLANDS][1] = [],
        sprite[Le.GARLANDS][2] = [],
        sprite[Le.GARLANDS][3] = [],
        sprite[Le.GARLANDS][4] = [],
        sprite[Le.GARLANDS][1][Le.DAY] = g(H(1.5, Ve.boostfps, ["#e2d63b"])),
        sprite[Le.GARLANDS][1][Le.NIGHT] = g(H(1.5, Ve.boostfps, ["#e2d63b"])),
        sprite[Le.GARLANDS][2][Le.DAY] = g(H(1.5, Ve.boostfps, ["#309cbd"])),
        sprite[Le.GARLANDS][2][Le.NIGHT] = g(H(1.5, Ve.boostfps, ["#309cbd"])),
        sprite[Le.GARLANDS][3][Le.DAY] = g(H(1.5, Ve.boostfps, ["#cd232d"])),
        sprite[Le.GARLANDS][3][Le.NIGHT] = g(H(1.5, Ve.boostfps, ["#cd232d"])),
        sprite[Le.GARLANDS][4][Le.DAY] = g(H(1.5, Ve.boostfps, ["#42b672"])),
        sprite[Le.GARLANDS][4][Le.NIGHT] = g(H(1.5, Ve.boostfps, ["#42b672"]));
        Utils.gup("cti", window.location.href) ? document.getElementById("version").innerHTML += "[CTI]" : g = function(e) {
            return e.loaded = 1,
            e
        }
        ,
        sprite[Le.MARKET_BGD] = g(function() {
            var e = document.createElement("canvas")
              , t = e.getContext("2d");
            t.globalAlph = .6,
            e.width = 460,
            e.height = 220,
            t.fillStyle = "#3a2a0d",
            t.fillRect(0, 0, e.width, e.height),
            t.lineWidth = 4,
            t.beginPath(),
            t.strokeStyle = "#513810";
            for (var i = 20; i < 220; i += 20)
                t.moveTo(0, i),
                t.lineTo(460, i),
                t.closePath(),
                t.stroke();
            return e
        }()),
        sprite[Le.STONES] = [],
        sprite[Le.STONES][Le.DAY] = [],
        sprite[Le.STONES][Le.NIGHT] = [],
        sprite[Le.STONES][Le.DAY].push(g(C1(1.1, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"]))),
        sprite[Le.STONES][Le.DAY].push(g(C1(.9, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"]))),
        sprite[Le.STONES][Le.DAY].push(g(C1(.6, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"]))),
        sprite[Le.STONES][Le.NIGHT].push(g(C1(1.1, 0, ["#0a2728", "#3c8e88", "#40a39b"]))),
        sprite[Le.STONES][Le.NIGHT].push(g(C1(.9, 0, ["#0a2728", "#3c8e88", "#40a39b"]))),
        sprite[Le.STONES][Le.NIGHT].push(g(C1(.6, 0, ["#0a2728", "#3c8e88", "#40a39b"]))),
        sprite[Le.GOLD] = [],
        sprite[Le.GOLD][Le.DAY] = [],
        sprite[Le.GOLD][Le.NIGHT] = [],
        sprite[Le.GOLD][Le.DAY].push(g(S1(1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
        sprite[Le.GOLD][Le.DAY].push(g(S1(1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
        sprite[Le.GOLD][Le.DAY].push(g(S1(1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
        sprite[Le.GOLD][Le.NIGHT].push(g(S1(1.5, 0, ["#030d14", "#1b4444", "#16605a"]))),
        sprite[Le.GOLD][Le.NIGHT].push(g(S1(1.3, 0, ["#030d14", "#1b4444", "#16605a"]))),
        sprite[Le.GOLD][Le.NIGHT].push(g(S1(1.1, 0, ["#030d14", "#1b4444", "#16605a"]))),
        sprite[Le.DIAMOND] = [],
        sprite[Le.DIAMOND][Le.DAY] = [],
        sprite[Le.DIAMOND][Le.NIGHT] = [],
        sprite[Le.DIAMOND][Le.DAY].push(g(N1(1.1, 0, ["#232828", "#3fc9c9", "#74ede6"]))),
        sprite[Le.DIAMOND][Le.DAY].push(g(N1(.9, 0, ["#232828", "#3fc9c9", "#74ede6"]))),
        sprite[Le.DIAMOND][Le.DAY].push(g(N1(.7, 0, ["#232828", "#3fc9c9", "#74ede6"]))),
        sprite[Le.DIAMOND][Le.NIGHT].push(g(N1(1.1, 0, ["#030d14", "#2b9390", "#57bcb5"]))),
        sprite[Le.DIAMOND][Le.NIGHT].push(g(N1(.9, 0, ["#030d14", "#2b9390", "#57bcb5"]))),
        sprite[Le.DIAMOND][Le.NIGHT].push(g(N1(.7, 0, ["#030d14", "#2b9390", "#57bcb5"]))),
        sprite[Le.ALOE_VERA] = [],
        sprite[Le.ALOE_VERA][Le.DAY] = IMAGES.ALOE_VERAD,
        sprite[Le.ALOE_VERA][Le.NIGHT] = IMAGES.ALOE_VERAN,
        sprite[Le.HAND_SHADOW] = [],
        sprite[Le.HAND_SHADOW][Le.DAY] = g(Qe(.6, ["#0d1b1c"])),
        sprite[Le.HAND_SHADOW][Le.NIGHT] = g(Qe(.6, ["#030d14"])),
        sprite[Le.GLOVES_HOOD] = [],
        sprite[Le.GLOVES_HOOD][Le.DAY] = g($e(.6, ["#2a2938", "#242330"])),
        sprite[Le.GLOVES_HOOD][Le.NIGHT] = g($e(.6, ["#1b1e30", "#161921"])),
        sprite[Le.ZOMBIE_BODY] = [],
        sprite[Le.ZOMBIE_BODY][Le.DAY] = g(Y(.6, Ve.boostfps, ["#0d1b1c", "#759e6e", "#55604b", "#7d7252", "#575043"])),
        sprite[Le.ZOMBIE_BODY][Le.NIGHT] = g(Y(.6, Ve.boostfps, ["#030d14", "#11635e", "#02373e", "#0b524d", "#07423f"])),
        sprite[Le.ZOMBIE_HEAD] = [],
        sprite[Le.ZOMBIE_HEAD][Le.DAY] = g(B(.6, Ve.boostfps, ["#0d1b1c", "#759e6e", "#55604b", "#f9ccd4", "#891a1e", "#da232e", "#a52026", "#a02d28", "#721819", "#FFFFFF"])),
        sprite[Le.ZOMBIE_HEAD][Le.NIGHT] = g(B(.6, Ve.boostfps, ["#030d14", "#11635e", "#02373e", "#167771", "#0c5752", "#401d49", "#2e1336", "#261336", "#23163c", "#FFFFFF"])),
        sprite[Le.ZOMBIE_HAND] = [],
        sprite[Le.ZOMBIE_HAND][Le.DAY] = g(Ze(.4, ["#0d1b1c", "#759e6e", "#55604b"])),
        sprite[Le.ZOMBIE_HAND][Le.NIGHT] = g(Ze(.4, ["#030d14", "#11635e", "#02373e"])),
        sprite[Le.ZOMBIE_HURT] = g(J(.6, ["#BB0000"])),
        sprite[Le.ZOMBIE_HUNGER] = g(J(.6, ["#DBE71C"])),
        sprite[Le.ZOMBIE_HEAL] = g(J(.6, ["#00BB00"])),
        sprite[Le.TREE] = [],
        sprite[Le.TREE][Le.DAY] = [],
        sprite[Le.TREE][Le.NIGHT] = [],
        sprite[Le.TREE][Le.DAY].push(e1(1.1, ["#13402d", "#0f9862", "#0b8750", "#26ab6e"], !1, 0)),
        sprite[Le.TREE][Le.DAY].push(e1(1.1, ["#0e3022", "#0f9862", "#0b8750", "#26ab6e"], !Ve.boostfps, 0)),
        sprite[Le.TREE][Le.DAY].push(e1(.9, ["#0e3022", "#0e7d4c", "#258a4d", "#248c4d"], !1, 0)),
        sprite[Le.TREE][Le.DAY].push(e1(.9, ["#0e3022", "#096d41", "#1f7b43", "#1f7b43"], !Ve.boostfps, 0)),
        sprite[Le.TREE][Le.DAY].push(e1(.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], !1, 0)),
        sprite[Le.TREE][Le.DAY].push(e1(.7, ["#0e3022", "#124c34", "#0E3D26", "#155136"], !Ve.boostfps, 0)),
        sprite[Le.TREE][Le.NIGHT].push(e1(1.1, ["#030d14", "#0b3534", "#144443", "#174240"], !1, 0)),
        sprite[Le.TREE][Le.NIGHT].push(e1(1.1, ["#030d14", "#124949", "#0e3838", "#15514f"], !Ve.boostfps, 0)),
        sprite[Le.TREE][Le.NIGHT].push(e1(.9, ["#030d14", "#0b3534", "#144443", "#174240"], !1, 0)),
        sprite[Le.TREE][Le.NIGHT].push(e1(.9, ["#030d14", "#0b3534", "#144443", "#174240"], !Ve.boostfps, 0)),
        sprite[Le.TREE][Le.NIGHT].push(e1(.7, ["#030d14", "#082b29", "#073332", "#073332"], !1, 0)),
        sprite[Le.TREE][Le.NIGHT].push(e1(.7, ["#030d14", "#082b29", "#073332", "#073332"], !Ve.boostfps, 0)),
        sprite[Le.TREE_BRANCH] = [],
        sprite[Le.TREE_BRANCH][Le.DAY] = [],
        sprite[Le.TREE_BRANCH][Le.NIGHT] = [],
        sprite[Le.TREE_BRANCH][Le.DAY].push(g(n1(i1(1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], !1), sprite[Le.TREE][Le.DAY][0]))),
        sprite[Le.TREE_BRANCH][Le.DAY].push(g(n1(i1(1.1, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#08562e", "#107746"], !0), sprite[Le.TREE][Le.DAY][1]))),
        sprite[Le.TREE_BRANCH][Le.NIGHT].push(g(n1(i1(1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], !1), sprite[Le.TREE][Le.NIGHT][0]))),
        sprite[Le.TREE_BRANCH][Le.NIGHT].push(g(n1(i1(1.1, ["#030d14", "#031619", "#041c21", "#0a3333", "#113f3c", "#113f3c"], !0), sprite[Le.TREE][Le.NIGHT][1]))),
        sprite[Le.TREE_BRANCH][Le.DAY].push(g(n1(i1(.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], !1), sprite[Le.TREE][Le.DAY][2]))),
        sprite[Le.TREE_BRANCH][Le.DAY].push(g(n1(i1(.9, ["#0e3022", "#4d2d14", "#432516", "#096d41", "#107746", "#107746"], !0), sprite[Le.TREE][Le.DAY][2]))),
        sprite[Le.TREE_BRANCH][Le.NIGHT].push(g(n1(i1(.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], !1), sprite[Le.TREE][Le.NIGHT][2]))),
        sprite[Le.TREE_BRANCH][Le.NIGHT].push(g(n1(i1(.9, ["#030d14", "#031619", "#041c21", "#082b29", "#083b3a", "#083b3a"], !0), sprite[Le.TREE][Le.NIGHT][3]))),
        sprite[Le.TREE][Le.DAY][5] = g(sprite[Le.TREE][Le.DAY][5]),
        sprite[Le.TREE][Le.DAY][4] = g(sprite[Le.TREE][Le.DAY][4]),
        sprite[Le.TREE][Le.DAY][3] = g(sprite[Le.TREE][Le.DAY][3]),
        sprite[Le.TREE][Le.DAY][2] = g(sprite[Le.TREE][Le.DAY][2]),
        sprite[Le.TREE][Le.DAY][1] = g(sprite[Le.TREE][Le.DAY][1]),
        sprite[Le.TREE][Le.DAY][0] = g(sprite[Le.TREE][Le.DAY][0]),
        sprite[Le.TREE][Le.NIGHT][5] = g(sprite[Le.TREE][Le.NIGHT][5]),
        sprite[Le.TREE][Le.NIGHT][4] = g(sprite[Le.TREE][Le.NIGHT][4]),
        sprite[Le.TREE][Le.NIGHT][3] = g(sprite[Le.TREE][Le.NIGHT][3]),
        sprite[Le.TREE][Le.NIGHT][2] = g(sprite[Le.TREE][Le.NIGHT][2]),
        sprite[Le.TREE][Le.NIGHT][1] = g(sprite[Le.TREE][Le.NIGHT][1]),
        sprite[Le.TREE][Le.NIGHT][0] = g(sprite[Le.TREE][Le.NIGHT][0]),
        sprite[Le.PICK_WOOD] = [],
        sprite[Le.PICK_WOOD][Le.DAY] = g(I(4, r1(.75, !Ve.boostfps, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"]))),
        sprite[Le.PICK_WOOD][Le.NIGHT] = g(I(4, r1(.75, !Ve.boostfps, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#0d2e33", "#0b2326"]))),
        sprite[Le.PICK] = [],
        sprite[Le.PICK][Le.DAY] = g(I(4, r1(.75, !Ve.boostfps, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]))),
        sprite[Le.PICK][Le.NIGHT] = g(I(4, r1(.75, !Ve.boostfps, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#485e66", "#1f343f"]))),
        sprite[Le.PICK_GOLD] = [],
        sprite[Le.PICK_GOLD][Le.DAY] = g(I(4, r1(.75, !Ve.boostfps, ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]))),
        sprite[Le.PICK_GOLD][Le.NIGHT] = g(I(4, r1(.75, !Ve.boostfps, ["#030d14", "#000000", "#030d14", "#263947", "#263947", "#43aa82", "#29997c"]))),
        sprite[Le.PICK_DIAMOND] = [],
        sprite[Le.PICK_DIAMOND][Le.DAY] = g(I(4, r1(.75, !Ve.boostfps, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]))),
        sprite[Le.PICK_DIAMOND][Le.NIGHT] = g(I(4, r1(.75, !Ve.boostfps, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"]))),
        sprite[Le.PICK_AMETHYST] = [],
        sprite[Le.PICK_AMETHYST][Le.DAY] = g(I(4, r1(.75, !Ve.boostfps, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]))),
        sprite[Le.PICK_AMETHYST][Le.NIGHT] = g(I(4, r1(.75, !Ve.boostfps, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#8359d3", "#764eb5"]))),
        sprite[Le.PIRATE_SWORD] = [],
        sprite[Le.PIRATE_SWORD][Le.DAY] = g(I(3, a1(.17, !Ve.boostfps, ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"]))),
        sprite[Le.PIRATE_SWORD][Le.NIGHT] = g(I(3, a1(.17, !Ve.boostfps, ["#0d1b1c", "#0d2e33", "#0b2326", "#59737d", "#364f59", "#618395", "#4d768c", "#54859f"]))),
        sprite[Le.SUGAR_CAN] = [],
        sprite[Le.SUGAR_CAN][Le.DAY] = g(I(3, I1(.32, !Ve.boostfps, ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"]))),
        sprite[Le.SUGAR_CAN][Le.NIGHT] = g(I(3, I1(.42, !Ve.boostfps, ["#0d1b1c", "#485e66", "#1f343f", "#0d2e33", "#0b2326"]))),
        sprite[Le.SWORD_WOOD] = [],
        sprite[Le.SWORD_WOOD][Le.DAY] = g(I(3, o1(.4, !Ve.boostfps, ["#0d1b1c", "#73583e", "#493425", "#7d6144", "#5e4530", "#473221", "#745840"]))),
        sprite[Le.SWORD_WOOD][Le.NIGHT] = g(I(3, o1(.4, !Ve.boostfps, ["#0d1b1c", "#0b3d3a", "#092b2a", "#144642", "#082927", "#092b29"]))),
        sprite[Le.SWORD] = [],
        sprite[Le.SWORD][Le.DAY] = g(I(3, d1(.4, !Ve.boostfps, ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"]))),
        sprite[Le.SWORD][Le.NIGHT] = g(I(3, d1(.4, !Ve.boostfps, ["#0d1b1c", "#485e66", "#1f343f", "#5d757e", "#0d2e33", "#0b2326"]))),
        sprite[Le.SWORD_GOLD] = [],
        sprite[Le.SWORD_GOLD][Le.DAY] = g(I(3, E1(.4, !Ve.boostfps, ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"]))),
        sprite[Le.SWORD_GOLD][Le.NIGHT] = g(I(3, E1(.4, !Ve.boostfps, ["#0d1b1c", "#43aa82", "#29997c", "#54bf96", "#263947", "#182935"]))),
        sprite[Le.SWORD_DIAMOND] = [],
        sprite[Le.SWORD_DIAMOND][Le.DAY] = g(I(3, T1(.4, !Ve.boostfps, ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"]))),
        sprite[Le.SWORD_DIAMOND][Le.NIGHT] = g(I(3, T1(.4, !Ve.boostfps, ["#0d1b1c", "#73dde5", "#3dc4c0", "#93eaf1", "#111316", "#0a0b0c"]))),
        sprite[Le.SWORD_AMETHYST] = [],
        sprite[Le.SWORD_AMETHYST][Le.DAY] = g(I(3, A1(.4, !Ve.boostfps, ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"]))),
        sprite[Le.SWORD_AMETHYST][Le.NIGHT] = g(I(3, A1(.4, !Ve.boostfps, ["#0d1b1c", "#8359d3", "#764eb5", "#966de6", "#111316", "#0a0b0c"]))),
        sprite[Le.HERB] = [],
        sprite[Le.HERB][Le.DAY] = [],
        sprite[Le.HERB][Le.NIGHT] = [],
        sprite[Le.HERB][Le.DAY].push(g(M1(.9, 0, ["#1b4936"], 0))),
        sprite[Le.HERB][Le.DAY].push(g(M1(.9, 0, ["#1b4936"], 1))),
        sprite[Le.HERB][Le.DAY].push(g(M1(.9, 0, ["#1b4936"], 2))),
        sprite[Le.HERB][Le.NIGHT].push(g(M1(.9, 0, ["#083033"], 0))),
        sprite[Le.HERB][Le.NIGHT].push(g(M1(.9, 0, ["#083033"], 1))),
        sprite[Le.HERB][Le.NIGHT].push(g(M1(.9, 0, ["#083033"], 2))),
        sprite[Le.HERB][Le.DAY].push(g(v1(.8, ["#241301", "#ba6b0e", "#6d3f04"]))),
        sprite[Le.HERB][Le.DAY].push(g(v1(.8, ["#292002", "#ba930e", "#6d5704"]))),
        sprite[Le.HERB][Le.NIGHT].push(g(v1(.9, ["#052919", "#0a4738", "#06321f"]))),
        sprite[Le.HERB][Le.NIGHT].push(g(v1(.8, ["#052918", "#08491c", "#063417"]))),
        sprite[Le.SIGN] = [],
        sprite[Le.SIGN][Le.DAY] = g(I(Math.PI / 2, Ot(.25, !Ve.boostfps, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]))),
        sprite[Le.SIGN][Le.NIGHT] = g(I(Math.PI / 2, Ot(.25, !Ve.boostfps, ["#030d14", "#082b22", "#0a2f2b", "#072824"]))),
        sprite[Le.SIGN_BUTTON] = [],
        sprite[Le.SIGN_BUTTON].push(g(bt(.25, ["#44301b", "#57442a", "#523e26"], 0))),
        sprite[Le.SIGN_BUTTON].push(g(bt(.25, ["#4f371e", "#624d30", "#5e472c", "#eda80d"], 1))),
        sprite[Le.SIGN_BUTTON].push(g(bt(.25, ["#382715", "#4e3c25", "#473620", "#d7990c"], 2))),
        sprite[Le.SYMBOLS] = [],
        sprite[Le.SYMBOLS][Le.DAY] = [],
        sprite[Le.SYMBOLS][Le.NIGHT] = [],
        sprite[Le.SYMBOLS][Le.DAY].push(g(I(Math.PI / 2, mt(.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25"], 1)))),
        sprite[Le.SYMBOLS][Le.NIGHT].push(g(I(Math.PI / 2, mt(.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25"], 1)))),
        sprite[Le.SYMBOLS][Le.DAY].push(g(I(Math.PI / 2, mt(.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#4f9246"], 2)))),
        sprite[Le.SYMBOLS][Le.NIGHT].push(g(I(Math.PI / 2, mt(.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#4f9246"], 2)))),
        sprite[Le.SYMBOLS][Le.DAY].push(g(I(Math.PI / 2, mt(.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#ffffff"], 3)))),
        sprite[Le.SYMBOLS][Le.NIGHT].push(g(I(Math.PI / 2, mt(.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#ffffff"], 3)))),
        sprite[Le.SYMBOLS][Le.DAY].push(g(I(Math.PI / 2, mt(.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#362513"], 4)))),
        sprite[Le.SYMBOLS][Le.NIGHT].push(g(I(Math.PI / 2, mt(.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#664d2e"], 4)))),
        sprite[Le.PLANT] = [],
        sprite[Le.PLANT][Le.DAY] = [g(D1(1.2, !Ve.boostfps, ["#0e3022", "#0b8052", "#077b49"]))],
        sprite[Le.PLANT][Le.NIGHT] = [g(D1(1.2, !Ve.boostfps, ["#030d14", "#084442", "#0a4049"]))],
        sprite[Le.DRIED_PLANT] = [],
        sprite[Le.DRIED_PLANT][Le.DAY] = g(D1(.8, !Ve.boostfps, ["#0e3022", "#68622D", "#665329"])),
        sprite[Le.DRIED_PLANT][Le.NIGHT] = g(D1(.8, !Ve.boostfps, ["#030d14", "#0F3A24", "#083326"])),
        sprite[Le.PUMPKIN] = [],
        sprite[Le.PUMPKIN][Le.DAY] = g(Ni(.5, !Ve.boostfps, ["#1b170c", "#c67933", "#a6692f", "#bd7533", "#86683e", "#6e502d"])),
        sprite[Le.PUMPKIN][Le.NIGHT] = g(Ni(.5, !Ve.boostfps, ["#030d14", "#0a3429", "#0a2f2b", "#082f25", "#082925", "#0a3630"])),
        sprite[Le.GARLIC] = [],
        sprite[Le.GARLIC][Le.DAY] = g(L(.5, !Ve.boostfps, ["#1b170c", "#e8e8e8", "#d2cfcf", "#e0e1e0", "#c4c4c4"])),
        sprite[Le.GARLIC][Le.NIGHT] = g(L(.5, !Ve.boostfps, ["#030d14", "#2b5254", "#264a46", "#396260", "#244743"])),
        sprite[Le.THORNBUSH] = [],
        sprite[Le.THORNBUSH][Le.DAY] = g(Di(.5, !Ve.boostfps, ["#1b170c", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"])),
        sprite[Le.THORNBUSH][Le.NIGHT] = g(Di(.5, !Ve.boostfps, ["#030d14", "#0d5551", "#074440", "#0f5c58", "#4e8784", "#3f7572"])),
        sprite[Le.PLANT_MINI] = [],
        sprite[Le.PLANT_MINI][Le.DAY] = g(D1(.8, !Ve.boostfps, ["#0e3022", "#0b8052", "#077b49"])),
        sprite[Le.PLANT_MINI][Le.NIGHT] = g(D1(.8, !Ve.boostfps, ["#030d14", "#084442", "#0a4049"])),
        sprite[Le.DRIED_PUMPKIN] = [],
        sprite[Le.DRIED_PUMPKIN][Le.DAY] = g(Ni(.5, !Ve.boostfps, ["#1b170c", "#68622D", "#665329", "#5e5823", "#86683e", "#6e502d"])),
        sprite[Le.DRIED_PUMPKIN][Le.NIGHT] = g(Ni(.5, !Ve.boostfps, ["#030d14", "#0F3A24", "#083326", "#0c301e", "#062a1f", "#083b2b"])),
        sprite[Le.DRIED_GARLIC] = [],
        sprite[Le.DRIED_GARLIC][Le.DAY] = g(L(.5, !Ve.boostfps, ["#1b170c", "#adbe9e", "#7e9178", "#84aa84", "#527556"])),
        sprite[Le.DRIED_GARLIC][Le.NIGHT] = g(L(.5, !Ve.boostfps, ["#030d14", "#164a44", "#124244", "#13373b", "#133e3e"])),
        sprite[Le.DRIED_THORNBUSH] = [],
        sprite[Le.DRIED_THORNBUSH][Le.DAY] = g(Di(.5, !Ve.boostfps, ["#1b170c", "#7a9160", "#4a5e3c", "#637e5a", "#c5cfc0", "#8a9685"])),
        sprite[Le.DRIED_THORNBUSH][Le.NIGHT] = g(Di(.5, !Ve.boostfps, ["#030d14", "#3e5d5b", "#2f4442", "#354e4c", "#637d7c", "#556b6a"])),
        sprite[Le.GIFT] = [],
        sprite[Le.GIFT][Le.DAY] = g(Ki(.45, !Ve.boostfps, ["#0e3022", "#ac222a", "#98171e", "#22a84f", "#1f924a"])),
        sprite[Le.GIFT][Le.NIGHT] = g(Ki(.45, !Ve.boostfps, ["#0e3022", "#19386e", "#0b2752", "#124252", "#0d3441"])),
        sprite[Le.HURT_GIFT] = g(Ki(.65, !Ve.boostfps, ["rgba(14, 48, 34, 0)", "#BB0000", "#BB0000", "#BB0000", "#BB0000"])),
        sprite[Le.FRUIT] = [],
        sprite[Le.FRUIT][Le.DAY] = g(f1(1.4, 0, ["#3d2a6e", "#8255b5"])),
        sprite[Le.FRUIT][Le.NIGHT] = g(f1(1.4, 0, ["#26124f", "#524082"])),
        sprite[Le.FIRE] = [],
        sprite[Le.FIRE][Le.DAY] = g(Oe(.9, 0, ["#efd435", "#ec8d35", "#e96132"])),
        sprite[Le.FIRE][Le.NIGHT] = g(Oe(.9, 0, ["#efdb7b", "#efe854", "#e8ef62"])),
        sprite[Le.BIG_FIRE_WOOD] = [],
        sprite[Le.BIG_FIRE_WOOD][Le.DAY] = g(ge(.9, 0, ["#4d2d14", "#432516"])),
        sprite[Le.BIG_FIRE_WOOD][Le.NIGHT] = g(ge(.9, 0, ["#282404", "#0a0a01"])),
        sprite[Le.WOOD_FIRE] = [],
        sprite[Le.WOOD_FIRE][Le.DAY] = g(be(.9, 0, ["#4d2d14", "#432516"])),
        sprite[Le.WOOD_FIRE][Le.NIGHT] = g(be(.9, 0, ["#282404", "#0a0a01"])),
        sprite[Le.HALO_FIRE] = [],
        sprite[Le.HALO_FIRE][Le.DAY] = g(ve(.9, 0, ["#efd435"])),
        sprite[Le.HALO_FIRE][Le.NIGHT] = g(ve(.9, 0, ["#fffabb"])),
        sprite[Le.GROUND_FIRE] = [],
        sprite[Le.GROUND_FIRE][Le.DAY] = g(me(.9, 0, ["#efd435"])),
        sprite[Le.GROUND_FIRE][Le.NIGHT] = g(me(.9, 0, ["#fffabb"])),
        sprite[Le.HALO_FIRE_PUMPKIN] = [],
        sprite[Le.HALO_FIRE_PUMPKIN][Le.DAY] = g(ve(.9, 0, ["#efd435"])),
        sprite[Le.HALO_FIRE_PUMPKIN][Le.NIGHT] = g(ve(.9, 0, ["rgba(255, 84, 0, 1)"])),
        sprite[Le.GROUND_FIRE_PUMPKIN] = [],
        sprite[Le.GROUND_FIRE_PUMPKIN][Le.DAY] = g(me(.9, 0, ["#efd435"])),
        sprite[Le.GROUND_FIRE_PUMPKIN][Le.NIGHT] = g(me(.9, 0, ["#ff5704"])),
        sprite[Le.GEAR] = g(ee(1, "#ffffff")),
        sprite[Le.GEAR2] = g(ee(1.5, "#ffffff")),
        sprite[Le.YOUR_SCORE] = g(m1(1, "Your score:", 15, "#FFF")),
        sprite[Le.WINDMILL_CASES] = g((o = .9,
        i = ["#596560", "#394841", "#543B1C", "#694D28", "#4D3C1A", "#694D28", "#DEE2E0", "#CDCCCC", "#7B5A31", "#7E8A85"],
        s = document.createElement("canvas"),
        l = s.getContext("2d"),
        s.width = 243 * o,
        s.height = 172 * o,
        we(l, 119.5 * o, 140.125 * o, 19 * o),
        Ce(l, void 0, i[1], 5 * o),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(36.5 * o, 20.125 * o),
        l.bezierCurveTo(119.5 * o, 20.625 * o, 119.5 * o, 20.625 * o, 202.5 * o, 21.125 * o),
        l.bezierCurveTo(214.5 * o, 22.125 * o, 216.5 * o, 26.125 * o, 217.5 * o, 35.125 * o),
        l.bezierCurveTo(221 * o, 76.125 * o, 221 * o, 76.125 * o, 224.5 * o, 117.125 * o),
        l.bezierCurveTo(225.5 * o, 127.125 * o, 221.5 * o, 131.125 * o, 210.5 * o, 132.125 * o),
        l.bezierCurveTo(117.5 * o, 132.125 * o, 117.5 * o, 132.125 * o, 24.5 * o, 132.125 * o),
        l.bezierCurveTo(14.5 * o, 131.125 * o, 13.5 * o, 126.125 * o, 16.5 * o, 111.125 * o),
        l.bezierCurveTo(19.5 * o, 73.125 * o, 19.5 * o, 73.125 * o, 22.5 * o, 35.125 * o),
        l.bezierCurveTo(23.5 * o, 23.125 * o, 29.5 * o, 21.125 * o, 36.5 * o, 20.125 * o),
        l.closePath(),
        Ce(l, i[0], i[1], 4 * o),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(15.5 * o, 138.625 * o),
        l.bezierCurveTo(120 * o, 138.625 * o, 120 * o, 138.625 * o, 224.5 * o, 138.625 * o),
        l.closePath(),
        Ce(l, void 0, i[2], 10 * o),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(13.5 * o, 131.625 * o),
        l.bezierCurveTo(119.5 * o, 131.625 * o, 119.5 * o, 131.625 * o, 225.5 * o, 131.625 * o),
        l.closePath(),
        Ce(l, void 0, i[3], 10 * o),
        we(l, 119.5 * o, 140.125 * o, 14.866068747318506 * o),
        Ce(l, i[4], i[5], 4 * o),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(106.5 * o, 146.625 * o),
        l.bezierCurveTo(116.5 * o, 137.625 * o, 118.5 * o, 136.625 * o, 123.5 * o, 138.625 * o),
        l.bezierCurveTo(131.5 * o, 145.625 * o, 133.5 * o, 148.625 * o, 127.5 * o, 152.625 * o),
        l.bezierCurveTo(115.5 * o, 158.625 * o, 111.5 * o, 153.625 * o, 106.5 * o, 147.625 * o),
        l.closePath(),
        Ce(l, i[6], i[7], 2 * o),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(105.5 * o, 146.625 * o),
        l.bezierCurveTo(116.5 * o, 159.625 * o, 124.5 * o, 156.625 * o, 132.5 * o, 146.625 * o),
        Ce(l, void 0, i[8], 5 * o),
        l.save(),
        l.translate(75.5 * o, 80.125 * o),
        Be(l, -39 * o, -40 * o, 78 * o, 78 * o, 10 * o),
        l.restore(),
        Ce(l, i[9]),
        l.save(),
        l.translate(167 * o, 80.125 * o),
        Be(l, -38.5 * o, -39 * o, 78 * o, 78 * o, 10 * o),
        l.restore(),
        Ce(l, i[9]),
        s)),
        sprite[Le.EXTRACTOR_CASES] = IMAGES.EXTRACTOR_CASES,
        sprite[Le.WINDMILL] = [],
        sprite[Le.WINDMILL][Le.DAY] = g(le(1.5, !Ve.boostfps, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"])),
        sprite[Le.WINDMILL][Le.NIGHT] = g(le(1.5, !Ve.boostfps, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"])),
        sprite[Le.WINDMILL_WINGS] = [],
        sprite[Le.WINDMILL_WINGS][Le.DAY] = g(ce(2, !Ve.boostfps, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"])),
        sprite[Le.WINDMILL_WINGS][Le.NIGHT] = g(ce(2, !Ve.boostfps, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"])),
        sprite[Le.WINDMILL_HEAD] = [],
        sprite[Le.WINDMILL_HEAD][Le.DAY] = g(Ae(1.5, !Ve.boostfps, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"])),
        sprite[Le.WINDMILL_HEAD][Le.NIGHT] = g(Ae(1.5, !Ve.boostfps, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"])),
        sprite[Le.WILD_WHEAT] = [],
        sprite[Le.WILD_WHEAT][Le.DAY] = g(ue(2.2, Ve.boostfps, ["#A89F67", "#9E8456"])),
        sprite[Le.WILD_WHEAT][Le.NIGHT] = g(ue(2.2, Ve.boostfps, ["#0B4049", "#08383D"])),
        sprite[Le.DRIED_WHEAT] = [],
        sprite[Le.DRIED_WHEAT][Le.DAY] = g(ue(2.2, Ve.boostfps, ["#68622D", "#665329"])),
        sprite[Le.DRIED_WHEAT][Le.NIGHT] = g(ue(2.2, Ve.boostfps, ["#0F3A24", "#083326"])),
        sprite[Le.WHEAT_MOB] = [],
        sprite[Le.WHEAT_MOB][Le.DAY] = g(b1(.8, Ve.boostfps, ["#A89F67", "#9E8456"])),
        sprite[Le.WHEAT_MOB][Le.NIGHT] = g(b1(.8, Ve.boostfps, ["#15514F", "#0F3F3D"])),
        sprite[Le.PUMPKIN_SEED_MOB] = [],
        sprite[Le.PUMPKIN_SEED_MOB][Le.DAY] = g(b1(.8, Ve.boostfps, ["#c67933", "#b17238"])),
        sprite[Le.PUMPKIN_SEED_MOB][Le.NIGHT] = g(b1(.8, Ve.boostfps, ["#043c37", "#032b23"])),
        sprite[Le.ALOE_VERA_SEED_MOB] = [],
        sprite[Le.ALOE_VERA_SEED_MOB][Le.DAY] = g(b1(.8, Ve.boostfps, ["#3a8214", "#4a9c1e"])),
        sprite[Le.ALOE_VERA_SEED_MOB][Le.NIGHT] = g(b1(.8, Ve.boostfps, ["#032d29", "#044640"])),
        sprite[Le.GARLIC_SEED_MOB] = [],
        sprite[Le.GARLIC_SEED_MOB][Le.DAY] = g(b1(.8, Ve.boostfps, ["#e8e8e8", "#bbbbbb"])),
        sprite[Le.GARLIC_SEED_MOB][Le.NIGHT] = g(b1(.8, Ve.boostfps, ["#1c6161", "#07413f"])),
        sprite[Le.THORNBUSH_SEED_MOB] = [],
        sprite[Le.THORNBUSH_SEED_MOB][Le.DAY] = g(b1(.8, Ve.boostfps, ["#328a56", "#449573"])),
        sprite[Le.THORNBUSH_SEED_MOB][Le.NIGHT] = g(b1(.8, Ve.boostfps, ["#043c37", "#032b23"])),
        sprite[Le.CARROT_SEED_MOB] = [],
        sprite[Le.CARROT_SEED_MOB][Le.DAY] = g(b1(.8, Ve.boostfps, ["#c98e2f", "#a36b11"])),
        sprite[Le.CARROT_SEED_MOB][Le.NIGHT] = g(b1(.8, Ve.boostfps, ["#043c37", "#032b23"])),
        sprite[Le.TOMATO_SEED_MOB] = [],
        sprite[Le.TOMATO_SEED_MOB][Le.DAY] = g(b1(.8, Ve.boostfps, ["#b22419", "#99110e"])),
        sprite[Le.TOMATO_SEED_MOB][Le.NIGHT] = g(b1(.8, Ve.boostfps, ["#04323c", "#03222b"])),
        sprite[Le.WATERMELON_SEED_MOB] = [],
        sprite[Le.WATERMELON_SEED_MOB][Le.DAY] = g(b1(.8, Ve.boostfps, ["#13a56d", "#098a58"])),
        sprite[Le.WATERMELON_SEED_MOB][Le.NIGHT] = g(b1(.8, Ve.boostfps, ["#043c37", "#032b23"])),
        sprite[Le.WINDMILL_WHEAT_SEED] = p(1, [{
            f: ue,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#A89F67", "#9E8456"]
        }], 1.2, ["#d2c77b", "#e7dc8f", "#bfb360"], .7),
        sprite[Le.BREAD_OVEN_WOOD] = p(1, [{
            f: be,
            x: 0,
            y: 0,
            a: 1,
            r: -Math.PI / 5,
            c: ["#4d2d14", "#432516"]
        }], .3, ["#d2c77b", "#e7dc8f", "#bfb360"], .7),
        sprite[Le.BREAD_OVEN_BREAD] = p(1, [{
            f: Ei,
            x: 0,
            y: -5,
            a: 1,
            r: 0,
            c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
        }], .15, ["#d2c77b", "#e7dc8f", "#bfb360"], .7),
        sprite[Le.EMPTY_SLOT] = p(.9, [], .3, ["#2b5c48", "#2b5c48", "#2b5c48"], .5),
        sprite[Le.PLANT_SEED] = [],
        sprite[Le.PLANT_SEED][Le.DAY] = g(X(.9, 0, ["#7d613e", "#9e7e5a"])),
        sprite[Le.PLANT_SEED][Le.NIGHT] = g(X(.9, 0, ["#084442", "#125e5a"])),
        sprite[Le.WHEAT_SEED] = [],
        sprite[Le.WHEAT_SEED][Le.DAY] = g(X(.9, 0, ["#9E8456", "#A89F67"])),
        sprite[Le.WHEAT_SEED][Le.NIGHT] = g(X(.9, 0, ["#1b6f6a", "#0d4e4c"])),
        sprite[Le.WHEAT_SEED_DRIED] = [],
        sprite[Le.WHEAT_SEED_DRIED][Le.DAY] = g(X(.9, 0, ["#665329", "#68622D"])),
        sprite[Le.WHEAT_SEED_DRIED][Le.NIGHT] = g(X(.9, 0, ["#083326", "#0F3A24"])),
        sprite[Le.PLANT_PUMPKIN] = [],
        sprite[Le.PLANT_PUMPKIN][Le.DAY] = g(X(.9, 0, ["#c67933", "#ec952d"])),
        sprite[Le.PLANT_PUMPKIN][Le.NIGHT] = g(X(.9, 0, ["#0e6553", "#094437"])),
        sprite[Le.PLANT_ALOE_VERA] = [],
        sprite[Le.PLANT_ALOE_VERA][Le.DAY] = g(X(.9, 0, ["#375809", "#4b770e"])),
        sprite[Le.PLANT_ALOE_VERA][Le.NIGHT] = g(X(.9, 0, ["#09542d", "#0d5d2f"])),
        sprite[Le.PLANT_ALOE_VERA_DRIED] = [],
        sprite[Le.PLANT_ALOE_VERA_DRIED][Le.DAY] = g(X(.9, 0, ["#585809", "#72770e"])),
        sprite[Le.PLANT_ALOE_VERA_DRIED][Le.NIGHT] = g(X(.9, 0, ["#295209", "#305d0d"])),
        sprite[Le.PLANT_GARLIC] = [],
        sprite[Le.PLANT_GARLIC][Le.DAY] = g(X(.9, 0, ["#b9b094", "#e2d2c0"])),
        sprite[Le.PLANT_GARLIC][Le.NIGHT] = g(X(.9, 0, ["#126366", "#0d484b"])),
        sprite[Le.PLANT_THORNBUSH] = [],
        sprite[Le.PLANT_THORNBUSH][Le.DAY] = g(X(.9, 0, ["#3f8662", "#30915d"])),
        sprite[Le.PLANT_THORNBUSH][Le.NIGHT] = g(X(.9, 0, ["#0e6553", "#094437"])),
        sprite[Le.PLANT_PUMPKIN_DRIED] = [],
        sprite[Le.PLANT_PUMPKIN_DRIED][Le.DAY] = g(X(.9, 0, ["#c79153", "#dfa868"])),
        sprite[Le.PLANT_PUMPKIN_DRIED][Le.NIGHT] = g(X(.9, 0, ["#073927", "#075040"])),
        sprite[Le.PLANT_GARLIC_DRIED] = [],
        sprite[Le.PLANT_GARLIC_DRIED][Le.DAY] = g(X(.9, 0, ["#768b5b", "#819984"])),
        sprite[Le.PLANT_GARLIC_DRIED][Le.NIGHT] = g(X(.9, 0, ["#0c4540", "#0e5153"])),
        sprite[Le.PLANT_THORNBUSH_DRIED] = [],
        sprite[Le.PLANT_THORNBUSH_DRIED][Le.DAY] = g(X(.9, 0, ["#567465", "#627c6e"])),
        sprite[Le.PLANT_THORNBUSH_DRIED][Le.NIGHT] = g(X(.9, 0, ["#073927", "#075040"])),
        sprite[Le.PLANT_CARROT] = [],
        sprite[Le.PLANT_CARROT][Le.DAY] = g(X(.9, 0, ["#996b3a", "#bf956b"])),
        sprite[Le.PLANT_CARROT][Le.NIGHT] = g(X(.9, 0, ["#0e6553", "#094437"])),
        sprite[Le.PLANT_CARROT_DRIED] = [],
        sprite[Le.PLANT_CARROT_DRIED][Le.DAY] = g(X(.9, 0, ["#7a634a", "#a68f77"])),
        sprite[Le.PLANT_CARROT_DRIED][Le.NIGHT] = g(X(.9, 0, ["#1e4d43", "#113c32"])),
        sprite[Le.PLANT_TOMATO] = [],
        sprite[Le.PLANT_TOMATO][Le.DAY] = g(X(.9, 0, ["#99403c", "#bc796c"])),
        sprite[Le.PLANT_TOMATO][Le.NIGHT] = g(X(.9, 0, ["#1e434d", "#11303c"])),
        sprite[Le.PLANT_TOMATO_DRIED] = [],
        sprite[Le.PLANT_TOMATO_DRIED][Le.DAY] = g(X(.9, 0, ["#88504e", "#b3857c"])),
        sprite[Le.PLANT_TOMATO_DRIED][Le.NIGHT] = g(X(.9, 0, ["#253b41", "#162930"])),
        sprite[Le.PLANT_WATERMELON] = [],
        sprite[Le.PLANT_WATERMELON][Le.DAY] = g(X(.9, 0, ["#0f8870", "#23af93"])),
        sprite[Le.PLANT_WATERMELON][Le.NIGHT] = g(X(.9, 0, ["#032829", "#083233"])),
        sprite[Le.PLANT_WATERMELON_DRIED] = [],
        sprite[Le.PLANT_WATERMELON_DRIED][Le.DAY] = g(X(.9, 0, ["#618a20", "#84a74e"])),
        sprite[Le.PLANT_WATERMELON_DRIED][Le.NIGHT] = g(X(.9, 0, ["#1f4632", "#335d47"])),
        sprite[Le.WORKBENCH] = [],
        sprite[Le.WORKBENCH][Le.DAY] = g(ie(1.2, !Ve.boostfps, ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"])),
        sprite[Le.WORKBENCH][Le.NIGHT] = g(ie(1.2, !Ve.boostfps, ["#030d14", "#0d2e33", "#072322", "#3e706b", "#123d3f", "#4e827c"])),
        sprite[Le.WALL] = [],
        sprite[Le.WALL][Le.DAY] = g(z1(1, !Ve.boostfps, ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"])),
        sprite[Le.WALL][Le.NIGHT] = g(z1(1, !Ve.boostfps, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"])),
        sprite[Le.DIAMOND_WALL] = [],
        sprite[Le.DIAMOND_WALL][Le.DAY] = g(k1(1, !Ve.boostfps, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"])),
        sprite[Le.DIAMOND_WALL][Le.NIGHT] = g(k1(1, !Ve.boostfps, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"])),
        sprite[Le.AMETHYST_WALL] = [],
        sprite[Le.AMETHYST_WALL][Le.DAY] = g(U1(1, !Ve.boostfps, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"])),
        sprite[Le.AMETHYST_WALL][Le.NIGHT] = g(U1(1, !Ve.boostfps, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"])),
        sprite[Le.STONE_WALL] = [],
        sprite[Le.STONE_WALL][Le.DAY] = g(U1(1, !Ve.boostfps, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"])),
        sprite[Le.STONE_WALL][Le.NIGHT] = g(U1(1, !Ve.boostfps, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"])),
        sprite[Le.GOLD_WALL] = [],
        sprite[Le.GOLD_WALL][Le.DAY] = g(K1(1, !Ve.boostfps, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"])),
        sprite[Le.GOLD_WALL][Le.NIGHT] = g(K1(1, !Ve.boostfps, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"])),
        sprite[Le.SPIKE] = [],
        sprite[Le.SPIKE][Le.DAY] = g(Et(.8, !Ve.boostfps, ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"])),
        sprite[Le.SPIKE][Le.NIGHT] = g(Et(.8, !Ve.boostfps, ["#030d14", "#1f343f", "#485e66", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"])),
        sprite[Le.GOLD_SPIKE] = [],
        sprite[Le.GOLD_SPIKE][Le.DAY] = g(At(.8, !Ve.boostfps, ["#0d1b1c", "#69685a", "#9c9683", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"])),
        sprite[Le.GOLD_SPIKE][Le.NIGHT] = g(At(.8, !Ve.boostfps, ["#030d14", "#1a3732", "#1e544c", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"])),
        sprite[Le.DIAMOND_SPIKE] = [],
        sprite[Le.DIAMOND_SPIKE][Le.DAY] = g(It(.8, !Ve.boostfps, ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"])),
        sprite[Le.DIAMOND_SPIKE][Le.NIGHT] = g(It(.8, !Ve.boostfps, ["#030d14", "#2c4b55", "#546d77", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"])),
        sprite[Le.STONE_SPIKE] = [],
        sprite[Le.STONE_SPIKE][Le.DAY] = g(Tt(.8, !Ve.boostfps, ["#0d1b1c", "#6a7570", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"])),
        sprite[Le.STONE_SPIKE][Le.NIGHT] = g(Tt(.8, !Ve.boostfps, ["#030d14", "#1f343f", "#485e66", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"])),
        sprite[Le.AMETHYST_SPIKE] = [],
        sprite[Le.AMETHYST_SPIKE][Le.DAY] = g(Tt(.8, !Ve.boostfps, ["#0d1b1c", "#6a7570", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"])),
        sprite[Le.AMETHYST_SPIKE][Le.NIGHT] = g(Tt(.8, !Ve.boostfps, ["#030d14", "#1f343f", "#485e66", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"])),
        sprite[Le.DOOR_WOOD_CLOSE] = [],
        sprite[Le.DOOR_WOOD_CLOSE][Le.DAY] = g(F1(1.5, !Ve.boostfps, ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534", "#23a54e", "#1f934a", "#208e48", "#b12c2a", "#9c2625", "#ebd6a4", "#cca73f"])),
        sprite[Le.DOOR_WOOD_CLOSE][Le.NIGHT] = g(F1(1.5, !Ve.boostfps, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"])),
        sprite[Le.DOOR_WOOD_OPEN] = [],
        sprite[Le.DOOR_WOOD_OPEN][Le.DAY] = g(F1(1, !1, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"])),
        sprite[Le.DOOR_WOOD_OPEN][Le.NIGHT] = g(F1(1, !1, ["#042b30", "#042b30", "#0b342b", "#0b342b", "#042b30", "#0b342b"])),
        sprite[Le.DOOR_STONE_CLOSE] = [],
        sprite[Le.DOOR_STONE_CLOSE][Le.DAY] = g(Y1(1.5, !Ve.boostfps, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"])),
        sprite[Le.DOOR_STONE_CLOSE][Le.NIGHT] = g(Y1(1.5, !Ve.boostfps, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#164542", "#295957"])),
        sprite[Le.DOOR_STONE_OPEN] = [],
        sprite[Le.DOOR_STONE_OPEN][Le.DAY] = g(Y1(1, !1, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"])),
        sprite[Le.DOOR_STONE_OPEN][Le.NIGHT] = g(Y1(1, !1, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"])),
        sprite[Le.DOOR_AMETHYST_CLOSE] = [],
        sprite[Le.DOOR_AMETHYST_CLOSE][Le.DAY] = g(Y1(1.5, !Ve.boostfps, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"])),
        sprite[Le.DOOR_AMETHYST_CLOSE][Le.NIGHT] = g(Y1(1.5, !Ve.boostfps, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"])),
        sprite[Le.DOOR_AMETHYST_OPEN] = [],
        sprite[Le.DOOR_AMETHYST_OPEN][Le.DAY] = g(Y1(1, !1, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"])),
        sprite[Le.DOOR_AMETHYST_OPEN][Le.NIGHT] = g(Y1(1, !1, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"])),
        sprite[Le.DOOR_GOLD_CLOSE] = [],
        sprite[Le.DOOR_GOLD_CLOSE][Le.DAY] = g(J1(1.5, !Ve.boostfps, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"])),
        sprite[Le.DOOR_GOLD_CLOSE][Le.NIGHT] = g(J1(1.5, !Ve.boostfps, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#1f605c", "#2c7a70"])),
        sprite[Le.DOOR_GOLD_OPEN] = [],
        sprite[Le.DOOR_GOLD_OPEN][Le.DAY] = g(J1(1, !1, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"])),
        sprite[Le.DOOR_GOLD_OPEN][Le.NIGHT] = g(J1(1, !1, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"])),
        sprite[Le.DOOR_DIAMOND_CLOSE] = [],
        sprite[Le.DOOR_DIAMOND_CLOSE][Le.DAY] = g(q1(1.5, !Ve.boostfps, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"])),
        sprite[Le.DOOR_DIAMOND_CLOSE][Le.NIGHT] = g(q1(1.5, !Ve.boostfps, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"])),
        sprite[Le.DOOR_DIAMOND_OPEN] = [],
        sprite[Le.DOOR_DIAMOND_OPEN][Le.DAY] = g(q1(1, !1, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"])),
        sprite[Le.DOOR_DIAMOND_OPEN][Le.NIGHT] = g(q1(1, !1, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"])),
        sprite[Le.CHEST] = [],
        sprite[Le.CHEST][2] = g(ut(.5, Ve.boostfps, "#4d0000 #4d0000 #4d0000 #4d0000 #4d0000 #614627 #614627 #c4a23a #c4a23a #c4a23a".split(" "))),
        sprite[Le.CHEST][Le.DAY] = g(ut(.5, Ve.boostfps, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"])),
        sprite[Le.CHEST][Le.NIGHT] = g(ut(.5, Ve.boostfps, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453", "#1f5453", "#1f5453", "#2b6664", "#2b6664", "#2b6664"])),
        sprite[Le.TREASURE_CHEST] = [],
        sprite[Le.TREASURE_CHEST][Le.DAY] = g(yi(.5, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627"])),
        sprite[Le.TREASURE_CHEST][Le.NIGHT] = g(yi(.5, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453"])),
        sprite[Le.RABBIT] = [],
        sprite[Le.RABBIT][Le.DAY] = g(ne(.9, ["#0e3022", "#ee97bf", "#FFFFFF", "#000000", "#ffffff"])),
        sprite[Le.RABBIT][Le.NIGHT] = g(ne(.9, ["#030d14", "#4d1b59", "#5d3f77", "#220e26", "#ffffff"])),
        sprite[Le.SPIDER] = [],
        sprite[Le.SPIDER][Le.DAY] = g(I(Math.PI, ae(.9, ["#000000", "#b7252c", "#b7252c", "#b7252c", "#FFFFFF", "#000000"]))),
        sprite[Le.SPIDER][Le.NIGHT] = g(I(Math.PI, ae(.9, ["#030d14", "#401d49", "#b7252c", "#401d49", "#FFFFFF", "#000000"]))),
        sprite[Le.WEB] = g((o = .6,
        l = ["#FFFFFF"],
        i = document.createElement("canvas"),
        s = i.getContext("2d"),
        i.width = 450 * o,
        i.height = 470 * o,
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(226.5 * o, 91.546875 * o),
        s.bezierCurveTo(254.5 * o, 115.546875 * o, 261.5 * o, 115.546875 * o, 294.5 * o, 109.546875 * o),
        s.bezierCurveTo(299.5 * o, 141.546875 * o, 315.5 * o, 151.546875 * o, 344.5 * o, 158.546875 * o),
        s.bezierCurveTo(330.5 * o, 195.546875 * o, 341.5 * o, 207.546875 * o, 361.5 * o, 226.546875 * o),
        s.bezierCurveTo(331.5 * o, 251.546875 * o, 335.5 * o, 270.546875 * o, 342.5 * o, 295.546875 * o),
        s.bezierCurveTo(300.5 * o, 296.546875 * o, 293.5 * o, 325.546875 * o, 292.5 * o, 344.546875 * o),
        s.bezierCurveTo(257.5 * o, 326.546875 * o, 242.5 * o, 338.546875 * o, 224.5 * o, 361.546875 * o),
        s.bezierCurveTo(200.5 * o, 329.546875 * o, 180.5 * o, 334.546875 * o, 155.5 * o, 341.546875 * o),
        s.bezierCurveTo(146.5 * o, 307.546875 * o, 140.5 * o, 302.546875 * o, 107.5 * o, 292.546875 * o),
        s.bezierCurveTo(117.5 * o, 253.546875 * o, 109.5 * o, 244.546875 * o, 89.5 * o, 224.546875 * o),
        s.bezierCurveTo(118.5 * o, 191.546875 * o, 114.5 * o, 182.546875 * o, 108.5 * o, 156.546875 * o),
        s.bezierCurveTo(143.5 * o, 149.546875 * o, 150.5 * o, 136.546875 * o, 157.5 * o, 106.546875 * o),
        s.bezierCurveTo(202.5 * o, 120.546875 * o, 211.5 * o, 103.546875 * o, 228.5 * o, 91.546875 * o),
        s.closePath(),
        Ce(s, void 0, l[0], 4),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(224.5 * o, 129.546875 * o),
        s.bezierCurveTo(247.5 * o, 147.546875 * o, 252.5 * o, 143.546875 * o, 274.5 * o, 141.546875 * o),
        s.bezierCurveTo(279.5 * o, 163.546875 * o, 289.5 * o, 168.546875 * o, 311.5 * o, 178.546875 * o),
        s.bezierCurveTo(301.5 * o, 199.546875 * o, 307.5 * o, 213.546875 * o, 323.5 * o, 226.546875 * o),
        s.bezierCurveTo(303.5 * o, 240.546875 * o, 303.5 * o, 255.546875 * o, 312.5 * o, 275.546875 * o),
        s.bezierCurveTo(281.5 * o, 278.546875 * o, 276.5 * o, 291.546875 * o, 272.5 * o, 313.546875 * o),
        s.bezierCurveTo(248.5 * o, 301.546875 * o, 239.5 * o, 310.546875 * o, 224.5 * o, 324.546875 * o),
        s.bezierCurveTo(211.5 * o, 304.546875 * o, 199.5 * o, 301.546875 * o, 176.5 * o, 309.546875 * o),
        s.bezierCurveTo(165.5 * o, 276.546875 * o, 159.5 * o, 275.546875 * o, 138.5 * o, 274.546875 * o),
        s.bezierCurveTo(148.5 * o, 248.546875 * o, 140.5 * o, 237.546875 * o, 125.5 * o, 225.546875 * o),
        s.bezierCurveTo(145.5 * o, 205.546875 * o, 146.5 * o, 195.546875 * o, 142.5 * o, 176.546875 * o),
        s.bezierCurveTo(173.5 * o, 164.546875 * o, 173.5 * o, 155.546875 * o, 178.5 * o, 140.546875 * o),
        s.bezierCurveTo(214.5 * o, 143.546875 * o, 214.5 * o, 135.546875 * o, 226.5 * o, 129.546875 * o),
        s.closePath(),
        Ce(s, void 0, l[0], 4),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(224.5 * o, 160.546875 * o),
        s.bezierCurveTo(236.5 * o, 168.546875 * o, 239.5 * o, 168.546875 * o, 258.5 * o, 168.546875 * o),
        s.bezierCurveTo(261.5 * o, 185.546875 * o, 268.5 * o, 187.546875 * o, 282.5 * o, 192.546875 * o),
        s.bezierCurveTo(277.5 * o, 208.546875 * o, 283.5 * o, 216.546875 * o, 289.5 * o, 228.546875 * o),
        s.bezierCurveTo(277.5 * o, 243.546875 * o, 280.5 * o, 253.546875 * o, 281.5 * o, 260.546875 * o),
        s.bezierCurveTo(264.5 * o, 260.546875 * o, 259.5 * o, 269.546875 * o, 256.5 * o, 283.546875 * o),
        s.bezierCurveTo(244.5 * o, 276.546875 * o, 232.5 * o, 283.546875 * o, 223.5 * o, 291.546875 * o),
        s.bezierCurveTo(213.5 * o, 276.546875 * o, 205.5 * o, 278.546875 * o, 190.5 * o, 281.546875 * o),
        s.bezierCurveTo(181.5 * o, 262.546875 * o, 173.5 * o, 259.546875 * o, 165.5 * o, 258.546875 * o),
        s.bezierCurveTo(169.5 * o, 239.546875 * o, 167.5 * o, 233.546875 * o, 157.5 * o, 225.546875 * o),
        s.bezierCurveTo(169.5 * o, 208.546875 * o, 170.5 * o, 203.546875 * o, 168.5 * o, 192.546875 * o),
        s.bezierCurveTo(181.5 * o, 187.546875 * o, 188.5 * o, 179.546875 * o, 192.5 * o, 168.546875 * o),
        s.bezierCurveTo(216.5 * o, 170.546875 * o, 218.5 * o, 163.546875 * o, 225.5 * o, 160.546875 * o),
        s.closePath(),
        Ce(s, void 0, l[0], 4),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(205.5 * o, 194.546875 * o),
        s.bezierCurveTo(216.5 * o, 192.546875 * o, 219.5 * o, 191.546875 * o, 225.5 * o, 185.546875 * o),
        s.bezierCurveTo(232.5 * o, 193.546875 * o, 237.5 * o, 191.546875 * o, 246.5 * o, 192.546875 * o),
        s.bezierCurveTo(249.5 * o, 202.546875 * o, 253.5 * o, 205.546875 * o, 258.5 * o, 207.546875 * o),
        s.bezierCurveTo(259.5 * o, 222.546875 * o, 256.5 * o, 223.546875 * o, 265.5 * o, 226.546875 * o),
        s.bezierCurveTo(256.5 * o, 231.546875 * o, 255.5 * o, 241.546875 * o, 259.5 * o, 248.546875 * o),
        s.bezierCurveTo(250.5 * o, 245.546875 * o, 245.5 * o, 252.546875 * o, 243.5 * o, 260.546875 * o),
        s.bezierCurveTo(234.5 * o, 256.546875 * o, 229.5 * o, 258.546875 * o, 223.5 * o, 265.546875 * o),
        s.bezierCurveTo(218.5 * o, 255.546875 * o, 213.5 * o, 257.546875 * o, 204.5 * o, 261.546875 * o),
        s.bezierCurveTo(203.5 * o, 251.546875 * o, 198.5 * o, 248.546875 * o, 189.5 * o, 244.546875 * o),
        s.bezierCurveTo(194.5 * o, 237.546875 * o, 192.5 * o, 231.546875 * o, 184.5 * o, 225.546875 * o),
        s.bezierCurveTo(191.5 * o, 211.546875 * o, 192.5 * o, 209.546875 * o, 190.5 * o, 204.546875 * o),
        s.bezierCurveTo(200.5 * o, 204.546875 * o, 204.5 * o, 198.546875 * o, 207.5 * o, 194.546875 * o),
        s.closePath(),
        Ce(s, void 0, l[0], 4),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(149.5 * o, 93.546875 * o),
        s.bezierCurveTo(287.5 * o, 332.546875 * o, 226 * o, 225.546875 * o, 302.5 * o, 357.546875 * o),
        s.closePath(),
        Ce(s, void 0, l[0], 4),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(224.5 * o, 66.546875 * o),
        s.bezierCurveTo(224.5 * o, 223.546875 * o, 224.5 * o, 223.546875 * o, 224.5 * o, 380.546875 * o),
        s.closePath(),
        Ce(s, void 0, l[0], 4),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(302.5 * o, 88.546875 * o),
        s.bezierCurveTo(222.5 * o, 227.546875 * o, 222.5 * o, 227.546875 * o, 142.5 * o, 366.546875 * o),
        s.closePath(),
        Ce(s, void 0, l[0], 4),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(361.5 * o, 147.546875 * o),
        s.bezierCurveTo(223 * o, 226.546875 * o, 223 * o, 226.546875 * o, 84.5 * o, 305.546875 * o),
        s.closePath(),
        Ce(s, void 0, l[0], 4),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(379.5 * o, 225.546875 * o),
        s.bezierCurveTo(221 * o, 225.546875 * o, 221 * o, 225.546875 * o, 62.5 * o, 225.546875 * o),
        s.closePath(),
        Ce(s, void 0, l[0], 4),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(90.5 * o, 147.546875 * o),
        s.bezierCurveTo(226.5 * o, 226.546875 * o, 226.5 * o, 226.546875 * o, 362.5 * o, 305.546875 * o),
        s.closePath(),
        Ce(s, void 0, l[0], 4),
        i)),
        sprite[Le.WOLF] = [],
        sprite[Le.WOLF][Le.DAY] = g(re(1.1, ["#0e3022", "#231f20", "#b7252c", "#7d7679", "#ffffff"])),
        sprite[Le.WOLF][Le.NIGHT] = g(re(1.1, ["#030d14", "#1e181c", "#462966", "#3e3e4a", "#ffffff"])),
        sprite[Le.EARMUFFS] = [],
        sprite[Le.EARMUFFS][Le.DAY] = g(ct(.6, Ve.boostfps, ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"])),
        sprite[Le.EARMUFFS][Le.NIGHT] = g(ct(.6, Ve.boostfps, ["#478e8b", "#327e73", "#073030", "#08403f"])),
        sprite[Le.COAT] = [],
        sprite[Le.COAT][Le.DAY] = g(Z1(.6, Ve.boostfps, ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"])),
        sprite[Le.COAT][Le.NIGHT] = g(Z1(.6, Ve.boostfps, ["#073030", "#08403f", "#478e8b", "#327e73"])),
        sprite[Le.CAP_SCARF] = [],
        sprite[Le.CAP_SCARF][Le.DAY] = g(ht(.63, !Ve.boostfps, ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"])),
        sprite[Le.CAP_SCARF][Le.NIGHT] = g(ht(.63, !Ve.boostfps, ["#073030", "#368981", "#1c635e", "#7bbab4", "#469e95"])),
        sprite[Le.CHRISTMAS_HAT] = [],
        sprite[Le.CHRISTMAS_HAT][Le.DAY] = g(ye(.6, Ve.boostfps, ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"])),
        sprite[Le.CHRISTMAS_HAT][Le.NIGHT] = g(ye(.6, Ve.boostfps, ["#073030", "#392966", "#2a194f", "#433379", "#66aaa3", "#469e95"])),
        sprite[Le.ELF_HAT] = [],
        sprite[Le.ELF_HAT][Le.DAY] = g(Me(.6, Ve.boostfps, ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"])),
        sprite[Le.ELF_HAT][Le.NIGHT] = g(Me(.6, Ve.boostfps, ["#073030", "#124949", "#0e3838", "#15514f", "#66aaa3", "#469e95", "#292f66", "#202559"])),
        sprite[Le.BREAD_OVEN_ON] = [],
        sprite[Le.BREAD_OVEN_ON][Le.DAY] = g(Ai(.42, !Ve.boostfps, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#343d39"])),
        sprite[Le.BREAD_OVEN_ON][Le.NIGHT] = g(Ai(.42, !Ve.boostfps, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#192225"])),
        sprite[Le.BREAD_LIGHT_UP] = [],
        sprite[Le.BREAD_LIGHT_UP][Le.DAY] = g(Ii(.9, ["#e4c027"])),
        sprite[Le.BREAD_LIGHT_UP][Le.NIGHT] = g(Ii(.9, ["#D8E57F"])),
        sprite[Le.BREAD_OVEN_OFF] = [],
        sprite[Le.BREAD_OVEN_OFF][Le.DAY] = g(Ti(.42, !Ve.boostfps, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"])),
        sprite[Le.BREAD_OVEN_OFF][Le.NIGHT] = g(Ti(.42, !Ve.boostfps, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#1b2529"])),
        sprite[Le.BREAD_OVEN_UI] = g((o = 1,
        s = ["#596560", "#394841", "#543B1C", "#694D28", "#7E8A85", "#384740", "#525956"],
        l = document.createElement("canvas"),
        i = l.getContext("2d"),
        l.width = 149 * o,
        l.height = 356 * o,
        i.save(),
        i.translate(74.5 * o, 177.5 * o),
        Be(i, -57.5 * o, -161.5 * o, 100 * o, 323 * o, 10 * o),
        i.restore(),
        Ce(i, s[0], s[1], 4 * o),
        i.save(),
        i.translate(74.5 * o, 177.5 * o),
        Be(i, -57.5 * o, 50.5 * o, 100 * o, 105 * o, 10 * o),
        i.restore(),
        Ce(i, s[6], s[1], 4 * o),
        i.beginPath(),
        i.lineCap = "round",
        i.lineJoin = "round",
        i.moveTo(16 * o, 125 * o),
        i.bezierCurveTo(74.5 * o, 125 * o, 118 * o, 125 * o, 118 * o, 125 * o),
        i.closePath(),
        Ce(i, s[2], s[2], 10 * o),
        i.beginPath(),
        i.lineCap = "round",
        i.lineJoin = "round",
        i.moveTo(16 * o, 120 * o),
        i.bezierCurveTo(74.5 * o, 120 * o, 74.5 * o, 120 * o, 118 * o, 120 * o),
        i.closePath(),
        Ce(i, s[3], s[3], 10 * o),
        i.beginPath(),
        i.lineCap = "round",
        i.lineJoin = "round",
        i.moveTo(16 * o, 228 * o),
        i.bezierCurveTo(75 * o, 228.5 * o, 118 * o, 228.5 * o, 118 * o, 229 * o),
        i.closePath(),
        Ce(i, s[2], s[2], 10 * o),
        i.beginPath(),
        i.lineCap = "round",
        i.lineJoin = "round",
        i.moveTo(16 * o, 224 * o),
        i.bezierCurveTo(75 * o, 224 * o, 118 * o, 224 * o, 118 * o, 224 * o),
        i.closePath(),
        Ce(i, s[3], s[3], 10 * o),
        i.save(),
        i.translate(72 * o, 68.5 * o),
        Be(i, -41.5 * o, -36.5 * o, 73 * o, 73 * o, 13 * o),
        i.restore(),
        Ce(i, s[4]),
        i.save(),
        i.translate(72 * o, 175.5 * o),
        Be(i, -41.5 * o, -38.5 * o, 73 * o, 73 * o, 13 * o),
        i.restore(),
        Ce(i, s[4]),
        i.save(),
        i.translate(72 * o, 279.5 * o),
        Be(i, -41.5 * o, -40.5 * o, 73 * o, 73 * o, 13 * o),
        i.restore(),
        Ce(i, s[4]),
        i.beginPath(),
        i.lineCap = "round",
        i.lineJoin = "round",
        i.moveTo(16 * o, 338 * o),
        i.bezierCurveTo(75 * o, 338 * o, 118 * o, 338 * o, 118 * o, 338 * o),
        i.closePath(),
        Ce(i, s[2], s[2], 10 * o),
        i.beginPath(),
        i.lineCap = "round",
        i.lineJoin = "round",
        i.moveTo(16 * o, 333 * o),
        i.bezierCurveTo(75 * o, 333 * o, 118 * o, 333 * o, 118 * o, 333 * o),
        i.closePath(),
        Ce(i, s[3], s[3], 10 * o),
        l)),
        sprite[Le.FURNACE_ON] = [],
        sprite[Le.FURNACE_ON][Le.DAY] = g(X1(.5, !Ve.boostfps, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"])),
        sprite[Le.FURNACE_ON][Le.NIGHT] = g(X1(.5, !Ve.boostfps, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#ffdc73", "#fffce2", "#fef259"])),
        sprite[Le.FURNACE_OFF] = [],
        sprite[Le.FURNACE_OFF][Le.DAY] = g(j1(.5, !Ve.boostfps, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#4f4f4f", "#6c6c6c", "#454545"])),
        sprite[Le.FURNACE_OFF][Le.NIGHT] = g(j1(.5, !Ve.boostfps, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#152229", "#0c1113", "#0c1113"])),
        sprite[Le.FURNACE_SLOT] = g((i = .8,
        Ve.boostfps,
        s = ["#5f6061", "#939393"],
        o = document.createElement("canvas"),
        l = o.getContext("2d"),
        o.width = 118 * i,
        o.height = 129 * i,
        l.save(),
        l.translate(90 * i, 90 * i),
        Be(l, -86.5 * i, -86 * i, 110 * i, 110 * i, 15 * i),
        l.restore(),
        Ce(l, s[0], s[1], 4),
        o)),
        sprite[Le.FURNACE_BUTTON] = p(1, [{
            f: be,
            x: 0,
            y: 0,
            a: 1,
            r: Math.PI / 2.5,
            c: ["#4d2d14", "#432516"]
        }], .3, ["#494949", "#5b5858", "#3d3b3b"], 1),
        sprite[Le.BED] = [],
        sprite[Le.BED][Le.DAY] = g(et(1, Ve.boostfps, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"])),
        sprite[Le.BED][Le.NIGHT] = g(et(1, Ve.boostfps, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#0b424f", "#0b3432", "#092b29", "#2b0b4a", "#23073e"])),
        sprite[Le.BED_TOP] = [],
        sprite[Le.BED_TOP][Le.DAY] = g(tt(1, Ve.boostfps, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"])),
        sprite[Le.BED_TOP][Le.NIGHT] = g(tt(1, Ve.boostfps, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#083b37", "#0b3432", "#092b29", "#2b0b4a", "#23073e"])),
        sprite[Le.CRAB_SPEAR] = [],
        sprite[Le.CRAB_SPEAR][Le.DAY] = g(I(3, it(.7, !Ve.boostfps, ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"]))),
        sprite[Le.CRAB_SPEAR][Le.NIGHT] = g(I(3, it(.7, !Ve.boostfps, ["#0d1b1c", "#0b3432", "#092b29", "#34255d", "#281b4e", "#2f2157", "#281b4e", "#104d5b", "#083b37"]))),
        sprite[Le.WOOD_SPEAR] = [],
        sprite[Le.WOOD_SPEAR][Le.DAY] = g(I(3, nt(.7, !Ve.boostfps, ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"]))),
        sprite[Le.WOOD_SPEAR][Le.NIGHT] = g(I(3, nt(.7, !Ve.boostfps, ["#0d1b1c", "#0b3432", "#092b29", "#0e4d49", "#1a6c67", "#07322f"]))),
        sprite[Le.SPEAR] = [],
        sprite[Le.SPEAR][Le.DAY] = g(I(3, rt(.65, !Ve.boostfps, ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"]))),
        sprite[Le.SPEAR][Le.NIGHT] = g(I(3, rt(.65, !Ve.boostfps, ["#0d1b1c", "#0d2e33", "#0b2326", "#1a6c67", "#07322f", "#374950", "#101f26", "#2c3c42", "#485e66", "#1f343f", "#546e78"]))),
        sprite[Le.GOLD_SPEAR] = [],
        sprite[Le.GOLD_SPEAR][Le.DAY] = g(I(3, ot(.67, !Ve.boostfps, ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"]))),
        sprite[Le.GOLD_SPEAR][Le.NIGHT] = g(I(3, ot(.67, !Ve.boostfps, ["#030d14", "#263947", "#182935", "#33916d", "#197c62", "#3eab81", "#43aa82", "#29997c", "#52be94"]))),
        sprite[Le.DIAMOND_SPEAR] = [],
        sprite[Le.DIAMOND_SPEAR][Le.DAY] = g(I(3, at(.67, !Ve.boostfps, ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"]))),
        sprite[Le.DIAMOND_SPEAR][Le.NIGHT] = g(I(3, at(.67, !Ve.boostfps, ["#0d1b1c", "#111316", "#0a0b0c", "#4bbbc3", "#23a19d", "#54c5cd", "#4ad2ce", "#3dc4c0", "#73dde5"]))),
        sprite[Le.AMETHYST_SPEAR] = [],
        sprite[Le.AMETHYST_SPEAR][Le.DAY] = g(I(3, st(.67, !Ve.boostfps, ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"]))),
        sprite[Le.AMETHYST_SPEAR][Le.NIGHT] = g(I(3, st(.67, !Ve.boostfps, ["#0d1b1c", "#111316", "#0a0b0c", "#6e43bf", "#673fa4", "#784bcc", "#845bc6", "#764eb5", "#966be7"]))),
        sprite[Le.DRAGON_SPEAR] = [],
        sprite[Le.DRAGON_SPEAR][Le.DAY] = g(I(3, dt(1, !Ve.boostfps, ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"]))),
        sprite[Le.DRAGON_SPEAR][Le.NIGHT] = g(I(3, dt(1, !Ve.boostfps, ["#0d1b1c", "#1c2026", "#0a0b0c", "#7dc6d9", "#6cbacf", "#87d2e6", "#49b2cf", "#87d2e6"]))),
        sprite[Le.HAMMER] = [],
        sprite[Le.HAMMER][Le.DAY] = g(I(3, pt(1, !Ve.boostfps, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]))),
        sprite[Le.HAMMER][Le.NIGHT] = g(I(3, pt(1, !Ve.boostfps, ["#030d14", "#263947", "#182935", "#485e66", "#1f343f"]))),
        sprite[Le.SPANNER] = [],
        sprite[Le.SPANNER][Le.DAY] = g(I(3, Ui(.5, !Ve.boostfps, ["#0d1b1c", "#939393", "#5f6061"]))),
        sprite[Le.SPANNER][Le.NIGHT] = g(I(3, Ui(.5, !Ve.boostfps, ["#030d14", "#485e66", "#1f343f"]))),
        sprite[Le.SUPER_HAMMER] = [],
        sprite[Le.SUPER_HAMMER][Le.DAY] = g(I(3, di(1, !Ve.boostfps, ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb"]))),
        sprite[Le.SUPER_HAMMER][Le.NIGHT] = g(I(3, di(1, !Ve.boostfps, ["#0d1b1c", "#2a4f4a", "#1e423d", "#1e0302", "#096b3f", "#3db76f", "#118254", "#40c696", "#0c7a50", "#59d8a4", "#249376", "#80d8c7"]))),
        sprite[Le.HAMMER_GOLD] = [],
        sprite[Le.HAMMER_GOLD][Le.DAY] = g(I(3, pt(1, !Ve.boostfps, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]))),
        sprite[Le.HAMMER_GOLD][Le.NIGHT] = g(I(3, pt(1, !Ve.boostfps, ["#0d1b1c", "#0d2e33", "#0b2326", "#43aa82", "#29997c"]))),
        sprite[Le.HAMMER_DIAMOND] = [],
        sprite[Le.HAMMER_DIAMOND][Le.DAY] = g(I(3, pt(1, !Ve.boostfps, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]))),
        sprite[Le.HAMMER_DIAMOND][Le.NIGHT] = g(I(3, pt(1, !Ve.boostfps, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"]))),
        sprite[Le.HAMMER_AMETHYST] = [],
        sprite[Le.HAMMER_AMETHYST][Le.DAY] = g(I(3, pt(1, !Ve.boostfps, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]))),
        sprite[Le.HAMMER_AMETHYST][Le.NIGHT] = g(I(3, pt(1, !Ve.boostfps, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5"]))),
        sprite[Le.LOCK] = [],
        sprite[Le.LOCK][Le.DAY] = g(qt(.55, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"])),
        sprite[Le.LOCK][Le.NIGHT] = g(qt(.55, 0, ["#080707", "#133d3c", "#2b6664", "#1b2529"])),
        sprite[Le.PADLOCK] = [],
        sprite[Le.PADLOCK].push(g(qt(.8, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"]))),
        sprite[Le.PADLOCK].push(g(qt(.8, 0, ["#141414", "#9f7d17", "#dab33c", "#474545"]))),
        sprite[Le.PADLOCK].push(g(qt(.8, 0, ["#141414", "#73590d", "#a88a2c", "#2a2828"]))),
        sprite[Le.LOCKED] = [],
        sprite[Le.LOCKED].push(sprite[Le.PADLOCK][0]),
        sprite[Le.LOCKED].push(sprite[Le.PADLOCK][0]),
        sprite[Le.LOCKED].push(sprite[Le.PADLOCK][0]),
        sprite[Le.LOCKPICK] = [],
        sprite[Le.LOCKPICK][Le.DAY] = g(ti(.06, 0, ["#141414", "#c4a23a", "#816511"])),
        sprite[Le.LOCKPICK][Le.NIGHT] = g(ti(.06, 0, ["#030d14", "#2b6664", "#133d3c"])),
        sprite[Le.KEY] = [],
        sprite[Le.KEY].push(g(ti(.08, 0, ["#141414", "#c4a23a", "#816511"]))),
        sprite[Le.KEY].push(g(ti(.08, 0, ["#141414", "#e2bd4e", "#a38018"]))),
        sprite[Le.KEY].push(g(ti(.08, 0, ["#141414", "#b0902e", "#634d09"]))),
        sprite[Le.DRAGON_HEART] = p(1.5, [{
            f: ai,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#141414", "#178a99", "#0a6372", "#03282e"]
        }], .45, ["#5bbcc9", "#73d2df", "#4daab6"], .9),
        sprite[Le.RESURRECTION_GROUND] = [],
        sprite[Le.RESURRECTION_GROUND][Le.DAY] = g(ii(.8, Ve.boostfps, ["#347f93", "#54a4ba"])),
        sprite[Le.RESURRECTION_GROUND][Le.NIGHT] = g(ii(.8, Ve.boostfps, ["#98ede3", "#94f2e7"])),
        sprite[Le.RESURRECTION_HOLE] = [],
        sprite[Le.RESURRECTION_HOLE][Le.DAY] = g(ni(.8, Ve.boostfps, ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"])),
        sprite[Le.RESURRECTION_HOLE][Le.NIGHT] = g(ni(.8, Ve.boostfps, ["#59c9c0", "#83ddd4", "#3fa097", "#90ddd9"])),
        sprite[Le.RESURRECTION_ROTATE] = [],
        sprite[Le.RESURRECTION_ROTATE][Le.DAY] = g(ri(.8, Ve.boostfps, ["#a9e4ed", "#86d4e0"])),
        sprite[Le.RESURRECTION_ROTATE][Le.NIGHT] = g(ri(.8, Ve.boostfps, ["#83ddd4", "#485e66"])),
        sprite[Le.RESURRECTION] = [],
        sprite[Le.RESURRECTION][Le.DAY] = g(oi(.8, !Ve.boostfps, ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc"])),
        sprite[Le.RESURRECTION][Le.NIGHT] = g(oi(.8, !Ve.boostfps, ["#98ede3", "#94f2e7", "#1f343f", "#59c9c0", "#83ddd4", "#485e66", "#2d484f", "#546d6d", "#597b84"])),
        sprite[Le.EMERALD_MACHINE_GROUND] = [],
        sprite[Le.EMERALD_MACHINE_GROUND][Le.DAY] = IMAGES.EMERALD_MACHINE_GROUNDD,
        sprite[Le.EMERALD_MACHINE_GROUND][Le.NIGHT] = IMAGES.EMERALD_MACHINE_GROUNDN,
        sprite[Le.EMERALD_MACHINE_HOLE] = [],
        sprite[Le.EMERALD_MACHINE_HOLE][Le.DAY] = IMAGES.EMERALD_MACHINE_HOLED,
        sprite[Le.EMERALD_MACHINE_HOLE][Le.NIGHT] = IMAGES.EMERALD_MACHINE_HOLEN,
        sprite[Le.EMERALD_MACHINE_ROTATE] = [],
        sprite[Le.EMERALD_MACHINE_ROTATE][Le.DAY] = IMAGES.EMERALD_MACHINE_ROTATED,
        sprite[Le.EMERALD_MACHINE_ROTATE][Le.NIGHT] = IMAGES.EMERALD_MACHINE_ROTATEN,
        sprite[Le.EMERALD_MACHINE] = [],
        sprite[Le.EMERALD_MACHINE][Le.DAY] = IMAGES.EMERALD_MACHINED,
        sprite[Le.EMERALD_MACHINE][Le.NIGHT] = IMAGES.EMERALD_MACHINEN,
        sprite[Le.EXTRACTOR_MACHINE0_STONE] = [],
        sprite[Le.EXTRACTOR_MACHINE0_STONE][Le.DAY] = IMAGES.EXTRACTOR_MACHINE0_STONED,
        sprite[Le.EXTRACTOR_MACHINE0_STONE][Le.NIGHT] = IMAGES.EXTRACTOR_MACHINE0_STONEN,
        sprite[Le.EXTRACTOR_MACHINE_STONE] = [],
        sprite[Le.EXTRACTOR_MACHINE_STONE][Le.DAY] = IMAGES.EXTRACTOR_MACHINE_STONED,
        sprite[Le.EXTRACTOR_MACHINE_STONE][Le.NIGHT] = IMAGES.EXTRACTOR_MACHINE_STONEN,
        sprite[Le.EXTRACTOR_MACHINE0_GOLD] = [],
        sprite[Le.EXTRACTOR_MACHINE0_GOLD][Le.DAY] = IMAGES.EXTRACTOR_MACHINE0_GOLDD,
        sprite[Le.EXTRACTOR_MACHINE0_GOLD][Le.NIGHT] = IMAGES.EXTRACTOR_MACHINE0_GOLDN,
        sprite[Le.EXTRACTOR_MACHINE_GOLD] = [],
        sprite[Le.EXTRACTOR_MACHINE_GOLD][Le.DAY] = IMAGES.EXTRACTOR_MACHINE_GOLDD,
        sprite[Le.EXTRACTOR_MACHINE_GOLD][Le.NIGHT] = IMAGES.EXTRACTOR_MACHINE_GOLDN,
        sprite[Le.EXTRACTOR_MACHINE0_DIAMOND] = [],
        sprite[Le.EXTRACTOR_MACHINE0_DIAMOND][Le.DAY] = IMAGES.EXTRACTOR_MACHINE0_DIAMONDD,
        sprite[Le.EXTRACTOR_MACHINE0_DIAMOND][Le.NIGHT] = IMAGES.EXTRACTOR_MACHINE0_DIAMONDN,
        sprite[Le.EXTRACTOR_MACHINE_DIAMOND] = [],
        sprite[Le.EXTRACTOR_MACHINE_DIAMOND][Le.DAY] = IMAGES.EXTRACTOR_MACHINE_DIAMONDD,
        sprite[Le.EXTRACTOR_MACHINE_DIAMOND][Le.NIGHT] = IMAGES.EXTRACTOR_MACHINE_DIAMONDN,
        sprite[Le.EXTRACTOR_MACHINE0_AMETHYST] = [],
        sprite[Le.EXTRACTOR_MACHINE0_AMETHYST][Le.DAY] = IMAGES.EXTRACTOR_MACHINE0_AMETHYSTD,
        sprite[Le.EXTRACTOR_MACHINE0_AMETHYST][Le.NIGHT] = IMAGES.EXTRACTOR_MACHINE0_AMETHYSTN,
        sprite[Le.EXTRACTOR_MACHINE_AMETHYST] = [],
        sprite[Le.EXTRACTOR_MACHINE_AMETHYST][Le.DAY] = IMAGES.EXTRACTOR_MACHINE_AMETHYSTD,
        sprite[Le.EXTRACTOR_MACHINE_AMETHYST][Le.NIGHT] = IMAGES.EXTRACTOR_MACHINE_AMETHYSTN,
        sprite[Le.EXTRACTOR_MACHINE0_REIDITE] = [],
        sprite[Le.EXTRACTOR_MACHINE0_REIDITE][Le.DAY] = IMAGES.EXTRACTOR_MACHINE0_REIDITED,
        sprite[Le.EXTRACTOR_MACHINE0_REIDITE][Le.NIGHT] = IMAGES.EXTRACTOR_MACHINE0_REIDITEN,
        sprite[Le.EXTRACTOR_MACHINE_REIDITE] = [],
        sprite[Le.EXTRACTOR_MACHINE_REIDITE][Le.DAY] = IMAGES.EXTRACTOR_MACHINE_REIDITED,
        sprite[Le.EXTRACTOR_MACHINE_REIDITE][Le.NIGHT] = IMAGES.EXTRACTOR_MACHINE_REIDITEN,
        sprite[Le.FIREFLY] = [],
        sprite[Le.FIREFLY][Le.DAY] = IMAGES.FIREFLYD,
        sprite[Le.FIREFLY][Le.NIGHT] = IMAGES.FIREFLYN,
        sprite[Le.HURT_FIREFLY] = IMAGES.HURT_FIREFLY,
        sprite[Le.TOTEM] = [],
        sprite[Le.TOTEM][Le.DAY] = g(ei(.75, !Ve.boostfps, ["#0d1b1c", "#4c3a15", "#634828", "#564021"])),
        sprite[Le.TOTEM][Le.NIGHT] = g(ei(.75, !Ve.boostfps, ["#030d14", "#0d2e33", "#184747", "#123b3f"])),
        sprite[Le.ICON_MEMBER] = g($t(.3, ["#092813", "#1f773d"], 0)),
        sprite[Le.ICON_LEADER] = g($t(.3, ["#092813", "#1f773d"], 1)),
        sprite[Le.VERIFIED] = g((i = .6,
        l = ["#092813", "#1f773d"],
        s = document.createElement("canvas"),
        o = s.getContext("2d"),
        s.width = 60 * i,
        s.height = 60 * i,
        o.translate(-25 * i, -25 * i),
        o.translate(0, 5 * i),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(24 * i, 50 * i),
        o.bezierCurveTo(32.5 * i, 54.5 * i, 32.5 * i, 54.5 * i, 41 * i, 59 * i),
        o.bezierCurveTo(57 * i, 47 * i, 57 * i, 47 * i, 73 * i, 35 * i),
        o.bezierCurveTo(57 * i, 53 * i, 57 * i, 53 * i, 41 * i, 71 * i),
        o.closePath(),
        Ce(o, l[0]),
        o.translate(0, -5 * i),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(24 * i, 50 * i),
        o.bezierCurveTo(32.5 * i, 54.5 * i, 32.5 * i, 54.5 * i, 41 * i, 59 * i),
        o.bezierCurveTo(57 * i, 47 * i, 57 * i, 47 * i, 73 * i, 35 * i),
        o.bezierCurveTo(57 * i, 53 * i, 57 * i, 53 * i, 41 * i, 71 * i),
        o.closePath(),
        Ce(o, l[1]),
        s)),
        sprite[Le.TEAM_BUTTON] = [],
        sprite[Le.TEAM_BUTTON].push(g(Qt(.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 0))),
        sprite[Le.TEAM_BUTTON].push(g(Qt(.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 0))),
        sprite[Le.TEAM_BUTTON].push(g(Qt(.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 0))),
        sprite[Le.FULL_TEAM_BUTTON] = [];
        var i = g(Qt(.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 0));
        sprite[Le.FULL_TEAM_BUTTON].push(i),
        sprite[Le.FULL_TEAM_BUTTON].push(i),
        sprite[Le.FULL_TEAM_BUTTON].push(i),
        sprite[Le.MANAGE_TEAM_BUTTON] = [],
        sprite[Le.MANAGE_TEAM_BUTTON].push(g(Qt(.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 1))),
        sprite[Le.MANAGE_TEAM_BUTTON].push(g(Qt(.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 1))),
        sprite[Le.MANAGE_TEAM_BUTTON].push(g(Qt(.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 1))),
        sprite[Le.DELAY_SPIKE] = g(function(e, t) {
            var i = document.createElement("canvas")
              , n = i.getContext("2d")
              , r = 170 * e
              , o = 172 * e
              , a = r / 2
              , s = o / 2;
            i.width = r,
            i.height = o,
            n.translate(a, s),
            n.save();
            for (var d = 0; d < 10; d++)
                n.rotate(Math.PI / 5),
                n.save(),
                n.translate(65 * e, 0),
                A(n, 3, 18 * e, 4 * e),
                Ce(n, t[0]),
                n.restore();
            return n.restore(),
            we(n, 0, 0, 40 * e),
            Ce(n, void 0, t[0], 6 * e),
            we(n, 0, 0, 20 * e),
            Ce(n, t[0]),
            i
        }(.3, ["#FFFFFF"])),
        sprite[Le.DELAY_WALL] = g((o = .3,
        l = ["#FFFFFF"],
        s = document.createElement("canvas"),
        i = s.getContext("2d"),
        d = (c = 130 * o) / 2,
        a = (_ = 142 * o) / 2,
        s.width = c,
        s.height = _,
        we(i, d, a, 40 * o),
        Ce(i, void 0, l[0], 7 * o),
        we(i, d, a, 30 * o),
        Ce(i, void 0, l[0], 7 * o),
        we(i, d, a, 20 * o),
        Ce(i, l[0]),
        s)),
        sprite[Le.DELAY_TEAM] = g($t(.4, ["rgba(255, 255, 255, 0)", "#FFFFFF"], 0)),
        sprite[Le.DELAY_DRINK] = g(I(Math.PI / 5, (c = .2,
        _ = ["#FFFFFF"],
        d = document.createElement("canvas"),
        a = d.getContext("2d"),
        d.width = 316 * c,
        d.height = 365 * c,
        a.save(),
        a.translate(156.07142639160156 * c, 51.81248474121094 * c),
        a.rotate(0),
        Be(a, -21.5 * c, -34 * c, 43 * c, 68 * c, 8 * c),
        a.restore(),
        Ce(a, _[0], _[0], 15 * c),
        a.beginPath(),
        a.lineCap = "round",
        a.lineJoin = "round",
        a.moveTo(126.57142639160156 * c, 67.38392639160156 * c),
        a.bezierCurveTo(126.57142639160156 * c, 57.38392639160156 * c, 132.57142639160156 * c, 54.38392639160156 * c, 140.57142639160156 * c, 54.38392639160156 * c),
        a.bezierCurveTo(177.57142639160156 * c, 55.38392639160156 * c, 158.07142639160156 * c, 54.38392639160156 * c, 175.57142639160156 * c, 54.38392639160156 * c),
        a.bezierCurveTo(185.57142639160156 * c, 56.38392639160156 * c, 185.57142639160156 * c, 57.38392639160156 * c, 184.57142639160156 * c, 66.38392639160156 * c),
        a.bezierCurveTo(184.57142639160156 * c, 78.38392639160156 * c, 184.57142639160156 * c, 89.38392639160156 * c, 184.57142639160156 * c, 90.38392639160156 * c),
        a.bezierCurveTo(177.57142639160156 * c, 107.38392639160156 * c, 180.57142639160156 * c, 112.38392639160156 * c, 189.57142639160156 * c, 116.38392639160156 * c),
        a.bezierCurveTo(212.57142639160156 * c, 127.38392639160156 * c, 212.57142639160156 * c, 132.38392639160156 * c, 211.57142639160156 * c, 150.38392639160156 * c),
        a.bezierCurveTo(211.57142639160156 * c, 227.59821128845215 * c, 211.57142639160156 * c, 227.59821128845215 * c, 211.57142639160156 * c, 304.81249618530273 * c),
        a.bezierCurveTo(212.57142639160156 * c, 328.81249618530273 * c, 209.57142639160156 * c, 330.81249618530273 * c, 188.57142639160156 * c, 333.81249618530273 * c),
        a.bezierCurveTo(155.07142639160156 * c, 333.31249618530273 * c, 155.07142639160156 * c, 333.31249618530273 * c, 121.57142639160156 * c, 332.81249618530273 * c),
        a.bezierCurveTo(104.57142639160156 * c, 327.81249618530273 * c, 105.57142639160156 * c, 328.81249618530273 * c, 104.57142639160156 * c, 312.81249618530273 * c),
        a.bezierCurveTo(104.57142639160156 * c, 228.16963958740234 * c, 104.57142639160156 * c, 228.16963958740234 * c, 104.57142639160156 * c, 143.52678298950195 * c),
        a.bezierCurveTo(106.57142639160156 * c, 124.52678298950195 * c, 110.57142639160156 * c, 123.52678298950195 * c, 123.57142639160156 * c, 116.52678298950195 * c),
        a.bezierCurveTo(136.57142639160156 * c, 110.52678298950195 * c, 130.57142639160156 * c, 106.52678298950195 * c, 126.57142639160156 * c, 98.52678298950195 * c),
        a.closePath(),
        Ce(a, _[0], _[0], 15 * c),
        a.beginPath(),
        a.lineCap = "round",
        a.lineJoin = "round",
        a.moveTo(125.57142639160156 * c, 156.66963958740234 * c),
        a.bezierCurveTo(125.57142639160156 * c, 182.66963958740234 * c, 125.57142639160156 * c, 182.66963958740234 * c, 125.57142639160156 * c, 208.66963958740234 * c),
        a.closePath(),
        Ce(a, _[0], _[0], 15 * c),
        d))),
        sprite[Le.AMETHYST_HELMET] = [],
        sprite[Le.AMETHYST_HELMET][Le.DAY] = g(Jt(.85, Ve.boostfps, ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"])),
        sprite[Le.AMETHYST_HELMET][Le.NIGHT] = g(Jt(.85, Ve.boostfps, ["#0d1b1c", "#4e4e93", "#393977", "#444187", "#2b9390", "#277a74", "#7da8db"])),
        sprite[Le.SHOW_TEAM_BUTTON] = [],
        sprite[Le.SHOW_TEAM_BUTTON].push(g(Qt(.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 1))),
        sprite[Le.SHOW_TEAM_BUTTON].push(g(Qt(.7, ["#38130C", "#853D22", "#391402", "#3D3016", "#873E22"], 1))),
        sprite[Le.SHOW_TEAM_BUTTON].push(g(Qt(.7, ["#1C0A06", "#6B3019", "#1D0A06", "#251D0C", "#6A301A"], 1))),
        sprite[Le.HOOD] = [],
        sprite[Le.HOOD][Le.DAY] = g(fi(.37, Ve.boostfps, ["#2a2938", "#242330", "#313041"])),
        sprite[Le.HOOD][Le.NIGHT] = g(fi(.37, Ve.boostfps, ["#1b1e30", "#161921", "#252f3e"])),
        sprite[Le.WINTER_HOOD] = [],
        sprite[Le.WINTER_HOOD][Le.DAY] = g(vi(.17, Ve.boostfps, ["#2a2938", "#242330", "#313041", "#1b1a25", "#d62c0e"])),
        sprite[Le.WINTER_HOOD][Le.NIGHT] = g(vi(.17, Ve.boostfps, ["#1b1e30", "#161921", "#252f3e", "#0a0c11", "#d62c0e"])),
        sprite[Le.WINTER_PEASANT] = [],
        sprite[Le.WINTER_PEASANT][Le.DAY] = g(Mi(.55, !Ve.boostfps, ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"], 1)),
        sprite[Le.WINTER_PEASANT][Le.NIGHT] = g(Mi(.55, !Ve.boostfps, ["#1d1d22", "#216661", "#134945", "#2b8079", "#17504c"], 1)),
        sprite[Le.PEASANT] = [],
        sprite[Le.PEASANT][Le.DAY] = g(Mi(.55, !Ve.boostfps, ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"], 0)),
        sprite[Le.PEASANT][Le.NIGHT] = g(Mi(.55, !Ve.boostfps, ["#1d1d22", "#1b5752", "#0e3b37", "#23706a", "#11413e", "#0b322f"], 0)),
        sprite[Le.CROWN_GREEN] = [],
        sprite[Le.CROWN_GREEN][Le.DAY] = g(xi(.2, !Ve.boostfps, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"])),
        sprite[Le.CROWN_GREEN][Le.NIGHT] = g(xi(.2, !Ve.boostfps, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#3db76f", "#118254", "#40c696"])),
        sprite[Le.CROWN_ORANGE] = [],
        sprite[Le.CROWN_ORANGE][Le.DAY] = g(xi(.2, !Ve.boostfps, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"])),
        sprite[Le.CROWN_ORANGE][Le.NIGHT] = g(xi(.2, !Ve.boostfps, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#69b681", "#509a75", "#7ec387"])),
        sprite[Le.CROWN_BLUE] = [],
        sprite[Le.CROWN_BLUE][Le.DAY] = g(xi(.2, !Ve.boostfps, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"])),
        sprite[Le.CROWN_BLUE][Le.NIGHT] = g(xi(.2, !Ve.boostfps, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#19899e", "#16688b", "#4ea3c7"])),
        sprite[Le.CROWN_CRAB] = [],
        sprite[Le.CROWN_CRAB][Le.DAY] = g($1(.24, !Ve.boostfps, ["#000000", "#b03431", "#94312d", "#bd3c33", "#e45936"])),
        sprite[Le.CROWN_CRAB][Le.NIGHT] = g($1(.24, !Ve.boostfps, ["#000000", "#1b103e", "#190f3b", "#261a4e", "#34255d"])),
        sprite[Le.DRAGON_HELMET] = [],
        sprite[Le.DRAGON_HELMET][Le.DAY] = g(Ct(.32, Ve.boostfps, ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"])),
        sprite[Le.DRAGON_HELMET][Le.NIGHT] = g(Ct(.32, Ve.boostfps, ["#0d1b1c", "#70c1d6", "#49b2cf", "#87cad9", "#367c93", "#113743", "#0c2c36", "#51a2b8", "#3a8ea4"])),
        sprite[Le.DRAGON_SWORD] = [],
        sprite[Le.DRAGON_SWORD][Le.DAY] = g(I(3, _i(.9, !Ve.boostfps, ["#0d1b1c", "#284c4a", "#193533", "#c8efef", "#7eccbb"]))),
        sprite[Le.DRAGON_SWORD][Le.NIGHT] = g(I(3, _i(.9, !Ve.boostfps, ["#0d1b1c", "#18332e", "#112320", "#87d2e6", "#49b2cf"]))),
        sprite[Le.DRAGON_SWORD_HALO] = [],
        sprite[Le.DRAGON_SWORD_HALO][Le.DAY] = g(I(3, _i(1, !Ve.boostfps, [void 0, void 0, void 0, "#c8efef", "#c8efef"]))),
        sprite[Le.DRAGON_SWORD_HALO][Le.NIGHT] = g(I(3, _i(1, !Ve.boostfps, [void 0, void 0, void 0, "#87d2e6", "#87d2e6"]))),
        sprite[Le.QUEST_BUTTON] = [],
        sprite[Le.QUEST_BUTTON].push(g(Wi(.3, Ve.boostfps, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 0))),
        sprite[Le.QUEST_BUTTON].push(g(Wi(.3, Ve.boostfps, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 1))),
        sprite[Le.QUEST_BUTTON].push(g(Wi(.3, Ve.boostfps, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#d7990c"], 1))),
        sprite[Le.MARKET_BUTTON] = [],
        sprite[Le.MARKET_BUTTON].push(g(Vi(.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 0))),
        sprite[Le.MARKET_BUTTON].push(g(Vi(.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1))),
        sprite[Le.MARKET_BUTTON].push(g(Vi(.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1))),
        sprite[Le.SOUND_BUTTON_ON] = [],
        sprite[Le.SOUND_BUTTON_ON].push(g(t1(.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 1))),
        sprite[Le.SOUND_BUTTON_ON].push(g(t1(.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 1))),
        sprite[Le.SOUND_BUTTON_ON].push(g(t1(.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 1))),
        sprite[Le.SOUND_BUTTON_OFF] = [],
        sprite[Le.SOUND_BUTTON_OFF].push(g(t1(.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 0))),
        sprite[Le.SOUND_BUTTON_OFF].push(g(t1(.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 0))),
        sprite[Le.SOUND_BUTTON_OFF].push(g(t1(.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 0))),
        sprite[Le.SHOVEL] = [],
        sprite[Le.SHOVEL][Le.DAY] = g(I(3, Bi(.7, !Ve.boostfps, ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"]))),
        sprite[Le.SHOVEL][Le.NIGHT] = g(I(3, Bi(.7, !Ve.boostfps, ["#0d1b1c", "#0d2e33", "#0b2326", "#485e66", "#1f343f", "#274352"]))),
        sprite[Le.SHOVEL_GOLD] = [],
        sprite[Le.SHOVEL_GOLD][Le.DAY] = g(I(3, Bi(.7, !Ve.boostfps, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#ada437"]))),
        sprite[Le.SHOVEL_GOLD][Le.NIGHT] = g(I(3, Bi(.7, !Ve.boostfps, ["#0d1b1c", "#263947", "#182935", "#43aa82", "#29997c", "#32916c"]))),
        sprite[Le.SHOVEL_DIAMOND] = [],
        sprite[Le.SHOVEL_DIAMOND][Le.DAY] = g(I(3, Bi(.7, !Ve.boostfps, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"]))),
        sprite[Le.SHOVEL_DIAMOND][Le.NIGHT] = g(I(3, Bi(.7, !Ve.boostfps, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0", "#49bdc6"]))),
        sprite[Le.SHOVEL_AMETHYST] = [],
        sprite[Le.SHOVEL_AMETHYST][Le.DAY] = g(I(3, Bi(.7, !Ve.boostfps, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#9641b5"]))),
        sprite[Le.SHOVEL_AMETHYST][Le.NIGHT] = g(I(3, Bi(.7, !Ve.boostfps, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5", "#6f45c2"]))),
        sprite[Le.SHOP] = [],
        sprite[Le.SHOP].push(g(ui(.7, ["#3b330d", "#b5a118", "#c8ac16"]))),
        sprite[Le.SHOP].push(g(ui(.7, ["#524712", "#c7b11c", "#d9ba18"]))),
        sprite[Le.SHOP].push(g(ui(.7, ["#2a2409", "#9f8e14", "#ad9511"]))),
        sprite[Le.HURT_WOLF] = g((o = 1.1,
        i = ["#BB0000"],
        l = document.createElement("canvas"),
        s = l.getContext("2d"),
        l.width = 188 * o,
        l.height = 190 * o,
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(33.00567626953125 * o, 95.44320678710938 * o),
        s.bezierCurveTo(42.00567626953125 * o, 87.44320678710938 * o, 48.00567626953125 * o, 51.443206787109375 * o, 74.00567626953125 * o, 47.443206787109375 * o),
        s.bezierCurveTo(100.00567626953125 * o, 42.443206787109375 * o, 118.00567626953125 * o, 49.443206787109375 * o, 131.00567626953125 * o, 55.443206787109375 * o),
        s.bezierCurveTo(140.00567626953125 * o, 70.44320678710938 * o, 145.00567626953125 * o, 87.44320678710938 * o, 152.00567626953125 * o, 94.44320678710938 * o),
        s.bezierCurveTo(149.00567626953125 * o, 99.44320678710938 * o, 147.00567626953125 * o, 98.44320678710938 * o, 141.00567626953125 * o, 101.44320678710938 * o),
        s.bezierCurveTo(147.00567626953125 * o, 108.44320678710938 * o, 147.00567626953125 * o, 111.44320678710938 * o, 147.00567626953125 * o, 112.44320678710938 * o),
        s.bezierCurveTo(143.00567626953125 * o, 112.44320678710938 * o, 141.00567626953125 * o, 112.44320678710938 * o, 137.00567626953125 * o, 111.44320678710938 * o),
        s.bezierCurveTo(138.00567626953125 * o, 117.44320678710938 * o, 138.00567626953125 * o, 120.44320678710938 * o, 138.00567626953125 * o, 124.44320678710938 * o),
        s.bezierCurveTo(125.00567626953125 * o, 107.44320678710938 * o, 121.00567626953125 * o, 124.44320678710938 * o, 110.00567626953125 * o, 141.44320678710938 * o),
        s.bezierCurveTo(102.00567626953125 * o, 158.44320678710938 * o, 89.00567626953125 * o, 158.44320678710938 * o, 80.00567626953125 * o, 144.44320678710938 * o),
        s.bezierCurveTo(61.00567626953125 * o, 111.44320678710938 * o, 56.00567626953125 * o, 117.44320678710938 * o, 48.00567626953125 * o, 120.44320678710938 * o),
        s.bezierCurveTo(46.00567626953125 * o, 118.44320678710938 * o, 47.00567626953125 * o, 112.44320678710938 * o, 48.00567626953125 * o, 107.44320678710938 * o),
        s.bezierCurveTo(43.00567626953125 * o, 111.44320678710938 * o, 40.00567626953125 * o, 111.44320678710938 * o, 37.00567626953125 * o, 110.44320678710938 * o),
        s.bezierCurveTo(39.50567626953125 * o, 104.94320678710938 * o, 39.50567626953125 * o, 104.94320678710938 * o, 42.00567626953125 * o, 99.44320678710938 * o),
        s.bezierCurveTo(33.00567626953125 * o, 99.44320678710938 * o, 33.00567626953125 * o, 98.44320678710938 * o, 33.00567626953125 * o, 96.44320678710938 * o),
        s.closePath(),
        Ce(s, i[0], i[0], 4 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(51.00567626953125 * o, 72.53409576416016 * o),
        s.bezierCurveTo(48.00567626953125 * o, 56.534095764160156 * o, 48.00567626953125 * o, 49.534095764160156 * o, 54.00567626953125 * o, 35.534095764160156 * o),
        s.bezierCurveTo(58.00567626953125 * o, 26.534095764160156 * o, 65.00567626953125 * o, 27.534095764160156 * o, 73.00567626953125 * o, 40.534095764160156 * o),
        s.bezierCurveTo(81.00567626953125 * o, 49.534095764160156 * o, 82.00567626953125 * o, 50.534095764160156 * o, 83.00567626953125 * o, 51.534095764160156 * o),
        s.bezierCurveTo(77.00567626953125 * o, 71.53409576416016 * o, 64.00567626953125 * o, 75.53409576416016 * o, 51.00567626953125 * o, 72.53409576416016 * o),
        s.closePath(),
        Ce(s, i[0], i[0], 2 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(105.00567626953125 * o, 50.53410339355469 * o),
        s.bezierCurveTo(112.00567626953125 * o, 48.53410339355469 * o, 125.00567626953125 * o, 21.534103393554688 * o, 132.00567626953125 * o, 33.53410339355469 * o),
        s.bezierCurveTo(138.00567626953125 * o, 42.53410339355469 * o, 140.00567626953125 * o, 64.53410339355469 * o, 136.00567626953125 * o, 75.53410339355469 * o),
        s.closePath(),
        Ce(s, i[0], i[0], 2 * o),
        l)),
        sprite[Le.HURT_SPIDER] = g(I(Math.PI, (a = .9,
        _ = "#BB0000",
        c = document.createElement("canvas"),
        d = c.getContext("2d"),
        c.width = 238 * a,
        c.height = 230 * a,
        d.translate(-93 * a, -110 * a),
        we(d, 213.5 * a, 256.75 * a, 75 * a),
        Ce(d, _),
        we(d, 213.5 * a, 175.75 * a, 25 * a),
        Ce(d, _),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(156.5 * a, 137.75 * a),
        d.bezierCurveTo(170.5 * a, 173.75 * a, 195.5 * a, 177.75 * a, 209.5 * a, 177.75 * a),
        d.lineWidth = 17 * a,
        d.strokeStyle = _,
        d.stroke(),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(217.5 * a, 178.75 * a),
        d.bezierCurveTo(251.5 * a, 177.75 * a, 263.5 * a, 153.75 * a, 270.5 * a, 140.75 * a),
        d.lineWidth = 17 * a,
        d.strokeStyle = _,
        d.stroke(),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(130.5 * a, 124.75 * a),
        d.bezierCurveTo(153.5 * a, 185.75 * a, 198.5 * a, 185.75 * a, 213.5 * a, 185.75 * a),
        d.lineWidth = 17 * a,
        d.strokeStyle = _,
        d.stroke(),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(214.5 * a, 183.75 * a),
        d.bezierCurveTo(265.5 * a, 192.75 * a, 293.5 * a, 141.75 * a, 297.5 * a, 124.75 * a),
        d.lineWidth = 17 * a,
        d.strokeStyle = _,
        d.stroke(),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(107.5 * a, 213.75 * a),
        d.bezierCurveTo(151.5 * a, 190.75 * a, 198.5 * a, 184.75 * a, 210.5 * a, 184.75 * a),
        d.lineWidth = 17 * a,
        d.strokeStyle = _,
        d.stroke(),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(212.5 * a, 187.75 * a),
        d.bezierCurveTo(258.5 * a, 182.75 * a, 286.5 * a, 194.75 * a, 314.5 * a, 206.75 * a),
        d.lineWidth = 17 * a,
        d.strokeStyle = _,
        d.stroke(),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(102.5 * a, 258.75 * a),
        d.bezierCurveTo(142.5 * a, 200.75 * a, 193.5 * a, 194.75 * a, 211.5 * a, 185.75 * a),
        d.lineWidth = 17 * a,
        d.strokeStyle = _,
        d.stroke(),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(214.5 * a, 192.75 * a),
        d.bezierCurveTo(276.5 * a, 194.75 * a, 306.5 * a, 233.75 * a, 316.5 * a, 246.75 * a),
        d.lineWidth = 17 * a,
        d.strokeStyle = _,
        d.stroke(),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(219.5 * a, 158.75 * a),
        d.bezierCurveTo(226.5 * a, 159.75 * a, 227.5 * a, 147.75 * a, 219.5 * a, 145.75 * a),
        d.closePath(),
        d.lineWidth = 10 * a,
        d.strokeStyle = _,
        d.stroke(),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(210.5 * a, 160.75 * a),
        d.bezierCurveTo(203.5 * a, 159.75 * a, 199.5 * a, 146.75 * a, 210.5 * a, 145.75 * a),
        d.closePath(),
        d.lineWidth = 10 * a,
        d.strokeStyle = _,
        d.stroke(),
        c))),
        sprite[Le.EXPLORER_HAT] = [],
        sprite[Le.EXPLORER_HAT][Le.DAY] = g(Ut(.55, !Ve.boostfps, ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"])),
        sprite[Le.EXPLORER_HAT][Le.NIGHT] = g(Ut(.55, !Ve.boostfps, ["#15514f", "#0f3f3d", "#123335", "#0d2d2b", "#2b6664", "#070d16"])),
        sprite[Le.WOOD_HELMET] = [],
        sprite[Le.WOOD_HELMET][Le.DAY] = g(Kt(.55, !Ve.boostfps, ["#252525", "#73583e", "#573f29", "#7d6144"])),
        sprite[Le.WOOD_HELMET][Le.NIGHT] = g(Kt(.55, !Ve.boostfps, ["#0d3b39", "#144642", "#0b3230", "#154f4b"])),
        sprite[Le.STONE_HELMET] = [],
        sprite[Le.STONE_HELMET][Le.DAY] = g(xt(.6, !Ve.boostfps, ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"])),
        sprite[Le.STONE_HELMET][Le.NIGHT] = g(xt(.6, !Ve.boostfps, ["#030d14", "#1c4a4a", "#102d2d", "#255756", "#163d3c", "#194544", "#1f5252", "#184141", "#1c4a4a", "#255756", "#163a3a"])),
        sprite[Le.GOLD_HELMET] = [],
        sprite[Le.GOLD_HELMET][Le.DAY] = g(Ft(.58, Ve.boostfps, ["#dbce71", "#b29c32", "#c4bc51"])),
        sprite[Le.GOLD_HELMET][Le.NIGHT] = g(Ft(.58, Ve.boostfps, ["#2b7c57", "#15543c", "#1a7961"])),
        sprite[Le.DIAMOND_HELMET] = [],
        sprite[Le.DIAMOND_HELMET][Le.DAY] = g(Yt(.69, Ve.boostfps, ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"])),
        sprite[Le.DIAMOND_HELMET][Le.NIGHT] = g(Yt(.69, Ve.boostfps, ["#183f3f", "#092121", "#123335", "#2b9390", "#277a74", "#1f665f", "#83ddd4", "#59c9c0"])),
        sprite[Le.FIR] = [],
        sprite[Le.FIR][Le.DAY] = [],
        sprite[Le.FIR][Le.NIGHT] = [],
        sprite[Le.FIR][Le.DAY].push(g(Nt(1.3, ["#0a2d18", "#124c34", "#227248", "#ccedd9", "#2d7a55", "#3c9660", "#afddc1", "#bbefd0", "#0a2d18", "#e4efe8"]))),
        sprite[Le.FIR][Le.DAY].push(g(St(1.5, ["#191919", "#134d35", "#247349", "#afddc1", "#bbefd0", "#e4efe8"]))),
        sprite[Le.FIR][Le.DAY].push(g(Rt(1.5, ["#191919", "#134d35", "#247349", "#cde7d6", "#122d1c", "#e3eee7"]))),
        sprite[Le.FIR][Le.NIGHT].push(g(Nt(1.3, ["#000000", "#0e3638", "#174a51", "#328587", "#174a51", "#1d5559", "#328587", "#48a8aa", "#0a2728", "#56afac"]))),
        sprite[Le.FIR][Le.NIGHT].push(g(St(1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#48a8aa", "#56afac"]))),
        sprite[Le.FIR][Le.NIGHT].push(g(Rt(1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#0a2728", "#56afac"]))),
        sprite[Le.DRAGON] = [],
        sprite[Le.DRAGON][Le.DAY] = g(kt(1, ["#292b2b", "#57aba6", "#80ccca", "#c42333", "#a4dad9", "#3e8294", "#ffffff", "#57aba6", "#ffffff"])),
        sprite[Le.DRAGON][Le.NIGHT] = g(kt(1, ["#050505", "#1d3a38", "#0b514a", "#200333", "#327570", "#1d3a38", "#ffffff", "#0b514a", "#63afa9"])),
        sprite[Le.WING_LEFT] = [],
        sprite[Le.WING_LEFT][Le.DAY] = g(Wt(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"])),
        sprite[Le.WING_LEFT][Le.NIGHT] = g(Wt(1, ["#050505", "#327570", "#021724", "#200333"])),
        sprite[Le.WING_RIGHT] = [],
        sprite[Le.WING_RIGHT][Le.DAY] = g(Vt(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"])),
        sprite[Le.WING_RIGHT][Le.NIGHT] = g(Vt(1, ["#050505", "#327570", "#021724", "#200333"])),
        sprite[Le.DECORATION] = [],
        sprite[Le.DECORATION][Le.DAY] = [],
        sprite[Le.DECORATION][Le.NIGHT] = [],
        sprite[Le.DECORATION][Le.DAY] = [IMAGES.DECORATION_0D, IMAGES.DECORATION_1D, IMAGES.DECORATION_2D, IMAGES.DECORATION_3D, IMAGES.DECORATION_4D, IMAGES.DECORATION_5D, IMAGES.DECORATION_6D, IMAGES.DECORATION_7D, IMAGES.DECORATION_8D, IMAGES.DECORATION_9D, IMAGES.DECORATION_10D, IMAGES.DECORATION_11D, IMAGES.DECORATION_12D, IMAGES.DECORATION_13D, IMAGES.DECORATION_14D, IMAGES.DECORATION_15D, IMAGES.DECORATION_16D, IMAGES.DECORATION_17D, IMAGES.DECORATION_18D, IMAGES.DECORATION_19D, IMAGES.DECORATION_20D, IMAGES.DECORATION_21D, IMAGES.DECORATION_22D, IMAGES.DECORATION_23D, IMAGES.DECORATION_24D, IMAGES.DECORATION_25D, IMAGES.DECORATION_26D, IMAGES.DECORATION_27D, IMAGES.DECORATION_28D, IMAGES.DECORATION_29D, IMAGES.DECORATION_30D, IMAGES.DECORATION_31D, IMAGES.DECORATION_32D, IMAGES.DECORATION_33D, IMAGES.DECORATION_34D, IMAGES.DECORATION_35D, IMAGES.DECORATION_36D, IMAGES.DECORATION_37D, IMAGES.DECORATION_38D, IMAGES.DECORATION_39D, IMAGES.DECORATION_40D, IMAGES.DECORATION_41D, IMAGES.DECORATION_42D, IMAGES.DECORATION_43D, IMAGES.DECORATION_44D, IMAGES.DECORATION_45D, IMAGES.DECORATION_46D, IMAGES.DECORATION_47D, IMAGES.DECORATION_48D, IMAGES.DECORATION_49D, IMAGES.DECORATION_50D, IMAGES.DECORATION_51D, IMAGES.DECORATION_52D, IMAGES.DECORATION_53D, IMAGES.DECORATION_54D, IMAGES.DECORATION_55D],
        sprite[Le.DECORATION][Le.NIGHT] = [IMAGES.DECORATION_0N, IMAGES.DECORATION_1N, IMAGES.DECORATION_2N, IMAGES.DECORATION_3N, IMAGES.DECORATION_4N, IMAGES.DECORATION_5N, IMAGES.DECORATION_6N, IMAGES.DECORATION_7N, IMAGES.DECORATION_8N, IMAGES.DECORATION_9N, IMAGES.DECORATION_10N, IMAGES.DECORATION_11N, IMAGES.DECORATION_12N, IMAGES.DECORATION_13N, IMAGES.DECORATION_14N, IMAGES.DECORATION_15N, IMAGES.DECORATION_16N, IMAGES.DECORATION_17N, IMAGES.DECORATION_18N, IMAGES.DECORATION_19N, IMAGES.DECORATION_20N, IMAGES.DECORATION_21N, IMAGES.DECORATION_22N, IMAGES.DECORATION_23N, IMAGES.DECORATION_24N, IMAGES.DECORATION_25N, IMAGES.DECORATION_26N, IMAGES.DECORATION_27N, IMAGES.DECORATION_28N, IMAGES.DECORATION_29N, IMAGES.DECORATION_30N, IMAGES.DECORATION_31N, IMAGES.DECORATION_32N, IMAGES.DECORATION_33N, IMAGES.DECORATION_34N, IMAGES.DECORATION_35N, IMAGES.DECORATION_36N, IMAGES.DECORATION_37N, IMAGES.DECORATION_38N, IMAGES.DECORATION_39N, IMAGES.DECORATION_40N, IMAGES.DECORATION_41N, IMAGES.DECORATION_42N, IMAGES.DECORATION_43N, IMAGES.DECORATION_44N, IMAGES.DECORATION_45N, IMAGES.DECORATION_46N, IMAGES.DECORATION_47N, IMAGES.DECORATION_48N, IMAGES.DECORATION_49N, IMAGES.DECORATION_50N, IMAGES.DECORATION_51N, IMAGES.DECORATION_52N, IMAGES.DECORATION_53N, IMAGES.DECORATION_54N, IMAGES.DECORATION_55N],
        sprite[Le.CAVE_STONES] = [],
        sprite[Le.CAVE_STONES][Le.DAY] = [],
        sprite[Le.CAVE_STONES][Le.NIGHT] = [],
        sprite[Le.CAVE_STONES][Le.DAY].push(g(R1(1.1, !1, ["#252B28", "#747471", "#83827e"], 0))),
        sprite[Le.CAVE_STONES][Le.DAY].push(g(R1(.9, !1, ["#252B28", "#747471", "#83827e"], 1))),
        sprite[Le.CAVE_STONES][Le.DAY].push(g(R1(1, !1, ["#252B28", "#747471", "#83827e"], 2))),
        sprite[Le.CAVE_STONES][Le.DAY].push(g(R1(.9, !1, ["#252B28", "#747471", "#83827e"], 2))),
        sprite[Le.CAVE_STONES][Le.NIGHT].push(g(R1(1.1, !1, ["#030d14", "#123335", "#183f3f"], 0))),
        sprite[Le.CAVE_STONES][Le.NIGHT].push(g(R1(.9, !1, ["#030d14", "#123335", "#183f3f"], 1))),
        sprite[Le.CAVE_STONES][Le.NIGHT].push(g(R1(1, !1, ["#030d14", "#123335", "#183f3f"], 2))),
        sprite[Le.CAVE_STONES][Le.NIGHT].push(g(R1(.9, !1, ["#030d14", "#123335", "#183f3f"], 2))),
        sprite[Le.SHADOW_CAVE_STONES] = [],
        sprite[Le.SHADOW_CAVE_STONES][Le.DAY] = [],
        sprite[Le.SHADOW_CAVE_STONES][Le.NIGHT] = [],
        sprite[Le.SHADOW_CAVE_STONES][Le.DAY].push(g(R1(1.1, !Ve.boostfps, ["#252B28", "#58645F", "#75827D"], 2))),
        sprite[Le.SHADOW_CAVE_STONES][Le.DAY].push(g(R1(.9, !Ve.boostfps, ["#252B28", "#58645F", "#75827D"], 2))),
        sprite[Le.SHADOW_CAVE_STONES][Le.DAY].push(g(R1(1, !Ve.boostfps, ["#252B28", "#58645F", "#75827D"], 2))),
        sprite[Le.SHADOW_CAVE_STONES][Le.DAY].push(g(R1(.9, !Ve.boostfps, ["#252B28", "#58645F", "#75827D"], 2))),
        sprite[Le.SHADOW_CAVE_STONES][Le.NIGHT].push(g(R1(1.1, !Ve.boostfps, ["#030d14", "#123335", "#183f3f"], 2))),
        sprite[Le.SHADOW_CAVE_STONES][Le.NIGHT].push(g(R1(.9, !Ve.boostfps, ["#030d14", "#123335", "#183f3f"], 2))),
        sprite[Le.SHADOW_CAVE_STONES][Le.NIGHT].push(g(R1(1, !Ve.boostfps, ["#030d14", "#123335", "#183f3f"], 2))),
        sprite[Le.SHADOW_CAVE_STONES][Le.NIGHT].push(g(R1(.9, !Ve.boostfps, ["#030d14", "#123335", "#183f3f"], 2))),
        sprite[Le.GOLD_WINTER] = [],
        sprite[Le.GOLD_WINTER][Le.DAY] = [],
        sprite[Le.GOLD_WINTER][Le.NIGHT] = [],
        sprite[Le.GOLD_WINTER][Le.DAY].push(g(S1(1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
        sprite[Le.GOLD_WINTER][Le.DAY].push(g(S1(1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
        sprite[Le.GOLD_WINTER][Le.DAY].push(g(S1(1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"]))),
        sprite[Le.GOLD_WINTER][Le.NIGHT].push(g(S1(1.5, 0, ["#0a2728", "#3e8989", "#50a09c"]))),
        sprite[Le.GOLD_WINTER][Le.NIGHT].push(g(S1(1.3, 0, ["#0a2728", "#3e8989", "#50a09c"]))),
        sprite[Le.GOLD_WINTER][Le.NIGHT].push(g(S1(1.1, 0, ["#0a2728", "#3e8989", "#50a09c"]))),
        sprite[Le.DIAMOND_WINTER] = [],
        sprite[Le.DIAMOND_WINTER][Le.DAY] = [],
        sprite[Le.DIAMOND_WINTER][Le.NIGHT] = [],
        sprite[Le.DIAMOND_WINTER][Le.DAY].push(g(N1(1.1, 0, ["#123d38", "#70e0dd", "#95efea"]))),
        sprite[Le.DIAMOND_WINTER][Le.DAY].push(g(N1(.9, 0, ["#123d38", "#70e0dd", "#95efea"]))),
        sprite[Le.DIAMOND_WINTER][Le.DAY].push(g(N1(.7, 0, ["#123d38", "#70e0dd", "#95efea"]))),
        sprite[Le.DIAMOND_WINTER][Le.NIGHT].push(g(N1(1.1, 0, ["#123d38", "#47b2ac", "#5cccc4"]))),
        sprite[Le.DIAMOND_WINTER][Le.NIGHT].push(g(N1(.9, 0, ["#123d38", "#47b2ac", "#5cccc4"]))),
        sprite[Le.DIAMOND_WINTER][Le.NIGHT].push(g(N1(.7, 0, ["#123d38", "#47b2ac", "#5cccc4"]))),
        sprite[Le.AMETHYST] = [],
        sprite[Le.AMETHYST][Le.DAY] = [],
        sprite[Le.AMETHYST][Le.NIGHT] = [],
        sprite[Le.AMETHYST][Le.DAY].push(g(Dt(1.7, !Ve.boostfps, ["#1d051e", "#c27add", "#cd98e5"]))),
        sprite[Le.AMETHYST][Le.DAY].push(g(Dt(1.5, !Ve.boostfps, ["#1d051e", "#c27add", "#cd98e5"]))),
        sprite[Le.AMETHYST][Le.DAY].push(g(Dt(1.3, !Ve.boostfps, ["#1d051e", "#c27add", "#cd98e5"]))),
        sprite[Le.AMETHYST][Le.NIGHT].push(g(Dt(1.7, !Ve.boostfps, ["#1d051e", "#41aaa0", "#5cccc4"]))),
        sprite[Le.AMETHYST][Le.NIGHT].push(g(Dt(1.5, !Ve.boostfps, ["#1d051e", "#41aaa0", "#5cccc4"]))),
        sprite[Le.AMETHYST][Le.NIGHT].push(g(Dt(1.3, !0, ["#1d051e", "#41aaa0", "#5cccc4"]))),
        sprite[Le.WATERBLOCK] = [],
        sprite[Le.WATERBLOCK][Le.DAY] = [],
        sprite[Le.WATERBLOCK][Le.NIGHT] = [],
        sprite[Le.WATERBLOCK][Le.DAY].push(g(ft(1, ["#2d53c4"]))),
        sprite[Le.WATERBLOCK][Le.NIGHT].push(g(ft(1, ["#2d53c4"]))),
        sprite[Le.ISLAND_BLOCK] = [],
        sprite[Le.ISLAND_BLOCK][Le.DAY] = [],
        sprite[Le.ISLAND_BLOCK][Le.NIGHT] = [],
        sprite[Le.ISLAND_BLOCK][Le.DAY].push(g(ft(1, ["#c4912d"]))),
        sprite[Le.ISLAND_BLOCK][Le.NIGHT].push(g(ft(1, ["#c4912d"]))),
        sprite[Le.CAVE_STEP] = [],
        sprite[Le.CAVE_STEP][Le.DAY] = g(Bt(1, ["#414040"])),
        sprite[Le.CAVE_STEP][Le.NIGHT] = g(Bt(1, ["#153635"])),
        sprite[Le.DOOR_WOOD_OPEN_WINTER] = [],
        sprite[Le.DOOR_WOOD_OPEN_WINTER][Le.DAY] = g(F1(1, !1, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"])),
        sprite[Le.DOOR_WOOD_OPEN_WINTER][Le.NIGHT] = g(F1(1, !1, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"])),
        sprite[Le.DOOR_STONE_OPEN_WINTER] = [],
        sprite[Le.DOOR_STONE_OPEN_WINTER][Le.DAY] = g(Y1(1, !1, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"])),
        sprite[Le.DOOR_STONE_OPEN_WINTER][Le.NIGHT] = g(Y1(1, !1, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"])),
        sprite[Le.DOOR_AMETHYST_OPEN_WINTER] = [],
        sprite[Le.DOOR_AMETHYST_OPEN_WINTER][Le.DAY] = g(Y1(1, !1, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"])),
        sprite[Le.DOOR_AMETHYST_OPEN_WINTER][Le.NIGHT] = g(Y1(1, !1, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"])),
        sprite[Le.DOOR_DIAMOND_OPEN_WINTER] = [],
        sprite[Le.DOOR_DIAMOND_OPEN_WINTER][Le.DAY] = g(q1(1, !1, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"])),
        sprite[Le.DOOR_DIAMOND_OPEN_WINTER][Le.NIGHT] = g(q1(1, !1, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"])),
        sprite[Le.DOOR_GOLD_OPEN_WINTER] = [],
        sprite[Le.DOOR_GOLD_OPEN_WINTER][Le.DAY] = g(J1(1, !1, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"])),
        sprite[Le.DOOR_GOLD_OPEN_WINTER][Le.NIGHT] = g(J1(1, !1, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"])),
        sprite[Le.FOX] = [],
        sprite[Le.FOX][Le.DAY] = g(wt(.9, ["#1d051e", "#ffffff", "#c41c50", "#2c2e2d", "#c63450", "#f7e7f0"])),
        sprite[Le.FOX][Le.NIGHT] = g(wt(.9, ["#123d38", "#1a847f", "#200333", "#131919", "#01333a", "#b6f2db"])),
        sprite[Le.BEAR] = [],
        sprite[Le.BEAR][Le.DAY] = g(zt(.9, ["#1d051e", "#ffffff", "#c41c50", "#c63450", "#ffffff", "#f7e7f0", "#2b2d2d"])),
        sprite[Le.BEAR][Le.NIGHT] = g(zt(.9, ["#123d38", "#1a847f", "#200333", "#01333a", "#ffffff", "#b6f2db", "#2b2d2d"])),
        sprite[Le.MINIMAP] = [],
        sprite[Le.MINIMAP_CTX] = [],
        sprite[Le.BIGMAP] = [],
        sprite[Le.BIGMAP_CTX] = [];
        for (var n, r, t = 0; t < 2; t++)
            sprite[Le.MINIMAP][t] = document.createElement("canvas"),
            sprite[Le.MINIMAP][t].width = 193,
            sprite[Le.MINIMAP][t].height = 193,
            sprite[Le.MINIMAP_CTX][t] = sprite[Le.MINIMAP][t].getContext("2d"),
            sprite[Le.BIGMAP][t] = document.createElement("canvas"),
            sprite[Le.BIGMAP][t].width = 600,
            sprite[Le.BIGMAP][t].height = 600,
            sprite[Le.BIGMAP_CTX][t] = sprite[Le.BIGMAP][t].getContext("2d");
        sprite[Le.SNOW_STEP] = [],
        sprite[Le.SNOW_STEP][Le.DAY] = g(Bt(1, ["#c8e0de"])),
        sprite[Le.SNOW_STEP][Le.NIGHT] = g(Bt(1, ["#147071"])),
        sprite[Le.LAVA_STEP] = [],
        sprite[Le.LAVA_STEP][Le.DAY] = g(Bt(1, ["#231912"])),
        sprite[Le.LAVA_STEP][Le.NIGHT] = g(Bt(1, ["#021719"])),
        sprite[Le.HURT_TREASURE_CHEST] = g((s = .5,
        i = ["#BB0000"],
        o = document.createElement("canvas"),
        l = o.getContext("2d"),
        o.width = 253 * s,
        o.height = 192 * s,
        l.save(),
        l.translate(37 * s, 94 * s),
        Be(l, -7 * s, -20 * s, 14 * s, 37 * s, 20 * s),
        l.restore(),
        Ce(l, i[0]),
        l.save(),
        l.translate(131 * s, 94 * s),
        Be(l, -84 * s, -67 * s, 168 * s, 134 * s, 20 * s),
        l.restore(),
        Ce(l, i[0], i[0], 13 * s),
        l.save(),
        l.translate(223 * s, 94.5 * s),
        Be(l, -5 * s, -18.5 * s, 10 * s, 37 * s, 20 * s),
        l.restore(),
        Ce(l, i[0]),
        l.save(),
        l.translate(128.5 * s, 170.5 * s),
        Be(l, -22.5 * s, -6.5 * s, 45 * s, 13 * s, 20 * s),
        l.restore(),
        Ce(l, i[0]),
        o)),
        sprite[Le.HURT_FOX] = g((a = .9,
        _ = "#BB0000",
        d = document.createElement("canvas"),
        c = d.getContext("2d"),
        d.width = 161 * a,
        d.height = 190 * a,
        c.beginPath(),
        c.lineCap = "round",
        c.lineJoin = "round",
        c.moveTo(9 * a, 93 * a),
        c.bezierCurveTo(17 * a, 95 * a, 19 * a, 95 * a, 21 * a, 95 * a),
        c.bezierCurveTo(9 * a, 83 * a, 17 * a, 93 * a, 4 * a, 76 * a),
        c.bezierCurveTo(11 * a, 75 * a, 11 * a, 75 * a, 18 * a, 75 * a),
        c.bezierCurveTo(13 * a, 67 * a, 13 * a, 67 * a, 7 * a, 59 * a),
        c.bezierCurveTo(14 * a, 59 * a, 14 * a, 59 * a, 21 * a, 59 * a),
        c.bezierCurveTo(46 * a, 35 * a, 35 * a, 45 * a, 49 * a, 31 * a),
        c.bezierCurveTo(53 * a, 24 * a, 51 * a, 21 * a, 51 * a, 16 * a),
        c.bezierCurveTo(63 * a, 23 * a, 63 * a, 24 * a, 69 * a, 29 * a),
        c.bezierCurveTo(76 * a, 7 * a, 75 * a, 11 * a, 76 * a, 6 * a),
        c.bezierCurveTo(81 * a, 12 * a, 84 * a, 18 * a, 89 * a, 27 * a),
        c.bezierCurveTo(95 * a, 25 * a, 100 * a, 16 * a, 105 * a, 14 * a),
        c.bezierCurveTo(103 * a, 25 * a, 111 * a, 33 * a, 110 * a, 34 * a),
        c.bezierCurveTo(123 * a, 48 * a, 123 * a, 48 * a, 136 * a, 62 * a),
        c.bezierCurveTo(142 * a, 60 * a, 147 * a, 59 * a, 155 * a, 58 * a),
        c.bezierCurveTo(147 * a, 65 * a, 147 * a, 65 * a, 139 * a, 73 * a),
        c.bezierCurveTo(145 * a, 73 * a, 145 * a, 73 * a, 151 * a, 73 * a),
        c.bezierCurveTo(145 * a, 80 * a, 145 * a, 80 * a, 138 * a, 87 * a),
        c.bezierCurveTo(144 * a, 88 * a, 144 * a, 88 * a, 150 * a, 89 * a),
        c.bezierCurveTo(125 * a, 103 * a, 125 * a, 125 * a, 113 * a, 141 * a),
        c.bezierCurveTo(92 * a, 178 * a, 85 * a, 177 * a, 76 * a, 178 * a),
        c.bezierCurveTo(64 * a, 179 * a, 51 * a, 164 * a, 35 * a, 131 * a),
        c.bezierCurveTo(18 * a, 95 * a, 13 * a, 99 * a, 8 * a, 93 * a),
        c.closePath(),
        Ce(c, _, _, 4 * a),
        c.beginPath(),
        c.lineCap = "round",
        c.lineJoin = "round",
        c.moveTo(25 * a, 63 * a),
        c.bezierCurveTo(16 * a, 58 * a, 17 * a, 51 * a, 17 * a, 33 * a),
        c.bezierCurveTo(19 * a, 12 * a, 21 * a, 12 * a, 32 * a, 17 * a),
        c.bezierCurveTo(63 * a, 31 * a, 66 * a, 45 * a, 66 * a, 54 * a),
        Ce(c, _, _, 4 * a),
        c.beginPath(),
        c.lineCap = "round",
        c.lineJoin = "round",
        c.moveTo(91 * a, 53 * a),
        c.bezierCurveTo(91 * a, 40 * a, 98 * a, 33 * a, 121 * a, 20 * a),
        c.bezierCurveTo(137 * a, 12 * a, 137 * a, 16 * a, 139 * a, 27 * a),
        c.bezierCurveTo(141 * a, 49 * a, 140 * a, 57 * a, 134 * a, 64 * a),
        Ce(c, _, _, 4 * a),
        d)),
        sprite[Le.HURT_BEAR] = g((s = .9,
        l = "#BB0000",
        i = document.createElement("canvas"),
        o = i.getContext("2d"),
        i.width = 147 * s,
        i.height = 172 * s,
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(8 * s, 50 * s),
        o.bezierCurveTo(15 * s, 16 * s, 49 * s, 6 * s, 67 * s, 6 * s),
        o.bezierCurveTo(121 * s, 3 * s, 128 * s, 32 * s, 135 * s, 48 * s),
        o.bezierCurveTo(146 * s, 96 * s, 124 * s, 131 * s, 96 * s, 135 * s),
        o.bezierCurveTo(96 * s, 158 * s, 79 * s, 156 * s, 75 * s, 156 * s),
        o.bezierCurveTo(50 * s, 154 * s, 53 * s, 150 * s, 52 * s, 135 * s),
        o.bezierCurveTo(2 * s, 127 * s, 3 * s, 87 * s, 8 * s, 50 * s),
        o.closePath(),
        Ce(o, l, l, 4 * s),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(14 * s, 57 * s),
        o.bezierCurveTo(2 * s, 50 * s, 5 * s, 22 * s, 24 * s, 22 * s),
        o.bezierCurveTo(41 * s, 21 * s, 54 * s, 32 * s, 55 * s, 48 * s),
        Ce(o, l, l, 4 * s),
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(93 * s, 47 * s),
        o.bezierCurveTo(94 * s, 24 * s, 116 * s, 21 * s, 120 * s, 20 * s),
        o.bezierCurveTo(144 * s, 17 * s, 146 * s, 52 * s, 133 * s, 58 * s),
        Ce(o, l, l, 4 * s),
        i)),
        sprite[Le.HURT_DRAGON] = g((c = 1,
        _ = ["#BB0000"],
        a = document.createElement("canvas"),
        d = a.getContext("2d"),
        a.width = 271 * c,
        a.height = 366 * c,
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(133 * c, 99 * c),
        d.bezierCurveTo(186 * c, 123 * c, 199 * c, 152 * c, 209 * c, 169 * c),
        d.bezierCurveTo(228 * c, 205 * c, 224 * c, 245 * c, 190 * c, 276 * c),
        d.bezierCurveTo(161 * c, 296 * c, 99 * c, 292 * c, 79 * c, 274 * c),
        d.bezierCurveTo(49 * c, 253 * c, 47 * c, 214 * c, 50 * c, 197 * c),
        d.bezierCurveTo(61 * c, 143 * c, 102 * c, 113 * c, 131 * c, 99 * c),
        d.closePath(),
        Ce(d, _[0]),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(73 * c, 270 * c),
        d.bezierCurveTo(79 * c, 280 * c, 77 * c, 280 * c, 78 * c, 287 * c),
        d.bezierCurveTo(78 * c, 290 * c, 83 * c, 291 * c, 82 * c, 299 * c),
        d.bezierCurveTo(81 * c, 301 * c, 87 * c, 301 * c, 92 * c, 314 * c),
        d.bezierCurveTo(94 * c, 319 * c, 100 * c, 321 * c, 107 * c, 320 * c),
        d.bezierCurveTo(111 * c, 323 * c, 114 * c, 324 * c, 119 * c, 320 * c),
        d.bezierCurveTo(137 * c, 321 * c, 146 * c, 323 * c, 139 * c, 320 * c),
        d.bezierCurveTo(141 * c, 324 * c, 150 * c, 324 * c, 153 * c, 320 * c),
        d.bezierCurveTo(168 * c, 319 * c, 171 * c, 316 * c, 173 * c, 307 * c),
        d.bezierCurveTo(180 * c, 305 * c, 180 * c, 301 * c, 178 * c, 296 * c),
        d.bezierCurveTo(183 * c, 296 * c, 185 * c, 289 * c, 188 * c, 279 * c),
        d.bezierCurveTo(171 * c, 286 * c, 149 * c, 290 * c, 132 * c, 289 * c),
        d.bezierCurveTo(101 * c, 290 * c, 86 * c, 280 * c, 74 * c, 271 * c),
        d.closePath(),
        Ce(d, _[0]),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(76 * c, 252 * c),
        d.bezierCurveTo(85 * c, 294 * c, 96 * c, 314 * c, 103 * c, 314 * c),
        d.bezierCurveTo(106 * c, 316 * c, 151 * c, 314 * c, 156 * c, 314 * c),
        d.bezierCurveTo(169 * c, 317 * c, 182 * c, 285 * c, 191 * c, 256 * c),
        d.bezierCurveTo(134.5 * c, 254 * c, 134.5 * c, 254 * c, 78 * c, 252 * c),
        d.closePath(),
        Ce(d, _[0]),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(84 * c, 257 * c),
        d.bezierCurveTo(122 * c, 273 * c, 146 * c, 268 * c, 179 * c, 261 * c),
        d.bezierCurveTo(190 * c, 258 * c, 187 * c, 266 * c, 178 * c, 272 * c),
        d.bezierCurveTo(160 * c, 284 * c, 123 * c, 282 * c, 100 * c, 277 * c),
        d.bezierCurveTo(73 * c, 260 * c, 79 * c, 257 * c, 84 * c, 257 * c),
        d.closePath(),
        Ce(d, _[0]),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(125 * c, 65 * c),
        d.bezierCurveTo(133 * c, 45 * c, 136 * c, 42 * c, 141 * c, 55 * c),
        d.bezierCurveTo(151 * c, 96 * c, 164 * c, 117 * c, 175 * c, 134 * c),
        d.bezierCurveTo(203 * c, 181 * c, 207 * c, 182 * c, 208 * c, 215 * c),
        d.bezierCurveTo(206 * c, 240 * c, 205 * c, 246 * c, 184 * c, 258 * c),
        d.bezierCurveTo(161 * c, 267 * c, 131 * c, 272 * c, 86 * c, 258 * c),
        d.bezierCurveTo(67 * c, 252 * c, 68 * c, 239 * c, 64 * c, 216 * c),
        d.bezierCurveTo(62 * c, 194 * c, 72 * c, 169 * c, 92 * c, 142 * c),
        d.bezierCurveTo(106 * c, 121 * c, 114 * c, 101 * c, 125 * c, 65 * c),
        d.closePath(),
        Ce(d, _[0]),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(115 * c, 37 * c),
        d.bezierCurveTo(116 * c, 28 * c, 119 * c, 27 * c, 126 * c, 37 * c),
        d.bezierCurveTo(134 * c, 48 * c, 134 * c, 49 * c, 132 * c, 59 * c),
        d.bezierCurveTo(131 * c, 67 * c, 127 * c, 65 * c, 120 * c, 56 * c),
        d.bezierCurveTo(114 * c, 49 * c, 113 * c, 43 * c, 115 * c, 38 * c),
        d.closePath(),
        Ce(d, _[0]),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(146 * c, 34 * c),
        d.bezierCurveTo(152 * c, 28 * c, 155 * c, 27 * c, 157 * c, 39 * c),
        d.bezierCurveTo(157 * c, 45 * c, 157 * c, 49 * c, 150 * c, 56 * c),
        d.bezierCurveTo(141 * c, 66 * c, 138 * c, 66 * c, 138 * c, 57 * c),
        d.bezierCurveTo(137 * c, 50 * c, 137 * c, 47 * c, 141 * c, 42 * c),
        d.closePath(),
        Ce(d, _[0]),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(143 * c, 69 * c),
        d.bezierCurveTo(148 * c, 56 * c, 156 * c, 50 * c, 158 * c, 58 * c),
        d.bezierCurveTo(159 * c, 64 * c, 160 * c, 67 * c, 153 * c, 77 * c),
        d.bezierCurveTo(148 * c, 83 * c, 145 * c, 84 * c, 143 * c, 77 * c),
        d.closePath(),
        Ce(d, _[0]),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(149 * c, 92 * c),
        d.bezierCurveTo(149 * c, 89 * c, 151 * c, 84 * c, 156 * c, 79 * c),
        d.bezierCurveTo(161 * c, 73 * c, 163 * c, 78 * c, 162 * c, 86 * c),
        d.bezierCurveTo(161 * c, 91 * c, 155 * c, 99 * c, 152 * c, 98 * c),
        d.closePath(),
        Ce(d, _[0]),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(111 * c, 61 * c),
        d.bezierCurveTo(114 * c, 51 * c, 117 * c, 51 * c, 124 * c, 64 * c),
        d.bezierCurveTo(128 * c, 68 * c, 128 * c, 76 * c, 126 * c, 79 * c),
        d.bezierCurveTo(123 * c, 84 * c, 122 * c, 82 * c, 115 * c, 74 * c),
        d.bezierCurveTo(112 * c, 67 * c, 115 * c, 74 * c, 115 * c, 74 * c),
        d.bezierCurveTo(111 * c, 68 * c, 111 * c, 66 * c, 111 * c, 62 * c),
        d.closePath(),
        Ce(d, _[0]),
        d.beginPath(),
        d.lineCap = "round",
        d.lineJoin = "round",
        d.moveTo(107 * c, 81 * c),
        d.bezierCurveTo(108 * c, 74 * c, 112 * c, 73 * c, 118 * c, 84 * c),
        d.bezierCurveTo(122 * c, 88 * c, 122 * c, 93 * c, 121 * c, 98 * c),
        d.bezierCurveTo(114 * c, 98 * c, 113 * c, 98 * c, 109 * c, 90 * c),
        d.bezierCurveTo(107 * c, 87 * c, 106 * c, 85 * c, 107 * c, 82 * c),
        d.closePath(),
        Ce(d, _[0]),
        a)),
        sprite[Le.HURT_WING_LEFT] = g((o = .8,
        l = "#BB0000",
        s = document.createElement("canvas"),
        i = s.getContext("2d"),
        s.width = 85 * o,
        s.height = 145 * o,
        i.translate(-20 * o, -95 * o),
        i.beginPath(),
        i.lineCap = "round",
        i.lineJoin = "round",
        i.moveTo(50 * o, 105 * o),
        i.bezierCurveTo(52 * o, 119 * o, 64 * o, 137 * o, 71 * o, 146 * o),
        i.bezierCurveTo(71 * o, 161 * o, 74 * o, 169 * o, 79 * o, 179 * o),
        i.bezierCurveTo(68 * o, 192 * o, 70 * o, 204 * o, 69 * o, 216 * o),
        i.bezierCurveTo(50 * o, 189.5 * o, 50 * o, 189.5 * o, 31 * o, 163 * o),
        i.closePath(),
        Ce(i, l),
        i.beginPath(),
        i.lineCap = "round",
        i.lineJoin = "round",
        i.moveTo(44 * o, 106 * o),
        i.bezierCurveTo(49 * o, 90 * o, 58 * o, 104 * o, 51 * o, 121 * o),
        i.bezierCurveTo(45 * o, 143 * o, 41 * o, 151 * o, 37 * o, 162 * o),
        i.bezierCurveTo(48 * o, 180 * o, 58 * o, 188 * o, 76 * o, 205 * o),
        i.bezierCurveTo(104 * o, 209 * o, 105 * o, 229 * o, 92 * o, 235 * o),
        i.bezierCurveTo(76 * o, 239 * o, 75 * o, 232 * o, 56 * o, 213 * o),
        i.bezierCurveTo(31 * o, 187 * o, 28 * o, 176 * o, 23 * o, 162 * o),
        i.bezierCurveTo(38 * o, 131 * o, 40 * o, 120 * o, 44 * o, 106 * o),
        i.closePath(),
        Ce(i, l, l, 4 * o),
        i.beginPath(),
        i.lineCap = "round",
        i.lineJoin = "round",
        i.moveTo(30 * o, 159 * o),
        i.bezierCurveTo(46 * o, 157 * o, 59 * o, 152 * o, 68 * o, 148 * o),
        i.bezierCurveTo(63 * o, 155 * o, 52 * o, 160 * o, 44 * o, 164 * o),
        i.bezierCurveTo(59 * o, 169 * o, 66 * o, 174 * o, 75 * o, 178 * o),
        i.bezierCurveTo(58 * o, 178 * o, 49 * o, 175 * o, 37 * o, 174 * o),
        i.closePath(),
        Ce(i, l),
        s)),
        sprite[Le.HURT_WING_RIGHT] = g((c = .8,
        d = "#BB0000",
        _ = document.createElement("canvas"),
        a = _.getContext("2d"),
        _.width = 85 * c,
        _.height = 145 * c,
        a.translate(-165 * c, -95 * c),
        a.beginPath(),
        a.lineCap = "round",
        a.lineJoin = "round",
        a.moveTo(217 * c, 103 * c),
        a.bezierCurveTo(209 * c, 129 * c, 203 * c, 137 * c, 195 * c, 146 * c),
        a.bezierCurveTo(195 * c, 159 * c, 194 * c, 167 * c, 189 * c, 178 * c),
        a.bezierCurveTo(193 * c, 186 * c, 196 * c, 195 * c, 198 * c, 216 * c),
        a.bezierCurveTo(217.5 * c, 189.5 * c, 217.5 * c, 189.5 * c, 237 * c, 163 * c),
        a.closePath(),
        Ce(a, d),
        a.beginPath(),
        a.lineCap = "round",
        a.lineJoin = "round",
        a.moveTo(231 * c, 163 * c),
        a.bezierCurveTo(221 * c, 139 * c, 218 * c, 128 * c, 215 * c, 114 * c),
        a.bezierCurveTo(213 * c, 102 * c, 220 * c, 92 * c, 222 * c, 107 * c),
        a.bezierCurveTo(224 * c, 118 * c, 233 * c, 138 * c, 244 * c, 161 * c),
        a.bezierCurveTo(235 * c, 188 * c, 224 * c, 198 * c, 204 * c, 221 * c),
        a.bezierCurveTo(190 * c, 233 * c, 190 * c, 235 * c, 180 * c, 235 * c),
        a.bezierCurveTo(167 * c, 235 * c, 164 * c, 216 * c, 175 * c, 211 * c),
        a.bezierCurveTo(176 * c, 208 * c, 181 * c, 207 * c, 191 * c, 205 * c),
        a.bezierCurveTo(213 * c, 186 * c, 218 * c, 180 * c, 230 * c, 163 * c),
        a.closePath(),
        Ce(a, d, d, 4 * c),
        a.beginPath(),
        a.lineCap = "round",
        a.lineJoin = "round",
        a.moveTo(234 * c, 154 * c),
        a.bezierCurveTo(227 * c, 156 * c, 222 * c, 156 * c, 199 * c, 148 * c),
        a.bezierCurveTo(201 * c, 151 * c, 216 * c, 159 * c, 224 * c, 162 * c),
        a.bezierCurveTo(209 * c, 169.5 * c, 209 * c, 169.5 * c, 194 * c, 177 * c),
        a.bezierCurveTo(213.5 * c, 175 * c, 213.5 * c, 175 * c, 233 * c, 173 * c),
        a.closePath(),
        Ce(a, d),
        _)),
        sprite[Le.HURT_RABBIT] = g((o = .9,
        i = "#BB0000",
        l = document.createElement("canvas"),
        s = l.getContext("2d"),
        c = 115 * o,
        a = 4 * o,
        l.width = 85 * o,
        l.height = c,
        s.translate(-130 * o, -60 * o),
        s.globalAlpha = 1,
        s.beginPath(),
        s.bezierCurveTo(190 * o, 87 * o, 201 * o, 59 * o, 208 * o, 64 * o),
        s.bezierCurveTo(213 * o, 68 * o, 204 * o, 93 * o, 195 * o, 109 * o),
        s.bezierCurveTo(195 * o, 109 * o, 202 * o, 124 * o, 191 * o, 141 * o),
        s.bezierCurveTo(182 * o, 151 * o, 164 * o, 155 * o, 148 * o, 144 * o),
        s.bezierCurveTo(136 * o, 135 * o, 138 * o, 111 * o, 145 * o, 104 * o),
        s.bezierCurveTo(140 * o, 92 * o, 131 * o, 67 * o, 138 * o, 63 * o),
        s.bezierCurveTo(145 * o, 61 * o, 153 * o, 82 * o, 155 * o, 96 * o),
        s.bezierCurveTo(167 * o, 91 * o, 178 * o, 92 * o, 187 * o, 98 * o),
        s.closePath(),
        Ce(s, i, i, a),
        l)),
        sprite[Le.HURT] = g(M(.6, "#BB0000")),
        sprite[Le.COLD] = g(M(.6, "#1CE7E0")),
        sprite[Le.HUNGER] = g(M(.6, "#DBE71C")),
        sprite[Le.HEAL] = g(M(.6, "#00BB00")),
        sprite[Le.SAND_STEP] = [],
        sprite[Le.SAND_STEP][Le.DAY] = g(Bt(1, ["#dac291"])),
        sprite[Le.SAND_STEP][Le.NIGHT] = g(Bt(1, ["#0D423D"])),
        sprite[Le.ISLAND_STEP] = [],
        sprite[Le.ISLAND_STEP][Le.DAY] = g(Bt(1, ["#dac291"])),
        sprite[Le.ISLAND_STEP][Le.NIGHT] = g(Bt(1, ["#0D423D"])),
        sprite[Le.WELL_FULL] = [],
        sprite[Le.WELL_FULL][Le.DAY] = g(gi(.3, !Ve.boostfps, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#1a6470"])),
        sprite[Le.WELL_FULL][Le.NIGHT] = g(gi(.3, !Ve.boostfps, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#09373F"])),
        sprite[Le.WELL_EMPTY] = [],
        sprite[Le.WELL_EMPTY][Le.DAY] = g(gi(.3, !Ve.boostfps, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"])),
        sprite[Le.WELL_EMPTY][Le.NIGHT] = g(gi(.3, !Ve.boostfps, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#0b2121"])),
        sprite[Le.BOTTLE_FULL] = [g(Li(1, Ve.boostfps, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))],
        sprite[Le.BOTTLE_EMPTY] = [g(Li(1, Ve.boostfps, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))],
        sprite[Le.OCEAN] = [],
        sprite[Le.OCEAN][Le.DAY] = [],
        sprite[Le.OCEAN][Le.NIGHT] = [],
        sprite[Le.OCEAN][Le.DAY].push(g(vt(1, ["#0B6A84"]))),
        sprite[Le.OCEAN][Le.DAY].push(g(Mt(1, ["#0B6A84"]))),
        sprite[Le.OCEAN][Le.DAY].push(g(yt(1, ["#0B6A84"]))),
        sprite[Le.OCEAN][Le.DAY].push(g(Lt(1, ["#0B6A84"]))),
        sprite[Le.OCEAN][Le.DAY].push(g(Gt(1, ["#0B6A84"]))),
        sprite[Le.OCEAN][Le.DAY].push(g(Ht(1, ["#0B6A84"]))),
        sprite[Le.OCEAN][Le.DAY].push(g(Pt(1, ["#0B6A84"]))),
        sprite[Le.OCEAN][Le.NIGHT].push(g(vt(1, ["#09373F"]))),
        sprite[Le.OCEAN][Le.NIGHT].push(g(Mt(1, ["#09373F"]))),
        sprite[Le.OCEAN][Le.NIGHT].push(g(yt(1, ["#09373F"]))),
        sprite[Le.OCEAN][Le.NIGHT].push(g(Lt(1, ["#09373F"]))),
        sprite[Le.OCEAN][Le.NIGHT].push(g(Gt(1, ["#09373F"]))),
        sprite[Le.OCEAN][Le.NIGHT].push(g(Ht(1, ["#09373F"]))),
        sprite[Le.OCEAN][Le.NIGHT].push(g(Pt(1, ["#09373F"]))),
        sprite[Le.ISLAND] = [],
        sprite[Le.ISLAND][Le.DAY] = [],
        sprite[Le.ISLAND][Le.NIGHT] = [],
        sprite[Le.ISLAND][Le.DAY].push(g(gt(1.7, ["#FBEFBC"], 0))),
        sprite[Le.ISLAND][Le.DAY].push(g(gt(1.9, ["#FBEFBC"], 1))),
        sprite[Le.ISLAND][Le.DAY].push(g(gt(1.7, ["#FBEFBC"], 2))),
        sprite[Le.ISLAND][Le.NIGHT].push(g(gt(1.7, ["#0F4C48"], 0))),
        sprite[Le.ISLAND][Le.NIGHT].push(g(gt(1.9, ["#0F4C48"], 1))),
        sprite[Le.ISLAND][Le.NIGHT].push(g(gt(1.7, ["#0F4C48"], 2))),
        sprite[Le.WAVE_ONE] = [],
        sprite[Le.WAVE_ONE][Le.DAY] = [],
        sprite[Le.WAVE_ONE][Le.NIGHT] = [],
        sprite[Le.WAVE_ONE][Le.DAY].push(g(gt(1.8, ["#A9D6D3"], 0))),
        sprite[Le.WAVE_ONE][Le.DAY].push(g(gt(2, ["#A9D6D3"], 1))),
        sprite[Le.WAVE_ONE][Le.DAY].push(g(gt(1.8, ["#A9D6D3"], 2))),
        sprite[Le.WAVE_ONE][Le.NIGHT].push(g(gt(1.8, ["#115E60"], 0))),
        sprite[Le.WAVE_ONE][Le.NIGHT].push(g(gt(2, ["#115E60"], 1))),
        sprite[Le.WAVE_ONE][Le.NIGHT].push(g(gt(1.8, ["#115E60"], 2))),
        sprite[Le.WAVE_TWO] = [],
        sprite[Le.WAVE_TWO][Le.DAY] = [],
        sprite[Le.WAVE_TWO][Le.NIGHT] = [],
        sprite[Le.WAVE_TWO][Le.DAY].push(g(gt(1.9, ["#2A8B9B"], 0))),
        sprite[Le.WAVE_TWO][Le.DAY].push(g(gt(2.1, ["#2A8B9B"], 1))),
        sprite[Le.WAVE_TWO][Le.DAY].push(g(gt(1.9, ["#2A8B9B"], 2))),
        sprite[Le.WAVE_TWO][Le.NIGHT].push(g(gt(1.9, ["#0F464C"], 0))),
        sprite[Le.WAVE_TWO][Le.NIGHT].push(g(gt(2.1, ["#0F464C"], 1))),
        sprite[Le.WAVE_TWO][Le.NIGHT].push(g(gt(1.9, ["#0F464C"], 2))),
        sprite[Le.PALM] = [],
        sprite[Le.PALM][Le.DAY] = [],
        sprite[Le.PALM][Le.NIGHT] = [],
        sprite[Le.PALM][Le.DAY].push(g(W1(.8, ["#231F20", "#0c8e5b", "#037542", "#077b49"]))),
        sprite[Le.PALM][Le.DAY].push(g(W1(1, ["#231F20", "#0c8e5b", "#037542", "#077b49"]))),
        sprite[Le.PALM][Le.DAY].push(g(W1(1.2, ["#231F20", "#0c8e5b", "#037542", "#077b49"]))),
        sprite[Le.PALM][Le.NIGHT].push(g(W1(.8, ["#041e22", "#124949", "#0e3838", "#0a4049"]))),
        sprite[Le.PALM][Le.NIGHT].push(g(W1(1, ["#041e22", "#124949", "#0e3838", "#0a4049"]))),
        sprite[Le.PALM][Le.NIGHT].push(g(W1(1.2, ["#041e22", "#124949", "#0e3838", "#0a4049"]))),
        sprite[Le.KRAKEN] = [],
        sprite[Le.KRAKEN][Le.DAY] = g(hi(.8, ["#1e2021", "#B6222A", "#201851", "#342C7C", "#F4F4F4", "#D3D3D3", "#6765CE", "#593CC6", "#433BAD", "#342C7C", "#052830", "#EAEAEA", "#B6222A", "#FFFFFF"])),
        sprite[Le.KRAKEN][Le.NIGHT] = g(hi(.8, ["#0c0c0d", "#462966", "#081B2D", "#342C7C", "#9AAAAD", "#72898C", "#133556", "#296D9B", "#25557C", "#133556", "#0D2A42", "#EAEAEA", "#462966", "#72898C"])),
        sprite[Le.HURT_KRAKEN] = g((d = .8,
        _ = ["#B6222A"],
        c = document.createElement("canvas"),
        o = c.getContext("2d"),
        c.width = 376 * d,
        c.height = 371 * d,
        o.globalAlpha = 1,
        o.beginPath(),
        o.lineCap = "round",
        o.lineJoin = "round",
        o.moveTo(191.633544921875 * d, 123.98580932617188 * d),
        o.bezierCurveTo(215.633544921875 * d, 85.98580932617188 * d, 187.633544921875 * d, 71.98580932617188 * d, 202.633544921875 * d, 19.985809326171875 * d),
        o.bezierCurveTo(231.633544921875 * d, 68.98580932617188 * d, 253.633544921875 * d, 71.98580932617188 * d, 256.633544921875 * d, 93.98580932617188 * d),
        o.bezierCurveTo(306.633544921875 * d, 64.98580932617188 * d, 319.633544921875 * d, 61.985809326171875 * d, 350.633544921875 * d, 58.985809326171875 * d),
        o.bezierCurveTo(280.633544921875 * d, 86.98580932617188 * d, 281.633544921875 * d, 106.98580932617188 * d, 268.633544921875 * d, 130.98580932617188 * d),
        o.bezierCurveTo(295.633544921875 * d, 158.98580932617188 * d, 328.633544921875 * d, 155.98580932617188 * d, 353.633544921875 * d, 90.98580932617188 * d),
        o.bezierCurveTo(371.633544921875 * d, 158.98580932617188 * d, 337.633544921875 * d, 210.98580932617188 * d, 286.633544921875 * d, 209.98580932617188 * d),
        o.bezierCurveTo(323.633544921875 * d, 230.98580932617188 * d, 317.633544921875 * d, 274.9858093261719 * d, 356.633544921875 * d, 305.9858093261719 * d),
        o.bezierCurveTo(288.633544921875 * d, 297.9858093261719 * d, 288.633544921875 * d, 265.9858093261719 * d, 275.633544921875 * d, 266.9858093261719 * d),
        o.bezierCurveTo(280.633544921875 * d, 294.9858093261719 * d, 315.633544921875 * d, 306.9858093261719 * d, 336.633544921875 * d, 316.9858093261719 * d),
        o.bezierCurveTo(295.633544921875 * d, 318.9858093261719 * d, 264.633544921875 * d, 302.9858093261719 * d, 254.633544921875 * d, 289.9858093261719 * d),
        o.bezierCurveTo(252.633544921875 * d, 301.9858093261719 * d, 224.633544921875 * d, 315.9858093261719 * d, 201.633544921875 * d, 356.9858093261719 * d),
        o.bezierCurveTo(195.633544921875 * d, 313.9858093261719 * d, 195.633544921875 * d, 308.9858093261719 * d, 196.633544921875 * d, 307.9858093261719 * d),
        o.bezierCurveTo(197.633544921875 * d, 289.9858093261719 * d, 207.633544921875 * d, 283.9858093261719 * d, 195.633544921875 * d, 258.9858093261719 * d),
        o.bezierCurveTo(182.633544921875 * d, 282.9858093261719 * d, 190.633544921875 * d, 287.9858093261719 * d, 193.633544921875 * d, 297.9858093261719 * d),
        o.bezierCurveTo(195.633544921875 * d, 306.9858093261719 * d, 191.633544921875 * d, 334.9858093261719 * d, 187.633544921875 * d, 354.9858093261719 * d),
        o.bezierCurveTo(165.633544921875 * d, 320.9858093261719 * d, 138.633544921875 * d, 307.9858093261719 * d, 135.633544921875 * d, 288.9858093261719 * d),
        o.bezierCurveTo(110.633544921875 * d, 318.9858093261719 * d, 68.633544921875 * d, 323.9858093261719 * d, 49.633544921875 * d, 320.9858093261719 * d),
        o.bezierCurveTo(88.633544921875 * d, 308.9858093261719 * d, 108.633544921875 * d, 284.9858093261719 * d, 118.633544921875 * d, 258.9858093261719 * d),
        o.bezierCurveTo(86.633544921875 * d, 264.9858093261719 * d, 75.633544921875 * d, 310.9858093261719 * d, 19.633544921875 * d, 304.9858093261719 * d),
        o.bezierCurveTo(54.633544921875 * d, 276.9858093261719 * d, 59.633544921875 * d, 214.98580932617188 * d, 105.633544921875 * d, 205.98580932617188 * d),
        o.bezierCurveTo(14.633544921875 * d, 201.98580932617188 * d, 24.633544921875 * d, 141.98580932617188 * d, 25.633544921875 * d, 82.98580932617188 * d),
        o.bezierCurveTo(49.633544921875 * d, 168.98580932617188 * d, 87.633544921875 * d, 141.98580932617188 * d, 112.633544921875 * d, 123.98580932617188 * d),
        o.bezierCurveTo(95.633544921875 * d, 75.98580932617188 * d, 70.633544921875 * d, 68.98580932617188 * d, 35.633544921875 * d, 50.985809326171875 * d),
        o.bezierCurveTo(70.633544921875 * d, 53.985809326171875 * d, 102.633544921875 * d, 65.98580932617188 * d, 125.633544921875 * d, 84.98580932617188 * d),
        o.bezierCurveTo(133.633544921875 * d, 69.98580932617188 * d, 166.633544921875 * d, 42.985809326171875 * d, 176.633544921875 * d, 21.985809326171875 * d),
        o.bezierCurveTo(185.633544921875 * d, 49.985809326171875 * d, 168.633544921875 * d, 95.98580932617188 * d, 191.633544921875 * d, 121.98580932617188 * d),
        o.closePath(),
        Ce(o, _[0], _[0], 12 * d),
        c)),
        sprite[Le.PIRANHA] = [],
        sprite[Le.PIRANHA][Le.DAY] = g(Ri(.8, Ve.boostfps, ["#1e2021", "#961B1B", "#702727", "#C43B3B", "#d15151", "#B71C1C", "#E8E8E8", "#752E2E", "#891818"])),
        sprite[Le.PIRANHA][Le.NIGHT] = g(Ri(.8, Ve.boostfps, ["#0c0c0d", "#21112D", "#281A49", "#462966", "#321C56", "#1C073D", "#FFFFFF", "#1C0833", "#1B1238"])),
        sprite[Le.HURT_PIRANHA] = g((s = .8,
        i = ["#B6222A"],
        a = document.createElement("canvas"),
        l = a.getContext("2d"),
        a.width = 158 * s,
        a.height = 201 * s,
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(96.5 * s, 76.421875 * s),
        l.bezierCurveTo(100.5 * s, 64.421875 * s, 103.5 * s, 62.421875 * s, 110.5 * s, 65.421875 * s),
        l.bezierCurveTo(116.5 * s, 66.421875 * s, 117.5 * s, 67.421875 * s, 112.5 * s, 73.421875 * s),
        l.bezierCurveTo(107 * s, 79.921875 * s, 107 * s, 79.921875 * s, 101.5 * s, 86.421875 * s),
        l.closePath(),
        Ce(l, i[0], i[0], 10 * s),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(61.5 * s, 78.421875 * s),
        l.bezierCurveTo(57.5 * s, 73.421875 * s, 51.5 * s, 66.421875 * s, 45.5 * s, 68.421875 * s),
        l.bezierCurveTo(32.5 * s, 73.421875 * s, 38.5 * s, 75.421875 * s, 46.5 * s, 81.421875 * s),
        l.bezierCurveTo(51.5 * s, 84.921875 * s, 51.5 * s, 84.921875 * s, 56.5 * s, 88.421875 * s),
        l.closePath(),
        Ce(l, i[0], i[0], 10 * s),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(116.5 * s, 127.421875 * s),
        l.bezierCurveTo(124.5 * s, 108.421875 * s, 129.5 * s, 104.421875 * s, 141.5 * s, 107.421875 * s),
        l.bezierCurveTo(156.5 * s, 112.421875 * s, 153.5 * s, 113.421875 * s, 132.5 * s, 134.421875 * s),
        l.bezierCurveTo(123.5 * s, 141.921875 * s, 123.5 * s, 141.921875 * s, 114.5 * s, 149.421875 * s),
        l.closePath(),
        Ce(l, i[0], i[0], 10 * s),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(41.5 * s, 134.421875 * s),
        l.bezierCurveTo(30.5 * s, 119.421875 * s, 25.5 * s, 111.421875 * s, 12.5 * s, 115.421875 * s),
        l.bezierCurveTo(4.5 * s, 120.421875 * s, 4.5 * s, 121.421875 * s, 26.5 * s, 142.421875 * s),
        l.bezierCurveTo(35 * s, 149.921875 * s, 35 * s, 149.921875 * s, 43.5 * s, 157.421875 * s),
        l.closePath(),
        Ce(l, i[0], i[0], 10 * s),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(78.5 * s, 51.921875 * s),
        l.bezierCurveTo(99.5 * s, 75.921875 * s, 110.5 * s, 96.921875 * s, 118.5 * s, 120.921875 * s),
        l.bezierCurveTo(121.5 * s, 140.921875 * s, 107.5 * s, 179.921875 * s, 75.5 * s, 183.921875 * s),
        l.bezierCurveTo(30.5 * s, 169.921875 * s, 37.5 * s, 131.921875 * s, 34.5 * s, 120.921875 * s),
        l.bezierCurveTo(41.5 * s, 89.921875 * s, 61.5 * s, 67.921875 * s, 78.5 * s, 51.921875 * s),
        l.closePath(),
        Ce(l, i[0], i[0], 10 * s),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(72.5 * s, 72.421875 * s),
        l.bezierCurveTo(76.5 * s, 79.421875 * s, 79.5 * s, 80.421875 * s, 83.5 * s, 73.421875 * s),
        l.bezierCurveTo(80.5 * s, 96.921875 * s, 79.5 * s, 114.421875 * s, 77.5 * s, 120.421875 * s),
        l.closePath(),
        Ce(l, i[0], i[0], 10 * s),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(42.5 * s, 163.421875 * s),
        l.bezierCurveTo(62.5 * s, 185.421875 * s, 86.5 * s, 186.421875 * s, 111.5 * s, 165.421875 * s),
        l.bezierCurveTo(107.5 * s, 176.421875 * s, 95.5 * s, 187.421875 * s, 75.5 * s, 188.421875 * s),
        l.bezierCurveTo(53.5 * s, 188.421875 * s, 43.5 * s, 171.421875 * s, 42.5 * s, 164.421875 * s),
        l.closePath(),
        Ce(l, i[0], i[0], 10 * s),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(79.5 * s, 61.421875 * s),
        l.bezierCurveTo(88.5 * s, 31.421875 * s, 81.5 * s, 16.421875 * s, 75.5 * s, 7.421875 * s),
        l.bezierCurveTo(77.5 * s, 28.421875 * s, 77.5 * s, 37.421875 * s, 68.5 * s, 42.421875 * s),
        l.bezierCurveTo(79.5 * s, 57.421875 * s, 79.5 * s, 58.421875 * s, 80.5 * s, 61.421875 * s),
        l.closePath(),
        Ce(l, i[0], i[0], 10 * s),
        l.beginPath(),
        l.lineCap = "round",
        l.lineJoin = "round",
        l.moveTo(72.5 * s, 72.421875 * s),
        l.bezierCurveTo(76.5 * s, 79.421875 * s, 79.5 * s, 80.421875 * s, 83.5 * s, 73.421875 * s),
        l.bezierCurveTo(80.5 * s, 96.921875 * s, 79.5 * s, 114.421875 * s, 77.5 * s, 120.421875 * s),
        l.closePath(),
        Ce(l, i[0], i[0], 10 * s),
        a)),
        sprite[Le.FISH1] = [],
        sprite[Le.FISH1][Le.DAY] = g(q(.4, Ve.boostfps, ["#1e2021", "#db6f26", "#ffffff", "#000000", "#833813"], 0)),
        sprite[Le.FISH1][Le.NIGHT] = g(q(.4, Ve.boostfps, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0)),
        sprite[Le.FISH2] = [],
        sprite[Le.FISH2][Le.DAY] = g(q(.4, Ve.boostfps, ["#1e2021", "#d35e35", "#ffffff", "#000000", "#000000"], 1)),
        sprite[Le.FISH2][Le.NIGHT] = g(q(.4, Ve.boostfps, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 1)),
        sprite[Le.FISH3] = [],
        sprite[Le.FISH3][Le.DAY] = g(q(.4, Ve.boostfps, ["#1e2021", "#2973a5", "#ffffff", "#ffff00", "#000000", "#03243f", "#f2ec30", "#162f6d"], 0)),
        sprite[Le.FISH3][Le.NIGHT] = g(q(.4, Ve.boostfps, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0)),
        sprite[Le.HURT_FISH1] = g(Z(.4, ["#B6222A"])),
        sprite[Le.HURT_FISH2] = g(Z(.4, ["#B6222A"])),
        sprite[Le.HURT_FISH3] = g(Z(.4, ["#B6222A"])),
        sprite[Le.CRAB_LOOT] = g(Q1(.35, !Ve.boostfps, ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"])),
        sprite[Le.CRAB_STICK] = g(h1(.35, !Ve.boostfps, ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"])),
        sprite[Le.CRAB_ATTACK] = [],
        sprite[Le.CRAB_ATTACK][Le.DAY] = g(_1(.35, Ve.boostfps, ["#1e2021", "#e45936", "#B6222A", "#B6222A", "#FFFFFF"], 1)),
        sprite[Le.CRAB_ATTACK][Le.NIGHT] = g(_1(.35, Ve.boostfps, ["#0c0c0d", "#613577", "#462966", "#1C073D", "#FFFFFF"], 1)),
        sprite[Le.CRAB] = [],
        sprite[Le.CRAB][Le.DAY] = g(_1(.35, Ve.boostfps, ["#1e2021", "#e45936", "#ffffff", "#181414", "#FFFFFF"], 0)),
        sprite[Le.CRAB][Le.NIGHT] = g(_1(.35, Ve.boostfps, ["#0c0c0d", "#34255d", "#563f83", "#180f21", "#FFFFFF"], 0)),
        sprite[Le.CRAB_CLAW_LEFT] = [],
        sprite[Le.CRAB_CLAW_LEFT][Le.DAY] = g(l1(.35, Ve.boostfps, ["#1e2021", "#e45936", "#ffffff"])),
        sprite[Le.CRAB_CLAW_LEFT][Le.NIGHT] = g(l1(.35, Ve.boostfps, ["#0c0c0d", "#34255d", "#563f83"])),
        sprite[Le.CRAB_CLAW_RIGHT] = [],
        sprite[Le.CRAB_CLAW_RIGHT][Le.DAY] = g(c1(.42, Ve.boostfps, ["#1e2021", "#e45936", "#ffffff"])),
        sprite[Le.CRAB_CLAW_RIGHT][Le.NIGHT] = g(c1(.42, Ve.boostfps, ["#0c0c0d", "#34255d", "#563f83"])),
        sprite[Le.CRAB_CLAW_LEFT_ATTACK] = [],
        sprite[Le.CRAB_CLAW_LEFT_ATTACK][Le.DAY] = g(l1(.35, Ve.boostfps, ["#1e2021", "#e45936", "#B6222A"])),
        sprite[Le.CRAB_CLAW_LEFT_ATTACK][Le.NIGHT] = g(l1(.35, Ve.boostfps, ["#0c0c0d", "#613577", "#462966"])),
        sprite[Le.CRAB_CLAW_RIGHT_ATTACK] = [],
        sprite[Le.CRAB_CLAW_RIGHT_ATTACK][Le.DAY] = g(c1(.42, Ve.boostfps, ["#1e2021", "#e45936", "#B6222A"])),
        sprite[Le.CRAB_CLAW_RIGHT_ATTACK][Le.NIGHT] = g(c1(.42, Ve.boostfps, ["#0c0c0d", "#613577", "#462966"])),
        sprite[Le.HURT_CRAB] = g(u1(.35, ["#B6222A"])),
        sprite[Le.HURT_CRAB_CLAW_LEFT] = g(l1(.35, Ve.boostfps, [void 0, "#B6222A"])),
        sprite[Le.HURT_CRAB_CLAW_RIGHT] = g(c1(.35, Ve.boostfps, [void 0, "#B6222A"])),
        sprite[Le.HEAL_CRAB] = g(u1(.35, ["#22E066"])),
        sprite[Le.HEAL_CRAB_CLAW_LEFT] = g(l1(.35, Ve.boostfps, [void 0, "#22E066"])),
        sprite[Le.HEAL_CRAB_CLAW_RIGHT] = g(c1(.35, Ve.boostfps, [void 0, "#22E066"])),
        sprite[Le.DIVING_MASK] = [],
        sprite[Le.DIVING_MASK][Le.DAY] = g(G1(.3, !Ve.boostfps, ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"])),
        sprite[Le.DIVING_MASK][Le.NIGHT] = g(G1(.3, !Ve.boostfps, ["#0c0c0d", "#89C9C7", "#469E95", "#092C38", "#072021", "#0E343D", "#071F2D", "#9FD3D3", "#135367"])),
        sprite[Le.SUPER_DIVING_SUIT] = [],
        sprite[Le.SUPER_DIVING_SUIT][Le.DAY] = g(H1(.45, !Ve.boostfps, ["#C4BC51", "#B29C32", "#201851", "#652D8E", "#1e2021", "#2E85A0"])),
        sprite[Le.SUPER_DIVING_SUIT][Le.NIGHT] = g(H1(.45, !Ve.boostfps, ["#235050", "#357472", "#081B2D", "#342C7C", "#0c0c0d", "#135367"])),
        sprite[Le.PLOT] = [],
        sprite[Le.PLOT][Le.DAY] = g(mi(.63, !Ve.boostfps, ["#1e2021", "#352E1E", "#4C3B19", "#574122"])),
        sprite[Le.PLOT][Le.NIGHT] = g(mi(.63, !Ve.boostfps, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"])),
        sprite[Le.BRIDGE] = [],
        sprite[Le.BRIDGE][Le.DAY] = g(pi(1, Ve.boostfps, ["#1e2021", "#332715", "#4C3B19", "#574122"])),
        sprite[Le.BRIDGE][Le.NIGHT] = g(pi(1, Ve.boostfps, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"])),
        sprite[Le.WOOD_TOWER] = [],
        sprite[Le.WOOD_TOWER][Le.DAY] = IMAGES.WOOD_TOWERD,
        sprite[Le.WOOD_TOWER][Le.NIGHT] = IMAGES.WOOD_TOWERN,
        sprite[Le.ROOF] = [],
        sprite[Le.ROOF][Le.DAY] = g(P(.59, Ve.boostfps, ["#0d1b1c", "#44301b", "#57442a", "#523e26"])),
        sprite[Le.ROOF][Le.NIGHT] = g(P(.59, Ve.boostfps, ["#0c0c0d", "#062124", "#10373d", "#0f3333"])),
        sprite[Le.ROOFS] = [sprite[Le.ROOF]],
        sprite[Le.WATERING_CAN_FULL] = [],
        sprite[Le.WATERING_CAN_FULL][Le.DAY] = g(I(3 - Math.PI / 2, Ci(.6, !Ve.boostfps, ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"]))),
        sprite[Le.WATERING_CAN_FULL][Le.NIGHT] = g(I(3 - Math.PI / 2, Ci(.6, !Ve.boostfps, ["#0c0c0d", "#07383c", "#0c4e53", "#042b2e", "#0c5975", "#11546c"]))),
        sprite[Le.DEAD_BOX] = [],
        sprite[Le.DEAD_BOX][Le.DAY] = g(se(.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#8b1008"], 0)),
        sprite[Le.DEAD_BOX][Le.NIGHT] = g(se(.3, ["#1F5453", "#123335", "#1D4947", "#1F5453", "#0c2629"], 0)),
        sprite[Le.DEAD_BOX_UI] = g((o = .3,
        _ = ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#413624"],
        d = document.createElement("canvas"),
        c = d.getContext("2d"),
        d.width = 650 * o,
        d.height = 650 * o,
        c.scale(1.9, 1.9),
        c.save(),
        c.translate(202.5 * o, 147.5 * o),
        Be(c, -96.5 * o, -21.5 * o, 193 * o, 193 * o, 0 * o),
        c.restore(),
        Ce(c, _[4], _[1], 12 * o),
        c.save(),
        c.translate(203.5 * o, 121.5 * o),
        Be(c, -115.5 * o, -20.5 * o, 231 * o, 41 * o, 10 * o),
        c.restore(),
        Ce(c, _[3], _[1], 12 * o),
        c.save(),
        c.translate(203.5 * o, 299 * o),
        Be(c, -115.5 * o, -20 * o, 231 * o, 40 * o, 10 * o),
        c.restore(),
        Ce(c, _[3], _[1], 12 * o),
        c.save(),
        c.translate(298.5 * o, 210 * o),
        Be(c, -20.5 * o, -109 * o, 41 * o, 218 * o, 10 * o),
        c.restore(),
        Ce(c, _[3], _[1], 12 * o),
        c.save(),
        c.translate(108.5 * o, 210 * o),
        Be(c, -20.5 * o, -109 * o, 41 * o, 218 * o, 10 * o),
        c.restore(),
        Ce(c, _[3], _[1], 12 * o),
        c.save(),
        c.translate(204 * o, 121.5 * o),
        Be(c, -92 * o, -9.5 * o, 184 * o, 19 * o, 10 * o),
        c.restore(),
        Ce(c, _[3], _[3], 10 * o),
        c.save(),
        c.translate(197 * o, 299 * o),
        Be(c, 85 * o, -9 * o, -170 * o, 18 * o, 10 * o),
        c.restore(),
        Ce(c, _[3], _[3], 10 * o),
        c.beginPath(),
        c.lineCap = "round",
        c.lineJoin = "round",
        c.moveTo(94 * o, 317 * o),
        c.bezierCurveTo(110.5 * o, 299.5 * o, 110.5 * o, 299.5 * o, 127 * o, 282 * o),
        c.closePath(),
        Ce(c, void 0, _[1], 12 * o),
        c.beginPath(),
        c.lineCap = "round",
        c.lineJoin = "round",
        c.moveTo(279 * o, 142 * o),
        c.bezierCurveTo(296.5 * o, 125.5 * o, 296.5 * o, 125.5 * o, 314 * o, 109 * o),
        c.closePath(),
        Ce(c, void 0, _[1], 12 * o),
        c.beginPath(),
        c.lineCap = "round",
        c.lineJoin = "round",
        c.moveTo(93 * o, 106 * o),
        c.bezierCurveTo(110.5 * o, 124 * o, 110.5 * o, 124 * o, 128 * o, 142 * o),
        c.closePath(),
        Ce(c, void 0, _[1], 12 * o),
        c.beginPath(),
        c.lineCap = "round",
        c.lineJoin = "round",
        c.moveTo(281 * o, 282 * o),
        c.bezierCurveTo(296 * o, 297.5 * o, 296 * o, 297.5 * o, 311 * o, 313 * o),
        c.closePath(),
        Ce(c, void 0, _[1], 12 * o),
        d)),
        sprite[Le.HURT_DEAD_BOX] = g((l = .3,
        i = ["#BB0000"],
        s = document.createElement("canvas"),
        a = s.getContext("2d"),
        s.width = 400 * l,
        s.height = 400 * l,
        a.save(),
        a.translate(202.5 * l, 147.5 * l),
        Be(a, -96.5 * l, -21.5 * l, 193 * l, 43 * l, 0 * l),
        a.restore(),
        Ce(a, i[0], i[0], 12 * l),
        a.save(),
        a.translate(202.5 * l, 190.5 * l),
        Be(a, 96.5 * l, -21.5 * l, -193 * l, 43 * l, 0 * l),
        a.restore(),
        Ce(a, i[0], i[0], 12 * l),
        a.save(),
        a.translate(202.5 * l, 233.5 * l),
        Be(a, -96.5 * l, -20.5 * l, 193 * l, 41 * l, 0 * l),
        a.restore(),
        Ce(a, i[0], i[0], 12 * l),
        a.save(),
        a.translate(202.5 * l, 275 * l),
        Be(a, 96.5 * l, -21 * l, -193 * l, 42 * l, 0 * l),
        a.restore(),
        Ce(a, i[0], i[0], 12 * l),
        a.save(),
        a.translate(203.5 * l, 121.5 * l),
        Be(a, -115.5 * l, -20.5 * l, 231 * l, 41 * l, 10 * l),
        a.restore(),
        Ce(a, i[0], i[0], 12 * l),
        a.save(),
        a.translate(203.5 * l, 299 * l),
        Be(a, -115.5 * l, -20 * l, 231 * l, 40 * l, 10 * l),
        a.restore(),
        Ce(a, i[0], i[0], 12 * l),
        a.save(),
        a.translate(298.5 * l, 210 * l),
        Be(a, -20.5 * l, -109 * l, 41 * l, 218 * l, 10 * l),
        a.restore(),
        Ce(a, i[0], i[0], 12 * l),
        a.save(),
        a.translate(108.5 * l, 210 * l),
        Be(a, -20.5 * l, -109 * l, 41 * l, 218 * l, 10 * l),
        a.restore(),
        Ce(a, i[0], i[0], 12 * l),
        s)),
        sprite[Le.WINDMILL_FLOUR] = p(1, [{
            f: Si,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
        }], .25, ["#d2c77b", "#e7dc8f", "#bfb360"], .7),
        sprite[Le.LAVA_HEART] = p(1.5, [{
            f: ai,
            x: 0,
            y: 0,
            a: 1,
            r: 0,
            c: ["#120202", "#750a0a", "#991616", "#120202"]
        }], .45, ["#5bbcc9", "#73d2df", "#4daab6"], .9),
        sprite[Le.HEART_SYMBOL_HUD] = wi(.35, ["#072428", "#67A242", "#67A242"], 0),
        sprite[Le.COLD_SYMBOL_HUD] = wi(.35, ["#172130", "#649BB2", "#FFFFFF", "#FFFFFF", "#90C2D3", "#649BB2", "#84BDD1", "#2F5866"], 1),
        sprite[Le.FOOD_SYMBOL_HUD] = wi(.35, ["#3F0B11", "#B13424", "#FFFFFF", "#B13424", "#7e180b"], 2),
        sprite[Le.WATER_SYMBOL_HUD] = wi(.35, ["#1B2F4C", "#29488E", "#76c3e8", "#ffffff"], 3),
        mobile ? sprite[Le.LEADERBOARD] = g((c = 1,
        _ = document.createElement("canvas"),
        o = _.getContext("2d"),
        d = 200 * c,
        a = 180 * c,
        i = 8 * c,
        _.width = d,
        _.height = a,
        o.beginPath(),
        Be(o, 0, 0, d, a - i, i),
        o.globalAlpha = .8,
        Ce(o, "#1D6055"),
        o.globalAlpha = 1,
        a = m1(c, "Leaderboard", 25, "#FFF"),
        o.drawImage(a, (d - a.width) / 2, 5 * c),
        _)) : sprite[Le.LEADERBOARD] = g((l = 1,
        s = document.createElement("canvas"),
        i = s.getContext("2d"),
        o = 200 * l,
        d = 270 * l,
        a = 8 * l,
        s.width = o,
        s.height = 20 + d,
        i.beginPath(),
        Be(i, 0, 0, o, d - a, a),
        i.globalAlpha = .5,
        Ce(i, "#1D6055"),
        i.globalAlpha = 1,
        d = m1(l, "Leaderboard", 25, "#FFF"),
        i.drawImage(d, (o - d.width) / 2, 5 * l),
        s)),
        mobile ? sprite[Le.GAUGES] = g((c = .75,
        _ = document.createElement("canvas"),
        a = _.getContext("2d"),
        i = 250 * c,
        o = 120 * c,
        d = 20 * c,
        l = 35 * c,
        s = 65 * c,
        n = 2 * c,
        r = 4 * c,
        _.width = 335 * c,
        _.height = o,
        a.beginPath(),
        a.translate(0, 15 * c),
        Be(a, s, 0, i, d, n),
        Ce(a, null, "#69A148", r),
        a.translate(0, l),
        Be(a, s, 0, i, d, n),
        Ce(a, null, "#AF352A", r),
        a.translate(0, l),
        Be(a, s, 0, i, d, n),
        Ce(a, null, "#669BB1", r),
        _)) : sprite[Le.GAUGES] = g((o = 1,
        c = document.createElement("canvas"),
        l = c.getContext("2d"),
        s = 180 * o,
        i = 50 * o,
        d = 20 * o,
        n = 240 * o,
        a = 35 * o,
        r = +o,
        u = _ = 4 * o,
        c.width = 950 * o,
        c.height = i,
        l.translate(0, 15 * o),
        Be(l, a, r, s, d, _),
        Ce(l, null, "#69A148", u),
        i = sprite[Le.HEART_SYMBOL_HUD],
        l.drawImage(i, 17, -8),
        l.translate(n, 0),
        Be(l, a, r, s, d, _),
        Ce(l, null, "#AF352A", u),
        i = sprite[Le.FOOD_SYMBOL_HUD],
        l.drawImage(i, 17, -9),
        l.translate(n, 0),
        Be(l, a, r, s, d, _),
        Ce(l, null, "#669BB1", u),
        i = sprite[Le.COLD_SYMBOL_HUD],
        l.drawImage(i, 17, -8),
        l.translate(n, 0),
        Be(l, a, r, s, d, _),
        Ce(l, null, "#074A87", u),
        i = sprite[Le.WATER_SYMBOL_HUD],
        l.drawImage(i, 17, -8),
        c)),
        mobile ? sprite[Le.OXYGEN] = g(zi(.75)) : sprite[Le.OXYGEN] = g(zi(1)),
        sprite[Le.DELAY_HELMET] = g(xt(.16, !Ve.boostfps, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"])),
        sprite[Le.DELAY_WEAPON] = g(I(5.8, s1(.15, !Ve.boostfps, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"]))),
        sprite[Le.COUNTER] = [],
        sprite[Le.SLOT_NUMBER] = [];
        for (var o, a, s, d, _, u, l, c, t = 0; t < Ke.WITH_BAG + 2; t++)
            sprite[Le.SLOT_NUMBER][t] = m1(1, "" + (t + 1), 12, "#FFF");
        sprite[Le.RECIPE_BUTTON] = [],
        sprite[Le.RECIPE_BUTTON].push(g(ki(.12, ["#442F19", "#2C2112", "#C09D6F", "#A37943", "#eda80d"]))),
        sprite[Le.RECIPE_BUTTON].push(g(ki(.12, ["#553b20", "#3e2f1a", "#d1ad7d", "#b3864c", "#eda80d"], 1))),
        sprite[Le.RECIPE_BUTTON].push(g(ki(.12, ["#30200f", "#20180c", "#a78559", "#855f2f", "#b37d08"], 1))),
        sprite[Le.CLOCK] = [],
        sprite[Le.CLOCK].push(g((o = .22,
        a = document.createElement("canvas"),
        s = a.getContext("2d"),
        a.width = 321 * o,
        a.height = 345 * o,
        s.translate(0, 5 * o),
        s.translate(0, 20 * o),
        we(s, 160.5 * o, 159.5 * o, 156.39595138242822 * o),
        Ce(s, "#322413", "#322413", 4 * o),
        s.translate(0, -20 * o),
        we(s, 160.5 * o, 159.5 * o, 156.39595138242822 * o),
        Ce(s, "#392C16", "#5E3E1A", 10 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(31.999969482421875 * o, 163.07290649414062 * o),
        s.bezierCurveTo(22.999969482421875 * o, 67.07290649414062 * o, 106 * o, 20.072906494140625 * o, 162 * o, 23.072906494140625 * o),
        s.bezierCurveTo(269.9999694824219 * o, 31.072906494140625 * o, 292.9999694824219 * o, 120.07290649414062 * o, 294.9999694824219 * o, 161.07290649414062 * o),
        s.bezierCurveTo(165.49996948242188 * o, 162.07290649414062 * o, 165.49996948242188 * o, 162.07290649414062 * o, 35.999969482421875 * o, 163.07290649414062 * o),
        s.closePath(),
        Ce(s, "#12432D"),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(32.999969482421875 * o, 165.07290649414062 * o),
        s.bezierCurveTo(16.999969482421875 * o, 221.07290649414062 * o, 85 * o, 289.0729064941406 * o, 156 * o, 294.0729064941406 * o),
        s.bezierCurveTo(263.9999694824219 * o, 293.0729064941406 * o, 295.9999694824219 * o, 199.07290649414062 * o, 294.9999694824219 * o, 159.07290649414062 * o),
        s.closePath(),
        Ce(s, "#3A2A0D"),
        we(s, 161 * o, 158.07290649414062 * o, 133.4053971921676 * o),
        Ce(s, void 0, "#5E3E1A", 10 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(31.999969482421875 * o, 161.62844848632812 * o),
        s.bezierCurveTo(162.49996948242188 * o, 161.62844848632812 * o, 162.49996948242188 * o, 161.62844848632812 * o, 292.9999694824219 * o, 161.62844848632812 * o),
        s.closePath(),
        Ce(s, void 0, "#5E3E1A", 12 * o),
        s.translate(0, 8 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(66 * o, 158.29513549804688 * o),
        s.bezierCurveTo(86 * o, 158.29513549804688 * o, 86 * o, 158.29513549804688 * o, 106 * o, 158.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#c7a726", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(57.999969482421875 * o, 117.29513549804688 * o),
        s.bezierCurveTo(85 * o, 128.29513549804688 * o, 85 * o, 128.29513549804688 * o, 113 * o, 139.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#c7a726", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(95 * o, 90.29513549804688 * o),
        s.bezierCurveTo(112 * o, 105.79513549804688 * o, 112 * o, 105.79513549804688 * o, 129 * o, 121.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#c7a726", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(116 * o, 52.850677490234375 * o),
        s.bezierCurveTo(130 * o, 83.85067749023438 * o, 130 * o, 83.85067749023438 * o, 144 * o, 114.85067749023438 * o),
        s.closePath(),
        Ce(s, void 0, "#c7a726", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(159 * o, 61.295135498046875 * o),
        s.bezierCurveTo(160.49996948242188 * o, 92.29513549804688 * o, 160.49996948242188 * o, 92.29513549804688 * o, 160 * o, 123.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#c7a726", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(203 * o, 51.295135498046875 * o),
        s.bezierCurveTo(190.49996948242188 * o, 83.29513549804688 * o, 190.49996948242188 * o, 83.29513549804688 * o, 176 * o, 115.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#c7a726", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(225 * o, 89.29513549804688 * o),
        s.bezierCurveTo(210.49996948242188 * o, 104.79513549804688 * o, 210.49996948242188 * o, 104.79513549804688 * o, 194 * o, 120.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#c7a726", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(266.9999694824219 * o, 112.29513549804688 * o),
        s.bezierCurveTo(233.49996948242188 * o, 127.29513549804688 * o, 233.49996948242188 * o, 127.29513549804688 * o, 199 * o, 142.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#c7a726", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(256.9999694824219 * o, 155.29513549804688 * o),
        s.bezierCurveTo(238.49996948242188 * o, 156.29513549804688 * o, 238.49996948242188 * o, 156.29513549804688 * o, 219 * o, 157.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#c7a726", 12 * o),
        s.translate(0, -8 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(66 * o, 158.29513549804688 * o),
        s.bezierCurveTo(86 * o, 158.29513549804688 * o, 86 * o, 158.29513549804688 * o, 106 * o, 158.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#EDCE4F", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(57.999969482421875 * o, 117.29513549804688 * o),
        s.bezierCurveTo(85 * o, 128.29513549804688 * o, 85 * o, 128.29513549804688 * o, 113 * o, 139.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#EDCE4F", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(95 * o, 90.29513549804688 * o),
        s.bezierCurveTo(112 * o, 105.79513549804688 * o, 112 * o, 105.79513549804688 * o, 129 * o, 121.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#EDCE4F", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(116 * o, 52.850677490234375 * o),
        s.bezierCurveTo(130 * o, 83.85067749023438 * o, 130 * o, 83.85067749023438 * o, 144 * o, 114.85067749023438 * o),
        s.closePath(),
        Ce(s, void 0, "#EDCE4F", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(159 * o, 61.295135498046875 * o),
        s.bezierCurveTo(160.49996948242188 * o, 92.29513549804688 * o, 160.49996948242188 * o, 92.29513549804688 * o, 160 * o, 123.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#EDCE4F", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(203 * o, 51.295135498046875 * o),
        s.bezierCurveTo(190.49996948242188 * o, 83.29513549804688 * o, 190.49996948242188 * o, 83.29513549804688 * o, 176 * o, 115.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#EDCE4F", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(225 * o, 89.29513549804688 * o),
        s.bezierCurveTo(210.49996948242188 * o, 104.79513549804688 * o, 210.49996948242188 * o, 104.79513549804688 * o, 194 * o, 120.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#EDCE4F", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(266.9999694824219 * o, 112.29513549804688 * o),
        s.bezierCurveTo(233.49996948242188 * o, 127.29513549804688 * o, 233.49996948242188 * o, 127.29513549804688 * o, 199 * o, 142.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#EDCE4F", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(256.9999694824219 * o, 155.29513549804688 * o),
        s.bezierCurveTo(238.49996948242188 * o, 156.29513549804688 * o, 238.49996948242188 * o, 156.29513549804688 * o, 219 * o, 157.29513549804688 * o),
        s.closePath(),
        Ce(s, void 0, "#EDCE4F", 12 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(94.00003051757812 * o, 164.40341186523438 * o),
        s.bezierCurveTo(162.50003051757812 * o, 164.40341186523438 * o, 230.00003051757812 * o, 165.40341186523438 * o, 231.00003051757812 * o, 164.40341186523438 * o),
        s.bezierCurveTo(214.00003051757812 * o, 267.4034118652344 * o, 92.00003051757812 * o, 243.40341186523438 * o, 93.00003051757812 * o, 165.40341186523438 * o),
        s.closePath(),
        Ce(s, "#704618", "#5D3D1A", 8 * o),
        s.beginPath(),
        s.lineCap = "round",
        s.lineJoin = "round",
        s.moveTo(96 * o, 166 * o),
        s.bezierCurveTo(88 * o, 117 * o, 129 * o, 92 * o, 161 * o, 91 * o),
        s.bezierCurveTo(201 * o, 90 * o, 223 * o, 121 * o, 230 * o, 161 * o),
        s.closePath(),
        Ce(s, "#ECBE35", "#EDCE4F", 8 * o),
        we(s, 160.00003051757812 * o, 166.49432373046875 * o, 28.30194339616981 * o),
        Ce(s, "#392C16", "#5E3E1A", 10 * o),
        a))),
        sprite[Le.CLOCK].push(g((d = .22,
        _ = document.createElement("canvas"),
        u = _.getContext("2d"),
        _.width = 321 * d,
        _.height = 345 * d,
        u.translate(0, 5 * d),
        u.translate(0, 20 * d),
        we(u, 160.5 * d, 159.5 * d, 156.39595138242822 * d),
        Ce(u, "#322413", "#322413", 4 * d),
        u.translate(0, -20 * d),
        we(u, 160.5 * d, 159.5 * d, 156.39595138242822 * d),
        Ce(u, "#392C16", "#5E3E1A", 10 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(31.999969482421875 * d, 163.07290649414062 * d),
        u.bezierCurveTo(22.999969482421875 * d, 67.07290649414062 * d, 106 * d, 20.072906494140625 * d, 162 * d, 23.072906494140625 * d),
        u.bezierCurveTo(269.9999694824219 * d, 31.072906494140625 * d, 292.9999694824219 * d, 120.07290649414062 * d, 294.9999694824219 * d, 161.07290649414062 * d),
        u.bezierCurveTo(165.49996948242188 * d, 162.07290649414062 * d, 165.49996948242188 * d, 162.07290649414062 * d, 35.999969482421875 * d, 163.07290649414062 * d),
        u.closePath(),
        Ce(u, "#3A2A0D"),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(32.999969482421875 * d, 165.07290649414062 * d),
        u.bezierCurveTo(16.999969482421875 * d, 221.07290649414062 * d, 85 * d, 289.0729064941406 * d, 156 * d, 294.0729064941406 * d),
        u.bezierCurveTo(263.9999694824219 * d, 293.0729064941406 * d, 295.9999694824219 * d, 199.07290649414062 * d, 294.9999694824219 * d, 159.07290649414062 * d),
        u.closePath(),
        Ce(u, "#071A1B"),
        we(u, 161 * d, 158.07290649414062 * d, 133.4053971921676 * d),
        Ce(u, void 0, "#5E3E1A", 10 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(31.999969482421875 * d, 161.62844848632812 * d),
        u.bezierCurveTo(162.49996948242188 * d, 161.62844848632812 * d, 162.49996948242188 * d, 161.62844848632812 * d, 292.9999694824219 * d, 161.62844848632812 * d),
        u.closePath(),
        Ce(u, void 0, "#5E3E1A", 12 * d),
        u.translate(0, 8 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(66 * d, 158.29513549804688 * d),
        u.bezierCurveTo(86 * d, 158.29513549804688 * d, 86 * d, 158.29513549804688 * d, 106 * d, 158.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#281C08", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(57.999969482421875 * d, 117.29513549804688 * d),
        u.bezierCurveTo(85 * d, 128.29513549804688 * d, 85 * d, 128.29513549804688 * d, 113 * d, 139.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#281C08", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(95 * d, 90.29513549804688 * d),
        u.bezierCurveTo(112 * d, 105.79513549804688 * d, 112 * d, 105.79513549804688 * d, 129 * d, 121.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#281C08", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(116 * d, 52.850677490234375 * d),
        u.bezierCurveTo(130 * d, 83.85067749023438 * d, 130 * d, 83.85067749023438 * d, 144 * d, 114.85067749023438 * d),
        u.closePath(),
        Ce(u, void 0, "#281C08", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(159 * d, 61.295135498046875 * d),
        u.bezierCurveTo(160.49996948242188 * d, 92.29513549804688 * d, 160.49996948242188 * d, 92.29513549804688 * d, 160 * d, 123.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#281C08", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(203 * d, 51.295135498046875 * d),
        u.bezierCurveTo(190.49996948242188 * d, 83.29513549804688 * d, 190.49996948242188 * d, 83.29513549804688 * d, 176 * d, 115.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#281C08", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(225 * d, 89.29513549804688 * d),
        u.bezierCurveTo(210.49996948242188 * d, 104.79513549804688 * d, 210.49996948242188 * d, 104.79513549804688 * d, 194 * d, 120.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#281C08", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(266.9999694824219 * d, 112.29513549804688 * d),
        u.bezierCurveTo(233.49996948242188 * d, 127.29513549804688 * d, 233.49996948242188 * d, 127.29513549804688 * d, 199 * d, 142.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#281C08", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(256.9999694824219 * d, 155.29513549804688 * d),
        u.bezierCurveTo(238.49996948242188 * d, 156.29513549804688 * d, 238.49996948242188 * d, 156.29513549804688 * d, 219 * d, 157.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#281C08", 12 * d),
        u.translate(0, -8 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(66 * d, 158.29513549804688 * d),
        u.bezierCurveTo(86 * d, 158.29513549804688 * d, 86 * d, 158.29513549804688 * d, 106 * d, 158.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#5E3C10", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(57.999969482421875 * d, 117.29513549804688 * d),
        u.bezierCurveTo(85 * d, 128.29513549804688 * d, 85 * d, 128.29513549804688 * d, 113 * d, 139.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#5E3C10", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(95 * d, 90.29513549804688 * d),
        u.bezierCurveTo(112 * d, 105.79513549804688 * d, 112 * d, 105.79513549804688 * d, 129 * d, 121.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#5E3C10", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(116 * d, 52.850677490234375 * d),
        u.bezierCurveTo(130 * d, 83.85067749023438 * d, 130 * d, 83.85067749023438 * d, 144 * d, 114.85067749023438 * d),
        u.closePath(),
        Ce(u, void 0, "#5E3C10", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(159 * d, 61.295135498046875 * d),
        u.bezierCurveTo(160.49996948242188 * d, 92.29513549804688 * d, 160.49996948242188 * d, 92.29513549804688 * d, 160 * d, 123.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#5E3C10", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(203 * d, 51.295135498046875 * d),
        u.bezierCurveTo(190.49996948242188 * d, 83.29513549804688 * d, 190.49996948242188 * d, 83.29513549804688 * d, 176 * d, 115.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#5E3C10", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(225 * d, 89.29513549804688 * d),
        u.bezierCurveTo(210.49996948242188 * d, 104.79513549804688 * d, 210.49996948242188 * d, 104.79513549804688 * d, 194 * d, 120.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#5E3C10", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(266.9999694824219 * d, 112.29513549804688 * d),
        u.bezierCurveTo(233.49996948242188 * d, 127.29513549804688 * d, 233.49996948242188 * d, 127.29513549804688 * d, 199 * d, 142.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#5E3C10", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(256.9999694824219 * d, 155.29513549804688 * d),
        u.bezierCurveTo(238.49996948242188 * d, 156.29513549804688 * d, 238.49996948242188 * d, 156.29513549804688 * d, 219 * d, 157.29513549804688 * d),
        u.closePath(),
        Ce(u, void 0, "#5E3C10", 12 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(96 * d, 166 * d),
        u.bezierCurveTo(88 * d, 117 * d, 129 * d, 92 * d, 161 * d, 91 * d),
        u.bezierCurveTo(201 * d, 90 * d, 223 * d, 121 * d, 230 * d, 161 * d),
        u.closePath(),
        Ce(u, "#704618", "#5D3D1A", 8 * d),
        u.beginPath(),
        u.lineCap = "round",
        u.lineJoin = "round",
        u.moveTo(94.00003051757812 * d, 164.40341186523438 * d),
        u.bezierCurveTo(162.50003051757812 * d, 164.40341186523438 * d, 230.00003051757812 * d, 165.40341186523438 * d, 231.00003051757812 * d, 164.40341186523438 * d),
        u.bezierCurveTo(214.00003051757812 * d, 267.4034118652344 * d, 92.00003051757812 * d, 243.40341186523438 * d, 93.00003051757812 * d, 165.40341186523438 * d),
        u.closePath(),
        Ce(u, "#E1DDD5", "#EAE7E4", 8 * d),
        we(u, 160.00003051757812 * d, 166.49432373046875 * d, 28.30194339616981 * d),
        Ce(u, "#392C16", "#5E3E1A", 10 * d),
        _))),
        sprite[Le.ARROW_CLOCK] = g((l = .22,
        i = document.createElement("canvas"),
        c = i.getContext("2d"),
        i.width = 321 * l,
        i.height = 345 * l,
        c.translate(0, 5 * l),
        we(c, 161.00003051757812 * l, 165.40341186523438 * l, 20.808652046684813 * l),
        Ce(c, "#C09D6F", "#A37943", 10 * l),
        c.beginPath(),
        c.lineCap = "round",
        c.lineJoin = "round",
        c.moveTo(162.00003051757812 * l, 48.403411865234375 * l),
        c.bezierCurveTo(172.50003051757812 * l, 67.40341186523438 * l, 172.50003051757812 * l, 67.40341186523438 * l, 183.00003051757812 * l, 86.40341186523438 * l),
        c.bezierCurveTo(160.50003051757812 * l, 86.40341186523438 * l, 160.50003051757812 * l, 86.40341186523438 * l, 138.00003051757812 * l, 86.40341186523438 * l),
        c.closePath(),
        Ce(c, "#C09D6F", "#A37943", 10 * l),
        c.save(),
        c.translate(161.50003051757812 * l, 117.90341186523438 * l),
        Be(c, -5.5 * l, -37.5 * l, 11 * l, 75 * l, 10 * l),
        c.restore(),
        Ce(c, "#C09D6F", "#A37943", 10 * l),
        c.save(),
        c.translate(162.00003051757812 * l, 78.90341186523438 * l),
        Be(c, -10 * l, -5.5 * l, 20 * l, 11 * l, +l),
        c.restore(),
        Ce(c, "#C09D6F"),
        we(c, 161.00003051757812 * l, 163.6761474609375 * l, 17.08800749063506 * l),
        Ce(c, "#C09D6F"),
        i)),
        sprite[Le.OPTION_BUTTON] = [],
        sprite[Le.OPTION_BUTTON].push(g(te(1.5, ["#795026", "#654320", "#eda80d"], 0))),
        sprite[Le.OPTION_BUTTON].push(g(te(1.5, ["#8f5e2c", "#7a5126", "#eda80d"], 1))),
        sprite[Le.OPTION_BUTTON].push(g(te(1.5, ["#67441f", "#573819", "#9c6e08"], 1))),
        sprite[Le.AUTO_FEED] = IMAGES.AUTO_FEED,
        sprite[Le.BANDAGE_ACTIVATED] = IMAGES.BANDAGE_ACTIVATED,
        sprite[Le.STOP_REGENERATION] = IMAGES.STOP_REGENERATION,
        sprite[Le.STOP_REGENERATION_BLIZZARD] = IMAGES.STOP_REGENERATION_BLIZZARD,
        sprite[Le.SHOW_SPECTATORS] = m1(1, "Show spectators", 25, "#FFF", void 0, void 0, "#000", 5, 220),
        sprite[Le.RECONNECT] = m1(1, "Reconnecting...", 30, "#FFF"),
        console.log("Load canvas", performance.now() - e)
    }
    function Ji() {
        var e = To.time;
        if (sprite[Le.HERB] && (ze.drawImage(sprite[Le.HERB][e][1], ke + 480, b0 + 190),
        ze.drawImage(sprite[Le.HERB][e][2], ke + 180, b0 - 430),
        ze.drawImage(sprite[Le.HERB][e][1], ke - 855, b0 + 100),
        ze.drawImage(sprite[Le.HERB][e][0], ke - 550, b0 - 300),
        ze.drawImage(sprite[Le.HERB][e][0], ke - 1020, b0 - 520)),
        sprite[Le.STONES] && (ze.drawImage(sprite[Le.STONES][e][1], ke - 80, b0 - 640),
        ze.drawImage(sprite[Le.STONES][e][1], ke + 80, b0 + 490),
        ze.drawImage(sprite[Le.STONES][e][2], ke - 180, b0 - 700),
        ze.drawImage(sprite[Le.STONES][e][0], ke + 550, b0 + 100),
        ze.drawImage(sprite[Le.STONES][e][1], ke + 450, b0 + 300),
        ze.drawImage(sprite[Le.STONES][e][1], ke + 780, b0 + 300),
        ze.drawImage(sprite[Le.STONES][e][2], ke + 980, b0 + 200),
        ze.drawImage(sprite[Le.STONES][e][2], ke + 680, b0 + 600),
        ze.drawImage(sprite[Le.STONES][e][2], ke - 380, b0 + 100),
        ze.drawImage(sprite[Le.STONES][e][2], ke + 280, b0 + 250)),
        sprite[Le.PLANT] && (ze.drawImage(sprite[Le.PLANT][e][0], ke - 590, b0),
        ze.drawImage(sprite[Le.PLANT][e][0], ke + 120, b0 - 390),
        ze.drawImage(sprite[Le.PLANT][e][0], ke - 270, b0 + 340)),
        sprite[Le.TREE] && (ze.drawImage(sprite[Le.TREE][e][4], ke - 700, b0 - 600),
        ze.drawImage(sprite[Le.TREE][e][2], ke - 970, b0 - 250),
        ze.drawImage(sprite[Le.TREE][e][5], ke - 720, b0 - 200),
        ze.drawImage(sprite[Le.TREE][e][2], ke - 1020, b0 + 340),
        ze.drawImage(sprite[Le.TREE][e][0], ke - 1120, +b0),
        ze.drawImage(sprite[Le.TREE][e][1], ke - 650, b0 - 330),
        ze.drawImage(sprite[Le.TREE][e][4], ke - 495, b0 - 90),
        ze.drawImage(sprite[Le.TREE][e][3], ke - 520, b0 + 340),
        ze.drawImage(sprite[Le.TREE][e][2], ke + 830, b0 - 520)),
        sprite[Le.FIR],
        Ye && Fe) {
            var e = Ye.cam.x
              , t = Ye.cam.y
              , i = (Ye.cam.x = ke,
            Ye.cam.y = b0,
            Fe.time)
              , n = (Fe.time = To.time,
            To.items)
              , r = (n[2].x = 400,
            n[2].y = 100,
            n[2].draw(Le.WORKBENCH),
            n[1]);
            r.x = -500,
            r.y = 100,
            r.fruits[0].x = r.x - 20.5,
            r.fruits[0].y = r.y - 22.5,
            r.fruits[1].x = r.x - 35.5,
            r.fruits[1].y = r.y + 7.5,
            r.fruits[2].x = r.x + 7.5,
            r.fruits[2].y = r.y - 30,
            r.fruits[3].x = r.x + 22.5,
            r.fruits[3].y = r.y,
            r.fruits[4].x = r.x - 7.5,
            r.fruits[4].y = r.y + 14.5;
            for (var o = 0; o < r.info; o++)
                r.fruits[o].draw(Le.FRUIT);
            (r = n[3]).x = 210,
            r.y = -290,
            r.fruits[0].x = r.x - 20.5,
            r.fruits[0].y = r.y - 22.5,
            r.fruits[1].x = r.x - 35.5,
            r.fruits[1].y = r.y + 7.5,
            r.fruits[2].x = r.x + 7.5,
            r.fruits[2].y = r.y - 30,
            r.fruits[3].x = r.x + 22.5,
            r.fruits[3].y = r.y,
            r.fruits[4].x = r.x - 7.5,
            r.fruits[4].y = r.y + 14.5;
            for (o = 0; o < r.info; o++)
                r.fruits[o].draw(Le.FRUIT);
            n[0].x = 450,
            n[0].y = -100,
            n[0].draw_bg(Le.WOOD_FIRE),
            n[0].draw_fg(),
            Ye.cam.x = e,
            Ye.cam.y = t,
            Fe.time = i
        }
    }
    render_minimap = function() {
        for (var e = 0; e < 2; e++) {
            sprite[Le.MINIMAP_CTX][e].clearRect(0, 0, 193, 193),
            sprite[Le.MINIMAP_CTX][e].drawImage(MINIMAP_Utils.MAP[e], 0, 0, 193, 193),
            sprite[Le.BIGMAP_CTX][e].clearRect(0, 0, 600, 600),
            sprite[Le.BIGMAP_CTX][e].drawImage(MINIMAP_Utils.MAP[e], 0, 0, 600, 600);
            for (var t = Fe.biomes.length - 1; 0 <= t; t--) {
                var i = Fe.biomes[t]
                  , n = 193 * i.x1 / (100 * Fe.nw)
                  , r = 193 * i.y1 / (100 * Fe.nh)
                  , o = 193 * i.w / (100 * Fe.nw)
                  , a = 193 * i.h / (100 * Fe.nh)
                  , s = 600 * i.x1 / (100 * Fe.nw)
                  , d = 600 * i.y1 / (100 * Fe.nh)
                  , _ = 600 * i.w / (100 * Fe.nw)
                  , u = 600 * i.h / (100 * Fe.nh);
                i.t === Fe.BIOME_FOREST && (sprite[Le.MINIMAP_CTX][e].drawImage(MINIMAP_Utils.FOREST[e], n, r, o, a),
                sprite[Le.BIGMAP_CTX][e].drawImage(MINIMAP_Utils.FOREST[e], s, d, _, u)),
                i.t === Fe.BIOME_WINTER && (sprite[Le.MINIMAP_CTX][e].drawImage(MINIMAP_Utils.WINTER[e], n, r, o, a),
                sprite[Le.BIGMAP_CTX][e].drawImage(MINIMAP_Utils.WINTER[e], s, d, _, u)),
                i.t === Fe.BIOME_LAVA && (sprite[Le.MINIMAP_CTX][e].drawImage(MINIMAP_Utils.LAVA[e], n, r, o, a),
                sprite[Le.BIGMAP_CTX][e].drawImage(MINIMAP_Utils.LAVA[e], s, d, _, u)),
                i.t === Fe.BIOME_DRAGON && (sprite[Le.MINIMAP_CTX][e].drawImage(MINIMAP_Utils.CAVE[e], n, r, o, a),
                sprite[Le.BIGMAP_CTX][e].drawImage(MINIMAP_Utils.CAVE[e], s, d, _, u)),
                i.t === Fe.BIOME_DESERT && (sprite[Le.MINIMAP_CTX][e].drawImage(MINIMAP_Utils.DESERT[e], n, r, o, a),
                sprite[Le.BIGMAP_CTX][e].drawImage(MINIMAP_Utils.DESERT[e], s, d, _, u))
            }
        }
    }
    ,
    render_cosmetics = function() {
        COSMETICS = {
            SKIN: [{
                id: 0,
                day: IMAGES.PLAYER0D,
                night: IMAGES.PLAYER0N,
                dayHand: IMAGES.HAND0D,
                nightHand: IMAGES.HAND0N,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Starver"
            }, {
                id: 3,
                day: IMAGES.PLAYER3D,
                night: IMAGES.PLAYER3N,
                dayHand: IMAGES.HAND3D,
                nightHand: IMAGES.HAND3N,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Angry"
            }, {
                id: 2,
                day: IMAGES.PLAYER2D,
                night: IMAGES.PLAYER2N,
                dayHand: IMAGES.HAND2D,
                nightHand: IMAGES.HAND2N,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Sad"
            }, {
                id: 9,
                day: IMAGES.PLAYER9D,
                night: IMAGES.PLAYER9N,
                dayHand: IMAGES.HAND9D,
                nightHand: IMAGES.HAND9N,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Happy 1"
            }, {
                id: 1,
                day: IMAGES.PLAYER1D,
                night: IMAGES.PLAYER1N,
                dayHand: IMAGES.HAND1D,
                nightHand: IMAGES.HAND1N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "What?"
            }, {
                id: 4,
                day: IMAGES.PLAYER4D,
                night: IMAGES.PLAYER4N,
                dayHand: IMAGES.HAND4D,
                nightHand: IMAGES.HAND4N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Suspicious"
            }, {
                id: 5,
                day: IMAGES.PLAYER5D,
                night: IMAGES.PLAYER5N,
                dayHand: IMAGES.HAND5D,
                nightHand: IMAGES.HAND5N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Scar"
            }, {
                id: 6,
                day: IMAGES.PLAYER6D,
                night: IMAGES.PLAYER6N,
                dayHand: IMAGES.HAND6D,
                nightHand: IMAGES.HAND6N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "In Trouble"
            }, {
                id: 7,
                day: IMAGES.PLAYER7D,
                night: IMAGES.PLAYER7N,
                dayHand: IMAGES.HAND7D,
                nightHand: IMAGES.HAND7N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Cute"
            }, {
                id: 8,
                day: IMAGES.PLAYER8D,
                night: IMAGES.PLAYER8N,
                dayHand: IMAGES.HAND8D,
                nightHand: IMAGES.HAND8N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Bored 1"
            }, {
                id: 10,
                day: IMAGES.PLAYER10D,
                night: IMAGES.PLAYER10N,
                dayHand: IMAGES.HAND10D,
                nightHand: IMAGES.HAND10N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Happy 2"
            }, {
                id: 11,
                day: IMAGES.PLAYER11D,
                night: IMAGES.PLAYER11N,
                dayHand: IMAGES.HAND11D,
                nightHand: IMAGES.HAND11N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Crazy"
            }, {
                id: 12,
                day: IMAGES.PLAYER12D,
                night: IMAGES.PLAYER12N,
                dayHand: IMAGES.HAND12D,
                nightHand: IMAGES.HAND12N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Happy 3"
            }, {
                id: 13,
                day: IMAGES.PLAYER13D,
                night: IMAGES.PLAYER13N,
                dayHand: IMAGES.HAND13D,
                nightHand: IMAGES.HAND13N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Very Cute"
            }, {
                id: 14,
                day: IMAGES.PLAYER14D,
                night: IMAGES.PLAYER14N,
                dayHand: IMAGES.HAND14D,
                nightHand: IMAGES.HAND14N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Curious"
            }, {
                id: 15,
                day: IMAGES.PLAYER15D,
                night: IMAGES.PLAYER15N,
                dayHand: IMAGES.HAND15D,
                nightHand: IMAGES.HAND15N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Bored 2"
            }, {
                id: 16,
                day: IMAGES.PLAYER16D,
                night: IMAGES.PLAYER16N,
                dayHand: IMAGES.HAND16D,
                nightHand: IMAGES.HAND16N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Happy 4"
            }, {
                id: 17,
                day: IMAGES.PLAYER17D,
                night: IMAGES.PLAYER17N,
                dayHand: IMAGES.HAND17D,
                nightHand: IMAGES.HAND17N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Scar 2"
            }, {
                id: 18,
                day: IMAGES.PLAYER18D,
                night: IMAGES.PLAYER18N,
                dayHand: IMAGES.HAND18D,
                nightHand: IMAGES.HAND18N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Sick"
            }, {
                id: 19,
                day: IMAGES.PLAYER19D,
                night: IMAGES.PLAYER19N,
                dayHand: IMAGES.HAND19D,
                nightHand: IMAGES.HAND19N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Somnambule"
            }, {
                id: 24,
                day: IMAGES.SKIN7D,
                night: IMAGES.SKIN7N,
                dayHand: IMAGES.HAND_SKIN7D,
                nightHand: IMAGES.HAND_SKIN7N,
                rarity: RARITY.WOOD,
                author: "Pixelbitie",
                name: "Feel Bad"
            }, {
                id: 23,
                day: IMAGES.SKIN0D,
                night: IMAGES.SKIN0N,
                dayHand: IMAGES.HAND_SKIN0D,
                nightHand: IMAGES.HAND_SKIN0N,
                rarity: RARITY.WOOD,
                author: "Pixelbitie",
                name: "Mmmh."
            }, {
                id: 103,
                day: IMAGES.SKIN78D,
                night: IMAGES.SKIN78N,
                dayHand: IMAGES.HAND_SKIN78D,
                nightHand: IMAGES.HAND_SKIN78N,
                rarity: RARITY.WOOD,
                author: "pizza wa",
                name: "Panic"
            }, {
                id: 105,
                day: IMAGES.SKIN80D,
                night: IMAGES.SKIN80N,
                dayHand: IMAGES.HAND_SKIN80D,
                nightHand: IMAGES.HAND_SKIN80N,
                rarity: RARITY.WOOD,
                author: "pizza wa",
                name: "Hypnotic"
            }, {
                id: 106,
                day: IMAGES.SKIN81D,
                night: IMAGES.SKIN81N,
                dayHand: IMAGES.HAND_SKIN81D,
                nightHand: IMAGES.HAND_SKIN81N,
                rarity: RARITY.WOOD,
                author: "pizza wa",
                name: "Stars in the eyes"
            }, {
                id: 104,
                day: IMAGES.SKIN79D,
                night: IMAGES.SKIN79N,
                dayHand: IMAGES.HAND_SKIN79D,
                nightHand: IMAGES.HAND_SKIN79N,
                rarity: RARITY.STONE,
                author: "pizza wa",
                name: "Scared at night"
            }, {
                id: 20,
                day: IMAGES.SKIN_VAMPIRED,
                night: IMAGES.SKIN_VAMPIREN,
                dayHand: IMAGES.HAND_VAMPIRED,
                nightHand: IMAGES.HAND_VAMPIREN,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Vampire"
            }, {
                id: 21,
                day: IMAGES.SKIN_ZOMBIED,
                night: IMAGES.SKIN_ZOMBIEN,
                dayHand: IMAGES.HAND_ZOMBIED,
                nightHand: IMAGES.HAND_ZOMBIEN,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Zombie"
            }, {
                id: 22,
                day: IMAGES.SKIN_DEVASTD,
                night: IMAGES.SKIN_DEVASTN,
                dayHand: IMAGES.HAND_DEVASTD,
                nightHand: IMAGES.HAND_DEVASTN,
                rarity: RARITY.STONE,
                author: "Pixelbitie",
                name: "Devaster"
            }, {
                id: 116,
                day: IMAGES.SKIN91D,
                night: IMAGES.SKIN91N,
                dayHand: IMAGES.HAND_SKIN91D,
                nightHand: IMAGES.HAND_SKIN91N,
                rarity: RARITY.STONE,
                author: "Fukss",
                name: "Dead Devaster"
            }, {
                id: 27,
                day: IMAGES.SKIN19D,
                night: IMAGES.SKIN19N,
                dayHand: IMAGES.HAND_SKIN19D,
                nightHand: IMAGES.HAND_SKIN19N,
                rarity: RARITY.STONE,
                author: "Winter",
                name: "Cactus"
            }, {
                id: 28,
                day: IMAGES.SKIN20D,
                night: IMAGES.SKIN20N,
                dayHand: IMAGES.HAND_SKIN20D,
                nightHand: IMAGES.HAND_SKIN20N,
                rarity: RARITY.STONE,
                author: "pizza wa",
                name: "Bee"
            }, {
                id: 49,
                day: IMAGES.SKIN24D,
                night: IMAGES.SKIN24N,
                dayHand: IMAGES.HAND_SKIN24D,
                nightHand: IMAGES.HAND_SKIN24N,
                rarity: RARITY.STONE,
                author: "Taco4Life",
                name: "Camo Skin"
            }, {
                id: 58,
                day: IMAGES.SKIN34D,
                night: IMAGES.SKIN34N,
                dayHand: IMAGES.HAND_SKIN34D,
                nightHand: IMAGES.HAND_SKIN34N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Blue Limax Skin"
            }, {
                id: 59,
                day: IMAGES.SKIN33D,
                night: IMAGES.SKIN33N,
                dayHand: IMAGES.HAND_SKIN33D,
                nightHand: IMAGES.HAND_SKIN33N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Red Limax Skin"
            }, {
                id: 94,
                day: IMAGES.SKIN69D,
                night: IMAGES.SKIN69N,
                dayHand: IMAGES.HAND_SKIN69D,
                nightHand: IMAGES.HAND_SKIN69N,
                rarity: RARITY.STONE,
                author: "Taco4Life",
                name: "Mr. Pumpkin"
            }, {
                id: 109,
                day: IMAGES.SKIN84D,
                night: IMAGES.SKIN84N,
                dayHand: IMAGES.HAND_SKIN84D,
                nightHand: IMAGES.HAND_SKIN84N,
                rarity: RARITY.STONE,
                author: "pizza wa",
                name: "Wood"
            }, {
                id: 114,
                day: IMAGES.SKIN89D,
                night: IMAGES.SKIN89N,
                dayHand: IMAGES.HAND_SKIN89D,
                nightHand: IMAGES.HAND_SKIN89N,
                rarity: RARITY.STONE,
                author: "pizza wa",
                name: "Zebra"
            }, {
                id: 120,
                day: IMAGES.SKIN95D,
                night: IMAGES.SKIN95N,
                dayHand: IMAGES.HAND_SKIN95D,
                nightHand: IMAGES.HAND_SKIN95N,
                rarity: RARITY.STONE,
                author: "CrysTal",
                name: "Tiger"
            }, {
                id: 134,
                day: IMAGES.SKIN109D,
                night: IMAGES.SKIN109N,
                dayHand: IMAGES.HAND_SKIN109D,
                nightHand: IMAGES.HAND_SKIN109N,
                rarity: RARITY.STONE,
                author: "Franchestcreator",
                name: "Day or Night"
            }, {
                id: 135,
                day: IMAGES.SKIN110D,
                night: IMAGES.SKIN110N,
                dayHand: IMAGES.HAND_SKIN110D,
                nightHand: IMAGES.HAND_SKIN110N,
                rarity: RARITY.STONE,
                author: "Poinet",
                name: "Square Starver"
            }, {
                id: 136,
                day: IMAGES.SKIN111D,
                night: IMAGES.SKIN111N,
                dayHand: IMAGES.HAND_SKIN111D,
                nightHand: IMAGES.HAND_SKIN111N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Voodoo Doll"
            }, {
                id: 137,
                day: IMAGES.SKIN112D,
                night: IMAGES.SKIN112N,
                dayHand: IMAGES.HAND_SKIN112D,
                nightHand: IMAGES.HAND_SKIN112N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Frankenstein"
            }, {
                id: 138,
                day: IMAGES.SKIN114D,
                night: IMAGES.SKIN114N,
                dayHand: IMAGES.HAND_SKIN114D,
                nightHand: IMAGES.HAND_SKIN114N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Old Mummy"
            }, {
                id: 139,
                day: IMAGES.SKIN115D,
                night: IMAGES.SKIN115N,
                dayHand: IMAGES.HAND_SKIN115D,
                nightHand: IMAGES.HAND_SKIN115N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Werewolf"
            }, {
                id: 140,
                day: IMAGES.SKIN116D,
                night: IMAGES.SKIN116N,
                dayHand: IMAGES.HAND_SKIN116D,
                nightHand: IMAGES.HAND_SKIN116N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Old Cthulhu"
            }, {
                id: 141,
                day: IMAGES.SKIN117D,
                night: IMAGES.SKIN117N,
                dayHand: IMAGES.HAND_SKIN117D,
                nightHand: IMAGES.HAND_SKIN117N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Sea Man"
            }, {
                id: 142,
                day: IMAGES.SKIN118D,
                night: IMAGES.SKIN118N,
                dayHand: IMAGES.HAND_SKIN118D,
                nightHand: IMAGES.HAND_SKIN118N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Old Pumpkin"
            }, {
                id: 148,
                day: IMAGES.SKIN124D,
                night: IMAGES.SKIN124N,
                dayHand: IMAGES.HAND_SKIN124D,
                nightHand: IMAGES.HAND_SKIN124N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Old Snowman"
            }, {
                id: 149,
                day: IMAGES.SKIN125D,
                night: IMAGES.SKIN125N,
                dayHand: IMAGES.HAND_SKIN125D,
                nightHand: IMAGES.HAND_SKIN125N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Old Christmas Tree Man"
            }, {
                id: 150,
                day: IMAGES.SKIN126D,
                night: IMAGES.SKIN126N,
                dayHand: IMAGES.HAND_SKIN126D,
                nightHand: IMAGES.HAND_SKIN126N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Old Mrs Bell"
            }, {
                id: 151,
                day: IMAGES.SKIN127D,
                night: IMAGES.SKIN127N,
                dayHand: IMAGES.HAND_SKIN127D,
                nightHand: IMAGES.HAND_SKIN127N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Old Elfy"
            }, {
                id: 152,
                day: IMAGES.SKIN128D,
                night: IMAGES.SKIN128N,
                dayHand: IMAGES.HAND_SKIN128D,
                nightHand: IMAGES.HAND_SKIN128N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Old Mr Present"
            }, {
                id: 153,
                day: IMAGES.SKIN129D,
                night: IMAGES.SKIN129N,
                dayHand: IMAGES.HAND_SKIN129D,
                nightHand: IMAGES.HAND_SKIN129N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "My Dear Old Deer"
            }, {
                id: 154,
                day: IMAGES.SKIN130D,
                night: IMAGES.SKIN130N,
                dayHand: IMAGES.HAND_SKIN130D,
                nightHand: IMAGES.HAND_SKIN130N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Mr Angel"
            }, {
                id: 155,
                day: IMAGES.SKIN131D,
                night: IMAGES.SKIN131N,
                dayHand: IMAGES.HAND_SKIN131D,
                nightHand: IMAGES.HAND_SKIN131N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Mr Ice Cube"
            }, {
                id: 156,
                day: IMAGES.SKIN132D,
                night: IMAGES.SKIN132N,
                dayHand: IMAGES.HAND_SKIN132D,
                nightHand: IMAGES.HAND_SKIN132N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Mr Snowman"
            }, {
                id: 159,
                day: IMAGES.SKIN135D,
                night: IMAGES.SKIN135N,
                dayHand: IMAGES.HAND_SKIN135D,
                nightHand: IMAGES.HAND_SKIN135N,
                rarity: RARITY.STONE,
                author: "CrysTal",
                name: "Crystal Sky Skin"
            }, {
                id: 167,
                day: IMAGES.SKIN143D,
                night: IMAGES.SKIN143N,
                dayHand: IMAGES.HAND_SKIN143D,
                nightHand: IMAGES.HAND_SKIN143N,
                rarity: RARITY.STONE,
                author: "Franchestcreator",
                name: "Radioactive Starver"
            }, {
                id: 169,
                day: IMAGES.SKIN146D,
                night: IMAGES.SKIN146N,
                dayHand: IMAGES.HAND_SKIN146D,
                nightHand: IMAGES.HAND_SKIN146N,
                rarity: RARITY.STONE,
                author: "TheScaryBlaze",
                name: "Eaten Cookie"
            }, {
                id: 170,
                day: IMAGES.SKIN147D,
                night: IMAGES.SKIN147N,
                dayHand: IMAGES.HAND_SKIN147D,
                nightHand: IMAGES.HAND_SKIN147N,
                rarity: RARITY.STONE,
                author: "aloner",
                name: "Blob Thing"
            }, {
                id: 172,
                day: IMAGES.SKIN149D,
                night: IMAGES.SKIN149N,
                dayHand: IMAGES.HAND_SKIN149D,
                nightHand: IMAGES.HAND_SKIN149N,
                rarity: RARITY.STONE,
                author: "aloner",
                name: "Machine Mask"
            }, {
                id: 29,
                day: IMAGES.SKIN2D,
                night: IMAGES.SKIN2N,
                dayHand: IMAGES.HAND_SKIN2D,
                nightHand: IMAGES.HAND_SKIN2N,
                rarity: RARITY.GOLD,
                author: "Pixelbitie",
                name: "Lollipop 1"
            }, {
                id: 30,
                day: IMAGES.SKIN3D,
                night: IMAGES.SKIN3N,
                dayHand: IMAGES.HAND_SKIN3D,
                nightHand: IMAGES.HAND_SKIN3N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Lollipop 2"
            }, {
                id: 31,
                day: IMAGES.SKIN4D,
                night: IMAGES.SKIN4N,
                dayHand: IMAGES.HAND_SKIN4D,
                nightHand: IMAGES.HAND_SKIN4N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Lollipop 3"
            }, {
                id: 32,
                day: IMAGES.SKIN5D,
                night: IMAGES.SKIN5N,
                dayHand: IMAGES.HAND_SKIN5D,
                nightHand: IMAGES.HAND_SKIN5N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Lollipop 4"
            }, {
                id: 33,
                day: IMAGES.SKIN8D,
                night: IMAGES.SKIN8N,
                dayHand: IMAGES.HAND_SKIN8D,
                nightHand: IMAGES.HAND_SKIN8N,
                rarity: RARITY.GOLD,
                author: "Sushui",
                name: "Yellow Bird"
            }, {
                id: 34,
                day: IMAGES.SKIN9D,
                night: IMAGES.SKIN9N,
                dayHand: IMAGES.HAND_SKIN9D,
                nightHand: IMAGES.HAND_SKIN9N,
                rarity: RARITY.GOLD,
                author: "Sushui",
                name: "Red Bird"
            }, {
                id: 35,
                day: IMAGES.SKIN10D,
                night: IMAGES.SKIN10N,
                dayHand: IMAGES.HAND_SKIN10D,
                nightHand: IMAGES.HAND_SKIN10N,
                rarity: RARITY.GOLD,
                author: "Sushui",
                name: "Blue Bird"
            }, {
                id: 37,
                day: IMAGES.SKIN17D,
                night: IMAGES.SKIN17N,
                dayHand: IMAGES.HAND_SKIN17D,
                nightHand: IMAGES.HAND_SKIN17N,
                rarity: RARITY.GOLD,
                author: "Winter",
                name: "Owl"
            }, {
                id: 52,
                day: IMAGES.SKIN27D,
                night: IMAGES.SKIN27N,
                dayHand: IMAGES.HAND_SKIN27D,
                nightHand: IMAGES.HAND_SKIN27N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Nemo"
            }, {
                id: 53,
                day: IMAGES.SKIN28D,
                night: IMAGES.SKIN28N,
                dayHand: IMAGES.HAND_SKIN28D,
                nightHand: IMAGES.HAND_SKIN28N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Mr. Bread"
            }, {
                id: 74,
                day: IMAGES.SKIN49D,
                night: IMAGES.SKIN49N,
                dayHand: IMAGES.HAND_SKIN49D,
                nightHand: IMAGES.HAND_SKIN49N,
                rarity: RARITY.GOLD,
                author: "Communist & Taco4Life",
                name: "Mr. Bread 2"
            }, {
                id: 75,
                day: IMAGES.SKIN50D,
                night: IMAGES.SKIN50N,
                dayHand: IMAGES.HAND_SKIN50D,
                nightHand: IMAGES.HAND_SKIN50N,
                rarity: RARITY.GOLD,
                author: "Communist & Taco4Life",
                name: "Mr. Bread 3"
            }, {
                id: 60,
                day: IMAGES.SKIN35D,
                night: IMAGES.SKIN35N,
                dayHand: IMAGES.HAND_SKIN35D,
                nightHand: IMAGES.HAND_SKIN35N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Red Berry"
            }, {
                id: 61,
                day: IMAGES.SKIN36D,
                night: IMAGES.SKIN36N,
                dayHand: IMAGES.HAND_SKIN36D,
                nightHand: IMAGES.HAND_SKIN36N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Old Berry"
            }, {
                id: 70,
                day: IMAGES.SKIN45D,
                night: IMAGES.SKIN45N,
                dayHand: IMAGES.HAND_SKIN45D,
                nightHand: IMAGES.HAND_SKIN45N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Cake"
            }, {
                id: 71,
                day: IMAGES.SKIN46D,
                night: IMAGES.SKIN46N,
                dayHand: IMAGES.HAND_SKIN46D,
                nightHand: IMAGES.HAND_SKIN46N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Christmas Cake"
            }, {
                id: 77,
                day: IMAGES.SKIN52D,
                night: IMAGES.SKIN52N,
                dayHand: IMAGES.HAND_SKIN52D,
                nightHand: IMAGES.HAND_SKIN52N,
                rarity: RARITY.GOLD,
                author: "Pancakez",
                name: "Mr. Pancake"
            }, {
                id: 87,
                day: IMAGES.SKIN62D,
                night: IMAGES.SKIN62N,
                dayHand: IMAGES.HAND_SKIN62D,
                nightHand: IMAGES.HAND_SKIN62N,
                rarity: RARITY.GOLD,
                author: "Taco4Life",
                name: "Mr. Taco"
            }, {
                id: 78,
                day: IMAGES.SKIN53D,
                night: IMAGES.SKIN53N,
                dayHand: IMAGES.HAND_SKIN53D,
                nightHand: IMAGES.HAND_SKIN53N,
                rarity: RARITY.GOLD,
                author: "Taco4Life",
                name: "Mr. Bottle"
            }, {
                id: 79,
                day: IMAGES.SKIN54D,
                night: IMAGES.SKIN54N,
                dayHand: IMAGES.HAND_SKIN54D,
                nightHand: IMAGES.HAND_SKIN54N,
                rarity: RARITY.GOLD,
                author: "Taco4Life",
                name: "Mr. Bottle 2"
            }, {
                id: 97,
                day: IMAGES.SKIN71D,
                night: IMAGES.SKIN71N,
                dayHand: IMAGES.HAND_SKIN71D,
                nightHand: IMAGES.HAND_SKIN71N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Pink Rabbit"
            }, {
                id: 102,
                day: IMAGES.SKIN77D,
                night: IMAGES.SKIN77N,
                dayHand: IMAGES.HAND_SKIN77D,
                nightHand: IMAGES.HAND_SKIN77N,
                rarity: RARITY.GOLD,
                author: "pizza wa",
                name: "Marshmallow"
            }, {
                id: 107,
                day: IMAGES.SKIN82D,
                night: IMAGES.SKIN82N,
                dayHand: IMAGES.HAND_SKIN82D,
                nightHand: IMAGES.HAND_SKIN82N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Fox"
            }, {
                id: 132,
                day: IMAGES.SKIN107D,
                night: IMAGES.SKIN107N,
                dayHand: IMAGES.HAND_SKIN107D,
                nightHand: IMAGES.HAND_SKIN107N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Raccoon"
            }, {
                id: 111,
                day: IMAGES.SKIN86D,
                night: IMAGES.SKIN86N,
                dayHand: IMAGES.HAND_SKIN86D,
                nightHand: IMAGES.HAND_SKIN86N,
                rarity: RARITY.GOLD,
                author: "pizza wa",
                name: "Cloud"
            }, {
                id: 113,
                day: IMAGES.SKIN88D,
                night: IMAGES.SKIN88N,
                dayHand: IMAGES.HAND_SKIN88D,
                nightHand: IMAGES.HAND_SKIN88N,
                rarity: RARITY.GOLD,
                author: "pizza wa",
                name: "Moon"
            }, {
                id: 117,
                day: IMAGES.SKIN92D,
                night: IMAGES.SKIN92N,
                dayHand: IMAGES.HAND_SKIN92D,
                nightHand: IMAGES.HAND_SKIN92N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Mr. Panda"
            }, {
                id: 118,
                day: IMAGES.SKIN93D,
                night: IMAGES.SKIN93N,
                dayHand: IMAGES.HAND_SKIN93D,
                nightHand: IMAGES.HAND_SKIN93N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Mr. Strawberry"
            }, {
                id: 119,
                day: IMAGES.SKIN94D,
                night: IMAGES.SKIN94N,
                dayHand: IMAGES.HAND_SKIN94D,
                nightHand: IMAGES.HAND_SKIN94N,
                rarity: RARITY.GOLD,
                author: "eogito & Sushuui",
                name: "Mummy"
            }, {
                id: 122,
                day: IMAGES.SKIN97D,
                night: IMAGES.SKIN97N,
                dayHand: IMAGES.HAND_SKIN97D,
                nightHand: IMAGES.HAND_SKIN97N,
                rarity: RARITY.GOLD,
                author: "Taco4Life",
                name: "Dino"
            }, {
                id: 127,
                day: IMAGES.SKIN102D,
                night: IMAGES.SKIN102N,
                dayHand: IMAGES.HAND_SKIN102D,
                nightHand: IMAGES.HAND_SKIN102N,
                rarity: RARITY.GOLD,
                author: "MADBalgouthi",
                name: "Mr. Koala"
            }, {
                id: 160,
                day: IMAGES.SKIN136D,
                night: IMAGES.SKIN136N,
                dayHand: IMAGES.HAND_SKIN136D,
                nightHand: IMAGES.HAND_SKIN136N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Bottle Protection"
            }, {
                id: 162,
                day: IMAGES.SKIN138D,
                night: IMAGES.SKIN138N,
                dayHand: IMAGES.HAND_SKIN138D,
                nightHand: IMAGES.HAND_SKIN138N,
                rarity: RARITY.GOLD,
                author: "CrysTal",
                name: "Leaf Man"
            }, {
                id: 166,
                day: IMAGES.SKIN142D,
                night: IMAGES.SKIN142N,
                dayHand: IMAGES.HAND_SKIN142D,
                nightHand: IMAGES.HAND_SKIN142N,
                rarity: RARITY.GOLD,
                author: "pizza wa",
                name: "Bubble"
            }, {
                id: 174,
                day: IMAGES.SKIN145D,
                night: IMAGES.SKIN145N,
                dayHand: IMAGES.HAND_SKIN145D,
                nightHand: IMAGES.HAND_SKIN145N,
                rarity: RARITY.GOLD,
                author: "upfiz",
                name: "Potato"
            }, {
                id: 171,
                day: IMAGES.SKIN148D,
                night: IMAGES.SKIN148N,
                dayHand: IMAGES.HAND_SKIN148D,
                nightHand: IMAGES.HAND_SKIN148N,
                rarity: RARITY.GOLD,
                author: "aloner",
                name: "Axolotl"
            }, {
                id: 25,
                day: IMAGES.SKIN6D,
                night: IMAGES.SKIN6N,
                dayHand: IMAGES.HAND_SKIN6D,
                nightHand: IMAGES.HAND_SKIN0N,
                rarity: RARITY.DIAMOND,
                author: "Pixelbitie",
                name: "Test Dummy"
            }, {
                id: 41,
                day: IMAGES.SKIN_STARD,
                night: IMAGES.SKIN_STARN,
                dayHand: IMAGES.HAND_STARD,
                nightHand: IMAGES.HAND_STARN,
                rarity: RARITY.DIAMOND,
                author: "pizza wa",
                name: "Star-ver"
            }, {
                id: 43,
                day: IMAGES.SKIN11D,
                night: IMAGES.SKIN11N,
                dayHand: IMAGES.HAND_SKIN11D,
                nightHand: IMAGES.HAND_SKIN11N,
                rarity: RARITY.DIAMOND,
                author: "Communist",
                name: "Starver Chest"
            }, {
                id: 88,
                day: IMAGES.SKIN63D,
                night: IMAGES.SKIN63N,
                dayHand: IMAGES.HAND_SKIN63D,
                nightHand: IMAGES.HAND_SKIN63N,
                rarity: RARITY.DIAMOND,
                author: "Communist",
                name: "Starver Workbench"
            }, {
                id: 121,
                day: IMAGES.SKIN96D,
                night: IMAGES.SKIN96N,
                dayHand: IMAGES.HAND_SKIN96D,
                nightHand: IMAGES.HAND_SKIN96N,
                rarity: RARITY.DIAMOND,
                author: "MADBalgouthi",
                name: "Fish"
            }, {
                id: 39,
                day: IMAGES.SKIN22D,
                night: IMAGES.SKIN22N,
                dayHand: IMAGES.HAND_SKIN22D,
                nightHand: IMAGES.HAND_SKIN22N,
                rarity: RARITY.DIAMOND,
                author: "Negligent4Dia",
                name: "Crab"
            }, {
                id: 40,
                day: IMAGES.SKIN23D,
                night: IMAGES.SKIN23N,
                dayHand: IMAGES.HAND_SKIN23D,
                nightHand: IMAGES.HAND_SKIN23N,
                rarity: RARITY.DIAMOND,
                author: "Negligent4Dia",
                name: "Piranha"
            }, {
                id: 36,
                day: IMAGES.SKIN16D,
                night: IMAGES.SKIN16N,
                dayHand: IMAGES.HAND_SKIN16D,
                nightHand: IMAGES.HAND_SKIN16N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Winter Fox"
            }, {
                id: 69,
                day: IMAGES.SKIN44D,
                night: IMAGES.SKIN44N,
                dayHand: IMAGES.HAND_SKIN44D,
                nightHand: IMAGES.HAND_SKIN44N,
                rarity: RARITY.DIAMOND,
                author: "Zed",
                name: "Baby Foxy"
            }, {
                id: 51,
                day: IMAGES.SKIN26D,
                night: IMAGES.SKIN26N,
                dayHand: IMAGES.HAND_SKIN26D,
                nightHand: IMAGES.HAND_SKIN26N,
                rarity: RARITY.DIAMOND,
                author: "HOWI",
                name: "Winter Bear"
            }, {
                id: 133,
                day: IMAGES.SKIN108D,
                night: IMAGES.SKIN108N,
                dayHand: IMAGES.HAND_SKIN108D,
                nightHand: IMAGES.HAND_SKIN108N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Hawk"
            }, {
                id: 55,
                day: IMAGES.SKIN30D,
                night: IMAGES.SKIN30N,
                dayHand: IMAGES.HAND_SKIN30D,
                nightHand: IMAGES.HAND_SKIN30N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Nice Little Yuki"
            }, {
                id: 68,
                day: IMAGES.SKIN43D,
                night: IMAGES.SKIN43N,
                dayHand: IMAGES.HAND_SKIN43D,
                nightHand: IMAGES.HAND_SKIN43N,
                rarity: RARITY.DIAMOND,
                author: "Taco4Life",
                name: "Baby Yuki"
            }, {
                id: 62,
                day: IMAGES.SKIN37D,
                night: IMAGES.SKIN37N,
                dayHand: IMAGES.HAND_SKIN37D,
                nightHand: IMAGES.HAND_SKIN37N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Mr. Carrot"
            }, {
                id: 56,
                day: IMAGES.SKIN31D,
                night: IMAGES.SKIN31N,
                dayHand: IMAGES.HAND_SKIN31D,
                nightHand: IMAGES.HAND_SKIN31N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Bat Limax"
            }, {
                id: 72,
                day: IMAGES.SKIN47D,
                night: IMAGES.SKIN47N,
                dayHand: IMAGES.HAND_SKIN47D,
                nightHand: IMAGES.HAND_SKIN47N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Mr. Crate"
            }, {
                id: 73,
                day: IMAGES.SKIN48D,
                night: IMAGES.SKIN48N,
                dayHand: IMAGES.HAND_SKIN48D,
                nightHand: IMAGES.HAND_SKIN48N,
                rarity: RARITY.DIAMOND,
                author: "Taco4Life & eogito",
                name: "Mr. Spider"
            }, {
                id: 93,
                day: IMAGES.SKIN68D,
                night: IMAGES.SKIN68N,
                dayHand: IMAGES.HAND_SKIN68D,
                nightHand: IMAGES.HAND_SKIN68N,
                rarity: RARITY.DIAMOND,
                author: "Anyone want to play?",
                name: "Mr. Spider 2"
            }, {
                id: 82,
                day: IMAGES.SKIN57D,
                night: IMAGES.SKIN57N,
                dayHand: IMAGES.HAND_SKIN57D,
                nightHand: IMAGES.HAND_SKIN57N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Mr. Blue Starfish"
            }, {
                id: 83,
                day: IMAGES.SKIN58D,
                night: IMAGES.SKIN58N,
                dayHand: IMAGES.HAND_SKIN58D,
                nightHand: IMAGES.HAND_SKIN58N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Mr. Orange Starfish"
            }, {
                id: 84,
                day: IMAGES.SKIN59D,
                night: IMAGES.SKIN59N,
                dayHand: IMAGES.HAND_SKIN59D,
                nightHand: IMAGES.HAND_SKIN59N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Mr. Pink Starfish"
            }, {
                id: 85,
                day: IMAGES.SKIN60D,
                night: IMAGES.SKIN60N,
                dayHand: IMAGES.HAND_SKIN60D,
                nightHand: IMAGES.HAND_SKIN60N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Mr. ShellMauve"
            }, {
                id: 86,
                day: IMAGES.SKIN61D,
                night: IMAGES.SKIN61N,
                dayHand: IMAGES.HAND_SKIN61D,
                nightHand: IMAGES.HAND_SKIN61N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Mr. Shell Bead"
            }, {
                id: 96,
                day: IMAGES.SKIN72D,
                night: IMAGES.SKIN72N,
                dayHand: IMAGES.HAND_SKIN72D,
                nightHand: IMAGES.HAND_SKIN72N,
                rarity: RARITY.DIAMOND,
                author: "Fukss",
                name: "Angry Crab"
            }, {
                id: 98,
                day: IMAGES.SKIN73D,
                night: IMAGES.SKIN73N,
                dayHand: IMAGES.HAND_SKIN73D,
                nightHand: IMAGES.HAND_SKIN73N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Penguin"
            }, {
                id: 126,
                day: IMAGES.SKIN101D,
                night: IMAGES.SKIN101N,
                dayHand: IMAGES.HAND_SKIN101D,
                nightHand: IMAGES.HAND_SKIN101N,
                rarity: RARITY.DIAMOND,
                author: "Anyone want to play?",
                name: "Mr. Boar"
            }, {
                id: 145,
                day: IMAGES.SKIN121D,
                night: IMAGES.SKIN121N,
                dayHand: IMAGES.HAND_SKIN121D,
                nightHand: IMAGES.HAND_SKIN121N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "I saw you"
            }, {
                id: 146,
                day: IMAGES.SKIN122D,
                night: IMAGES.SKIN122N,
                dayHand: IMAGES.HAND_SKIN122D,
                nightHand: IMAGES.HAND_SKIN122N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "It was funny"
            }, {
                id: 147,
                day: IMAGES.SKIN123D,
                night: IMAGES.SKIN123N,
                dayHand: IMAGES.HAND_SKIN123D,
                nightHand: IMAGES.HAND_SKIN123N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "You can scream"
            }, {
                id: 158,
                day: IMAGES.SKIN134D,
                night: IMAGES.SKIN134N,
                dayHand: IMAGES.HAND_SKIN134D,
                nightHand: IMAGES.HAND_SKIN134N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Mr. Book"
            }, {
                id: 163,
                day: IMAGES.SKIN139D,
                night: IMAGES.SKIN139N,
                dayHand: IMAGES.HAND_SKIN139D,
                nightHand: IMAGES.HAND_SKIN139N,
                rarity: RARITY.DIAMOND,
                author: "Anyone want to play?",
                name: "Mr. Mammoth"
            }, {
                id: 164,
                day: IMAGES.SKIN140D,
                night: IMAGES.SKIN140N,
                dayHand: IMAGES.HAND_SKIN140D,
                nightHand: IMAGES.HAND_SKIN140N,
                rarity: RARITY.DIAMOND,
                author: "SoOw",
                name: "Mr. Mammoth 2"
            }, {
                id: 161,
                day: IMAGES.SKIN137D,
                night: IMAGES.SKIN137N,
                dayHand: IMAGES.HAND_SKIN137D,
                nightHand: IMAGES.HAND_SKIN137N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Nightmare"
            }, {
                id: 168,
                day: IMAGES.SKIN144D,
                night: IMAGES.SKIN144N,
                dayHand: IMAGES.HAND_SKIN144D,
                nightHand: IMAGES.HAND_SKIN144N,
                rarity: RARITY.DIAMOND,
                author: "pizza wa",
                name: "Shiny Crystal"
            }, {
                id: 173,
                day: IMAGES.SKIN150D,
                night: IMAGES.SKIN150N,
                dayHand: IMAGES.HAND_SKIN150D,
                nightHand: IMAGES.HAND_SKIN150N,
                rarity: RARITY.DIAMOND,
                author: "pizza wa",
                name: "Water skin"
            }, {
                id: 42,
                day: IMAGES.SKIN14D,
                night: IMAGES.SKIN14N,
                dayHand: IMAGES.HAND_SKIN14D,
                nightHand: IMAGES.HAND_SKIN14N,
                rarity: RARITY.AMETHYST,
                author: "Winter",
                name: "Will-O'-The-Wisp"
            }, {
                id: 91,
                day: IMAGES.SKIN66D,
                night: IMAGES.SKIN66N,
                dayHand: IMAGES.HAND_SKIN66D,
                nightHand: IMAGES.HAND_SKIN66N,
                rarity: RARITY.AMETHYST,
                author: "ExpertyAnimations",
                name: "Flame"
            }, {
                id: 26,
                day: IMAGES.SKIN15D,
                night: IMAGES.SKIN15N,
                dayHand: IMAGES.HAND_SKIN15D,
                nightHand: IMAGES.HAND_SKIN15N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Be a Tree"
            }, {
                id: 38,
                day: IMAGES.SKIN18D,
                night: IMAGES.SKIN18N,
                dayHand: IMAGES.HAND_SKIN18D,
                nightHand: IMAGES.HAND_SKIN18N,
                rarity: RARITY.AMETHYST,
                author: "Winter",
                name: "Toxic Mutant"
            }, {
                id: 50,
                day: IMAGES.SKIN25D,
                night: IMAGES.SKIN25N,
                dayHand: IMAGES.HAND_SKIN25D,
                nightHand: IMAGES.HAND_SKIN25N,
                rarity: RARITY.AMETHYST,
                author: "Communist",
                name: "Mr. Tomato"
            }, {
                id: 54,
                day: IMAGES.SKIN29D,
                night: IMAGES.SKIN29N,
                dayHand: IMAGES.HAND_SKIN29D,
                nightHand: IMAGES.HAND_SKIN29N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Mr. Mauve, the Lapa"
            }, {
                id: 57,
                day: IMAGES.SKIN32D,
                night: IMAGES.SKIN32N,
                dayHand: IMAGES.HAND_SKIN32D,
                nightHand: IMAGES.HAND_SKIN32N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Golden Fish"
            }, {
                id: 64,
                day: IMAGES.SKIN39D,
                night: IMAGES.SKIN39N,
                dayHand: IMAGES.HAND_SKIN39D,
                nightHand: IMAGES.HAND_SKIN39N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "LapaMauve"
            }, {
                id: 65,
                day: IMAGES.SKIN40D,
                night: IMAGES.SKIN40N,
                dayHand: IMAGES.HAND_SKIN40D,
                nightHand: IMAGES.HAND_SKIN40N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "LapaMauve "
            }, {
                id: 92,
                day: IMAGES.SKIN67D,
                night: IMAGES.SKIN67N,
                dayHand: IMAGES.HAND_SKIN67D,
                nightHand: IMAGES.HAND_SKIN67N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Mr. Burger"
            }, {
                id: 66,
                day: IMAGES.SKIN41D,
                night: IMAGES.SKIN41N,
                dayHand: IMAGES.HAND_SKIN41D,
                nightHand: IMAGES.HAND_SKIN41N,
                rarity: RARITY.AMETHYST,
                author: "pizza wa",
                name: "Tropical Starver"
            }, {
                id: 80,
                day: IMAGES.SKIN55D,
                night: IMAGES.SKIN55N,
                dayHand: IMAGES.HAND_SKIN55D,
                nightHand: IMAGES.HAND_SKIN55N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Mr. ShellPink"
            }, {
                id: 81,
                day: IMAGES.SKIN56D,
                night: IMAGES.SKIN56N,
                dayHand: IMAGES.HAND_SKIN56D,
                nightHand: IMAGES.HAND_SKIN56N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Mr. OranShell"
            }, {
                id: 99,
                day: IMAGES.SKIN74D,
                night: IMAGES.SKIN74N,
                dayHand: IMAGES.HAND_SKIN74D,
                nightHand: IMAGES.HAND_SKIN74N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Pepe"
            }, {
                id: 100,
                day: IMAGES.SKIN75D,
                night: IMAGES.SKIN75N,
                dayHand: IMAGES.HAND_SKIN75D,
                nightHand: IMAGES.HAND_SKIN75N,
                rarity: RARITY.AMETHYST,
                author: "fatant",
                name: "Mr. Ant"
            }, {
                id: 115,
                day: IMAGES.SKIN90D,
                night: IMAGES.SKIN90N,
                dayHand: IMAGES.HAND_SKIN90D,
                nightHand: IMAGES.HAND_SKIN90N,
                rarity: RARITY.AMETHYST,
                author: "MADBalgouthi",
                name: "Mr. Watermelon"
            }, {
                id: 101,
                day: IMAGES.SKIN76D,
                night: IMAGES.SKIN76N,
                dayHand: IMAGES.HAND_SKIN76D,
                nightHand: IMAGES.HAND_SKIN76N,
                rarity: RARITY.AMETHYST,
                author: "Taco4Life",
                name: "Mr. Thornbush"
            }, {
                id: 131,
                day: IMAGES.SKIN106D,
                night: IMAGES.SKIN106N,
                dayHand: IMAGES.HAND_SKIN106D,
                nightHand: IMAGES.HAND_SKIN106N,
                rarity: RARITY.AMETHYST,
                author: "Taco4Life",
                name: "Cthulhu"
            }, {
                id: 143,
                day: IMAGES.SKIN119D,
                night: IMAGES.SKIN119N,
                dayHand: IMAGES.HAND_SKIN119D,
                nightHand: IMAGES.HAND_SKIN119N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Mr. Cactus"
            }, {
                id: 144,
                day: IMAGES.SKIN120D,
                night: IMAGES.SKIN120N,
                dayHand: IMAGES.HAND_SKIN120D,
                nightHand: IMAGES.HAND_SKIN120N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Momo"
            }, {
                id: 95,
                day: IMAGES.SKIN70D,
                night: IMAGES.SKIN70N,
                dayHand: IMAGES.HAND_SKIN70D,
                nightHand: IMAGES.HAND_SKIN70N,
                rarity: RARITY.REIDITE,
                author: "Taco4Life",
                name: "Mr. Garlic"
            }, {
                id: 76,
                day: IMAGES.SKIN51D,
                night: IMAGES.SKIN51N,
                dayHand: IMAGES.HAND_SKIN51D,
                nightHand: IMAGES.HAND_SKIN51N,
                rarity: RARITY.REIDITE,
                author: "Winter",
                name: "Robot Dragon"
            }, {
                id: 44,
                day: IMAGES.SKIN1D,
                night: IMAGES.SKIN1N,
                dayHand: IMAGES.HAND_SKIN1D,
                nightHand: IMAGES.HAND_SKIN1N,
                rarity: RARITY.REIDITE,
                author: "Winter",
                name: "Lava Dragon Version 1"
            }, {
                id: 90,
                day: IMAGES.SKIN65D,
                night: IMAGES.SKIN65N,
                dayHand: IMAGES.HAND_SKIN65D,
                nightHand: IMAGES.HAND_SKIN65N,
                rarity: RARITY.REIDITE,
                author: "ExpertyAnimations",
                name: "Lava Dragon Version 2"
            }, {
                id: 124,
                day: IMAGES.SKIN99D,
                night: IMAGES.SKIN99N,
                dayHand: IMAGES.HAND_SKIN99D,
                nightHand: IMAGES.HAND_SKIN99N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Lava Dragon Version 3"
            }, {
                id: 45,
                day: IMAGES.SKIN12D,
                night: IMAGES.SKIN12N,
                dayHand: IMAGES.HAND_SKIN12D,
                nightHand: IMAGES.HAND_SKIN12N,
                rarity: RARITY.REIDITE,
                author: "Sushui",
                name: "Ice Dragon Version 1"
            }, {
                id: 46,
                day: IMAGES.SKIN13D,
                night: IMAGES.SKIN13N,
                dayHand: IMAGES.HAND_SKIN13D,
                nightHand: IMAGES.HAND_SKIN13N,
                rarity: RARITY.REIDITE,
                author: "Winter",
                name: "Ice Dragon Version 2"
            }, {
                id: 108,
                day: IMAGES.SKIN83D,
                night: IMAGES.SKIN83N,
                dayHand: IMAGES.HAND_SKIN83D,
                nightHand: IMAGES.HAND_SKIN83N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Ice Dragon Version 3"
            }, {
                id: 123,
                day: IMAGES.SKIN98D,
                night: IMAGES.SKIN98N,
                dayHand: IMAGES.HAND_SKIN98D,
                nightHand: IMAGES.HAND_SKIN98N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Baby Dragon Version 1"
            }, {
                id: 128,
                day: IMAGES.SKIN103D,
                night: IMAGES.SKIN103N,
                dayHand: IMAGES.HAND_SKIN103D,
                nightHand: IMAGES.HAND_SKIN103N,
                rarity: RARITY.REIDITE,
                author: "MADBalgouthi",
                name: "Baby Dragon Version 2"
            }, {
                id: 125,
                day: IMAGES.SKIN100D,
                night: IMAGES.SKIN100N,
                dayHand: IMAGES.HAND_SKIN100D,
                nightHand: IMAGES.HAND_SKIN100N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Baby Lava"
            }, {
                id: 47,
                day: IMAGES.SKIN21D,
                night: IMAGES.SKIN21N,
                dayHand: IMAGES.HAND_SKIN21D,
                nightHand: IMAGES.HAND_SKIN21N,
                rarity: RARITY.REIDITE,
                author: "Taco4Life",
                name: "Kraken"
            }, {
                id: 129,
                day: IMAGES.SKIN104D,
                night: IMAGES.SKIN104N,
                dayHand: IMAGES.HAND_SKIN104D,
                nightHand: IMAGES.HAND_SKIN104N,
                rarity: RARITY.REIDITE,
                author: "Taco4Life",
                name: "Sandworm"
            }, {
                id: 63,
                day: IMAGES.SKIN38D,
                night: IMAGES.SKIN38N,
                dayHand: IMAGES.HAND_SKIN38D,
                nightHand: IMAGES.HAND_SKIN38N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Mr. Golden Bread"
            }, {
                id: 67,
                day: IMAGES.SKIN42D,
                night: IMAGES.SKIN42N,
                dayHand: IMAGES.HAND_SKIN42D,
                nightHand: IMAGES.HAND_SKIN42N,
                rarity: RARITY.REIDITE,
                author: "ForgottenHeroe",
                name: "Starver Ores"
            }, {
                id: 130,
                day: IMAGES.SKIN105D,
                night: IMAGES.SKIN105N,
                dayHand: IMAGES.HAND_SKIN105D,
                nightHand: IMAGES.HAND_SKIN105N,
                rarity: RARITY.REIDITE,
                author: "Taco4Life",
                name: "Poo"
            }, {
                id: 89,
                day: IMAGES.SKIN64D,
                night: IMAGES.SKIN64N,
                dayHand: IMAGES.HAND_SKIN64D,
                nightHand: IMAGES.HAND_SKIN64N,
                rarity: RARITY.REIDITE,
                author: "Poinet",
                name: "Volcano Starver"
            }, {
                id: 112,
                day: IMAGES.SKIN87D,
                night: IMAGES.SKIN87N,
                dayHand: IMAGES.HAND_SKIN87D,
                nightHand: IMAGES.HAND_SKIN87N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Lava Starver"
            }, {
                id: 48,
                day: IMAGES.SKIN_ROBOTD,
                night: IMAGES.SKIN_ROBOTN,
                dayHand: IMAGES.HAND_ROBOTD,
                nightHand: IMAGES.HAND_ROBOTN,
                rarity: RARITY.SPECIAL,
                author: "eogito",
                name: "Robot"
            }, {
                id: 110,
                day: IMAGES.SKIN85D,
                night: IMAGES.SKIN85N,
                dayHand: IMAGES.HAND_SKIN85D,
                nightHand: IMAGES.HAND_SKIN85N,
                rarity: RARITY.SPECIAL,
                author: "pizza wa",
                name: "Blue Butterfly"
            }, {
                id: 157,
                day: IMAGES.SKIN133D,
                night: IMAGES.SKIN133N,
                dayHand: IMAGES.HAND_SKIN133D,
                nightHand: IMAGES.HAND_SKIN133N,
                rarity: RARITY.SPECIAL,
                author: "eogito",
                name: "Yrifox"
            }, {
                id: 165,
                day: IMAGES.SKIN141D,
                night: IMAGES.SKIN141N,
                dayHand: IMAGES.HAND_SKIN141D,
                nightHand: IMAGES.HAND_SKIN141N,
                rarity: RARITY.SPECIAL,
                author: "OmarJr13",
                name: "Blob Skin"
            }],
            BAG: [{
                id: 0,
                day: IMAGES.BAGD,
                night: IMAGES.BAGN,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Bag 1"
            }, {
                id: 1,
                day: IMAGES.BAG0D,
                night: IMAGES.BAG0N,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Old Bag"
            }, {
                id: 2,
                day: IMAGES.BAG4D,
                night: IMAGES.BAG4N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Bag 2"
            }, {
                id: 3,
                day: IMAGES.BAG5D,
                night: IMAGES.BAG5N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Bag 3"
            }, {
                id: 4,
                day: IMAGES.BAG6D,
                night: IMAGES.BAG6N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Bag 4"
            }, {
                id: 5,
                day: IMAGES.BAG7D,
                night: IMAGES.BAG7N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Bag 5"
            }, {
                id: 11,
                day: IMAGES.BAG23D,
                night: IMAGES.BAG23N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Wood Pickaxe Bag"
            }, {
                id: 19,
                day: IMAGES.BAG16D,
                night: IMAGES.BAG16N,
                rarity: RARITY.WOOD,
                author: "Starve.io ",
                name: "Wood Carrier"
            }, {
                id: 37,
                day: IMAGES.BAG36D,
                night: IMAGES.BAG36N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Bag 6"
            }, {
                id: 39,
                day: IMAGES.BAG38D,
                night: IMAGES.BAG38N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Bag with Wooden Swords"
            }, {
                id: 44,
                day: IMAGES.BAG43D,
                night: IMAGES.BAG43N,
                rarity: RARITY.WOOD,
                author: "Communist",
                name: "Big Bag"
            }, {
                id: 7,
                day: IMAGES.BAG14D,
                night: IMAGES.BAG14N,
                rarity: RARITY.STONE,
                author: "Communist",
                name: "Bag 6"
            }, {
                id: 8,
                day: IMAGES.BAG_EASTERD,
                night: IMAGES.BAG_EASTERN,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Easter Bag"
            }, {
                id: 9,
                day: IMAGES.BAG_STARD,
                night: IMAGES.BAG_STARN,
                rarity: RARITY.STONE,
                author: "pizza wa",
                name: "Star Bag"
            }, {
                id: 10,
                day: IMAGES.BAG9D,
                night: IMAGES.BAG9N,
                rarity: RARITY.STONE,
                author: "eogito",
                name: "Winter Bag"
            }, {
                id: 20,
                day: IMAGES.BAG17D,
                night: IMAGES.BAG17N,
                rarity: RARITY.STONE,
                author: "Starve.io ",
                name: "Stone Carrier"
            }, {
                id: 24,
                day: IMAGES.BAG24D,
                night: IMAGES.BAG24N,
                rarity: RARITY.STONE,
                author: "eogito",
                name: "Stone Pickaxe Bag"
            }, {
                id: 6,
                day: IMAGES.BAG13D,
                night: IMAGES.BAG13N,
                rarity: RARITY.STONE,
                author: "Communist",
                name: "Bag Camouflage"
            }, {
                id: 38,
                day: IMAGES.BAG37D,
                night: IMAGES.BAG37N,
                rarity: RARITY.STONE,
                author: "eogito",
                name: "Bag with Stone Swords"
            }, {
                id: 54,
                day: IMAGES.BAG53D,
                night: IMAGES.BAG53N,
                rarity: RARITY.STONE,
                author: "eogito",
                name: "Cow Bag"
            }, {
                id: 59,
                day: IMAGES.BAG58D,
                night: IMAGES.BAG58N,
                rarity: RARITY.STONE,
                author: "CrysTal",
                name: "Starver Bag"
            }, {
                id: 62,
                day: IMAGES.BAG61D,
                night: IMAGES.BAG61N,
                rarity: RARITY.STONE,
                author: "CrysTal",
                name: "Crystal Sky Bag"
            }, {
                id: 13,
                day: IMAGES.BAG10D,
                night: IMAGES.BAG10N,
                rarity: RARITY.GOLD,
                author: "pizza wa",
                name: "Honey Pot"
            }, {
                id: 21,
                day: IMAGES.BAG18D,
                night: IMAGES.BAG18N,
                rarity: RARITY.GOLD,
                author: "Starve.io ",
                name: "Gold Carrier"
            }, {
                id: 30,
                day: IMAGES.BAG25D,
                night: IMAGES.BAG25N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Gold Pickaxe Bag"
            }, {
                id: 29,
                day: IMAGES.BAG31D,
                night: IMAGES.BAG31N,
                rarity: RARITY.GOLD,
                author: "Ariel",
                name: "Mr and Mrs Bakers"
            }, {
                id: 41,
                day: IMAGES.BAG40D,
                night: IMAGES.BAG40N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Bag with Golden Swords"
            }, {
                id: 47,
                day: IMAGES.BAG46D,
                night: IMAGES.BAG46N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Explorer Bag"
            }, {
                id: 51,
                day: IMAGES.BAG50D,
                night: IMAGES.BAG50N,
                rarity: RARITY.GOLD,
                author: "pizza wa",
                name: "Bamboo Bag"
            }, {
                id: 53,
                day: IMAGES.BAG52D,
                night: IMAGES.BAG52N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Mummy Bag"
            }, {
                id: 58,
                day: IMAGES.BAG57D,
                night: IMAGES.BAG57N,
                rarity: RARITY.GOLD,
                author: "MADBalgouthi",
                name: "Watermelon Bag"
            }, {
                id: 60,
                day: IMAGES.BAG59D,
                night: IMAGES.BAG60N,
                rarity: RARITY.GOLD,
                author: "Taco4Life",
                name: "Garlic Bag"
            }, {
                id: 61,
                day: IMAGES.BAG60D,
                night: IMAGES.BAG59N,
                rarity: RARITY.GOLD,
                author: "Taco4Life",
                name: "Pumpkin Bag"
            }, {
                id: 64,
                day: IMAGES.BAG63D,
                night: IMAGES.BAG63N,
                rarity: RARITY.GOLD,
                author: "upfiz",
                name: "Oil Barel bag"
            }, {
                id: 67,
                day: IMAGES.BAG68D,
                night: IMAGES.BAG68N,
                rarity: RARITY.GOLD,
                author: "pizza wa",
                name: "Tree Bag"
            }, {
                id: 14,
                day: IMAGES.BAG1D,
                night: IMAGES.BAG1N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "a Rabbit in my Bag"
            }, {
                id: 15,
                day: IMAGES.BAG2D,
                night: IMAGES.BAG2N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Bird's nest"
            }, {
                id: 16,
                day: IMAGES.BAG3D,
                night: IMAGES.BAG3N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "a Fish on your Back"
            }, {
                id: 17,
                day: IMAGES.BAG8D,
                night: IMAGES.BAG8N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "a Squirrel in my Bag"
            }, {
                id: 22,
                day: IMAGES.BAG19D,
                night: IMAGES.BAG19N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io ",
                name: "Diamond Carrier"
            }, {
                id: 12,
                day: IMAGES.BAG22D,
                night: IMAGES.BAG22N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Resources Bag"
            }, {
                id: 32,
                day: IMAGES.BAG26D,
                night: IMAGES.BAG26N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Diamond Pickaxe Bag"
            }, {
                id: 40,
                day: IMAGES.BAG39D,
                night: IMAGES.BAG39N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Bag with Diamond Swords"
            }, {
                id: 45,
                day: IMAGES.BAG44D,
                night: IMAGES.BAG44N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "My Cake Bag"
            }, {
                id: 46,
                day: IMAGES.BAG45D,
                night: IMAGES.BAG45N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "My Christmas Cake Bag"
            }, {
                id: 52,
                day: IMAGES.BAG51D,
                night: IMAGES.BAG51N,
                rarity: RARITY.DIAMOND,
                author: "MADBalgouthi",
                name: "Fish Bag"
            }, {
                id: 65,
                day: IMAGES.BAG64D,
                night: IMAGES.BAG64N,
                rarity: RARITY.DIAMOND,
                author: "pizza wa",
                name: "Cloud Bag"
            }, {
                id: 68,
                day: IMAGES.BAG66D,
                night: IMAGES.BAG66N,
                rarity: RARITY.DIAMOND,
                author: "pizza wa",
                name: "Bee Bag"
            }, {
                id: 48,
                day: IMAGES.BAG47D,
                night: IMAGES.BAG47N,
                rarity: RARITY.AMETHYST,
                author: "fatant",
                name: "Natural Bag"
            }, {
                id: 23,
                day: IMAGES.BAG20D,
                night: IMAGES.BAG20N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io ",
                name: "Amethyst Carrier"
            }, {
                id: 25,
                day: IMAGES.BAG27D,
                night: IMAGES.BAG27N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Amethyst Pickaxe Bag"
            }, {
                id: 28,
                day: IMAGES.BAG30D,
                night: IMAGES.BAG30N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Your Baby"
            }, {
                id: 33,
                day: IMAGES.BAG32D,
                night: IMAGES.BAG32N,
                rarity: RARITY.AMETHYST,
                author: "pizza wa",
                name: "Tropical Bag"
            }, {
                id: 43,
                day: IMAGES.BAG42D,
                night: IMAGES.BAG42N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Bag with Amethyst Swords"
            }, {
                id: 35,
                day: IMAGES.BAG34D,
                night: IMAGES.BAG34N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Ice Bag"
            }, {
                id: 50,
                day: IMAGES.BAG49D,
                night: IMAGES.BAG49N,
                rarity: RARITY.AMETHYST,
                author: "Taco4Life",
                name: "Thornbush Bag"
            }, {
                id: 56,
                day: IMAGES.BAG55D,
                night: IMAGES.BAG55N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Autumn Bag"
            }, {
                id: 57,
                day: IMAGES.BAG56D,
                night: IMAGES.BAG56N,
                rarity: RARITY.AMETHYST,
                author: "Taco4Life",
                name: "Dino Egg Bag"
            }, {
                id: 66,
                day: IMAGES.BAG65D,
                night: IMAGES.BAG65N,
                rarity: RARITY.AMETHYST,
                author: "pizza wa",
                name: "Magic Cloud Bag"
            }, {
                id: 69,
                day: IMAGES.BAG67D,
                night: IMAGES.BAG67N,
                rarity: RARITY.AMETHYST,
                author: "pizza wa",
                name: "Chest Bag"
            }, {
                id: 31,
                day: IMAGES.BAG21D,
                night: IMAGES.BAG21N,
                rarity: RARITY.REIDITE,
                author: "Starve.io ",
                name: "Reidite Carrier"
            }, {
                id: 18,
                day: IMAGES.BAG11D,
                night: IMAGES.BAG11N,
                rarity: RARITY.REIDITE,
                author: "Winter",
                name: "Lava Bag"
            }, {
                id: 49,
                day: IMAGES.BAG48D,
                night: IMAGES.BAG48N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Lava Bag 2"
            }, {
                id: 36,
                day: IMAGES.BAG35D,
                night: IMAGES.BAG35N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Dragon Bag"
            }, {
                id: 55,
                day: IMAGES.BAG54D,
                night: IMAGES.BAG54N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Winter Ice Bag"
            }, {
                id: 26,
                day: IMAGES.BAG28D,
                night: IMAGES.BAG28N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Reidite Pickaxe Bag"
            }, {
                id: 27,
                day: IMAGES.BAG29D,
                night: IMAGES.BAG29N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Octopus Bowl"
            }, {
                id: 34,
                day: IMAGES.BAG33D,
                night: IMAGES.BAG33N,
                rarity: RARITY.REIDITE,
                author: "Taco4Life",
                name: "Cave Bag"
            }, {
                id: 42,
                day: IMAGES.BAG41D,
                night: IMAGES.BAG41N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Bag with Reidite Swords"
            }, {
                id: 63,
                day: IMAGES.BAG62D,
                night: IMAGES.BAG62N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Engineer Bag"
            }],
            CRATE: [{
                id: 0,
                day: IMAGES.CRATE7D,
                night: IMAGES.CRATE7N,
                rarity: RARITY.FREE,
                author: "eogito",
                name: "Wooden Dead Box"
            }, {
                id: 1,
                day: IMAGES.CRATE6D,
                night: IMAGES.CRATE6N,
                rarity: RARITY.FREE,
                author: "eogito",
                name: "Hidden item"
            }, {
                id: 2,
                day: IMAGES.CRATE1D,
                night: IMAGES.CRATE1N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Wooden Box 1"
            }, {
                id: 3,
                day: IMAGES.CRATE2D,
                night: IMAGES.CRATE2N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Wooden Box 2"
            }, {
                id: 4,
                day: IMAGES.CRATE3D,
                night: IMAGES.CRATE3N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Wooden Box 3"
            }, {
                id: 5,
                day: IMAGES.CRATE4D,
                night: IMAGES.CRATE4N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Broken Wooden Box"
            }, {
                id: 6,
                day: IMAGES.CRATE5D,
                night: IMAGES.CRATE5N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Wooden Box"
            }, {
                id: 7,
                day: IMAGES.CRATE8D,
                night: IMAGES.CRATE8N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Wooden Battle Box"
            }, {
                id: 8,
                day: IMAGES.CRATE9D,
                night: IMAGES.CRATE9N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Wooden Box with a Cross"
            }, {
                id: 9,
                day: IMAGES.CRATE10D,
                night: IMAGES.CRATE10N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Wooden Box with Bubbles"
            }, {
                id: 10,
                day: IMAGES.CRATE11D,
                night: IMAGES.CRATE11N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Wooden Box with Eyes"
            }, {
                id: 11,
                day: IMAGES.CRATE12D,
                night: IMAGES.CRATE12N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Dark Wooden Box"
            }, {
                id: 38,
                day: IMAGES.CRATE39D,
                night: IMAGES.CRATE39N,
                rarity: RARITY.WOOD,
                author: "Weddlz",
                name: "Noob Box"
            }, {
                id: 12,
                day: IMAGES.CRATE13D,
                night: IMAGES.CRATE13N,
                rarity: RARITY.STONE,
                author: "eogito",
                name: "Wooden and Stone Box"
            }, {
                id: 14,
                day: IMAGES.CRATE19D,
                night: IMAGES.CRATE19N,
                rarity: RARITY.STONE,
                author: "pizza wa",
                name: "Star Box 1"
            }, {
                id: 15,
                day: IMAGES.CRATE20D,
                night: IMAGES.CRATE20N,
                rarity: RARITY.STONE,
                author: "pizza wa",
                name: "Star Box 2"
            }, {
                id: 27,
                day: IMAGES.CRATE29D,
                night: IMAGES.CRATE29N,
                rarity: RARITY.STONE,
                author: "eogito",
                name: "Flower Box"
            }, {
                id: 46,
                day: IMAGES.CRATE47D,
                night: IMAGES.CRATE47N,
                rarity: RARITY.STONE,
                author: "MADBalgouthi",
                name: "Blue Box"
            }, {
                id: 19,
                day: IMAGES.CRATE21D,
                night: IMAGES.CRATE21N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Beehive"
            }, {
                id: 13,
                day: IMAGES.CRATE14D,
                night: IMAGES.CRATE14N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Wooden and Golden Box"
            }, {
                id: 21,
                day: IMAGES.CRATE22D,
                night: IMAGES.CRATE22N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Gravestone"
            }, {
                id: 25,
                day: IMAGES.CRATE26D,
                night: IMAGES.CRATE26N,
                rarity: RARITY.GOLD,
                author: "Communist",
                name: "Sky Box"
            }, {
                id: 29,
                day: IMAGES.CRATE30D,
                night: IMAGES.CRATE30N,
                rarity: RARITY.GOLD,
                author: "Winter",
                name: "Golden Box"
            }, {
                id: 34,
                day: IMAGES.CRATE35D,
                night: IMAGES.CRATE35N,
                rarity: RARITY.GOLD,
                author: "Communist",
                name: "Water Crate"
            }, {
                id: 35,
                day: IMAGES.CRATE36D,
                night: IMAGES.CRATE36N,
                rarity: RARITY.GOLD,
                author: "Communist",
                name: "Glass Crate"
            }, {
                id: 16,
                day: IMAGES.CRATE15D,
                night: IMAGES.CRATE15N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Wooden and Diamond Box"
            }, {
                id: 18,
                day: IMAGES.CRATE18D,
                night: IMAGES.CRATE18N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Don't Hit Me"
            }, {
                id: 26,
                day: IMAGES.CRATE27D,
                night: IMAGES.CRATE27N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Underwater Box"
            }, {
                id: 31,
                day: IMAGES.CRATE32D,
                night: IMAGES.CRATE32N,
                rarity: RARITY.DIAMOND,
                author: "Communist",
                name: "Items Pile"
            }, {
                id: 32,
                day: IMAGES.CRATE33D,
                night: IMAGES.CRATE33N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Cake Box"
            }, {
                id: 33,
                day: IMAGES.CRATE34D,
                night: IMAGES.CRATE34N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Christmas Cake Box"
            }, {
                id: 36,
                day: IMAGES.CRATE37D,
                night: IMAGES.CRATE37N,
                rarity: RARITY.DIAMOND,
                author: "Fukss",
                name: "Crab Box"
            }, {
                id: 42,
                day: IMAGES.CRATE43D,
                night: IMAGES.CRATE43N,
                rarity: RARITY.DIAMOND,
                author: "MADBalgouthi",
                name: "Fishing Box"
            }, {
                id: 22,
                day: IMAGES.CRATE23D,
                night: IMAGES.CRATE23N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Let me out of here"
            }, {
                id: 17,
                day: IMAGES.CRATE16D,
                night: IMAGES.CRATE16N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Wooden and Amethyst Box"
            }, {
                id: 24,
                day: IMAGES.CRATE25D,
                night: IMAGES.CRATE25N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Aquarium"
            }, {
                id: 28,
                day: IMAGES.CRATE28D,
                night: IMAGES.CRATE28N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Gift Box"
            }, {
                id: 40,
                day: IMAGES.CRATE41D,
                night: IMAGES.CRATE41N,
                rarity: RARITY.AMETHYST,
                author: "MADBalgouthi",
                name: "Open Watermelon Box"
            }, {
                id: 41,
                day: IMAGES.CRATE42D,
                night: IMAGES.CRATE42N,
                rarity: RARITY.AMETHYST,
                author: "MADBalgouthi",
                name: "Watermelon Box"
            }, {
                id: 39,
                day: IMAGES.CRATE40D,
                night: IMAGES.CRATE40N,
                rarity: RARITY.AMETHYST,
                author: "Taco4Life",
                name: "Thornbush Box"
            }, {
                id: 43,
                day: IMAGES.CRATE44D,
                night: IMAGES.CRATE44N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Rabbit in the Box"
            }, {
                id: 47,
                day: IMAGES.CRATE48D,
                night: IMAGES.CRATE48N,
                rarity: RARITY.AMETHYST,
                author: "Taco4Life",
                name: "Garlic Plot"
            }, {
                id: 48,
                day: IMAGES.CRATE49D,
                night: IMAGES.CRATE49N,
                rarity: RARITY.AMETHYST,
                author: "Taco4Life",
                name: "Pumpkin Plot"
            }, {
                id: 45,
                day: IMAGES.CRATE46D,
                night: IMAGES.CRATE46N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Autumn Box"
            }, {
                id: 44,
                day: IMAGES.CRATE45D,
                night: IMAGES.CRATE45N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Winter Box"
            }, {
                id: 20,
                day: IMAGES.CRATE17D,
                night: IMAGES.CRATE17N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Metal and Reidite Box"
            }, {
                id: 23,
                day: IMAGES.CRATE24D,
                night: IMAGES.CRATE24N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Kraken Box"
            }, {
                id: 30,
                day: IMAGES.CRATE31D,
                night: IMAGES.CRATE31N,
                rarity: RARITY.REIDITE,
                author: "Winter",
                name: "Lava Box"
            }, {
                id: 37,
                day: IMAGES.CRATE38D,
                night: IMAGES.CRATE38N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Lava Box 2"
            }, {
                id: 49,
                day: IMAGES.CRATE50D,
                night: IMAGES.CRATE50N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Rabbit"
            }, {
                id: 50,
                day: IMAGES.CRATE51D,
                night: IMAGES.CRATE51N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Wolf"
            }, {
                id: 51,
                day: IMAGES.CRATE52D,
                night: IMAGES.CRATE52N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Spider"
            }, {
                id: 52,
                day: IMAGES.CRATE53D,
                night: IMAGES.CRATE53N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Hawk"
            }, {
                id: 53,
                day: IMAGES.CRATE54D,
                night: IMAGES.CRATE54N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Bear"
            }, {
                id: 54,
                day: IMAGES.CRATE55D,
                night: IMAGES.CRATE55N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Fox"
            }, {
                id: 55,
                day: IMAGES.CRATE56D,
                night: IMAGES.CRATE56N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Baby Mammoth"
            }, {
                id: 56,
                day: IMAGES.CRATE57D,
                night: IMAGES.CRATE57N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Mammoth"
            }, {
                id: 57,
                day: IMAGES.CRATE58D,
                night: IMAGES.CRATE58N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Sandworm"
            }, {
                id: 58,
                day: IMAGES.CRATE59D,
                night: IMAGES.CRATE59N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Vulture"
            }, {
                id: 59,
                day: IMAGES.CRATE60D,
                night: IMAGES.CRATE60N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Kraken"
            }, {
                id: 60,
                day: IMAGES.CRATE61D,
                night: IMAGES.CRATE61N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Piranha"
            }, {
                id: 61,
                day: IMAGES.CRATE62D,
                night: IMAGES.CRATE62N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Baby Dragon"
            }, {
                id: 62,
                day: IMAGES.CRATE63D,
                night: IMAGES.CRATE63N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Baby Lava"
            }, {
                id: 63,
                day: IMAGES.CRATE64D,
                night: IMAGES.CRATE64N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Dragon"
            }, {
                id: 64,
                day: IMAGES.CRATE65D,
                night: IMAGES.CRATE65N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Penguin"
            }, {
                id: 65,
                day: IMAGES.CRATE66D,
                night: IMAGES.CRATE66N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Lava Dragon"
            }, {
                id: 66,
                day: IMAGES.CRATE67D,
                night: IMAGES.CRATE67N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Boar"
            }, {
                id: 67,
                day: IMAGES.CRATE68D,
                night: IMAGES.CRATE68N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Fire mob"
            }, {
                id: 68,
                day: IMAGES.CRATE69D,
                night: IMAGES.CRATE69N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the Crab"
            }, {
                id: 69,
                day: IMAGES.CRATE70D,
                night: IMAGES.CRATE70N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Box of the King Crab"
            }, {
                id: 70,
                day: IMAGES.CRATE71D,
                night: IMAGES.CRATE71N,
                rarity: RARITY.GOLD,
                author: "CrysTal",
                name: "Crystal Sky Box"
            }, {
                id: 71,
                day: IMAGES.CRATE72D,
                night: IMAGES.CRATE72N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Dragon Box"
            }],
            BOOK: [{
                id: 0,
                day: IMAGES.BOOK0D,
                night: IMAGES.BOOK0N,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Book 1"
            }, {
                id: 1,
                day: IMAGES.BOOK3D,
                night: IMAGES.BOOK3N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Book 2"
            }, {
                id: 2,
                day: IMAGES.BOOK4D,
                night: IMAGES.BOOK4N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Book 3"
            }, {
                id: 3,
                day: IMAGES.BOOK5D,
                night: IMAGES.BOOK5N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Book 4"
            }, {
                id: 4,
                day: IMAGES.BOOK6D,
                night: IMAGES.BOOK6N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Damaged Book 1"
            }, {
                id: 18,
                day: IMAGES.BOOK18D,
                night: IMAGES.BOOK18N,
                rarity: RARITY.WOOD,
                author: "SeveR",
                name: "Damaged Book 2"
            }, {
                id: 5,
                day: IMAGES.BOOK1D,
                night: IMAGES.BOOK1N,
                rarity: RARITY.STONE,
                author: "Doctorpus",
                name: "Scroll"
            }, {
                id: 6,
                day: IMAGES.BOOK2D,
                night: IMAGES.BOOK2N,
                rarity: RARITY.STONE,
                author: "Doctorpus",
                name: "Clipboard"
            }, {
                id: 7,
                day: IMAGES.BOOK7D,
                night: IMAGES.BOOK7N,
                rarity: RARITY.STONE,
                author: "eogito",
                name: "Seed Book"
            }, {
                id: 20,
                day: IMAGES.BOOK20D,
                night: IMAGES.BOOK20N,
                rarity: RARITY.STONE,
                author: "Taco4Life",
                name: "Camo Book"
            }, {
                id: 24,
                day: IMAGES.BOOK24D,
                night: IMAGES.BOOK24N,
                rarity: RARITY.STONE,
                author: "Communist",
                name: "Stone Tablet"
            }, {
                id: 10,
                day: IMAGES.BOOK13D,
                night: IMAGES.BOOK13N,
                rarity: RARITY.GOLD,
                author: "pizza wa",
                name: "Star Book"
            }, {
                id: 8,
                day: IMAGES.BOOK9D,
                night: IMAGES.BOOK9N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Gold Book"
            }, {
                id: 15,
                day: IMAGES.BOOK15D,
                night: IMAGES.BOOK15N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Old Mysterious Paper"
            }, {
                id: 17,
                day: IMAGES.BOOK17D,
                night: IMAGES.BOOK17N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Gold Engraving"
            }, {
                id: 25,
                day: IMAGES.BOOK25D,
                night: IMAGES.BOOK25N,
                rarity: RARITY.GOLD,
                author: "fatant",
                name: "Ant Book"
            }, {
                id: 32,
                day: IMAGES.BOOK32D,
                night: IMAGES.BOOK32N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Mummy Book"
            }, {
                id: 37,
                day: IMAGES.BOOK39D,
                night: IMAGES.BOOK39N,
                rarity: RARITY.GOLD,
                author: "Taco4Life",
                name: "Garlic Book"
            }, {
                id: 38,
                day: IMAGES.BOOK38D,
                night: IMAGES.BOOK38N,
                rarity: RARITY.GOLD,
                author: "Taco4Life",
                name: "Pumpkin Book"
            }, {
                id: 39,
                day: IMAGES.BOOK40D,
                night: IMAGES.BOOK40N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Christmas Tree Book"
            }, {
                id: 11,
                day: IMAGES.BOOK10D,
                night: IMAGES.BOOK10N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Diamond Book"
            }, {
                id: 9,
                day: IMAGES.BOOK8D,
                night: IMAGES.BOOK8N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Obscure Book"
            }, {
                id: 16,
                day: IMAGES.BOOK16D,
                night: IMAGES.BOOK16N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Rolled Parchment"
            }, {
                id: 22,
                day: IMAGES.BOOK22D,
                night: IMAGES.BOOK22N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Cake Book"
            }, {
                id: 23,
                day: IMAGES.BOOK23D,
                night: IMAGES.BOOK23N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Christmas Cake Book"
            }, {
                id: 30,
                day: IMAGES.BOOK30D,
                night: IMAGES.BOOK30N,
                rarity: RARITY.DIAMOND,
                author: "MADBalgouthi",
                name: "Fish Book"
            }, {
                id: 31,
                day: IMAGES.BOOK31D,
                night: IMAGES.BOOK31N,
                rarity: RARITY.DIAMOND,
                author: "CrysTal",
                name: "Once upon a time"
            }, {
                id: 13,
                day: IMAGES.BOOK11D,
                night: IMAGES.BOOK11N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Amethyst Book"
            }, {
                id: 28,
                day: IMAGES.BOOK28D,
                night: IMAGES.BOOK28N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Paint Pallet"
            }, {
                id: 29,
                day: IMAGES.BOOK29D,
                night: IMAGES.BOOK29N,
                rarity: RARITY.AMETHYST,
                author: "CrysTal",
                name: "Watermelon Book"
            }, {
                id: 27,
                day: IMAGES.BOOK27D,
                night: IMAGES.BOOK27N,
                rarity: RARITY.AMETHYST,
                author: "Taco4Life",
                name: "Thornbush Book"
            }, {
                id: 35,
                day: IMAGES.BOOK35D,
                night: IMAGES.BOOK35N,
                rarity: RARITY.AMETHYST,
                author: "Taco4Life",
                name: "Menu"
            }, {
                id: 36,
                day: IMAGES.BOOK36D,
                night: IMAGES.BOOK36N,
                rarity: RARITY.AMETHYST,
                author: "CrysTal",
                name: "Lover Letter"
            }, {
                id: 40,
                day: IMAGES.BOOK41D,
                night: IMAGES.BOOK41N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Fresh-Baked Cookies"
            }, {
                id: 41,
                day: IMAGES.BOOK42D,
                night: IMAGES.BOOK42N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Inside, there is just a book."
            }, {
                id: 33,
                day: IMAGES.BOOK33D,
                night: IMAGES.BOOK33N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Winter Book"
            }, {
                id: 34,
                day: IMAGES.BOOK34D,
                night: IMAGES.BOOK34N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Autumn Book"
            }, {
                id: 14,
                day: IMAGES.BOOK12D,
                night: IMAGES.BOOK12N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Reidite Book"
            }, {
                id: 12,
                day: IMAGES.BOOK14D,
                night: IMAGES.BOOK14N,
                rarity: RARITY.REIDITE,
                author: "Winter",
                name: "Lava Book"
            }, {
                id: 26,
                day: IMAGES.BOOK26D,
                night: IMAGES.BOOK26N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Lava Book 2"
            }, {
                id: 19,
                day: IMAGES.BOOK19D,
                night: IMAGES.BOOK19N,
                rarity: RARITY.REIDITE,
                author: "Winter",
                name: "Ocean Mystery"
            }, {
                id: 21,
                day: IMAGES.BOOK21D,
                night: IMAGES.BOOK21N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Dragon Book"
            }, {
                id: 42,
                day: IMAGES.BOOK43D,
                night: IMAGES.BOOK43N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Engineer Book"
            }, {
                id: 43,
                day: IMAGES.BOOK44D,
                night: IMAGES.BOOK44N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Nightmare Book"
            }, {
                id: 44,
                day: IMAGES.BOOK45D,
                night: IMAGES.BOOK45N,
                rarity: RARITY.REIDITE,
                author: "aloner",
                name: "Mystery Book"
            }],
            ACCESSORY: [{
                id: 0,
                day: IMAGES.ACCESSORY0D,
                night: IMAGES.ACCESSORY0D,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Nothing"
            }, {
                id: 2,
                day: IMAGES.ACCESSORY4D,
                night: IMAGES.ACCESSORY4N,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Pink Cheeks"
            }, {
                id: 3,
                day: IMAGES.ACCESSORY5D,
                night: IMAGES.ACCESSORY5N,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Heart"
            }, {
                id: 1,
                day: IMAGES.ACCESSORY3D,
                night: IMAGES.ACCESSORY3N,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Bandage 1"
            }, {
                id: 4,
                day: IMAGES.ACCESSORY6D,
                night: IMAGES.ACCESSORY6N,
                rarity: RARITY.FREE,
                author: "Starve.io",
                name: "Flower 1"
            }, {
                id: 5,
                day: IMAGES.ACCESSORY8D,
                night: IMAGES.ACCESSORY8N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Bow 1"
            }, {
                id: 6,
                day: IMAGES.ACCESSORY9D,
                night: IMAGES.ACCESSORY9N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Bandage 2"
            }, {
                id: 7,
                day: IMAGES.ACCESSORY15D,
                night: IMAGES.ACCESSORY15N,
                rarity: RARITY.WOOD,
                author: "Starve.io",
                name: "Flower 2"
            }, {
                id: 8,
                day: IMAGES.ACCESSORY10D,
                night: IMAGES.ACCESSORY10N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Bandage 3"
            }, {
                id: 36,
                day: IMAGES.ACCESSORY36D,
                night: IMAGES.ACCESSORY36N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Foliage"
            }, {
                id: 59,
                day: IMAGES.ACCESSORY47D,
                night: IMAGES.ACCESSORY47N,
                rarity: RARITY.WOOD,
                author: "eogito",
                name: "Peaceful"
            }, {
                id: 67,
                day: IMAGES.ACCESSORY55D,
                night: IMAGES.ACCESSORY55N,
                rarity: RARITY.WOOD,
                author: "pizza wa",
                name: "Sparkles"
            }, {
                id: 68,
                day: IMAGES.ACCESSORY56D,
                night: IMAGES.ACCESSORY56N,
                rarity: RARITY.WOOD,
                author: "pizza wa",
                name: "Luxury"
            }, {
                id: 69,
                day: IMAGES.ACCESSORY57D,
                night: IMAGES.ACCESSORY57N,
                rarity: RARITY.WOOD,
                author: "pizza wa",
                name: "Snow Flakes Crown"
            }, {
                id: 17,
                day: IMAGES.ACCESSORY17D,
                night: IMAGES.ACCESSORY17N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Glasses 1"
            }, {
                id: 10,
                day: IMAGES.ACCESSORY7D,
                night: IMAGES.ACCESSORY7N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Bow 2"
            }, {
                id: 11,
                day: IMAGES.ACCESSORY13D,
                night: IMAGES.ACCESSORY13N,
                rarity: RARITY.STONE,
                author: "pizza wa",
                name: "Little Stars"
            }, {
                id: 12,
                day: IMAGES.ACCESSORY11D,
                night: IMAGES.ACCESSORY11N,
                rarity: RARITY.STONE,
                author: "eogito",
                name: "Pirate Eye Patch 1"
            }, {
                id: 44,
                day: IMAGES.ACCESSORY44D,
                night: IMAGES.ACCESSORY44N,
                rarity: RARITY.STONE,
                author: "Taco4Life",
                name: "Pirate Eye Patch 2"
            }, {
                id: 23,
                day: IMAGES.ACCESSORY23D,
                night: IMAGES.ACCESSORY23N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Clown nose"
            }, {
                id: 16,
                day: IMAGES.ACCESSORY2D,
                night: IMAGES.ACCESSORY2N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Eye Patch"
            }, {
                id: 30,
                day: IMAGES.ACCESSORY30D,
                night: IMAGES.ACCESSORY30N,
                rarity: RARITY.STONE,
                author: "eogito",
                name: "Flower 3"
            }, {
                id: 38,
                day: IMAGES.ACCESSORY38D,
                night: IMAGES.ACCESSORY38N,
                rarity: RARITY.STONE,
                author: "Winter",
                name: "False Nose"
            }, {
                id: 74,
                day: IMAGES.ACCESSORY62D,
                night: IMAGES.ACCESSORY62N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Red Cloth"
            }, {
                id: 75,
                day: IMAGES.ACCESSORY63D,
                night: IMAGES.ACCESSORY63N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Blue Cloth"
            }, {
                id: 79,
                day: IMAGES.ACCESSORY67D,
                night: IMAGES.ACCESSORY67N,
                rarity: RARITY.STONE,
                author: "Starve.io",
                name: "Transparent Mask"
            }, {
                id: 89,
                day: IMAGES.ACCESSORY77D,
                night: IMAGES.ACCESSORY77N,
                rarity: RARITY.STONE,
                author: "Anyone want to play?",
                name: "Starve.io Anime"
            }, {
                id: 94,
                day: IMAGES.ACCESSORY78D,
                night: IMAGES.ACCESSORY78N,
                rarity: RARITY.STONE,
                author: "Ant",
                name: "Hero Mask"
            }, {
                id: 15,
                day: IMAGES.ACCESSORY16D,
                night: IMAGES.ACCESSORY16N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Star Glasses"
            }, {
                id: 21,
                day: IMAGES.ACCESSORY21D,
                night: IMAGES.ACCESSORY21N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Great-aunt's Glasses"
            }, {
                id: 24,
                day: IMAGES.ACCESSORY24D,
                night: IMAGES.ACCESSORY24N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Little Starver"
            }, {
                id: 22,
                day: IMAGES.ACCESSORY22D,
                night: IMAGES.ACCESSORY22N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Little Glasses"
            }, {
                id: 13,
                day: IMAGES.ACCESSORY14D,
                night: IMAGES.ACCESSORY14N,
                rarity: RARITY.GOLD,
                author: "Starve.io",
                name: "Flower Chain"
            }, {
                id: 29,
                day: IMAGES.ACCESSORY29D,
                night: IMAGES.ACCESSORY29N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Horns"
            }, {
                id: 31,
                day: IMAGES.ACCESSORY31D,
                night: IMAGES.ACCESSORY31N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Golden Flower"
            }, {
                id: 40,
                day: IMAGES.ACCESSORY40D,
                night: IMAGES.ACCESSORY40N,
                rarity: RARITY.GOLD,
                author: "pizza wa",
                name: "Sleeping Mask"
            }, {
                id: 57,
                day: IMAGES.ACCESSORY50D,
                night: IMAGES.ACCESSORY50N,
                rarity: RARITY.GOLD,
                author: "Taco4Life",
                name: "Fish on your head"
            }, {
                id: 58,
                day: IMAGES.ACCESSORY46D,
                night: IMAGES.ACCESSORY46N,
                rarity: RARITY.GOLD,
                author: "eogito",
                name: "Rose"
            }, {
                id: 91,
                day: IMAGES.ACCESSORY80D,
                night: IMAGES.ACCESSORY80N,
                rarity: RARITY.GOLD,
                author: "upfiz",
                name: "Grey Scarf"
            }, {
                id: 92,
                day: IMAGES.ACCESSORY81D,
                night: IMAGES.ACCESSORY81N,
                rarity: RARITY.GOLD,
                author: "upfiz",
                name: "Black Scarf"
            }, {
                id: 93,
                day: IMAGES.ACCESSORY82D,
                night: IMAGES.ACCESSORY82N,
                rarity: RARITY.GOLD,
                author: "upfiz",
                name: "Skull Mask"
            }, {
                id: 9,
                day: IMAGES.ACCESSORY1D,
                night: IMAGES.ACCESSORY1N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Fancy Glasses"
            }, {
                id: 25,
                day: IMAGES.ACCESSORY25D,
                night: IMAGES.ACCESSORY25N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Medecin Mask"
            }, {
                id: 14,
                day: IMAGES.ACCESSORY12D,
                night: IMAGES.ACCESSORY12N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Mr. Mayor"
            }, {
                id: 19,
                day: IMAGES.ACCESSORY19D,
                night: IMAGES.ACCESSORY19N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Sunglasses 2"
            }, {
                id: 28,
                day: IMAGES.ACCESSORY28D,
                night: IMAGES.ACCESSORY28N,
                rarity: RARITY.DIAMOND,
                author: "pizza wa",
                name: "Starfish"
            }, {
                id: 37,
                day: IMAGES.ACCESSORY37D,
                night: IMAGES.ACCESSORY37N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Berry"
            }, {
                id: 39,
                day: IMAGES.ACCESSORY39D,
                night: IMAGES.ACCESSORY39N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Flake"
            }, {
                id: 43,
                day: IMAGES.ACCESSORY43D,
                night: IMAGES.ACCESSORY43N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Leaf "
            }, {
                id: 61,
                day: IMAGES.ACCESSORY49D,
                night: IMAGES.ACCESSORY49N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "A sword in your head"
            }, {
                id: 62,
                day: IMAGES.ACCESSORY51D,
                night: IMAGES.ACCESSORY51N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Winter Scarf"
            }, {
                id: 64,
                day: IMAGES.ACCESSORY53D,
                night: IMAGES.ACCESSORY53N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Winter Scarf 2"
            }, {
                id: 66,
                day: IMAGES.ACCESSORY54D,
                night: IMAGES.ACCESSORY54N,
                rarity: RARITY.DIAMOND,
                author: "eogito",
                name: "Winter Scarf 3"
            }, {
                id: 70,
                day: IMAGES.ACCESSORY58D,
                night: IMAGES.ACCESSORY58N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Mask with animal tracks"
            }, {
                id: 71,
                day: IMAGES.ACCESSORY59D,
                night: IMAGES.ACCESSORY59N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Spring Mask"
            }, {
                id: 72,
                day: IMAGES.ACCESSORY60D,
                night: IMAGES.ACCESSORY60N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Pink Mask"
            }, {
                id: 73,
                day: IMAGES.ACCESSORY61D,
                night: IMAGES.ACCESSORY61N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Blue Mask"
            }, {
                id: 76,
                day: IMAGES.ACCESSORY64D,
                night: IMAGES.ACCESSORY64N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Military Mask"
            }, {
                id: 77,
                day: IMAGES.ACCESSORY65D,
                night: IMAGES.ACCESSORY65N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Orange Mask"
            }, {
                id: 78,
                day: IMAGES.ACCESSORY66D,
                night: IMAGES.ACCESSORY66N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "White and Red Points Mask"
            }, {
                id: 80,
                day: IMAGES.ACCESSORY68D,
                night: IMAGES.ACCESSORY68N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Stick out your tongue Mask"
            }, {
                id: 81,
                day: IMAGES.ACCESSORY69D,
                night: IMAGES.ACCESSORY69N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Two Teeth Mask"
            }, {
                id: 82,
                day: IMAGES.ACCESSORY70D,
                night: IMAGES.ACCESSORY70N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Make-up Mask"
            }, {
                id: 83,
                day: IMAGES.ACCESSORY71D,
                night: IMAGES.ACCESSORY71N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Sad Mask"
            }, {
                id: 84,
                day: IMAGES.ACCESSORY72D,
                night: IMAGES.ACCESSORY72N,
                rarity: RARITY.DIAMOND,
                author: "Starve.io",
                name: "Happy Mask"
            }, {
                id: 90,
                day: IMAGES.ACCESSORY79D,
                night: IMAGES.ACCESSORY79N,
                rarity: RARITY.DIAMOND,
                author: "aloner",
                name: "Blood"
            }, {
                id: 27,
                day: IMAGES.ACCESSORY27D,
                night: IMAGES.ACCESSORY27N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Clown Face"
            }, {
                id: 20,
                day: IMAGES.ACCESSORY20D,
                night: IMAGES.ACCESSORY20N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Sunglasses 3"
            }, {
                id: 32,
                day: IMAGES.ACCESSORY32D,
                night: IMAGES.ACCESSORY32N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Engineer's Glasses"
            }, {
                id: 33,
                day: IMAGES.ACCESSORY33D,
                night: IMAGES.ACCESSORY33N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Engineer's Monocle"
            }, {
                id: 34,
                day: IMAGES.ACCESSORY34D,
                night: IMAGES.ACCESSORY34N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Mauve's butt"
            }, {
                id: 41,
                day: IMAGES.ACCESSORY41D,
                night: IMAGES.ACCESSORY41N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Lapa Head"
            }, {
                id: 42,
                day: IMAGES.ACCESSORY42D,
                night: IMAGES.ACCESSORY42N,
                rarity: RARITY.AMETHYST,
                author: "eogito",
                name: "Lapa Head "
            }, {
                id: 85,
                day: IMAGES.ACCESSORY73D,
                night: IMAGES.ACCESSORY73N,
                rarity: RARITY.AMETHYST,
                author: "Starve.io",
                name: "Mask and Glasses"
            }, {
                id: 60,
                day: IMAGES.ACCESSORY48D,
                night: IMAGES.ACCESSORY48N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Jason"
            }, {
                id: 26,
                day: IMAGES.ACCESSORY26D,
                night: IMAGES.ACCESSORY26N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Devil Horns"
            }, {
                id: 18,
                day: IMAGES.ACCESSORY18D,
                night: IMAGES.ACCESSORY18N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Big Boss"
            }, {
                id: 35,
                day: IMAGES.ACCESSORY35D,
                night: IMAGES.ACCESSORY35N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Baby Kraken"
            }, {
                id: 63,
                day: IMAGES.ACCESSORY52D,
                night: IMAGES.ACCESSORY52N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Deer Antlers"
            }, {
                id: 65,
                day: IMAGES.ACCESSORY45D,
                night: IMAGES.ACCESSORY45N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Baby Dragon on your head"
            }, {
                id: 86,
                day: IMAGES.ACCESSORY74D,
                night: IMAGES.ACCESSORY74N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Gaz Mask and Glasses"
            }, {
                id: 87,
                day: IMAGES.ACCESSORY75D,
                night: IMAGES.ACCESSORY75N,
                rarity: RARITY.REIDITE,
                author: "Starve.io",
                name: "Pink Gaz Mask and Glasses"
            }, {
                id: 88,
                day: IMAGES.ACCESSORY76D,
                night: IMAGES.ACCESSORY76N,
                rarity: RARITY.REIDITE,
                author: "eogito",
                name: "Engineer Glasses"
            }, {
                id: 45,
                day: IMAGES.LEVEL5D,
                night: IMAGES.LEVEL5N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 5",
                level: 5
            }, {
                id: 46,
                day: IMAGES.LEVEL10D,
                night: IMAGES.LEVEL10N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 10",
                level: 10
            }, {
                id: 47,
                day: IMAGES.LEVEL15D,
                night: IMAGES.LEVEL15N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 15",
                level: 15
            }, {
                id: 48,
                day: IMAGES.LEVEL20D,
                night: IMAGES.LEVEL20N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 20",
                level: 20
            }, {
                id: 49,
                day: IMAGES.LEVEL25D,
                night: IMAGES.LEVEL25N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 25",
                level: 25
            }, {
                id: 50,
                day: IMAGES.LEVEL30D,
                night: IMAGES.LEVEL30N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 30",
                level: 30
            }, {
                id: 51,
                day: IMAGES.LEVEL35D,
                night: IMAGES.LEVEL35N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 35",
                level: 35
            }, {
                id: 52,
                day: IMAGES.LEVEL40D,
                night: IMAGES.LEVEL40N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 40",
                level: 40
            }, {
                id: 53,
                day: IMAGES.LEVEL45D,
                night: IMAGES.LEVEL45N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 45",
                level: 45
            }, {
                id: 54,
                day: IMAGES.LEVEL50D,
                night: IMAGES.LEVEL50N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 50",
                level: 50
            }, {
                id: 55,
                day: IMAGES.LEVEL55D,
                night: IMAGES.LEVEL55N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 55",
                level: 55
            }, {
                id: 56,
                day: IMAGES.LEVEL60D,
                night: IMAGES.LEVEL60N,
                rarity: RARITY.LEVEL,
                author: "Starve.io",
                name: "More than Level 60",
                level: 60
            }]
        },
        Ke.ZOMBIE_SKIN = find_cosmetics_per_id(COSMETICS.SKIN, 21),
        Ke.VAMPIRE_SKIN = find_cosmetics_per_id(COSMETICS.SKIN, 20),
        sprite[Le.BODY] = [],
        sprite[Le.HAND] = [],
        sprite[Le.CRATE] = [],
        sprite[Le.BOOK] = [],
        sprite[Le.BAG] = [],
        sprite[Le.ACCESSORY] = [];
        for (var e = 0; e < COSMETICS.SKIN.length; e++)
            sprite[Le.BODY][e] = [COSMETICS.SKIN[e].day, COSMETICS.SKIN[e].night],
            sprite[Le.HAND][e] = [COSMETICS.SKIN[e].dayHand, COSMETICS.SKIN[e].nightHand];
        for (e = 0; e < COSMETICS.BOOK.length; e++)
            sprite[Le.BOOK][e] = [COSMETICS.BOOK[e].day, COSMETICS.BOOK[e].night];
        for (e = 0; e < COSMETICS.CRATE.length; e++)
            sprite[Le.CRATE][e] = [COSMETICS.CRATE[e].day, COSMETICS.CRATE[e].night];
        for (e = 0; e < COSMETICS.BAG.length; e++)
            sprite[Le.BAG][e] = [COSMETICS.BAG[e].day, COSMETICS.BAG[e].night];
        for (e = 0; e < COSMETICS.ACCESSORY.length; e++)
            sprite[Le.ACCESSORY][e] = [COSMETICS.ACCESSORY[e].day, COSMETICS.ACCESSORY[e].night]
    }
    ,
    INFO_BOX = [],
    PLAYER_LEVEL = [];
    const Xi = "development"
      , ji = "production";
    class qi {
        constructor(e, t, i) {
            this.canvas = document.createElement("canvas"),
            this.ctx = this.canvas.getContext("2d"),
            this.canvas.width = e,
            this.canvas.height = t,
            this.buildType = i
        }
        drawText(e, t, i, n) {
            switch (this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height),
            this.ctx.font = t + "px Baloo Paaji",
            this.ctx.strokeStyle = i,
            this.ctx.fillStyle = n,
            this.ctx.lineWidth = 7,
            this.buildType) {
            case 1:
                this.ctx.strokeText("x" + (255 & e), 15, 40),
                this.ctx.fillText("x" + (255 & e), 15, 40),
                this.ctx.strokeText("x" + ((65280 & e) >> 8), 15, 60),
                this.ctx.fillText("x" + ((65280 & e) >> 8), 15, 60);
                break;
            case 2:
                this.ctx.strokeText("x" + (31 & e), 15, 40),
                this.ctx.fillText("x" + (31 & e), 15, 40),
                this.ctx.strokeText("x" + ((992 & e) >> 5), 15, 60),
                this.ctx.fillText("x" + ((992 & e) >> 5), 15, 60),
                this.ctx.strokeText("x" + ((31744 & e) >> 10), 15, 80),
                this.ctx.fillText("x" + ((31744 & e) >> 10), 15, 80);
                break;
            case 3:
                this.ctx.strokeText(e[0], 15, 40),
                this.ctx.fillText(e[0], 15, 40),
                this.ctx.strokeText((16 & e[1]) >> 4 ? "L" : "U", 15, 60),
                this.ctx.fillText((16 & e[1]) >> 4 ? "L" : "U", 15, 60),
                this.ctx.strokeText((16 & e[1]) >> 4 ? e[1] - 16 : e[1], 15, 80),
                this.ctx.fillText((16 & e[1]) >> 4 ? e[1] - 16 : e[1], 15, 80);
                break;
            default:
                this.ctx.strokeText(e, 15, 40),
                this.ctx.fillText(e, 15, 40)
            }
        }
    }
    let Re = {};
    function Zi(e, t, i) {
        var n, r, o = function(e, t) {
            let i = 0;
            switch (e) {
            case "t":
                0 == t || 1 == t ? i = 102 : 2 == t || 3 == t ? i = 77 : 4 != t && 5 != t || (i = 60);
                break;
            case "b":
                0 == t || 1 == t ? i = 97 : 2 != t && 3 != t || (i = 80);
                break;
            case "s":
                0 == t ? i = 102 : 1 == t ? i = 87 : 2 == t && (i = 58);
                break;
            case "g":
                0 == t ? i = 90 : 1 == t ? i = 75 : 2 == t && (i = 65);
                break;
            case "p":
                i = 77;
                break;
            case "f":
                0 == t ? i = 140 : 1 == t ? i = 115 : 2 == t && (i = 95);
                break;
            case "d":
                0 == t ? i = 85 : 1 == t ? i = 75 : 2 == t && (i = 60);
                break;
            case "a":
                0 == t ? i = 85 : 1 == t && (i = 75);
                break;
            case "cs":
                0 == t ? i = 100 : 1 == t ? i = 87 : 2 == t ? i = 95 : 3 == t && (i = 90);
                break;
            case "re":
                0 == t ? i = 67 : 1 == t ? i = 82 : 2 == t && (i = 90);
                break;
            case "c":
                i = 55;
                break;
            case "m":
                1 == t ? i = 85 : 2 == t && (i = 90);
                break;
            case 4:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 7:
            case 8:
            case 9:
            case 10:
            case 15:
            case 16:
            case 17:
            case 19:
            case 21:
            case 50:
            case 51:
            case 18:
            case 32:
            case 34:
            case 29:
            case 22:
                i = 45;
                break;
            case 2:
            case 5:
            case 12:
            case 13:
            case 14:
            case 20:
            case 52:
            case 53:
            case 49:
            case 48:
            case 47:
            case 46:
            case 45:
                i = 35;
                break;
            case 11:
            case 0:
                i = 25
            }
            return i
        }(e, t);
        o && (r = (n = document.createElement("canvas")).getContext("2d"),
        n.width = 300,
        n.height = 300,
        r.lineWidth = 2.5,
        r.strokeStyle = "red",
        r.beginPath(),
        r.arc(150, 150, o, 0, 2 * Math.PI),
        r.stroke(),
        i ? Re[e] = n : Re[e][t] = n)
    }
    let $i = {
        L: 0,
        I: new qi(250,70,0),
        E: !1
    }
      , Qi = new Image
      , e0 = new Image;
    Qi.src = "https://cdn.discordapp.com/attachments/1111177461015785533/1190525214069620757/sandstorm.png?ex=65ab5881&is=6598e381&hm=07e629bfa81d627832512affe42083abcc125aed451f989ba53f9ac2825a82fe&",
    e0.src = "https://cdn.discordapp.com/attachments/1111177461015785533/1190525284261302272/blizzard.png?ex=65ab5892&is=6598e392&hm=c0569f2b787b007052a03847aed85aa641e9fa700bdfea30eecf441a3cd40025&";
    e = ji;
    function t0(e) {
        this.m = 2147483648,
        this.a = 1103515245,
        this.c = 12345,
        this.state = e || Math.floor(Math.random() * (this.m - 1))
    }
    t0.prototype.random = function() {
        return this.state = (this.a * this.state + this.c) % this.m,
        this.state / this.m
    }
    ,
    t0.prototype.set_seed = function(e) {
        this.state = e
    }
    ,
    RAND_SIZE = 1e4,
    RANDOM = [];
    var i0 = new t0;
    i0.set_seed(performance.now());
    for (var n0, r0, o0 = 0; o0 < RAND_SIZE; o0++)
        RANDOM.push(i0.random());
    Utils = {
        get_recaptcha_token: get_recaptcha_token,
        open_in_new_tab: function(e) {
            window.open(e, "_blank").focus()
        },
        open_in_new_box: function(e) {
            window.open(e, "_blank", "location=yes,height=570,width=520,scrollbars=yes,status=yes")
        },
        compare_object: function(e, t) {
            for (var i in e)
                if (e[i] != t[i])
                    return !1;
            return !0
        },
        compare_array: function(e, t) {
            if (e.length != t.length)
                return !1;
            for (var i = 0; i < e.length; i++)
                if ("object" == typeof e) {
                    if (!this.compare_object(e[i], t[i]))
                        return !1
                } else if (e[i] != t[i])
                    return !1;
            return !0
        },
        copy_vector: function(e, t) {
            t.x = e.x,
            t.y = e.y
        },
        get_vector: function(e, t) {
            return {
                x: e.x - t.x,
                y: e.y - t.y
            }
        },
        mul_vector: function(e, t) {
            e.x *= t,
            e.y *= t
        },
        scalar_product: function(e, t) {
            return e.x * t.x + e.y * t.y
        },
        norm: function(e) {
            return Math.sqrt(e.x * e.x + e.y * e.y)
        },
        sign: function(e) {
            return e < 0 ? -1 : 1
        },
        cross_product: function(e, t) {
            return e.x * t.y - e.y * t.x
        },
        get_angle_2: function(e, t, i, n) {
            return Math.atan2(n - t, i - e)
        },
        get_angle: function(e, t) {
            return Math.acos(this.scalar_product(e, t) / (this.norm(e) * this.norm(t))) * this.sign(this.cross_product(e, t))
        },
        getURLData: function(e) {
            _url = location.href,
            e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            e = new RegExp("[\\?&]" + e + "=([^&#]*)").exec(_url);
            return null === e ? null : e[1]
        },
        reduceAngle: function(e, t) {
            var i = 2 * Math.PI;
            return t = (t % i + i) % i,
            Math.abs(e - t) > Math.PI ? t < e ? t + i : t - i : t
        },
        get_std_angle: function(e, t) {
            return this.get_angle({
                x: 1,
                y: 0
            }, this.get_vector(e, t))
        },
        dist: function(e, t) {
            return Math.sqrt((t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y))
        },
        build_vector: function(e, t) {
            return {
                x: Math.cos(t) * e,
                y: Math.sin(t) * e
            }
        },
        add_vector: function(e, t) {
            e.x += t.x,
            e.y += t.y
        },
        sub_vector: function(e, t) {
            e.x -= t.x,
            e.y -= t.y
        },
        translate_vector: function(e, t, i) {
            e.x += t,
            e.y += i
        },
        translate_new_vector: function(e, t, i) {
            return {
                x: e.x + t,
                y: e.y + i
            }
        },
        move: function(e, t, i) {
            e.x += Math.cos(i) * t,
            e.y += Math.sin(i) * t
        },
        middle: function(e, t) {
            return Math.floor((e - t) / 2)
        },
        middle_point: function(e, t) {
            return {
                x: (e.x + t.x) / 2,
                y: (e.y + t.y) / 2
            }
        },
        rand_sign: function() {
            return .5 < Math.random() ? 1 : -1
        },
        get_rand_pos_in_circle: function(e, t, i) {
            var n = this.rand_sign()
              , r = this.rand_sign()
              , o = Math.random() * Math.PI / 2;
            return {
                x: Math.floor(e + Math.cos(o) * n * i),
                y: Math.floor(t + Math.sin(o) * r * i)
            }
        },
        Box: function(e, t, i, n) {
            this.x = e,
            this.y = t,
            this.w = i,
            this.h = n
        },
        randomize_list: function(e) {
            (a = []).push.apply(a, e);
            for (var t = []; 0 < a.length; ) {
                var i = Math.floor(Math.random() * a.length);
                t.push(a[i]),
                a.splice(i, 1)
            }
            return t
        },
        restore_number: function(e) {
            return 2e4 <= e ? e = 1e3 * (e - 2e4) : 1e4 <= e && (e = 100 * (e - 1e4)),
            e
        },
        simplify_number: function(e) {
            if ("number" != typeof e)
                return "0";
            if (1e4 <= e) {
                var t = Math.floor(Math.log10(e)) - 2
                  , t = Math.max(0, 3 - t)
                  , i = Math.floor(e / 1e3).toString();
                if (t) {
                    for (var n = (i += "." + (e % 1e3 / 1e3).toString().substring(2).substring(0, t)).length - 1, r = 0; 0 < n && "0" == i[n]; n--)
                        r++;
                    "." == (i = i.substring(0, i.length - r))[i.length - 1] && (i = i.substring(0, i.length - 1))
                }
                return i += "k"
            }
            return e.toString()
        },
        ease_out_quad: function(e) {
            return e * (2 - e)
        },
        ease_out_cubic: function(e) {
            return --e * e * e + 1
        },
        ease_in_out_quad: function(e) {
            return e < .5 ? 2 * e * e : (4 - 2 * e) * e - 1
        },
        ease_in_out_cubic: function(e) {
            return e < .5 ? 4 * e * e * e : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1
        },
        ease_in_out_quart: function(e) {
            return e < .5 ? 8 * e * e * e * e : 1 - 8 * --e * e * e * e
        },
        ease_out_quart: function(e) {
            return 1 - --e * e * e * e
        },
        ease_out_quint: function(e) {
            return 1 + --e * e * e * e * e
        },
        LinearAnimation: function(e, t, i, n, r, o) {
            return this.o = e,
            this.v = t,
            this.max = i,
            this.min = n,
            this.max_speed = r,
            this.min_speed = o,
            this.last = 0,
            !(this.update = function() {
                if (this.o) {
                    if ((e = this.v + qe * this.max_speed) > this.max)
                        return this.v = this.max,
                        !(this.o = !1);
                    this.v = e
                } else {
                    var e;
                    (e = this.v - qe * this.min_speed) < this.min ? (this.v = this.min,
                    this.o = !0) : this.v = e
                }
            }
            )
        },
        Ease: function(e, t, i, n, r, o) {
            this.fun = e,
            this.ed = t,
            this.em = i,
            this.sx = n,
            this.x = r,
            this.ex = o,
            this.restart = function() {
                this.x = this.sex,
                this.ed = 0
            }
            ,
            this.ease = function(e) {
                e !== this.ex && (this.ex = e,
                this.sx = this.x,
                this.ed = 0),
                this.ex !== this.x && (this.ed += qe,
                this.ed > this.em ? this.x = this.ex : (e = this.fun(this.ed / this.em),
                this.x = this.sx + (this.ex - this.sx) * e))
            }
        },
        Ease2d: function(e, t, i, n, r, o, a, s, d) {
            this.fun = e,
            this.ed = t,
            this.em = i,
            this.sx = n,
            this.sy = r,
            this.x = o,
            this.y = a,
            this.ex = s,
            this.ey = d,
            this.ease = function(e) {
                e.x == this.ex && e.y == this.ey || (this.ex = e.x,
                this.ey = e.y,
                this.sx = this.x,
                this.sy = this.y,
                this.ed = 0),
                this.ex == this.x && this.ey == this.y || (this.ed += qe,
                this.ed > this.em ? (this.x = this.ex,
                this.y = this.ey) : (e = this.fun(this.ed / this.em),
                this.x = this.sx + (this.ex - this.sx) * e,
                this.y = this.sy + (this.ey - this.sy) * e))
            }
        },
        generate_token: function(e) {
            for (var t = "", i = 0; i < e; i++)
                t += String.fromCharCode(48 + Math.floor(74 * Math.random()));
            return t
        },
        gup: function(e, t) {
            t = t || location.href,
            e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            e = new RegExp("[\\?&]" + e + "=([^&#]*)").exec(t);
            return null == e ? null : e[1]
        },
        inside_box: function(e, t) {
            return e.x >= t.x && e.x <= t.x + t.w && e.y >= t.y && e.y <= t.y + t.h
        },
        intersect_aabb: function(e, t, i, n, r, o, a, s) {
            return Math.max(e, r) < Math.min(t, o) && Math.max(i, a) < Math.min(n, s) ? 1 : 0
        },
        lerp: function(e, t, i) {
            return (1 - i) * e + i * t
        },
        escape_html: function(e) {
            return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;")
        }
    },
    Math.sign = Math.sign || function(e) {
        return 0 === e ? 0 : 0 < e ? 1 : -1
    }
    ,
    Math.log10 = Math.log10 || function(e) {
        return Math.log(e) / Math.LOG10
    }
    ,
    rn = !(un = function() {
        function h() {
            for (var e = 0, t = {}; e < arguments.length; e++) {
                var i, n = arguments[e];
                for (i in n)
                    t[i] = n[i]
            }
            return t
        }
        return function e(l) {
            function c(e, t, i) {
                var n, r;
                if ("undefined" != typeof document) {
                    if (1 < arguments.length) {
                        "number" == typeof (i = h({
                            path: "/"
                        }, c.defaults, i)).expires && ((r = new Date).setMilliseconds(r.getMilliseconds() + 864e5 * i.expires),
                        i.expires = r);
                        try {
                            n = JSON.stringify(t),
                            /^[\{\[]/.test(n) && (t = n)
                        } catch (e) {}
                        return t = l.write ? l.write(t, e) : encodeURIComponent(String(t)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent),
                        e = (e = (e = encodeURIComponent(String(e))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape),
                        document.cookie = [e, "=", t, i.expires ? "; expires=" + i.expires.toUTCString() : "", i.path ? "; path=" + i.path : "", i.domain ? "; domain=" + i.domain : "", i.secure ? "; secure" : ""].join("")
                    }
                    e || (n = {});
                    for (var o = document.cookie ? document.cookie.split("; ") : [], a = /(%[0-9A-Z]{2})+/g, s = 0; s < o.length; s++) {
                        var d = o[s].split("=");
                        '"' === (u = d.slice(1).join("=")).charAt(0) && (u = u.slice(1, -1));
                        try {
                            var _ = d[0].replace(a, decodeURIComponent)
                              , u = l.read ? l.read(u, _) : l(u, _) || u.replace(a, decodeURIComponent);
                            if (this.json)
                                try {
                                    u = JSON.parse(u)
                                } catch (e) {}
                            if (e === _) {
                                n = u;
                                break
                            }
                            e || (n[_] = u)
                        } catch (e) {}
                    }
                    return n
                }
            }
            return (c.set = c).get = function(e) {
                return c.call(c, e)
            }
            ,
            c.getJSON = function() {
                return c.apply({
                    json: !0
                }, [].slice.call(arguments))
            }
            ,
            c.defaults = {},
            c.remove = function(e, t) {
                c(e, "", h(t, {
                    expires: -1
                }))
            }
            ,
            c.withConverter = e,
            c
        }(function() {})
    }
    ),
    "function" == typeof define && define.amd && (define(un),
    rn = !0),
    "object" == typeof exports && (module.exports = un(),
    rn = !0),
    rn || (n0 = window.Cookies,
    (r0 = window.Cookies = un()).noConflict = function() {
        return window.Cookies = n0,
        r0
    }
    );
    let a0 = -1;
    let s0 = -1
      , d0 = -1
      , _0 = 109;
    const u0 = e=>{
        switch (e) {
        case 61:
            return 120;
        case 60:
            return 300;
        case 70:
            return 600;
        case 80:
            return 60;
        case 67:
            return 240;
        case 65:
            return 300;
        case 74:
            return 250;
        case 77:
            return 1e3;
        case 78:
            return 3e3;
        case 72:
            return 900;
        case 69:
            return 3e3;
        case 64:
        case 73:
            return 1500;
        case 88:
            return 90;
        case 63:
            return 900;
        case 62:
            return 300;
        case 86:
            return 30;
        case 82:
            return 300;
        case 66:
            return 6e3;
        case 71:
            return 1500;
        case 68:
        case 75:
            return 600;
        case 76:
            return 1500;
        default:
            return null
        }
    }
    ;
    let l0 = {
        x: null,
        y: null
    }, c0 = {
        Join: [],
        Leave: [],
        toggle1: !1,
        toggle2: !1,
        toggle11: !1,
        toggle22: !1
    }, h0;
    function E0(e) {
        return Ye.team[0] === e
    }
    let T0 = [[21550, 29718], [21963, 29773], [21919, 29350]]
      , A0 = 0;
    function I0() {
        for (let e = 0; e < Fe.units[0].length; e++)
            Fe.units[0][e].ally = Ye.id === Fe.units[0][e].pid || H0(Fe.units[0][e].pid);
        for (let e = 0; e < Fe.units[4].length; e++)
            Fe.units[4][e].ally = Ye.id === Fe.units[4][e].pid || H0(Fe.units[4][e].pid);
        for (let e = 0; e < Fe.units[7].length; e++)
            Fe.units[7][e].ally = Ye.id === Fe.units[7][e].pid || H0(Fe.units[7][e].pid);
        for (let e = 0; e < Fe.units[8].length; e++)
            Fe.units[8][e].ally = Ye.id === Fe.units[8][e].pid || H0(Fe.units[8][e].pid);
        for (let e = 0; e < Fe.units[9].length; e++)
            Fe.units[9][e].ally = Ye.id === Fe.units[9][e].pid || H0(Fe.units[9][e].pid);
        for (let e = 0; e < Fe.units[19].length; e++)
            Fe.units[19][e].ally = Ye.id === Fe.units[19][e].pid || H0(Fe.units[19][e].pid);
        for (let e = 0; e < Fe.units[50].length; e++)
            Fe.units[50][e].ally = Ye.id === Fe.units[50][e].pid || H0(Fe.units[50][e].pid);
        for (let e = 0; e < Fe.units[5].length; e++)
            Fe.units[5][e].ally = Ye.id === Fe.units[5][e].pid || H0(Fe.units[5][e].pid);
        for (let e = 0; e < Fe.units[12].length; e++)
            Fe.units[12][e].ally = Ye.id === Fe.units[12][e].pid || H0(Fe.units[12][e].pid);
        for (let e = 0; e < Fe.units[13].length; e++)
            Fe.units[13][e].ally = Ye.id === Fe.units[13][e].pid || H0(Fe.units[13][e].pid);
        for (let e = 0; e < Fe.units[14].length; e++)
            Fe.units[14][e].ally = Ye.id === Fe.units[14][e].pid || H0(Fe.units[14][e].pid);
        for (let e = 0; e < Fe.units[20].length; e++)
            Fe.units[20][e].ally = Ye.id === Fe.units[20][e].pid || H0(Fe.units[20][e].pid);
        for (let e = 0; e < Fe.units[52].length; e++)
            Fe.units[52][e].ally = Ye.id === Fe.units[52][e].pid || H0(Fe.units[52][e].pid);
        for (let e = 0; e < Fe.units[45].length; e++)
            Fe.units[45][e].ally = Ye.id === Fe.units[45][e].pid || H0(Fe.units[45][e].pid);
        for (let e = 0; e < Fe.units[46].length; e++)
            Fe.units[46][e].ally = Ye.id === Fe.units[46][e].pid || H0(Fe.units[46][e].pid);
        for (let e = 0; e < Fe.units[47].length; e++)
            Fe.units[47][e].ally = Ye.id === Fe.units[47][e].pid || H0(Fe.units[47][e].pid);
        for (let e = 0; e < Fe.units[48].length; e++)
            Fe.units[48][e].ally = Ye.id === Fe.units[48][e].pid || H0(Fe.units[48][e].pid);
        for (let e = 0; e < Fe.units[49].length; e++)
            Fe.units[49][e].ally = Ye.id === Fe.units[49][e].pid || H0(Fe.units[49][e].pid);
        for (let e = 0; e < Fe.units[53].length; e++)
            Fe.units[53][e].ally = Ye.id === Fe.units[53][e].pid || H0(Fe.units[53][e].pid);
        for (let e = 0; e < Fe.units[10].length; e++)
            Fe.units[10][e].ally = Ye.id === Fe.units[10][e].pid || H0(Fe.units[10][e].pid);
        for (let e = 0; e < Fe.units[15].length; e++)
            Fe.units[15][e].ally = Ye.id === Fe.units[15][e].pid || H0(Fe.units[15][e].pid);
        for (let e = 0; e < Fe.units[16].length; e++)
            Fe.units[16][e].ally = Ye.id === Fe.units[16][e].pid || H0(Fe.units[16][e].pid);
        for (let e = 0; e < Fe.units[17].length; e++)
            Fe.units[17][e].ally = Ye.id === Fe.units[17][e].pid || H0(Fe.units[17][e].pid);
        for (let e = 0; e < Fe.units[21].length; e++)
            Fe.units[21][e].ally = Ye.id === Fe.units[21][e].pid || H0(Fe.units[21][e].pid);
        for (let e = 0; e < Fe.units[51].length; e++)
            Fe.units[51][e].ally = Ye.id === Fe.units[51][e].pid || H0(Fe.units[51][e].pid);
        for (let e = 0; e < Fe.units[11].length; e++)
            Fe.units[11][e].ally = Ye.id === Fe.units[11][e].pid || H0(Fe.units[11][e].pid)
    }
    var p0 = document.getElementById("game_canvas")
      , ze = p0.getContext("2d")
      , g0 = p0.width
      , O0 = p0.height
      , ke = p0.width / 2
      , b0 = p0.height / 2
      , m0 = {
        x: ke,
        y: b0
    }
      , We = 1
      , C0 = 1
      , R0 = -1;
    let S0 = !1;
    window.oppaii = 0;
    let N0, D0, f0, v0 = 0, M0 = {
        HPTimer: 0,
        GaugeTimer: 0
    }, y0, L0 = {
        x: -1,
        y: -1
    }, G0;
    function H0(e) {
        for (var t = 0; t < Ye.team.length; t++)
            if (Ye.team[t] == e)
                return 1;
        return 0
    }
    let Ve = {
        skins: ["Starver", "Angry", "Sad", "Happy 1", "What?", "Suspicious", "Scar", "In Trouble", "Cute", "Bored 1", "Happy 2", "Crazy", "Happy 3", "Very Cute", "Curious", "Bored 2", "Happy 4", "Scar 2", "Sick", "Somnambule", "Feel Bad", "Mmmh.", "Panic", "Hypnotic", "Stars in the eyes", "Scared at night", "Vampire", "Zombie", "Devaster", "Dead Devaster", "Cactus", "Bee", "Camo Skin", "Blue Limax Skin", "Red Limax Skin", "Mr. Pumpkin", "Wood", "Zebra", "Tiger", "Day or Night", "Square Starver", "Voodoo Doll", "Frankenstein", "Old Mummy", "Werewolf", "Old Cthulhu", "Sea Man", "Old Pumpkin", "Old Snowman", "Old Christmas Tree Man", "Old Mrs Bell", "Old Elfy", "Old Mr Present", "My Dear Old Deer", "Mr Angel", "Mr Ice Cube", "Mr Snowman", "Crystal Sky Skin", "Radioactive Starver", "Eaten Cookie", "Blob Thing", "Machine Mask", "Lollipop 1", "Lollipop 2", "Lollipop 3", "Lollipop 4", "Yellow Bird", "Red Bird", "Blue Bird", "Owl", "Nemo", "Mr. Bread", "Mr. Bread 2", "Mr. Bread 3", "Red Berry", "Old Berry", "Cake", "Christmas Cake", "Mr. Pancake", "Mr. Taco", "Mr. Bottle", "Mr. Bottle 2", "Pink Rabbit", "Marshmallow", "Fox", "Raccoon", "Cloud", "Moon", "Mr. Panda", "Mr. Strawberry", "Mummy", "Dino", "Mr. Koala", "Bottle Protection", "Leaf Man", "Bubble", "Potato", "Axolotl", "Test Dummy", "Star-ver", "Starver Chest", "Starver Workbench", "Fish", "Crab", "Piranha", "Winter Fox", "Baby Foxy", "Winter Bear", "Hawk", "Nice Little Yuki", "Baby Yuki", "Mr. Carrot", "Bat Limax", "Mr. Crate", "Mr. Spider", "Mr. Spider 2", "Mr. Blue Starfish", "Mr. Orange Starfish", "Mr. Pink Starfish", "Mr. ShellMauve", "Mr. Shell Bead", "Angry Crab", "Penguin", "Mr. Boar", "I saw you", "It was funny", "You can scream", "Mr. Book", "Mr. Mammoth", "Mr. Mammoth 2", "Nightmare", "Shiny Crystal", "Water skin", "Will-O'-The-Wisp", "Flame", "Be a Tree", "Toxic Mutant", "Mr. Tomato", "Mr. Mauve, the Lapa", "Golden Fish", "LapaMauve", "LapaMauve ", "Mr. Burger", "Tropical Starver", "Mr. ShellPink", "Mr. OranShell", "Pepe", "Mr. Ant", "Mr. Watermelon", "Mr. Thornbush", "Cthulhu", "Mr. Cactus", "Momo", "Mr. Garlic", "Robot Dragon", "Lava Dragon Version 1", "Lava Dragon Version 2", "Lava Dragon Version 3", "Ice Dragon Version 1", "Ice Dragon Version 2", "Ice Dragon Version 3", "Baby Dragon Version 1", "Baby Dragon Version 2", "Baby Lava", "Kraken", "Sandworm", "Mr. Golden Bread", "Starver Ores", "Poo", "Volcano Starver", "Lava Starver", "Robot", "Blue Butterfly", "Yrifox", "Blob Skin"],
        accessories: ["Nothing", "Pink Cheeks", "Heart", "Bandage 1", "Flower 1", "Bow 1", "Bandage 2", "Flower 2", "Bandage 3", "Foliage", "Peaceful", "Sparkles", "Luxury", "Snow Flakes Crown", "Glasses 1", "Bow 2", "Little Stars", "Pirate Eye Patch 1", "Pirate Eye Patch 2", "Clown nose", "Eye Patch", "Flower 3", "False Nose", "Red Cloth", "Blue Cloth", "Transparent Mask", "Starve.io Anime", "Hero Mask", "Star Glasses", "Great-aunt's Glasses", "Little Starver", "Little Glasses", "Flower Chain", "Horns", "Golden Flower", "Sleeping Mask", "Fish on your head", "Rose", "Grey Scarf", "Black Scarf", "Skull Mask", "Fancy Glasses", "Medecin Mask", "Mr. Mayor", "Sunglasses 2", "Starfish", "Berry", "Flake", "Leaf ", "A sword in your head", "Winter Scarf", "Winter Scarf 2", "Winter Scarf 3", "Mask with animal tracks", "Spring Mask", "Pink Mask", "Blue Mask", "Military Mask", "Orange Mask", "White and Red Points Mask", "Stick out your tongue Mask", "Two Teeth Mask", "Make-up Mask", "Sad Mask", "Happy Mask", "Blood", "Clown Face", "Sunglasses 3", "Engineer's Glasses", "Engineer's Monocle", "Mauve's butt", "Lapa Head", "Lapa Head ", "Mask and Glasses", "Jason", "Devil Horns", "Big Boss", "Baby Kraken", "Deer Antlers", "Baby Dragon on your head", "Gaz Mask and Glasses", "Pink Gaz Mask and Glasses", "Engineer Glasses", "More than Level 5", "More than Level 10", "More than Level 15", "More than Level 20", "More than Level 25", "More than Level 30", "More than Level 35", "More than Level 40", "More than Level 45", "More than Level 50", "More than Level 55", "More than Level 60"],
        books: ["Book 1", "Book 2", "Book 3", "Book 4", "Damaged Book 1", "Damaged Book 2", "Scroll", "Clipboard", "Seed Book", "Camo Book", "Stone Tablet", "Star Book", "Gold Book", "Old Mysterious Paper", "Gold Engraving", "Ant Book", "Mummy Book", "Garlic Book", "Pumpkin Book", "Christmas Tree Book", "Diamond Book", "Obscure Book", "Rolled Parchment", "Cake Book", "Christmas Cake Book", "Fish Book", "Once upon a time", "Amethyst Book", "Paint Pallet", "Watermelon Book", "Thornbush Book", "Menu", "Lover Letter", "Fresh-Baked Cookies", "Inside, there is just a book.", "Winter Book", "Autumn Book", "Reidite Book", "Lava Book", "Lava Book 2", "Ocean Mystery", "Dragon Book", "Engineer Book", "Nightmare Book", "Mystery Book"],
        bags: ["Bag 1", "Old Bag", "Bag 2", "Bag 3", "Bag 4", "Bag 5", "Wood Pickaxe Bag", "Wood Carrier", "Bag 6", "Bag with Wooden Swords", "Big Bag", "Bag 6", "Easter Bag", "Star Bag", "Winter Bag", "Stone Carrier", "Stone Pickaxe Bag", "Bag Camouflage", "Bag with Stone Swords", "Cow Bag", "Starver Bag", "Crystal Sky Bag", "Honey Pot", "Gold Carrier", "Gold Pickaxe Bag", "Mr and Mrs Bakers", "Bag with Golden Swords", "Explorer Bag", "Bamboo Bag", "Mummy Bag", "Watermelon Bag", "Garlic Bag", "Pumpkin Bag", "Oil Barel bag", "Tree Bag", "a Rabbit in my Bag", "Bird's nest", "a Fish on your Back", "a Squirrel in my Bag", "Diamond Carrier", "Resources Bag", "Diamond Pickaxe Bag", "Bag with Diamond Swords", "My Cake Bag", "My Christmas Cake Bag", "Fish Bag", "Cloud Bag", "Bee Bag", "Natural Bag", "Amethyst Carrier", "Amethyst Pickaxe Bag", "Your Baby", "Tropical Bag", "Bag with Amethyst Swords", "Ice Bag", "Thornbush Bag", "Autumn Bag", "Dino Egg Bag", "Magic Cloud Bag", "Chest Bag", "Reidite Carrier", "Lava Bag", "Lava Bag 2", "Dragon Bag", "Winter Ice Bag", "Reidite Pickaxe Bag", "Octopus Bowl", "Cave Bag", "Bag with Reidite Swords", "Engineer Bag"],
        currentSkin: 0,
        currentAccessory: 0,
        currentBag: 0,
        currentBook: 0,
        food: 50,
        pow: 14e3,
        sets1: 60,
        sets2: 40,
        sets3: 40,
        sets4: 10,
        Tokenjoin: {
            e: !1,
            token: "",
            id: ""
        },
        pvp: !1,
        fakefps: !1,
        esp: !1,
        Autopvp: {
            e: !1
        },
        Moves: !1,
        JoinLeave: !1,
        AutoSeed: !1,
        Ice: !1,
        recap: !1,
        click: {
            e: !1,
            k: "KeyE"
        },
        zoomBIG: !1,
        pereat: !1,
        buyh: 1,
        ddospower: 12e3,
        Hitbox: !1,
        ex: !1,
        autowear: !1,
        autowearHP: 50,
        RangeBetweenMeAndEnemy: 120,
        afk: !1,
        boostfps: !1,
        ss: !1,
        AntiDDOS: !1,
        boomtime: 110,
        maker: !1,
        maker2: !1,
        movetoenemy: !1,
        Respawn: !1,
        HpTimer: "#ff0000",
        HpTimerShadow: "#000000",
        BlizzardStorm: "#ff0000",
        BlizzardStormShadow: "#000000",
        EnabledHacks: "#ff0000",
        EnabledHacksShadow: "#000000",
        mmob: "#ff0000",
        mmobs: "#000000",
        bot: !1,
        mob: !1,
        Ice2: !1,
        worldinfo: !0,
        chestinfo: !0,
        id: !1,
        chaseid: 0,
        fpsset: 5,
        godowns: 1.3,
        LowFrame: {
            e: !1,
            k: "Period"
        },
        hmpic: 10,
        DDOS: !1,
        DDOS2: !1,
        DDOS3: 10,
        autodv: {
            e: !1,
            hat: "peasant"
        },
        Tame: {
            e: !1,
            k: "KeyJ",
            a: null
        },
        drop: {
            k: "Slash"
        },
        DropSword: {
            k: "KeyB"
        },
        DropSword2: {
            e: !1,
            hp: 80
        },
        speed: 145,
        Tracers: !0,
        SwordInChest: {
            e: !1,
            k: "NONE"
        },
        godown: {
            e: !1,
            k: "ShiftLeft"
        },
        ColoredSpikes: !0,
        AutoBuild: {
            e: !1,
            k: "KeyT",
            m: !1,
            c: ["Bridge"]
        },
        BaseFixer: {
            e: !1,
            k: "KeyM",
            m: [],
            smart: !1,
            x: null,
            y: null
        },
        Crown: !0,
        Ping: !0,
        Fps: !0,
        speedchecker: !0,
        AMB: {
            e: !1,
            k: "KeyF",
            a: null
        },
        spikea: {
            e: !1,
            k: "KeyV",
            a: null
        },
        Debug: !1,
        Xray: {
            e: !1,
            k: "KeyX",
            o: .5
        },
        aaa22: !1,
        Equiq: !1,
        Spectator: {
            k: "KeyP"
        },
        Timer: !0,
        Timer3: !1,
        lobbyid: "",
        lobbyid2: "",
        AutoSpike: {
            e: !1,
            k: "Space",
            m: !0,
            p: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall"]
        },
        yusu: ["High"],
        color: "blue",
        loux: !0,
        AutoSpikee: {
            e: !1,
            k: "NONE",
            m: !0
        },
        Autowall: {
            e: !1,
            k: "KeyC"
        },
        AutoSpikeee: {
            e: !1,
            k: "KeyZ",
            m: !0
        },
        AutoTotem: {
            e: !1,
            k: "KeyH"
        },
        AutoSteal: {
            e: !1,
            k: "KeyQ",
            l: [],
            u: !1,
            o: 0
        },
        AutoExtTake: {
            e: !1,
            k: "BracketLeft"
        },
        AutoExtPut: {
            e: !1,
            k: "BracketRight"
        },
        PathFinder: {
            e: !1,
            g: !1,
            k: "KeyN",
            Mode: "High Performance (Fast Route Calculation)"
        },
        AutoBreadTake: {
            e: !1,
            k: "Semicolon"
        },
        AutoBreadPut: {
            e: !1,
            k: "Quote"
        },
        AutoEme: {
            e: !1,
            k: "KeyM",
            a: null
        },
        Trashtalk: {
            e: !1,
            m: " ",
            lastSend: performance.now()
        },
        Autofarm: {
            e: !1,
            k: "KeyU",
            a: null,
            w: !1,
            x: null,
            xx: null,
            y: null,
            yy: null,
            sy: null,
            sx: null
        },
        autoclicker: {
            e: !1,
            k: "KeyE"
        },
        AutoCraft: {
            e: !1,
            k: "KeyK"
        },
        AutoRecycle: {
            e: !1,
            k: "KeyL"
        },
        lla: {
            e: !1
        }
    };
    function P0() {
        switch (Ve.AutoBuild.c[0]) {
        case "Roof":
            return 184;
        case "Bridge":
            return 119;
        case "Plot":
            return 135;
        default:
            return 184
        }
    }
    var B0, w0, z0, k0, W0, V0, U0, K0, x0 = window, F0 = "O", Y0 = 0, J0 = x0, X0 = J0, j0 = X0, q0 = j0, Z0 = q0, $0 = Z0, Q0 = $0, en = "S", tn = Q0 = $0, nn = tn, rn = "J" + en;
    function g(e) {
        var t = new Image;
        return t.src = e.toDataURL("image/png"),
        t.width = e.width,
        t.height = e.height,
        t.isLoaded = 1,
        t
    }
    function on() {
        Ye && (Ye.cam.h = document.documentElement.clientHeight,
        Ye.cam.w = document.documentElement.clientWidth);
        var e = window.devicePixelRatio || 1
          , t = (ze.webkitBackingStorePixelRatio || ze.mozBackingStorePixelRatio || ze.msBackingStorePixelRatio || ze.oBackingStorePixelRatio || ze.backingStorePixelRatio,
        window.backingStoreRatio = ze.webkitBackingStorePixelRatio || ze.mozBackingStorePixelRatio || ze.msBackingStorePixelRatio || ze.oBackingStorePixelRatio || ze.backingStorePixelRatio || 1,
        window.devicePixelRatio <= .5 && Ve.zoomBIG ? window.AutoMaticActive = !0 : window.AutoMaticActive = !1,
        p0.width != window.innerWidth && (p0.width = window.innerWidth,
        g0 = p0.width,
        ke = p0.width / 2),
        p0.height != window.innerHeight && (p0.height = window.innerHeight,
        O0 = p0.height,
        b0 = p0.height / 2),
        m0 = {
            x: ke,
            y: b0
        },
        p0.width)
          , i = p0.height;
        try {
            R0 = document.getElementById("input_ratio").value * (e / window.backingStoreRatio)
        } catch {
            R0 = e / window.backingStoreRatio
        }
        C0 = R0,
        p0.width = t * C0,
        p0.height = i * C0,
        p0.style.width = t + "px",
        p0.style.height = i + "px",
        ze.scale(C0, C0),
        Ye && (Ye.cam.rw = t,
        Ye.cam.rh = i),
        po.is_run ? po.update() : De.is_run ? De.update() : Je.is_run ? Je.update() : so.is_run && so.update()
    }
    p0.oncontextmenu = function() {
        return !1
    }
    ,
    z0 = k0 = rn + (un = "ON"),
    U0 = w0 = B0 = F0 = rn + un,
    en = V0 = F0,
    K0 = W0 = B0;
    rn = document.getElementById("game_body");
    rn.ondragstart = function() {
        return !1
    }
    ,
    rn.ondrop = function() {
        return !1
    }
    ,
    rn.onresize = on;
    for (var an = ["ms", "moz", "webkit", "o"], sn = 0, dn = 0; dn < an.length && !window.requestAnimationFrame; ++dn) {
        var _n = an[dn];
        window.requestAnimationFrame = window[_n + "RequestAnimationFrame"],
        window.cancelAnimationFrame = window[_n + "CancelAnimationFrame"] || window[_n + "CancelRequestAnimationFrame"]
    }
    window.requestAnimationFrame || (window.requestAnimationFrame = function(e) {
        var t = performance.now()
          , i = Math.max(0, 16 - (t - sn))
          , n = window.setTimeout(function() {
            e(t + i)
        }, i);
        return sn = t + i,
        n
    }
    ),
    window.cancelAnimationFrame || (window.cancelAnimationFrame = function(e) {
        clearTimeout(e)
    }
    );
    var fe = navigator.language || navigator.userLanguage
      , un = -(new Date).getTimezoneOffset() / 60
      , rn = "South America"
      , ln = "Europe"
      , t0 = (-2 <= un && un <= 2 ? ln = "Europe" : 2 < un && un <= 5 ? ln = "Russia" : 5 < un && un <= 9 ? ln = "Asia" : 9 < un ? ln = "Australia" : -5 <= un && un < -2 ? ln = "pt-BR" === fe || "pt-br" === fe || "pt" === fe || "pt-pt" === fe ? rn : "North America" : un < -5 && (ln = "pt-BR" === fe || "pt-br" === fe || "pt" === fe || "pt-pt" === fe ? rn : "West America"),
    {
        Random: function(e) {
            var t = 2147483648
              , i = e || Math.floor(Math.random() * (t - 1));
            this.init = function(e) {
                i = e || Math.floor(Math.random() * (t - 1))
            }
            ,
            this.get = function() {
                return (i = (1103515245 * i + 12345) % t) / t
            }
        }
    });
    function Ue(e, t, i, n, r, o, a, s, d, _) {
        Ve.Xray.e && (e.globalAlpha = Ve.Xray.o),
        void 0 !== t.tryLoad && 1 !== t.tryLoad() || (void 0 !== _ ? e.drawImage(t, i, n, Math.max(1, r), Math.max(1, o), a, s, d, _) : void 0 !== o ? e.drawImage(t, i, n, r, o) : e.drawImage(t, i, n))
    }
    function cn() {
        var e = Je.info_box
          , t = e.id;
        1 === e.activated && 1 === e.display && (void 0 === INFO_BOX[t] && (INFO_BOX[t] = function(e) {
            var t = document.createElement("canvas")
              , i = t.getContext("2d")
              , n = Pe[e]
              , r = (i.font = "20px Baloo Paaji",
            0);
            for (1 <= n.length && (r = Math.max(0, i.measureText(n[0]).width)),
            i.font = "17px Baloo Paaji",
            2 <= n.length && (r = Math.max(r, i.measureText(n[1]).width)),
            i.font = "14px Baloo Paaji",
            D = 2; D < n.length; D++)
                r = Math.max(r, i.measureText(n[D]).width);
            var e = r + 35
              , o = 0
              , o = 1 === n.length ? 55 : 2 === n.length ? 85 : 26 * (n.length - 2) + 85;
            if (Be(i, 0, 0, t.width = e, t.height = o, 10),
            i.fillStyle = "#000000",
            i.globalAlpha = .5,
            i.fill(),
            1 <= n.length && (i.textBaseline = "middle",
            i.font = "20px Baloo Paaji",
            i.globalAlpha = 1,
            i.fillStyle = "#e2c340",
            i.fillText(n[0], 15, 28)),
            2 <= n.length && (i.font = "17px Baloo Paaji",
            i.fillStyle = "#ffffff",
            i.fillText(n[1], 15, 55),
            o = 55),
            3 <= n.length)
                for (i.font = "14px Baloo Paaji",
                i.globalAlpha = .7,
                D = 2; D < n.length; D++)
                    i.fillText(n[D], 15, o + 28),
                    o += 26;
            return t
        }(t)),
        1 === e.craft ? Ue(ze, INFO_BOX[t], e.x, e.y) : e.x - 80 + INFO_BOX[t].width > g0 ? Ue(ze, INFO_BOX[t], g0 - INFO_BOX[t].width - 10, e.y - INFO_BOX[t].height - 10) : Ue(ze, INFO_BOX[t], e.x - 80, e.y - INFO_BOX[t].height - 10))
    }
    function hn(e, t) {
        sprite[Le.COUNTER][e] || (sprite[Le.COUNTER][e] = m1(We, "x" + e, 17, "#FFF"));
        var e = sprite[Le.COUNTER][e]
          , i = t.info.translate.x + t.info.img[0].width - e.width - 14 * We
          , n = t.info.translate.y + t.info.img[0].height - e.height - 19 * We;
        t.info.state == R2 && (n += 5 * We),
        Ue(ze, e, i, n)
    }
    function En() {
        if (Ye.totem.id = -1,
        Ye.totem.pid = -1,
        !(Ye.spectator || Ye.totem.wait || Ye.zombie)) {
            var e = Fe.fast_units[Ye.uid]
              , t = Ke.DIST_TOTEM;
            if (e)
                for (var i = 0; i < Fe.units[xe.TOTEM].length; i++) {
                    var n = Fe.units[xe.TOTEM][i]
                      , r = Utils.dist(n, e);
                    r < t && (t = r,
                    Ye.totem.id = n.id,
                    Ye.totem.pid = n.pid,
                    Ye.totem.info = n.info,
                    Ye.totem.lock = (16 & n.info) >> 4)
                }
            var o = Je.team_buttons_id
              , a = ((Je.team_buttons_id = -1) == Ye.totem.pid || 0 != Ye.team.length && Ye.id != Ye.totem.pid ? 0 != Ye.team.length && Ye.team[0] != Ye.id ? Je.team_buttons_id = H2.TEAM_LEAVE : 0 != Ye.team.length && Ye.team[0] == Ye.id ? Je.team_buttons_id = H2.TEAM_SHOW : 0 != Ye.team.length && (Je.team_buttons_id = H2.TEAM_JOIN) : 0 == Ye.team.length && 8 <= Ye.totem.info ? Je.team_buttons_id = H2.TEAM_FULL : 0 == Ye.team.length ? Je.team_buttons_id = H2.TEAM_JOIN : Je.team_buttons_id = H2.TEAM_MANAGE,
            -1 != Je.team_buttons_id && Je.team_buttons[Je.team_buttons_id].button.draw(ze),
            document.getElementById("team_box").style);
            -1 != Je.team_buttons_id && Je.team_buttons_id != o && "inline-block" == a.display && Je.team_buttons[Je.team_buttons_id].action()
        }
    }
    var Tn = [];
    function An() {
        for (var e, t, i = Ye.inv, n = (Fe.fast_units[Ye.uid],
        0); n < i.can_select.length; n++) {
            var r = i.can_select[n]
              , o = !1
              , a = ((a = Fe.fast_units[Ye.uid]) && (a.right == r.id || a.clothe == r.id && 0 < a.clothe) ? (o = !0,
            Ue(ze, r.info.img[2], r.info.translate.x, r.info.translate.y, r.info.width, r.info.height)) : r.draw(ze),
            Ye.inv.n[r.id])
              , o = (1 < a && hn(a, r),
            0 < a && (a = n,
            o = o,
            t = e = void 0,
            a = sprite[Le.SLOT_NUMBER][a],
            e = r.info.translate.x + 5 * We,
            t = r.info.translate.y + 5 * We,
            r.info.state != R2 && !o || (t += 5 * We),
            Ue(ze, a, e, t)),
            Ye.chest);
            !o.open || !(o.id < 0 || o.id == r.id) || o.lock && o.pid != Ye.id || Je.plus_buttons[r.id].draw(ze),
            Ye.furnace.open && Ge.WOOD == r.id && Je.plus_buttons[r.id].draw(ze),
            Ye.well.open && Ge.BUCKET_FULL == r.id && Je.plus_buttons[r.id].draw(ze),
            Ye.windmill.open && Ge.WILD_WHEAT == r.id && Je.plus_buttons[r.id].draw(ze),
            Ye.extractor.open && Ge.WOOD == r.id && Je.plus_buttons[r.id].draw(ze),
            !Ye.bread_oven.open || Ge.WOOD != r.id && Ge.FLOUR != r.id || Je.plus_buttons[r.id].draw(ze)
        }
        if (r && n < i.max) {
            var s = sprite[Le.EMPTY_SLOT][2];
            for (x = r.info.translate.x,
            y = r.info.translate.y,
            j = 1; n < i.max; n++,
            j++)
                Ue(ze, s, x + j * (s.width + 5), y)
        }
    }
    function In() {
        ze.save();
        var e = We
          , t = (Ye.gauges.life.x < .25 && (ze.globalAlpha = Ye.gauges.warn_life.v),
        0 < Ye.inv.can_select.length ? -70 : 0);
        (Ye.chest.open || Ye.furnace.open && -1 != Ye.inv.find_item(Ge.WOOD) || Ye.windmill.open && -1 != Ye.inv.find_item(Ge.WILD_WHEAT) || Ye.extractor.open && -1 != Ye.inv.find_item(Ge.WOOD) || Ye.well.open && -1 != Ye.inv.find_item(Ge.BUCKET_FULL) || Ye.bread_oven.open && (-1 != Ye.inv.find_item(Ge.WOOD) || -1 != Ye.inv.find_item(Ge.FLOUR))) && (t -= 50 * We),
        ze.translate((g0 - 950 * We) / 2, t),
        ze.fillStyle = "#69A148",
        ze.fillRect(this.translate.x + 37 * We, this.translate.y + 17 * We, 178 * Ye.gauges.life.x * We, 18 * We),
        ze.globalAlpha = 1,
        Ye.gauges.hunger.x < .35 && (ze.fillStyle = "#8F050A",
        ze.globalAlpha = Ye.gauges.warn_hunger.v,
        ze.fillRect(this.translate.x + 277 * We, this.translate.y + 17 * We, 178 * We, 18 * We),
        ze.globalAlpha = 1),
        ze.fillStyle = "#AF352A",
        ze.fillRect(this.translate.x + 277 * We, this.translate.y + 17 * We, 178 * Ye.gauges.hunger.x * We, 18 * We),
        Ye.gauges.cold.x < .35 && (ze.fillStyle = "#366B91",
        ze.globalAlpha = Ye.gauges.warn_cold.v,
        ze.fillRect(this.translate.x + 517 * We, this.translate.y + 17 * We, 178 * We, 18 * We),
        ze.globalAlpha = 1),
        ze.fillStyle = "#669BB1",
        ze.fillRect(this.translate.x + 517 * We, this.translate.y + 17 * We, 178 * Ye.gauges.cold.x * We, 18 * We),
        Ve.Timer && Ve.Timer && (ze.save(),
        ze.save(),
        ze.font = "34px Baloo Paaji",
        ze.strokeStyle = Ve.Timer3 ? Ve.HpTimerShadow : "#2b2b2b",
        ze.lineWidth = 7,
        ze.strokeText(Math.floor(100 * Ye.gauges.thirst.x) + "%", this.translate.x + 800 * We, this.translate.y + 0 * We),
        ze.strokeText(1 === Ye.gauges.cold.x ? 200 - Math.floor(100 * Ye.gauges.warm.x) + "%" : Math.floor(100 * Ye.gauges.cold.x) + "%", this.translate.x + 575 * We, this.translate.y + 0 * We),
        ze.strokeText(Math.floor(100 * Ye.gauges.hunger.x) + "%", this.translate.x + 325 * We, this.translate.y + 0 * We),
        ze.strokeText(Math.floor(200 * Ye.gauges.life.x) + "hp", this.translate.x - 80 * We, this.translate.y + 35 * We),
        ze.strokeText(Math.floor(11 - (performance.now() - M0.HPTimer) / 1e3) + "s", this.translate.x + 216 * We, this.translate.y + 35 * We),
        ze.strokeText(Math.floor(6 - (performance.now() - M0.GaugeTimer) / 1e3) + "s", this.translate.x + 460 * We, this.translate.y + 35 * We),
        ze.fillStyle = Ve.Timer3 ? Ve.HpTimer : "#fff",
        ze.fillText(Math.floor(100 * Ye.gauges.thirst.x) + "%", this.translate.x + 800 * We, this.translate.y + 0 * We),
        ze.fillText(1 === Ye.gauges.cold.x ? 200 - Math.floor(100 * Ye.gauges.warm.x) + "%" : Math.floor(100 * Ye.gauges.cold.x) + "%", this.translate.x + 575 * We, this.translate.y + 0 * We),
        ze.fillText(Math.floor(100 * Ye.gauges.hunger.x) + "%", this.translate.x + 325 * We, this.translate.y + 0 * We),
        ze.fillText(Math.floor(200 * Ye.gauges.life.x) + "hp", this.translate.x - 80 * We, this.translate.y + 35 * We),
        ze.fillText(Math.floor(11 - (performance.now() - M0.HPTimer) / 1e3) + "s", this.translate.x + 216 * We, this.translate.y + 35 * We),
        ze.fillText(Math.floor(6 - (performance.now() - M0.GaugeTimer) / 1e3) + "s", this.translate.x + 460 * We, this.translate.y + 35 * We),
        ze.restore(),
        ze.restore()),
        .99 < Ye.gauges.cold.x && (Ye.gauges.warm.x < .35 && (ze.fillStyle = "#6C4036",
        ze.globalAlpha = Ye.gauges.warn_warm.v,
        ze.fillRect(this.translate.x + 517 * We, this.translate.y + 17 * We, 178 * We, 18 * We),
        ze.globalAlpha = 1),
        ze.fillStyle = "#9C4036",
        ze.fillRect(this.translate.x + 517 * We, this.translate.y + 17 * We, 178 * (1 - Ye.gauges.warm.x) * We, 18 * We)),
        Ye.gauges.thirst.x < .35 && (ze.fillStyle = "#001A57",
        ze.globalAlpha = Ye.gauges.warn_thirst.v,
        ze.fillRect(this.translate.x + 757 * We, this.translate.y + 17 * We, 178 * We, 18 * We),
        ze.globalAlpha = 1),
        ze.fillStyle = "#074A87",
        ze.fillRect(this.translate.x + 757 * We, this.translate.y + 17 * We, 178 * Ye.gauges.thirst.x * We, 18 * We),
        We = e,
        Ue(ze, this.img, this.translate.x, this.translate.y),
        this.y = this.translate.y + t,
        ze.restore(),
        Ye.gauges.oxygen.x < .99 && (e = Math.floor(ke - sprite[Le.OXYGEN].width / 2),
        t += this.translate.y - sprite[Le.OXYGEN].height - 5 * We,
        ze.fillStyle = "#BBE8EF",
        ze.fillRect(e + 5, t + 5 * We, 588 * We * Ye.gauges.oxygen.x, 10 * We),
        Ye.gauges.oxygen.x < .35 && (ze.fillStyle = "#9BA8AF",
        ze.globalAlpha = Ye.gauges.warn_oxygen.v,
        ze.fillRect(e + 5, t + 5, 588 * We, 10 * We),
        ze.globalAlpha = 1),
        Ue(ze, sprite[Le.OXYGEN], e, t),
        this.y = t)
    }
    function pn(e) {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        i = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        i = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * i,
        Math.sin(this.hit.angle - this.angle) * i) : t = 0;
        var t, i, e = sprite[e][Fe.time];
        w = -e.width,
        h = -e.height,
        Ue(ze, e, -w / 2 + t, -h / 2 + i, w, h),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function gn() {
        var e, t;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        e = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        e = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * e,
        Math.sin(this.hit.angle - this.angle) * e) : t = 0,
        img = Ve.chestinfo && this.lock ? sprite[Le.CHEST][2] : sprite[Le.CHEST][Fe.time],
        w = -img.width,
        h = -img.height,
        Ue(ze, img, -w / 2 + t, -h / 2 + e, w, h),
        ze.restore(),
        this.action && Ve.chestinfo && (ze.save(),
        ze.globalAlpha = .9,
        Ue(ze, Je.chest_buttons[this.action / 2 - 1].info.img[0], Ye.cam.x + this.x + 25, Ye.cam.y + this.y + 15, w + 25, h + 25),
        ze.globalAlpha = 1,
        ze.font = "20px Baloo Paaji",
        ze.strokeStyle = "black",
        ze.lineWidth = 7,
        ze.strokeText(this.action / 2 - 1, Ye.cam.x + this.x - 32, Ye.cam.y + this.y - 12),
        ze.strokeText("x" + this.info, Ye.cam.x + this.x - 32, Ye.cam.y + this.y + 20),
        ze.fillStyle = "white",
        ze.fillText(this.action / 2 - 1, Ye.cam.x + this.x - 32, Ye.cam.y + this.y - 12),
        ze.fillText("x" + this.info, Ye.cam.x + this.x - 32, Ye.cam.y + this.y + 20),
        ze.restore()),
        this.steal && Ve.chestinfo && (ze.save(),
        ze.fillStyle = "white",
        ze.beginPath(),
        ze.arc(this.x + Ye.cam.x, this.y + Ye.cam.y, 7, 0, 2 * Math.PI),
        ze.fill(),
        ze.restore()),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function On() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        img = sprite[Le.THORNBUSH_SEED_MOB][Fe.time],
        w = -img.width,
        h = -img.height,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function bn() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        img = sprite[Le.GARLIC_SEED_MOB][Fe.time],
        w = -img.width,
        h = -img.height,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function mn() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        img = sprite[Le.PUMPKIN_SEED_MOB][Fe.time],
        w = -img.width,
        h = -img.height,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Cn() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        img = sprite[Le.ALOE_VERA][Fe.time],
        w = -img.width,
        h = -img.height,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Rn() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        img = sprite[Le.WHEAT_MOB][Fe.time],
        w = -img.width,
        h = -img.height,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore()
    }
    function Sn(e) {
        var t, i;
        .8 < (e = e / 100) || (ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        i = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        i = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * i,
        Math.sin(this.hit.angle - this.angle) * i) : t = 0,
        ze.globalAlpha = .5,
        v(ze, t, i, 18 * We, e),
        Ce(ze, null, "#000000", 18 * We),
        ze.globalAlpha = 1,
        v(ze, t, i, 18 * We, e),
        Ce(ze, null, Le.BROWN_LIFE[Fe.time], 6 * We),
        ze.restore())
    }
    function Nn(e) {
        var t, i;
        .95 < (e = e / 100) || (ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        i = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        i = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * i,
        Math.sin(this.hit.angle - this.angle) * i) : t = 0,
        ze.globalAlpha = .5,
        v(ze, t, i, 28 * We, e),
        Ce(ze, null, "#000000", 18 * We),
        ze.globalAlpha = 1,
        v(ze, t, i, 28 * We, e),
        Ce(ze, null, Le.CRAFT_LOADING[Fe.time], 6 * We),
        ze.restore())
    }
    function Dn(e) {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle);
        img = sprite[Le.ROOFS][0][Fe.time],
        w = -img.width,
        h = -img.height,
        Fe.fast_units[Ye.uid];
        ze.globalAlpha = .3,
        Ue(ze, img, -w / 2 + 0, -h / 2 + 0, w, h),
        ze.globalAlpha = 1,
        ze.restore()
    }
    function fn(e) {
        var t, i;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        i = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : i = 0,
        this.halo.update() && (this.color += .2 + .3 * Math.random()),
        img = sprite[Le.GARLANDS][Math.floor(this.id + this.color) % 5][Fe.time],
        w = -img.width * this.halo.v,
        h = -img.height * this.halo.v,
        Ue(ze, img, -w / 2 + i, -h / 2 + t, w, h),
        ze.restore(),
        Ve.Hitbox && ((i = Re[this.type]) ? ze.drawImage(i, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function vn(e) {
        var t, i;
        if (ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        i = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        i = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * i,
        Math.sin(this.hit.angle - this.angle) * i) : t = 0,
        e === Le.BED_TOP && !Fe.transition) {
            for (var n = 0, r = Fe.units[xe.PLAYERS], o = 0; o < r.length; o++) {
                var a = Utils.dist(r[o], this);
                if (a < 140 && 35 < a) {
                    n = 0;
                    break
                }
                a <= 35 && (n = 1)
            }
            this.opacity = 0 === n ? Math.max(.5, this.opacity - qe / 1.5) : Math.min(1, this.opacity + qe / 1.5),
            ze.globalAlpha = this.opacity
        }
        img = sprite[e][Fe.time],
        w = -img.width,
        h = -img.height,
        Ue(ze, img, -w / 2 + t, -h / 2 + i, w, h),
        ze.globalAlpha = 1,
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Mn(e) {
        var t, i;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        Ve.boostfps ? (img = sprite[e][Fe.time],
        w = -img.width,
        h = -img.height,
        Ue(ze, img, -w / 2 + 0, -h / 2 + 0, w, h)) : (i = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        i = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * i,
        Math.sin(this.hit.angle - this.angle) * i) : t = 0,
        img = sprite[e][Fe.time],
        w = -img.width,
        h = -img.height,
        Ue(ze, img, -w / 2 + t, -h / 2 + i, w, h)),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    var yn = 0;
    function Ln(e, t, i, n, r, o, a, s, d) {
        void 0 === s && (s = 0);
        for (var _ = e; _ <= t; _++)
            for (var u = i; u <= n; u++) {
                var l, c, h = he.tiles[_][u];
                void 0 !== h && void 0 !== h[o] && (h = h[o],
                l = sprite[r][Fe.time][h.river],
                Ue(ze, l, Ye.cam.x + h.x - l.width / (4 * _scale_object), Ye.cam.y + h.y - l.height / (4 * _scale_object), l.width / (2 * _scale_object), l.height / (2 * _scale_object)),
                De.quality) && ((c = (1103515245 * (1e3 * _ + u) + 12345) % 2147483648 / 2147483648) < .2 ? (c = Math.floor(sprite[Le.RIVER_DECO][Fe.time][h.river].length * (5 * c)),
                l = sprite[Le.RIVER_DECO][Fe.time][h.river][c],
                Ue(ze, l, Ye.cam.x + h.x - l.width / (4 * _scale_object), Ye.cam.y + h.y - l.height / (4 * _scale_object), l.width / (2 * _scale_object), l.height / (2 * _scale_object))) : 0 !== h.current && (l = sprite[Le.RIVER_WAVE][Fe.time],
                c = (yn + _ % 2 * 30) % 60,
                ze.globalAlpha = c < 30 ? c / 30 : 1 - (c - 30) / 30,
                Ue(ze, l, Ye.cam.x + h.x - l.width / (4 * _scale_object), Ye.cam.y + h.y - l.height / (4 * _scale_object) - 30 + c, l.width / (2 * _scale_object), l.height / (2 * _scale_object)),
                ze.globalAlpha = 1))
            }
    }
    function Gn() {
        1 == (1 & this.info) ? this.dig = Math.min(this.dig + qe, 2.2) : (this.dig = Math.max(this.dig - qe, 0),
        this.groundTimer += qe,
        .1 < this.groundTimer && (this.groundTimer = 0,
        t = {
            x: this.x + 60 * Math.random() - 30,
            y: this.y + 60 * Math.random() - 30,
            a: 0,
            r: 30 * Math.random() + 30
        },
        this.ground.push(t)));
        for (var e = 0; e < this.ground.length; e++) {
            var t = this.ground[e]
              , i = (ze.save(),
            ze.translate(Ye.cam.x + t.x, Ye.cam.y + t.y),
            t.a = Math.min(1, t.a + qe / 2),
            t.a);
            i < .2 ? i *= 5 : i = .8 < i ? 5 * (1 - i) : 1,
            ze.globalAlpha = .8 * i,
            we(ze, 0, 0, t.r),
            Ce(ze, Le.SAND_WORM_GROUND[Fe.time]),
            ze.restore(),
            1 === t.a && (this.ground.splice(e, 1),
            e--)
        }
    }
    function Hn() {
        var e, t = void 0, i = void 0;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.breath.update(),
        this.rotate.update(),
        .1 <= this.dig && this.dig <= 1.1 && ((e = Math.max(0, Math.min(1, this.dig - .1))) < .2 ? e *= 5 : e = .8 < e ? 5 * (1 - e) : 1,
        t = sprite[Le.SAND_WORM1][Fe.time],
        w = -t.width * this.breath.v,
        h = -t.height * this.breath.v,
        ze.globalAlpha = e,
        Ue(ze, t, -w / 4, -h / 4, w / 2, h / 2),
        i = sprite[Le.HURT_SAND_WORM1]),
        .9 <= this.dig && ((e = Math.max(0, Math.min(1, this.dig - .9))) < .2 ? e *= 5 : e = 1,
        t = sprite[Le.SAND_WORM2][Fe.time],
        w = -t.width * this.breath.v,
        h = -t.height * this.breath.v,
        ze.globalAlpha = e,
        Ue(ze, t, -w / 4, -h / 4, w / 2, h / 2),
        i = sprite[Le.HURT_SAND_WORM2]),
        this.action & m.HURT && void 0 !== i && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = (.6 - this.hit.v) * e,
        w = -i.width * this.breath.v,
        h = -i.height * this.breath.v,
        Ue(ze, i, -w / 4, -h / 4, w / 2, h / 2)),
        ze.globalAlpha = 1,
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Pn() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle);
        var e = Utils.dist(this, this.r);
        this.scale = 350 < e ? Math.min(this.scale + qe / 2, 1.8) : Math.max(this.scale - qe, 1),
        this.breath.update(),
        this.rotate.update(),
        this._alpha = e < 350 ? Math.max(0, this._alpha - 2.2 * qe) : Math.min(1, this._alpha + 2.2 * qe),
        e = sprite[Le.VULTURE_GROUND_ATTACK][Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        ze.globalAlpha = 1 - this._alpha,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        e = sprite[Le.VULTURE_ATTACK][Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        ze.globalAlpha = this._alpha,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = (.6 - this.hit.v) * (1 - this._alpha),
        e = sprite[Le.HURT_VULTURE_GROUND],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        ze.globalAlpha = (.6 - this.hit.v) * this._alpha,
        w = -(e = sprite[Le.HURT_VULTURE]).width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        e = sprite[Le.VULTURE_WING_LEFT_ATTACK][Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        ze.save(),
        ze.translate(-40 * We, 80 * We),
        ze.rotate(this.rotate.v),
        ze.globalAlpha = this._alpha,
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        this.action & m.HURT && (ze.globalAlpha = (.6 - this.hit.v) * this._alpha,
        e = sprite[Le.HURT_VULTURE_WING_LEFT],
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.restore(),
        e = sprite[Le.VULTURE_WING_RIGHT_ATTACK][Fe.time],
        ze.save(),
        ze.translate(40 * We, 80 * We),
        ze.rotate(-this.rotate.v),
        ze.globalAlpha = this._alpha,
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        this.action & m.HURT && (ze.globalAlpha = (.6 - this.hit.v) * this._alpha,
        e = sprite[Le.HURT_VULTURE_WING_RIGHT],
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.globalAlpha = 1,
        ze.restore(),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Bn() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle);
        var e = Utils.dist(this, this.r);
        this.scale = 350 < e ? Math.min(this.scale + qe / 2, 1.8) : Math.max(this.scale - qe, 1),
        this.breath.update(),
        this.rotate.update(),
        this._alpha = e < 350 ? Math.max(0, this._alpha - 2.2 * qe) : Math.min(1, this._alpha + 2.2 * qe),
        e = (0 == (1 & this.info) ? sprite[Le.HAWK_GROUND] : sprite[Le.HAWK_GROUND_ATTACK])[Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        ze.globalAlpha = 1 - this._alpha,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        e = (0 == (1 & this.info) ? sprite[Le.HAWK] : sprite[Le.HAWK_ATTACK])[Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        ze.globalAlpha = this._alpha,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = (.6 - this.hit.v) * (1 - this._alpha),
        e = sprite[Le.HURT_HAWK_GROUND],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        ze.globalAlpha = (.6 - this.hit.v) * this._alpha,
        w = -(e = sprite[Le.HURT_HAWK]).width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        e = (0 == (1 & this.info) ? sprite[Le.HAWK_WING_LEFT] : sprite[Le.HAWK_WING_LEFT_ATTACK])[Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        ze.save(),
        ze.translate(-20 * We, 0 * We),
        ze.rotate(this.rotate.v),
        ze.globalAlpha = this._alpha,
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        this.action & m.HURT && (ze.globalAlpha = (.6 - this.hit.v) * this._alpha,
        e = sprite[Le.HURT_HAWK_WING_LEFT],
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.restore(),
        e = (0 == (1 & this.info) ? sprite[Le.HAWK_WING_RIGHT] : sprite[Le.HAWK_WING_RIGHT_ATTACK])[Fe.time],
        ze.save(),
        ze.translate(20 * We, 0 * We),
        ze.rotate(-this.rotate.v),
        ze.globalAlpha = this._alpha,
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        this.action & m.HURT && (ze.globalAlpha = (.6 - this.hit.v) * this._alpha,
        e = sprite[Le.HURT_HAWK_WING_RIGHT],
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.globalAlpha = 1,
        ze.restore(),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function wn() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        300 < Utils.dist(this, this.r) ? this.scale = Math.min(this.scale + qe / 2, 1.8) : this.scale = Math.max(this.scale - qe, 1),
        this.breath.update(),
        this.rotate.update(),
        e = (0 === this.info ? sprite[Le.BABY_LAVA] : sprite[Le.BABY_LAVA_ATTACK])[Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_BABY_LAVA],
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        e = (0 === this.info ? sprite[Le.BABY_LAVA_WING_LEFT] : sprite[Le.BABY_LAVA_WING_LEFT_ATTACK])[Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        ze.save(),
        ze.translate(-40 * We, 10 * We),
        ze.rotate(this.rotate.v),
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_BABY_LAVA_WING_LEFT],
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.restore(),
        e = (0 === this.info ? sprite[Le.BABY_LAVA_WING_RIGHT] : sprite[Le.BABY_LAVA_WING_RIGHT_ATTACK])[Fe.time],
        ze.save(),
        ze.translate(40 * We, 10 * We),
        ze.rotate(-this.rotate.v),
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_BABY_LAVA_WING_RIGHT],
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.restore(),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function zn() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        300 < Utils.dist(this, this.r) ? this.scale = Math.min(this.scale + qe / 2, 1.8) : this.scale = Math.max(this.scale - qe, 1),
        this.breath.update(),
        this.rotate.update(),
        e = (0 === this.info ? sprite[Le.BABY_DRAGON] : sprite[Le.BABY_DRAGON_ATTACK])[Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_BABY_DRAGON],
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        e = (0 === this.info ? sprite[Le.BABY_DRAGON_WING_LEFT] : sprite[Le.BABY_DRAGON_WING_LEFT_ATTACK])[Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        ze.save(),
        ze.translate(-40 * We, 10 * We),
        ze.rotate(this.rotate.v),
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_BABY_DRAGON_WING_LEFT],
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.restore(),
        e = (0 === this.info ? sprite[Le.BABY_DRAGON_WING_RIGHT] : sprite[Le.BABY_DRAGON_WING_RIGHT_ATTACK])[Fe.time],
        ze.save(),
        ze.translate(40 * We, 10 * We),
        ze.rotate(-this.rotate.v),
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_BABY_DRAGON_WING_RIGHT],
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.restore(),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function kn() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        300 < Utils.dist(this, this.r) ? this.scale = Math.min(this.scale + qe / 2, 1.8) : this.scale = Math.max(this.scale - qe, 1),
        this.breath.update(),
        this.rotate.update(),
        e = sprite[Le.LAVA_DRAGON][Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_LAVA_DRAGON],
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        e = sprite[Le.LAVA_WING_LEFT][Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        ze.save(),
        ze.translate(-60 * We, 20 * We),
        ze.rotate(this.rotate.v),
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_LAVA_WING_LEFT],
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.restore(),
        e = sprite[Le.LAVA_WING_RIGHT][Fe.time],
        ze.save(),
        ze.translate(60 * We, 20 * We),
        ze.rotate(-this.rotate.v),
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_LAVA_WING_RIGHT],
        Ue(ze, e, -w * We / 4, -h * We / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.restore(),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Wn() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        300 < Utils.dist(this, this.r) ? this.scale = Math.min(this.scale + qe / 2, 1.8) : this.scale = Math.max(this.scale - qe, 1),
        this.breath.update(),
        this.rotate.update(),
        e = sprite[Le.DRAGON][Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_DRAGON],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        e = sprite[Le.WING_LEFT][Fe.time],
        w = -e.width * this.breath.v * this.scale,
        h = -e.height * this.breath.v * this.scale,
        ze.save(),
        ze.translate(-30 * We, 70 * We),
        ze.rotate(this.rotate.v),
        Ue(ze, e, -10 * We, -40 * We, w, h),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_WING_LEFT],
        Ue(ze, e, -10 * We, -40 * We, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        e = sprite[Le.WING_RIGHT][Fe.time],
        ze.save(),
        ze.translate(30 * We, 70 * We),
        ze.rotate(-this.rotate.v),
        Ue(ze, e, 10 * We - w, -40 * We, w, h),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_WING_RIGHT],
        Ue(ze, e, 10 * We - w, -40 * We, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Vn(e, t) {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        e === Le.GIFT && (e = Le.CRATE,
        this.info = 36),
        img = sprite[e][this.info][Fe.time],
        w = -img.width / 2,
        h = -img.height / 2,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = yr(this.info, img, __EFFECT_BOX__),
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        ze.save(),
        ze.font = "18px Baloo Paaji",
        ze.strokeStyle = "black",
        ze.lineWidth = 7,
        ze.strokeText(this.hited, Ye.cam.x + this.x - 10, Ye.cam.y + this.y + 20),
        ze.strokeText(86 === this.type ? "Drop" : "Dead", Ye.cam.x + this.x - 25, Ye.cam.y + this.y),
        ze.strokeText(Math.floor((86 === this.type ? 17 : 300) - (performance.now() - this.spawnTime) / 1e3) + "s", Ye.cam.x + this.x - 12.5, Ye.cam.y + this.y + 40),
        ze.fillStyle = "white",
        ze.fillText(this.hited, Ye.cam.x + this.x - 10, Ye.cam.y + this.y + 20),
        ze.fillText(86 === this.type ? "Drop" : "Dead", Ye.cam.x + this.x - 25, Ye.cam.y + this.y),
        ze.fillText(Math.floor((86 === this.type ? 17 : 300) - (performance.now() - this.spawnTime) / 1e3) + "s", Ye.cam.x + this.x - 12.5, Ye.cam.y + this.y + 40),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Un(e, t) {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        e = sprite[e][Fe.time],
        w = -e.width,
        h = -e.height,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[t],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Kn() {
        var e;
        this.breath.update(),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        e = (0 === this.info ? sprite[Le.BABY_MAMMOTH] : sprite[Le.BABY_MAMMOTH_ATTACK])[Fe.time],
        w = -e.width * this.breath.v,
        h = -e.height * this.breath.v,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_BABY_MAMMOTH],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function xn() {
        var e;
        this.breath.update(),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        e = (0 === this.info ? sprite[Le.BOAR] : sprite[Le.BOAR_ATTACK])[Fe.time],
        w = -e.width * this.breath.v,
        h = -e.height * this.breath.v,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_BOAR],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Fn() {
        var e, t = Math.PI / 2, i = Math.PI / 4;
        this.breath.update(),
        this.breathl.update(),
        this.breathr.update(),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        e = (0 === this.info ? sprite[Le.CRAB_BOSS] : sprite[Le.CRAB_BOSS_ATTACK])[Fe.time],
        w = -e.width * this.breath.v,
        h = -e.height * this.breath.v,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_CRAB_BOSS],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        this.action & m.COLD && (this.heal.update() && 0 == this.heal.o && (this.action -= m.COLD),
        ze.globalAlpha = .6 - this.heal.v,
        e = sprite[Le.HEAL_CRAB_BOSS],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle + i),
        ze.translate(100, 0),
        ze.rotate(t),
        e = (0 === this.info ? sprite[Le.CRAB_BOSS_CLAW_LEFT] : sprite[Le.CRAB_BOSS_CLAW_LEFT_ATTACK])[Fe.time],
        w = -e.width * this.breathl.v,
        h = -e.height * this.breathl.v,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_CRAB_BOSS_CLAW_LEFT],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        this.action & m.COLD && (ze.globalAlpha = .6 - this.heal.v,
        e = sprite[Le.HEAL_CRAB_BOSS_CLAW_LEFT],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle + t + i),
        ze.translate(100, 0),
        ze.rotate(t),
        e = (0 === this.info ? sprite[Le.CRAB_BOSS_CLAW_RIGHT] : sprite[Le.CRAB_BOSS_CLAW_RIGHT_ATTACK])[Fe.time],
        w = -e.width * this.breathr.v,
        h = -e.height * this.breathr.v,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_CRAB_BOSS_CLAW_RIGHT],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        this.action & m.COLD && (ze.globalAlpha = .6 - this.heal.v,
        e = sprite[Le.HEAL_CRAB_BOSS_CLAW_RIGHT],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((i = Re[this.type]) ? ze.drawImage(i, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Yn() {
        var e, t = Math.PI / 2, i = Math.PI / 4;
        this.breath.update(),
        this.breathl.update(),
        this.breathr.update(),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        e = (0 === this.info ? sprite[Le.CRAB] : sprite[Le.CRAB_ATTACK])[Fe.time],
        w = -e.width * this.breath.v,
        h = -e.height * this.breath.v,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_CRAB],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        this.action & m.COLD && (this.heal.update() && 0 == this.heal.o && (this.action -= m.COLD),
        ze.globalAlpha = .6 - this.heal.v,
        e = sprite[Le.HEAL_CRAB],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle + i),
        ze.translate(55, 0),
        ze.rotate(t),
        e = (0 === this.info ? sprite[Le.CRAB_CLAW_LEFT] : sprite[Le.CRAB_CLAW_LEFT_ATTACK])[Fe.time],
        w = -e.width * this.breathl.v,
        h = -e.height * this.breathl.v,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_CRAB_CLAW_LEFT],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        this.action & m.COLD && (ze.globalAlpha = .6 - this.heal.v,
        e = sprite[Le.HEAL_CRAB_CLAW_LEFT],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle + t + i),
        ze.translate(55, 0),
        ze.rotate(t),
        e = (0 === this.info ? sprite[Le.CRAB_CLAW_RIGHT] : sprite[Le.CRAB_CLAW_RIGHT_ATTACK])[Fe.time],
        w = -e.width * this.breathr.v,
        h = -e.height * this.breathr.v,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (ze.globalAlpha = .6 - this.hit.v,
        e = sprite[Le.HURT_CRAB_CLAW_RIGHT],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        this.action & m.COLD && (ze.globalAlpha = .6 - this.heal.v,
        e = sprite[Le.HEAL_CRAB_CLAW_RIGHT],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((i = Re[this.type]) ? ze.drawImage(i, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Jn() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.born = Math.min(1, this.born + 2 * qe),
        ze.globalAlpha = Math.min(1, Math.max(0, Utils.dist(this, this.r) / 80)) * this.born,
        this.breath.update(),
        img = sprite[Le.SPELL][Fe.time][this.spell],
        h = this.spell < 2 ? (w = -img.width * this.breath.v,
        -img.height * this.breath.v) : 0 === this.fly ? (w = -img.width,
        -img.height) : (w = 1.35 * -img.width,
        1.35 * -img.height),
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1,
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Xn(e, t) {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.breath.update(),
        e = sprite[e][Fe.time],
        w = -e.width * this.breath.v,
        h = -e.height * this.breath.v,
        Ue(ze, e, -w / 2, -h / 2, w, h),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[t],
        Ue(ze, e, -w / 2, -h / 2, w, h),
        ze.globalAlpha = 1),
        ze.restore(),
        !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
        ze.lineWidth = 3.5,
        ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
        ze.strokeStyle = "red",
        ze.stroke()),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function jn(e, t) {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.breath.update(),
        e = sprite[e][Fe.time],
        w = -e.width * this.breath.v,
        h = -e.height * this.breath.v,
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
        ze.globalAlpha = .6 - this.hit.v,
        e = sprite[t],
        Ue(ze, e, -w / 4, -h / 4, w / 2, h / 2),
        ze.globalAlpha = 1),
        ze.restore(),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function qn(e, t, i) {
        ze.save(),
        ze.translate(Ye.cam.x + t, Ye.cam.y + i),
        ze.rotate(this.angle),
        ze.translate(this.x - t, this.y - i),
        this.breath.update(),
        img = sprite[e][Fe.time],
        w = -img.width * this.breath.v,
        h = -img.height * this.breath.v,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore(),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Zn(e) {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.breath.update(),
        img = sprite[e][Fe.time],
        w = -img.width * this.breath.v,
        h = -img.height * this.breath.v,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function $n() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0;
        var e, t, i, n, r = 15 & this.info;
        10 === this.info || 0 == r ? (ze.rotate(this.angle),
        this.ground.update(),
        r = -(n = (16 & this.info ? sprite[Le.PLANT_THORNBUSH_DRIED] : sprite[Le.PLANT_THORNBUSH])[Fe.time]).width * this.ground.v,
        i = -n.height * this.ground.v,
        Ue(ze, n, -r / 2 + e, -i / 2 + t, r, i)) : (n = (16 & this.info ? sprite[Le.DRIED_THORNBUSH] : sprite[Le.THORNBUSH])[Fe.time],
        ze.translate(0, n.height / 2),
        Ue(ze, n, e - n.width / 2, -n.height + t)),
        ze.restore(),
        Ve.Hitbox && ((r = Re[this.type]) ? ze.drawImage(r, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Qn() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0;
        var e, t, i, n, r = 15 & this.info;
        10 === this.info || 0 == r ? (ze.rotate(this.angle),
        this.ground.update(),
        r = -(n = (16 & this.info ? sprite[Le.PLANT_GARLIC_DRIED] : sprite[Le.PLANT_GARLIC])[Fe.time]).width * this.ground.v,
        i = -n.height * this.ground.v,
        Ue(ze, n, -r / 2 + e, -i / 2 + t, r, i)) : (n = (16 & this.info ? sprite[Le.DRIED_GARLIC] : sprite[Le.GARLIC])[Fe.time],
        ze.translate(0, n.height / 2),
        Ue(ze, n, e - n.width / 2, -n.height + t)),
        ze.restore(),
        Ve.Hitbox && ((r = Re[this.type]) ? ze.drawImage(r, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function er() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0;
        var e, t, i, n, r = 15 & this.info;
        10 === this.info || 0 == r ? (ze.rotate(this.angle),
        this.ground.update(),
        r = -(n = (16 & this.info ? sprite[Le.PLANT_ALOE_VERA_DRIED] : sprite[Le.PLANT_ALOE_VERA])[Fe.time]).width * this.ground.v,
        i = -n.height * this.ground.v,
        Ue(ze, n, -r / 2 + e, -i / 2 + t, r, i)) : (n = (16 & this.info ? sprite[Le.DRIED_ALOE_VERA] : sprite[Le.ALOE_VERA_GROWN])[Fe.time],
        ze.translate(0, n.height / 2),
        Ue(ze, n, e - n.width / 2, -n.height + t)),
        ze.restore(),
        Ve.Hitbox && ((r = Re[this.type]) ? ze.drawImage(r, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function tr() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0;
        var e, t, i, n, r = 15 & this.info;
        10 === this.info || 0 == r ? (ze.rotate(this.angle),
        this.ground.update(),
        r = -(n = (16 & this.info ? sprite[Le.PLANT_WATERMELON_DRIED] : sprite[Le.PLANT_WATERMELON])[Fe.time]).width * this.ground.v,
        i = -n.height * this.ground.v,
        Ue(ze, n, -r / 2 + e, -i / 2 + t, r, i)) : (n = (16 & this.info ? sprite[Le.DRIED_WATERMELON] : sprite[Le.WATERMELON])[Fe.time],
        ze.translate(0, n.height / 2),
        Ue(ze, n, e - n.width / 2, -n.height + t)),
        ze.restore(),
        Ve.Hitbox && ((r = Re[this.type]) ? ze.drawImage(r, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function ir() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0;
        var e, t, i, n, r = 15 & this.info;
        10 === this.info || 0 == r ? (ze.rotate(this.angle),
        this.ground.update(),
        r = -(n = (16 & this.info ? sprite[Le.PLANT_CARROT_DRIED] : sprite[Le.PLANT_CARROT])[Fe.time]).width * this.ground.v,
        i = -n.height * this.ground.v,
        Ue(ze, n, -r / 2 + e, -i / 2 + t, r, i)) : (n = (16 & this.info ? sprite[Le.DRIED_CARROT] : sprite[Le.CARROT])[Fe.time],
        ze.translate(0, n.height / 2),
        Ue(ze, n, e - n.width / 2, -n.height + t)),
        ze.restore(),
        Ve.Hitbox && ((r = Re[this.type]) ? ze.drawImage(r, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function nr() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0;
        var e, t, i, n, r = 15 & this.info;
        10 === this.info || 0 == r ? (ze.rotate(this.angle),
        this.ground.update(),
        r = -(n = (16 & this.info ? sprite[Le.PLANT_PUMPKIN_DRIED] : sprite[Le.PLANT_PUMPKIN])[Fe.time]).width * this.ground.v,
        i = -n.height * this.ground.v,
        Ue(ze, n, -r / 2 + e, -i / 2 + t, r, i)) : (n = (16 & this.info ? sprite[Le.DRIED_PUMPKIN] : sprite[Le.PUMPKIN])[Fe.time],
        ze.translate(0, n.height / 2),
        Ue(ze, n, e - n.width / 2, -n.height + t)),
        ze.restore(),
        Ve.Hitbox && ((r = Re[this.type]) ? ze.drawImage(r, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function rr() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0;
        var e, t, i, n, r = 15 & this.info;
        10 === this.info || 0 == r ? (ze.rotate(this.angle),
        this.ground.update(),
        r = -(n = (16 & this.info ? sprite[Le.WHEAT_SEED_DRIED] : sprite[Le.WHEAT_SEED])[Fe.time]).width * this.ground.v,
        i = -n.height * this.ground.v,
        Ue(ze, n, -r / 2 + e, -i / 2 + t, r, i)) : (this.wind.update(),
        n = (16 & this.info ? sprite[Le.DRIED_WHEAT] : sprite[Le.WILD_WHEAT])[Fe.time],
        ze.translate(0, n.height / 2),
        ze.rotate(this.wind.v),
        Ue(ze, n, e - n.width / 2, -n.height + t)),
        ze.restore(),
        Ve.Hitbox && ((r = Re[this.type]) ? ze.drawImage(r, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function or() {
        var e, t, i, n, r;
        this.info < 10 || (ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0,
        this.ground.update(),
        i = -(r = sprite[Le.PLANT_SEED][Fe.time]).width * this.ground.v,
        n = -r.height * this.ground.v,
        Ue(ze, r, -i / 2 + e, -n / 2 + t, i, n),
        ze.restore(),
        Ve.Hitbox && ((r = Re[this.type]) ? ze.drawImage(r, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0)))
    }
    function ar() {
        if (10 !== this.info) {
            ze.save(),
            ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
            ze.rotate(this.angle),
            e = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
            e = (1 - this.hit.anim.v) * qe * 600 * We,
            i = Math.cos(this.hit.angle - this.angle) * e,
            Math.sin(this.hit.angle - this.angle) * e) : i = 0,
            t = (16 & this.info ? sprite[Le.DRIED_PLANT] : sprite[Le.PLANT_MINI])[Fe.time],
            Ue(ze, t, -t.width / 2 + i, -t.width / 2 + e),
            ze.restore();
            for (var e, t, i, n = 15 & this.info, r = 0; r < n; r++)
                this.fruits[r].draw(Le.FRUIT);
            Ve.Hitbox && ((i = Re[this.type]) ? ze.drawImage(i, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
        }
    }
    function sr() {
        var e, t, i, n, r;
        this.info < 10 || (ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0,
        this.ground.update(),
        i = -(r = sprite[Le.PLANT_TOMATO][Fe.time]).width * this.ground.v,
        n = -r.height * this.ground.v,
        Ue(ze, r, -i / 2 + e, -n / 2 + t, i, n),
        ze.restore(),
        Ve.Hitbox && ((r = Re[this.type]) ? ze.drawImage(r, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0)))
    }
    function dr() {
        if (10 !== this.info) {
            for (var e, t, i, n = 15 & this.info, r = 0; r < n; r++)
                this.fruits[r].draw(Le.TOMATO, this.x, this.y);
            ze.save(),
            ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
            ze.rotate(this.angle),
            e = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
            e = (1 - this.hit.anim.v) * qe * 600 * We,
            i = Math.cos(this.hit.angle - this.angle) * e,
            Math.sin(this.hit.angle - this.angle) * e) : i = 0,
            t = (16 & this.info ? sprite[Le.DRIED_TOMATO_MINI] : sprite[Le.TOMATO_MINI])[Fe.time],
            Ue(ze, t, -t.width / 2 + i, -t.width / 2 + e),
            ze.restore(),
            Ve.Hitbox && ((i = Re[this.type]) ? ze.drawImage(i, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
        }
    }
    function _r() {
        var e, t;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        e = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        e = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * e,
        Math.sin(this.hit.angle - this.angle) * e) : t = 0,
        img = (2 == this.action ? sprite[Le.FURNACE_ON] : sprite[Le.FURNACE_OFF])[Fe.time],
        Ue(ze, img, -img.width / 2 + t, -img.height / 2 + e),
        ze.restore(),
        this.info && Ve.worldinfo && (ze.save(),
        ze.font = "20px Baloo Paaji",
        ze.strokeStyle = "black",
        ze.lineWidth = 7,
        ze.strokeText(this.info + "å€‹:" + 5 * this.info + "ç§’", Ye.cam.x + this.x - 15, Ye.cam.y + this.y),
        ze.fillStyle = "white",
        ze.fillText(this.info + "å€‹:" + 5 * this.info + "ç§’", Ye.cam.x + this.x - 15, Ye.cam.y + this.y),
        ze.restore()),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function ur() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.ground.update(),
        ze.globalAlpha = .3;
        var e = sprite[Le.GROUND_FIRE][Fe.time]
          , t = -e.width * this.ground.v
          , i = -e.height * this.ground.v;
        Ue(ze, e, -t / 2, -i / 2, t, i),
        ze.globalAlpha = 1,
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function lr() {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        31 & this.info && 992 & this.info && 31744 != (31744 & this.info) && (0 == this.smog.length || this.smog[this.smog.length - 1] <= Le.SMOG_PUSH) && this.smog.push(Le.SMOG);
        for (var e, t = 0; t < this.smog.length; t++) {
            this.smog[t] = Math.max(0, this.smog[t] - qe * Le.SMOG_SPEED),
            ze.globalAlpha = this.smog[t] / 1.3;
            var i = 40 * (1 - this.smog[t])
              , n = 35 * (1 - this.smog[t]) + 10;
            we(ze, -68 * We + Math.cos(-this.angle - Math.PI / 2) * i, -20 * We + Math.sin(-this.angle - Math.PI / 2) * i, n),
            Ce(ze, "#333333")
        }
        ze.globalAlpha = 1,
        0 < this.smog.length && 0 === this.smog[0] && this.smog.shift(),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function cr(e) {
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.ground.update(),
        ze.globalAlpha = .3;
        var t, i = sprite[Le.GROUND_FIRE][Fe.time], n = -i.width * this.ground.v, r = -i.height * this.ground.v;
        Ue(ze, i, -n / 2, -r / 2, n, r),
        ze.globalAlpha = 1,
        r = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        n = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * n,
        Math.sin(this.hit.angle - this.angle) * n) : t = 0,
        i = sprite[e][Fe.time],
        Ue(ze, i, -i.width / 2 + t, -i.height / 2 + r),
        ze.restore(),
        Ve.Hitbox && ((n = Re[this.type]) ? ze.drawImage(n, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function hr() {
        var e, t;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        e = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        e = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * e,
        Math.sin(this.hit.angle - this.angle) * e) : t = 0,
        img = 0 === this.info ? sprite[Le.SIGN][Fe.time] : sprite[Le.SYMBOLS][Fe.time][this.info - 1],
        Ue(ze, img, -img.width / 2 + t, -img.height / 2 + e),
        ze.restore(),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Er() {
        var e, t, i, n, r;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0,
        31 & this.info && 992 & this.info && 31744 != (31744 & this.info) ? (i = sprite[Le.BREAD_OVEN_ON][Fe.time],
        Ue(ze, i, -i.width / 2 + e, -i.height / 2 + t),
        this.up.update(),
        r = -(i = sprite[Le.BREAD_LIGHT_UP][Fe.time]).width * this.up.v,
        n = -i.height * this.up.v,
        Ue(ze, i, -r / 2 + +We, -n / 2 + 3 * We, r, n)) : (i = sprite[Le.BREAD_OVEN_OFF][Fe.time],
        Ue(ze, i, -i.width / 2 + e, -i.height / 2 + t)),
        ze.restore(),
        this.info && Ve.worldinfo && ze.drawImage(this.img.canvas, Ye.cam.x + this.x - 33, Ye.cam.y + this.y - 47),
        Ve.Hitbox && ((r = Re[this.type]) ? ze.drawImage(r, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Tr() {
        var e, t;
        t = this.hit.update ? (t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0,
        255 & this.info && 65280 != (65280 & this.info) && (this.rotate = (this.rotate + .5 * qe) % (2 * Math.PI)),
        ze.save(),
        ze.translate(Ye.cam.x + this.x + e, Ye.cam.y + this.y + t),
        ze.save(),
        ze.rotate(this.rotate),
        img = sprite[Le.WINDMILL_WINGS][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        ze.save(),
        ze.rotate(this.angl),
        img = sprite[Le.WINDMILL_HEAD][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        ze.restore(),
        this.info && Ve.worldinfo && ze.drawImage(this.img.canvas, Ye.cam.x + this.x - 30, Ye.cam.y + this.y - 40)
    }
    function Ar() {
        var e, t;
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0,
        ze.save(),
        255 & this.info && 65280 != (65280 & this.info) && !Ve.boostfps && (e += 2 * Math.random() - 1,
        t += 2 * Math.random() - 1),
        ze.translate(Ye.cam.x + this.x + e, Ye.cam.y + this.y + t),
        ze.rotate(this.angle),
        img = sprite[Le.EXTRACTOR_MACHINE_STONE][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        255 & this.info && 65280 != (65280 & this.info) && !Ve.boostfps && (this.rotate = (this.rotate + 3 * qe) % (2 * Math.PI)),
        ze.rotate(this.rotate),
        img = sprite[Le.EXTRACTOR_MACHINE0_STONE][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        this.info && Ve.worldinfo && ze.drawImage(this.img.canvas, Ye.cam.x + this.x - 30, Ye.cam.y + this.y - 40),
        (Ve.AutoExtTake.e || Ve.AutoExtPut.e || Ve.AutoSteal.e) && (e = Fe.fast_units[Ye.uid]) && Jo(e, this) < 300 && (Ve.AutoExtPut.e && client.socket.send(JSON.stringify([38, 255, this.pid, this.id, 24])),
        Ve.AutoExtTake.e || Ve.AutoSteal.e) && client.socket.send(JSON.stringify([37, this.pid, this.id, 24])),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Ir() {
        var e, t;
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0,
        ze.save(),
        255 & this.info && 65280 != (65280 & this.info) && !Ve.boostfps && (e += 2 * Math.random() - 1,
        t += 2 * Math.random() - 1),
        ze.translate(Ye.cam.x + this.x + e, Ye.cam.y + this.y + t),
        ze.rotate(this.angle),
        img = sprite[Le.EXTRACTOR_MACHINE_GOLD][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        255 & this.info && 65280 != (65280 & this.info) && !Ve.boostfps && (this.rotate = (this.rotate + 3 * qe) % (2 * Math.PI)),
        ze.rotate(this.rotate),
        img = sprite[Le.EXTRACTOR_MACHINE0_GOLD][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        this.info && Ve.worldinfo && ze.drawImage(this.img.canvas, Ye.cam.x + this.x - 30, Ye.cam.y + this.y - 40),
        (Ve.AutoExtTake.e || Ve.AutoExtPut.e || Ve.AutoSteal.e) && (e = Fe.fast_units[Ye.uid]) && Jo(e, this) < 300 && (Ve.AutoExtPut.e && client.socket.send(JSON.stringify([38, 255, this.pid, this.id, 25])),
        Ve.AutoExtTake.e || Ve.AutoSteal.e) && client.socket.send(JSON.stringify([37, this.pid, this.id, 25])),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function pr() {
        var e, t;
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0,
        ze.save(),
        255 & this.info && 65280 != (65280 & this.info) && !Ve.boostfps && (e += 2 * Math.random() - 1,
        t += 2 * Math.random() - 1),
        ze.translate(Ye.cam.x + this.x + e, Ye.cam.y + this.y + t),
        ze.rotate(this.angle),
        img = sprite[Le.EXTRACTOR_MACHINE_DIAMOND][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        255 & this.info && 65280 != (65280 & this.info) && !Ve.boostfps && (this.rotate = (this.rotate + 3 * qe) % (2 * Math.PI)),
        img = sprite[Le.EXTRACTOR_MACHINE0_DIAMOND][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        this.info && Ve.worldinfo && ze.drawImage(this.img.canvas, Ye.cam.x + this.x - 30, Ye.cam.y + this.y - 40),
        (Ve.AutoExtTake.e || Ve.AutoExtPut.e || Ve.AutoSteal.e) && (e = Fe.fast_units[Ye.uid]) && Jo(e, this) < 300 && (Ve.AutoExtPut.e && client.socket.send(JSON.stringify([38, 255, this.pid, this.id, 26])),
        Ve.AutoExtTake.e || Ve.AutoSteal.e) && client.socket.send(JSON.stringify([37, this.pid, this.id, 26])),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function gr() {
        var e, t;
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0,
        ze.save(),
        255 & this.info && 65280 != (65280 & this.info) && !Ve.boostfps && (e += 2 * Math.random() - 1,
        t += 2 * Math.random() - 1),
        ze.translate(Ye.cam.x + this.x + e, Ye.cam.y + this.y + t),
        ze.rotate(this.angle),
        img = sprite[Le.EXTRACTOR_MACHINE_AMETHYST][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        255 & this.info && 65280 != (65280 & this.info) && !Ve.boostfps && (this.rotate = (this.rotate + 3 * qe) % (2 * Math.PI)),
        ze.rotate(this.rotate),
        img = sprite[Le.EXTRACTOR_MACHINE0_AMETHYST][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        this.info && Ve.worldinfo && ze.drawImage(this.img.canvas, Ye.cam.x + this.x - 30, Ye.cam.y + this.y - 40),
        (Ve.AutoExtTake.e || Ve.AutoExtPut.e || Ve.AutoSteal.e) && (e = Fe.fast_units[Ye.uid]) && Jo(e, this) < 300 && (Ve.AutoExtPut.e && client.socket.send(JSON.stringify([38, 255, this.pid, this.id, 27])),
        Ve.AutoExtTake.e || Ve.AutoSteal.e) && client.socket.send(JSON.stringify([37, this.pid, this.id, 27])),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Or() {
        var e, t;
        t = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        t = (1 - this.hit.anim.v) * qe * 600 * We,
        e = Math.cos(this.hit.angle - this.angle) * t,
        Math.sin(this.hit.angle - this.angle) * t) : e = 0,
        ze.save(),
        255 & this.info && 65280 != (65280 & this.info) && !Ve.boostfps && (e += 2 * Math.random() - 1,
        t += 2 * Math.random() - 1),
        ze.translate(Ye.cam.x + this.x + e, Ye.cam.y + this.y + t),
        ze.rotate(this.angle),
        img = sprite[Le.EXTRACTOR_MACHINE_REIDITE][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        255 & this.info && 65280 != (65280 & this.info) && !Ve.boostfps && (this.rotate = (this.rotate + 3 * qe) % (2 * Math.PI)),
        ze.rotate(this.rotate),
        img = sprite[Le.EXTRACTOR_MACHINE0_REIDITE][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        this.info && Ve.worldinfo && ze.drawImage(this.img.canvas, Ye.cam.x + this.x - 30, Ye.cam.y + this.y - 40),
        (Ve.AutoExtTake.e || Ve.AutoExtPut.e || Ve.AutoSteal.e) && (e = Fe.fast_units[Ye.uid]) && Jo(e, this) < 300 && (Ve.AutoExtPut.e && client.socket.send(JSON.stringify([38, 255, this.pid, this.id, 28])),
        Ve.AutoExtTake.e || Ve.AutoSteal.e) && client.socket.send(JSON.stringify([37, this.pid, this.id, 28])),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function br() {
        var e, t;
        e = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        e = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * e,
        Math.sin(this.hit.angle - this.angle) * e) : t = 0,
        ze.save(),
        ze.translate(Ye.cam.x + this.x + t, Ye.cam.y + this.y + e),
        ze.rotate(this.angle),
        img = sprite[Le.WINDMILL][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function mr() {
        var e, t;
        e = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        e = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * e,
        Math.sin(this.hit.angle - this.angle) * e) : t = 0,
        this.rotate1 = (this.rotate1 + 3 * qe) % (2 * Math.PI),
        this.rotate2 = (this.rotate2 - 3 * qe) % (2 * Math.PI),
        ze.save(),
        ze.translate(Ye.cam.x + this.x + t, Ye.cam.y + this.y + e),
        ze.save(),
        ze.rotate(this.angle),
        img = sprite[Le.EMERALD_MACHINE][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        ze.save(),
        ze.rotate(this.rotate1),
        img = sprite[Le.EMERALD_MACHINE_ROTATE][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        ze.save(),
        ze.rotate(this.rotate2),
        img = sprite[Le.EMERALD_MACHINE_HOLE][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        ze.restore(),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Cr() {
        var e, t;
        e = this.hit.update ? (this.hit.anim.update() && 0 == this.hit.anim.o && (this.hit.update = !1),
        e = (1 - this.hit.anim.v) * qe * 600 * We,
        t = Math.cos(this.hit.angle - this.angle) * e,
        Math.sin(this.hit.angle - this.angle) * e) : t = 0,
        this.rotate1 = (this.rotate1 + 3 * qe) % (2 * Math.PI),
        this.rotate2 = (this.rotate2 - 3 * qe) % (2 * Math.PI),
        ze.save(),
        ze.translate(Ye.cam.x + this.x + t, Ye.cam.y + this.y + e),
        ze.save(),
        ze.rotate(this.angle),
        img = sprite[Le.RESURRECTION][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        ze.save(),
        ze.rotate(this.rotate1),
        img = sprite[Le.RESURRECTION_ROTATE][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        ze.save(),
        ze.rotate(this.rotate2),
        img = sprite[Le.RESURRECTION_HOLE][Fe.time],
        Ue(ze, img, -img.width / 2, -img.height / 2),
        ze.restore(),
        ze.restore(),
        Ve.Hitbox && ((t = Re[this.type]) ? ze.drawImage(t, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Rr() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.halo.update(),
        img = sprite[Le.EMERALD_MACHINE_GROUND][Fe.time],
        w = -img.width * this.halo.v,
        h = -img.height * this.halo.v,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Sr() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.halo.update(),
        img = sprite[Le.RESURRECTION_GROUND][Fe.time],
        w = -img.width * this.halo.v,
        h = -img.height * this.halo.v,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Nr() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.halo.update(),
        img = sprite[Le.HALO_FIRE][Fe.time],
        w = -img.width * this.halo.v,
        h = -img.height * this.halo.v,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function Dr() {
        var e;
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.angle),
        this.fire.update(),
        img = sprite[Le.FIRE][Fe.time],
        w = -img.width * this.fire.v,
        h = -img.height * this.fire.v,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        this.halo.update(),
        img = sprite[Le.HALO_FIRE][Fe.time],
        w = -img.width * this.halo.v,
        h = -img.height * this.halo.v,
        Ue(ze, img, -w / 2, -h / 2, w, h),
        ze.restore(),
        Ve.Hitbox && ((e = Re[this.type]) ? ze.drawImage(e, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
    }
    function fr(e, t, i) {
        if (0 <= e)
            switch (img = sprite[e][Fe.time],
            e) {
            case Le.PICK:
            case Le.PICK_GOLD:
            case Le.PICK_DIAMOND:
            case Le.PICK_WOOD:
            case Le.PICK_AMETHYST:
            case Le.PICK_REIDITE:
                i2(e, img, -img.width / 2 - We * (45 + t), -img.height / 2 + We * (i + 22));
                break;
            case Le.SWORD_WOOD:
            case Le.SWORD:
            case Le.SWORD_GOLD:
            case Le.SWORD_DIAMOND:
                r2(e, img, -img.width / 4 - We * (47 + t), -img.height / 4 + We * (i + 45));
                break;
            case Le.SWORD_AMETHYST:
                r2(e, img, -img.width / 4 - We * (52 + t), -img.height / 4 + We * (i + 45));
                break;
            case Le.REIDITE_SWORD:
                r2(e, img, -img.width / 4 - We * (47 + t), -img.height / 4 + We * (i + 44));
                break;
            case Le.PIRATE_SWORD:
                i2(e, img, -img.width / 2 - We * (47 + t), -img.height / 2 + We * (i + 44));
                break;
            case Le.DRAGON_SWORD:
                i2(e, img, -img.width / 2 - We * (40 + t), -img.height / 2 + We * (i + 65));
                break;
            case Le.WOOD_SPEAR:
            case Le.REIDITE_SPEAR:
                r2(e, img, -img.width / 4 - We * (37 + t), -img.height / 4 + We * (i + 85));
                break;
            case Le.PITCHFORK2:
            case Le.PITCHFORK:
                r2(e, img, -img.width / 4 - We * (26 + t), -img.height / 4 + We * (i + 77));
                break;
            case Le.LAVA_SPEAR:
                r2(e, img, -img.width / 4 - We * (37 + t), -img.height / 4 + We * (i + 85));
                break;
            case Le.LAVA_SWORD:
                r2(e, img, -img.width / 4 - We * (47 + t), -img.height / 4 + We * (i + 44));
                break;
            case Le.WOOD_BOW:
            case Le.STONE_BOW:
            case Le.GOLD_BOW:
            case Le.DIAMOND_BOW:
            case Le.AMETHYST_BOW:
            case Le.REIDITE_BOW:
            case Le.DRAGON_BOW:
                r2(e, img, -img.width / 4 - We * (37 + t), -img.height / 4 + We * (i + 30));
                break;
            case Le.MACHETE:
                r2(e, img, -img.width / 4 - We * (47 + t), -img.height / 4 + We * (i + 35));
                break;
            case Le.WAND1:
            case Le.WAND2:
                r2(e, img, -img.width / 4 - We * (47 + t), -img.height / 4 + We * (i + 40));
                break;
            case Le.SADDLE:
                r2(e, img, -img.width / 4 - We * (47 + t), -img.height / 4 + We * (i + 34));
                break;
            case Le.SPEAR:
            case Le.GOLD_SPEAR:
            case Le.DIAMOND_SPEAR:
            case Le.AMETHYST_SPEAR:
                r2(e, img, -img.width / 4 - We * (37 + t), -img.height / 4 + We * (i + 90));
                break;
            case Le.CRAB_SPEAR:
                r2(e, img, -img.width / 4 - We * (40 + t), -img.height / 4 + We * (i + 85));
                break;
            case Le.DRAGON_SPEAR:
                i2(e, img, -img.width / 2 - We * (39 + t), -img.height / 2 + We * (i + 90));
                break;
            case Le.HAMMER:
            case Le.HAMMER_GOLD:
            case Le.HAMMER_DIAMOND:
            case Le.HAMMER_AMETHYST:
            case Le.HAMMER_REIDITE:
            case Le.SUPER_HAMMER:
                i2(e, img, -img.width / 2 - We * (46 + t), -img.height / 2 + We * (i + 35));
                break;
            case Le.WATERING_CAN_FULL:
                i2(e, img, -img.width / 2 - We * (47 + t), -img.height / 2 + We * (i + 54));
                break;
            case Le.SHOVEL:
            case Le.SHOVEL_GOLD:
            case Le.SHOVEL_DIAMOND:
            case Le.SHOVEL_AMETHYST:
                i2(e, img, -img.width / 2 - We * (46 + t), -img.height / 2 + We * (i + 35));
                break;
            case Le.SPANNER:
                i2(e, img, -img.width / 2 - We * (47 + t), -img.height / 2 + We * (i + 20))
            }
    }
    (Ve.AutoBreadTake.e || Ve.AutoBreadPut.e || Ve.AutoSteal.e) && (un = Fe.fast_units[Ye.uid]) && Jo(un, this) < 300 && (Ve.AutoBreadPut.e && client.socket.send(JSON.stringify([22, 255, this.pid, this.id])),
    Ve.AutoBreadTake.e || Ve.AutoSteal.e) && client.socket.send(JSON.stringify([23, this.pid, this.id])),
    (Ve.AutoBreadTake.e || Ve.AutoBreadPut.e || Ve.AutoSteal.e) && (rn = Fe.fast_units[Ye.uid]) && Jo(rn, this) < 300 && (Ve.AutoBreadPut.e && (client.socket.send(JSON.stringify([25, 31, this.pid, this.id])),
    client.socket.send(JSON.stringify([24, 31, this.pid, this.id]))),
    Ve.AutoBreadTake.e || Ve.AutoSteal.e) && client.socket.send(JSON.stringify([26, this.pid, this.id]));
    var vr = function(e) {
        if (0 < e) {
            var t = sprite[e][Fe.time];
            switch (e) {
            case Le.WOOD_HELMET:
                i2(e, t, -t.width / 2 + 2 * We, -t.height / 2 - 5 * We);
                break;
            case Le.EARMUFFS:
                i2(e, t, -t.width / 2, -t.height / 2 - 18 * We);
                break;
            case Le.COAT:
                i2(e, t, -t.width / 2, -t.height / 2 - 10 * We);
                break;
            case Le.EXPLORER_HAT:
                i2(e, t, -t.width / 2, -t.height / 2 - 19 * We);
                break;
            case Le.PIRATE_HAT:
                r2(e, t, -t.width / 4, -t.height / 4 - 20 * We);
                break;
            case Le.STONE_HELMET:
                i2(e, t, -t.width / 2 - +We, -t.height / 2 - 23 * We);
                break;
            case Le.GOLD_HELMET:
                i2(e, t, -t.width / 2, -t.height / 2 - 5 * We);
                break;
            case Le.DIAMOND_HELMET:
                i2(e, t, -t.width / 2, -t.height / 2 - 2 * We);
                break;
            case Le.AMETHYST_HELMET:
                i2(e, t, -t.width / 2 + 1.5 * We, -t.height / 2 - +We);
                break;
            case Le.REIDITE_HELMET:
            case Le.DIAMOND_PROTECTION:
            case Le.AMETHYST_PROTECTION:
            case Le.REIDITE_PROTECTION:
            case Le.TURBAN1:
            case Le.TURBAN2:
            case Le.PILOT_HELMET:
            case Le.LAVA_HELMET:
            case Le.WITCH:
            case Le.FUR_HAT:
            case Le.FLOWER_HAT:
                r2(e, t, -t.width / 4, -t.height / 4 + 2 * We);
                break;
            case Le.CHRISTMAS_HAT:
            case Le.ELF_HAT:
                i2(e, t, -t.width / 2 - 5 * We, -t.height / 2 - 2 * We);
                break;
            case Le.CAP_SCARF:
            case Le.WINTER_HOOD:
            case Le.DIVING_MASK:
                i2(e, t, -t.width / 2, -t.height / 2 - 2 * We);
                break;
            case Le.SUPER_DIVING_SUIT:
                i2(e, t, -t.width / 2 + 2 * We, -t.height / 2);
                break;
            case Le.DRAGON_HELMET:
                i2(e, t, -t.width / 2, -t.height / 2 - 5 * We);
                break;
            case Le.CROWN_GREEN:
            case Le.CROWN_ORANGE:
            case Le.CROWN_BLUE:
                i2(e, t, -t.width / 2 - +We, -t.height / 2);
                break;
            case Le.HOOD:
                i2(e, t, -t.width / 2, -t.height / 2 + 2 * We);
                break;
            case Le.PEASANT:
            case Le.WINTER_PEASANT:
                i2(e, t, -t.width / 2, -t.height / 2 + 8 * We);
                break;
            case Le.CROWN_CRAB:
                i2(e, t, -t.width / 2, -t.height / 2 - 4 * We)
            }
        }
    };
    function Mr() {
        var e, t, i, n;
        this.ghost || 0 === this.vehicle || (this.x == this.r.x && this.y == this.r.y || (e = (Utils.get_angle_2(this.x, this.y, this.r.x, this.r.y) + Math.PI / 2) % (2 * Math.PI),
        this.vehicle_fx2 = Utils.reduceAngle(e, this.vehicle_fx2),
        this.vehicle_fx2 = Utils.lerp(this.vehicle_fx2, e, .018)),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(this.vehicle_fx2),
        ze.globalAlpha = .4,
        this.vehicle === Ge.BOAT ? ((50 < this.speed || 0 < this.vehicle_fx1) && (50 < this.speed ? this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + qe) : this.vehicle_fx1 = Math.max(0, this.vehicle_fx1 - qe),
        ze.globalAlpha = this.vehicle_fx1,
        i = sprite[Le.BOAT_WAVE][Fe.time],
        r2(Le.BOAT_WAVE, i, -i.width / 4, -i.height / 4),
        ze.globalAlpha = .4),
        i = sprite[Le.BOAT][Fe.time],
        r2(Le.BOAT, i, -i.width / 4, -i.height / 4)) : this.vehicle === Ge.HAWK ? (this.vehicle_fx5 = Utils.lerp(this.vehicle_fx5, this.speed, .018),
        this.vehicle_fx4.update(),
        85 < this.speed ? this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + qe / 4) : this.vehicle_fx1 = Math.max(.1, this.vehicle_fx1 - qe),
        i = sprite[Le.HAWK_TAMED][Fe.time],
        r2(Le.HAWK_TAMED, i, -i.width / 4, -i.height / 4),
        i = sprite[Le.HAWK_WING_LEFT_TAMED][Fe.time],
        w = -i.width,
        h = -i.height,
        ze.save(),
        ze.translate(-20 * We, -20 * We),
        ze.rotate(this.vehicle_fx4.v * this.vehicle_fx1),
        Ue(ze, i, -w / 4, -h / 4, w / 2, h / 2),
        ze.restore(),
        i = sprite[Le.HAWK_WING_RIGHT_TAMED][Fe.time],
        ze.save(),
        ze.translate(20 * We, -20 * We),
        ze.rotate(-this.vehicle_fx4.v * this.vehicle_fx1),
        Ue(ze, i, -w / 4, -h / 4, w / 2, h / 2),
        ze.restore()) : this.vehicle === Ge.BABY_LAVA ? (this.vehicle_fx5 = Utils.lerp(this.vehicle_fx5, this.speed, .018),
        this.vehicle_fx4.update(),
        85 < this.speed ? this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + qe / 4) : this.vehicle_fx1 = Math.max(.1, this.vehicle_fx1 - qe),
        i = sprite[Le.BABY_LAVA_TAMED][Fe.time],
        r2(Le.BABY_LAVA_TAMED, i, -i.width / 4, -i.height / 4),
        i = sprite[Le.BABY_LAVA_WING_LEFT_TAMED][Fe.time],
        w = -i.width,
        h = -i.height,
        ze.save(),
        ze.translate(-40 * We, -45 * We),
        ze.rotate(this.vehicle_fx4.v * this.vehicle_fx1),
        Ue(ze, i, -w / 4, -h / 4, w / 2, h / 2),
        ze.restore(),
        i = sprite[Le.BABY_LAVA_WING_RIGHT_TAMED][Fe.time],
        ze.save(),
        ze.translate(40 * We, -45 * We),
        ze.rotate(-this.vehicle_fx4.v * this.vehicle_fx1),
        Ue(ze, i, -w / 4, -h / 4, w / 2, h / 2),
        ze.restore()) : this.vehicle === Ge.BABY_DRAGON ? (this.vehicle_fx5 = Utils.lerp(this.vehicle_fx5, this.speed, .018),
        this.vehicle_fx4.update(),
        85 < this.speed ? this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + qe / 4) : this.vehicle_fx1 = Math.max(.1, this.vehicle_fx1 - qe),
        i = sprite[Le.BABY_DRAGON_TAMED][Fe.time],
        r2(Le.BABY_DRAGON_TAMED, i, -i.width / 4, -i.height / 4),
        i = sprite[Le.BABY_DRAGON_WING_LEFT_TAMED][Fe.time],
        w = -i.width,
        h = -i.height,
        ze.save(),
        ze.translate(-40 * We, -45 * We),
        ze.rotate(this.vehicle_fx4.v * this.vehicle_fx1),
        Ue(ze, i, -w / 4, -h / 4, w / 2, h / 2),
        ze.restore(),
        i = sprite[Le.BABY_DRAGON_WING_RIGHT_TAMED][Fe.time],
        ze.save(),
        ze.translate(40 * We, -45 * We),
        ze.rotate(-this.vehicle_fx4.v * this.vehicle_fx1),
        Ue(ze, i, -w / 4, -h / 4, w / 2, h / 2),
        ze.restore()) : this.vehicle === Ge.NIMBUS ? (this.vehicle_fx5 = Utils.lerp(this.vehicle_fx5, this.speed, .018),
        i = sprite[Le.NIMBUS][Fe.time],
        r2(Le.NIMBUS, i, -i.width / 4, -i.height / 4)) : this.vehicle === Ge.PLANE ? (this.vehicle_fx5 = Utils.lerp(this.vehicle_fx5, this.speed, .018),
        i = sprite[Le.PLANE][Fe.time],
        r2(Le.PLANE, i, -i.width / 4, -i.height / 4)) : this.vehicle === Ge.SLED ? (i = sprite[Le.SLED][Fe.time],
        r2(Le.SLED, i, -i.width / 4, -i.height / 4)) : this.vehicle === Ge.BABY_MAMMOTH ? (i = sprite[Le.BABY_MAMMOTH_TAMED][Fe.time],
        85 < this.speed ? this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + qe / 4) : this.vehicle_fx1 = Math.max(0, this.vehicle_fx1 - qe),
        this.vehicle_fx3 += 60 * qe,
        60 < this.vehicle_fx3 && (this.vehicle_fx3 -= 60),
        n = this.vehicle_fx1 * (12 * (this.vehicle_fx3 < 30 ? this.vehicle_fx3 / 30 : 1 - (this.vehicle_fx3 - 30) / 30) - 6),
        r2(Le.BABY_MAMMOTH_TAMED, i, -i.width / 4, -i.height / 4 + n)) : this.vehicle === Ge.MOUNT_BOAR ? (i = sprite[Le.BOAR_TAMED][Fe.time],
        85 < this.speed ? this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + qe / 4) : this.vehicle_fx1 = Math.max(0, this.vehicle_fx1 - qe),
        this.vehicle_fx3 += 60 * qe,
        60 < this.vehicle_fx3 && (this.vehicle_fx3 -= 60),
        n = this.vehicle_fx1 * (12 * (this.vehicle_fx3 < 30 ? this.vehicle_fx3 / 30 : 1 - (this.vehicle_fx3 - 30) / 30) - 6),
        r2(Le.BOAR_TAMED, i, -i.width / 4, -i.height / 4 + n)) : this.vehicle === Ge.CRAB_BOSS && (e = Math.PI / 2,
        t = Math.PI / 4,
        i = sprite[Le.CRAB_BOSS_TAMED][Fe.time],
        85 < this.speed ? this.vehicle_fx1 = Math.min(1, this.vehicle_fx1 + qe / 4) : this.vehicle_fx1 = Math.max(0, this.vehicle_fx1 - qe),
        this.vehicle_fx3 += 60 * qe,
        60 < this.vehicle_fx3 && (this.vehicle_fx3 -= 60),
        n = this.vehicle_fx1 * (12 * (this.vehicle_fx3 < 30 ? this.vehicle_fx3 / 30 : 1 - (this.vehicle_fx3 - 30) / 30) - 6),
        r2(Le.CRAB_BOSS_TAMED, i, -i.width / 4 + n, -i.height / 4),
        ze.restore(),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(Math.PI + this.vehicle_fx2 + t),
        ze.translate(120, n),
        ze.rotate(e),
        i = sprite[Le.CRAB_BOSS_CLAW_LEFT][Fe.time],
        w = -i.width,
        h = -i.height,
        Ue(ze, i, -w / 2, -h / 2, w, h),
        ze.restore(),
        ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        ze.rotate(Math.PI + this.vehicle_fx2 + e + t),
        ze.translate(120, n),
        ze.rotate(e),
        i = sprite[Le.CRAB_BOSS_CLAW_RIGHT][Fe.time],
        w = -i.width,
        h = -i.height,
        Ue(ze, i, -w / 2, -h / 2, w, h)),
        ze.restore())
    }
    function yr(e, t, i) {
        var n, r, o, a;
        return 1 !== t.tryLoad() ? t : (void 0 === (n = __IMAGE_EFFECT__[i][e]) && (r = (n = document.createElement("canvas")).getContext("2d"),
        o = t.width,
        a = t.height,
        n.width = o,
        n.height = a,
        r.drawImage(t, 0, 0),
        r.globalCompositeOperation = "source-in",
        r.fillStyle = __IMAGE_EFFECT_COLOR__[i],
        r.fillRect(0, 0, o, a),
        __IMAGE_EFFECT__[i][e] = n),
        n)
    }
    function Lr() {
        var e = 0;
        switch (this.right) {
        case Le.WOOD_SHIELD:
        case Le.STONE_SHIELD:
        case Le.GOLD_SHIELD:
        case Le.DIAMOND_SHIELD:
        case Le.AMETHYST_SHIELD:
        case Le.REIDITE_SHIELD:
            e = 1
        }
        if (this.ghost) {
            for (var t = 0; t < this.bubbles.length; t++) {
                var i, n = this.bubbles[t], r = (i = .5 < n.life ? 1 - 2 * (n.life - .5) : 2 * n.life,
                ze.globalAlpha = i,
                sprite[Le.BUBBLES][Fe.time][n.id]);
                Ue(ze, r, Ye.cam.x + n.x - r.width / 2, Ye.cam.y + n.y - r.height / 2),
                ze.globalAlpha = 1
            }
            ze.save(),
            ze.font = "30px Baloo Paaji",
            ze.strokeStyle = "black",
            ze.lineWidth = 7,
            ze.strokeText(Math.floor(60 - (performance.now() - this.ghosttime) / 1e3) + 1, Ye.cam.x + this.x - 25, Ye.cam.y + this.y + 20),
            ze.fillStyle = "white",
            ze.fillText(Math.floor(60 - (performance.now() - this.ghosttime) / 1e3) + 1, Ye.cam.x + this.x - 25, Ye.cam.y + this.y + 20),
            ze.restore()
        } else {
            if (ze.save(),
            ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
            Fe.dist_from_biomes(this),
            this.action & m.ATTACK) {
                var o, a, s = this;
                if (0 <= s.right)
                    switch (s.right) {
                    case Le.WATERING_CAN_FULL:
                        ze.save();
                        var d = -3 * s.attack.v / Math.PI;
                        a = s.attack.o ? -Math.PI / 3 - (Math.PI / 3 + s.attack.v) / 3 : s.attack.v,
                        ze.rotate(s.angle - Math.PI / 2 + a),
                        ze.globalAlpha = d / 1.2,
                        we(ze, -40 * We, 90 * We, 5 * We),
                        Ce(ze, "#0B6A84"),
                        ze.globalAlpha = d / 1.2,
                        we(ze, -52 * We, 100 * We, 8 * We),
                        Ce(ze, "#0B6A84"),
                        ze.globalAlpha = d / 1.2,
                        we(ze, -30 * We, 95 * We, 4 * We),
                        Ce(ze, "#0B6A84"),
                        ze.globalAlpha = 1,
                        ze.restore();
                        break;
                    case Le.SHOVEL:
                    case Le.SHOVEL_GOLD:
                    case Le.SHOVEL_DIAMOND:
                    case Le.SHOVEL_AMETHYST:
                        1 !== s.fly && (o = (0 < s.dist_winter ? Le.ICE_SHOVEL_CO : 0 < s.dist_sand || 0 < s.dist_desert ? Le.SAND_SHOVEL_CO : Le.GRD_SHOVEL_CO)[Fe.time],
                        d = -3 * s.attack.v / Math.PI,
                        0 === (a = s.attack.o ? Math.max(.5 - d / 2 + .5, 0) : Math.max(d / 2, 0)) && (s.angle_init = s.angle),
                        ze.save(),
                        ze.rotate(s.angle_init - Math.PI / 2),
                        ze.globalAlpha = d,
                        we(ze, d = 25 * We + 25 * a, 80 * We, 15 * We),
                        Ce(ze, o),
                        we(ze, -d, 80 * We, 15 * We),
                        Ce(ze, o),
                        ze.globalAlpha = 1,
                        ze.restore())
                    }
            }
            ze.save(),
            ze.rotate(this.angle - Math.PI / 2),
            this.action & m.ATTACK || (this.action & m.IDLE || 0 !== this.vehicle ? this.idle.update() : this.action & m.WALK && this.walk.update());
            var _ = this.idle.v
              , u = this.walk.v
              , l = this.clothe === Le.WINTER_HOOD ? (r = sprite[Le.GLOVES_HOOD][Fe.time],
            Le.GLOVES_HOOD) : this.clothe === Le.DIAMOND_PROTECTION ? (r = sprite[Le.GLOVES_DIAMOND_PROTECTION][Fe.time],
            Le.GLOVES_DIAMOND_PROTECTION) : this.clothe === Le.AMETHYST_PROTECTION ? (r = sprite[Le.GLOVES_AMETHYST_PROTECTION][Fe.time],
            Le.GLOVES_AMETHYST_PROTECTION) : this.clothe === Le.REIDITE_PROTECTION ? (r = sprite[Le.GLOVES_REIDITE_PROTECTION][Fe.time],
            Le.GLOVES_REIDITE_PROTECTION) : this.superzombie ? (r = sprite[Le.ZOMBIE_HAND][Fe.time],
            Le.ZOMBIE_HAND) : (r = sprite[Le.HAND][this.skin][Fe.time],
            Le.HAND)
              , c = (shadow = sprite[Le.HAND_SHADOW][Fe.time],
            r)
              , h = l;
            if (this.action & m.ATTACK ? (this.attack.update() && 0 == this.attack.o && (this.hand = !this.hand,
            this.action -= m.ATTACK,
            this.uid == Ye.uid) && (Ye.control.mouse = 0),
            0 <= this.right && (this.hand = !0),
            I = this.hand ? this.attack.v : -this.attack.v / 3,
            p = this.hand ? this.attack.v / 3 : -this.attack.v,
            this.superzombie ? (ze.save(),
            ze.rotate(I),
            i2(l, r, -r.width / 2 - We * (66 + _), -r.height / 2 + (5 + u) * We),
            ze.restore(),
            ze.save(),
            ze.rotate(p),
            i2(l, r, -r.width / 2 + We * (66 + _), -r.height / 2 + (5 + u) * We),
            ze.restore()) : 0 === e && (this.right === Le.WOOD_BOW && (I = -Utils.ease_out_quad(-I)),
            ze.save(),
            ze.rotate(I),
            i2(Le.HAND_SHADOW, shadow, -shadow.width / 2 - We * (49 + _), -shadow.height / 2 + (15 + u) * We),
            this.right === Le.BOOK ? (g = sprite[this.right][this.book][Fe.time],
            n2(this.right, this.book, g, -g.width / 4 - We * (62 + _), -g.height / 4 + We * (u + 18))) : fr(this.right, _, u),
            l >= Le.GLOVES_DIAMOND_PROTECTION ? r2(l, r, -r.width / 4 - We * (49 + _), -r.height / 4 + (11 + u) * We) : l !== Le.GLOVES_HOOD ? n2(l, this.skin, r, -r.width / 4 - We * (49 + _), -r.height / 4 + (11 + u) * We) : i2(l, r, -r.width / 2 - We * (49 + _), -r.height / 2 + (11 + u) * We),
            ze.restore(),
            ze.save(),
            ze.rotate(p),
            i2(Le.HAND_SHADOW, shadow, -shadow.width / 2 + We * (49 + _), -shadow.height / 2 + (15 + u) * We),
            l >= Le.GLOVES_DIAMOND_PROTECTION ? r2(l, r, -r.width / 4 + We * (49 + _), -r.height / 4 + (11 + u) * We) : l !== Le.GLOVES_HOOD ? n2(l, this.skin, r, -r.width / 4 + We * (49 + _), -r.height / 4 + (11 + u) * We) : i2(l, r, -r.width / 2 + We * (49 + _), -r.height / 2 + (11 + u) * We),
            ze.restore())) : this.superzombie ? (i2(l, r, -r.width / 2 - We * (66 + _), -r.height / 2 + (5 + u) * We),
            i2(l, r, -r.width / 2 + We * (66 + _), -r.height / 2 + (5 + u) * We)) : 0 === e && (i2(Le.HAND_SHADOW, shadow, -shadow.width / 2 - We * (49 + _), -shadow.height / 2 + (15 + u) * We),
            this.right === Le.BOOK ? (g = sprite[this.right][this.book][Fe.time],
            n2(this.right, this.book, g, -g.width / 4 - We * (62 + _), -g.height / 4 + We * (u + 18))) : fr(this.right, _, u),
            l >= Le.GLOVES_DIAMOND_PROTECTION ? r2(l, r, -r.width / 4 - We * (49 + _), -r.height / 4 + (11 + u) * We) : l !== Le.GLOVES_HOOD ? n2(l, this.skin, r, -r.width / 4 - We * (49 + _), -r.height / 4 + (11 + u) * We) : i2(l, r, -r.width / 2 - We * (49 + _), -r.height / 2 + (11 + u) * We),
            i2(Le.HAND_SHADOW, shadow, -shadow.width / 2 + We * (49 + _), -shadow.height / 2 + (15 + u) * We),
            l >= Le.GLOVES_DIAMOND_PROTECTION ? r2(l, r, -r.width / 4 + We * (49 + _), -r.height / 4 + (11 + u) * We) : l !== Le.GLOVES_HOOD ? n2(l, this.skin, r, -r.width / 4 + We * (49 + _), -r.height / 4 + (11 + u) * We) : i2(l, r, -r.width / 2 + We * (49 + _), -r.height / 2 + (11 + u) * We)),
            this.bag && this.clothe < 1 && (r = sprite[Le.BAG][this.baglook][Fe.time],
            n2(Le.BAG, this.baglook, r, -r.width / 4, -r.height / 4 - 39 * We)),
            this.superzombie ? (r = sprite[Le.ZOMBIE_BODY][Fe.time],
            i2(Le.ZOMBIE_BODY, r, -r.width / 2, -r.height / 2),
            this.move_head.update(),
            r = sprite[Le.ZOMBIE_HEAD][Fe.time],
            i2(Le.ZOMBIE_HEAD, r, -r.width / 2, -r.height / 2 + this.move_head.v)) : (r = sprite[Le.BODY][this.skin][Fe.time],
            this.clothe !== Le.WINTER_HOOD && (n2(Le.BODY, this.skin, r, -r.width / 4, -r.height / 4),
            0 < this.accessory) && (r = sprite[Le.ACCESSORY][this.accessory][Fe.time],
            n2(Le.ACCESSORY, this.accessory, r, -r.width / 4, -r.height / 4))),
            this.action & m.HEAL && (this.heal.update() && 0 == this.heal.o && (this.action -= m.HEAL),
            ze.globalAlpha = .6 - this.heal.v,
            this.superzombie ? (r = sprite[Le.ZOMBIE_HEAL],
            Ue(ze, r, -r.width / 2, -r.height / 2)) : (r = yr(this.skin, sprite[Le.BODY][this.skin][0], __EFFECT_HEAL__),
            Ue(ze, r, r.width / 4, r.height / 4, -r.width / 2, -r.height / 2)),
            ze.globalAlpha = 1),
            this.action & m.WEB && (this.web.update() && 0 == this.web.o && (this.action -= m.WEB),
            ze.globalAlpha = .6 - this.web.v,
            r = sprite[Le.WEB],
            Ue(ze, r, -r.width / 2, -r.height / 2),
            ze.globalAlpha = 1),
            this.action & m.HURT && (this.hit.update() && 0 == this.hit.o && (this.action -= m.HURT),
            ze.globalAlpha = .6 - this.hit.v,
            this.superzombie ? (r = sprite[Le.ZOMBIE_HURT],
            Ue(ze, r, -r.width / 2, -r.height / 2)) : (r = yr(this.skin, sprite[Le.BODY][this.skin][0], __EFFECT_HURT__),
            Ue(ze, r, r.width / 4, r.height / 4, -r.width / 2, -r.height / 2)),
            ze.globalAlpha = 1),
            this.action & m.COLD && (this.freeze.update() && 0 == this.freeze.o && (this.action -= m.COLD),
            ze.globalAlpha = .6 - this.freeze.v,
            r = yr(this.skin, sprite[Le.BODY][this.skin][0], __EFFECT_COLD__),
            Ue(ze, r, r.width / 4, r.height / 4, -r.width / 2, -r.height / 2),
            ze.globalAlpha = 1),
            this.action & m.HUNGER && (this.starve.update() && 0 == this.starve.o && (this.action -= m.HUNGER),
            ze.globalAlpha = .6 - this.starve.v,
            this.superzombie ? (r = sprite[Le.ZOMBIE_HUNGER],
            Ue(ze, r, -r.width / 2, -r.height / 2)) : (r = yr(this.skin, sprite[Le.BODY][this.skin][0], __EFFECT_HUNGER__),
            Ue(ze, r, r.width / 4, r.height / 4, -r.width / 2, -r.height / 2)),
            ze.globalAlpha = 1),
            vr(this.clothe),
            1 === e) {
                this.action & m.ATTACK && (_ += 15 * this.attack.v),
                i2(Le.HAND_SHADOW, shadow, -shadow.width / 2 - 26 * We, -shadow.height / 2 + (31 + u + _) * We),
                h >= Le.GLOVES_DIAMOND_PROTECTION ? r2(h, c, -c.width / 4 - 26 * We, -c.height / 4 + (27 + u + _) * We) : h !== Le.GLOVES_HOOD ? n2(h, this.skin, c, -c.width / 4 - 26 * We, -c.height / 4 + (27 + u + _) * We) : i2(h, c, -c.width / 2 - 26 * We, -c.height / 2 + (27 + u + _) * We),
                i2(Le.HAND_SHADOW, shadow, -shadow.width / 2 + 26 * We, -shadow.height / 2 + (31 + u + _) * We),
                h >= Le.GLOVES_DIAMOND_PROTECTION ? r2(h, c, -c.width / 4 + 26 * We, -c.height / 4 + (27 + u + _) * We) : h !== Le.GLOVES_HOOD ? n2(h, this.skin, c, -c.width / 4 + 26 * We, -c.height / 4 + (27 + u + _) * We) : i2(h, c, -c.width / 2 + 26 * We, -c.height / 2 + (27 + u + _) * We);
                var E = this.right
                  , T = 0
                  , A = u + _;
                if (0 <= E)
                    switch (img = sprite[E][Fe.time],
                    E) {
                    case Le.WOOD_SHIELD:
                    case Le.STONE_SHIELD:
                    case Le.GOLD_SHIELD:
                        r2(E, img, -img.width / 4 - We * (0 + T), -img.height / 4 + We * (A + 35));
                        break;
                    case Le.DIAMOND_SHIELD:
                        r2(E, img, -img.width / 4 - We * (1 + T), -img.height / 4 + We * (A + 45));
                        break;
                    case Le.AMETHYST_SHIELD:
                    case Le.REIDITE_SHIELD:
                        r2(E, img, -img.width / 4 - We * (1 + T), -img.height / 4 + We * (A + 40))
                    }
            }
            ze.restore(),
            r = 0 < this.dist_winter ? (this.player.label_winter || (this.player.label_winter = m1(We, this.player.nickname, 20, "#187484", "#000", 2, null, null, 300 * We)),
            this.player.label_winter) : (this.player.label || (this.player.label = m1(We, this.player.nickname, 20, "#FFF", "#000", 2, null, null, 300 * We)),
            this.player.label),
            Fe.day == Le.NIGHT && (ze.globalAlpha = .5);
            var I, p, g, _ = Math.floor(-r.width / 2), u = Math.floor(-r.height / 2 - 70 * We);
            Ue(ze, r, _, u),
            0 < this.player.level && (I = _ + r.width + 5,
            r = sprite[Le.VERIFIED],
            void 0 === PLAYER_LEVEL[this.player.level] && (PLAYER_LEVEL[this.player.level] = m1(We, "[" + this.player.level + "]", 20, "#F9E8A2", "#000", 2, null, null, 50 * We)),
            Ue(ze, PLAYER_LEVEL[this.player.level], I, u)),
            ze.globalAlpha = 1,
            Ye.in_team(this.pid) && (r = this.pid == Ye.team[0] ? sprite[Le.ICON_LEADER] : sprite[Le.ICON_MEMBER],
            Ue(ze, r, _ - r.width - 5, u - 6)),
            ze.restore(),
            Ve.esp && (ze.save(),
            ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
            ze.rotate(this.angle),
            ze.lineWidth = 2.6,
            ze.strokeStyle = this.ally ? "cyan" : "red",
            ze.strokeRect(-20, -29, 45, 60),
            ze.restore(),
            ze.save(),
            ze.fillStyle = this.ally ? "cyan" : "red",
            ze.beginPath(),
            ze.arc(this.x + Ye.cam.x, this.y + Ye.cam.y, 7, 0, 2 * Math.PI),
            ze.fill(),
            ze.restore()),
            Ve.id && (ze.save(),
            ze.font = "22px Baloo Paaji",
            ze.strokeStyle = "black",
            ze.lineWidth = 7,
            ze.fillStyle = "red",
            this.xx = Ye.cam.x + this.x,
            this.x1 = Ye.cam.y + this.y + 50,
            this.xx1 = Ye.cam.y + this.y + 80,
            ze.strokeText(this.player.id, this.xx, this.x1),
            ze.fillText(this.player.id, this.xx, this.x1),
            ze.strokeText(this.player.nickname, this.xx, this.xx1),
            ze.fillText(this.player.nickname, this.xx, this.xx1),
            ze.restore(),
            p = Fe.fast_units[Ye.uid]) && (this.aaaa22 = Math.floor(Math.sqrt(Math.pow(p.y - this.y, 2) + Math.pow(p.x - this.x, 2))),
            0 == !this.aaaa22) && (ze.save(),
            ze.font = "22px Baloo Paaji",
            ze.strokeStyle = "black",
            ze.lineWidth = 7,
            ze.fillStyle = this.aaaa22 < 115 ? "green" : "red",
            this.xx = Ye.cam.x + this.x,
            this.x1 = Ye.cam.y + this.y + 65,
            ze.strokeText("distance:" + this.aaaa22, this.xx, this.x1),
            ze.fillText("distance:" + this.aaaa22, this.xx, this.x1),
            ze.restore()),
            !Ve.Moves || this.x == this.r.x && this.y == this.r.y || (ze.beginPath(),
            ze.lineWidth = 3.5,
            ze.moveTo(Ye.cam.x + this.x, Ye.cam.y + this.y),
            ze.lineTo(Ye.cam.x + this.r.x, Ye.cam.y + this.r.y),
            ze.strokeStyle = "red",
            ze.stroke()),
            Ve.Hitbox && ((g = Re[this.type]) ? ze.drawImage(g, this.x + Ye.cam.x - 150, this.y + Ye.cam.y - 150) : Zi(this.type, 0, !0))
        }
    }
    function Gr() {
        var e, t;
        this.enabled && 0 <= this.delay && (.5 < (t = (e = performance.now() - this.delay) % 1e3 / 1e3) ? t = 1 - 2 * (t - .5) : t *= 2,
        (e = Math.floor(e / 1e3)) < Ke.GHOST_DELAY) && (e = Ke.GHOST_DELAY - e,
        this.label || (this.label = m1(We, " seconds before you die", 40, "#660000", null, null, null, null, null, "#000", 10)),
        this.now == e && this.sec || (this.now = e,
        this.sec = m1(We, "" + e, 40, "#660000", null, null, null, null, null, "#000", 10)),
        Ue(ze, this.label, (g0 - this.label.width) / 2, 100 * We),
        ze.globalAlpha = t,
        Ue(ze, this.sec, (g0 - this.label.width) / 2 - this.sec.width + 15 * We, 100 * We),
        ze.globalAlpha = 1)
    }
    function Hr() {
        var e;
        void 0 !== this.message && (e = 0 < Ye.inv.can_select.length ? -95 : 0,
        Ue(ze, this.message, 0, O0 - this.message.height + e))
    }
    function Pr(e, t) {
        this.text && (this.timeout.o ? ze.globalAlpha = 1 - this.timeout.v : ze.globalAlpha = 1,
        this.label || (this.label = m1(We, this.text, 40, e, null, null, null, null, null, t, 10)),
        Ue(ze, this.label, (g0 - this.label.width) / 2, 50 * We),
        ze.globalAlpha = 1,
        this.timeout.update()) && 0 == this.timeout.o && (this.text = this.list.shift(),
        this.label = null)
    }
    __EFFECT_HURT__ = 0,
    __EFFECT_HEAL__ = 1,
    __EFFECT_COLD__ = 2,
    __EFFECT_HUNGER__ = 3,
    __EFFECT_BOX__ = 4,
    __IMAGE_EFFECT__ = [[], [], [], [], []],
    __IMAGE_EFFECT_COLOR__ = ["#BB0000", "#00BB00", "#1CE7E0", "#DBE71C", "#BB0000"];
    let Br = 30
      , wr = .5
      , zr = 1
      , kr = 1
      , Wr = 2
      , Vr = 4;
    function Ur() {
        if (ze.save(),
        ze.translate(Ye.cam.x + this.x, Ye.cam.y + this.y),
        0 < this.text.length) {
            for (var e = 0; e < this.text.length && e < Wr; e++)
                this.label[e] || (this.label[e] = (i = We,
                n = this.text[e],
                _ = d = s = a = o = r = void 0,
                r = document.createElement("canvas"),
                o = r.getContext("2d"),
                a = Math.floor(28 * i),
                s = Math.floor(20 * i),
                o.font = s + "px Baloo Paaji",
                d = 8 * i,
                _ = o.measureText(n).width + 2 * d,
                Be(o, 0, 0, r.width = _, r.height = a, 10 * i),
                o.globalAlpha = .5,
                Ce(o, "#000"),
                o.globalAlpha = 1,
                o.textBaseline = "middle",
                o.font = s + "px Baloo Paaji",
                o.beginPath(),
                o.fillStyle = "#FFF",
                o.fillText(n, d, a / 2),
                r),
                this.text_effect[e] = 0,
                this.text_move[e] = 0),
                1 === e && (this.text_move[0] = Utils.ease_in_out_quad(this.text_ease) * Br);
            this.text_effect[0] += qe,
            1 < this.text.length && (this.text_ease = Math.min(this.text_ease + qe, zr),
            this.text_effect[0] > kr) && this.text_ease > wr && (this.text_effect[1] += qe);
            for (e = 0; e < this.text.length && e < Wr; e++) {
                var t = this.text_effect[e];
                0 < t && (ze.globalAlpha = t < .25 ? 4 * t : 3.75 < t ? Math.max(4 * (4 - t), 0) : 1,
                Ue(ze, this.label[e], -this.label[e].width / 2, -this.text_move[e] + -this.label[e].height / 2 - 110 * We))
            }
            this.text_effect[0] > Vr && (this.text_effect.shift(),
            this.text.shift(),
            this.text_move.shift(),
            this.label.shift(),
            this.text_ease = 0)
        }
        var i, n, r, o, a, s, d, _;
        ze.restore()
    }
    function Kr(e, t, i, n, r, o, a, s) {
        void 0 === s && (s = 0),
        Fe.breath[r].update();
        for (var d = a; s <= d; d--)
            for (var _ = e; _ <= t; _++)
                for (var u = i; u <= n; u++) {
                    var l = he.tiles[_][u];
                    if (l && l[o]) {
                        var c = l[o][d];
                        if (void 0 !== c)
                            for (var h = 0; h < c.length; h++) {
                                var E, T, A = c[h], I = (T = A.update ? (A.hit.update() && 0 == A.hit.o && (A.update = !1),
                                T = (1 - A.hit.v) * qe * 600 * We,
                                E = Math.cos(A.angle) * T,
                                Math.sin(A.angle) * T) : E = 0,
                                sprite[r][Fe.time][d]), p = -I.width * Fe.breath[r].v, g = -I.height * Fe.breath[r].v;
                                Ue(ze, I, Ye.cam.x + A.x - p / 2 + E, Ye.cam.y + A.y - g / 2 + T, p, g)
                            }
                    }
                }
    }
    for (var xr = [], D = 0; D < 100; D++) {
        var Fr = 1;
        Math.random() < .25 && (Fr = 0),
        xr.push(Fr)
    }
    function Yr(e, t, i, n, r, o, a, s, d) {
        void 0 === s && (s = 0);
        for (var _ = a; s <= _; _--)
            for (var u = e; u <= t; u++)
                for (var l = i; l <= n; l++)
                    if (!(0 < d && 1 === xr[(u + l * d) % xr.length])) {
                        var c = he.tiles[u][l];
                        if (void 0 !== c && void 0 !== c[o]) {
                            var h = c[o][_];
                            if (void 0 !== h)
                                for (var E = 0; E < h.length; E++) {
                                    var T, A, I = h[E], p = (A = I.update ? (I.hit.update() && 0 == I.hit.o && (I.update = !1),
                                    A = (1 - I.hit.v) * qe * 600 * We,
                                    T = Math.cos(I.angle) * A,
                                    Math.sin(I.angle) * A) : T = 0,
                                    sprite[r][Fe.time][_]);
                                    Ue(ze, p, Ye.cam.x + I.x - p.width / (2 * _scale_object) + T, Ye.cam.y + I.y - p.height / (2 * _scale_object) + A, p.width / _scale_object, p.height / _scale_object),
                                    Ve.Hitbox && (Re[o] || (Re[o] = {}),
                                    (p = Re[o][a]) ? ze.drawImage(p, I.x + Ye.cam.x - 150, I.y + Ye.cam.y - 150) : Zi(o, a))
                                }
                        }
                    }
    }
    function Jr(e, t, i, n, r, o, a, s, d) {
        void 0 === s && (s = 0);
        for (var _ = e; _ <= t; _++)
            for (var u = i; u <= n; u++) {
                var l = he.tiles[_][u];
                if (void 0 !== l && void 0 !== l[o]) {
                    var c = l[o];
                    if (void 0 !== c)
                        if (1 === c.scale) {
                            var h = sprite[r][Fe.time][c._id];
                            ze.save(),
                            ze.translate(Ye.cam.x + c.x, Ye.cam.y + c.y),
                            ze.rotate(c.angle),
                            Ue(ze, h, -h.width / 4, -h.height / 4, h.width / 2, h.height / 2),
                            ze.restore()
                        } else if (3 === c.scale)
                            for (var E = 0; E < c.p.length; E++) {
                                ze.save(),
                                ze.translate(Ye.cam.x + c.x, Ye.cam.y + c.y),
                                ze.rotate(c.p[E].angle);
                                h = sprite[r][Fe.time][c.p[E]._id];
                                Ue(ze, h, -h.width / 3 + c.p[E].x, -h.height / 3 + c.p[E].y, h.width / 1.5, h.height / 1.5),
                                ze.restore()
                            }
                        else {
                            h = sprite[r][Fe.time][c._id];
                            ze.save(),
                            ze.translate(Ye.cam.x + c.x, Ye.cam.y + c.y),
                            ze.rotate(c.angle),
                            Ue(ze, h, -h.width / 2, -h.height / 2, h.width, h.height),
                            ze.restore()
                        }
                }
            }
    }
    function Xr(e, t, i, n, r, o, a, s, d) {
        void 0 === s && (s = 0);
        for (var _ = a; s <= _; _--)
            for (var u = e; u <= t; u++)
                for (var l = i; l <= n; l++) {
                    var c = he.tiles[u][l];
                    if (void 0 !== c && void 0 !== c[o]) {
                        var h = c[o][_];
                        if (void 0 !== h)
                            for (var E = 0; E < h.length; E++) {
                                var T, A, I, p = h[E];
                                I = p.update ? (p.hit.update() && 0 == p.hit.o && (p.update = !1),
                                T = (1 - p.hit.v) * qe * 600 * We,
                                A = Math.cos(p.angle) * T,
                                Math.sin(p.angle) * T) : A = 0;
                                for (var g = 0; g < _bubble[_].amount; g++) {
                                    Fe.lava[g].last !== Io && (Fe.lava[g].update(),
                                    Fe.lava[g].last = Io);
                                    var O = sprite[Le.LAVA_BUBBLE][Fe.time][_bubble[_].pos[g].t]
                                      , b = -O.width * Fe.lava[g].v
                                      , m = -O.height * Fe.lava[g].v;
                                    Ue(ze, O, Ye.cam.x + p.x - b / 4 + A + _bubble[_].pos[g].x, Ye.cam.y + p.y - m / 4 + I + _bubble[_].pos[g].y, b / 2, m / 2)
                                }
                            }
                    }
                }
    }
    _scale_object = 1,
    _bubble = [{
        amount: 10,
        pos: [{
            x: -128,
            y: -20,
            t: 0
        }, {
            x: -86,
            y: -4,
            t: 1
        }, {
            x: -60,
            y: -74,
            t: 2
        }, {
            x: -22,
            y: -144,
            t: 0
        }, {
            x: -58,
            y: 86,
            t: 0
        }, {
            x: 3,
            y: -30,
            t: 0
        }, {
            x: 65,
            y: -115,
            t: 1
        }, {
            x: 118,
            y: -50,
            t: 0
        }, {
            x: 73,
            y: 15,
            t: 1
        }, {
            x: 67,
            y: 79,
            t: 0
        }]
    }, {
        amount: 5,
        pos: [{
            x: -45,
            y: -26,
            t: 0
        }, {
            x: -45,
            y: 20,
            t: 2
        }, {
            x: 10,
            y: -60,
            t: 1
        }, {
            x: 52,
            y: -17,
            t: 1
        }, {
            x: 14,
            y: 45,
            t: 0
        }]
    }, {
        amount: 3,
        pos: [{
            x: -30,
            y: 3,
            t: 2
        }, {
            x: 7,
            y: -38,
            t: 2
        }, {
            x: 37,
            y: 5,
            t: 2
        }]
    }, {
        amount: 11,
        pos: [{
            x: -74,
            y: -87,
            t: 2
        }, {
            x: -11,
            y: -10,
            t: 1
        }, {
            x: -99,
            y: 17,
            t: 1
        }, {
            x: -66,
            y: 84,
            t: 0
        }, {
            x: -55,
            y: 123,
            t: 1
        }, {
            x: 10,
            y: 81,
            t: 2
        }, {
            x: 52,
            y: 50,
            t: 0
        }, {
            x: 138,
            y: 9,
            t: 1
        }, {
            x: 104,
            y: -28,
            t: 0
        }, {
            x: 67,
            y: -56,
            t: 2
        }, {
            x: 5,
            y: -112,
            t: 0
        }]
    }, {
        amount: 6,
        pos: [{
            x: -33,
            y: -66,
            t: 2
        }, {
            x: -58,
            y: 10,
            t: 0
        }, {
            x: -19,
            y: 44,
            t: 1
        }, {
            x: 44,
            y: 20,
            t: 0
        }, {
            x: 53,
            y: -36,
            t: 2
        }, {
            x: 7,
            y: -62,
            t: 0
        }]
    }, {
        amount: 3,
        pos: [{
            x: -19,
            y: -25,
            t: 1
        }, {
            x: -29,
            y: 13,
            t: 2
        }, {
            x: 12,
            y: 12,
            t: 0
        }]
    }];
    var jr = 0
      , qr = 0
      , Zr = 0
      , $r = 0;
    function Qr() {
        for (var e = jr, t = qr, i = Zr, n = $r, r = (De.quality && a2(Yr, i, n, e, t, Le.LAKE_EDGE, "l", 2),
        De.quality && a2(Yr, i, n, e, t, Le.LAVA_GROUND, "la", 5),
        a2(Yr, i, n, e, t, Le.MAGMA, "la", 5),
        a2(Kr, i, n, e, t, Le.LAKE, "l", 2),
        De.quality && (a2(Xr, i, n, e, t, Le.MAGMA, "la", 5),
        a2(Kr, i, n, e, t, Le.LAKE_DEEP, "l", 2)),
        a2(Yr, i, n, e, t, Le.MARKER, "ma", 3),
        Fe.units[xe.SAND_WORM]), o = 0; o < r.length; o++)
            r[o].draw_ground();
        for (var a, s = Fe.units[xe.PLAYERS], o = 0; o < s.length; o++)
            for (var d = s[o], _ = 0; _ < d.swim.length; _++)
                a = d.swim[_],
                ze.globalAlpha = a.alpha,
                we(ze, a.x + Ye.cam.x, a.y + Ye.cam.y, a.r),
                Ce(ze, Le.SWIM_COLOR[Fe.time]),
                ze.globalAlpha = 1;
        for (var B = Fe.units[xe.BRIDGE], o = 0; o < B.length; o++)
            Se(B[o], Le.BRIDGE),
            B[o].draw_life(B[o].info);
        for (var u = Fe.units[xe.FURNACE], o = 0; o < u.length; o++)
            2 == u[o].action && e2(u[o]);
        for (var l = Fe.units[xe.FIRE], o = 0; o < l.length; o++)
            e2(l[o], Le.WOOD_FIRE),
            ze.save(),
            ze.font = "22px Baloo Paaji",
            ze.strokeStyle = "black",
            ze.lineWidth = 7,
            ze.fillStyle = "white",
            ze.strokeText(Math.floor(120 - (performance.now() - l[o].spawnTime) / 1e3), Ye.cam.x + l[o].x - 50, Ye.cam.y + l[o].y - 118),
            ze.fillText(Math.floor(120 - (performance.now() - l[o].spawnTime) / 1e3), Ye.cam.x + l[o].x - 50, Ye.cam.y + l[o].y - 118),
            ze.restore();
        for (var c = Fe.units[xe.RESURRECTION], o = 0; o < c.length; o++)
            e2(c[o]);
        for (var h = Fe.units[xe.EMERALD_MACHINE], o = 0; o < h.length; o++)
            e2(h[o]);
        for (var E = Fe.units[xe.BIG_FIRE], o = 0; o < E.length; o++)
            e2(E[o], Le.BIG_FIRE_WOOD),
            ze.save(),
            ze.font = "22px Baloo Paaji",
            ze.strokeStyle = "black",
            ze.lineWidth = 7,
            ze.fillStyle = "white",
            ze.strokeText(Math.floor(360 - (performance.now() - E[o].spawnTime) / 1e3), Ye.cam.x + E[o].x - 50, Ye.cam.y + E[o].y - 118),
            ze.fillText(Math.floor(360 - (performance.now() - E[o].spawnTime) / 1e3), Ye.cam.x + E[o].x - 50, Ye.cam.y + E[o].y - 118),
            ze.restore();
        for (var w = Fe.units[xe.SIGN], o = 0; o < w.length; o++)
            Se(w[o]);
        for (var z = Fe.units[xe.PLOT], o = 0; o < z.length; o++)
            Se(z[o], Le.PLOT);
        for (var T = Fe.units[xe.SEED], o = 0; o < T.length; o++)
            e2(T[o]);
        for (T = Fe.units[xe.TOMATO_SEED],
        o = 0; o < T.length; o++)
            e2(T[o]);
        for (T = Fe.units[xe.SEED],
        o = 0; o < T.length; o++)
            t2(T[o]);
        for (var A = Fe.units[xe.CARROT_SEED], o = 0; o < A.length; o++)
            0 != (15 & A[o].info) && 10 !== A[o].info || Se(A[o]);
        for (var I = Fe.units[xe.WATERMELON_SEED], o = 0; o < I.length; o++)
            0 != (15 & I[o].info) && 10 !== I[o].info || Se(I[o]);
        for (var p = Fe.units[xe.ALOE_VERA_SEED], o = 0; o < p.length; o++)
            0 != (15 & p[o].info) && 10 !== p[o].info || Se(p[o]);
        for (var g = Fe.units[xe.WHEAT_MOB], o = 0; o < g.length; o++)
            Se(g[o], Le.WHEAT_SEED);
        for (var O = Fe.units[xe.GARLIC_SEED], o = 0; o < O.length; o++)
            0 != (15 & O[o].info) && 10 !== O[o].info || Se(O[o]);
        for (var b = Fe.units[xe.THORNBUSH_SEED], o = 0; o < b.length; o++)
            0 != (15 & b[o].info) && 10 !== b[o].info || Se(b[o]);
        for (var m = Fe.units[xe.PUMPKIN_SEED], o = 0; o < m.length; o++)
            0 != (15 & m[o].info) && 10 !== m[o].info || Se(m[o]);
        for (g = Fe.units[xe.WHEAT_SEED],
        o = 0; o < g.length; o++)
            Se(g[o]);
        for (var k = Fe.units[xe.GIFT], o = 0; o < k.length; o++)
            Se(k[o], Le.GIFT, Le.HURT_GIFT);
        for (var C = Fe.units[xe.WOOD_DOOR_SPIKE], o = 0; o < C.length; o++)
            1 & C[o].info && Se(C[o], Le.DOOR_WOOD_OPEN);
        for (C = Fe.units[xe.STONE_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            1 & C[o].info && Se(C[o], Le.DOOR_STONE_OPEN);
        for (C = Fe.units[xe.GOLD_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            C[o].info && Se(C[o], Le.DOOR_GOLD_OPEN);
        for (C = Fe.units[xe.DIAMOND_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            C[o].info && Se(C[o], Le.DOOR_DIAMOND_OPEN);
        for (C = Fe.units[xe.AMETHYST_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            C[o].info && Se(C[o], Le.DOOR_AMETHYST_OPEN);
        for (C = Fe.units[xe.REIDITE_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            C[o].info && Se(C[o], Le.DOOR_GOLD_OPEN);
        for (C = Fe.units[xe.WOOD_DOOR],
        o = 0; o < C.length; o++)
            1 & C[o].info && Se(C[o], Le.DOOR_WOOD_OPEN);
        for (C = Fe.units[xe.STONE_DOOR],
        o = 0; o < C.length; o++)
            1 & C[o].info && Se(C[o], Le.DOOR_STONE_OPEN);
        for (C = Fe.units[xe.GOLD_DOOR],
        o = 0; o < C.length; o++)
            C[o].info && Se(C[o], Le.DOOR_GOLD_OPEN);
        for (C = Fe.units[xe.DIAMOND_DOOR],
        o = 0; o < C.length; o++)
            C[o].info && Se(C[o], Le.DOOR_DIAMOND_OPEN);
        for (C = Fe.units[xe.AMETHYST_DOOR],
        o = 0; o < C.length; o++)
            C[o].info && Se(C[o], Le.DOOR_AMETHYST_OPEN);
        for (C = Fe.units[xe.REIDITE_DOOR],
        o = 0; o < C.length; o++)
            C[o].info && Se(C[o], Le.DOOR_GOLD_OPEN);
        for (var W = Fe.units[xe.RABBIT], o = 0; o < W.length; o++)
            Se(W[o], Le.RABBIT, Le.HURT_RABBIT);
        for (var R = Fe.units[xe.BED], o = 0; o < R.length; o++)
            Se(R[o], Le.BED);
        for (r = Fe.units[xe.SAND_WORM],
        o = 0; o < r.length; o++)
            Se(r[o], Le.SAND_WORM, Le.HURT_SAND_WORM);
        for (var S = Fe.units[xe.SPELL], o = 0; o < S.length; o++)
            0 === S[o].fly && Se(S[o]);
        for (R = Fe.units[xe.BED],
        o = 0; o < R.length; o++)
            Se(R[o], Le.BED_TOP);
        for (var V = Fe.units[xe.CRAB], o = 0; o < V.length; o++)
            Se(V[o]);
        for (var U = Fe.units[xe.FOX], o = 0; o < U.length; o++)
            Se(U[o], Le.FOX, Le.HURT_FOX);
        for (var K = Fe.units[xe.BOAR], o = 0; o < K.length; o++)
            Se(K[o]);
        for (var x = Fe.units[xe.WOLF], o = 0; o < x.length; o++)
            Se(x[o], Le.WOLF, Le.HURT_WOLF);
        for (var F = Fe.units[xe.BABY_DRAGON], o = 0; o < F.length; o++)
            Se(F[o], Le.BABY_DRAGON, Le.HURT_BABY_DRAGON);
        for (var Y = Fe.units[xe.BABY_LAVA], o = 0; o < Y.length; o++)
            Se(Y[o], Le.BABY_LAVA, Le.HURT_BABY_LAVA);
        for (A = Fe.units[xe.CARROT_SEED],
        o = 0; o < A.length; o++)
            0 != (15 & A[o].info) && 10 !== A[o].info && Se(A[o]);
        for (I = Fe.units[xe.WATERMELON_SEED],
        o = 0; o < I.length; o++)
            0 != (15 & I[o].info) && 10 !== I[o].info && Se(I[o]);
        for (p = Fe.units[xe.ALOE_VERA_MOB],
        o = 0; o < p.length; o++)
            Se(p[o], Le.ALOE_VERA);
        for (p = Fe.units[xe.ALOE_VERA_SEED],
        o = 0; o < p.length; o++)
            0 != (15 & p[o].info) && 10 !== p[o].info && Se(p[o]);
        for (T = Fe.units[xe.TOMATO_SEED],
        o = 0; o < T.length; o++)
            t2(T[o]);
        for (O = Fe.units[xe.GARLIC_SEED],
        o = 0; o < O.length; o++)
            0 != (15 & O[o].info) && 10 !== O[o].info && Se(O[o]);
        for (b = Fe.units[xe.THORNBUSH_SEED],
        o = 0; o < b.length; o++)
            0 != (15 & b[o].info) && 10 !== b[o].info && Se(b[o]);
        for (m = Fe.units[xe.PUMPKIN_SEED],
        o = 0; o < m.length; o++)
            0 != (15 & m[o].info) && 10 !== m[o].info && Se(m[o]);
        for (var J = Fe.units[xe.TREASURE_CHEST], o = 0; o < J.length; o++)
            Se(J[o], Le.TREASURE_CHEST, Le.HURT_TREASURE_CHEST);
        for (var X = Fe.units[xe.KRAKEN], o = 0; o < X.length; o++)
            Se(X[o], Le.KRAKEN, Le.HURT_KRAKEN);
        for (var j = Fe.units[xe.PIRANHA], o = 0; o < j.length; o++)
            Se(j[o], Le.PIRANHA, Le.HURT_PIRANHA);
        for (var q = Fe.units[xe.SPIDER], o = 0; o < q.length; o++)
            Se(q[o], Le.SPIDER, Le.HURT_SPIDER);
        for (var Z = Fe.units[xe.PENGUIN], o = 0; o < Z.length; o++)
            Se(Z[o], Le.PENGUIN, Le.HURT_PENGUIN);
        for (var $ = Fe.units[xe.BEAR], o = 0; o < $.length; o++)
            Se($[o], Le.BEAR, Le.HURT_BEAR);
        for (var Q = Fe.units[xe.BABY_MAMMOTH], o = 0; o < Q.length; o++)
            Se(Q[o]);
        for (var ee = Fe.units[xe.FLAME], o = 0; o < ee.length; o++)
            Se(ee[o], Le.FIRE_MOB, Le.HURT_FIRE_MOB);
        for (var te = Fe.units[xe.CRAB_BOSS], o = 0; o < te.length; o++)
            Se(te[o]);
        for (var ie = Fe.units[xe.MAMMOTH], o = 0; o < ie.length; o++)
            Se(ie[o], Le.MAMMOTH, Le.HURT_MAMMOTH);
        for (var N = Fe.units[xe.DRAGON], o = 0; o < N.length; o++)
            1 === N[o].scale && Se(N[o], Le.DRAGON, Le.HURT_DRAGON);
        for (N = Fe.units[xe.LAVA_DRAGON],
        o = 0; o < N.length; o++)
            1 === N[o].scale && Se(N[o], Le.LAVA_DRAGON, Le.HURT_LAVA_DRAGON);
        for (var ne = Fe.units[xe.WORKBENCH], o = 0; o < ne.length; o++)
            Se(ne[o], Le.WORKBENCH);
        for (u = Fe.units[xe.FURNACE],
        o = 0; o < u.length; o++)
            Se(u[o]);
        for (var re = Fe.units[xe.BREAD_OVEN], o = 0; o < re.length; o++)
            Se(re[o]);
        for (C = Fe.units[xe.WOOD_DOOR],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10012 : 10013 : Le.DOOR_WOOD_CLOSE),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.STONE_DOOR],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10014 : 10015 : Le.DOOR_STONE_CLOSE),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.GOLD_DOOR],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10016 : 10017 : Le.DOOR_GOLD_CLOSE),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.DIAMOND_DOOR],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10018 : 10019 : Le.DOOR_DIAMOND_CLOSE),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.AMETHYST_DOOR],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10020 : 10021 : Le.DOOR_AMETHYST_CLOSE),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.REIDITE_DOOR],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10022 : 10023 : Le.REIDITE_DOOR),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.WOOD_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10024 : 10025 : Le.WOOD_DOOR_SPIKE),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.STONE_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10026 : 10027 : Le.STONE_DOOR_SPIKE),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.GOLD_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10028 : 10029 : Le.GOLD_DOOR_SPIKE),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.DIAMOND_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10030 : 10031 : Le.DIAMOND_DOOR_SPIKE),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.AMETHYST_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10032 : 10033 : Le.AMETHYST_DOOR_SPIKE),
            C[o].draw_life(C[o].info >> 1);
        for (C = Fe.units[xe.REIDITE_DOOR_SPIKE],
        o = 0; o < C.length; o++)
            1 & C[o].info || Se(C[o], Ve.ColoredSpikes ? C[o].ally ? 10034 : 10035 : Le.REIDITE_DOOR_SPIKE),
            C[o].draw_life(C[o].info >> 1);
        for (var D = Fe.units[xe.WALL], o = 0; o < D.length; o++)
            Se(D[o], Le.WALL),
            D[o].draw_life(D[o].info);
        for (D = Fe.units[xe.STONE_WALL],
        o = 0; o < D.length; o++)
            Se(D[o], Le.STONE_WALL),
            D[o].draw_life(D[o].info);
        for (D = Fe.units[xe.GOLD_WALL],
        o = 0; o < D.length; o++)
            Se(D[o], Le.GOLD_WALL),
            D[o].draw_life(D[o].info);
        for (D = Fe.units[xe.DIAMOND_WALL],
        o = 0; o < D.length; o++)
            Se(D[o], Le.DIAMOND_WALL),
            D[o].draw_life(D[o].info);
        for (D = Fe.units[xe.AMETHYST_WALL],
        o = 0; o < D.length; o++)
            Se(D[o], Le.AMETHYST_WALL),
            D[o].draw_life(D[o].info);
        for (D = Fe.units[xe.REIDITE_WALL],
        o = 0; o < D.length; o++)
            Se(D[o], Le.REIDITE_WALL),
            D[o].draw_life(D[o].info);
        for (var f = Fe.units[xe.SPIKE], o = 0; o < f.length; o++)
            Se(f[o], Ve.ColoredSpikes ? f[o].ally ? 10010 : 10011 : Le.SPIKE),
            f[o].draw_life(f[o].info);
        for (f = Fe.units[xe.STONE_SPIKE],
        o = 0; o < f.length; o++)
            Se(f[o], Ve.ColoredSpikes ? f[o].ally ? 10008 : 10009 : Le.STONE_SPIKE),
            f[o].draw_life(f[o].info);
        for (f = Fe.units[xe.GOLD_SPIKE],
        o = 0; o < f.length; o++)
            Se(f[o], Ve.ColoredSpikes ? f[o].ally ? 10006 : 10007 : Le.GOLD_SPIKE),
            f[o].draw_life(f[o].info);
        for (f = Fe.units[xe.DIAMOND_SPIKE],
        o = 0; o < f.length; o++)
            Se(f[o], Ve.ColoredSpikes ? f[o].ally ? 10004 : 10005 : Le.DIAMOND_SPIKE),
            f[o].draw_life(f[o].info);
        for (f = Fe.units[xe.AMETHYST_SPIKE],
        o = 0; o < f.length; o++)
            Se(f[o], Ve.ColoredSpikes ? f[o].ally ? 10002 : 10003 : Le.AMETHYST_SPIKE),
            f[o].draw_life(f[o].info);
        for (f = Fe.units[xe.REIDITE_SPIKE],
        o = 0; o < f.length; o++)
            Se(f[o], Ve.ColoredSpikes ? f[o].ally ? 1e4 : 10001 : Le.REIDITE_SPIKE),
            f[o].draw_life(f[o].info);
        for (var oe = Fe.units[xe.WELL], o = 0; o < oe.length; o++) {
            var v = oe[o]
              , ae = (0 < v.info ? Se(v, Le.WELL_FULL) : Se(v, Le.WELL_EMPTY),
            ze.save(),
            ze.font = "22px Baloo Paaji",
            ze.strokeStyle = "black",
            ze.lineWidth = 7,
            ze.fillStyle = "red",
            Ye.cam.x + v.x - 50)
              , se = Ye.cam.y + v.y - 30 + 22;
            ze.strokeText("Water" + v.info, ae, se),
            ze.fillText("Waterï¸" + v.info, ae, se),
            ze.restore()
        }
        for (var de, M = Fe.units[xe.TOTEM], o = 0; o < M.length; o++)
            Se(M[o], Le.TOTEM),
            Ve.AutoTotem.e && !Ye.totem.wait && 0 === Ye.team.length && (de = Fe.fast_units[Ye.uid]) && !((16 & M[o].info) >> 4) && M[o].info < 8 && Jo(de, M[o]) < 300 && client.socket.send(JSON.stringify([18, M[o].pid, M[o].id])),
            ze.drawImage(M[o].img.canvas, Ye.cam.x + M[o].x - 45, Ye.cam.y + M[o].y - 45),
            Ve.Hitbox && ((de = Re[M[o].type]) ? ze.drawImage(de, M[o].x + Ye.cam.x - 150, M[o].y + Ye.cam.y - 150) : Zi(M[o].type, 0, !0));
        a2(Yr, i, n, e, t, Le.GOLD, "g", 2),
        a2(Yr, i, n, e, t, Le.GOLD_WINTER, "gw", 2),
        a2(Yr, i, n, e, t, Le.DIAMOND, "d", 2),
        a2(Yr, i, n, e, t, Le.DIAMOND_WINTER, "dw", 2),
        a2(Yr, i, n, e, t, Le.PLANT, "p", 0),
        a2(Yr, i, n, e, t, Le.EMERALD, "m", 2),
        a2(Yr, i, n, e, t, Le.AMETHYST, "a", 2),
        a2(Yr, i, n, e, t, Le.REIDITE, "re", 2),
        a2(Yr, i, n, e, t, Le.SHADOW_CAVE_STONES, "cs", 3, 3),
        a2(Yr, i, n, e, t, Le.SHADOW_CAVE_STONES, "cs", 2, 2),
        a2(Yr, i, n, e, t, Le.SHADOW_CAVE_STONES, "cs", 1, 1),
        a2(Yr, i, n, e, t, Le.SHADOW_CAVE_STONES, "cs", 0, 0),
        a2(Yr, i, n, e, t, Le.CAVE_STONES, "cs", 3, 3),
        a2(Yr, i, n, e, t, Le.CAVE_STONES, "cs", 2, 2),
        a2(Yr, i, n, e, t, Le.CAVE_STONES, "cs", 1, 1),
        a2(Yr, i, n, e, t, Le.CAVE_STONES, "cs", 0, 0);
        for (var _e = Fe.units[xe.FRUIT], o = 0; o < _e.length; o++)
            for (_ = 0; _ < _e[o].info; _++)
                Se(_e[o].fruits[_], Le.FRUIT);
        a2(Yr, i, n, e, t, Le.STONES, "s", 2);
        for (var y = Fe.units[xe.EXTRACTOR_MACHINE_STONE], o = 0; o < y.length; o++)
            Se(y[o]);
        for (y = Fe.units[xe.EXTRACTOR_MACHINE_GOLD],
        o = 0; o < y.length; o++)
            Se(y[o]);
        for (y = Fe.units[xe.EXTRACTOR_MACHINE_DIAMOND],
        o = 0; o < y.length; o++)
            Se(y[o]);
        for (y = Fe.units[xe.EXTRACTOR_MACHINE_AMETHYST],
        o = 0; o < y.length; o++)
            Se(y[o]);
        for (y = Fe.units[xe.EXTRACTOR_MACHINE_REIDITE],
        o = 0; o < y.length; o++)
            Se(y[o]);
        for (var ue = Fe.units[xe.WINDMILL], o = 0; o < ue.length; o++)
            e2(ue[o]);
        for (l = Fe.units[xe.FIRE],
        o = 0; o < l.length; o++)
            t2(l[o]);
        for (l = Fe.units[xe.BIG_FIRE],
        o = 0; o < l.length; o++)
            t2(l[o]);
        for (u = Fe.units[xe.FURNACE],
        o = 0; o < u.length; o++)
            2 == u[o].action && t2(u[o]);
        for (re = Fe.units[xe.BREAD_OVEN],
        o = 0; o < re.length; o++)
            t2(re[o]);
        for (c = Fe.units[xe.RESURRECTION],
        o = 0; o < c.length; o++)
            t2(c[o]);
        for (h = Fe.units[xe.EMERALD_MACHINE],
        o = 0; o < h.length; o++)
            t2(h[o]),
            h[o].draw_life(h[o].info),
            ze.drawImage(h[o].img.canvas, Ye.cam.x + h[o].x - 55, Ye.cam.y + h[o].y - 35);
        a2(Yr, i, n, e, t, Le.CACTUS, "c", 0),
        a2(Yr, i, n, e, t, Le.TREE, "t", 5, 4),
        a2(Yr, i, n, e, t, Le.FIR, "f", 2, 2),
        a2(Yr, i, n, e, t, Le.PALM, "plm", 0, 0),
        a2(Yr, i, n, e, t, Le.TREE_BRANCH, "b", 3, 2),
        a2(Yr, i, n, e, t, Le.TREE, "t", 3, 2),
        a2(Yr, i, n, e, t, Le.TREE_BRANCH, "b", 1, 0),
        a2(Yr, i, n, e, t, Le.FIR, "f", 1, 1),
        a2(Yr, i, n, e, t, Le.PALM, "plm", 1, 1),
        a2(Yr, i, n, e, t, Le.TREE, "t", 1, 0),
        a2(Yr, i, n, e, t, Le.FIR, "f", 0, 0),
        a2(Yr, i, n, e, t, Le.PALM, "plm", 2, 2);
        for (ue = Fe.units[xe.WINDMILL],
        o = 0; o < ue.length; o++)
            t2(ue[o]);
        for (var L = Fe.units[xe.CHEST], o = 0; o < L.length; o++) {
            if (Se(L[o]),
            Ve.AutoSteal.e && (L[o].ally || !L[o].lock || L[o].info && Ve.AutoSteal.u && Ye.inv.n[152] || L[o].steal && Ye.inv.n[152])) {
                var le = Fe.fast_units[Ye.uid];
                if (le && Jo(le, L[o]) < 300) {
                    (Ve.AutoSteal.u || L[o].steal) && !L[o].ally && L[o].lock && client.socket.send(JSON.stringify([15, L[o].pid, L[o].id]));
                    for (let e = 0; e < 4; e++)
                        client.socket.send(JSON.stringify([9, L[o].pid, L[o].id]))
                }
            }
            Ve.Hitbox && ((le = Re[L[o].type]) ? ze.drawImage(le, L[o].x + Ye.cam.x - 150, L[o].y + Ye.cam.y - 150) : Zi(L[o].type, 0, !0))
        }
        for (var ce = Fe.units[xe.CRATE], o = 0; o < ce.length; o++)
            Se(ce[o], Le.CRATE, Le.HURT_DEAD_BOX);
        for (var he = Fe.units[xe.DEAD_BOX], o = 0; o < he.length; o++)
            Se(he[o], Le.CRATE, Le.HURT_DEAD_BOX);
        for (s = Fe.units[xe.PLAYERS],
        o = 0; o < s.length; o++) {
            d = s[o];
            s[o].vehicle !== Ge.BABY_DRAGON && s[o].vehicle !== Ge.BABY_LAVA && s[o].vehicle !== Ge.HAWK && s[o].vehicle !== Ge.PLANE && s[o].vehicle !== Ge.NIMBUS ? 0 === d.tower && (.001 < d.tower_fx ? (d.tower_fx = Utils.lerp(d.tower_fx, 0, .018),
            G = 1 + .18 * Math.min(1, Math.max(d.tower_fx, 0) / 100),
            ze.save(),
            ze.scale(G, G),
            Ye.cam.x /= G,
            Ye.cam.y /= G,
            d.x /= G,
            d.y /= G,
            d.r.x /= G,
            d.r.y /= G,
            d.draw_vehicle(),
            d.draw(),
            Ye.cam.x *= G,
            Ye.cam.y *= G,
            d.x *= G,
            d.y *= G,
            d.r.x *= G,
            d.r.y *= G,
            ze.restore()) : (d.fly = 0,
            d.draw_vehicle(),
            d.draw())) : d.speed <= 180 && (ze.save(),
            G = 1 + .35 * Math.min(1, Math.max(d.vehicle_fx5 - 30, 0) / 180),
            ze.scale(G, G),
            Ye.cam.x /= G,
            Ye.cam.y /= G,
            d.x /= G,
            d.y /= G,
            d.r.x /= G,
            d.r.y /= G,
            d.fly = 0,
            d.draw_vehicle(),
            d.draw(),
            Ye.cam.x *= G,
            Ye.cam.y *= G,
            d.x *= G,
            d.y *= G,
            d.r.x *= G,
            d.r.y *= G,
            ze.restore())
        }
        for (var Ee = Fe.units[xe.WOOD_TOWER], o = 0; o < Ee.length; o++)
            Se(Ee[o], Le.WOOD_TOWER);
        for (s = Fe.units[xe.PLAYERS],
        o = 0; o < s.length; o++)
            1 === (d = s[o]).tower && (d.speed < 180 || d.vehicle !== Ge.BABY_DRAGON && d.vehicle !== Ge.BABY_LAVA && d.vehicle !== Ge.NIMBUS && d.vehicle !== Ge.HAWK && d.vehicle !== Ge.PLANE) && (d.tower_fx = Utils.lerp(d.tower_fx, 100, .018),
            G = 1 + .18 * Math.min(1, Math.max(d.tower_fx, 0) / 100),
            ze.save(),
            ze.scale(G, G),
            Ye.cam.x /= G,
            Ye.cam.y /= G,
            d.x /= G,
            d.y /= G,
            d.r.x /= G,
            d.r.y /= G,
            d.draw_vehicle(),
            d.draw(),
            Ye.cam.x *= G,
            Ye.cam.y *= G,
            d.x *= G,
            d.y *= G,
            d.r.x *= G,
            d.r.y *= G,
            ze.restore());
        for (var Te = Fe.units[xe.ROOF], o = 0; o < Te.length; o++)
            Se(Te[o], Le.ROOF),
            Te[o].draw_life(Te[o].info);
        for (var Ae = Fe.units[xe.FIREFLY], o = 0; o < Ae.length; o++)
            Se(Ae[o], Le.FIREFLY, Le.HURT_FIREFLY);
        for (var Ie = Fe.units[xe.GARLAND], o = 0; o < Ie.length; o++)
            Se(Ie[o], Le.GARLAND);
        for (var G, s = Fe.units[xe.PLAYERS], o = 0; o < s.length; o++)
            ((d = s[o]).vehicle === Ge.BABY_DRAGON || d.vehicle === Ge.BABY_LAVA || d.vehicle === Ge.NIMBUS || d.vehicle === Ge.HAWK || d.vehicle === Ge.PLANE) && 180 < d.speed && (d.fly = 1,
            ze.save(),
            G = 1 + .35 * Math.min(1, Math.max(d.vehicle_fx5 - 30, 0) / 180),
            ze.scale(G, G),
            Ye.cam.x /= G,
            Ye.cam.y /= G,
            d.x /= G,
            d.y /= G,
            d.r.x /= G,
            d.r.y /= G,
            d.draw_vehicle(),
            d.draw(),
            Ye.cam.x *= G,
            Ye.cam.y *= G,
            d.x *= G,
            d.y *= G,
            d.r.x *= G,
            d.r.y *= G,
            ze.restore());
        for (S = Fe.units[xe.SPELL],
        o = 0; o < S.length; o++)
            1 === S[o].fly && Se(S[o]);
        for (N = Fe.units[xe.DRAGON],
        o = 0; o < N.length; o++)
            1 < N[o].scale && Se(N[o], Le.DRAGON, Le.HURT_DRAGON);
        for (N = Fe.units[xe.LAVA_DRAGON],
        o = 0; o < N.length; o++)
            1 < N[o].scale && Se(N[o], Le.LAVA_DRAGON, Le.HURT_LAVA_DRAGON);
        for (var pe = Fe.units[xe.HAWK], o = 0; o < pe.length; o++)
            Se(pe[o], Le.HAWK, Le.HURT_HAWK);
        for (var ge = Fe.units[xe.VULTURE], o = 0; o < ge.length; o++)
            Se(ge[o], Le.VULTURE, Le.HURT_VULTURE);
        if (Ve.Tracers) {
            if (Fe.fast_units[Ye.uid]) {
                if (0 < Chinko.length)
                    for (let e = 0; e < Chinko.length; e++)
                        Chinko[e + 1] && (ze.save(),
                        ze.lineWidth = 2.6,
                        ze.beginPath(),
                        ze.moveTo(Ye.cam.x + Chinko[e][0], Ye.cam.y + Chinko[e][1]),
                        ze.lineTo(Ye.cam.x + Chinko[e + 1][0], Ye.cam.y + Chinko[e + 1][1]),
                        ze.strokeStyle = "cyan",
                        ze.stroke(),
                        ze.restore());
                var Oe = Fe.units[xe.HAWK];
                for (let e = 0; e < Oe.length; e++)
                    ze.save(),
                    ze.globalAlpha = .5,
                    ze.strokeStyle = "#017850",
                    ze.lineWidth = 9,
                    ze.moveTo(Ye.cam.x + Fe.fast_units[Ye.uid].x - 50, Ye.cam.x + Fe.fast_units[Ye.uid].y - 50),
                    ze.lineTo(Ye.cam.x + Fe.fast_units[Ye.uid].x - 500, Ye.cam.x + Fe.fast_units[Ye.uid].y - 500),
                    ze.lineTo(Ye.cam.x + Oe[e].x - 50, Ye.cam.x + Oe[e].y - 50),
                    ze.stroke(),
                    ze.beginPath(),
                    ze.arc(Fe.fast_units[Ye.uid].x, Fe.fast_units[Ye.uid].y, 50, 0, 2 * Math.PI),
                    ze.stroke(),
                    ze.restore()
            }
            var H = Fe.units[xe.KRAKEN];
            if (Fe.fast_units[Ye.uid]) {
                if (0 < H.length) {
                    for (let e = 0; e < H.length; e++)
                        ze.beginPath(),
                        ze.moveTo(Ye.cam.x + Fe.fast_units[Ye.uid].x, Ye.cam.y + Fe.fast_units[Ye.uid].y),
                        ze.lineTo(Ye.cam.x + H[e].x, Ye.cam.y + H[e].y),
                        ze.strokeStyle = "purple",
                        ze.stroke();
                    ze.save(),
                    ze.font = "18px Baloo Paaji",
                    ze.strokeStyle = "black",
                    ze.lineWidth = 7,
                    ze.strokeText("Kraken Amount: " + H.length, 0, 715),
                    ze.fillStyle = "white",
                    ze.fillText("Kraken Amount: " + H.length, 0, 715),
                    ze.restore()
                }
                var P = Fe.units[xe.SAND_WORM];
                if (0 < P.length) {
                    for (let e = 0; e < P.length; e++)
                        ze.beginPath(),
                        ze.moveTo(Ye.cam.x + Fe.fast_units[Ye.uid].x, Ye.cam.y + Fe.fast_units[Ye.uid].y),
                        ze.lineTo(Ye.cam.x + P[e].x, Ye.cam.y + P[e].y),
                        ze.strokeStyle = "black",
                        ze.stroke();
                    ze.save(),
                    ze.font = "18px Baloo Paaji",
                    ze.strokeStyle = "black",
                    ze.lineWidth = 7,
                    ze.strokeText("Sandworm Amount: " + P.length, 0, 690),
                    ze.fillStyle = "white",
                    ze.fillText("Sandworm Amount: " + P.length, 0, 690),
                    ze.restore()
                }
                var be = Fe.units[xe.PLAYERS];
                ze.save();
                for (let e = 0; e < be.length; e++)
                    be[e].pid !== Ye.id && (ze.lineWidth = 2.6,
                    ze.beginPath(),
                    ze.moveTo(Ye.cam.x + Fe.fast_units[Ye.uid].x, Ye.cam.y + Fe.fast_units[Ye.uid].y),
                    ze.lineTo(Ye.cam.x + be[e].x, Ye.cam.y + be[e].y),
                    ze.strokeStyle = be[e].ally ? "cyan" : "red",
                    ze.stroke());
                ze.restore();
                var me = Fe.units[xe.HAWK];
                ze.save();
                for (let e = 0; e < me.length; e++)
                    me[e].pid !== Ye.id && (ze.lineWidth = 2.6,
                    ze.beginPath(),
                    ze.moveTo(Ye.cam.x + Fe.fast_units[Ye.uid].x, Ye.cam.y + Fe.fast_units[Ye.uid].y),
                    ze.lineTo(Ye.cam.x + me[e].x, Ye.cam.y + me[e].y),
                    ze.strokeStyle = "brown",
                    ze.stroke());
                ze.restore(),
                G0 && (ze.save(),
                ze.lineWidth = 5,
                ze.beginPath(),
                ze.moveTo(Ye.cam.x + Fe.fast_units[Ye.uid].x, Ye.cam.y + Fe.fast_units[Ye.uid].y),
                ze.lineTo(Ye.cam.x + G0.x, Ye.cam.y + G0.y),
                ze.strokeStyle = "green",
                ze.stroke(),
                ze.restore(),
                ze.save(),
                ze.translate(Ye.cam.x + G0.x, Ye.cam.y + G0.y),
                ze.rotate(G0.angle),
                ze.lineWidth = 2.6,
                ze.strokeStyle = "green",
                ze.strokeRect(-50, -50, 100, 100),
                ze.restore(),
                ze.save(),
                ze.fillStyle = "green",
                ze.beginPath(),
                ze.arc(G0.x + Ye.cam.x, G0.y + Ye.cam.y, 7, 0, 2 * Math.PI),
                ze.fill(),
                ze.restore())
            }
        }
        if (Ve.JoinLeave) {
            let e = 400;
            if (c0.toggle11) {
                ze.save(),
                ze.font = "18px Baloo Paaji",
                ze.strokeStyle = "black",
                ze.lineWidth = 7,
                ze.fillStyle = "green";
                for (o = 0; o < c0.Join.length; o++)
                    ze.strokeText(c0.Join[o], 0, e),
                    ze.fillText(c0.Join[o], 0, e),
                    e += 20;
                ze.restore()
            }
            if (c0.toggle22) {
                ze.save(),
                ze.font = "18px Baloo Paaji",
                ze.strokeStyle = "black",
                ze.lineWidth = 7,
                ze.fillStyle = "red";
                for (o = 0; o < c0.Leave.length; o++)
                    ze.strokeText(c0.Leave[o], 0, e),
                    ze.fillText(c0.Leave[o], 0, e),
                    e += 20;
                ze.restore()
            }
        }
    }
    function e2(e, t) {
        Fe.transition ? (ze.globalAlpha = 1,
        e.draw_bg(t),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1 - Fe.shade.v,
        e.draw_bg(t),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1) : e.draw_bg(t)
    }
    function t2(e, t) {
        Fe.transition ? (ze.globalAlpha = 1,
        e.draw_fg(t),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1 - Fe.shade.v,
        e.draw_fg(t),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1) : e.draw_fg(t)
    }
    function i2(e, t, i, n) {
        Fe.transition ? (ze.globalAlpha = 1,
        Ue(ze, sprite[e][Fe.time], i, n),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1 - Fe.shade.v,
        Ue(ze, sprite[e][Fe.time], i, n),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1) : Ue(ze, t, i, n)
    }
    function n2(e, t, i, n, r) {
        var o = i.width
          , i = i.height
          , a = Math.floor(o / 2)
          , s = Math.floor(i / 2);
        Fe.transition ? (ze.globalAlpha = 1,
        Ue(ze, sprite[e][t][Fe.time], 0, 0, o, i, n, r, a, s),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1 - Fe.shade.v,
        Ue(ze, sprite[e][t][Fe.time], 0, 0, o, i, n, r, a, s),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1) : Ue(ze, sprite[e][t][Fe.time], 0, 0, o, i, n, r, a, s)
    }
    function r2(e, t, i, n) {
        var r = t.width
          , o = t.height
          , a = Math.floor(r / 2)
          , s = Math.floor(o / 2);
        Fe.transition ? (ze.globalAlpha = 1,
        Ue(ze, sprite[e][Fe.time], 0, 0, r, o, i, n, a, s),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1 - Fe.shade.v,
        Ue(ze, sprite[e][Fe.time], 0, 0, r, o, i, n, a, s),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1) : Ue(ze, t, 0, 0, r, o, i, n, a, s)
    }
    function o2(e, t, i, n, r) {
        Fe.transition && 1 == r ? (ze.globalAlpha = 1,
        Ue(ze, sprite[e][Fe.time][t], i, n),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1 - Fe.shade.v,
        Ue(ze, sprite[e][Fe.time][t], i, n),
        Fe.time = Fe.time ? 0 : 1) : (ze.globalAlpha = r,
        Ue(ze, sprite[e][Fe.time][t], i, n)),
        ze.globalAlpha = 1
    }
    function Se(e, t, i) {
        Fe.transition ? (ze.globalAlpha = 1,
        e.draw(t, i),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1 - Fe.shade.v,
        e.draw(t, i),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1) : e.draw(t, i)
    }
    function a2(e, t, i, n, r, o, a, s, d, _) {
        Fe.transition ? (ze.globalAlpha = 1,
        e(t, i, n, r, o, a, s, d, _),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1 - Fe.shade.v,
        e(t, i, n, r, o, a, s, d, _),
        Fe.time = Fe.time ? 0 : 1,
        ze.globalAlpha = 1) : e(t, i, n, r, o, a, s, d, _)
    }
    function s2(e, t, i, n, r, o, a) {
        var s = "#"
          , n = (s += (n = Math.floor(n * a + (1 - a) * e)) < 16 ? "0" + n.toString(16) : n.toString(16),
        Math.floor(r * a + (1 - a) * t))
          , n = (s += n < 16 ? "0" + n.toString(16) : n.toString(16),
        Math.floor(o * a + (1 - a) * i));
        return s += n < 16 ? "0" + n.toString(16) : n.toString(16)
    }
    function _2() {
        for (var e = Fe.biomes.length - 1; 0 <= e; e--)
            (l = Fe.biomes[e]).t === Fe.BIOME_SEA && (t = Fe.BIOME[l.t],
            -Ye.cam.x >= l.x1 - 230 - g0) && -Ye.cam.x <= l.x2 + 330 && -Ye.cam.y >= l.y1 - O0 && -Ye.cam.y <= l.y2 + 100 && (c = l.x2,
            l.t !== Fe.BIOME_SEA && (c -= 610),
            h = l.x1,
            l.t !== Fe.BIOME_SEA && (h += 610),
            E = l.y2,
            l.t !== Fe.BIOME_SEA && (E -= 610),
            T = l.y1,
            l.t !== Fe.BIOME_SEA && (T += 610),
            Fe.transition ? (i = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
            ze.fillStyle = s2(t.night[0], t.night[1], t.night[2], t.day[0], t.day[1], t.day[1], i)) : ze.fillStyle = t._color[Fe.time],
            n = Math.max(Ye.cam.x + h - 2 - 230, 0),
            r = Math.max(-Ye.cam.x + g0 - c - 330 - 2, 0),
            o = Math.max(Ye.cam.y + T - 2, 0),
            a = Math.max(-Ye.cam.y + O0 - E - 100 - 2, 0),
            ze.beginPath(),
            ze.fillRect(n, o, g0 - r - n, O0 - o - a));
        for (e = Fe.biomes.length - 1; 0 <= e; e--)
            (l = Fe.biomes[e]).t !== Fe.BIOME_SEA && (c = l.x2,
            l.t !== Fe.BIOME_SEA && (c -= 400),
            h = l.x1,
            l.t !== Fe.BIOME_SEA && (h += 400),
            E = l.y2,
            l.t !== Fe.BIOME_SEA && (E -= 300),
            T = l.y1,
            l.t !== Fe.BIOME_SEA && (T += 300),
            0 == (l.v & Ke.RIGHT) && -Ye.cam.x >= c - g0 + 120 && -Ye.cam.x <= c + 820 && -Ye.cam.y >= T + 88 - O0 && -Ye.cam.y <= E + 50 && (E2(c, T + 88, E - 88, Ye.beach[0], Fe.BIOME[l.t], l.v & Ke.RIGHT),
            T2(c, T + 88, E - 88, Ye.beach[0], Fe.BIOME[l.t], l.v & Ke.RIGHT)),
            0 == (l.v & Ke.LEFT) && -Ye.cam.x >= h - g0 - 700 && -Ye.cam.x <= h - 20 && -Ye.cam.y >= T + 88 - O0 && -Ye.cam.y <= E + 50 && (u2(h, T + 88, E - 88, Ye.beach[1], Fe.BIOME[l.t], l.v & Ke.LEFT),
            l2(h, T + 88, E - 88, Ye.beach[1], Fe.BIOME[l.t], l.v & Ke.LEFT)),
            0 == (l.v & Ke.BOTTOM) && -Ye.cam.x >= h - 235 - g0 && -Ye.cam.x <= c + 350 && -Ye.cam.y >= E - O0 - 275 && -Ye.cam.y <= E + 490 && (A2(E - 230, h - 230, c + 230, Ye.beach[2], Fe.BIOME[l.t], l.v & Ke.BOTTOM),
            I2(E - 230, h - 230, c + 230, Ye.beach[2], Fe.BIOME[l.t], l.v & Ke.BOTTOM)),
            0 == (l.v & Ke.TOP)) && -Ye.cam.x >= h - 235 - g0 && -Ye.cam.x <= c + 350 && -Ye.cam.y >= T - O0 - 390 && -Ye.cam.y <= T + 315 && (c2(T + 310, h - 230, c + 230, Ye.beach[3], Fe.BIOME[l.t], l.v & Ke.TOP),
            h2(T + 310, h - 230, c + 230, Ye.beach[3], Fe.BIOME[l.t], l.v & Ke.TOP));
        for (e = Fe.biomes.length - 1; 0 <= e; e--)
            (l = Fe.biomes[e]).t !== Fe.BIOME_SEA && (c = l.x2,
            l.t !== Fe.BIOME_SEA && (c -= 400),
            h = l.x1,
            l.t !== Fe.BIOME_SEA && (h += 400),
            E = l.y2,
            l.t !== Fe.BIOME_SEA && (E -= 300),
            T = l.y1,
            l.t !== Fe.BIOME_SEA && (T += 300),
            0 != (l.v & Ke.RIGHT) && -Ye.cam.x >= c - g0 + 120 && -Ye.cam.x <= c + 820 && -Ye.cam.y >= T + 88 - O0 && -Ye.cam.y <= E + 50 && E2(c, T + 88, E - 88, Ye.beach[0], Fe.BIOME[l.t], l.v & Ke.RIGHT),
            0 != (l.v & Ke.LEFT) && -Ye.cam.x >= h - g0 - 700 && -Ye.cam.x <= h - 20 && -Ye.cam.y >= T + 88 - O0 && -Ye.cam.y <= E + 50 && u2(h, T + 88, E - 88, Ye.beach[1], Fe.BIOME[l.t], l.v & Ke.LEFT),
            0 != (l.v & Ke.BOTTOM) && -Ye.cam.x >= h - 235 - g0 && -Ye.cam.x <= c + 350 && -Ye.cam.y >= E - O0 - 275 && -Ye.cam.y <= E + 490 && A2(E - 230, h - 230, c + 230, Ye.beach[2], Fe.BIOME[l.t], l.v & Ke.BOTTOM),
            0 != (l.v & Ke.TOP)) && -Ye.cam.x >= h - 235 - g0 && -Ye.cam.x <= c + 350 && -Ye.cam.y >= T - O0 - 390 && -Ye.cam.y <= T + 315 && c2(T + 310, h - 230, c + 230, Ye.beach[3], Fe.BIOME[l.t], l.v & Ke.TOP);
        for (var t, i, n, r, o, a, e = Fe.biomes.length - 1; 0 <= e; e--)
            (l = Fe.biomes[e]).t !== Fe.BIOME_SEA && (t = Fe.BIOME[l.t],
            -Ye.cam.x >= l.x1 - 230 - g0) && -Ye.cam.x <= l.x2 + 330 && -Ye.cam.y >= l.y1 - O0 && -Ye.cam.y <= l.y2 + 100 && (c = l.x2,
            l.t !== Fe.BIOME_SEA && (0 == (l.v & Ke.RIGHT) ? c -= 414 : c -= 610),
            h = l.x1,
            l.t !== Fe.BIOME_SEA && (0 == (l.v & Ke.LEFT) ? h += 414 : h += 610),
            E = l.y2,
            l.t !== Fe.BIOME_SEA && (0 == (l.v & Ke.BOTTOM) ? E -= 414 : E -= 610),
            T = l.y1,
            l.t !== Fe.BIOME_SEA && (0 == (l.v & Ke.TOP) ? T += 414 : T += 610),
            Fe.transition ? (i = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
            ze.fillStyle = s2(t.night[0], t.night[1], t.night[2], t.day[0], t.day[1], t.day[2], i)) : ze.fillStyle = t._color[Fe.time],
            n = Math.max(Ye.cam.x + h - 2 - 230, 0),
            r = Math.max(-Ye.cam.x + g0 - c - 330 - 2, 0),
            o = Math.max(Ye.cam.y + T - 2, 0),
            a = Math.max(-Ye.cam.y + O0 - E - 100 - 2, 0),
            ze.beginPath(),
            ze.fillRect(n, o, g0 - r - n, O0 - o - a));
        De.quality && (a2(Kr, Zr, $r, jr, qr, Le.WAVE_TWO, "isl", 2),
        a2(Kr, Zr, $r, jr, qr, Le.WAVE_ONE, "isl", 2)),
        a2(Yr, Zr, $r, jr, qr, Le.ISLAND, "isl", 2),
        De.quality && a2(Jr, Zr, $r, jr, qr, Le.DECORATION, "de");
        for (var s, d = Fe.units[xe.PLAYERS], e = 0; e < d.length; e++)
            for (var _ = d[e], u = 0; u < _.foot.length; u++)
                s = _.foot[u],
                ze.save(),
                ze.translate(Ye.cam.x + s.x, Ye.cam.y + s.y),
                ze.rotate(s.angle),
                ze.globalAlpha = s.alpha,
                s = sprite[s.id][Fe.time],
                Ue(ze, s, -s.width / 2, -s.height / 2),
                ze.globalAlpha = 1,
                ze.restore();
        60 < (yn += 40 * qe) && (yn -= 60),
        a2(Ln, Zr, $r, jr, qr, Le.RIVER, "r", 0);
        for (var l, c, h, E, T, e = 0; e < Fe.biomes.length; e++)
            (l = Fe.biomes[e]).t !== Fe.BIOME_SEA && (c = l.x2,
            l.t !== Fe.BIOME_SEA && (c -= 400),
            h = l.x1,
            l.t !== Fe.BIOME_SEA && (h += 400),
            E = l.y2,
            l.t !== Fe.BIOME_SEA && (E -= 300),
            T = l.y1,
            l.t !== Fe.BIOME_SEA && (T += 300),
            0 < (l.v & Ke.RIGHT) && -Ye.cam.x >= c - g0 + 120 && -Ye.cam.x <= c + 820 && -Ye.cam.y >= T + 88 - O0 && -Ye.cam.y <= E + 50 && T2(c, T + 88, E - 88, Ye.beach[0], Fe.BIOME[l.t], l.v & Ke.RIGHT),
            0 < (l.v & Ke.LEFT) && -Ye.cam.x >= h - g0 - 700 && -Ye.cam.x <= h - 20 && -Ye.cam.y >= T + 88 - O0 && -Ye.cam.y <= E + 50 && l2(h, T + 88, E - 88, Ye.beach[1], Fe.BIOME[l.t], l.v & Ke.LEFT),
            0 < (l.v & Ke.BOTTOM) && -Ye.cam.x >= h - 235 - g0 && -Ye.cam.x <= c + 350 && -Ye.cam.y >= E - O0 - 275 && -Ye.cam.y <= E + 490 && I2(E - 230, h - 230, c + 230, Ye.beach[2], Fe.BIOME[l.t], l.v & Ke.BOTTOM),
            0 < (l.v & Ke.TOP)) && -Ye.cam.x >= h - 235 - g0 && -Ye.cam.x <= c + 350 && -Ye.cam.y >= T - O0 - 390 && -Ye.cam.y <= T + 315 && h2(T + 310, h - 230, c + 230, Ye.beach[3], Fe.BIOME[l.t], l.v & Ke.TOP)
    }
    function u2(e, t, i, n, r, o) {
        var a, s = n.w1, d = n.w2, _ = n.w3, e = Ye.cam.x + e - 700, t = Math.max(Ye.cam.y + t, 0), i = Math.max(-Ye.cam.y + O0 - i - 100, 0), u = t, t = O0 - t - i, s = (i = (o ? n.t(s) : s.r).x,
        e + Ke.LW1SX), d = (Ke.W1SX,
        s += i + Ke.W1SX - 2,
        i = (o ? n.t(d) : d.r).x,
        e + Ke.LW2SX - s + i), l = (s += d - 2) - 2;
        i = (o ? n.t(_) : _.r).x,
        l < s + (d = e + Ke.LW3SX - s + i) - 3 ? s += d - 2 : s = l,
        d = e + Ke.LSANDX - s,
        0 < o && 1 === r.isSand ? Fe.transition ? (a = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(15, 77, 72, 252, 239, 187, a)) : ze.fillStyle = Le.SAND_COLOR[Fe.time] : Fe.transition ? (a = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(r.night[0], r.night[1], r.night[2], r.day[0], r.day[1], r.day[2], a)) : ze.fillStyle = r._color[Fe.time],
        ze.fillRect(s, u, d, t)
    }
    function l2(e, t, i, n, r, o) {
        var a, s, d, _, u, l, c = n.w1, h = n.w2, E = n.w3, e = Ye.cam.x + e - 700, t = Math.max(Ye.cam.y + t, 0), i = Math.max(-Ye.cam.y + O0 - i - 100, 0), T = t, t = O0 - t - i, c = (i = o ? n.t(c) : c.r,
        e + Ke.LW1SX), A = c, I = T, p = i.x + Ke.W1SX, g = t, O = c += i.x + Ke.W1SX - 2, h = (i = o ? n.t(h) : h.r,
        e + Ke.LW2SX - c + i.x), b = c, m = T, C = h, R = t, S = (c += h - 2) - 2;
        i = o ? n.t(E) : E.r,
        E = S < c + (h = e + Ke.LW3SX - c + i.x) - 3 ? (u = !0,
        a = c,
        s = T,
        _ = t,
        c += (d = h) - 2) : (u = !1,
        c = S,
        -1),
        Ke.LSANDX,
        Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(A, I, p, g),
        o ? Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(15, 70, 76, 42, 139, 155, l)) : ze.fillStyle = Le.WATER_2_COLOR[Fe.time] : Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(b, m, C, R),
        u && (o ? Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(17, 94, 96, 169, 214, 211, l)) : ze.fillStyle = Le.WATER_1_COLOR[Fe.time] : Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(a, s, d, _)),
        De.quality && o && n.draw_foams_left(S, E, O, e, -Ye.cam.y + I, -Ye.cam.y + I + g)
    }
    function c2(e, t, i, n, r, o) {
        var a, s = n.w1, d = n.w2, _ = n.w3, e = Ye.cam.y + e - 700, t = Math.max(Ye.cam.x + t, 0), i = Math.max(-Ye.cam.x + g0 - i - 100, 0), u = t, t = g0 - t - i, s = (i = (o ? n.t(s) : s.r).x,
        e + Ke.LW1SX), d = (Ke.W1SX,
        s += i + Ke.W1SX - 2,
        i = (o ? n.t(d) : d.r).x,
        e + Ke.LW2SX - s + i), l = (s += d - 2) - 2;
        i = (o ? n.t(_) : _.r).x,
        l < s + (d = e + Ke.LW3SX - s + i) - 3 ? s += d - 2 : s = l,
        d = e + Ke.LSANDX - s,
        0 < o && 1 === r.isSand ? Fe.transition ? (a = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(15, 77, 72, 252, 239, 187, a)) : ze.fillStyle = Le.SAND_COLOR[Fe.time] : Fe.transition ? (a = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(r.night[0], r.night[1], r.night[2], r.day[0], r.day[1], r.day[2], a)) : ze.fillStyle = r._color[Fe.time],
        ze.fillRect(u, s, t, d)
    }
    function h2(e, t, i, n, r, o) {
        var a, s, d, _, u, l, c = n.w1, h = n.w2, E = n.w3, e = Ye.cam.y + e - 700, t = Math.max(Ye.cam.x + t, 0), i = Math.max(-Ye.cam.x + g0 - i - 100, 0), T = t, t = g0 - t - i, c = (i = o ? n.t(c) : c.r,
        e + Ke.LW1SX), A = T, I = c, p = i.x + Ke.W1SX, g = t, O = c += i.x + Ke.W1SX - 2, h = (i = o ? n.t(h) : h.r,
        e + Ke.LW2SX - c + i.x), b = c, m = T, C = h, R = t, S = (c += h - 2) - 2;
        i = o ? n.t(E) : E.r,
        E = S < c + (h = e + Ke.LW3SX - c + i.x) - 3 ? (u = !0,
        a = c,
        s = T,
        _ = t,
        c += (d = h) - 2) : (u = !1,
        c = S,
        -1),
        Ke.LSANDX,
        Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(A, I, g, p),
        o ? Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(15, 70, 76, 42, 139, 155, l)) : ze.fillStyle = Le.WATER_2_COLOR[Fe.time] : Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(m, b, R, C),
        u && (o ? Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(17, 94, 96, 169, 214, 211, l)) : ze.fillStyle = Le.WATER_1_COLOR[Fe.time] : Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(s, a, _, d)),
        De.quality && o && n.draw_foams_top(S, E, O, e, -Ye.cam.x + A, -Ye.cam.x + A + g)
    }
    function E2(e, t, i, n, r, o) {
        var a, s = n.w1, d = n.w2, _ = n.w3, e = Ye.cam.x + e + 820, t = Math.max(Ye.cam.y + t, 0), i = Math.max(-Ye.cam.y + O0 - i - 100, 0), u = t, t = O0 - t - i, s = (i = (o ? n.t(s) : s.r).x,
        e + Ke.LW1SX), d = (Ke.W1SX,
        s += -i + Ke.W1SX + 2,
        i = (o ? n.t(d) : d.r).x,
        e - Ke.LW2SX - s - i), l = (s += 2 + d) - 2;
        i = (o ? n.t(_) : _.r).x,
        s + (d = e - Ke.LW3SX - s - i) < l ? s += 2 + d : s = l,
        d = e - Ke.LSANDX - s,
        0 < o && 1 === r.isSand ? Fe.transition ? (a = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(15, 77, 72, 252, 239, 187, a)) : ze.fillStyle = Le.SAND_COLOR[Fe.time] : Fe.transition ? (a = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(r.night[0], r.night[1], r.night[2], r.day[0], r.day[1], r.day[2], a)) : ze.fillStyle = r._color[Fe.time],
        ze.fillRect(s, u, d, t)
    }
    function T2(e, t, i, n, r, o) {
        var a, s, d, _, u, l, c = n.w1, h = n.w2, E = n.w3, e = Ye.cam.x + e + 820, t = Math.max(Ye.cam.y + t, 0), i = Math.max(-Ye.cam.y + O0 - i - 100, 0), T = t, t = O0 - t - i, c = (i = o ? n.t(c) : c.r,
        e + Ke.LW1SX), A = c, I = T, p = -i.x + Ke.W1SX, g = t, O = c += -i.x + Ke.W1SX + 2, h = (i = o ? n.t(h) : h.r,
        e - Ke.LW2SX - c - i.x), b = c, m = T, C = h, R = t, S = (c += 2 + h) - 2;
        i = o ? n.t(E) : E.r,
        E = c + (h = e - Ke.LW3SX - c - i.x) < S ? (u = !0,
        a = c,
        s = T,
        _ = t,
        c += 2 + (d = h)) : (u = !1,
        c = S,
        -1),
        Ke.LSANDX,
        Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(A, I, p, g),
        o ? Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(15, 70, 76, 42, 139, 155, l)) : ze.fillStyle = Le.WATER_2_COLOR[Fe.time] : Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(b, m, C, R),
        u && (o ? Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(17, 94, 96, 169, 214, 211, l)) : ze.fillStyle = Le.WATER_1_COLOR[Fe.time] : Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(a, s, d, _)),
        De.quality && o && n.draw_foams_right(S, E, O, e, -Ye.cam.y + I, -Ye.cam.y + I + g)
    }
    function A2(e, t, i, n, r, o) {
        var a, s = n.w1, d = n.w2, _ = n.w3, e = Ye.cam.y + e + 710, t = Math.max(Ye.cam.x + t, 0), i = Math.max(-Ye.cam.x + g0 - i - 100, 0), u = t, t = g0 - t - i, s = (i = (o ? n.t(s) : s.r).x,
        e + Ke.LW1SX), d = (Ke.W1SX,
        s += -i + Ke.W1SX + 2,
        i = (o ? n.t(d) : d.r).x,
        e - Ke.LW2SX - s - i), l = (s += 2 + d) - 2;
        i = (o ? n.t(_) : _.r).x,
        s + (d = e - Ke.LW3SX - s - i) < l ? s += 2 + d : s = l,
        d = e - Ke.LSANDX - s,
        0 < o && 1 === r.isSand ? Fe.transition ? (a = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(15, 77, 72, 252, 239, 187, a)) : ze.fillStyle = Le.SAND_COLOR[Fe.time] : Fe.transition ? (a = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(r.night[0], r.night[1], r.night[2], r.day[0], r.day[1], r.day[2], a)) : ze.fillStyle = r._color[Fe.time],
        ze.fillRect(u, s, t, d)
    }
    function I2(e, t, i, n, r, o) {
        var a, s, d, _, u, l, c = n.w1, h = n.w2, E = n.w3, e = Ye.cam.y + e + 710, t = Math.max(Ye.cam.x + t, 0), i = Math.max(-Ye.cam.x + g0 - i - 100, 0), T = t, t = g0 - t - i, c = (i = o ? n.t(c) : c.r,
        e + Ke.LW1SX), A = c, I = T, p = -i.x + Ke.W1SX, g = t, O = c += -i.x + Ke.W1SX + 2, h = (i = o ? n.t(h) : h.r,
        e - Ke.LW2SX - c - i.x), b = c, m = T, C = h, R = t, S = (c += 2 + h) - 2;
        i = o ? n.t(E) : E.r,
        E = c + (h = e - Ke.LW3SX - c - i.x) < S ? (u = !0,
        a = c,
        s = T,
        _ = t,
        c += 2 + (d = h)) : (u = !1,
        c = S,
        -1),
        Ke.LSANDX,
        Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(I, A, g, p),
        o ? Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(15, 70, 76, 42, 139, 155, l)) : ze.fillStyle = Le.WATER_2_COLOR[Fe.time] : Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(m, b, R, C),
        u && (o ? Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(17, 94, 96, 169, 214, 211, l)) : ze.fillStyle = Le.WATER_1_COLOR[Fe.time] : Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
        ze.fillStyle = s2(9, 55, 63, 11, 106, 132, l)) : ze.fillStyle = Le.WATER_3_COLOR[Fe.time],
        ze.fillRect(s, a, _, d)),
        De.quality && o && n.draw_foams_bottom(S, E, O, e, -Ye.cam.x + I, -Ye.cam.x + I + g)
    }
    function p2() {
        var e;
        if (ze.globalAlpha = 1,
        Fe.transition && (e = Fe.shade.update()),
        Fe.update_dist_from_biomes(-Ye.cam.x, -Ye.cam.y),
        jr = Math.max(Math.floor(-Ye.cam.x / Fe.dw) - 5, 0),
        qr = Math.min(Math.floor((-Ye.cam.x + Ye.cam.w) / Fe.dw) + 4, Fe.nw - 1),
        Zr = Math.max(Math.floor(-Ye.cam.y / Fe.dh) - 3, 0),
        $r = Math.min(Math.floor((-Ye.cam.y + Ye.cam.h) / Fe.dh) + 3, Fe.nh - 1),
        _2(),
        Qr(),
        De.quality && Fe.mode !== Ke.MODE_ZOMBIES && Fe.mode !== Ke.MODE_LEGACY && Fe.mode !== Ke.MODE_BR) {
            for (var t = Ye.desert, i = (0 === t.tempest ? t.tempest_speed = Math.max(0, t.tempest_speed - qe / 10) : t.tempest_speed = Math.min(1, t.tempest_speed + qe / 10),
            t.flakes), n = 0; n < i.length; n++) {
                var r = i[n];
                t.update(r),
                o2(Le.DESERT, r.id, Ye.cam.x + r.x, Ye.cam.y + r.y, r.alpha)
            }
            for (n = 0; n < i.length; n++)
                ((r = i[n]).life <= 0 || r.x > -Ye.cam.x + g0 || r.x < -Ye.cam.x - Ye.cam.w / 2 || r.y > -Ye.cam.y + O0) && i.splice(n, 1);
            var o = -Ye.cam.y;
            -1e3 < Fe.dist_desert && t.add(o);
            for (var a = Ye.winter, s = (0 === a.tempest ? a.tempest_speed = Math.max(0, a.tempest_speed - qe / 10) : a.tempest_speed = Math.min(1, a.tempest_speed + qe / 10),
            a.flakes), d = 0; d < s.length; d++) {
                var _ = s[d];
                a.update(_),
                o2(Le.FLAKES, _.id, Ye.cam.x + _.x, Ye.cam.y + _.y, _.alpha)
            }
            for (d = 0; d < s.length; d++)
                ((_ = s[d]).life <= 0 || _.x > -Ye.cam.x + g0 || _.x < -Ye.cam.x || _.y > -Ye.cam.y + O0) && s.splice(d, 1);
            o = -Ye.cam.y;
            -1e3 < Fe.dist_winter && a.add(o);
            for (var u = Ye.ash, l = u.flakes, c = 0; c < l.length; c++) {
                var h = l[c];
                u.update(h),
                o2(Le.ASHES, h.id, Ye.cam.x + h.x, Ye.cam.y + h.y, h.alpha)
            }
            for (c = 0; c < l.length; c++)
                ((h = l[c]).life <= 0 || h.x > -Ye.cam.x + g0 || h.x < -Ye.cam.x || h.y > -Ye.cam.y + O0) && l.splice(c, 1);
            o = -Ye.cam.y;
            -1e3 < Fe.dist_lava && u.add(o)
        }
        Fe.transition && e && (Fe.transition = !1,
        Fe.shade.v = 0,
        Fe.shade.o = !1)
    }
    var g2 = 0
      , O2 = 1
      , b2 = 2
      , m2 = 0
      , C2 = 1
      , R2 = 2;
    function S2(e, t) {
        e = e.getBoundingClientRect();
        return {
            x: t.clientX - e.left,
            y: t.clientY - e.top
        }
    }
    function N2(e, t, i, n, r, o, a, s, d, _, u, l, c, h, E) {
        0 === e.length && (e = " "),
        void 0 === a && (a = 0),
        void 0 === s && (s = 0),
        void 0 === d && (d = 0),
        void 0 === h && (h = 0);
        var T = document.createElement("canvas")
          , A = T.getContext("2d");
        return A.textBaseline = "middle",
        A.font = (void 0 !== E ? E + " " : "") + n + "px " + t,
        r = void 0 !== r ? Math.min(A.measureText(e).width, r) : A.measureText(e).width,
        T.width = r + a,
        T.height = n + s,
        void 0 !== o && (void 0 !== u && (A.globalAlpha = u),
        A.fillStyle = o,
        void 0 !== l ? (roundRect(A, d + 2, d, r + a - 2 * d - 4, n + s - 2 * d, l),
        A.fill()) : A.fillRect(d, d, r + a - 2 * d, n + s - 2 * d),
        A.globalAlpha = 1,
        0 !== d) && (A.lineWidth = d,
        A.strokeStyle = _,
        A.stroke()),
        A.textBaseline = "middle",
        A.font = (void 0 !== E ? E + " " : "") + n + "px " + t,
        void 0 !== c && (A.strokeStyle = c,
        A.lineWidth = h,
        A.lineJoin = "miter",
        A.miterLimit = 2,
        A.strokeText(e, Math.floor(a / 2), Math.floor(s / 2) + Math.floor(n / 2), r)),
        A.fillStyle = i,
        A.fillText(e, Math.floor(a / 2), Math.floor(s / 2) + Math.floor(n / 2), r),
        T.w2 = T.width / 2,
        T.h2 = T.height / 2,
        T
    }
    function Ne(e, t, i, n, r, a, o, s, d, _, u) {
        function l() {
            return T.img[T.state]
        }
        function c(e) {
            var t = T.translate;
            return 0 !== T.width && 0 !== T.height || (T.width = T.img[0].width,
            T.height = T.img[0].height),
            e.x > t.x && e.x < t.x + T.width / r && e.y > t.y && e.y < t.y + T.height / r
        }
        var h, E, T = {
            width: e,
            height: t,
            img: h = n ? n : h,
            state: m2,
            translate: {
                x: s = void 0 === s ? 0 : s,
                y: d = void 0 === d ? 0 : d,
                _x: s,
                _y: d
            },
            enable_breath: a = 1 !== a ? 0 : a,
            breath: 0,
            callback: o,
            position: _ = void 0 === _ ? 0 : _,
            active: u = void 0 === u ? 1 : u
        }, a = function() {
            var e = 0;
            return 1 === T.enable_breath && (T.state === C2 || T.state === R2 ? T.breath = (T.breath + 1e3 * qe) % 1e3 : 0 < T.breath && (T.breath = 500 < T.breath ? T.breath + 1e3 * qe : T.breath - 1e3 * qe,
            T.breath < 0 || 1e3 < T.breath) && (T.breath = 0),
            e = .2 * Utils.ease_in_out_quad(500 < T.breath ? (1e3 - T.breath) / 500 : T.breath / 500)),
            e
        };
        return 2 === (r = 3 === r ? 3 : 1 === r ? 2 : 1) ? E = function(e) {
            var t = 1 + a()
              , i = l()
              , n = T.width * t / 2
              , t = T.height * t / 2
              , r = (n - T.width / 2) / 2
              , o = (t - T.height / 2) / 2;
            Ue(e, i, T.translate.x - r, T.translate.y - o, n, t)
        }
        : 3 === r ? (E = function(e) {
            var t = l()
              , i = T.width
              , n = T.height
              , r = (i - T.width) / 2
              , o = (n - T.height) / 2;
            Ue(e, t, T.translate.x - r, T.translate.y - o, i, n)
        }
        ,
        r = 1) : E = function(e) {
            Ue(e, l(), T.translate.x, T.translate.y)
        }
        ,
        {
            info: T,
            trigger: function(e, t, i) {
                return c(t) ? (i == O2 ? T.state = R2 : (i == b2 || i == g2 && T.state != R2) && (T.state = C2),
                !0) : (T.state = m2,
                !1)
            },
            draw: E,
            in_button: c
        }
    }
    function D2(t, e, i, n, r) {
        var o = {
            x: i,
            y: n,
            _x: i,
            _y: n
        };
        return {
            translate: o,
            draw: function(e) {
                Ue(e, t, o.x, o.y, t.width / 2, t.height / 2)
            },
            active: e,
            position: r
        }
    }
    var f2 = "send"
      , v2 = "1" === Utils.getURLData("id") ? 1 : 0
      , M2 = Utils.getURLData("password")
      , L2 = "https://api.eg.rivet.gg/matchmaker"
      , m = {
        DELETE: 1,
        HURT: 2,
        COLD: 4,
        HUNGER: 8,
        ATTACK: 16,
        WALK: 32,
        IDLE: 64,
        HEAL: 128,
        WEB: 256
    }
      , G2 = [{
        price: 1e3,
        items: [[2, Ge.FIRE], [1, Ge.COOKED_MEAT], [8, Ge.PLANT], [1, Ge.BREAD]]
    }, {
        price: 2e3,
        items: [[2, Ge.BIG_FIRE], [1, Ge.PICK_WOOD], [2, Ge.COOKED_MEAT], [16, Ge.PLANT], [2, Ge.BREAD]]
    }, {
        price: 4e3,
        items: [[3, Ge.BIG_FIRE], [1, Ge.PICK], [4, Ge.COOKED_MEAT], [20, Ge.PLANT], [4, Ge.BREAD], [1, Ge.WORKBENCH], [80, Ge.STONE], [140, Ge.WOOD]]
    }, {
        price: 8e3,
        items: [[1, Ge.BAG], [4, Ge.BIG_FIRE], [1, Ge.PICK_GOLD], [6, Ge.COOKED_MEAT], [30, Ge.PLANT], [6, Ge.BREAD], [1, Ge.WORKBENCH], [150, Ge.STONE], [200, Ge.WOOD], [60, Ge.GOLD], [2, Ge.BOTTLE_FULL]]
    }, {
        price: 16e3,
        items: [[1, Ge.BAG], [1, Ge.PICK_DIAMOND], [1, Ge.BED], [7, Ge.CAKE], [2, Ge.BOTTLE_FULL], [2, Ge.BIG_FIRE], [1, Ge.FURNACE], [15, Ge.STONE_WALL], [2, Ge.STONE_DOOR], [1, Ge.TOTEM], [1, Ge.SPANNER], [200, Ge.STONE], [300, Ge.WOOD]]
    }, {
        price: 16e3,
        items: [[1, Ge.BAG], [1, Ge.COAT], [1, Ge.SHOVEL_GOLD], [1, Ge.PICK_GOLD], [10, Ge.CAKE], [4, Ge.BOTTLE_FULL], [6, Ge.BIG_FIRE], [3, Ge.BANDAGE], [1, Ge.BOOK], [200, Ge.STONE], [300, Ge.WOOD]]
    }, {
        price: 16e3,
        items: [[1, Ge.BAG], [1, Ge.HOOD], [1, Ge.HAMMER_GOLD], [3, Ge.BANDAGE], [1, 0], [1, Ge.PICK_GOLD], [7, Ge.CAKE], [2, Ge.BOTTLE_FULL], [4, Ge.BIG_FIRE], [150, Ge.STONE], [200, Ge.WOOD], [1, Ge.LOCKPICK]]
    }, {
        price: 16e3,
        items: [[1, Ge.BAG], [1, Ge.PEASANT], [1, Ge.PICK_GOLD], [7, Ge.CAKE], [2, Ge.BOTTLE_FULL], [4, Ge.BIG_FIRE], [2, Ge.WINDMILL], [4, Ge.BREAD_OVEN], [10, Ge.PLOT], [6, Ge.WHEAT_SEED], [4, Ge.SEED], [1, Ge.WATERING_CAN_FULL], [500, Ge.WOOD]]
    }, {
        price: 16e3,
        items: [[1, Ge.BAG], [1, Ge.PICK_GOLD], [16, Ge.FOODFISH_COOKED], [1, Ge.BOTTLE_FULL], [6, Ge.BIG_FIRE], [3, Ge.BANDAGE], [1, Ge.DIVING_MASK], [1, Ge.SWORD], [16, Ge.BRIDGE], [150, Ge.STONE], [200, Ge.WOOD]]
    }, {
        price: 2e4,
        items: [[1, Ge.BAG], [1, Ge.PICK_GOLD], [1, Ge.CAKE], [1, Ge.BOTTLE_FULL], [3, Ge.BIG_FIRE], [3, Ge.BANDAGE], [1, Ge.GOLD_HELMET], [1, Ge.SWORD_GOLD], [1, Ge.DIAMOND_SPEAR], [2, Ge.GOLD_SPIKE], [50, Ge.STONE], [100, Ge.WOOD]]
    }]
      , H2 = {
        VERSION_NUMBER: 52,
        TIMEOUT_TIME: 1e3,
        TIMEOUT_NUMBER: 3,
        PING: "[13]",
        PING_DELAY: 600,
        ROTATE: .2,
        ATTACK: .2,
        SLOW_ATTACK: .58,
        CAM_DELAY: 50,
        TIMEOUT_SERVER: 31104e7,
        WAITING_FOR_SERVER: 5e3,
        DELAY_CONNECTION_UPDATE: 5,
        LAG_DISTANCE: 100,
        LOOSE_FOCUS: 15,
        TOKEN_LEN: 20,
        TEAM_MANAGE: 0,
        TEAM_SHOW: 1,
        TEAM_LEAVE: 2,
        TEAM_JOIN: 3,
        TEAM_FULL: 4,
        SKIN_MAX: 20,
        ACCESSORY_MAX: 14,
        SYMBOL_MAX: 4
    };
    for (var Ke = {
        DAY: 48e4,
        WITHOUT_BAG: 10,
        WITH_BAG: 16,
        BAG_SIZE: 6,
        GHOST_DELAY: 6e4,
        TOP: 1,
        BOTTOM: 2,
        LEFT: 4,
        RIGHT: 8,
        ROTATE: 10,
        DIST_CHEST: 100,
        DIST_FURNACE: 100,
        DIST_WINDMILL: 100,
        DIST_WELL: 100,
        DIST_BREAD_OVEN: 100,
        DIST_SIGN: 100,
        DIST_TOTEM: 100,
        DIST_RESURRECTION: 100,
        DIST_EXTRACTOR_MACHINE: 100,
        MODE_PVP: 0,
        MODE_HUNGER_GAMES: 1,
        MODE_ZOMBIES: 2,
        MODE_VAMPIRES: 3,
        MODE_LEGACY: 4,
        MODE_BR: 5,
        MODE_COMMUNITY: 6,
        MODE_EXPERIMENTAL: 7,
        RIVET_GAME_MODES: {
            0: "normal",
            2: "zombies",
            3: "vampires",
            4: "forest",
            7: "experimental"
        },
        ZOMBIE_SKIN: 0,
        VAMPIRE_SKIN: 0,
        ROBOT_SKIN: 30,
        GHOST: 2,
        WT1SY: 0,
        LWT1SY: 0,
        WT1EY: 50,
        WT2SY: 0,
        LWT2SY: 40,
        WT2EY: 39,
        LWT2: 830,
        FLOAM_X: 25,
        FLOAM_Y: 8,
        W1SX: 0,
        LW1SX: 0,
        W1EX: 200,
        W2SX: 0,
        LW2SX: 250,
        W2EX: 150,
        W3SX: 0,
        LW3SX: 350,
        W3EX: 100,
        LSANDX: 700,
        SEED: 39879
    }, P2 = [], D = 0; D < 500; D++)
        P2[D] = 0;
    P2[Le.SUPER_DIVING_SUIT] = 1,
    P2[Le.SWORD_WOOD] = 1,
    P2[Le.SWORD] = 1,
    P2[Le.SWORD_GOLD] = 1,
    P2[Le.SWORD_DIAMOND] = 1,
    P2[Le.SWORD_AMETHYST] = 1,
    P2[Le.REIDITE_SWORD] = 1,
    P2[Le.PIRATE_SWORD] = 1,
    P2[Le.DRAGON_SWORD] = 1,
    P2[Le.LAVA_SWORD] = 1,
    P2[Le.SPEAR] = 1,
    P2[Le.GOLD_SPEAR] = 1,
    P2[Le.DIAMOND_SPEAR] = 1,
    P2[Le.AMETHYST_SPEAR] = 1,
    P2[Le.REIDITE_SPEAR] = 1,
    P2[Le.DRAGON_SPEAR] = 1,
    P2[Le.LAVA_SPEAR] = 1,
    P2[Le.WOOD_SPEAR] = 1,
    P2[Le.CRAB_SPEAR] = 1;
    var B2 = [{
        time: 288e4
    }, {
        time: 144e4
    }, {
        time: 192e4
    }, {
        time: 144e4
    }, {
        time: 288e4
    }, {
        time: 24e5
    }, {
        time: 24e5
    }, {
        time: 48e5
    }, {
        time: 288e4
    }, {
        time: 336e4
    }, {
        time: 288e4
    }, {
        time: 384e4
    }, {
        time: 336e4
    }]
      , xe = {
        PLAYERS: 0,
        FIRE: 1,
        WORKBENCH: 2,
        SEED: 3,
        WALL: 4,
        SPIKE: 5,
        BIG_FIRE: 6,
        STONE_WALL: 7,
        GOLD_WALL: 8,
        DIAMOND_WALL: 9,
        WOOD_DOOR: 10,
        CHEST: 11,
        STONE_SPIKE: 12,
        GOLD_SPIKE: 13,
        DIAMOND_SPIKE: 14,
        STONE_DOOR: 15,
        GOLD_DOOR: 16,
        DIAMOND_DOOR: 17,
        FURNACE: 18,
        AMETHYST_WALL: 19,
        AMETHYST_SPIKE: 20,
        AMETHYST_DOOR: 21,
        RESURRECTION: 22,
        EMERALD_MACHINE: 23,
        EXTRACTOR_MACHINE_STONE: 24,
        EXTRACTOR_MACHINE_GOLD: 25,
        EXTRACTOR_MACHINE_DIAMOND: 26,
        EXTRACTOR_MACHINE_AMETHYST: 27,
        EXTRACTOR_MACHINE_REIDITE: 28,
        TOTEM: 29,
        BRIDGE: 30,
        WHEAT_SEED: 31,
        WINDMILL: 32,
        PLOT: 33,
        BREAD_OVEN: 34,
        WELL: 35,
        SIGN: 36,
        PUMPKIN_SEED: 37,
        ROOF: 38,
        GARLIC_SEED: 39,
        THORNBUSH_SEED: 40,
        BED: 41,
        GARLAND: 42,
        TOMATO_SEED: 43,
        CARROT_SEED: 44,
        WOOD_DOOR_SPIKE: 45,
        STONE_DOOR_SPIKE: 46,
        GOLD_DOOR_SPIKE: 47,
        DIAMOND_DOOR_SPIKE: 48,
        AMETHYST_DOOR_SPIKE: 49,
        REIDITE_WALL: 50,
        REIDITE_DOOR: 51,
        REIDITE_SPIKE: 52,
        REIDITE_DOOR_SPIKE: 53,
        WATERMELON_SEED: 54,
        ALOE_VERA_SEED: 55,
        WOOD_TOWER: 56,
        WOLF: 60,
        SPIDER: 61,
        FOX: 62,
        BEAR: 63,
        DRAGON: 64,
        PIRANHA: 65,
        KRAKEN: 66,
        CRAB: 67,
        FLAME: 68,
        LAVA_DRAGON: 69,
        BOAR: 70,
        CRAB_BOSS: 71,
        BABY_DRAGON: 72,
        BABY_LAVA: 73,
        HAWK: 74,
        VULTURE: 75,
        SAND_WORM: 76,
        BABY_MAMMOTH: 77,
        MAMMOTH: 78,
        WHEAT_MOB: 79,
        RABBIT: 80,
        TREASURE_CHEST: 81,
        DEAD_BOX: 82,
        PUMPKIN_MOB: 83,
        GARLIC_MOB: 84,
        THORNBUSH_MOB: 85,
        CRATE: 86,
        GIFT: 87,
        PENGUIN: 88,
        ALOE_VERA_MOB: 89,
        FIREFLY: 90,
        SPELL: 91,
        FRUIT: 100
    }
      , w2 = [[xe.EXTRACTOR_MACHINE_STONE, Ge.STONE], [xe.EXTRACTOR_MACHINE_GOLD, Ge.GOLD], [xe.EXTRACTOR_MACHINE_DIAMOND, Ge.DIAMOND], [xe.EXTRACTOR_MACHINE_AMETHYST, Ge.AMETHYST], [xe.EXTRACTOR_MACHINE_REIDITE, Ge.REIDITE]];
    function z2() {
        this.nickname = "",
        this.skin = 0,
        this.accessory = 0,
        this.bag = 0,
        this.baglook = 0,
        this.book = 0,
        this.crate = 0,
        this.dead = 0,
        this.level = 0,
        this.label = null,
        this.label_winter = null,
        this.ldb_label = null,
        this.alive = !1,
        this.score = 0,
        this.id = 0
    }
    function k2(e, t, i, n, r, o, a, s, d, _) {
        switch (Ye && t === Ye.id && $i.E && ($i.I.drawText("L:" + i, 30, "black", "#5f57ff"),
        $i.L = i,
        $i.E = !1),
        this.type = e,
        this.pid = t,
        this.id = i,
        this.x = n,
        this.hited = 0,
        this.dmged = 0,
        this.time = performance.now(),
        this.y = r,
        this.angle = o,
        this.nangle = o,
        this.action = a,
        this.info = s,
        this.extra = _,
        this.r = {
            x: n,
            y: r
        },
        this.visualhealth = u0(this.type),
        this.speed = d,
        this.spawnTime = performance.now(),
        Fe && (this.uid = t * Fe.max_units + i),
        e) {
        case xe.PLAYERS:
            this.ally = Ye.id === this.pid || H0(this.pid),
            this.player = Fe.players[this.pid],
            this.skin = this.player.skin,
            this.baglook = this.player.baglook,
            this.book = this.player.book,
            this.accessory = this.player.accessory,
            this.dist_forest = -1e6,
            this.dist_lava = -1e6,
            this.dist_winter = -1e6,
            this.dist_desert = -1e6,
            this.dist_water = -1e6,
            this.dist_sand = -1e6,
            this.dist_dragon = -1e6,
            this.zombie = Fe.mode === Ke.MODE_ZOMBIES && this.skin === Ke.ZOMBIE_SKIN,
            this.vampire = Fe.mode === Ke.MODE_VAMPIRES && this.skin === Ke.VAMPIRE_SKIN,
            this.superzombie = !(!this.zombie || "  " !== this.player.nickname),
            this.foot = [],
            this.tower = 0,
            this.move_effect = !0,
            this.id_foot = 0,
            this.fly = 0,
            this.swim = [],
            this.r = {
                x: n,
                y: r
            },
            this.hited = 0,
            this.dmged = 0,
            this.draw = Lr,
            this.draw_vehicle = Mr,
            this.vehicle_fx1 = 0,
            this.vehicle_fx2 = 0,
            this.vehicle_fx3 = 0,
            this.vehicle_fx4 = new Utils.LinearAnimation(!1,0,0,-Math.PI / 6,.5,1),
            this.vehicle_fx5 = 0,
            this.tower_fx = 0,
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3),
            this.heal = new Utils.LinearAnimation(!1,.6,.6,0,5,3),
            this.freeze = new Utils.LinearAnimation(!1,.6,.6,0,5,3),
            this.starve = new Utils.LinearAnimation(!1,.6,.6,0,5,3),
            this.idle = new Utils.LinearAnimation(!0,0,2.25,-1.5,3.75,7.5),
            this.walk = new Utils.LinearAnimation(!0,0,7.5,-3,22.5,33.75),
            this.attack = new Utils.LinearAnimation(!1,0,0,-Math.PI / 3,6,9),
            this.slow_attack = 0,
            this.web = new Utils.LinearAnimation(!1,.6,.6,0,1,3),
            this.move_head = this.superzombie ? new Utils.LinearAnimation(!0,0,2.25,-1.5,2.75,5.5) : 0,
            this.angle_init = 0,
            this.text_ease = 0,
            this.text_effect = [],
            this.text_move = [],
            this.text = [],
            this.label = [],
            this.draw_text = Ur,
            this.hand = !0,
            this.right = -1,
            this.vehicle = -1,
            this.action = m.IDLE,
            this.collide = !1,
            this.clothe = 0,
            this.ghost = !1,
            this.bubbles = [],
            this.bag = 0,
            this.sid = -1,
            this.update = function(e) {
                32768 & this.info ? (this.collide = !0,
                this.info = -32769 & this.info) : this.collide = !1,
                16384 & this.info ? (this.info = -16385 & this.info,
                this.bag = 1) : this.bag = 0,
                this.clothe = Math.floor(this.info / 128),
                this.info -= 128 * this.clothe,
                this.info === Ge.HAND || this.superzombie ? this.right = -1 : this.right = this.info,
                this.tower = Fe.find_tower(Math.floor(this.r.y / 100), Math.floor(this.r.x / 100)),
                this.vehicle = 255 & this.extra,
                this.right === Ke.GHOST ? (this.ghost = !0,
                (60 - (performance.now() - this.ghosttime) / 1e3).toFixed(1) < 0 || this.ghosttime,
                this.ghosttime = new Date) : (this.ghost = !1,
                this.ghosttime = null),
                P2[this.right] ? this.weapon = !0 : this.weapon = !1,
                e & m.WEB ? (this.web.o = !1,
                this.web.v = .6) : e & m.COLD ? (this.freeze.o = !1,
                this.freeze.v = .6) : e & m.HEAL && (this.heal.o = !1,
                this.heal.v = .6),
                e & m.HUNGER && (this.starve.o = !1,
                this.starve.v = .6),
                e & m.HURT && (this.hit.o = !1,
                this.hit.v = .6),
                e & m.ATTACK && (this.slow_attack = H2.SLOW_ATTACK,
                Xe.run) && -1 !== this.sid && Xe.players[this.sid].swing(uo[this.right])
            }
            ,
            this.update();
            break;
        case xe.EMERALD_MACHINE:
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw_bg = Rr,
            this.draw_fg = mr,
            this.halo = new Utils.LinearAnimation(!1,1,1.23,1.18,.01,.01),
            this.rotate1 = 0,
            this.rotate2 = 0,
            this.draw_life = Nn,
            this.img = new qi(200,50,0),
            this.img.drawText(String.raw`${Fe.players[this.pid].nickname}`, 18, "black", "white");
            break;
        case xe.RESURRECTION:
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw_bg = Sr,
            this.draw_fg = Cr,
            this.halo = new Utils.LinearAnimation(!1,1,1.23,1.18,.01,.01),
            this.rotate1 = 0,
            this.rotate2 = 0;
            break;
        case xe.FIRE:
        case xe.BIG_FIRE:
            this.draw_bg = cr,
            this.draw_fg = Dr,
            this.fire = new Utils.LinearAnimation(!1,1,1.03,.98,.3,.3),
            this.ground = new Utils.LinearAnimation(!1,1,1.23,1.18,.01,.01),
            this.halo = new Utils.LinearAnimation(!1,1,1.23,1.18,.01,.01),
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            };
            break;
        case xe.TOMATO_SEED:
            this.draw_bg = sr,
            this.draw_fg = dr,
            this.ground = new Utils.LinearAnimation(!1,.9,1.05,.9,.2,.2),
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.fruits = [];
            for (var u = 0; u < 3; u++)
                this.fruits.push({
                    draw: qn,
                    breath: new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2)
                });
            this.fruits[0].x = this.x - 16.5,
            this.fruits[0].y = this.y - 15.5,
            this.fruits[0].angle = this.angle,
            this.fruits[1].x = this.x + 36,
            this.fruits[1].y = this.y + 17,
            this.fruits[1].angle = this.angle,
            this.fruits[2].x = this.x - 18.5,
            this.fruits[2].y = this.y + 39,
            this.fruits[2].angle = this.angle;
            break;
        case xe.SEED:
            this.draw_bg = or,
            this.draw_fg = ar,
            this.ground = new Utils.LinearAnimation(!1,.9,1.05,.9,.2,.2),
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.fruits = [];
            for (u = 0; u < 3; u++)
                this.fruits.push({
                    draw: Zn,
                    breath: new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2)
                });
            this.fruits[0].x = this.x - 16.5,
            this.fruits[0].y = this.y - 15.5,
            this.fruits[1].x = this.x - 5.5,
            this.fruits[1].y = this.y + 7.5,
            this.fruits[2].x = this.x + 18,
            this.fruits[2].y = this.y - 5;
            break;
        case xe.BABY_MAMMOTH:
            this.hited = 0,
            this.dmged = 0,
            this.draw = Kn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.BOAR:
            this.hited = 0,
            this.dmged = 0,
            this.draw = xn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.CRAB_BOSS:
            this.hited = 0,
            this.dmged = 0,
            this.hited = 0,
            this.dmged = 0,
            this.draw = Fn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.breathl = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.breathr = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3),
            this.heal = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.CRAB:
            this.hited = 0,
            this.dmged = 0,
            this.draw = Yn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.breathl = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.breathr = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3),
            this.heal = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.FLAME:
            this.draw = jn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.FIREFLY:
            this.draw = Xn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.5,.5),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.SPELL:
            this.spell = 15 & this.info,
            this.fly = 1 & this.extra,
            this.born = 0,
            this.x = this.info,
            this.y = this.extra,
            this.draw = Jn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.6,.6);
            break;
        case xe.RABBIT:
        case xe.WOLF:
        case xe.SPIDER:
        case xe.FOX:
        case xe.BEAR:
        case xe.MAMMOTH:
        case xe.PIRANHA:
        case xe.KRAKEN:
        case xe.PENGUIN:
            this.hited = 0,
            this.dmged = 0,
            this.draw = Xn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.SIGN:
            this.draw = hr,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            };
            break;
        case xe.BREAD_OVEN:
            this.draw_fg = lr,
            this.draw = Er,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.up = new Utils.LinearAnimation(!1,1,1.03,.98,.1,.1),
            this.smog = [],
            this.img = new qi(68,90,2),
            this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white"),
            this.update = function(e) {
                this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white")
            }
            ;
            break;
        case xe.GIFT:
            this.angle = Math.random() * Math.PI / 2,
            this.hited = 0,
            this.dmged = 0;
        case xe.CRATE:
        case xe.DEAD_BOX:
            this.hited = 0,
            this.dmged = 0,
            this.draw = Vn,
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.TREASURE_CHEST:
            this.hited = 0,
            this.dmged = 0,
            this.draw = Un,
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.LAVA_DRAGON:
            this.hited = 0,
            this.dmged = 0,
            this.scale = 1,
            this.draw = kn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.rotate = new Utils.LinearAnimation(!1,0,0,-Math.PI / 6,.5,1),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.SAND_WORM:
            this.hited = 0,
            this.dmged = 0,
            this.dig = 0,
            this.ground = [],
            this.groundTimer = 0,
            this.draw_ground = Gn,
            this.draw = Hn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.rotate = new Utils.LinearAnimation(!1,0,0,-Math.PI / 6,.5,1),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.VULTURE:
            this.hited = 0,
            this.dmged = 0,
            this.x = this.info,
            this.y = this.extra,
            this.scale = 1,
            this._alpha = 0,
            this.draw = Pn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.rotate = new Utils.LinearAnimation(!1,0,0,-Math.PI / 6,.5,1),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.HAWK:
            this.hited = 0,
            this.dmged = 0,
            this.x = this.info,
            this.y = this.extra,
            this.scale = 1,
            this._alpha = 0,
            this.draw = Bn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.rotate = new Utils.LinearAnimation(!1,0,0,-Math.PI / 6,.5,1),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.BABY_LAVA:
            this.hited = 0,
            this.dmged = 0,
            this.scale = 1,
            this.draw = wn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.rotate = new Utils.LinearAnimation(!1,0,0,-Math.PI / 6,.5,1),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.BABY_DRAGON:
            this.hited = 0,
            this.dmged = 0,
            this.scale = 1,
            this.draw = zn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.rotate = new Utils.LinearAnimation(!1,0,0,-Math.PI / 6,.5,1),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.DRAGON:
            this.hited = 0,
            this.dmged = 0,
            this.scale = 1,
            this.draw = Wn,
            this.breath = new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2),
            this.rotate = new Utils.LinearAnimation(!1,0,0,-Math.PI / 6,.5,1),
            this.hit = new Utils.LinearAnimation(!1,.6,.6,0,5,3);
            break;
        case xe.FRUIT:
            this.fruits = [];
            for (u = 0; u < 5; u++)
                this.fruits.push({
                    draw: Zn,
                    breath: new Utils.LinearAnimation(!1,.9 + .15 * Math.random(),1.05,.9,.2,.2)
                });
            switch (this.id % 3) {
            case 0:
                this.fruits[0].x = this.x - 20.5,
                this.fruits[0].y = this.y - 22.5,
                this.fruits[1].x = this.x - 35.5,
                this.fruits[1].y = this.y + 7.5,
                this.fruits[2].x = this.x + 7.5,
                this.fruits[2].y = this.y - 30,
                this.fruits[3].x = this.x + 22.5,
                this.fruits[3].y = this.y,
                this.fruits[4].x = this.x - 7.5,
                this.fruits[4].y = this.y + 14.5;
                break;
            case 1:
                this.fruits[0].x = this.x - 30.5,
                this.fruits[0].y = this.y - 22.5,
                this.fruits[1].x = this.x - 15.5,
                this.fruits[1].y = this.y + 7.5,
                this.fruits[2].x = this.x + 15.5,
                this.fruits[2].y = this.y - 30,
                this.fruits[3].x = this.x + 12.5,
                this.fruits[3].y = this.y + 5,
                this.fruits[4].x = this.x - 40.5,
                this.fruits[4].y = this.y + 14.5;
                break;
            case 2:
                this.fruits[0].x = this.x - 20.5,
                this.fruits[0].y = this.y - 20.5,
                this.fruits[1].x = this.x - 35.5,
                this.fruits[1].y = this.y + 15.5,
                this.fruits[2].x = this.x + 7.5,
                this.fruits[2].y = this.y - 17,
                this.fruits[3].x = this.x + 22.5,
                this.fruits[3].y = this.y + 5,
                this.fruits[4].x = this.x - 7.5,
                this.fruits[4].y = this.y + 1.5
            }
            break;
        case xe.WHEAT_SEED:
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw = rr,
            this.ground = new Utils.LinearAnimation(!1,.9,1.05,.9,.2,.2),
            this.wind = new Utils.LinearAnimation(!1,0,Math.PI / 30,-Math.PI / 30,.06,.06);
            break;
        case xe.THORNBUSH_SEED:
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw = $n,
            this.ground = new Utils.LinearAnimation(!1,.9,1.05,.9,.2,.2);
            break;
        case xe.GARLIC_SEED:
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw = Qn,
            this.ground = new Utils.LinearAnimation(!1,.9,1.05,.9,.2,.2);
            break;
        case xe.CARROT_SEED:
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw = ir,
            this.ground = new Utils.LinearAnimation(!1,.9,1.05,.9,.2,.2);
            break;
        case xe.ALOE_VERA_SEED:
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw = er,
            this.ground = new Utils.LinearAnimation(!1,.9,1.05,.9,.2,.2);
            break;
        case xe.WATERMELON_SEED:
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw = tr,
            this.ground = new Utils.LinearAnimation(!1,.9,1.05,.9,.2,.2);
            break;
        case xe.PUMPKIN_SEED:
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw = nr,
            this.ground = new Utils.LinearAnimation(!1,.9,1.05,.9,.2,.2);
            break;
        case xe.EXTRACTOR_MACHINE_STONE:
            this.draw = Ar,
            this.rotate = 0,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.img = new qi(70,70,1),
            this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white"),
            this.update = function(e) {
                this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white")
            }
            ;
            break;
        case xe.EXTRACTOR_MACHINE_GOLD:
            this.draw = Ir,
            this.rotate = 0,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.img = new qi(70,70,1),
            this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white"),
            this.update = function(e) {
                this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white")
            }
            ;
            break;
        case xe.EXTRACTOR_MACHINE_DIAMOND:
            this.draw = pr,
            this.rotate = 0,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.img = new qi(70,70,1),
            this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white"),
            this.update = function(e) {
                this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white")
            }
            ;
            break;
        case xe.EXTRACTOR_MACHINE_AMETHYST:
            this.draw = gr,
            this.rotate = 0,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.img = new qi(70,70,1),
            this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white"),
            this.update = function(e) {
                this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white")
            }
            ;
            break;
        case xe.EXTRACTOR_MACHINE_REIDITE:
            this.draw = Or,
            this.rotate = 0,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.img = new qi(70,70,1),
            this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white"),
            this.update = function(e) {
                this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white")
            }
            ;
            break;
        case xe.WINDMILL:
            this.draw_bg = br,
            this.draw_fg = Tr,
            this.rotate = 0,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.img = new qi(70,70,1),
            this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white"),
            this.update = function(e) {
                this.info && Ve.worldinfo && this.img.drawText(this.info, 20, "black", "white")
            }
            ;
            break;
        case xe.ROOF:
            this.ally = Ye.id === this.pid || H0(this.pid),
            this.draw = Dn,
            this.j = Math.floor(this.x / 100),
            this.i = Math.floor(this.y / 100),
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.opacity = 1,
            this.draw_life = Sn;
            break;
        case xe.GARLAND:
            this.draw = fn,
            this.halo = new Utils.LinearAnimation(!1,1,1.15,1,.3,.3),
            this.color = 0,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            };
            break;
        case xe.PLOT:
        case xe.WORKBENCH:
        case xe.WOOD_TOWER:
        case xe.WELL:
        case xe.TOTEM:
            this.draw = Mn,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            29 === this.type && (E0(this.pid) && (l0.x = this.x,
            l0.y = this.y),
            this.img = new qi(200,90,3),
            this.img.drawText([String.raw`${Fe.players[this.pid].nickname}`, this.info], 18, "black", "white"),
            this.update = function(e) {
                this.img.drawText([String.raw`${Fe.players[this.pid].nickname}`, this.info], 18, "black", "white")
            }
            );
            break;
        case xe.BRIDGE:
            this.draw = Mn,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw_life = Sn;
            break;
        case xe.WALL:
        case xe.STONE_WALL:
        case xe.GOLD_WALL:
        case xe.DIAMOND_WALL:
        case xe.AMETHYST_WALL:
        case xe.REIDITE_WALL:
        case xe.SPIKE:
        case xe.STONE_SPIKE:
        case xe.GOLD_SPIKE:
        case xe.DIAMOND_SPIKE:
        case xe.AMETHYST_SPIKE:
        case xe.REIDITE_SPIKE:
            this.ally = Ye.id === this.pid || H0(this.pid),
            this.draw = Mn,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw_life = Nn;
            break;
        case xe.BED:
            this.draw = vn,
            this.opacity = 1,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            };
            var l = this.angle % (Math.PI / 2);
            l < Math.PI / 4 ? this.angle -= l : this.angle += Math.PI / 2 - l;
            break;
        case xe.WHEAT_MOB:
            this.draw = Rn,
            this.angle = Math.random() * Math.PI * 2;
            break;
        case xe.ALOE_VERA_MOB:
            this.draw = Cn,
            this.angle = Math.random() * Math.PI * 2;
            break;
        case xe.PUMPKIN_MOB:
            this.draw = mn,
            this.angle = Math.random() * Math.PI * 2;
            break;
        case xe.GARLIC_MOB:
            this.draw = bn,
            this.angle = Math.random() * Math.PI * 2;
            break;
        case xe.THORNBUSH_MOB:
            this.draw = On,
            this.angle = Math.random() * Math.PI * 2;
            break;
        case xe.CHEST:
            this.ally = Ye.id === this.pid || H0(this.pid);
            for (let e = 0; e < Ve.AutoSteal.l.length; e++)
                if (this.action / 2 - 1 === Ve.AutoSteal.l[e]) {
                    this.steal = !0;
                    break
                }
            this.update = function(e) {
                this.lock = 8192 & this.info ? 1 : 0,
                this.info = 8191 & this.info,
                this.action = e;
                for (let e = 0; e < Ve.AutoSteal.l.length; e++)
                    if (this.action / 2 - 1 === Ve.AutoSteal.l[e]) {
                        this.steal = !0;
                        break
                    }
            }
            ,
            this.draw = gn,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.lock = 0,
            this.update(this.action);
            break;
        case xe.WOOD_DOOR_SPIKE:
        case xe.STONE_DOOR_SPIKE:
        case xe.GOLD_DOOR_SPIKE:
        case xe.DIAMOND_DOOR_SPIKE:
        case xe.AMETHYST_DOOR_SPIKE:
        case xe.REIDITE_DOOR_SPIKE:
        case xe.WOOD_DOOR:
        case xe.STONE_DOOR:
        case xe.GOLD_DOOR:
        case xe.DIAMOND_DOOR:
        case xe.AMETHYST_DOOR:
        case xe.REIDITE_DOOR:
            this.ally = Ye.id === this.pid || H0(this.pid),
            this.draw = pn,
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.draw_life = Nn;
            break;
        case xe.FURNACE:
            this.draw_bg = ur,
            this.draw = _r,
            this.draw_fg = Nr,
            this.ground = new Utils.LinearAnimation(!1,1,1.23,1.18,.02,.02),
            this.halo = new Utils.LinearAnimation(!1,1,1.23,1.18,.04,.04),
            this.hit = {
                anim: new Utils.LinearAnimation(!1,1,1,0,10,10),
                update: !1,
                angle: 0
            },
            this.update = function(e) {
                this.action = e
            }
        }
    }
    function W2(e) {
        function se(e, t, i, n, r) {
            for (var o = 0; o < r && 1 !== function(e, t, i, n, r) {
                for (var t = t + Math.floor(Fe.RNG.get() * n), i = i + Math.floor(Fe.RNG.get() * n), o = 10 + Math.floor(Fe.RNG.get() * (Fe.nw - t - 20)), a = 10 + Math.floor(Fe.RNG.get() * (Fe.nh - i - 20)), s = o + t, d = a + i, _ = 0; _ < Fe.biomes.length; _++) {
                    var u = Fe.biomes[_];
                    if (1 === Utils.intersect_aabb(o, s, a, d, u.x1 / 100 - r, u.x2 / 100 + r, u.y1 / 100 - r, u.y2 / 100 + r))
                        return 0
                }
                return Fe.biomes.push(new Fe.Biome(e,o,a,t,i,15)),
                1
            }(e, t, i, n, 8); o++)
                ;
            return o === r ? 0 : 1
        }
        function T(e, t, i, n, r, o, a, s) {
            for (var d = Math.floor(a / 2), _ = Math.max(1, Math.floor(a / 2)), u = Math.floor(s / 2), l = Math.max(1, Math.floor(s / 2)), c = 0; c < i; c++) {
                for (var h = e - u; h < e + l; h++)
                    for (var E = t - d; E < t + _; E++)
                        1 === ce(h, E, "wtb", 0, 1) && o.push([h, E, 1]);
                e += n,
                t += r
            }
        }
        function de(e, t) {
            for (var i, n, e = Fe.biomes[e], r = Math.floor(e.y1 / 100), o = Math.floor(e.x1 / 100), a = Math.floor(e.h / 100), s = Math.floor(e.w / 100), d = o + s, _ = 2, u = a, l = r, c = o + 10 + Math.floor((s - 20) * Fe.RNG.get()), h = c - 4; h < c + 4; h++)
                ce(r - 1, h, "wtb", 0, 1);
            for (; 0 < u; )
                if (2 === _) {
                    for (var E = 10; 1 < E; E--)
                        T(l, c, 1, 1, 0, t, E, 1),
                        --u,
                        l += 1;
                    _ = 0
                } else if (u < 10)
                    for (E = 1; 0 < u; E++)
                        T(l, c, 1, 1, 0, t, E, 1),
                        --u,
                        l += 1;
                else
                    1 === _ ? (T(l, c, i = Math.min(u, Math.floor(1 + 4 * Fe.RNG.get())), 1, 0, t, s = 1 + Math.floor(4 * Fe.RNG.get()), s),
                    _ = 0,
                    u -= i,
                    l += i) : (_ = 1,
                    i = Math.floor(1 + 2 * Fe.RNG.get()),
                    n = 1 + Math.floor(4 * Fe.RNG.get()),
                    c < o + 16 || !(d - 16 < c) && .5 < Fe.RNG.get() ? (T(l, c, i, 0, 1, t, n, n),
                    c += i) : (T(l, c, i, 0, -1, t, n, n),
                    c -= i));
            for (h = c - 1; h < c + 2; h++)
                ce(l, h, "wtb", 0, 1)
        }
        function _e(e, t) {
            for (var i, n, r = 0; r < t.length; r++) {
                var o = t[r][0]
                  , a = t[r][1]
                  , s = t[r][2];
                i = e,
                s = s,
                n = void 0,
                d(o = o, a = a) && (void 0 === (tiles = he.tiles)[o][a] && (tiles[o][a] = {}),
                void 0 === tiles[o][a].r) && (n = 0,
                d(o - 1, a) && void 0 !== tiles[o - 1][a] && void 0 !== tiles[o - 1][a].wtb && (n += 2),
                d(o, a - 1) && void 0 !== tiles[o][a - 1] && void 0 !== tiles[o][a - 1].wtb && (n += 8),
                d(o, a + 1) && void 0 !== tiles[o][a + 1] && void 0 !== tiles[o][a + 1].wtb && (n += 16),
                d(o + 1, a) && void 0 !== tiles[o + 1][a] && void 0 !== tiles[o + 1][a].wtb && (n += 64),
                d(o - 1, a - 1) && 10 == (10 & n) && void 0 !== tiles[o - 1][a - 1] && void 0 !== tiles[o - 1][a - 1].wtb && (n += 1),
                d(o - 1, a + 1) && 18 == (18 & n) && void 0 !== tiles[o - 1][a + 1] && void 0 !== tiles[o - 1][a + 1].wtb && (n += 4),
                d(o + 1, a - 1) && 72 == (72 & n) && void 0 !== tiles[o + 1][a - 1] && void 0 !== tiles[o + 1][a - 1].wtb && (n += 32),
                d(o + 1, a + 1) && 80 == (80 & n) && void 0 !== tiles[o + 1][a + 1] && void 0 !== tiles[o + 1][a + 1].wtb && (n += 128),
                tiles[o][a].r = {},
                tiles[o][a].r.river = n,
                tiles[o][a].r.current = s,
                tiles[o][a].r.dist = Fe.dist_from_biome(i, 100 * a + 50, 100 * o + 50) - 400,
                tiles[o][a].r.x = 100 * a + 50,
                tiles[o][a].r.y = 100 * o + 50)
            }
        }
        function ue(e) {
            e = Fe.biomes[e];
            ce(-3 + Math.floor(e.y2 / 100), -1 + Math.floor(e.x2 / 100), "s", 0, 0),
            ce(3 + Math.floor(e.y1 / 100), -1 + Math.floor(e.x2 / 100), "s", 0, 0),
            ce(-3 + Math.floor(e.y2 / 100), 1 + Math.floor(e.x1 / 100), "s", 0, 0),
            ce(3 + Math.floor(e.y1 / 100), 1 + Math.floor(e.x1 / 100), "s", 0, 0)
        }
        function le(e, t, i, n, r) {
            for (var o = Fe.biomes[e], a = Math.floor(o.x1 / 100), s = Math.floor(o.y1 / 100), d = Math.floor(o.w / 100), _ = Math.floor(o.h / 100), u = (void 0 !== r && (r = 1 - r,
            a += Math.floor(d * r / 2),
            s += Math.floor(_ * r / 2),
            d -= Math.floor(d * r),
            _ -= Math.floor(_ * r)),
            he.tiles), l = 0, c = 0; l < n && !(5e4 < c); c++) {
                var h, E = s + Math.floor(Fe.RNG.get() * _), T = a + Math.floor(Fe.RNG.get() * d);
                Fe.dist_from_biome(e, 100 * T + 50, 100 * E + 50) < 400 || void 0 !== (h = u[E][T + 1]) && void 0 !== h[t] && void 0 !== h[t][i] || void 0 !== (h = u[E][T - 1]) && void 0 !== h[t] && void 0 !== h[t][i] || void 0 !== (h = u[E + 1][T]) && void 0 !== h[t] && void 0 !== h[t][i] || void 0 !== (h = u[E - 1][T]) && void 0 !== h[t] && void 0 !== h[t][i] || void 0 !== (h = u[E + 1][T - 1]) && void 0 !== h[t] && void 0 !== h[t][i] || void 0 !== (h = u[E - 1][T + 1]) && void 0 !== h[t] && void 0 !== h[t][i] || void 0 !== (h = u[E + 1][T + 1]) && void 0 !== h[t] && void 0 !== h[t][i] || void 0 !== (h = u[E - 1][T - 1]) && void 0 !== h[t] && void 0 !== h[t][i] || void 0 === u[E][T] && (ce(E, T, t, i, 1),
                l++)
            }
        }
        function d(e, t) {
            return 0 <= e && 0 <= t && e < Fe.nh && t < Fe.nw
        }
        function ce(e, t, i, n, r) {
            if (!(e < 0 || t < 0 || e >= Fe.nh || t >= Fe.nw))
                return void 0 === (tiles = he.tiles)[e][t] && (tiles[e][t] = {}),
                void 0 !== tiles[e][t][i] ? 0 : (tiles[e][t][i] = [],
                tiles[e][t][i][n] = [{
                    x: 100 * t + 50,
                    y: 100 * e + 50
                }],
                1 === r && Ee.push([i, n, e, t]),
                1)
        }
        function s(e, t, i) {
            if (e[t])
                for (o0 = 0; o0 < e[t].length; o0++)
                    if (e[t][o0])
                        for (l = 0; l < e[t][o0].length; l++)
                            e[t][o0][l].hit = i,
                            e[t][o0][l].update = !1,
                            e[t][o0][l].time = 0,
                            e[t][o0][l].angle = 0
        }
        this.mode = Ke.MODE_PVP,
        this.max_units = e,
        this.custom_map = 0,
        this.islands = 6,
        this.players = [],
        this.units = [],
        this.units[xe.PLAYERS] = [],
        this.units[xe.FRUIT] = [],
        this.units[xe.RABBIT] = [],
        this.units[xe.WOLF] = [],
        this.units[xe.CRAB] = [],
        this.units[xe.BOAR] = [],
        this.units[xe.BABY_MAMMOTH] = [],
        this.units[xe.CRAB_BOSS] = [],
        this.units[xe.BABY_DRAGON] = [],
        this.units[xe.BABY_LAVA] = [],
        this.units[xe.HAWK] = [],
        this.units[xe.PIRANHA] = [],
        this.units[xe.KRAKEN] = [],
        this.units[xe.FOX] = [],
        this.units[xe.PENGUIN] = [],
        this.units[xe.SPELL] = [],
        this.units[xe.FIREFLY] = [],
        this.units[xe.BEAR] = [],
        this.units[xe.MAMMOTH] = [],
        this.units[xe.DRAGON] = [],
        this.units[xe.LAVA_DRAGON] = [],
        this.units[xe.FLAME] = [],
        this.units[xe.WHEAT_MOB] = [],
        this.units[xe.ALOE_VERA_MOB] = [],
        this.units[xe.PUMPKIN_MOB] = [],
        this.units[xe.GARLIC_MOB] = [],
        this.units[xe.THORNBUSH_MOB] = [],
        this.units[xe.TREASURE_CHEST] = [],
        this.units[xe.DEAD_BOX] = [],
        this.units[xe.CRATE] = [],
        this.units[xe.BREAD_OVEN] = [],
        this.units[xe.SIGN] = [],
        this.units[xe.SPIDER] = [],
        this.units[xe.WORKBENCH] = [],
        this.units[xe.FIRE] = [],
        this.units[xe.BIG_FIRE] = [],
        this.units[xe.SEED] = [],
        this.units[xe.SPIKE] = [],
        this.units[xe.STONE_SPIKE] = [],
        this.units[xe.GOLD_SPIKE] = [],
        this.units[xe.DIAMOND_SPIKE] = [],
        this.units[xe.AMETHYST_SPIKE] = [],
        this.units[xe.REIDITE_SPIKE] = [],
        this.units[xe.WALL] = [],
        this.units[xe.STONE_WALL] = [],
        this.units[xe.GOLD_WALL] = [],
        this.units[xe.DIAMOND_WALL] = [],
        this.units[xe.AMETHYST_WALL] = [],
        this.units[xe.REIDITE_WALL] = [],
        this.units[xe.BED] = [],
        this.units[xe.WOOD_DOOR] = [],
        this.units[xe.STONE_DOOR] = [],
        this.units[xe.GOLD_DOOR] = [],
        this.units[xe.DIAMOND_DOOR] = [],
        this.units[xe.AMETHYST_DOOR] = [],
        this.units[xe.REIDITE_DOOR] = [],
        this.units[xe.WOOD_DOOR_SPIKE] = [],
        this.units[xe.STONE_DOOR_SPIKE] = [],
        this.units[xe.GOLD_DOOR_SPIKE] = [],
        this.units[xe.DIAMOND_DOOR_SPIKE] = [],
        this.units[xe.AMETHYST_DOOR_SPIKE] = [],
        this.units[xe.REIDITE_DOOR_SPIKE] = [],
        this.units[xe.FURNACE] = [],
        this.units[xe.TOTEM] = [],
        this.units[xe.WOOD_TOWER] = [],
        this.units[xe.CHEST] = [],
        this.units[xe.RESURRECTION] = [],
        this.units[xe.EMERALD_MACHINE] = [],
        this.units[xe.BRIDGE] = [],
        this.units[xe.ROOF] = [],
        this.units[xe.PLOT] = [],
        this.units[xe.WHEAT_SEED] = [],
        this.units[xe.ALOE_VERA_SEED] = [],
        this.units[xe.PUMPKIN_SEED] = [],
        this.units[xe.TOMATO_SEED] = [],
        this.units[xe.CARROT_SEED] = [],
        this.units[xe.WATERMELON_SEED] = [],
        this.units[xe.GARLIC_SEED] = [],
        this.units[xe.THORNBUSH_SEED] = [],
        this.units[xe.WINDMILL] = [],
        this.units[xe.EXTRACTOR_MACHINE_STONE] = [],
        this.units[xe.EXTRACTOR_MACHINE_GOLD] = [],
        this.units[xe.EXTRACTOR_MACHINE_DIAMOND] = [],
        this.units[xe.EXTRACTOR_MACHINE_AMETHYST] = [],
        this.units[xe.EXTRACTOR_MACHINE_REIDITE] = [],
        this.units[xe.WELL] = [],
        this.units[xe.GIFT] = [],
        this.units[xe.GARLAND] = [],
        this.fast_units = [],
        this.nw = 260,
        this.nh = 260,
        godman = 260,
        godman2 = 260,
        this.dw = 100,
        this.dh = 100,
        this.w = this.nw * this.dw,
        this.h = this.nh * this.dh,
        this.RNG = new t0.Random,
        this.biomes = [],
        this.shade = new Utils.LinearAnimation(!1,0,1,0,1,1),
        this.transition = !1,
        this.BIOME = [],
        this.BIOME_FOREST = 0,
        this.BIOME_WINTER = 1,
        this.BIOME_LAVA = 2,
        this.BIOME_DRAGON = 3,
        this.BIOME_SEA = 4,
        this.BIOME_DESERT = 10,
        this.BIOME[this.BIOME_FOREST] = {
            isSand: 1,
            day: [19, 58, 43],
            night: [4, 43, 48],
            _color: ["#133a2b", "#042b30"]
        },
        this.BIOME[this.BIOME_SEA] = {
            isSand: 0,
            day: [11, 106, 132],
            night: [9, 55, 63],
            _color: ["#0B6A84", "#09373F"]
        },
        this.BIOME[this.BIOME_WINTER] = {
            isSand: 0,
            day: [235, 242, 240],
            night: [19, 97, 103],
            _color: ["#EBF2F0", "#136167"]
        },
        this.BIOME[this.BIOME_LAVA] = {
            isSand: 0,
            day: [45, 32, 23],
            night: [3, 28, 30],
            _color: ["#2D2017", "#031C1E"]
        },
        this.BIOME[this.BIOME_DRAGON] = {
            isSand: 0,
            day: [74, 74, 74],
            night: [24, 61, 60],
            _color: ["#4A4A4A", "#183D3C"]
        },
        this.BIOME[this.BIOME_DESERT] = {
            isSand: 0,
            day: [235, 216, 166],
            night: [9, 61, 56],
            _color: ["#EBD8A6", "#093D38"]
        },
        this.Biome = function(e, t, i, n, r, o) {
            this.x1 = 100 * t,
            this.y1 = 100 * i,
            this.w = 100 * n,
            this.h = 100 * r,
            this.x2 = 100 * (t + n),
            this.y2 = 100 * (i + r),
            this.t = e,
            this.v = void 0 === o ? 15 : o
        }
        ,
        this.MAX_DIST = -1e6,
        this.dist_winter = this.MAX_DIST,
        this.dist_desert = this.MAX_DIST,
        this.dist_lava = this.MAX_DIST,
        this.dist_forest = this.MAX_DIST,
        this.dist_water = this.MAX_DIST,
        this.dist_dragon = this.MAX_DIST,
        this.dist_from_biomes = function(e) {
            var t = e.r.x
              , i = e.r.y
              , n = Math.floor(i / 100)
              , r = Math.floor(t / 100);
            e.dist_winter = Fe.MAX_DIST,
            e.dist_desert = Fe.MAX_DIST,
            e.dist_lava = Fe.MAX_DIST,
            e.dist_forest = Fe.MAX_DIST,
            e.dist_dragon = Fe.MAX_DIST,
            e.dist_sand = Fe.MAX_DIST;
            for (var o, a = 0; Fe.biomes[a].t !== Fe.BIOME_SEA; a++)
                Fe.biomes[a].t === Fe.BIOME_FOREST ? (o = Fe.dist_from_biome(a, t, i),
                e.dist_forest = Math.max(e.dist_forest, o),
                0 < o && 1 === Fe.dist_from_sand(a, t, i) && (e.dist_sand = 1)) : Fe.biomes[a].t === Fe.BIOME_WINTER ? e.dist_winter = Math.max(e.dist_winter, Fe.dist_from_biome(a, t, i)) : Fe.biomes[a].t === Fe.BIOME_DESERT ? e.dist_desert = Math.max(e.dist_desert, Fe.dist_from_biome(a, t, i)) : Fe.biomes[a].t === Fe.BIOME_LAVA ? e.dist_lava = Math.max(e.dist_lava, Fe.dist_from_biome(a, t, i)) : Fe.biomes[a].t === Fe.BIOME_DRAGON && (e.dist_dragon = Math.max(e.dist_dragon, Fe.dist_from_biome(a, t, i)));
            he.tiles[n][r].iblk && (e.dist_sand = 1),
            !Fe.find_bridge(r, n) && (he.tiles[n][r].wtb || e.dist_winter < 0 && e.dist_lava < 0 && e.dist_forest < 0 && e.dist_sand < 0 && e.dist_dragon < 0 && e.dist_desert < 0) ? e.dist_water = 1 : e.dist_water = e.MAX_DIST
        }
        ,
        this.update_dist_from_biomes = function(e, t) {
            Fe.dist_winter = Fe.MAX_DIST,
            Fe.dist_desert = Fe.MAX_DIST,
            Fe.dist_lava = Fe.MAX_DIST,
            Fe.dist_dragon = Fe.MAX_DIST,
            Fe.dist_forest = Fe.MAX_DIST;
            for (var i = 0; Fe.biomes[i].t !== Fe.BIOME_SEA; i++)
                Fe.biomes[i].t === Fe.BIOME_FOREST ? Fe.dist_forest = Math.max(Fe.dist_forest, Fe.dist_from_biome(i, e, t)) : Fe.biomes[i].t === Fe.BIOME_WINTER ? Fe.dist_winter = Math.max(Fe.dist_winter, Fe.dist_from_biome(i, e, t)) : Fe.biomes[i].t === Fe.BIOME_DESERT ? Fe.dist_desert = Math.max(Fe.dist_desert, Fe.dist_from_biome(i, e, t)) : Fe.biomes[i].t === Fe.BIOME_LAVA ? Fe.dist_lava = Math.max(Fe.dist_lava, Fe.dist_from_biome(i, e, t)) : Fe.biomes[i].t === Fe.BIOME_DRAGON && (Fe.dist_dragon = Math.max(Fe.dist_dragon, Fe.dist_from_biome(i, e, t)));
            Fe.dist_winter < 0 && Fe.dist_dragon < 0 && Fe.dist_forest < 0 && Fe.dist_dragon < 0 && Fe.dist_desert < 0 ? Fe.dist_water = 1 : Fe.dist_water = Fe.MAX_DIST
        }
        ,
        this.dist_from_sand = function(e, t, i) {
            var e = Fe.biomes[e]
              , n = 0
              , r = t - (x1 = e.x1 + 30 + (0 == (e.v & Ke.LEFT) ? 150 : 0));
            return 0 < (e.v & Ke.LEFT) && 0 < r && r < 320 && (n = 1),
            r = i - (y1 = e.y1 + 250 + (0 == (e.v & Ke.TOP) ? 150 : 0)),
            0 < (e.v & Ke.TOP) && 0 < r && r < 320 && (n = 1),
            r = (x2 = e.x2 + 80 + (0 == (e.v & Ke.RIGHT) ? -200 : 0)) - t,
            0 < (e.v & Ke.RIGHT) && 0 < r && r < 320 && (n = 1),
            r = (y2 = e.y2 - 200 + (0 == (e.v & Ke.BOTTOM) ? -200 : 0)) - i,
            0 < (e.v & Ke.BOTTOM) && 0 < r && r < 320 && (n = 1),
            t >= x1 && t <= x2 && i >= y1 && i <= y2 ? n : 0
        }
        ,
        this.dist_from_biome = function(e, t, i) {
            var e = Fe.biomes[e];
            return x1 = e.x1 + 30,
            y1 = e.y1 + 250,
            x2 = e.x2 + 80,
            y2 = e.y2 - 200,
            t >= x1 && t <= x2 && i >= y1 && i <= y2 ? Math.min(t - x1, x2 - t, i - y1, y2 - i) : (e = -1e6,
            t - x1 < 0 ? e = Math.max(e, t - x1) : x2 - t < 0 && (e = Math.max(e, x2 - t)),
            distY = -1e6,
            (i < y1 || i > y2) && (distY = i - y1 < 0 ? Math.max(distY, i - y1) : Math.max(distY, y2 - i),
            e = -1e6 !== e && -1e6 !== distY ? Math.min(e, distY) : distY),
            e)
        }
        ,
        this.add_island = function(e, t, i) {
            var n = i
              , r = t;
            ce(n, r, "isl", e, 1);
            for (var o = 0; o < 4; o++)
                for (var a = 0; a < 3; a++)
                    ce(n - a, r - o, "iblk", 0),
                    ce(n + a, r - o, "iblk", 0),
                    ce(n + a, r + o, "iblk", 0),
                    ce(n - a, r + o, "iblk", 0);
            if (0 === e) {
                for (o = 0; o < 2; o++)
                    ce(n - o, r - 4, "iblk", 0),
                    ce(n + o, r - 4, "iblk", 0),
                    ce(n - o, r + 4, "iblk", 0),
                    ce(n + o, r + 4, "iblk", 0);
                for (o = 0; o < 3; o++)
                    ce(n - 3, r + o, "iblk", 0),
                    ce(n + 3, r + o, "iblk", 0),
                    ce(n - 3, r - o, "iblk", 0),
                    ce(n + 3, r - o, "iblk", 0);
                ce(n - 2, r - 4, "iblk", 0),
                ce(n - 3, r - 3, "iblk", 0),
                ce(n + 2, r + 4, "iblk", 0),
                ce(n + 3, r + 3, "iblk", 0)
            } else if (1 === e) {
                for (o = 0; o < 3; o++)
                    ce(n - o, r - 4, "iblk", 0),
                    ce(n + o, r - 4, "iblk", 0),
                    ce(n - o, r + 4, "iblk", 0),
                    ce(n + o, r + 4, "iblk", 0);
                for (o = 0; o < 4; o++)
                    ce(n - 3, r + o, "iblk", 0),
                    ce(n + 3, r + o, "iblk", 0),
                    ce(n - 3, r - o, "iblk", 0),
                    ce(n + 3, r - o, "iblk", 0)
            } else if (2 === e) {
                for (o = 0; o < 2; o++)
                    ce(n - o, r - 4, "iblk", 0),
                    ce(n + o, r - 4, "iblk", 0),
                    ce(n - o, r + 4, "iblk", 0),
                    ce(n + o, r + 4, "iblk", 0);
                for (o = 0; o < 3; o++)
                    ce(n - 3, r + o, "iblk", 0),
                    ce(n + 3, r + o, "iblk", 0),
                    ce(n - 3, r - o, "iblk", 0),
                    ce(n + 3, r - o, "iblk", 0)
            }
        }
        ,
        this.add_islands = function(e) {
            for (var t = 0; t < Fe.biomes.length && 0 < e; t++) {
                var i = Fe.biomes[t];
                if (i.t === Fe.BIOME_SEA && (1800 < i.w && 1e3 < i.h)) {
                    var n = Math.floor((i.x1 + i.w / 2) / 100)
                      , r = Math.floor((i.y1 + i.h / 2) / 100);
                    Fe.add_island(e % 3, n, r);
                    for (var o = 0; o < 3; o++) {
                        var a = r - 2 + Math.floor(4 * Fe.RNG.get())
                          , s = n - 3 + Math.floor(6 * Fe.RNG.get())
                          , a = (void 0 === he.tiles[a][s].s && ce(a, s, "plm", o),
                        r - 2 + Math.floor(4 * Fe.RNG.get()))
                          , s = n - 3 + Math.floor(6 * Fe.RNG.get());
                        void 0 === he.tiles[a][s].plm && ce(a, s, "s", o)
                    }
                    a = r - 2 + Math.floor(4 * Fe.RNG.get()),
                    s = n - 3 + Math.floor(6 * Fe.RNG.get());
                    void 0 === he.tiles[a][s].plm && void 0 === he.tiles[a][s].s && ce(a, s, "p", 0, 1),
                    e--
                }
            }
        }
        ,
        this.generate_world = function(B) {
            Fe.RNG.init(B);
            for (var w = 0; ; ) {
                if (1e4 < ++w)
                    return;
                if (Fe.biomes = [],
                0 !== Fe.custom_map || Fe.mode !== Ke.MODE_VAMPIRES && Fe.mode !== Ke.MODE_EXPERIMENTAL && Fe.mode !== Ke.MODE_PVP || (Fe.custom_map = [[0, "DRAGON", 18, 6, 66, 35, 0], [0, "WINTER", 91, 18, 5, 40, 8], [0, "DESERT", 135, 180, 89, 124, 5], [0, "LAVA", 142, 6, 82, 99, 6], [0, "FOREST", 6, 150, 90, 154, 8], [0, "WINTER", 6, 6, 90, 150, 0], [1, "b", 0, 5, 175, 0], [1, "t", 2, 5, 174, 0], [1, "t", 5, 5, 173, 0], [1, "b", 3, 5, 176, 0], [1, "t", 0, 5, 177, 0], [1, "t", 3, 5, 178, 0], [1, "t", 4, 5, 179, 0], [1, "b", 0, 5, 180, 0], [1, "t", 5, 5, 181, 0], [1, "b", 2, 5, 182, 0], [1, "b", 1, 5, 183, 0], [1, "b", 2, 5, 184, 0], [1, "t", 5, 5, 185, 0], [1, "t", 2, 5, 186, 0], [1, "t", 0, 5, 187, 0], [1, "t", 5, 5, 188, 0], [1, "t", 1, 5, 189, 0], [1, "b", 2, 5, 190, 0], [1, "t", 4, 5, 191, 0], [1, "b", 3, 5, 192, 0], [1, "t", 5, 5, 193, 0], [1, "t", 0, 5, 194, 0], [1, "t", 3, 5, 195, 0], [1, "b", 0, 5, 196, 0], [1, "t", 5, 5, 197, 0], [1, "t", 2, 5, 198, 0], [1, "b", 2, 5, 199, 0], [1, "t", 4, 5, 200, 0], [1, "t", 1, 5, 201, 0], [1, "b", 1, 5, 202, 0], [1, "t", 5, 5, 203, 0], [1, "t", 2, 5, 204, 0], [1, "t", 4, 5, 205, 0], [1, "b", 2, 5, 206, 0], [1, "t", 1, 5, 207, 0], [1, "t", 4, 5, 208, 0], [1, "t", 2, 5, 209, 0], [1, "b", 0, 5, 210, 0], [1, "t", 5, 5, 211, 0], [1, "t", 1, 5, 212, 0], [1, "t", 2, 5, 213, 0], [1, "b", 3, 5, 214, 0], [1, "t", 5, 5, 215, 0], [1, "b", 0, 5, 216, 0], [1, "t", 4, 5, 217, 0], [1, "t", 2, 5, 218, 0], [1, "t", 1, 5, 219, 0], [1, "t", 3, 5, 220, 0], [1, "t", 5, 5, 221, 0], [1, "t", 2, 5, 222, 0], [1, "t", 4, 5, 223, 0], [1, "b", 3, 5, 224, 0], [1, "t", 1, 5, 225, 0], [1, "t", 3, 5, 226, 0], [1, "b", 0, 5, 227, 0], [1, "t", 3, 5, 228, 0], [1, "t", 5, 5, 229, 0], [1, "t", 2, 5, 230, 0], [1, "t", 0, 5, 231, 0], [1, "b", 2, 5, 232, 0], [1, "t", 1, 5, 233, 0], [1, "t", 4, 5, 234, 0], [1, "b", 1, 5, 235, 0], [1, "t", 4, 5, 236, 0], [1, "t", 2, 5, 237, 0], [1, "t", 0, 5, 238, 0], [1, "t", 4, 5, 239, 0], [1, "b", 2, 5, 240, 0], [1, "t", 5, 5, 241, 0], [1, "b", 1, 5, 242, 0], [1, "t", 4, 5, 243, 0], [1, "t", 2, 5, 244, 0], [1, "t", 1, 5, 245, 0], [1, "b", 1, 5, 246, 0], [1, "t", 3, 5, 247, 0], [1, "b", 2, 5, 248, 0], [1, "t", 5, 5, 249, 0], [1, "t", 2, 5, 250, 0], [1, "t", 4, 5, 251, 0], [1, "b", 1, 5, 252, 0], [1, "t", 4, 5, 253, 0], [1, "t", 1, 5, 254, 0], [1, "t", 3, 5, 255, 0], [1, "t", 5, 5, 256, 0], [1, "b", 2, 5, 257, 0], [1, "t", 4, 5, 258, 0], [1, "b", 3, 5, 259, 0], [1, "t", 5, 5, 260, 0], [1, "b", 0, 5, 261, 0], [1, "t", 3, 5, 262, 0], [1, "t", 4, 5, 263, 0], [1, "t", 2, 5, 264, 0], [1, "b", 1, 5, 265, 0], [1, "b", 2, 5, 266, 0], [1, "t", 3, 5, 267, 0], [1, "t", 4, 5, 268, 0], [1, "t", 0, 5, 269, 0], [1, "t", 5, 5, 270, 0], [1, "t", 3, 5, 271, 0], [1, "t", 4, 5, 272, 0], [1, "t", 1, 5, 273, 0], [1, "b", 2, 5, 274, 0], [1, "t", 1, 5, 275, 0], [1, "t", 4, 5, 276, 0], [1, "b", 1, 5, 277, 0], [1, "b", 2, 5, 278, 0], [1, "t", 1, 5, 279, 0], [1, "t", 4, 5, 280, 0], [1, "t", 2, 5, 281, 0], [1, "t", 5, 5, 282, 0], [1, "b", 2, 5, 283, 0], [1, "t", 1, 5, 284, 0], [1, "b", 3, 5, 285, 0], [1, "t", 4, 5, 286, 0], [1, "t", 0, 5, 287, 0], [1, "t", 5, 5, 288, 0], [1, "t", 2, 5, 289, 0], [1, "b", 1, 5, 290, 0], [1, "t", 4, 5, 292, 0], [1, "t", 2, 5, 291, 0], [1, "b", 2, 5, 293, 0], [1, "t", 1, 5, 294, 0], [1, "t", 3, 5, 295, 0], [1, "t", 5, 5, 296, 0], [1, "b", 0, 5, 297, 0], [1, "b", 3, 5, 298, 0], [1, "t", 4, 5, 299, 0], [1, "t", 2, 5, 300, 0], [1, "t", 4, 5, 301, 0], [1, "b", 0, 5, 302, 0], [1, "b", 2, 5, 303, 0], [1, "t", 1, 6, 303, 0], [1, "t", 2, 7, 303, 0], [1, "t", 1, 5, 304, 0], [1, "t", 3, 6, 304, 0], [1, "t", 4, 7, 304, 0], [1, "t", 5, 8, 303, 0], [1, "b", 1, 8, 304, 0], [1, "b", 2, 9, 304, 0], [1, "b", 3, 12, 303, 0], [1, "b", 3, 17, 304, 0], [1, "t", 1, 9, 303, 0], [1, "t", 1, 15, 304, 0], [1, "t", 1, 13, 303, 0], [1, "t", 3, 10, 303, 0], [1, "t", 3, 14, 304, 0], [1, "t", 4, 10, 304, 0], [1, "t", 5, 11, 304, 0], [1, "t", 5, 14, 303, 0], [1, "t", 5, 16, 304, 0], [1, "t", 5, 13, 304, 0], [1, "t", 2, 12, 304, 0], [1, "t", 1, 11, 303, 0], [1, "b", 3, 15, 303, 0], [1, "b", 0, 16, 303, 0], [1, "t", 3, 17, 303, 0], [1, "t", 4, 18, 303, 0], [1, "t", 2, 19, 303, 0], [1, "t", 1, 20, 303, 0], [1, "b", 1, 21, 303, 0], [1, "t", 2, 22, 303, 0], [1, "t", 4, 23, 303, 0], [1, "b", 3, 24, 303, 0], [1, "t", 5, 25, 303, 0], [1, "t", 1, 26, 303, 0], [1, "t", 2, 27, 303, 0], [1, "t", 4, 28, 303, 0], [1, "b", 0, 18, 304, 0], [1, "t", 2, 19, 304, 0], [1, "t", 5, 20, 304, 0], [1, "b", 2, 21, 304, 0], [1, "t", 4, 22, 304, 0], [1, "t", 2, 23, 304, 0], [1, "t", 1, 24, 304, 0], [1, "t", 3, 25, 304, 0], [1, "t", 0, 27, 304, 0], [1, "t", 5, 26, 304, 0], [1, "b", 2, 28, 304, 0], [1, "t", 1, 29, 304, 0], [1, "b", 1, 29, 303, 0], [1, "b", 2, 30, 303, 0], [1, "t", 4, 31, 303, 0], [1, "t", 0, 32, 303, 0], [1, "t", 5, 33, 303, 0], [1, "t", 2, 34, 303, 0], [1, "t", 4, 35, 303, 0], [1, "t", 1, 36, 303, 0], [1, "b", 3, 37, 303, 0], [1, "t", 2, 32, 304, 0], [1, "t", 4, 30, 304, 0], [1, "t", 1, 31, 304, 0], [1, "b", 1, 33, 304, 0], [1, "t", 2, 35, 304, 0], [1, "t", 5, 34, 304, 0], [1, "b", 2, 36, 304, 0], [1, "t", 5, 37, 304, 0], [1, "t", 1, 38, 304, 0], [1, "b", 1, 40, 303, 0], [1, "t", 3, 39, 303, 0], [1, "t", 3, 42, 304, 0], [1, "t", 5, 38, 303, 0], [1, "t", 5, 39, 304, 0], [1, "t", 5, 41, 303, 0], [1, "t", 4, 41, 304, 0], [1, "t", 4, 44, 303, 0], [1, "b", 2, 40, 304, 0], [1, "b", 2, 43, 303, 0], [1, "t", 1, 42, 303, 0], [1, "t", 1, 43, 304, 0], [1, "t", 5, 44, 304, 0], [1, "b", 1, 45, 303, 0], [1, "t", 2, 45, 304, 0], [1, "t", 2, 46, 303, 0], [1, "t", 4, 47, 303, 0], [1, "b", 0, 48, 303, 0], [1, "t", 5, 49, 303, 0], [1, "t", 2, 50, 303, 0], [1, "t", 1, 51, 303, 0], [1, "t", 4, 52, 303, 0], [1, "t", 5, 46, 304, 0], [1, "t", 2, 47, 304, 0], [1, "t", 5, 48, 304, 0], [1, "t", 1, 49, 304, 0], [1, "t", 2, 50, 304, 0], [1, "b", 1, 53, 303, 0], [1, "b", 2, 51, 304, 0], [1, "t", 5, 52, 304, 0], [1, "t", 3, 53, 304, 0], [1, "b", 2, 54, 303, 0], [1, "t", 5, 54, 304, 0], [1, "t", 5, 55, 303, 0], [1, "t", 3, 56, 303, 0], [1, "t", 4, 57, 303, 0], [1, "t", 5, 58, 303, 0], [1, "b", 1, 55, 304, 0], [1, "t", 2, 56, 304, 0], [1, "t", 0, 57, 304, 0], [1, "t", 3, 58, 304, 0], [1, "t", 3, 63, 304, 0], [1, "t", 3, 59, 303, 0], [1, "t", 4, 59, 304, 0], [1, "t", 5, 60, 303, 0], [1, "t", 0, 60, 304, 0], [1, "t", 0, 66, 303, 0], [1, "t", 0, 70, 304, 0], [1, "t", 3, 61, 304, 0], [1, "t", 3, 67, 303, 0], [1, "t", 3, 73, 304, 0], [1, "t", 3, 76, 303, 0], [1, "t", 3, 78, 304, 0], [1, "t", 1, 61, 303, 0], [1, "t", 1, 73, 303, 0], [1, "t", 1, 79, 303, 0], [1, "b", 2, 62, 304, 0], [1, "b", 2, 70, 303, 0], [1, "t", 5, 62, 303, 0], [1, "t", 5, 68, 303, 0], [1, "t", 5, 71, 304, 0], [1, "t", 5, 77, 304, 0], [1, "t", 5, 75, 303, 0], [1, "t", 5, 64, 304, 0], [1, "t", 5, 65, 303, 0], [1, "t", 5, 80, 303, 0], [1, "t", 1, 76, 304, 0], [1, "t", 3, 63, 303, 0], [1, "t", 5, 82, 304, 0], [1, "b", 2, 65, 304, 0], [1, "t", 1, 64, 303, 0], [1, "t", 1, 68, 304, 0], [1, "t", 2, 69, 304, 0], [1, "t", 4, 69, 303, 0], [1, "t", 5, 66, 304, 0], [1, "t", 0, 67, 304, 0], [1, "b", 2, 72, 304, 0], [1, "t", 0, 71, 303, 0], [1, "t", 4, 72, 303, 0], [1, "t", 4, 74, 304, 0], [1, "t", 2, 74, 303, 0], [1, "t", 3, 75, 304, 0], [1, "t", 1, 77, 303, 0], [1, "t", 4, 78, 303, 0], [1, "t", 4, 79, 304, 0], [1, "t", 2, 80, 304, 0], [1, "b", 1, 81, 304, 0], [1, "t", 2, 81, 303, 0], [1, "t", 5, 82, 303, 0], [1, "t", 1, 83, 303, 0], [1, "b", 2, 83, 304, 0], [1, "t", 1, 84, 304, 0], [1, "t", 4, 84, 303, 0], [1, "t", 5, 85, 304, 0], [1, "t", 3, 85, 303, 0], [1, "b", 2, 86, 304, 0], [1, "t", 1, 86, 303, 0], [1, "b", 3, 87, 303, 0], [1, "t", 4, 87, 304, 0], [1, "t", 4, 88, 303, 0], [1, "t", 0, 88, 304, 0], [1, "b", 1, 89, 303, 0], [1, "t", 3, 89, 304, 0], [1, "t", 3, 90, 303, 0], [1, "t", 4, 90, 304, 0], [1, "t", 4, 91, 303, 0], [1, "t", 0, 91, 304, 0], [1, "b", 2, 92, 303, 0], [1, "t", 4, 92, 304, 0], [1, "t", 5, 93, 303, 0], [1, "t", 0, 93, 304, 0], [1, "b", 3, 94, 303, 0], [1, "b", 0, 94, 304, 0], [1, "b", 0, 95, 303, 0], [1, "t", 2, 95, 304, 0], [1, "f", 1, 5, 151, 1], [1, "f", 2, 5, 153, 1], [1, "f", 0, 5, 152, 1], [1, "f", 0, 5, 147, 1], [1, "f", 0, 5, 144, 1], [1, "f", 0, 5, 140, 1], [1, "f", 1, 5, 149, 1], [1, "f", 1, 5, 146, 1], [1, "f", 1, 5, 143, 1], [1, "f", 1, 5, 141, 1], [1, "f", 2, 5, 150, 1], [1, "f", 2, 5, 148, 1], [1, "f", 2, 5, 145, 1], [1, "f", 2, 5, 142, 1], [1, "f", 2, 5, 139, 1], [1, "f", 2, 5, 136, 1], [1, "f", 2, 5, 133, 1], [1, "f", 2, 5, 131, 1], [1, "f", 2, 5, 127, 1], [1, "f", 2, 5, 125, 1], [1, "f", 1, 5, 138, 1], [1, "f", 1, 5, 135, 1], [1, "f", 1, 5, 132, 1], [1, "f", 1, 5, 130, 1], [1, "f", 1, 5, 128, 1], [1, "f", 1, 5, 126, 1], [1, "f", 1, 5, 124, 1], [1, "f", 0, 5, 129, 1], [1, "f", 0, 5, 134, 1], [1, "f", 0, 5, 137, 1], [1, "f", 0, 5, 123, 1], [1, "f", 1, 5, 122, 1], [1, "f", 1, 5, 120, 1], [1, "f", 1, 5, 117, 1], [1, "f", 1, 5, 115, 1], [1, "f", 1, 5, 111, 1], [1, "f", 1, 5, 108, 1], [1, "f", 2, 5, 121, 1], [1, "f", 2, 5, 118, 1], [1, "f", 2, 5, 116, 1], [1, "f", 2, 5, 113, 1], [1, "f", 2, 5, 110, 1], [1, "f", 0, 5, 119, 1], [1, "f", 0, 5, 114, 1], [1, "f", 0, 5, 112, 1], [1, "f", 0, 5, 109, 1], [1, "f", 1, 5, 106, 1], [1, "f", 1, 5, 103, 1], [1, "f", 1, 5, 100, 1], [1, "f", 1, 5, 97, 1], [1, "f", 1, 5, 95, 1], [1, "f", 2, 5, 107, 1], [1, "f", 2, 5, 105, 1], [1, "f", 2, 5, 102, 1], [1, "f", 2, 5, 99, 1], [1, "f", 2, 5, 96, 1], [1, "f", 2, 5, 94, 1], [1, "f", 0, 5, 104, 1], [1, "f", 0, 5, 101, 1], [1, "f", 0, 5, 98, 1], [1, "f", 0, 5, 93, 1], [1, "f", 1, 5, 92, 1], [1, "f", 1, 5, 89, 1], [1, "f", 1, 5, 86, 1], [1, "f", 1, 5, 83, 1], [1, "f", 1, 5, 80, 1], [1, "f", 1, 5, 78, 1], [1, "f", 2, 5, 90, 1], [1, "f", 2, 5, 88, 1], [1, "f", 2, 5, 85, 1], [1, "f", 2, 5, 82, 1], [1, "f", 2, 5, 79, 1], [1, "f", 2, 5, 77, 1], [1, "f", 2, 5, 75, 1], [1, "f", 2, 5, 72, 1], [1, "f", 0, 5, 91, 1], [1, "f", 0, 5, 87, 1], [1, "f", 0, 5, 84, 1], [1, "f", 0, 5, 81, 1], [1, "f", 0, 5, 76, 1], [1, "f", 0, 5, 74, 1], [1, "f", 1, 5, 73, 1], [1, "f", 1, 5, 71, 1], [1, "f", 1, 5, 68, 1], [1, "f", 1, 5, 66, 1], [1, "f", 1, 5, 62, 1], [1, "f", 1, 5, 59, 1], [1, "f", 1, 5, 56, 1], [1, "f", 1, 5, 53, 1], [1, "f", 1, 5, 50, 1], [1, "f", 2, 5, 70, 1], [1, "f", 2, 5, 67, 1], [1, "f", 2, 5, 65, 1], [1, "f", 2, 5, 63, 1], [1, "f", 2, 5, 60, 1], [1, "f", 2, 5, 57, 1], [1, "f", 2, 5, 54, 1], [1, "f", 2, 5, 51, 1], [1, "f", 0, 5, 69, 1], [1, "f", 0, 5, 64, 1], [1, "f", 0, 5, 61, 1], [1, "f", 0, 5, 58, 1], [1, "f", 0, 5, 55, 1], [1, "f", 0, 5, 52, 1], [1, "f", 0, 5, 49, 1], [1, "f", 0, 5, 45, 1], [1, "f", 0, 5, 42, 1], [1, "f", 0, 5, 38, 1], [1, "f", 0, 5, 34, 1], [1, "f", 0, 5, 31, 1], [1, "f", 1, 5, 48, 1], [1, "f", 1, 5, 44, 1], [1, "f", 1, 5, 41, 1], [1, "f", 1, 5, 37, 1], [1, "f", 1, 5, 33, 1], [1, "f", 1, 5, 29, 1], [1, "f", 2, 5, 30, 1], [1, "f", 2, 5, 32, 1], [1, "f", 2, 5, 35, 1], [1, "f", 2, 5, 39, 1], [1, "f", 2, 5, 46, 1], [1, "f", 2, 5, 43, 1], [1, "f", 1, 5, 47, 1], [1, "f", 0, 5, 40, 1], [1, "f", 0, 5, 36, 1], [1, "f", 0, 5, 28, 1], [1, "f", 1, 5, 25, 1], [1, "f", 1, 5, 22, 1], [1, "f", 1, 5, 20, 1], [1, "f", 1, 5, 16, 1], [1, "f", 1, 5, 13, 1], [1, "f", 1, 5, 10, 1], [1, "f", 2, 5, 27, 1], [1, "f", 2, 5, 24, 1], [1, "f", 2, 5, 21, 1], [1, "f", 2, 5, 19, 1], [1, "f", 2, 5, 15, 1], [1, "f", 2, 5, 12, 1], [1, "f", 2, 5, 9, 1], [1, "f", 0, 5, 26, 1], [1, "f", 0, 5, 23, 1], [1, "f", 0, 5, 14, 1], [1, "f", 0, 5, 11, 1], [1, "f", 0, 5, 17, 1], [1, "f", 1, 5, 18, 1], [1, "f", 1, 5, 8, 1], [1, "f", 0, 5, 7, 1], [1, "f", 1, 5, 6, 1], [1, "f", 0, 5, 5, 1], [1, "f", 1, 6, 5, 1], [1, "f", 2, 7, 5, 1], [1, "f", 0, 8, 5, 1], [1, "f", 1, 9, 5, 1], [1, "f", 1, 12, 5, 1], [1, "f", 1, 15, 5, 1], [1, "f", 1, 17, 5, 1], [1, "f", 1, 22, 5, 1], [1, "f", 1, 26, 5, 1], [1, "f", 2, 10, 5, 1], [1, "f", 2, 13, 5, 1], [1, "f", 2, 16, 5, 1], [1, "f", 2, 18, 5, 1], [1, "f", 2, 21, 5, 1], [1, "f", 2, 23, 5, 1], [1, "f", 2, 25, 5, 1], [1, "f", 2, 27, 5, 1], [1, "f", 0, 11, 5, 1], [1, "f", 0, 14, 5, 1], [1, "f", 0, 19, 5, 1], [1, "f", 0, 24, 5, 1], [1, "f", 0, 28, 5, 1], [1, "f", 1, 20, 5, 1], [1, "f", 1, 29, 5, 1], [1, "f", 1, 32, 5, 1], [1, "f", 1, 35, 5, 1], [1, "f", 1, 38, 5, 1], [1, "f", 1, 41, 5, 1], [1, "f", 1, 45, 5, 1], [1, "f", 2, 30, 5, 1], [1, "f", 2, 33, 5, 1], [1, "f", 2, 36, 5, 1], [1, "f", 2, 39, 5, 1], [1, "f", 2, 42, 5, 1], [1, "f", 2, 44, 5, 1], [1, "f", 2, 46, 5, 1], [1, "f", 0, 43, 5, 1], [1, "f", 0, 40, 5, 1], [1, "f", 0, 37, 5, 1], [1, "f", 0, 34, 5, 1], [1, "f", 0, 31, 5, 1], [1, "f", 0, 47, 5, 1], [1, "f", 1, 48, 5, 1], [1, "f", 1, 51, 5, 1], [1, "f", 1, 53, 5, 1], [1, "f", 1, 57, 5, 1], [1, "f", 1, 60, 5, 1], [1, "f", 1, 63, 5, 1], [1, "f", 1, 65, 5, 1], [1, "f", 2, 64, 5, 1], [1, "f", 2, 62, 5, 1], [1, "f", 2, 59, 5, 1], [1, "f", 2, 56, 5, 1], [1, "f", 2, 52, 5, 1], [1, "f", 2, 49, 5, 1], [1, "f", 2, 54, 5, 1], [1, "f", 0, 50, 5, 1], [1, "f", 0, 55, 5, 1], [1, "f", 0, 58, 5, 1], [1, "f", 0, 61, 5, 1], [1, "f", 0, 66, 5, 1], [1, "f", 1, 67, 5, 1], [1, "f", 1, 70, 5, 1], [1, "f", 1, 72, 5, 1], [1, "f", 1, 75, 5, 1], [1, "f", 1, 79, 5, 1], [1, "f", 2, 68, 5, 1], [1, "f", 2, 71, 5, 1], [1, "f", 2, 74, 5, 1], [1, "f", 2, 76, 5, 1], [1, "f", 2, 78, 5, 1], [1, "f", 0, 69, 5, 1], [1, "f", 0, 73, 5, 1], [1, "f", 0, 77, 5, 1], [1, "f", 0, 80, 5, 1], [1, "f", 1, 81, 5, 1], [1, "f", 1, 84, 5, 1], [1, "f", 1, 87, 5, 1], [1, "f", 1, 89, 5, 1], [1, "f", 1, 92, 5, 1], [1, "f", 1, 94, 5, 1], [1, "f", 0, 82, 5, 1], [1, "f", 2, 83, 5, 1], [1, "f", 2, 85, 5, 1], [1, "f", 2, 88, 5, 1], [1, "f", 2, 90, 5, 1], [1, "f", 2, 93, 5, 1], [1, "f", 2, 95, 5, 1], [1, "f", 0, 86, 5, 1], [1, "f", 0, 91, 5, 1], [1, "f", 2, 6, 153, 1], [1, "f", 1, 6, 152, 1], [1, "t", 1, 93, 301, 0], [1, "t", 3, 94, 302, 0], [1, "t", 5, 95, 302, 0], [1, "t", 5, 93, 302, 0], [1, "b", 3, 92, 302, 0], [1, "t", 1, 91, 302, 0], [1, "t", 5, 90, 302, 0], [1, "b", 2, 92, 301, 0], [1, "t", 1, 91, 301, 0], [1, "t", 2, 90, 301, 0], [1, "b", 2, 89, 302, 0], [1, "t", 4, 89, 301, 0], [1, "t", 1, 88, 302, 0], [1, "t", 2, 88, 301, 0], [1, "t", 3, 87, 302, 0], [1, "t", 4, 87, 299, 0], [1, "t", 4, 86, 302, 0], [1, "t", 1, 85, 302, 0], [1, "t", 5, 85, 301, 0], [1, "b", 2, 84, 302, 0], [1, "t", 5, 83, 302, 0], [1, "t", 1, 82, 302, 0], [1, "t", 5, 81, 302, 0], [1, "t", 2, 80, 302, 0], [1, "t", 4, 79, 302, 0], [1, "t", 2, 78, 302, 0], [1, "b", 1, 77, 302, 0], [1, "b", 2, 76, 302, 0], [1, "t", 2, 75, 302, 0], [1, "t", 4, 74, 302, 0], [1, "b", 1, 73, 302, 0], [1, "t", 2, 72, 302, 0], [1, "t", 4, 71, 302, 0], [1, "b", 3, 70, 302, 0], [1, "t", 1, 69, 302, 0], [1, "t", 2, 68, 302, 0], [1, "t", 5, 67, 302, 0], [1, "b", 1, 66, 302, 0], [1, "t", 2, 65, 302, 0], [1, "t", 4, 64, 302, 0], [1, "b", 3, 63, 302, 0], [1, "t", 5, 62, 302, 0], [1, "b", 1, 61, 302, 0], [1, "t", 3, 60, 302, 0], [1, "t", 4, 59, 302, 0], [1, "b", 2, 58, 302, 0], [1, "t", 5, 57, 302, 0], [1, "t", 1, 56, 302, 0], [1, "t", 3, 55, 302, 0], [1, "t", 4, 54, 302, 0], [1, "t", 1, 53, 302, 0], [1, "t", 5, 52, 302, 0], [1, "t", 2, 51, 302, 0], [1, "t", 4, 50, 302, 0], [1, "t", 2, 49, 302, 0], [1, "b", 1, 48, 302, 0], [1, "t", 3, 47, 302, 0], [1, "t", 4, 46, 302, 0], [1, "t", 1, 45, 302, 0], [1, "t", 2, 44, 302, 0], [1, "t", 5, 43, 302, 0], [1, "t", 2, 42, 302, 0], [1, "t", 1, 41, 302, 0], [1, "t", 4, 40, 302, 0], [1, "b", 2, 39, 302, 0], [1, "t", 5, 38, 302, 0], [1, "t", 1, 37, 302, 0], [1, "t", 2, 36, 302, 0], [1, "t", 5, 35, 302, 0], [1, "t", 0, 34, 302, 0], [1, "t", 3, 33, 302, 0], [1, "t", 4, 32, 302, 0], [1, "b", 1, 31, 302, 0], [1, "t", 2, 30, 302, 0], [1, "t", 4, 29, 302, 0], [1, "t", 2, 28, 302, 0], [1, "t", 5, 27, 302, 0], [1, "b", 3, 26, 302, 0], [1, "t", 1, 25, 302, 0], [1, "t", 4, 24, 302, 0], [1, "t", 2, 23, 302, 0], [1, "t", 1, 22, 302, 0], [1, "t", 5, 21, 302, 0], [1, "t", 2, 20, 302, 0], [1, "t", 4, 19, 302, 0], [1, "b", 1, 18, 302, 0], [1, "t", 5, 17, 302, 0], [1, "t", 3, 16, 302, 0], [1, "t", 1, 15, 302, 0], [1, "t", 5, 14, 302, 0], [1, "t", 3, 13, 302, 0], [1, "t", 4, 12, 302, 0], [1, "t", 1, 11, 302, 0], [1, "t", 2, 10, 302, 0], [1, "t", 4, 9, 302, 0], [1, "b", 3, 8, 302, 0], [1, "t", 5, 8, 302, 0], [1, "t", 5, 7, 302, 0], [1, "b", 2, 6, 302, 0], [1, "t", 1, 6, 301, 0], [1, "t", 4, 6, 300, 0], [1, "t", 2, 6, 299, 0], [1, "b", 0, 6, 298, 0], [1, "t", 5, 6, 297, 0], [1, "t", 2, 6, 296, 0], [1, "t", 0, 6, 295, 0], [1, "b", 2, 6, 294, 0], [1, "t", 5, 6, 293, 0], [1, "t", 1, 6, 292, 0], [1, "b", 0, 6, 291, 0], [1, "t", 2, 6, 290, 0], [1, "t", 5, 6, 289, 0], [1, "t", 1, 6, 288, 0], [1, "t", 4, 6, 287, 0], [1, "t", 2, 6, 286, 0], [1, "t", 5, 6, 285, 0], [1, "t", 2, 6, 284, 0], [1, "b", 0, 6, 283, 0], [1, "t", 2, 6, 282, 0], [1, "t", 5, 6, 281, 0], [1, "b", 2, 6, 280, 0], [1, "t", 5, 6, 279, 0], [1, "t", 1, 6, 278, 0], [1, "t", 4, 6, 277, 0], [1, "t", 3, 6, 276, 0], [1, "t", 5, 6, 275, 0], [1, "b", 0, 6, 274, 0], [1, "t", 5, 6, 273, 0], [1, "t", 1, 6, 272, 0], [1, "t", 4, 6, 271, 0], [1, "b", 3, 6, 270, 0], [1, "t", 5, 6, 269, 0], [1, "t", 1, 6, 268, 0], [1, "t", 4, 6, 267, 0], [1, "t", 1, 6, 266, 0], [1, "t", 3, 6, 265, 0], [1, "t", 4, 6, 264, 0], [1, "b", 2, 6, 263, 0], [1, "t", 5, 6, 262, 0], [1, "t", 3, 6, 261, 0], [1, "t", 0, 6, 260, 0], [1, "t", 5, 6, 259, 0], [1, "t", 1, 6, 258, 0], [1, "t", 3, 6, 257, 0], [1, "t", 4, 6, 255, 0], [1, "t", 3, 6, 254, 0], [1, "t", 5, 6, 253, 0], [1, "b", 2, 6, 252, 0], [1, "t", 5, 6, 251, 0], [1, "t", 1, 6, 250, 0], [1, "t", 3, 6, 249, 0], [1, "t", 4, 6, 248, 0], [1, "b", 3, 6, 247, 0], [1, "t", 5, 6, 246, 0], [1, "t", 3, 6, 245, 0], [1, "t", 5, 6, 244, 0], [1, "t", 0, 6, 243, 0], [1, "t", 4, 6, 242, 0], [1, "t", 3, 6, 241, 0], [1, "t", 5, 6, 240, 0], [1, "b", 0, 6, 239, 0], [1, "t", 3, 6, 238, 0], [1, "t", 4, 6, 237, 0], [1, "t", 1, 6, 236, 0], [1, "t", 5, 6, 235, 0], [1, "b", 2, 6, 234, 0], [1, "t", 2, 6, 233, 0], [1, "t", 4, 6, 232, 0], [1, "b", 3, 6, 231, 0], [1, "t", 5, 6, 230, 0], [1, "t", 1, 6, 229, 0], [1, "t", 2, 6, 228, 0], [1, "t", 5, 6, 227, 0], [1, "b", 2, 6, 226, 0], [1, "t", 4, 6, 225, 0], [1, "t", 0, 6, 224, 0], [1, "t", 2, 6, 223, 0], [1, "t", 0, 6, 222, 0], [1, "b", 2, 6, 221, 0], [1, "t", 4, 6, 220, 0], [1, "b", 3, 6, 219, 0], [1, "t", 5, 6, 218, 0], [1, "t", 0, 6, 217, 0], [1, "t", 3, 6, 216, 0], [1, "b", 0, 6, 215, 0], [1, "t", 4, 6, 214, 0], [1, "t", 2, 6, 213, 0], [1, "t", 0, 6, 212, 0], [1, "t", 2, 6, 211, 0], [1, "b", 3, 6, 210, 0], [1, "t", 0, 6, 209, 0], [1, "t", 5, 6, 207, 0], [1, "t", 2, 6, 208, 0], [1, "t", 0, 6, 206, 0], [1, "t", 2, 6, 205, 0], [1, "t", 2, 6, 203, 0], [1, "b", 0, 6, 202, 0], [1, "t", 3, 6, 201, 0], [1, "t", 4, 6, 199, 0], [1, "t", 0, 6, 198, 0], [1, "t", 2, 6, 197, 0], [1, "t", 4, 6, 196, 0], [1, "t", 1, 6, 195, 0], [1, "t", 3, 6, 194, 0], [1, "t", 4, 6, 192, 0], [1, "t", 2, 6, 191, 0], [1, "b", 0, 6, 190, 0], [1, "t", 3, 6, 189, 0], [1, "t", 4, 6, 187, 0], [1, "b", 0, 6, 186, 0], [1, "t", 2, 6, 185, 0], [1, "t", 4, 6, 184, 0], [1, "t", 2, 6, 183, 0], [1, "t", 0, 6, 182, 0], [1, "b", 2, 6, 181, 0], [1, "t", 5, 6, 180, 0], [1, "t", 2, 6, 179, 0], [1, "t", 0, 6, 178, 0], [1, "t", 2, 6, 177, 0], [1, "t", 4, 6, 176, 0], [1, "b", 2, 6, 175, 0], [1, "t", 1, 6, 174, 0], [1, "t", 5, 6, 173, 0], [1, "t", 2, 6, 256, 0], [1, "t", 4, 6, 204, 0], [1, "t", 4, 6, 200, 0], [1, "t", 2, 6, 193, 0], [1, "t", 2, 6, 188, 0], [1, "f", 1, 6, 150, 1], [1, "f", 2, 6, 151, 1], [1, "f", 2, 6, 149, 1], [1, "f", 1, 6, 148, 1], [1, "f", 2, 6, 147, 1], [1, "f", 2, 6, 145, 1], [1, "f", 2, 6, 143, 1], [1, "f", 1, 6, 146, 1], [1, "f", 1, 6, 144, 1], [1, "f", 1, 6, 142, 1], [1, "f", 2, 6, 141, 1], [1, "f", 2, 6, 139, 1], [1, "f", 2, 6, 137, 1], [1, "f", 2, 6, 135, 1], [1, "f", 2, 6, 133, 1], [1, "f", 1, 6, 140, 1], [1, "f", 1, 6, 138, 1], [1, "f", 1, 6, 136, 1], [1, "f", 1, 6, 134, 1], [1, "f", 1, 6, 132, 1], [1, "f", 2, 6, 131, 1], [1, "f", 2, 6, 129, 1], [1, "f", 2, 6, 127, 1], [1, "f", 2, 6, 125, 1], [1, "f", 2, 6, 123, 1], [1, "f", 2, 6, 121, 1], [1, "f", 1, 6, 130, 1], [1, "f", 1, 6, 128, 1], [1, "f", 1, 6, 126, 1], [1, "f", 1, 6, 124, 1], [1, "f", 1, 6, 122, 1], [1, "f", 1, 6, 120, 1], [1, "f", 2, 6, 119, 1], [1, "f", 2, 6, 117, 1], [1, "f", 2, 6, 115, 1], [1, "f", 2, 6, 113, 1], [1, "f", 2, 6, 111, 1], [1, "f", 2, 6, 109, 1], [1, "f", 1, 6, 118, 1], [1, "f", 1, 6, 116, 1], [1, "f", 1, 6, 114, 1], [1, "f", 1, 6, 112, 1], [1, "f", 1, 6, 110, 1], [1, "f", 1, 6, 108, 1], [1, "f", 1, 6, 106, 1], [1, "f", 1, 6, 104, 1], [1, "f", 2, 6, 107, 1], [1, "f", 2, 6, 105, 1], [1, "f", 2, 6, 103, 1], [1, "f", 2, 6, 101, 1], [1, "f", 2, 6, 99, 1], [1, "f", 2, 6, 97, 1], [1, "f", 2, 6, 95, 1], [1, "f", 2, 6, 93, 1], [1, "f", 2, 6, 91, 1], [1, "f", 1, 6, 102, 1], [1, "f", 1, 6, 100, 1], [1, "f", 1, 6, 98, 1], [1, "f", 1, 6, 96, 1], [1, "f", 1, 6, 94, 1], [1, "f", 1, 6, 92, 1], [1, "f", 1, 6, 90, 1], [1, "f", 1, 6, 88, 1], [1, "f", 1, 6, 86, 1], [1, "f", 2, 6, 89, 1], [1, "f", 2, 6, 87, 1], [1, "f", 2, 6, 85, 1], [1, "f", 2, 6, 83, 1], [1, "f", 2, 6, 81, 1], [1, "f", 2, 6, 79, 1], [1, "f", 2, 6, 77, 1], [1, "f", 1, 6, 84, 1], [1, "f", 1, 6, 82, 1], [1, "f", 1, 6, 80, 1], [1, "f", 1, 6, 78, 1], [1, "f", 1, 6, 76, 1], [1, "f", 2, 6, 75, 1], [1, "f", 2, 6, 73, 1], [1, "f", 2, 6, 71, 1], [1, "f", 2, 6, 69, 1], [1, "f", 2, 6, 67, 1], [1, "f", 2, 6, 65, 1], [1, "f", 1, 6, 74, 1], [1, "f", 1, 6, 72, 1], [1, "f", 1, 6, 70, 1], [1, "f", 1, 6, 68, 1], [1, "f", 1, 6, 66, 1], [1, "f", 1, 6, 64, 1], [1, "f", 2, 6, 63, 1], [1, "f", 2, 6, 61, 1], [1, "f", 2, 6, 59, 1], [1, "f", 2, 6, 57, 1], [1, "f", 2, 6, 55, 1], [1, "f", 2, 6, 53, 1], [1, "f", 2, 6, 51, 1], [1, "f", 1, 6, 62, 1], [1, "f", 1, 6, 60, 1], [1, "f", 1, 6, 58, 1], [1, "f", 1, 6, 56, 1], [1, "f", 1, 6, 54, 1], [1, "f", 1, 6, 52, 1], [1, "f", 1, 6, 50, 1], [1, "f", 2, 6, 49, 1], [1, "f", 2, 6, 47, 1], [1, "f", 2, 6, 45, 1], [1, "f", 2, 6, 43, 1], [1, "f", 2, 6, 41, 1], [1, "f", 2, 6, 39, 1], [1, "f", 1, 6, 48, 1], [1, "f", 1, 6, 46, 1], [1, "f", 1, 6, 44, 1], [1, "f", 1, 6, 42, 1], [1, "f", 1, 6, 40, 1], [1, "f", 1, 6, 38, 1], [1, "f", 2, 6, 37, 1], [1, "f", 2, 6, 35, 1], [1, "f", 2, 6, 33, 1], [1, "f", 2, 6, 31, 1], [1, "f", 2, 6, 29, 1], [1, "f", 2, 6, 27, 1], [1, "f", 1, 6, 36, 1], [1, "f", 1, 6, 34, 1], [1, "f", 1, 6, 32, 1], [1, "f", 1, 6, 30, 1], [1, "f", 1, 6, 28, 1], [1, "f", 1, 6, 26, 1], [1, "f", 2, 6, 25, 1], [1, "f", 2, 6, 23, 1], [1, "f", 2, 6, 21, 1], [1, "f", 2, 6, 19, 1], [1, "f", 2, 6, 17, 1], [1, "f", 2, 6, 15, 1], [1, "f", 1, 6, 24, 1], [1, "f", 1, 6, 22, 1], [1, "f", 1, 6, 20, 1], [1, "f", 1, 6, 18, 1], [1, "f", 1, 6, 16, 1], [1, "f", 2, 6, 13, 1], [1, "f", 2, 6, 11, 1], [1, "f", 2, 6, 9, 1], [1, "f", 2, 6, 7, 1], [1, "f", 1, 6, 14, 1], [1, "f", 1, 6, 12, 1], [1, "f", 1, 6, 10, 1], [1, "f", 1, 6, 8, 1], [1, "f", 1, 6, 6, 1], [1, "f", 1, 8, 6, 1], [1, "f", 2, 7, 6, 1], [1, "f", 2, 9, 6, 1], [1, "f", 2, 11, 6, 1], [1, "f", 2, 13, 6, 1], [1, "f", 2, 15, 6, 1], [1, "f", 1, 10, 6, 1], [1, "f", 1, 12, 6, 1], [1, "f", 1, 14, 6, 1], [1, "f", 1, 16, 6, 1], [1, "f", 1, 18, 6, 1], [1, "f", 1, 20, 6, 1], [1, "f", 1, 22, 6, 1], [1, "f", 1, 24, 6, 1], [1, "f", 1, 26, 6, 1], [1, "f", 2, 17, 6, 1], [1, "f", 2, 19, 6, 1], [1, "f", 2, 21, 6, 1], [1, "f", 2, 23, 6, 1], [1, "f", 2, 25, 6, 1], [1, "f", 2, 27, 6, 1], [1, "f", 2, 29, 6, 1], [1, "f", 2, 31, 6, 1], [1, "f", 2, 33, 6, 1], [1, "f", 1, 28, 6, 1], [1, "f", 1, 30, 6, 1], [1, "f", 1, 32, 6, 1], [1, "f", 1, 34, 6, 1], [1, "f", 2, 67, 6, 1], [1, "f", 2, 69, 6, 1], [1, "f", 2, 71, 6, 1], [1, "f", 2, 73, 6, 1], [1, "f", 2, 75, 6, 1], [1, "f", 1, 68, 6, 1], [1, "f", 1, 70, 6, 1], [1, "f", 1, 72, 6, 1], [1, "f", 1, 74, 6, 1], [1, "f", 1, 76, 6, 1], [1, "f", 2, 77, 6, 1], [1, "f", 2, 79, 6, 1], [1, "f", 2, 81, 6, 1], [1, "f", 2, 83, 6, 1], [1, "f", 2, 85, 6, 1], [1, "f", 1, 78, 6, 1], [1, "f", 1, 80, 6, 1], [1, "f", 1, 82, 6, 1], [1, "f", 1, 84, 6, 1], [1, "f", 1, 86, 6, 1], [1, "f", 2, 87, 6, 1], [1, "f", 2, 89, 6, 1], [1, "f", 2, 91, 6, 1], [1, "f", 2, 93, 6, 1], [1, "f", 1, 88, 6, 1], [1, "f", 1, 90, 6, 1], [1, "f", 1, 92, 6, 1], [1, "f", 1, 94, 6, 1], [1, "f", 2, 95, 6, 1], [1, "f", 1, 95, 7, 1], [1, "f", 1, 83, 7, 1], [1, "f", 1, 81, 7, 1], [1, "f", 1, 79, 7, 1], [1, "f", 1, 77, 7, 1], [1, "f", 1, 75, 7, 1], [1, "f", 1, 73, 7, 1], [1, "f", 1, 71, 7, 1], [1, "f", 1, 69, 7, 1], [1, "f", 1, 33, 7, 1], [1, "f", 1, 31, 7, 1], [1, "f", 1, 29, 7, 1], [1, "f", 1, 27, 7, 1], [1, "f", 1, 25, 7, 1], [1, "f", 1, 23, 7, 1], [1, "f", 1, 21, 7, 1], [1, "f", 1, 19, 7, 1], [1, "f", 1, 17, 7, 1], [1, "f", 1, 15, 7, 1], [1, "f", 1, 13, 7, 1], [1, "f", 1, 11, 7, 1], [1, "f", 1, 9, 7, 1], [1, "f", 1, 7, 7, 1], [1, "s", 0, 7, 8, 1], [1, "t", 4, 7, 174, 0], [1, "t", 5, 7, 175, 0], [1, "t", 4, 7, 176, 0], [1, "b", 2, 7, 177, 0], [1, "t", 3, 94, 301, 0], [1, "b", 3, 95, 301, 0], [1, "t", 4, 96, 301, 0], [1, "t", 1, 97, 301, 0], [1, "t", 2, 98, 301, 0], [1, "t", 4, 99, 301, 0], [1, "t", 2, 100, 301, 0], [1, "t", 4, 96, 304, 0], [1, "t", 2, 96, 302, 0], [1, "t", 2, 97, 304, 0], [1, "t", 2, 96, 303, 0], [1, "t", 5, 97, 303, 0], [1, "t", 5, 98, 304, 0], [1, "b", 2, 97, 302, 0], [1, "b", 2, 99, 304, 0], [1, "t", 1, 98, 303, 0], [1, "t", 4, 98, 302, 0], [1, "t", 4, 99, 303, 0], [1, "t", 4, 100, 304, 0], [1, "t", 5, 99, 302, 0], [1, "t", 5, 101, 303, 0], [1, "t", 2, 100, 303, 0], [1, "t", 0, 100, 302, 0], [1, "t", 0, 101, 304, 0], [1, "t", 4, 102, 304, 0], [1, "f", 0, 94, 7, 1], [1, "f", 1, 93, 7, 1], [1, "f", 1, 92, 7, 1], [1, "f", 0, 91, 7, 1], [1, "f", 1, 90, 7, 1], [1, "f", 1, 89, 7, 1], [1, "f", 0, 88, 7, 1], [1, "f", 1, 87, 7, 1], [1, "f", 1, 86, 7, 1], [1, "f", 1, 85, 7, 1], [1, "f", 0, 84, 7, 1], [1, "f", 1, 82, 7, 1], [1, "f", 0, 80, 7, 1], [1, "f", 1, 78, 7, 1], [1, "f", 0, 76, 7, 1], [1, "f", 1, 74, 7, 1], [1, "f", 0, 72, 7, 1], [1, "f", 0, 70, 7, 1], [1, "f", 1, 68, 7, 1], [1, "f", 1, 32, 7, 1], [1, "f", 0, 30, 7, 1], [1, "f", 1, 28, 7, 1], [1, "f", 0, 26, 7, 1], [1, "f", 1, 24, 7, 1], [1, "f", 0, 22, 7, 1], [1, "f", 1, 20, 7, 1], [1, "f", 0, 18, 7, 1], [1, "f", 1, 16, 7, 1], [1, "f", 0, 14, 7, 1], [1, "f", 1, 12, 7, 1], [1, "f", 0, 10, 7, 1], [1, "f", 1, 8, 7, 1], [1, "s", 1, 7, 9, 1], [1, "f", 0, 95, 152, 1], [1, "f", 1, 95, 151, 1], [1, "f", 0, 95, 11, 1], [1, "f", 1, 95, 12, 1], [1, "f", 1, 95, 14, 1], [1, "f", 1, 95, 19, 1], [1, "f", 0, 95, 15, 1], [1, "f", 0, 95, 20, 1], [1, "f", 1, 95, 21, 1], [1, "f", 1, 95, 26, 1], [1, "f", 1, 95, 37, 1], [1, "f", 0, 95, 44, 1], [1, "f", 1, 95, 50, 1], [1, "f", 1, 95, 52, 1], [1, "f", 0, 95, 53, 1], [1, "f", 1, 95, 54, 1], [1, "f", 1, 95, 62, 1], [1, "f", 0, 95, 55, 1], [1, "f", 1, 95, 64, 1], [1, "f", 0, 95, 58, 1], [1, "f", 0, 95, 61, 1], [1, "f", 0, 95, 68, 1], [1, "f", 0, 95, 72, 1], [1, "f", 0, 95, 78, 1], [1, "f", 1, 95, 115, 1], [1, "f", 1, 95, 117, 1], [1, "f", 1, 95, 128, 1], [1, "f", 0, 95, 85, 1], [1, "f", 0, 95, 91, 1], [1, "f", 0, 95, 95, 1], [1, "f", 0, 95, 114, 1], [1, "f", 2, 95, 113, 1], [1, "f", 1, 95, 119, 1], [1, "f", 0, 95, 120, 1], [1, "f", 1, 95, 121, 1], [1, "f", 0, 95, 127, 1], [1, "f", 1, 95, 130, 1], [1, "f", 0, 95, 131, 1], [1, "f", 1, 95, 132, 1], [1, "f", 1, 95, 136, 1], [1, "f", 0, 95, 137, 1], [1, "f", 0, 95, 143, 1], [1, "f", 0, 95, 147, 1], [1, "f", 1, 95, 138, 1], [1, "f", 1, 95, 144, 1], [1, "f", 1, 95, 10, 1], [1, "f", 0, 95, 8, 1], [1, "f", 1, 95, 9, 1], [1, "f", 0, 95, 13, 1], [1, "f", 1, 95, 16, 1], [1, "f", 1, 95, 17, 1], [1, "f", 0, 95, 18, 1], [1, "f", 1, 95, 45, 1], [1, "f", 0, 95, 51, 1], [1, "f", 1, 95, 56, 1], [1, "f", 1, 95, 57, 1], [1, "f", 1, 95, 59, 1], [1, "f", 1, 95, 60, 1], [1, "f", 1, 95, 63, 1], [1, "f", 0, 95, 65, 1], [1, "f", 1, 95, 66, 1], [1, "f", 1, 95, 67, 1], [1, "f", 1, 95, 69, 1], [1, "f", 1, 95, 70, 1], [1, "f", 0, 95, 71, 1], [1, "f", 1, 95, 73, 1], [1, "f", 1, 95, 74, 1], [1, "f", 0, 95, 75, 1], [1, "f", 1, 95, 76, 1], [1, "f", 1, 95, 77, 1], [1, "f", 1, 95, 79, 1], [1, "f", 1, 95, 80, 1], [1, "f", 0, 95, 81, 1], [1, "f", 1, 95, 82, 1], [1, "f", 0, 95, 83, 1], [1, "f", 1, 95, 84, 1], [1, "f", 1, 95, 86, 1], [1, "f", 1, 95, 88, 1], [1, "f", 0, 95, 87, 1], [1, "f", 1, 95, 89, 1], [1, "f", 1, 95, 90, 1], [1, "f", 1, 95, 92, 1], [1, "f", 1, 95, 93, 1], [1, "f", 1, 95, 94, 1], [1, "f", 1, 95, 96, 1], [1, "f", 1, 95, 97, 1], [1, "f", 0, 95, 98, 1], [1, "f", 1, 95, 99, 1], [1, "f", 1, 95, 100, 1], [1, "f", 0, 95, 101, 1], [1, "f", 1, 95, 102, 1], [1, "f", 0, 95, 103, 1], [1, "f", 1, 95, 104, 1], [1, "f", 1, 95, 105, 1], [1, "f", 0, 95, 106, 1], [1, "f", 1, 95, 107, 1], [1, "f", 1, 95, 108, 1], [1, "f", 1, 95, 109, 1], [1, "f", 0, 95, 110, 1], [1, "f", 1, 95, 111, 1], [1, "f", 0, 95, 112, 1], [1, "f", 1, 95, 116, 1], [1, "f", 0, 95, 118, 1], [1, "f", 0, 95, 122, 1], [1, "f", 1, 95, 123, 1], [1, "f", 1, 95, 124, 1], [1, "f", 0, 95, 125, 1], [1, "f", 1, 95, 126, 1], [1, "f", 1, 95, 129, 1], [1, "f", 1, 95, 133, 1], [1, "f", 0, 95, 134, 1], [1, "f", 1, 95, 135, 1], [1, "f", 1, 95, 139, 1], [1, "f", 0, 95, 140, 1], [1, "f", 1, 95, 141, 1], [1, "f", 1, 95, 142, 1], [1, "f", 1, 95, 146, 1], [1, "f", 0, 95, 145, 1], [1, "f", 1, 95, 148, 1], [1, "f", 1, 95, 149, 1], [1, "f", 1, 95, 150, 1], [1, "f", 1, 95, 153, 1], [1, "cs", 0, 64, 9, 1], [1, "cs", 1, 64, 10, 1], [1, "cs", 2, 64, 16, 1], [1, "cs", 2, 64, 19, 1], [1, "cs", 0, 64, 20, 1], [1, "cs", 1, 64, 21, 1], [1, "cs", 2, 64, 22, 1], [1, "cs", 0, 64, 23, 1], [1, "cs", 2, 64, 24, 1], [1, "cs", 1, 64, 29, 1], [1, "cs", 2, 64, 30, 1], [1, "cs", 3, 64, 31, 1], [1, "cs", 0, 64, 32, 1], [1, "cs", 1, 64, 33, 1], [1, "cs", 2, 64, 34, 1], [1, "cs", 0, 64, 35, 1], [1, "cs", 2, 64, 8, 1], [1, "cs", 2, 65, 8, 1], [1, "cs", 1, 65, 9, 1], [1, "cs", 2, 65, 10, 1], [1, "cs", 3, 65, 11, 1], [1, "cs", 1, 65, 16, 1], [1, "cs", 0, 64, 17, 1], [1, "cs", 3, 65, 17, 1], [1, "cs", 2, 64, 18, 1], [1, "cs", 2, 65, 18, 1], [1, "cs", 0, 65, 19, 1], [1, "cs", 1, 65, 20, 1], [1, "cs", 3, 65, 21, 1], [1, "cs", 2, 65, 22, 1], [1, "cs", 3, 65, 23, 1], [1, "cs", 0, 65, 24, 1], [1, "cs", 2, 65, 29, 1], [1, "cs", 3, 65, 30, 1], [1, "cs", 0, 65, 31, 1], [1, "cs", 1, 65, 32, 1], [1, "cs", 2, 65, 33, 1], [1, "cs", 3, 65, 34, 1], [1, "cs", 2, 63, 9, 1], [1, "cs", 0, 62, 9, 1], [1, "cs", 2, 61, 9, 1], [1, "cs", 0, 60, 9, 1], [1, "cs", 2, 59, 9, 1], [1, "cs", 2, 58, 9, 1], [1, "cs", 0, 57, 9, 1], [1, "cs", 2, 56, 9, 1], [1, "cs", 2, 55, 9, 1], [1, "cs", 2, 54, 9, 1], [1, "cs", 0, 53, 9, 1], [1, "cs", 0, 51, 9, 1], [1, "cs", 2, 52, 9, 1], [1, "cs", 2, 50, 9, 1], [1, "cs", 2, 48, 9, 1], [1, "cs", 2, 49, 9, 1], [1, "cs", 0, 47, 9, 1], [1, "cs", 0, 45, 9, 1], [1, "cs", 0, 43, 9, 1], [1, "cs", 2, 46, 9, 1], [1, "cs", 2, 44, 9, 1], [1, "cs", 2, 42, 9, 1], [1, "cs", 2, 41, 9, 1], [1, "cs", 0, 40, 9, 1], [1, "cs", 2, 39, 9, 1], [1, "cs", 2, 38, 9, 1], [1, "cs", 0, 37, 9, 1], [1, "cs", 0, 63, 8, 1], [1, "cs", 2, 65, 7, 1], [1, "cs", 3, 64, 7, 1], [1, "cs", 2, 62, 8, 1], [1, "cs", 3, 61, 8, 1], [1, "cs", 1, 62, 7, 1], [1, "cs", 2, 63, 7, 1], [1, "cs", 0, 64, 6, 1], [1, "cs", 3, 65, 6, 1], [1, "cs", 2, 63, 6, 1], [1, "cs", 2, 62, 6, 1], [1, "cs", 2, 61, 6, 1], [1, "cs", 2, 60, 6, 1], [1, "cs", 2, 59, 6, 1], [1, "cs", 2, 61, 7, 1], [1, "cs", 0, 60, 7, 1], [1, "cs", 2, 60, 8, 1], [1, "cs", 2, 59, 7, 1], [1, "cs", 2, 59, 8, 1], [1, "cs", 1, 58, 8, 1], [1, "cs", 1, 57, 6, 1], [1, "cs", 1, 55, 7, 1], [1, "cs", 0, 56, 6, 1], [1, "cs", 2, 58, 6, 1], [1, "cs", 2, 58, 7, 1], [1, "cs", 2, 57, 7, 1], [1, "cs", 2, 56, 7, 1], [1, "cs", 2, 55, 6, 1], [1, "cs", 2, 57, 8, 1], [1, "cs", 2, 56, 8, 1], [1, "cs", 2, 55, 8, 1], [1, "cs", 0, 54, 8, 1], [1, "cs", 0, 50, 7, 1], [1, "cs", 0, 53, 6, 1], [1, "cs", 2, 54, 6, 1], [1, "cs", 2, 54, 7, 1], [1, "cs", 2, 53, 7, 1], [1, "cs", 2, 52, 7, 1], [1, "cs", 2, 52, 6, 1], [1, "cs", 1, 52, 8, 1], [1, "cs", 2, 53, 8, 1], [1, "cs", 2, 51, 8, 1], [1, "cs", 2, 51, 7, 1], [1, "cs", 2, 51, 6, 1], [1, "cs", 2, 50, 6, 1], [1, "cs", 2, 50, 8, 1], [1, "cs", 2, 49, 8, 1], [1, "cs", 2, 49, 7, 1], [1, "cs", 2, 49, 6, 1], [1, "cs", 0, 46, 7, 1], [1, "cs", 1, 48, 8, 1], [1, "cs", 1, 44, 7, 1], [1, "cs", 1, 41, 8, 1], [1, "cs", 2, 48, 7, 1], [1, "cs", 2, 48, 6, 1], [1, "cs", 2, 47, 6, 1], [1, "cs", 2, 47, 7, 1], [1, "cs", 2, 47, 8, 1], [1, "cs", 2, 46, 8, 1], [1, "cs", 2, 45, 8, 1], [1, "cs", 2, 45, 7, 1], [1, "cs", 2, 45, 6, 1], [1, "cs", 2, 46, 6, 1], [1, "cs", 2, 44, 6, 1], [1, "cs", 2, 44, 8, 1], [1, "cs", 2, 43, 8, 1], [1, "cs", 2, 43, 7, 1], [1, "cs", 2, 43, 6, 1], [1, "cs", 2, 42, 6, 1], [1, "cs", 2, 42, 7, 1], [1, "cs", 2, 42, 8, 1], [1, "cs", 2, 41, 7, 1], [1, "cs", 2, 41, 6, 1], [1, "cs", 2, 40, 6, 1], [1, "cs", 2, 40, 7, 1], [1, "cs", 2, 40, 8, 1], [1, "cs", 2, 39, 8, 1], [1, "cs", 0, 39, 7, 1], [1, "cs", 1, 38, 8, 1], [1, "cs", 2, 39, 6, 1], [1, "cs", 2, 38, 6, 1], [1, "cs", 2, 37, 6, 1], [1, "cs", 2, 38, 7, 1], [1, "cs", 2, 37, 7, 1], [1, "cs", 2, 37, 8, 1], [1, "cs", 2, 37, 10, 1], [1, "cs", 2, 38, 10, 1], [1, "cs", 0, 38, 11, 1], [1, "cs", 0, 38, 17, 1], [1, "cs", 1, 37, 18, 1], [1, "cs", 0, 38, 19, 1], [1, "cs", 2, 37, 11, 1], [1, "cs", 2, 37, 16, 1], [1, "cs", 2, 37, 17, 1], [1, "cs", 2, 38, 18, 1], [1, "cs", 2, 37, 19, 1], [1, "cs", 3, 38, 16, 1], [1, "cs", 0, 37, 21, 1], [1, "cs", 0, 38, 22, 1], [1, "cs", 0, 38, 24, 1], [1, "cs", 2, 37, 20, 1], [1, "cs", 2, 38, 20, 1], [1, "cs", 2, 38, 21, 1], [1, "cs", 1, 37, 23, 1], [1, "cs", 3, 37, 22, 1], [1, "cs", 3, 38, 23, 1], [1, "cs", 2, 37, 24, 1], [1, "cs", 0, 38, 30, 1], [1, "cs", 0, 38, 32, 1], [1, "cs", 0, 37, 31, 1], [1, "cs", 1, 38, 34, 1], [1, "cs", 1, 37, 29, 1], [1, "cs", 2, 38, 29, 1], [1, "cs", 2, 37, 30, 1], [1, "cs", 2, 38, 31, 1], [1, "cs", 2, 37, 32, 1], [1, "cs", 3, 38, 33, 1], [1, "cs", 3, 38, 35, 1], [1, "cs", 2, 37, 33, 1], [1, "cs", 2, 36, 8, 1], [1, "cs", 0, 36, 11, 1], [1, "cs", 0, 35, 9, 1], [1, "cs", 2, 36, 9, 1], [1, "cs", 2, 36, 10, 1], [1, "cs", 2, 35, 10, 1], [1, "cs", 1, 33, 8, 1], [1, "cs", 3, 34, 9, 1], [1, "cs", 3, 35, 8, 1], [1, "cs", 2, 34, 8, 1], [1, "cs", 0, 36, 7, 1], [1, "cs", 1, 34, 7, 1], [1, "cs", 2, 35, 7, 1], [1, "cs", 2, 35, 6, 1], [1, "cs", 2, 36, 6, 1], [1, "cs", 2, 68, 9, 1], [1, "cs", 2, 66, 10, 1], [1, "cs", 3, 66, 9, 1], [1, "cs", 0, 67, 9, 1], [1, "cs", 0, 66, 8, 1], [1, "cs", 2, 67, 8, 1], [1, "cs", 1, 68, 8, 1], [1, "cs", 1, 66, 11, 1], [1, "cs", 2, 67, 10, 1], [1, "cs", 0, 66, 6, 1], [1, "cs", 2, 66, 7, 1], [1, "cs", 2, 67, 7, 1], [1, "cs", 2, 69, 8, 1], [1, "cs", 2, 63, 32, 1], [1, "cs", 2, 62, 34, 1], [1, "cs", 2, 60, 35, 1], [1, "cs", 3, 59, 35, 1], [1, "cs", 0, 61, 35, 1], [1, "cs", 0, 63, 34, 1], [1, "cs", 2, 63, 33, 1], [1, "cs", 2, 63, 35, 1], [1, "cs", 2, 62, 35, 1], [1, "cs", 2, 58, 36, 1], [1, "cs", 1, 59, 36, 1], [1, "cs", 1, 62, 36, 1], [1, "cs", 2, 60, 36, 1], [1, "cs", 2, 61, 34, 1], [1, "cs", 3, 62, 33, 1], [1, "cs", 3, 63, 36, 1], [1, "cs", 3, 61, 36, 1], [1, "cs", 0, 42, 36, 1], [1, "cs", 1, 39, 36, 1], [1, "cs", 2, 41, 36, 1], [1, "cs", 3, 39, 35, 1], [1, "cs", 3, 40, 36, 1], [1, "cs", 3, 43, 36, 1], [1, "cs", 1, 40, 35, 1], [1, "cs", 2, 41, 35, 1], [1, "cs", 2, 40, 34, 1], [1, "cs", 2, 39, 34, 1], [1, "cs", 2, 39, 33, 1], [1, "cs", 2, 39, 32, 1], [1, "cs", 0, 40, 33, 1], [1, "cs", 2, 41, 34, 1], [1, "cs", 1, 44, 36, 1], [1, "cs", 3, 43, 35, 1], [1, "cs", 2, 42, 35, 1], [1, "cs", 0, 37, 34, 1], [1, "cs", 3, 59, 30, 1], [1, "cs", 0, 60, 29, 1], [1, "cs", 2, 60, 28, 1], [1, "cs", 3, 60, 27, 1], [1, "cs", 0, 60, 26, 1], [1, "cs", 2, 54, 25, 1], [1, "cs", 2, 48, 25, 1], [1, "cs", 2, 42, 26, 1], [1, "cs", 0, 55, 25, 1], [1, "cs", 2, 59, 26, 1], [1, "cs", 0, 43, 26, 1], [1, "cs", 1, 42, 27, 1], [1, "cs", 2, 42, 28, 1], [1, "cs", 2, 43, 30, 1], [1, "cs", 0, 42, 29, 1], [1, "cs", 0, 54, 24, 1], [1, "cs", 0, 48, 24, 1], [1, "cs", 2, 54, 23, 1], [1, "cs", 2, 48, 23, 1], [1, "cs", 2, 63, 22, 1], [1, "cs", 2, 63, 21, 1], [1, "cs", 2, 39, 21, 1], [1, "cs", 3, 57, 18, 1], [1, "cs", 2, 56, 18, 1], [1, "cs", 3, 51, 21, 1], [1, "cs", 0, 51, 20, 1], [1, "cs", 2, 51, 19, 1], [1, "cs", 3, 51, 18, 1], [1, "cs", 2, 63, 16, 1], [1, "cs", 2, 63, 10, 1], [1, "cs", 2, 56, 13, 1], [1, "cs", 3, 57, 13, 1], [1, "cs", 1, 45, 18, 1], [1, "cs", 2, 47, 18, 1], [1, "cs", 2, 46, 18, 1], [1, "cs", 0, 46, 13, 1], [1, "cs", 2, 45, 13, 1], [1, "cs", 2, 39, 10, 1], [1, "cs", 2, 39, 16, 1], [1, "cs", 2, 47, 17, 1], [1, "a", 0, 51, 15, 1], [1, "a", 1, 53, 14, 1], [1, "a", 1, 49, 14, 1], [1, "de", 8, 55, 15, 0], [1, "de", 9, 48, 28, 0], [1, "de", 10, 58, 26, 0], [1, "de", 11, 59, 29, 0], [1, "de", 11, 55, 34, 0], [1, "de", 10, 48, 33, 0], [1, "de", 9, 41, 32, 0], [1, "de", 9, 56, 24, 0], [1, "de", 9, 62, 16, 0], [1, "de", 9, 45, 11, 0], [1, "de", 9, 44, 17, 0], [1, "de", 10, 44, 13, 0], [1, "de", 10, 58, 13, 0], [1, "de", 10, 63, 31, 0], [1, "de", 8, 60, 30, 0], [1, "de", 8, 43, 26, 0], [1, "de", 10, 43, 29, 0], [1, "de", 10, 53, 29, 0], [1, "de", 10, 53, 24, 0], [1, "de", 9, 53, 19, 0], [1, "de", 11, 49, 19, 0], [1, "de", 10, 39, 26, 0], [1, "de", 9, 46, 24, 0], [1, "de", 9, 62, 10, 0], [1, "de", 8, 40, 14, 0], [1, "de", 32, 55, 35, 0], [1, "de", 32, 60, 33, 0], [1, "de", 32, 63, 28, 0], [1, "de", 32, 63, 24, 0], [1, "de", 32, 58, 22, 0], [1, "de", 32, 59, 17, 0], [1, "de", 32, 63, 13, 0], [1, "de", 32, 59, 10, 0], [1, "de", 32, 56, 12, 0], [1, "de", 32, 52, 17, 0], [1, "de", 32, 51, 14, 0], [1, "de", 32, 39, 12, 0], [1, "de", 32, 39, 18, 0], [1, "de", 32, 41, 25, 0], [1, "de", 32, 39, 30, 0], [1, "de", 32, 50, 29, 0], [1, "de", 32, 43, 34, 0], [1, "de", 32, 47, 34, 0], [1, "de", 31, 54, 33, 0], [1, "de", 31, 59, 24, 0], [1, "de", 31, 63, 19, 0], [1, "de", 31, 47, 15, 0], [1, "de", 31, 43, 17, 0], [1, "de", 31, 39, 27, 0], [1, "de", 31, 48, 27, 0], [1, "de", 31, 57, 27, 0], [1, "de", 32, 44, 27, 0], [1, "d", 0, 12, 13, 1], [1, "d", 0, 89, 13, 1], [1, "d", 1, 91, 21, 1], [1, "d", 1, 10, 22, 1], [1, "f", 2, 89, 18, 1], [1, "f", 0, 88, 19, 1], [1, "g", 1, 85, 22, 1], [1, "s", 1, 90, 29, 1], [1, "s", 1, 92, 15, 1], [1, "s", 0, 91, 31, 1], [1, "s", 2, 90, 38, 1], [1, "s", 0, 91, 42, 1], [1, "s", 0, 90, 49, 1], [1, "f", 1, 86, 43, 1], [1, "f", 0, 81, 45, 1], [1, "f", 2, 66, 44, 1], [1, "f", 2, 55, 49, 1], [1, "f", 1, 54, 50, 1], [1, "f", 2, 43, 45, 1], [1, "f", 2, 31, 48, 1], [1, "f", 1, 27, 39, 1], [1, "f", 1, 80, 46, 1], [1, "f", 1, 69, 48, 1], [1, "g", 0, 80, 40, 1], [1, "g", 2, 81, 40, 1], [1, "s", 2, 77, 39, 1], [1, "s", 0, 68, 43, 1], [1, "s", 2, 57, 41, 1], [1, "s", 1, 56, 42, 1], [1, "s", 1, 40, 41, 1], [1, "s", 2, 48, 48, 1], [1, "f", 2, 17, 12, 1], [1, "f", 0, 13, 31, 1], [1, "f", 1, 14, 32, 1], [1, "s", 0, 15, 27, 1], [1, "s", 0, 13, 39, 1], [1, "f", 2, 11, 17, 1], [1, "f", 1, 12, 18, 1], [1, "g", 2, 12, 25, 1], [1, "f", 0, 16, 45, 1], [1, "f", 1, 17, 46, 1], [1, "s", 1, 74, 48, 1], [1, "s", 1, 20, 47, 1], [1, "g", 0, 58, 59, 1], [1, "g", 0, 46, 72, 1], [1, "g", 0, 69, 79, 1], [1, "g", 0, 72, 74, 1], [1, "g", 0, 26, 88, 1], [1, "g", 0, 20, 74, 1], [1, "g", 0, 28, 67, 1], [1, "g", 0, 49, 86, 1], [1, "g", 0, 77, 90, 1], [1, "g", 0, 87, 72, 1], [1, "g", 0, 14, 85, 1], [1, "g", 1, 85, 97, 1], [1, "g", 1, 68, 104, 1], [1, "g", 1, 63, 91, 1], [1, "g", 1, 39, 90, 1], [1, "g", 1, 34, 99, 1], [1, "g", 1, 17, 103, 1], [1, "g", 2, 77, 60, 1], [1, "g", 2, 19, 56, 1], [1, "g", 2, 39, 60, 1], [1, "g", 2, 87, 57, 1], [1, "f", 0, 9, 62, 1], [1, "f", 0, 12, 81, 1], [1, "f", 0, 26, 59, 1], [1, "f", 0, 35, 53, 1], [1, "f", 0, 44, 58, 1], [1, "f", 0, 88, 62, 1], [1, "f", 0, 91, 82, 1], [1, "f", 0, 84, 85, 1], [1, "f", 0, 79, 69, 1], [1, "f", 0, 64, 71, 1], [1, "f", 0, 62, 83, 1], [1, "f", 0, 34, 81, 1], [1, "f", 0, 39, 71, 1], [1, "f", 0, 54, 94, 1], [1, "f", 1, 81, 70, 1], [1, "f", 1, 91, 72, 1], [1, "f", 1, 8, 91, 1], [1, "f", 1, 14, 81, 1], [1, "f", 1, 29, 79, 1], [1, "f", 1, 13, 65, 1], [1, "f", 1, 46, 97, 1], [1, "f", 1, 43, 73, 1], [1, "f", 1, 60, 69, 1], [1, "f", 1, 70, 96, 1], [1, "f", 1, 58, 84, 1], [1, "s", 1, 56, 76, 1], [1, "s", 1, 85, 74, 1], [1, "s", 0, 72, 71, 1], [1, "s", 0, 41, 62, 1], [1, "s", 0, 60, 61, 1], [1, "s", 0, 20, 66, 1], [1, "s", 0, 47, 83, 1], [1, "s", 0, 29, 86, 1], [1, "s", 0, 78, 92, 1], [1, "s", 0, 62, 102, 1], [1, "s", 0, 18, 95, 1], [1, "s", 2, 64, 101, 1], [1, "s", 2, 78, 84, 1], [1, "s", 2, 49, 83, 1], [1, "s", 2, 15, 76, 1], [1, "s", 2, 21, 84, 1], [1, "f", 1, 26, 94, 1], [1, "f", 2, 23, 96, 1], [1, "f", 2, 25, 72, 1], [1, "f", 2, 85, 77, 1], [1, "f", 2, 79, 95, 1], [1, "f", 2, 51, 65, 1], [1, "f", 2, 69, 60, 1], [1, "f", 1, 25, 105, 1], [1, "s", 1, 18, 68, 1], [1, "s", 0, 55, 76, 1], [1, "s", 0, 74, 59, 1], [1, "f", 1, 46, 142, 1], [1, "f", 1, 19, 140, 1], [1, "f", 1, 77, 137, 1], [1, "f", 0, 75, 137, 1], [1, "f", 0, 55, 138, 1], [1, "f", 0, 33, 127, 1], [1, "f", 0, 76, 121, 1], [1, "f", 0, 55, 121, 1], [1, "f", 0, 13, 123, 1], [1, "f", 0, 18, 141, 1], [1, "f", 0, 40, 137, 1], [1, "f", 2, 76, 142, 1], [1, "f", 2, 57, 140, 1], [1, "f", 2, 39, 138, 1], [1, "f", 2, 16, 143, 1], [1, "f", 2, 29, 131, 1], [1, "f", 0, 70, 150, 1], [1, "f", 0, 28, 146, 1], [1, "f", 0, 12, 132, 1], [1, "f", 0, 90, 129, 1], [1, "f", 1, 87, 131, 1], [1, "f", 0, 91, 143, 1], [1, "f", 2, 87, 145, 1], [1, "f", 1, 89, 141, 1], [1, "f", 1, 63, 130, 1], [1, "f", 1, 75, 122, 1], [1, "f", 1, 52, 124, 1], [1, "f", 1, 34, 127, 1], [1, "f", 1, 14, 123, 1], [1, "f", 1, 24, 122, 1], [1, "f", 0, 83, 108, 1], [1, "f", 0, 89, 118, 1], [1, "f", 0, 56, 107, 1], [1, "f", 0, 38, 113, 1], [1, "f", 0, 16, 110, 1], [1, "f", 1, 80, 105, 1], [1, "f", 1, 82, 109, 1], [1, "f", 1, 87, 118, 1], [1, "f", 1, 59, 110, 1], [1, "f", 1, 29, 111, 1], [1, "f", 2, 28, 112, 1], [1, "f", 2, 70, 112, 1], [1, "f", 2, 42, 111, 1], [1, "s", 0, 68, 157, 1], [1, "s", 0, 81, 158, 1], [1, "s", 0, 25, 172, 1], [1, "s", 0, 22, 161, 1], [1, "s", 0, 35, 152, 1], [1, "s", 0, 66, 144, 1], [1, "s", 0, 87, 145, 1], [1, "s", 0, 86, 145, 1], [1, "s", 0, 84, 135, 1], [1, "s", 0, 69, 133, 1], [1, "s", 0, 84, 122, 1], [1, "s", 0, 68, 121, 1], [1, "s", 0, 48, 124, 1], [1, "s", 0, 26, 129, 1], [1, "s", 0, 9, 127, 1], [1, "s", 0, 11, 144, 1], [1, "s", 0, 9, 109, 1], [1, "s", 0, 35, 101, 1], [1, "s", 0, 47, 109, 1], [1, "s", 0, 58, 111, 1], [1, "s", 0, 84, 110, 1], [1, "s", 0, 28, 114, 1], [1, "s", 1, 30, 116, 1], [1, "s", 1, 46, 112, 1], [1, "s", 1, 81, 111, 1], [1, "s", 1, 70, 123, 1], [1, "s", 1, 49, 127, 1], [1, "s", 1, 66, 134, 1], [1, "s", 1, 67, 144, 1], [1, "s", 1, 38, 152, 1], [1, "s", 1, 21, 164, 1], [1, "s", 1, 12, 147, 1], [1, "s", 1, 24, 130, 1], [1, "s", 1, 12, 125, 1], [1, "s", 1, 65, 158, 1], [1, "s", 1, 83, 167, 1], [1, "s", 1, 65, 167, 1], [1, "s", 1, 47, 164, 1], [1, "s", 1, 56, 168, 1], [1, "s", 2, 54, 169, 1], [1, "s", 2, 88, 170, 1], [1, "s", 2, 91, 162, 1], [1, "s", 2, 79, 149, 1], [1, "s", 2, 75, 144, 1], [1, "s", 2, 57, 150, 1], [1, "s", 2, 47, 143, 1], [1, "s", 2, 31, 145, 1], [1, "s", 2, 36, 138, 1], [1, "s", 2, 10, 163, 1], [1, "s", 2, 22, 142, 1], [1, "g", 2, 78, 132, 1], [1, "g", 1, 48, 135, 1], [1, "g", 2, 16, 136, 1], [1, "g", 0, 62, 92, 1], [1, "g", 2, 70, 80, 1], [1, "g", 2, 15, 86, 1], [1, "g", 2, 47, 75, 1], [1, "g", 2, 36, 89, 1], [1, "g", 2, 80, 90, 1], [1, "f", 1, 39, 118, 1], [1, "d", 2, 84, 54, 1], [1, "d", 2, 16, 54, 1], [1, "de", 7, 13, 13, 0], [1, "de", 5, 16, 28, 0], [1, "de", 5, 9, 25, 0], [1, "de", 5, 34, 41, 0], [1, "de", 4, 28, 40, 0], [1, "de", 6, 31, 47, 0], [1, "de", 6, 12, 39, 0], [1, "de", 4, 16, 47, 0], [1, "de", 4, 7, 46, 0], [1, "de", 6, 7, 33, 0], [1, "de", 6, 40, 42, 0], [1, "de", 7, 20, 48, 0], [1, "de", 7, 29, 59, 0], [1, "de", 6, 27, 58, 0], [1, "de", 6, 15, 54, 0], [1, "de", 5, 12, 66, 0], [1, "de", 5, 37, 53, 0], [1, "de", 4, 10, 63, 0], [1, "de", 7, 49, 48, 0], [1, "de", 7, 37, 63, 0], [1, "de", 6, 33, 68, 0], [1, "de", 6, 56, 52, 0], [1, "de", 5, 59, 58, 0], [1, "de", 6, 48, 58, 0], [1, "de", 4, 53, 63, 0], [1, "de", 4, 67, 44, 0], [1, "de", 5, 70, 49, 0], [1, "de", 5, 82, 55, 0], [1, "de", 5, 79, 41, 0], [1, "de", 5, 91, 29, 0], [1, "de", 7, 91, 43, 0], [1, "de", 6, 85, 44, 0], [1, "de", 6, 74, 60, 0], [1, "de", 6, 90, 8, 0], [1, "de", 5, 91, 15, 0], [1, "de", 4, 87, 20, 0], [1, "de", 7, 93, 11, 0], [1, "de", 6, 91, 21, 0], [1, "de", 6, 85, 35, 0], [1, "de", 5, 93, 58, 0], [1, "de", 5, 87, 63, 0], [1, "de", 7, 77, 62, 0], [1, "de", 6, 68, 61, 0], [1, "de", 5, 90, 73, 0], [1, "de", 4, 87, 71, 0], [1, "de", 7, 80, 71, 0], [1, "de", 7, 83, 77, 0], [1, "de", 7, 89, 83, 0], [1, "de", 4, 71, 80, 0], [1, "de", 4, 71, 70, 0], [1, "de", 5, 63, 72, 0], [1, "de", 4, 54, 75, 0], [1, "de", 5, 44, 83, 0], [1, "de", 5, 42, 74, 0], [1, "de", 5, 15, 81, 0], [1, "de", 4, 29, 80, 0], [1, "de", 4, 37, 90, 0], [1, "de", 4, 7, 75, 0], [1, "de", 6, 22, 74, 0], [1, "de", 6, 43, 95, 0], [1, "de", 6, 57, 85, 0], [1, "de", 6, 19, 94, 0], [1, "de", 6, 9, 92, 0], [1, "de", 5, 26, 89, 0], [1, "de", 5, 31, 112, 0], [1, "de", 5, 54, 108, 0], [1, "de", 5, 55, 95, 0], [1, "de", 5, 35, 104, 0], [1, "de", 5, 13, 110, 0], [1, "de", 7, 27, 107, 0], [1, "de", 7, 47, 99, 0], [1, "de", 7, 11, 104, 0], [1, "de", 7, 9, 111, 0], [1, "de", 7, 40, 114, 0], [1, "de", 7, 28, 117, 0], [1, "de", 7, 47, 113, 0], [1, "de", 7, 63, 104, 0], [1, "de", 4, 64, 92, 0], [1, "de", 6, 86, 97, 0], [1, "de", 5, 76, 91, 0], [1, "de", 5, 85, 86, 0], [1, "de", 6, 78, 83, 0], [1, "de", 6, 71, 97, 0], [1, "de", 4, 69, 105, 0], [1, "de", 4, 79, 104, 0], [1, "de", 4, 86, 109, 0], [1, "de", 4, 86, 118, 0], [1, "de", 5, 70, 113, 0], [1, "de", 6, 69, 121, 0], [1, "de", 6, 76, 122, 0], [1, "de", 7, 87, 130, 0], [1, "de", 4, 84, 123, 0], [1, "de", 4, 57, 121, 0], [1, "de", 5, 53, 125, 0], [1, "de", 5, 62, 131, 0], [1, "de", 6, 67, 143, 0], [1, "de", 5, 77, 143, 0], [1, "de", 5, 85, 136, 0], [1, "de", 6, 87, 147, 0], [1, "de", 6, 92, 140, 0], [1, "de", 4, 93, 127, 0], [1, "de", 5, 93, 106, 0], [1, "de", 5, 45, 144, 0], [1, "de", 4, 41, 139, 0], [1, "de", 4, 54, 138, 0], [1, "de", 6, 29, 145, 0], [1, "de", 6, 29, 132, 0], [1, "de", 6, 35, 127, 0], [1, "de", 6, 64, 142, 0], [1, "de", 5, 23, 131, 0], [1, "de", 5, 9, 134, 0], [1, "de", 6, 11, 121, 0], [1, "de", 4, 26, 121, 0], [1, "de", 35, 58, 150, 0], [1, "de", 33, 48, 156, 0], [1, "de", 33, 25, 158, 0], [1, "de", 33, 36, 154, 0], [1, "de", 34, 9, 154, 0], [1, "de", 34, 13, 148, 0], [1, "de", 34, 21, 142, 0], [1, "de", 34, 38, 139, 0], [1, "de", 34, 47, 144, 0], [1, "de", 34, 68, 142, 0], [1, "de", 36, 70, 135, 0], [1, "de", 36, 64, 132, 0], [1, "de", 36, 86, 134, 0], [1, "de", 36, 90, 141, 0], [1, "de", 36, 93, 131, 0], [1, "de", 36, 91, 125, 0], [1, "de", 36, 76, 123, 0], [1, "de", 33, 82, 122, 0], [1, "de", 35, 56, 122, 0], [1, "de", 35, 40, 119, 0], [1, "de", 35, 17, 112, 0], [1, "de", 35, 37, 102, 0], [1, "de", 33, 18, 97, 0], [1, "de", 34, 10, 83, 0], [1, "de", 33, 19, 73, 0], [1, "de", 33, 10, 60, 0], [1, "de", 35, 24, 60, 0], [1, "de", 36, 14, 45, 0], [1, "de", 36, 21, 42, 0], [1, "de", 35, 8, 32, 0], [1, "de", 33, 9, 24, 0], [1, "de", 35, 35, 27, 0], [1, "de", 33, 56, 35, 0], [1, "de", 36, 53, 36, 0], [1, "de", 33, 45, 35, 0], [1, "de", 35, 53, 39, 0], [1, "de", 36, 57, 30, 0], [1, "de", 33, 86, 108, 0], [1, "de", 33, 68, 112, 0], [1, "de", 33, 49, 109, 0], [1, "de", 33, 46, 95, 0], [1, "de", 33, 90, 76, 0], [1, "de", 36, 76, 83, 0], [1, "de", 36, 70, 72, 0], [1, "de", 36, 78, 63, 0], [1, "de", 36, 90, 64, 0], [1, "de", 36, 60, 70, 0], [1, "de", 35, 75, 90, 0], [1, "de", 35, 81, 58, 0], [1, "de", 35, 91, 51, 0], [1, "de", 35, 93, 56, 0], [1, "de", 35, 61, 60, 0], [1, "de", 35, 66, 46, 0], [1, "de", 33, 90, 19, 0], [1, "de", 34, 92, 9, 0], [1, "de", 35, 75, 39, 0], [1, "de", 35, 67, 42, 0], [1, "de", 35, 93, 37, 0], [1, "de", 36, 89, 28, 0], [1, "de", 36, 42, 61, 0], [1, "de", 33, 49, 50, 0], [1, "de", 33, 44, 75, 0], [1, "de", 33, 46, 85, 0], [1, "de", 33, 64, 84, 0], [1, "de", 33, 56, 94, 0], [1, "de", 33, 25, 90, 0], [1, "de", 33, 31, 69, 0], [1, "de", 35, 34, 54, 0], [1, "de", 35, 29, 47, 0], [1, "de", 36, 42, 41, 0], [1, "de", 36, 29, 34, 0], [1, "de", 35, 20, 55, 0], [1, "de", 35, 14, 52, 0], [1, "s", 2, 12, 171, 1], [1, "r", 20, 188, 0], [1, "r", 21, 188, 0], [1, "r", 22, 188, 0], [1, "r", 23, 188, 0], [1, "r", 24, 188, 0], [1, "r", 25, 189, 0], [1, "r", 24, 189, 0], [1, "r", 23, 189, 0], [1, "r", 22, 189, 0], [1, "r", 21, 189, 0], [1, "r", 20, 189, 0], [1, "r", 19, 189, 0], [1, "r", 19, 190, 0], [1, "r", 19, 191, 0], [1, "r", 20, 191, 0], [1, "r", 21, 191, 0], [1, "r", 22, 191, 0], [1, "r", 24, 191, 0], [1, "r", 23, 191, 0], [1, "r", 25, 191, 0], [1, "r", 25, 190, 0], [1, "r", 24, 190, 0], [1, "r", 23, 190, 0], [1, "r", 22, 190, 0], [1, "r", 21, 190, 0], [1, "r", 20, 190, 0], [1, "r", 26, 190, 0], [1, "r", 26, 191, 0], [1, "r", 24, 193, 0], [1, "r", 23, 193, 0], [1, "r", 22, 193, 0], [1, "r", 20, 192, 0], [1, "r", 21, 192, 0], [1, "r", 22, 192, 0], [1, "r", 23, 192, 0], [1, "r", 24, 192, 0], [1, "r", 25, 192, 0], [1, "r", 53, 199, 0], [1, "r", 52, 200, 0], [1, "r", 54, 199, 0], [1, "r", 55, 199, 0], [1, "r", 55, 200, 0], [1, "r", 54, 200, 0], [1, "r", 53, 200, 0], [1, "r", 51, 200, 0], [1, "r", 56, 200, 0], [1, "r", 55, 201, 0], [1, "r", 54, 201, 0], [1, "r", 55, 202, 0], [1, "r", 54, 203, 0], [1, "r", 54, 204, 0], [1, "r", 54, 202, 0], [1, "r", 53, 202, 0], [1, "r", 52, 202, 0], [1, "r", 53, 201, 0], [1, "r", 52, 201, 0], [1, "r", 51, 201, 0], [1, "r", 51, 202, 0], [1, "r", 50, 202, 0], [1, "r", 50, 201, 0], [1, "r", 56, 201, 0], [1, "r", 53, 203, 0], [1, "r", 52, 203, 0], [1, "r", 51, 203, 0], [1, "r", 56, 202, 0], [1, "r", 55, 203, 0], [1, "r", 53, 204, 0], [1, "r", 52, 204, 0], [1, "r", 55, 204, 0], [1, "r", 56, 203, 0], [1, "r", 56, 244, 0], [1, "r", 54, 246, 0], [1, "r", 50, 248, 0], [1, "r", 48, 248, 0], [1, "r", 43, 248, 0], [1, "r", 45, 238, 0], [1, "r", 44, 238, 0], [1, "r", 43, 238, 0], [1, "r", 46, 238, 0], [1, "r", 47, 238, 0], [1, "r", 48, 238, 0], [1, "r", 49, 238, 0], [1, "r", 50, 238, 0], [1, "r", 51, 238, 0], [1, "r", 52, 238, 0], [1, "r", 53, 238, 0], [1, "r", 54, 239, 0], [1, "r", 53, 240, 0], [1, "r", 53, 239, 0], [1, "r", 52, 239, 0], [1, "r", 51, 239, 0], [1, "r", 50, 239, 0], [1, "r", 49, 239, 0], [1, "r", 48, 239, 0], [1, "r", 47, 239, 0], [1, "r", 46, 239, 0], [1, "r", 45, 239, 0], [1, "r", 44, 239, 0], [1, "r", 43, 239, 0], [1, "r", 42, 239, 0], [1, "r", 41, 240, 0], [1, "r", 42, 240, 0], [1, "r", 43, 240, 0], [1, "r", 44, 240, 0], [1, "r", 45, 240, 0], [1, "r", 46, 240, 0], [1, "r", 47, 240, 0], [1, "r", 48, 240, 0], [1, "r", 49, 240, 0], [1, "r", 50, 240, 0], [1, "r", 51, 240, 0], [1, "r", 52, 240, 0], [1, "r", 54, 240, 0], [1, "r", 55, 240, 0], [1, "r", 56, 241, 0], [1, "r", 55, 241, 0], [1, "r", 54, 241, 0], [1, "r", 53, 241, 0], [1, "r", 52, 241, 0], [1, "r", 51, 241, 0], [1, "r", 49, 241, 0], [1, "r", 50, 241, 0], [1, "r", 48, 241, 0], [1, "r", 47, 241, 0], [1, "r", 46, 241, 0], [1, "r", 45, 241, 0], [1, "r", 44, 241, 0], [1, "r", 43, 241, 0], [1, "r", 42, 241, 0], [1, "r", 41, 241, 0], [1, "r", 40, 242, 0], [1, "r", 41, 242, 0], [1, "r", 42, 242, 0], [1, "r", 43, 242, 0], [1, "r", 44, 242, 0], [1, "r", 45, 242, 0], [1, "r", 46, 242, 0], [1, "r", 47, 242, 0], [1, "r", 48, 242, 0], [1, "r", 49, 242, 0], [1, "r", 50, 242, 0], [1, "r", 51, 242, 0], [1, "r", 52, 242, 0], [1, "r", 53, 242, 0], [1, "r", 54, 242, 0], [1, "r", 55, 242, 0], [1, "r", 56, 242, 0], [1, "r", 56, 243, 0], [1, "r", 55, 243, 0], [1, "r", 54, 243, 0], [1, "r", 53, 243, 0], [1, "r", 52, 243, 0], [1, "r", 51, 243, 0], [1, "r", 50, 243, 0], [1, "r", 49, 243, 0], [1, "r", 48, 243, 0], [1, "r", 47, 243, 0], [1, "r", 46, 243, 0], [1, "r", 45, 243, 0], [1, "r", 44, 243, 0], [1, "r", 43, 243, 0], [1, "r", 42, 243, 0], [1, "r", 41, 243, 0], [1, "r", 40, 243, 0], [1, "r", 40, 244, 0], [1, "r", 41, 244, 0], [1, "r", 43, 244, 0], [1, "r", 44, 244, 0], [1, "r", 45, 244, 0], [1, "r", 46, 244, 0], [1, "r", 47, 244, 0], [1, "r", 48, 244, 0], [1, "r", 49, 244, 0], [1, "r", 50, 244, 0], [1, "r", 51, 244, 0], [1, "r", 52, 244, 0], [1, "r", 53, 244, 0], [1, "r", 54, 244, 0], [1, "r", 55, 244, 0], [1, "r", 42, 244, 0], [1, "r", 40, 245, 0], [1, "r", 41, 245, 0], [1, "r", 42, 245, 0], [1, "r", 43, 245, 0], [1, "r", 44, 245, 0], [1, "r", 45, 245, 0], [1, "r", 46, 245, 0], [1, "r", 47, 245, 0], [1, "r", 48, 245, 0], [1, "r", 49, 245, 0], [1, "r", 50, 245, 0], [1, "r", 51, 245, 0], [1, "r", 52, 246, 0], [1, "r", 52, 245, 0], [1, "r", 53, 245, 0], [1, "r", 54, 245, 0], [1, "r", 55, 245, 0], [1, "r", 53, 246, 0], [1, "r", 51, 246, 0], [1, "r", 50, 246, 0], [1, "r", 49, 246, 0], [1, "r", 48, 246, 0], [1, "r", 47, 246, 0], [1, "r", 45, 246, 0], [1, "r", 46, 246, 0], [1, "r", 44, 246, 0], [1, "r", 43, 246, 0], [1, "r", 42, 246, 0], [1, "r", 41, 246, 0], [1, "r", 42, 247, 0], [1, "r", 43, 247, 0], [1, "r", 44, 247, 0], [1, "r", 45, 247, 0], [1, "r", 46, 247, 0], [1, "r", 47, 247, 0], [1, "r", 48, 247, 0], [1, "r", 50, 247, 0], [1, "r", 51, 247, 0], [1, "r", 52, 247, 0], [1, "r", 53, 247, 0], [1, "r", 54, 247, 0], [1, "r", 49, 247, 0], [1, "r", 49, 248, 0], [1, "r", 47, 248, 0], [1, "r", 46, 248, 0], [1, "r", 45, 248, 0], [1, "r", 51, 248, 0], [1, "r", 55, 246, 1], [1, "r", 55, 247, 1], [1, "r", 56, 247, 1], [1, "r", 56, 248, 1], [1, "r", 95, 270, 1], [1, "r", 93, 270, 1], [1, "r", 94, 270, 1], [1, "r", 95, 271, 1], [1, "r", 94, 271, 1], [1, "r", 93, 271, 1], [1, "r", 94, 282, 1], [1, "r", 93, 282, 1], [1, "r", 93, 281, 1], [1, "r", 92, 281, 1], [1, "r", 92, 280, 1], [1, "r", 91, 280, 1], [1, "r", 90, 279, 1], [1, "r", 95, 275, 1], [1, "r", 95, 274, 1], [1, "r", 95, 273, 1], [1, "r", 95, 272, 1], [1, "r", 94, 274, 1], [1, "r", 94, 273, 1], [1, "r", 94, 272, 1], [1, "r", 93, 272, 1], [1, "r", 93, 273, 1], [1, "r", 93, 274, 1], [1, "r", 92, 273, 1], [1, "r", 92, 272, 1], [1, "r", 92, 270, 1], [1, "r", 92, 271, 1], [1, "r", 92, 269, 1], [1, "r", 90, 269, 1], [1, "r", 91, 269, 1], [1, "r", 91, 271, 1], [1, "r", 91, 270, 1], [1, "r", 95, 278, 1], [1, "r", 95, 277, 1], [1, "r", 95, 276, 1], [1, "r", 94, 276, 1], [1, "r", 94, 275, 1], [1, "r", 93, 275, 1], [1, "r", 92, 274, 1], [1, "r", 92, 275, 1], [1, "r", 91, 275, 1], [1, "r", 90, 275, 1], [1, "r", 89, 274, 1], [1, "r", 90, 274, 1], [1, "r", 89, 275, 1], [1, "r", 88, 274, 1], [1, "r", 88, 273, 1], [1, "r", 86, 272, 1], [1, "r", 85, 271, 1], [1, "r", 86, 271, 1], [1, "r", 87, 272, 1], [1, "r", 55, 248, 1], [1, "r", 54, 248, 1], [1, "r", 56, 249, 1], [1, "r", 55, 249, 1], [1, "r", 55, 250, 1], [1, "r", 56, 250, 1], [1, "r", 57, 250, 1], [1, "r", 57, 249, 1], [1, "r", 59, 250, 1], [1, "r", 58, 250, 1], [1, "r", 60, 250, 1], [1, "r", 61, 251, 1], [1, "r", 60, 251, 1], [1, "r", 62, 251, 1], [1, "r", 62, 252, 1], [1, "r", 63, 252, 1], [1, "r", 58, 251, 1], [1, "r", 57, 251, 1], [1, "r", 56, 251, 1], [1, "r", 58, 252, 1], [1, "r", 57, 252, 1], [1, "r", 57, 253, 1], [1, "r", 58, 253, 1], [1, "r", 58, 254, 1], [1, "r", 59, 255, 1], [1, "r", 58, 255, 1], [1, "r", 57, 254, 1], [1, "r", 56, 252, 1], [1, "r", 55, 251, 1], [1, "r", 60, 255, 1], [1, "r", 61, 255, 1], [1, "r", 61, 256, 1], [1, "r", 60, 256, 1], [1, "r", 62, 256, 1], [1, "r", 62, 257, 1], [1, "r", 61, 257, 1], [1, "r", 64, 253, 1], [1, "r", 64, 254, 1], [1, "r", 65, 254, 1], [1, "r", 61, 250, 1], [1, "r", 64, 252, 1], [1, "r", 65, 253, 1], [1, "r", 66, 254, 1], [1, "r", 65, 255, 1], [1, "r", 64, 255, 1], [1, "r", 64, 256, 1], [1, "r", 65, 256, 1], [1, "r", 65, 257, 1], [1, "r", 64, 257, 1], [1, "r", 63, 257, 1], [1, "r", 62, 258, 1], [1, "r", 63, 258, 1], [1, "r", 64, 258, 1], [1, "r", 66, 255, 1], [1, "r", 66, 256, 1], [1, "r", 66, 257, 1], [1, "r", 66, 258, 1], [1, "r", 65, 258, 1], [1, "r", 67, 258, 1], [1, "r", 67, 257, 1], [1, "r", 67, 259, 1], [1, "r", 66, 259, 1], [1, "r", 65, 259, 1], [1, "r", 56, 246, 1], [1, "r", 56, 245, 1], [1, "r", 68, 258, 1], [1, "r", 68, 259, 1], [1, "r", 68, 260, 1], [1, "r", 69, 260, 1], [1, "r", 69, 261, 1], [1, "r", 70, 261, 1], [1, "r", 71, 261, 1], [1, "r", 67, 260, 1], [1, "r", 89, 269, 1], [1, "r", 89, 268, 1], [1, "r", 90, 268, 1], [1, "r", 82, 267, 1], [1, "r", 83, 267, 1], [1, "r", 80, 266, 1], [1, "r", 81, 266, 1], [1, "r", 81, 267, 1], [1, "r", 79, 266, 1], [1, "r", 78, 265, 1], [1, "r", 77, 265, 1], [1, "r", 76, 264, 1], [1, "r", 75, 264, 1], [1, "r", 75, 263, 1], [1, "r", 74, 263, 1], [1, "r", 74, 262, 1], [1, "r", 72, 262, 1], [1, "r", 73, 262, 1], [1, "r", 71, 262, 1], [1, "r", 85, 270, 1], [1, "r", 84, 270, 1], [1, "r", 84, 269, 1], [1, "r", 83, 269, 1], [1, "r", 82, 269, 1], [1, "r", 81, 269, 1], [1, "r", 81, 268, 1], [1, "r", 82, 268, 1], [1, "r", 83, 268, 1], [1, "r", 80, 268, 1], [1, "r", 80, 267, 1], [1, "r", 79, 267, 1], [1, "r", 78, 266, 1], [1, "r", 76, 265, 1], [1, "r", 75, 262, 1], [1, "r", 90, 280, 1], [1, "r", 89, 280, 1], [1, "r", 89, 279, 1], [1, "r", 88, 279, 1], [1, "r", 88, 278, 1], [1, "r", 87, 277, 1], [1, "r", 86, 276, 1], [1, "r", 86, 275, 1], [1, "r", 86, 274, 1], [1, "r", 86, 273, 1], [1, "r", 85, 273, 1], [1, "r", 85, 272, 1], [1, "r", 85, 274, 1], [1, "r", 86, 277, 1], [1, "r", 87, 278, 1], [1, "r", 84, 271, 1], [1, "r", 83, 270, 1], [1, "r", 87, 273, 1], [1, "r", 91, 274, 1], [1, "r", 89, 273, 1], [1, "r", 88, 272, 1], [1, "r", 91, 281, 1], [1, "r", 92, 282, 1], [1, "r", 88, 280, 1], [1, "r", 87, 279, 1], [1, "r", 85, 275, 1], [1, "r", 84, 273, 1], [1, "r", 84, 272, 1], [1, "r", 83, 271, 1], [1, "r", 82, 270, 1], [1, "r", 84, 267, 0], [1, "r", 85, 267, 0], [1, "r", 76, 262, 0], [1, "r", 77, 262, 0], [1, "r", 88, 268, 0], [1, "r", 78, 262, 0], [1, "r", 79, 262, 0], [1, "r", 80, 262, 0], [1, "r", 80, 263, 0], [1, "r", 81, 263, 0], [1, "r", 82, 263, 0], [1, "r", 83, 263, 0], [1, "r", 84, 263, 0], [1, "r", 85, 263, 0], [1, "r", 88, 262, 0], [1, "r", 89, 262, 0], [1, "r", 90, 262, 0], [1, "r", 87, 262, 0], [1, "r", 86, 262, 0], [1, "r", 86, 263, 0], [1, "r", 87, 263, 0], [1, "r", 91, 262, 0], [1, "r", 95, 262, 0], [1, "r", 94, 262, 0], [1, "r", 86, 267, 0], [1, "r", 87, 267, 0], [1, "r", 87, 268, 0], [1, "r", 86, 268, 0], [1, "r", 74, 189, 0], [1, "r", 75, 189, 0], [1, "r", 76, 189, 0], [1, "r", 77, 189, 0], [1, "r", 78, 190, 0], [1, "r", 77, 190, 0], [1, "r", 75, 190, 0], [1, "r", 76, 190, 0], [1, "r", 74, 190, 0], [1, "r", 73, 190, 0], [1, "r", 78, 191, 0], [1, "r", 76, 191, 0], [1, "r", 77, 191, 0], [1, "r", 75, 191, 0], [1, "r", 74, 191, 0], [1, "r", 78, 192, 0], [1, "r", 77, 192, 0], [1, "r", 76, 192, 0], [1, "r", 75, 192, 0], [1, "r", 74, 192, 0], [1, "r", 73, 191, 0], [1, "f", 1, 96, 22, 1], [1, "s", 1, 97, 22, 1], [1, "f", 1, 98, 22, 1], [1, "s", 0, 99, 22, 1], [1, "s", 1, 100, 21, 1], [1, "s", 1, 96, 49, 1], [1, "s", 1, 100, 50, 1], [1, "s", 0, 99, 49, 1], [1, "s", 0, 97, 49, 1], [1, "f", 1, 98, 49, 1], [1, "r", 70, 218, 0], [1, "r", 71, 218, 0], [1, "r", 72, 218, 0], [1, "r", 73, 218, 0], [1, "r", 74, 219, 0], [1, "r", 73, 219, 0], [1, "r", 72, 219, 0], [1, "r", 71, 219, 0], [1, "r", 70, 219, 0], [1, "r", 73, 220, 0], [1, "r", 72, 220, 0], [1, "r", 71, 220, 0], [1, "r", 72, 221, 0], [1, "r", 71, 221, 0], [1, "r", 70, 221, 0], [1, "r", 69, 221, 0], [1, "r", 68, 221, 0], [1, "r", 70, 220, 0], [1, "r", 69, 220, 0], [1, "r", 69, 219, 0], [1, "r", 68, 220, 0], [1, "r", 73, 221, 0], [1, "r", 73, 222, 0], [1, "r", 71, 222, 0], [1, "r", 72, 222, 0], [1, "r", 74, 221, 0], [1, "r", 74, 220, 0], [1, "r", 75, 220, 0], [1, "r", 75, 221, 0], [1, "r", 70, 222, 0], [1, "r", 69, 222, 0], [1, "r", 29, 217, 0], [1, "r", 30, 217, 0], [1, "r", 31, 217, 0], [1, "r", 32, 217, 0], [1, "r", 31, 219, 0], [1, "r", 30, 219, 0], [1, "r", 29, 219, 0], [1, "r", 27, 219, 0], [1, "r", 25, 219, 0], [1, "r", 26, 219, 0], [1, "r", 28, 219, 0], [1, "r", 26, 218, 0], [1, "r", 27, 218, 0], [1, "r", 28, 218, 0], [1, "r", 29, 218, 0], [1, "r", 30, 218, 0], [1, "r", 28, 217, 0], [1, "r", 26, 217, 0], [1, "r", 27, 217, 0], [1, "r", 28, 216, 0], [1, "r", 29, 216, 0], [1, "r", 30, 216, 0], [1, "r", 31, 218, 0], [1, "r", 32, 218, 0], [1, "r", 31, 216, 0], [1, "r", 31, 221, 0], [1, "r", 31, 220, 0], [1, "r", 30, 220, 0], [1, "r", 29, 220, 0], [1, "r", 28, 220, 0], [1, "r", 27, 220, 0], [1, "r", 26, 220, 0], [1, "r", 25, 218, 0], [1, "r", 27, 221, 0], [1, "r", 28, 221, 0], [1, "r", 29, 221, 0], [1, "r", 30, 221, 0], [1, "r", 32, 220, 0], [1, "r", 32, 219, 0], [1, "r", 33, 218, 0], [1, "r", 33, 219, 0], [1, "r", 75, 238, 0], [1, "r", 76, 238, 0], [1, "r", 77, 239, 0], [1, "r", 76, 239, 0], [1, "r", 75, 239, 0], [1, "r", 74, 239, 0], [1, "r", 76, 240, 0], [1, "r", 77, 240, 0], [1, "r", 78, 240, 0], [1, "r", 77, 241, 0], [1, "r", 76, 241, 0], [1, "r", 75, 241, 0], [1, "r", 75, 240, 0], [1, "r", 74, 240, 0], [1, "r", 78, 239, 0], [1, "r", 77, 238, 0], [1, "r", 18, 253, 0], [1, "r", 19, 252, 0], [1, "r", 20, 252, 0], [1, "r", 21, 253, 0], [1, "r", 23, 254, 0], [1, "r", 20, 254, 0], [1, "r", 19, 254, 0], [1, "r", 22, 254, 0], [1, "r", 18, 254, 0], [1, "r", 19, 253, 0], [1, "r", 20, 253, 0], [1, "r", 21, 254, 0], [1, "r", 22, 253, 0], [1, "r", 21, 255, 0], [1, "r", 20, 255, 0], [1, "r", 19, 255, 0], [1, "r", 18, 255, 0], [1, "r", 17, 255, 0], [1, "r", 17, 254, 0], [1, "r", 22, 255, 0], [1, "r", 19, 256, 0], [1, "r", 20, 256, 0], [1, "r", 21, 256, 0], [1, "r", 39, 270, 0], [1, "r", 40, 270, 0], [1, "r", 41, 270, 0], [1, "r", 43, 270, 0], [1, "r", 44, 270, 0], [1, "r", 46, 270, 0], [1, "r", 42, 270, 0], [1, "r", 45, 270, 0], [1, "r", 44, 269, 0], [1, "r", 43, 269, 0], [1, "r", 42, 269, 0], [1, "r", 40, 269, 0], [1, "r", 41, 269, 0], [1, "r", 45, 271, 0], [1, "r", 44, 271, 0], [1, "r", 43, 271, 0], [1, "r", 42, 271, 0], [1, "r", 41, 271, 0], [1, "r", 40, 271, 0], [1, "r", 39, 271, 0], [1, "r", 46, 271, 0], [1, "r", 45, 272, 0], [1, "r", 44, 272, 0], [1, "r", 43, 272, 0], [1, "r", 42, 272, 0], [1, "r", 19, 284, 0], [1, "r", 20, 284, 0], [1, "r", 21, 285, 0], [1, "r", 22, 285, 0], [1, "r", 23, 286, 0], [1, "r", 22, 288, 0], [1, "r", 20, 288, 0], [1, "r", 18, 288, 0], [1, "r", 17, 287, 0], [1, "r", 16, 287, 0], [1, "r", 16, 286, 0], [1, "r", 17, 286, 0], [1, "r", 18, 286, 0], [1, "r", 19, 286, 0], [1, "r", 20, 286, 0], [1, "r", 21, 286, 0], [1, "r", 22, 286, 0], [1, "r", 20, 285, 0], [1, "r", 19, 285, 0], [1, "r", 18, 285, 0], [1, "r", 17, 285, 0], [1, "r", 19, 287, 0], [1, "r", 18, 287, 0], [1, "r", 20, 287, 0], [1, "r", 21, 287, 0], [1, "r", 22, 287, 0], [1, "r", 23, 287, 0], [1, "r", 21, 288, 0], [1, "r", 19, 288, 0], [1, "r", 17, 288, 0], [1, "r", 19, 289, 0], [1, "r", 21, 289, 0], [1, "r", 22, 289, 0], [1, "r", 20, 289, 0], [1, "r", 23, 288, 0], [1, "r", 24, 287, 0], [1, "r", 24, 286, 0], [1, "r", 23, 285, 0], [1, "r", 66, 286, 0], [1, "r", 64, 287, 0], [1, "r", 63, 287, 0], [1, "r", 60, 287, 0], [1, "r", 59, 285, 0], [1, "r", 58, 284, 0], [1, "r", 59, 283, 0], [1, "r", 65, 283, 0], [1, "r", 64, 283, 0], [1, "r", 63, 283, 0], [1, "r", 62, 283, 0], [1, "r", 61, 283, 0], [1, "r", 60, 283, 0], [1, "r", 59, 284, 0], [1, "r", 58, 285, 0], [1, "r", 60, 286, 0], [1, "r", 59, 286, 0], [1, "r", 61, 287, 0], [1, "r", 62, 287, 0], [1, "r", 61, 286, 0], [1, "r", 62, 286, 0], [1, "r", 63, 286, 0], [1, "r", 64, 286, 0], [1, "r", 65, 286, 0], [1, "r", 67, 285, 0], [1, "r", 66, 285, 0], [1, "r", 65, 285, 0], [1, "r", 64, 285, 0], [1, "r", 63, 285, 0], [1, "r", 62, 285, 0], [1, "r", 61, 285, 0], [1, "r", 60, 285, 0], [1, "r", 60, 284, 0], [1, "r", 61, 284, 0], [1, "r", 62, 284, 0], [1, "r", 63, 284, 0], [1, "r", 64, 284, 0], [1, "r", 65, 284, 0], [1, "r", 66, 284, 0], [1, "r", 65, 287, 0], [1, "r", 67, 286, 0], [1, "p", 0, 13, 189, 1], [1, "p", 0, 32, 184, 1], [1, "p", 0, 47, 191, 1], [1, "p", 0, 64, 184, 1], [1, "p", 0, 84, 192, 1], [1, "p", 0, 78, 207, 1], [1, "p", 0, 58, 216, 1], [1, "p", 0, 41, 211, 1], [1, "p", 0, 18, 211, 1], [1, "p", 0, 14, 230, 1], [1, "p", 0, 29, 237, 1], [1, "p", 0, 50, 230, 1], [1, "p", 0, 78, 241, 1], [1, "p", 0, 74, 256, 1], [1, "p", 0, 68, 266, 1], [1, "p", 0, 48, 259, 1], [1, "p", 0, 31, 263, 1], [1, "p", 0, 18, 274, 1], [1, "p", 0, 33, 283, 1], [1, "p", 0, 66, 287, 1], [1, "p", 0, 82, 291, 1], [1, "p", 0, 16, 295, 1], [1, "p", 0, 45, 294, 1], [1, "p", 0, 18, 252, 1], [1, "p", 0, 79, 227, 1], [1, "p", 0, 32, 200, 1], [1, "p", 0, 64, 200, 1], [1, "s", 0, 21, 193, 1], [1, "s", 1, 18, 189, 1], [1, "s", 2, 26, 189, 1], [1, "b", 1, 15, 181, 0], [1, "b", 2, 18, 190, 0], [1, "b", 2, 29, 193, 0], [1, "t", 3, 16, 182, 0], [1, "t", 3, 13, 195, 0], [1, "t", 4, 16, 183, 0], [1, "t", 5, 10, 184, 0], [1, "t", 5, 23, 182, 0], [1, "t", 4, 30, 187, 0], [1, "t", 1, 26, 192, 0], [1, "b", 1, 25, 188, 0], [1, "s", 1, 24, 181, 1], [1, "t", 3, 33, 183, 0], [1, "b", 1, 36, 189, 0], [1, "t", 2, 35, 190, 0], [1, "b", 3, 19, 200, 0], [1, "s", 0, 28, 194, 1], [1, "s", 1, 32, 196, 1], [1, "s", 1, 36, 183, 1], [1, "s", 2, 38, 184, 1], [1, "s", 2, 10, 192, 1], [1, "s", 2, 12, 183, 1], [1, "s", 1, 15, 199, 1], [1, "b", 0, 12, 202, 0], [1, "t", 2, 13, 203, 0], [1, "t", 4, 20, 200, 0], [1, "t", 4, 12, 194, 0], [1, "t", 5, 15, 205, 0], [1, "t", 5, 29, 200, 0], [1, "t", 3, 28, 201, 0], [1, "s", 2, 25, 199, 1], [1, "s", 1, 22, 204, 1], [1, "g", 2, 25, 205, 1], [1, "b", 1, 27, 216, 0], [1, "s", 1, 25, 217, 1], [1, "s", 1, 33, 217, 1], [1, "s", 2, 35, 215, 1], [1, "s", 0, 32, 221, 1], [1, "t", 2, 31, 222, 0], [1, "t", 4, 26, 221, 0], [1, "b", 3, 27, 222, 0], [1, "b", 0, 17, 217, 0], [1, "t", 3, 18, 216, 0], [1, "t", 4, 13, 215, 0], [1, "t", 5, 30, 213, 0], [1, "t", 5, 24, 208, 0], [1, "s", 1, 12, 216, 1], [1, "s", 2, 11, 210, 1], [1, "s", 2, 34, 223, 1], [1, "b", 2, 36, 218, 0], [1, "t", 4, 40, 206, 0], [1, "t", 5, 35, 203, 0], [1, "t", 3, 39, 206, 0], [1, "b", 1, 34, 204, 0], [1, "s", 1, 33, 206, 1], [1, "s", 1, 42, 203, 1], [1, "s", 0, 47, 196, 1], [1, "b", 2, 40, 196, 0], [1, "t", 4, 39, 197, 0], [1, "t", 5, 44, 187, 0], [1, "b", 1, 46, 181, 0], [1, "t", 2, 47, 182, 0], [1, "b", 0, 57, 182, 0], [1, "b", 3, 56, 183, 0], [1, "t", 4, 55, 184, 0], [1, "t", 5, 62, 195, 0], [1, "s", 1, 51, 185, 1], [1, "s", 2, 62, 180, 1], [1, "s", 2, 61, 188, 1], [1, "s", 1, 61, 189, 1], [1, "s", 2, 48, 195, 1], [1, "b", 1, 51, 199, 0], [1, "t", 2, 52, 199, 0], [1, "t", 3, 56, 204, 0], [1, "t", 4, 57, 204, 0], [1, "t", 4, 51, 204, 0], [1, "s", 1, 52, 205, 1], [1, "s", 2, 57, 200, 1], [1, "s", 1, 56, 199, 1], [1, "b", 0, 55, 192, 0], [1, "t", 3, 56, 193, 0], [1, "t", 4, 50, 190, 0], [1, "b", 1, 76, 188, 0], [1, "t", 2, 75, 188, 0], [1, "t", 2, 73, 192, 0], [1, "t", 4, 72, 191, 0], [1, "t", 5, 78, 193, 0], [1, "b", 0, 79, 192, 0], [1, "s", 2, 79, 190, 1], [1, "s", 1, 74, 194, 1], [1, "s", 1, 72, 187, 1], [1, "s", 0, 74, 183, 1], [1, "s", 1, 75, 183, 1], [1, "t", 2, 69, 181, 0], [1, "t", 4, 70, 182, 0], [1, "t", 5, 69, 180, 0], [1, "b", 1, 65, 189, 0], [1, "b", 2, 66, 189, 0], [1, "t", 3, 64, 188, 0], [1, "t", 4, 67, 192, 0], [1, "b", 2, 85, 183, 0], [1, "t", 1, 84, 184, 0], [1, "t", 4, 81, 180, 0], [1, "t", 5, 89, 180, 0], [1, "t", 0, 90, 188, 0], [1, "t", 3, 89, 190, 0], [1, "s", 1, 87, 187, 1], [1, "s", 2, 87, 197, 1], [1, "b", 1, 84, 200, 0], [1, "t", 2, 83, 201, 0], [1, "t", 4, 87, 207, 0], [1, "s", 2, 79, 202, 1], [1, "s", 1, 80, 203, 1], [1, "t", 0, 71, 200, 0], [1, "b", 2, 72, 201, 0], [1, "t", 2, 65, 205, 0], [1, "t", 1, 66, 206, 0], [1, "t", 4, 63, 209, 0], [1, "t", 5, 73, 203, 0], [1, "s", 0, 70, 207, 1], [1, "s", 1, 71, 206, 1], [1, "s", 2, 68, 199, 1], [1, "s", 1, 64, 213, 1], [1, "t", 0, 85, 213, 0], [1, "b", 2, 84, 212, 0], [1, "t", 3, 77, 209, 0], [1, "t", 4, 83, 216, 0], [1, "t", 4, 73, 209, 0], [1, "b", 0, 86, 222, 0], [1, "b", 3, 87, 221, 0], [1, "s", 1, 80, 214, 1], [1, "s", 2, 87, 216, 1], [1, "s", 2, 84, 224, 1], [1, "s", 1, 77, 227, 1], [1, "t", 1, 74, 222, 0], [1, "b", 1, 69, 218, 0], [1, "b", 2, 75, 219, 0], [1, "s", 2, 74, 218, 1], [1, "s", 1, 69, 223, 1], [1, "s", 1, 77, 221, 1], [1, "b", 1, 72, 211, 0], [1, "b", 1, 85, 232, 0], [1, "t", 2, 84, 233, 0], [1, "t", 2, 78, 238, 0], [1, "b", 1, 77, 237, 0], [1, "t", 5, 87, 236, 0], [1, "t", 5, 76, 229, 0], [1, "b", 2, 74, 241, 0], [1, "s", 0, 73, 242, 1], [1, "s", 0, 81, 238, 1], [1, "s", 1, 82, 237, 1], [1, "s", 2, 72, 237, 1], [1, "s", 2, 78, 242, 1], [1, "b", 1, 66, 230, 0], [1, "b", 2, 62, 229, 0], [1, "t", 4, 67, 231, 0], [1, "t", 4, 62, 228, 0], [1, "t", 5, 64, 233, 0], [1, "t", 2, 65, 234, 0], [1, "t", 2, 51, 220, 0], [1, "t", 1, 50, 218, 0], [1, "b", 1, 45, 223, 0], [1, "b", 2, 46, 224, 0], [1, "t", 4, 49, 218, 0], [1, "t", 4, 47, 225, 0], [1, "s", 1, 50, 215, 1], [1, "s", 2, 51, 213, 1], [1, "s", 2, 42, 227, 1], [1, "s", 1, 44, 227, 1], [1, "s", 1, 60, 230, 1], [1, "s", 2, 59, 231, 1], [1, "b", 1, 85, 252, 0], [1, "t", 2, 84, 251, 0], [1, "t", 2, 74, 250, 0], [1, "t", 0, 75, 251, 0], [1, "b", 0, 83, 246, 0], [1, "t", 3, 82, 247, 0], [1, "t", 4, 81, 259, 0], [1, "t", 4, 69, 249, 0], [1, "t", 5, 87, 246, 0], [1, "t", 5, 75, 252, 0], [1, "s", 1, 79, 257, 1], [1, "s", 2, 78, 249, 1], [1, "s", 2, 80, 258, 1], [1, "s", 1, 88, 254, 1], [1, "s", 1, 85, 264, 1], [1, "s", 2, 89, 263, 1], [1, "s", 2, 87, 269, 1], [1, "s", 0, 84, 268, 1], [1, "s", 2, 76, 267, 1], [1, "s", 1, 66, 261, 1], [1, "s", 1, 87, 274, 1], [1, "s", 1, 76, 263, 1], [1, "s", 1, 59, 251, 1], [1, "s", 0, 59, 252, 1], [1, "t", 2, 86, 265, 0], [1, "t", 0, 78, 270, 0], [1, "t", 2, 79, 271, 0], [1, "t", 0, 77, 260, 0], [1, "t", 3, 78, 261, 0], [1, "b", 1, 71, 264, 0], [1, "b", 1, 88, 269, 0], [1, "t", 5, 84, 264, 0], [1, "t", 5, 79, 261, 0], [1, "t", 5, 72, 265, 0], [1, "t", 5, 77, 270, 0], [1, "t", 0, 87, 261, 0], [1, "t", 2, 86, 260, 0], [1, "t", 4, 84, 255, 0], [1, "t", 4, 68, 255, 0], [1, "t", 1, 67, 254, 0], [1, "t", 2, 65, 262, 0], [1, "t", 1, 57, 260, 0], [1, "t", 2, 58, 259, 0], [1, "b", 1, 63, 256, 0], [1, "b", 1, 52, 248, 0], [1, "t", 2, 53, 248, 0], [1, "s", 1, 50, 253, 1], [1, "s", 2, 67, 263, 1], [1, "s", 2, 52, 252, 1], [1, "s", 2, 71, 244, 1], [1, "b", 0, 57, 245, 0], [1, "t", 2, 58, 244, 0], [1, "b", 1, 53, 237, 0], [1, "t", 2, 54, 237, 0], [1, "t", 2, 41, 238, 0], [1, "t", 1, 42, 237, 0], [1, "t", 5, 57, 235, 0], [1, "t", 5, 60, 246, 0], [1, "t", 5, 50, 252, 0], [1, "t", 1, 42, 248, 0], [1, "b", 1, 43, 249, 0], [1, "b", 3, 37, 243, 0], [1, "s", 0, 50, 236, 1], [1, "s", 2, 39, 247, 1], [1, "s", 2, 51, 235, 1], [1, "s", 2, 60, 243, 1], [1, "s", 2, 36, 240, 1], [1, "s", 2, 43, 254, 1], [1, "s", 1, 42, 254, 1], [1, "t", 1, 38, 233, 0], [1, "t", 2, 35, 235, 0], [1, "t", 4, 33, 228, 0], [1, "t", 4, 33, 245, 0], [1, "t", 4, 43, 235, 0], [1, "t", 5, 45, 249, 0], [1, "t", 5, 41, 253, 0], [1, "b", 1, 20, 227, 0], [1, "b", 1, 14, 240, 0], [1, "t", 3, 21, 227, 0], [1, "t", 3, 27, 234, 0], [1, "t", 3, 15, 241, 0], [1, "t", 3, 12, 229, 0], [1, "t", 4, 17, 224, 0], [1, "t", 4, 11, 231, 0], [1, "t", 4, 22, 238, 0], [1, "t", 4, 11, 239, 0], [1, "t", 1, 22, 243, 0], [1, "b", 2, 23, 242, 0], [1, "s", 1, 23, 238, 1], [1, "s", 1, 22, 228, 1], [1, "s", 2, 24, 228, 1], [1, "s", 2, 21, 236, 1], [1, "s", 0, 13, 228, 1], [1, "s", 0, 16, 242, 1], [1, "s", 1, 15, 244, 1], [1, "s", 1, 34, 236, 1], [1, "t", 1, 26, 249, 0], [1, "t", 1, 22, 256, 0], [1, "t", 2, 23, 255, 0], [1, "b", 1, 17, 256, 0], [1, "b", 2, 18, 256, 0], [1, "s", 0, 21, 252, 1], [1, "s", 2, 20, 250, 1], [1, "s", 2, 23, 259, 1], [1, "s", 1, 13, 257, 1], [1, "t", 1, 31, 254, 0], [1, "t", 2, 32, 254, 0], [1, "t", 4, 28, 254, 0], [1, "t", 4, 34, 258, 0], [1, "t", 0, 29, 260, 0], [1, "b", 2, 30, 261, 0], [1, "t", 0, 43, 262, 0], [1, "t", 2, 42, 263, 0], [1, "t", 4, 46, 264, 0], [1, "b", 1, 39, 265, 0], [1, "b", 1, 58, 267, 0], [1, "t", 2, 57, 268, 0], [1, "t", 4, 62, 270, 0], [1, "t", 5, 52, 273, 0], [1, "s", 1, 52, 269, 1], [1, "s", 1, 41, 272, 1], [1, "s", 2, 41, 274, 1], [1, "t", 2, 42, 268, 0], [1, "t", 0, 43, 268, 0], [1, "b", 1, 46, 272, 0], [1, "b", 1, 14, 265, 0], [1, "t", 2, 15, 266, 0], [1, "t", 4, 19, 264, 0], [1, "t", 4, 29, 263, 0], [1, "t", 4, 11, 269, 0], [1, "t", 1, 29, 271, 0], [1, "b", 2, 28, 272, 0], [1, "t", 2, 24, 267, 0], [1, "t", 2, 20, 279, 0], [1, "t", 0, 19, 278, 0], [1, "t", 3, 13, 278, 0], [1, "b", 0, 21, 284, 0], [1, "b", 0, 18, 289, 0], [1, "t", 2, 20, 283, 0], [1, "t", 2, 19, 290, 0], [1, "t", 4, 19, 283, 0], [1, "t", 4, 20, 290, 0], [1, "s", 1, 16, 285, 1], [1, "s", 1, 24, 288, 1], [1, "s", 2, 26, 287, 1], [1, "s", 2, 16, 278, 1], [1, "s", 1, 21, 268, 1], [1, "s", 2, 19, 268, 1], [1, "t", 0, 12, 294, 0], [1, "b", 1, 13, 295, 0], [1, "t", 3, 13, 291, 0], [1, "t", 3, 10, 299, 0], [1, "t", 4, 11, 287, 0], [1, "t", 4, 17, 298, 0], [1, "t", 1, 27, 294, 0], [1, "b", 2, 26, 295, 0], [1, "t", 3, 33, 297, 0], [1, "b", 1, 48, 278, 0], [1, "b", 0, 46, 280, 0], [1, "b", 2, 50, 280, 0], [1, "t", 0, 44, 282, 0], [1, "b", 1, 49, 283, 0], [1, "b", 0, 51, 278, 0], [1, "b", 3, 50, 279, 0], [1, "b", 3, 44, 284, 0], [1, "b", 0, 47, 284, 0], [1, "b", 2, 42, 283, 0], [1, "t", 4, 51, 277, 0], [1, "b", 1, 44, 286, 0], [1, "b", 2, 46, 286, 0], [1, "b", 1, 42, 285, 0], [1, "b", 3, 41, 286, 0], [1, "t", 5, 42, 287, 0], [1, "b", 1, 42, 278, 0], [1, "b", 2, 43, 279, 0], [1, "b", 0, 40, 280, 0], [1, "t", 4, 39, 283, 0], [1, "t", 4, 39, 279, 0], [1, "t", 5, 43, 277, 0], [1, "t", 5, 47, 287, 0], [1, "t", 4, 46, 277, 0], [1, "t", 4, 45, 290, 0], [1, "t", 4, 36, 285, 0], [1, "t", 3, 35, 284, 0], [1, "t", 3, 36, 272, 0], [1, "t", 4, 35, 271, 0], [1, "t", 1, 29, 279, 0], [1, "b", 1, 32, 277, 0], [1, "t", 3, 31, 278, 0], [1, "b", 2, 28, 280, 0], [1, "t", 4, 29, 286, 0], [1, "t", 5, 28, 275, 0], [1, "t", 3, 37, 292, 0], [1, "b", 1, 36, 291, 0], [1, "b", 0, 34, 298, 0], [1, "t", 4, 31, 292, 0], [1, "t", 4, 46, 295, 0], [1, "t", 4, 59, 287, 0], [1, "b", 1, 58, 286, 0], [1, "s", 1, 68, 284, 1], [1, "s", 2, 70, 286, 1], [1, "s", 0, 67, 284, 1], [1, "t", 3, 66, 283, 0], [1, "t", 1, 65, 282, 0], [1, "b", 1, 64, 288, 0], [1, "t", 3, 60, 293, 0], [1, "t", 1, 61, 294, 0], [1, "b", 1, 76, 294, 0], [1, "t", 5, 75, 295, 0], [1, "t", 5, 56, 293, 0], [1, "t", 5, 59, 281, 0], [1, "t", 5, 67, 291, 0], [1, "b", 0, 88, 293, 0], [1, "t", 2, 89, 292, 0], [1, "t", 2, 85, 286, 0], [1, "t", 4, 88, 289, 0], [1, "t", 4, 79, 287, 0], [1, "b", 1, 84, 285, 0], [1, "t", 3, 75, 284, 0], [1, "b", 0, 75, 278, 0], [1, "t", 3, 74, 277, 0], [1, "t", 4, 81, 276, 0], [1, "t", 2, 65, 276, 0], [1, "b", 1, 66, 275, 0], [1, "g", 0, 45, 261, 1], [1, "g", 1, 39, 258, 1], [1, "g", 0, 35, 250, 1], [1, "g", 2, 22, 247, 1], [1, "g", 2, 27, 227, 1], [1, "g", 2, 63, 218, 1], [1, "g", 1, 56, 224, 1], [1, "g", 0, 46, 231, 1], [1, "g", 1, 65, 240, 1], [1, "g", 2, 67, 238, 1], [1, "g", 2, 79, 232, 1], [1, "g", 2, 72, 253, 1], [1, "g", 2, 62, 264, 1], [1, "g", 2, 28, 267, 1], [1, "g", 2, 58, 274, 1], [1, "de", 2, 14, 182, 0], [1, "de", 2, 24, 182, 0], [1, "de", 0, 11, 185, 0], [1, "de", 0, 14, 194, 0], [1, "de", 1, 25, 196, 0], [1, "de", 3, 31, 183, 0], [1, "de", 0, 38, 181, 0], [1, "de", 2, 45, 186, 0], [1, "de", 1, 38, 191, 0], [1, "de", 0, 56, 181, 0], [1, "de", 1, 68, 182, 0], [1, "de", 2, 80, 181, 0], [1, "de", 3, 86, 187, 0], [1, "de", 0, 84, 193, 0], [1, "de", 1, 82, 201, 0], [1, "de", 2, 64, 191, 0], [1, "de", 2, 72, 200, 0], [1, "de", 3, 64, 201, 0], [1, "de", 2, 76, 209, 0], [1, "de", 3, 71, 212, 0], [1, "de", 1, 86, 214, 0], [1, "de", 0, 57, 208, 0], [1, "de", 0, 41, 203, 0], [1, "de", 1, 15, 206, 0], [1, "de", 2, 25, 209, 0], [1, "de", 3, 16, 218, 0], [1, "de", 3, 11, 227, 0], [1, "de", 0, 22, 229, 0], [1, "de", 1, 15, 239, 0], [1, "de", 2, 24, 238, 0], [1, "de", 3, 22, 246, 0], [1, "de", 3, 10, 253, 0], [1, "de", 1, 18, 258, 0], [1, "de", 1, 28, 261, 0], [1, "de", 1, 14, 267, 0], [1, "de", 0, 24, 268, 0], [1, "de", 0, 15, 278, 0], [1, "de", 2, 21, 279, 0], [1, "de", 2, 30, 272, 0], [1, "de", 2, 29, 281, 0], [1, "de", 2, 15, 284, 0], [1, "de", 3, 12, 291, 0], [1, "de", 3, 30, 287, 0], [1, "de", 3, 27, 293, 0], [1, "de", 0, 25, 296, 0], [1, "de", 0, 11, 298, 0], [1, "de", 0, 8, 286, 0], [1, "de", 2, 36, 299, 0], [1, "de", 2, 37, 280, 0], [1, "de", 3, 38, 291, 0], [1, "de", 1, 48, 287, 0], [1, "de", 1, 46, 277, 0], [1, "de", 1, 53, 278, 0], [1, "de", 3, 48, 295, 0], [1, "de", 0, 57, 294, 0], [1, "de", 1, 65, 290, 0], [1, "de", 1, 84, 292, 0], [1, "de", 2, 77, 295, 0], [1, "de", 2, 84, 287, 0], [1, "de", 0, 74, 279, 0], [1, "de", 3, 65, 274, 0], [1, "de", 2, 71, 267, 0], [1, "de", 2, 65, 261, 0], [1, "de", 2, 47, 264, 0], [1, "de", 3, 47, 258, 0], [1, "de", 3, 53, 251, 0], [1, "de", 2, 40, 253, 0], [1, "de", 0, 35, 244, 0], [1, "de", 0, 37, 233, 0], [1, "de", 3, 44, 226, 0], [1, "de", 2, 37, 219, 0], [1, "de", 2, 54, 234, 0], [1, "de", 1, 66, 234, 0], [1, "de", 2, 65, 241, 0], [1, "de", 0, 68, 249, 0], [1, "de", 3, 78, 257, 0], [1, "de", 2, 86, 253, 0], [1, "de", 2, 83, 245, 0], [1, "de", 1, 82, 238, 0], [1, "de", 3, 76, 235, 0], [1, "de", 2, 86, 232, 0], [1, "de", 0, 86, 224, 0], [1, "de", 2, 76, 226, 0], [1, "de", 2, 61, 228, 0], [1, "de", 2, 58, 217, 0], [1, "de", 0, 49, 217, 0], [1, "de", 19, 11, 179, 0], [1, "de", 20, 17, 180, 0], [1, "de", 22, 18, 181, 0], [1, "de", 19, 30, 184, 0], [1, "de", 19, 27, 187, 0], [1, "de", 19, 30, 195, 0], [1, "de", 19, 18, 192, 0], [1, "de", 19, 44, 182, 0], [1, "de", 19, 49, 182, 0], [1, "de", 19, 54, 182, 0], [1, "de", 19, 59, 183, 0], [1, "de", 19, 56, 186, 0], [1, "de", 19, 46, 188, 0], [1, "de", 19, 58, 193, 0], [1, "de", 19, 67, 187, 0], [1, "de", 19, 65, 192, 0], [1, "de", 19, 71, 180, 0], [1, "de", 19, 78, 187, 0], [1, "de", 19, 80, 194, 0], [1, "de", 19, 72, 193, 0], [1, "de", 19, 82, 182, 0], [1, "de", 19, 88, 185, 0], [1, "de", 19, 87, 189, 0], [1, "de", 19, 86, 197, 0], [1, "de", 19, 85, 203, 0], [1, "de", 19, 74, 200, 0], [1, "de", 19, 70, 202, 0], [1, "de", 19, 83, 199, 0], [1, "de", 19, 86, 208, 0], [1, "de", 19, 84, 214, 0], [1, "de", 19, 83, 211, 0], [1, "de", 19, 84, 217, 0], [1, "de", 19, 77, 210, 0], [1, "de", 19, 71, 210, 0], [1, "de", 19, 73, 213, 0], [1, "de", 19, 66, 207, 0], [1, "de", 19, 66, 204, 0], [1, "de", 19, 62, 209, 0], [1, "de", 19, 63, 201, 0], [1, "de", 19, 56, 205, 0], [1, "de", 19, 49, 199, 0], [1, "de", 19, 50, 205, 0], [1, "de", 19, 40, 197, 0], [1, "de", 19, 38, 198, 0], [1, "de", 19, 40, 208, 0], [1, "de", 19, 36, 204, 0], [1, "de", 19, 33, 204, 0], [1, "de", 19, 29, 202, 0], [1, "de", 19, 27, 200, 0], [1, "de", 19, 26, 193, 0], [1, "de", 19, 18, 201, 0], [1, "de", 19, 20, 199, 0], [1, "de", 19, 12, 196, 0], [1, "de", 19, 12, 204, 0], [1, "de", 19, 11, 201, 0], [1, "de", 19, 23, 208, 0], [1, "de", 19, 31, 214, 0], [1, "de", 19, 26, 215, 0], [1, "de", 19, 36, 217, 0], [1, "de", 19, 32, 223, 0], [1, "de", 19, 26, 223, 0], [1, "de", 19, 18, 218, 0], [1, "de", 19, 15, 215, 0], [1, "de", 19, 17, 212, 0], [1, "de", 19, 15, 224, 0], [1, "de", 19, 19, 229, 0], [1, "de", 19, 10, 230, 0], [1, "de", 19, 22, 240, 0], [1, "de", 19, 13, 238, 0], [1, "de", 19, 13, 243, 0], [1, "de", 19, 24, 244, 0], [1, "de", 19, 24, 250, 0], [1, "de", 19, 28, 253, 0], [1, "de", 19, 33, 255, 0], [1, "de", 19, 34, 260, 0], [1, "de", 19, 31, 260, 0], [1, "de", 19, 38, 267, 0], [1, "de", 19, 44, 264, 0], [1, "de", 19, 43, 261, 0], [1, "de", 19, 16, 257, 0], [1, "de", 19, 22, 258, 0], [1, "de", 19, 12, 253, 0], [1, "de", 19, 8, 242, 0], [1, "de", 19, 8, 255, 0], [1, "de", 19, 15, 264, 0], [1, "de", 19, 20, 265, 0], [1, "de", 19, 12, 271, 0], [1, "de", 19, 8, 272, 0], [1, "de", 19, 13, 277, 0], [1, "de", 19, 21, 277, 0], [1, "de", 19, 21, 281, 0], [1, "de", 19, 27, 282, 0], [1, "de", 19, 29, 278, 0], [1, "de", 19, 29, 273, 0], [1, "de", 19, 36, 271, 0], [1, "de", 19, 8, 278, 0], [1, "de", 19, 11, 286, 0], [1, "de", 19, 17, 291, 0], [1, "de", 19, 14, 294, 0], [1, "de", 19, 8, 292, 0], [1, "de", 19, 12, 300, 0], [1, "de", 19, 18, 298, 0], [1, "de", 19, 16, 301, 0], [1, "de", 19, 27, 296, 0], [1, "de", 19, 25, 292, 0], [1, "de", 19, 23, 301, 0], [1, "de", 19, 28, 301, 0], [1, "de", 19, 35, 297, 0], [1, "de", 19, 37, 301, 0], [1, "de", 19, 43, 301, 0], [1, "de", 19, 46, 294, 0], [1, "de", 19, 46, 288, 0], [1, "de", 19, 40, 287, 0], [1, "de", 19, 50, 301, 0], [1, "de", 19, 58, 301, 0], [1, "de", 19, 64, 301, 0], [1, "de", 19, 71, 301, 0], [1, "de", 19, 80, 301, 0], [1, "de", 19, 87, 301, 0], [1, "de", 19, 86, 294, 0], [1, "de", 19, 87, 290, 0], [1, "de", 19, 82, 286, 0], [1, "de", 19, 75, 285, 0], [1, "de", 19, 66, 292, 0], [1, "de", 19, 66, 288, 0], [1, "de", 19, 58, 288, 0], [1, "de", 19, 67, 282, 0], [1, "de", 19, 61, 281, 0], [1, "de", 19, 60, 295, 0], [1, "de", 19, 50, 282, 0], [1, "de", 19, 47, 283, 0], [1, "de", 19, 48, 281, 0], [1, "de", 19, 44, 277, 0], [1, "de", 19, 41, 282, 0], [1, "de", 19, 38, 281, 0], [1, "de", 19, 42, 288, 0], [1, "de", 19, 52, 281, 0], [1, "de", 19, 50, 275, 0], [1, "de", 19, 39, 277, 0], [1, "de", 19, 38, 284, 0], [1, "de", 19, 51, 285, 0], [1, "de", 19, 38, 278, 0], [1, "de", 19, 47, 272, 0], [1, "de", 19, 44, 267, 0], [1, "de", 19, 76, 280, 0], [1, "de", 19, 78, 272, 0], [1, "de", 19, 68, 275, 0], [1, "de", 19, 70, 265, 0], [1, "de", 19, 65, 263, 0], [1, "de", 19, 64, 262, 0], [1, "de", 19, 60, 268, 0], [1, "de", 19, 56, 266, 0], [1, "de", 19, 55, 260, 0], [1, "de", 19, 59, 258, 0], [1, "de", 19, 62, 255, 0], [1, "de", 19, 67, 253, 0], [1, "de", 19, 69, 256, 0], [1, "de", 19, 44, 253, 0], [1, "de", 19, 44, 250, 0], [1, "de", 19, 36, 245, 0], [1, "de", 19, 39, 239, 0], [1, "de", 19, 42, 234, 0], [1, "de", 19, 37, 235, 0], [1, "de", 19, 45, 226, 0], [1, "de", 19, 46, 222, 0], [1, "de", 19, 51, 218, 0], [1, "de", 19, 68, 218, 0], [1, "de", 19, 74, 224, 0], [1, "de", 19, 76, 218, 0], [1, "de", 19, 84, 221, 0], [1, "de", 19, 88, 223, 0], [1, "de", 19, 76, 230, 0], [1, "de", 19, 86, 234, 0], [1, "de", 19, 79, 237, 0], [1, "de", 19, 75, 243, 0], [1, "de", 19, 81, 245, 0], [1, "de", 19, 83, 247, 0], [1, "de", 19, 88, 247, 0], [1, "de", 19, 84, 254, 0], [1, "de", 19, 86, 251, 0], [1, "de", 19, 85, 260, 0], [1, "de", 19, 79, 260, 0], [1, "de", 19, 76, 251, 0], [1, "de", 19, 72, 251, 0], [1, "de", 19, 69, 251, 0], [1, "de", 19, 87, 266, 0], [1, "de", 19, 89, 270, 0], [1, "de", 19, 87, 271, 0], [1, "de", 19, 82, 277, 0], [1, "de", 19, 87, 284, 0], [1, "de", 19, 87, 237, 0], [1, "de", 19, 88, 179, 0], [1, "de", 19, 50, 191, 0], [1, "de", 19, 52, 221, 0], [1, "de", 19, 34, 234, 0], [1, "de", 19, 27, 233, 0], [1, "de", 19, 37, 293, 0], [1, "de", 29, 13, 181, 0], [1, "de", 29, 8, 180, 0], [1, "de", 30, 13, 186, 0], [1, "de", 31, 24, 183, 0], [1, "de", 32, 33, 185, 0], [1, "de", 32, 37, 182, 0], [1, "de", 29, 45, 183, 0], [1, "de", 30, 48, 183, 0], [1, "de", 30, 58, 181, 0], [1, "de", 30, 66, 188, 0], [1, "de", 30, 66, 182, 0], [1, "de", 29, 63, 196, 0], [1, "de", 29, 54, 194, 0], [1, "de", 30, 79, 189, 0], [1, "de", 30, 87, 182, 0], [1, "de", 30, 83, 185, 0], [1, "de", 29, 88, 189, 0], [1, "de", 29, 85, 202, 0], [1, "de", 31, 82, 203, 0], [1, "de", 32, 80, 201, 0], [1, "de", 32, 87, 209, 0], [1, "de", 32, 83, 214, 0], [1, "de", 30, 88, 220, 0], [1, "de", 30, 78, 229, 0], [1, "de", 30, 73, 223, 0], [1, "de", 29, 74, 217, 0], [1, "de", 29, 67, 217, 0], [1, "de", 30, 72, 208, 0], [1, "de", 30, 73, 199, 0], [1, "de", 30, 65, 207, 0], [1, "de", 29, 63, 210, 0], [1, "de", 29, 50, 204, 0], [1, "de", 30, 41, 205, 0], [1, "de", 29, 35, 205, 0], [1, "de", 30, 27, 202, 0], [1, "de", 30, 20, 201, 0], [1, "de", 29, 10, 203, 0], [1, "de", 29, 14, 196, 0], [1, "de", 29, 24, 187, 0], [1, "de", 29, 28, 223, 0], [1, "de", 29, 32, 212, 0], [1, "de", 30, 28, 214, 0], [1, "de", 31, 24, 218, 0], [1, "de", 29, 36, 219, 0], [1, "de", 29, 37, 217, 0], [1, "de", 29, 52, 217, 0], [1, "de", 29, 59, 217, 0], [1, "de", 29, 69, 231, 0], [1, "de", 29, 64, 242, 0], [1, "de", 30, 53, 253, 0], [1, "de", 30, 45, 250, 0], [1, "de", 30, 58, 261, 0], [1, "de", 30, 73, 276, 0], [1, "de", 30, 64, 276, 0], [1, "de", 30, 82, 285, 0], [1, "de", 30, 65, 293, 0], [1, "de", 30, 56, 288, 0], [1, "de", 30, 45, 296, 0], [1, "de", 30, 40, 288, 0], [1, "de", 30, 37, 283, 0], [1, "de", 30, 53, 280, 0], [1, "de", 30, 41, 277, 0], [1, "de", 29, 28, 296, 0], [1, "de", 29, 18, 292, 0], [1, "de", 29, 24, 284, 0], [1, "de", 30, 10, 295, 0], [1, "de", 30, 10, 286, 0], [1, "de", 30, 15, 279, 0], [1, "de", 30, 15, 269, 0], [1, "de", 30, 21, 259, 0], [1, "de", 30, 12, 256, 0], [1, "de", 30, 31, 245, 0], [1, "de", 30, 12, 240, 0], [1, "de", 30, 28, 235, 0], [1, "de", 30, 13, 226, 0], [1, "de", 30, 39, 231, 0], [1, "de", 30, 61, 226, 0], [1, "r", 96, 262, 0], [1, "r", 97, 262, 0], [1, "r", 98, 262, 0], [1, "r", 97, 270, 0], [1, "r", 97, 271, 0], [1, "r", 97, 272, 0], [1, "r", 97, 273, 0], [1, "r", 97, 274, 0], [1, "r", 97, 275, 0], [1, "r", 97, 276, 0], [1, "r", 97, 277, 0], [1, "r", 97, 278, 0], [1, "r", 98, 270, 0], [1, "r", 98, 271, 0], [1, "r", 98, 272, 0], [1, "r", 98, 273, 0], [1, "r", 98, 274, 0], [1, "r", 98, 275, 0], [1, "r", 98, 276, 0], [1, "r", 98, 277, 0], [1, "r", 98, 278, 0], [1, "r", 96, 283, 0], [1, "r", 97, 283, 0], [1, "r", 97, 284, 0], [1, "r", 97, 285, 0], [1, "r", 98, 283, 0], [1, "r", 98, 284, 0], [1, "r", 98, 285, 0], [1, "r", 96, 270, 0], [1, "r", 96, 271, 0], [1, "r", 96, 272, 0], [1, "r", 96, 273, 0], [1, "r", 96, 274, 0], [1, "r", 96, 275, 0], [1, "r", 96, 276, 0], [1, "r", 96, 277, 0], [1, "r", 96, 278, 0], [1, "r", 44, 248, 0], [1, "de", 16, 94, 290, 0], [1, "de", 16, 94, 252, 0], [1, "de", 16, 94, 228, 0], [1, "de", 17, 94, 200, 0], [1, "r", 95, 282, 1], [1, "r", 95, 281, 1], [1, "r", 94, 281, 1], [1, "r", 90, 281, 1], [1, "r", 91, 282, 1], [1, "r", 89, 281, 1], [1, "r", 85, 276, 1], [1, "r", 85, 277, 1], [1, "r", 86, 278, 1], [1, "p", 0, 85, 279, 1], [1, "r", 86, 279, 1], [1, "r", 87, 280, 1], [1, "r", 96, 281, 0], [1, "r", 97, 281, 0], [1, "r", 98, 281, 0], [1, "r", 98, 282, 0], [1, "r", 97, 282, 0], [1, "r", 96, 282, 0], [1, "r", 68, 261, 1], [1, "fo", 1, 94, 168, 0], [1, "fo", 2, 94, 151, 0], [1, "fo", 1, 94, 138, 0], [1, "fo", 1, 93, 124, 0], [1, "fo", 1, 94, 129, 0], [1, "fo", 1, 93, 113, 0], [1, "fo", 1, 94, 102, 0], [1, "fo", 1, 94, 93, 0], [1, "fo", 1, 93, 90, 0], [1, "fo", 1, 94, 79, 0], [1, "fo", 1, 94, 76, 0], [1, "fo", 1, 93, 70, 0], [1, "fo", 1, 93, 63, 0], [1, "fo", 1, 94, 53, 0], [1, "fo", 1, 93, 10, 0], [1, "fo", 1, 85, 8, 0], [1, "fo", 1, 94, 12, 0], [1, "fo", 1, 66, 13, 0], [1, "fo", 1, 69, 9, 0], [1, "fo", 2, 68, 14, 0], [1, "fo", 2, 66, 25, 0], [1, "fo", 2, 92, 9, 0], [1, "fo", 2, 94, 14, 0], [1, "fo", 2, 87, 9, 0], [1, "fo", 2, 71, 9, 0], [1, "fo", 2, 90, 12, 0], [1, "fo", 2, 91, 13, 0], [1, "fo", 1, 74, 12, 0], [1, "fo", 2, 72, 12, 0], [1, "fo", 2, 75, 13, 0], [1, "fo", 2, 74, 15, 0], [1, "fo", 2, 84, 12, 0], [1, "fo", 2, 81, 14, 0], [1, "fo", 1, 84, 13, 0], [1, "fo", 1, 84, 19, 0], [1, "fo", 1, 11, 9, 0], [1, "fo", 1, 7, 14, 0], [1, "fo", 1, 8, 22, 0], [1, "fo", 1, 7, 34, 0], [1, "fo", 1, 12, 24, 0], [1, "fo", 2, 8, 24, 0], [1, "fo", 2, 9, 21, 0], [1, "fo", 2, 31, 10, 0], [1, "fo", 2, 33, 27, 0], [1, "fo", 2, 9, 34, 0], [1, "fo", 2, 8, 19, 0], [1, "fo", 1, 14, 10, 0], [1, "fo", 2, 13, 9, 0], [1, "fo", 2, 15, 11, 0], [1, "fo", 2, 9, 9, 0], [1, "fo", 2, 9, 10, 0], [1, "fo", 2, 9, 15, 0], [1, "fo", 2, 10, 23, 0], [1, "fo", 2, 34, 29, 0], [1, "fo", 2, 27, 18, 0], [1, "fo", 2, 25, 21, 0], [1, "fo", 2, 20, 18, 0], [1, "fo", 2, 18, 21, 0], [1, "fo", 2, 29, 9, 0], [1, "fo", 2, 13, 14, 0], [1, "fo", 2, 9, 38, 0], [1, "fo", 2, 21, 39, 0], [1, "fo", 2, 84, 26, 0], [1, "fo", 2, 77, 25, 0], [1, "fo", 2, 86, 35, 0], [1, "fo", 1, 70, 35, 0], [1, "fo", 2, 72, 36, 0], [1, "fo", 2, 73, 31, 0], [1, "fo", 2, 89, 39, 0], [1, "fo", 2, 65, 40, 0], [1, "fo", 2, 92, 32, 0], [1, "fo", 2, 90, 28, 0], [1, "de", 22, 25, 266, 0], [1, "de", 22, 17, 206, 0], [1, "de", 19, 8, 184, 0], [1, "de", 19, 22, 183, 0], [1, "de", 19, 35, 188, 0], [1, "de", 19, 36, 192, 0], [1, "de", 19, 50, 277, 0], [1, "de", 19, 35, 279, 0], [1, "t", 4, 7, 178, 0], [1, "t", 1, 7, 179, 0], [1, "t", 3, 7, 180, 0], [1, "t", 2, 7, 181, 0], [1, "t", 5, 7, 182, 0], [1, "t", 4, 7, 183, 0], [1, "t", 3, 7, 184, 0], [1, "t", 4, 7, 185, 0], [1, "t", 2, 7, 186, 0], [1, "t", 1, 7, 187, 0], [1, "t", 4, 7, 188, 0], [1, "t", 3, 7, 189, 0], [1, "t", 5, 7, 190, 0], [1, "t", 1, 7, 191, 0], [1, "t", 3, 7, 192, 0], [1, "t", 4, 7, 193, 0], [1, "t", 3, 7, 194, 0], [1, "t", 5, 7, 195, 0], [1, "t", 2, 7, 196, 0], [1, "t", 4, 7, 197, 0], [1, "b", 2, 7, 198, 0], [1, "t", 4, 7, 199, 0], [1, "t", 2, 7, 200, 0], [1, "t", 5, 7, 201, 0], [1, "t", 2, 7, 202, 0], [1, "t", 4, 7, 203, 0], [1, "t", 2, 7, 204, 0], [1, "t", 5, 7, 205, 0], [1, "t", 2, 7, 206, 0], [1, "t", 1, 7, 207, 0], [1, "t", 4, 7, 208, 0], [1, "t", 3, 7, 209, 0], [1, "t", 1, 7, 210, 0], [1, "b", 0, 7, 211, 0], [1, "t", 3, 7, 212, 0], [1, "t", 4, 7, 213, 0], [1, "t", 3, 7, 214, 0], [1, "t", 5, 7, 215, 0], [1, "t", 5, 7, 216, 0], [1, "t", 3, 7, 217, 0], [1, "t", 1, 7, 218, 0], [1, "t", 4, 7, 219, 0], [1, "b", 2, 7, 220, 0], [1, "t", 1, 7, 221, 0], [1, "t", 2, 7, 222, 0], [1, "t", 4, 7, 223, 0], [1, "t", 3, 7, 224, 0], [1, "t", 1, 7, 225, 0], [1, "t", 4, 7, 226, 0], [1, "t", 2, 7, 227, 0], [1, "t", 5, 7, 228, 0], [1, "t", 3, 7, 229, 0], [1, "t", 1, 7, 230, 0], [1, "t", 4, 7, 231, 0], [1, "b", 2, 7, 232, 0], [1, "t", 5, 7, 233, 0], [1, "t", 1, 7, 234, 0], [1, "t", 3, 7, 235, 0], [1, "t", 4, 7, 236, 0], [1, "t", 2, 7, 237, 0], [1, "t", 5, 7, 238, 0], [1, "b", 3, 7, 239, 0], [1, "t", 2, 7, 240, 0], [1, "t", 1, 7, 241, 0], [1, "t", 2, 7, 242, 0], [1, "t", 4, 7, 243, 0], [1, "t", 3, 7, 244, 0], [1, "t", 4, 7, 245, 0], [1, "t", 1, 7, 246, 0], [1, "b", 0, 7, 247, 0], [1, "t", 3, 7, 248, 0], [1, "t", 5, 7, 249, 0], [1, "t", 2, 7, 250, 0], [1, "t", 1, 7, 251, 0], [1, "t", 4, 7, 252, 0], [1, "t", 3, 7, 253, 0], [1, "t", 5, 7, 254, 0], [1, "t", 1, 7, 255, 0], [1, "t", 4, 7, 256, 0], [1, "t", 1, 7, 257, 0], [1, "t", 2, 7, 258, 0], [1, "t", 5, 7, 260, 0], [1, "t", 3, 7, 259, 0], [1, "t", 1, 7, 261, 0], [1, "t", 3, 7, 262, 0], [1, "t", 4, 7, 263, 0], [1, "t", 1, 7, 264, 0], [1, "t", 2, 7, 265, 0], [1, "t", 5, 7, 266, 0], [1, "t", 2, 7, 267, 0], [1, "t", 2, 7, 269, 0], [1, "b", 2, 7, 268, 0], [1, "t", 4, 7, 270, 0], [1, "t", 1, 7, 271, 0], [1, "t", 5, 7, 272, 0], [1, "b", 2, 7, 273, 0], [1, "t", 4, 7, 274, 0], [1, "t", 2, 7, 275, 0], [1, "t", 5, 7, 276, 0], [1, "t", 5, 7, 277, 0], [1, "t", 2, 7, 278, 0], [1, "t", 1, 7, 279, 0], [1, "t", 4, 7, 280, 0], [1, "b", 1, 7, 281, 0], [1, "t", 3, 7, 282, 0], [1, "t", 4, 7, 283, 0], [1, "t", 1, 7, 284, 0], [1, "t", 3, 7, 285, 0], [1, "t", 5, 7, 286, 0], [1, "t", 4, 7, 288, 0], [1, "t", 2, 7, 287, 0], [1, "b", 0, 7, 289, 0], [1, "t", 4, 7, 290, 0], [1, "t", 2, 7, 291, 0], [1, "t", 5, 7, 292, 0], [1, "t", 3, 7, 293, 0], [1, "t", 1, 7, 294, 0], [1, "t", 4, 7, 295, 0], [1, "t", 3, 7, 296, 0], [1, "t", 1, 7, 297, 0], [1, "t", 4, 7, 298, 0], [1, "t", 2, 7, 299, 0], [1, "b", 0, 7, 300, 0], [1, "t", 2, 7, 301, 0], [1, "r", 196, 271, 0], [1, "r", 199, 274, 0], [1, "r", 167, 238, 0], [1, "r", 171, 240, 0], [1, "r", 189, 207, 0], [1, "r", 192, 209, 0], [1, "r", 198, 271, 0], [1, "r", 197, 271, 0], [1, "r", 198, 272, 0], [1, "r", 197, 272, 0], [1, "r", 196, 272, 0], [1, "r", 195, 272, 0], [1, "r", 199, 272, 0], [1, "r", 199, 273, 0], [1, "r", 198, 273, 0], [1, "r", 197, 273, 0], [1, "r", 196, 273, 0], [1, "r", 198, 274, 0], [1, "r", 197, 274, 0], [1, "r", 195, 273, 0], [1, "r", 196, 274, 0], [1, "r", 198, 275, 0], [1, "r", 197, 275, 0], [1, "r", 200, 274, 0], [1, "r", 200, 273, 0], [1, "r", 199, 275, 0], [1, "plm", 2, 200, 272, 0], [1, "plm", 1, 195, 271, 0], [1, "plm", 0, 199, 268, 0], [1, "plm", 0, 193, 277, 0], [1, "plm", 1, 199, 276, 0], [1, "s", 1, 200, 275, 1], [1, "s", 1, 194, 272, 1], [1, "s", 2, 193, 270, 1], [1, "g", 2, 193, 273, 1], [1, "g", 2, 201, 267, 1], [1, "m", 2, 220, 298, 1], [1, "m", 1, 219, 292, 1], [1, "m", 1, 214, 297, 1], [1, "r", 168, 238, 0], [1, "r", 169, 238, 0], [1, "r", 170, 238, 0], [1, "r", 171, 239, 0], [1, "r", 170, 239, 0], [1, "r", 169, 239, 0], [1, "r", 168, 239, 0], [1, "r", 167, 239, 0], [1, "r", 166, 239, 0], [1, "r", 166, 240, 0], [1, "r", 167, 240, 0], [1, "r", 168, 240, 0], [1, "r", 169, 240, 0], [1, "r", 170, 240, 0], [1, "r", 168, 241, 0], [1, "r", 169, 241, 0], [1, "r", 170, 241, 0], [1, "r", 171, 241, 0], [1, "plm", 2, 171, 238, 0], [1, "plm", 1, 166, 238, 0], [1, "plm", 0, 167, 237, 0], [1, "plm", 0, 171, 242, 0], [1, "plm", 0, 165, 243, 0], [1, "plm", 0, 171, 235, 0], [1, "plm", 0, 174, 241, 0], [1, "s", 1, 165, 239, 1], [1, "s", 1, 172, 241, 1], [1, "s", 0, 170, 237, 1], [1, "s", 1, 171, 237, 1], [1, "s", 2, 174, 236, 1], [1, "s", 2, 162, 241, 1], [1, "s", 2, 170, 246, 1], [1, "s", 2, 167, 235, 1], [1, "s", 2, 176, 243, 1], [1, "r", 190, 207, 0], [1, "r", 191, 207, 0], [1, "r", 192, 208, 0], [1, "r", 191, 208, 0], [1, "r", 190, 208, 0], [1, "r", 189, 208, 0], [1, "r", 188, 208, 0], [1, "r", 189, 209, 0], [1, "r", 190, 209, 0], [1, "r", 191, 209, 0], [1, "r", 188, 209, 0], [1, "r", 190, 210, 0], [1, "r", 191, 210, 0], [1, "r", 192, 210, 0], [1, "plm", 2, 189, 210, 0], [1, "plm", 2, 192, 205, 0], [1, "plm", 1, 192, 207, 0], [1, "plm", 0, 193, 210, 0], [1, "plm", 0, 187, 208, 0], [1, "plm", 0, 197, 206, 0], [1, "plm", 0, 191, 213, 0], [1, "plm", 0, 190, 204, 0], [1, "s", 1, 188, 207, 1], [1, "s", 1, 190, 211, 1], [1, "s", 2, 188, 213, 1], [1, "s", 2, 187, 205, 1], [1, "s", 0, 194, 210, 1], [1, "s", 0, 198, 207, 1], [1, "s", 1, 193, 204, 1], [1, "s", 1, 193, 213, 1], [1, "s", 2, 198, 212, 1], [1, "s", 2, 182, 208, 1], [1, "s", 1, 204, 271, 1], [1, "s", 0, 203, 272, 1], [1, "s", 0, 189, 275, 1], [1, "s", 0, 195, 265, 1], [1, "s", 2, 196, 264, 1], [1, "s", 2, 186, 274, 1], [1, "s", 2, 197, 280, 1], [1, "s", 0, 217, 282, 1], [1, "s", 1, 214, 285, 1], [1, "s", 1, 214, 274, 1], [1, "s", 1, 203, 282, 1], [1, "s", 1, 205, 290, 1], [1, "s", 0, 207, 292, 1], [1, "s", 0, 197, 297, 1], [1, "s", 0, 184, 287, 1], [1, "s", 2, 213, 289, 1], [1, "s", 2, 196, 294, 1], [1, "s", 2, 187, 286, 1], [1, "s", 1, 192, 289, 1], [1, "s", 1, 189, 299, 1], [1, "s", 0, 213, 273, 1], [1, "g", 2, 212, 278, 1], [1, "g", 1, 200, 288, 1], [1, "g", 2, 215, 265, 1], [1, "g", 2, 183, 281, 1], [1, "s", 0, 178, 295, 1], [1, "s", 0, 167, 281, 1], [1, "s", 0, 175, 263, 1], [1, "s", 1, 176, 293, 1], [1, "s", 1, 163, 285, 1], [1, "s", 1, 177, 266, 1], [1, "s", 1, 161, 272, 1], [1, "s", 2, 185, 261, 1], [1, "c", 0, 217, 270, 1], [1, "c", 0, 220, 278, 1], [1, "c", 0, 217, 283, 1], [1, "c", 0, 220, 287, 1], [1, "c", 0, 210, 292, 1], [1, "c", 0, 205, 297, 1], [1, "c", 0, 198, 293, 1], [1, "c", 0, 208, 283, 1], [1, "c", 0, 197, 283, 1], [1, "c", 0, 190, 289, 1], [1, "c", 0, 183, 296, 1], [1, "c", 0, 189, 291, 1], [1, "c", 0, 178, 284, 1], [1, "c", 0, 208, 265, 1], [1, "c", 0, 169, 292, 1], [1, "s", 1, 158, 294, 1], [1, "s", 0, 151, 297, 1], [1, "s", 0, 147, 288, 1], [1, "c", 0, 150, 289, 1], [1, "c", 0, 160, 282, 1], [1, "c", 0, 146, 274, 1], [1, "c", 0, 167, 264, 1], [1, "c", 0, 165, 267, 1], [1, "g", 0, 189, 257, 1], [1, "g", 1, 197, 248, 1], [1, "g", 2, 170, 255, 1], [1, "g", 2, 212, 234, 1], [1, "g", 2, 189, 230, 1], [1, "g", 2, 173, 221, 1], [1, "g", 1, 210, 214, 1], [1, "s", 1, 153, 257, 1], [1, "s", 0, 158, 255, 1], [1, "s", 0, 184, 248, 1], [1, "s", 0, 212, 254, 1], [1, "s", 1, 203, 249, 1], [1, "s", 2, 204, 252, 1], [1, "s", 2, 187, 248, 1], [1, "s", 0, 206, 237, 1], [1, "s", 0, 196, 227, 1], [1, "s", 0, 181, 228, 1], [1, "s", 1, 199, 227, 1], [1, "s", 1, 208, 238, 1], [1, "s", 1, 179, 222, 1], [1, "s", 1, 213, 223, 1], [1, "s", 2, 182, 222, 1], [1, "s", 2, 211, 226, 1], [1, "s", 2, 214, 214, 1], [1, "s", 2, 201, 216, 1], [1, "s", 2, 215, 192, 1], [1, "s", 1, 210, 198, 1], [1, "s", 1, 198, 196, 1], [1, "s", 2, 208, 199, 1], [1, "s", 2, 187, 192, 1], [1, "s", 1, 179, 198, 1], [1, "s", 2, 177, 197, 1], [1, "s", 0, 164, 197, 1], [1, "s", 1, 159, 193, 1], [1, "s", 1, 149, 206, 1], [1, "s", 1, 164, 209, 1], [1, "s", 2, 165, 210, 1], [1, "s", 2, 161, 191, 1], [1, "s", 1, 162, 224, 1], [1, "s", 0, 150, 236, 1], [1, "s", 1, 149, 239, 1], [1, "s", 2, 153, 236, 1], [1, "s", 2, 160, 223, 1], [1, "s", 2, 151, 207, 1], [1, "s", 2, 147, 220, 1], [1, "s", 2, 145, 265, 1], [1, "s", 2, 145, 285, 1], [1, "c", 0, 152, 266, 1], [1, "c", 0, 185, 271, 1], [1, "c", 0, 210, 254, 1], [1, "c", 0, 209, 256, 1], [1, "c", 0, 198, 254, 1], [1, "c", 0, 213, 246, 1], [1, "c", 0, 216, 237, 1], [1, "c", 0, 204, 240, 1], [1, "c", 0, 196, 234, 1], [1, "c", 0, 188, 238, 1], [1, "c", 0, 182, 245, 1], [1, "c", 0, 173, 252, 1], [1, "c", 0, 153, 248, 1], [1, "c", 0, 158, 233, 1], [1, "c", 0, 147, 230, 1], [1, "c", 0, 151, 224, 1], [1, "c", 0, 157, 214, 1], [1, "c", 0, 167, 219, 1], [1, "c", 0, 171, 208, 1], [1, "c", 0, 179, 219, 1], [1, "c", 0, 176, 229, 1], [1, "c", 0, 195, 221, 1], [1, "c", 0, 207, 222, 1], [1, "c", 0, 214, 207, 1], [1, "c", 0, 205, 210, 1], [1, "c", 0, 204, 196, 1], [1, "c", 0, 214, 196, 1], [1, "c", 0, 190, 199, 1], [1, "c", 0, 184, 194, 1], [1, "c", 0, 172, 199, 1], [1, "c", 0, 161, 204, 1], [1, "c", 0, 157, 196, 1], [1, "c", 0, 149, 194, 1], [1, "c", 0, 147, 208, 1], [1, "c", 0, 207, 274, 1], [1, "c", 0, 217, 258, 1], [1, "c", 0, 201, 260, 1], [1, "c", 0, 178, 276, 1], [1, "c", 0, 187, 265, 1], [1, "s", 1, 204, 260, 1], [1, "s", 1, 216, 260, 1], [1, "s", 1, 187, 255, 1], [1, "s", 2, 189, 254, 1], [1, "s", 2, 212, 257, 1], [1, "s", 2, 182, 286, 1], [1, "s", 2, 169, 280, 1], [1, "s", 2, 217, 273, 1], [1, "s", 2, 215, 282, 1], [1, "s", 2, 172, 263, 1], [1, "s", 2, 176, 267, 1], [1, "s", 2, 215, 251, 1], [1, "fod", 1, 221, 282, 0], [1, "fod", 1, 222, 284, 0], [1, "fod", 1, 221, 290, 0], [1, "fod", 1, 222, 294, 0], [1, "fod", 1, 221, 297, 0], [1, "fod", 1, 223, 298, 0], [1, "fod", 1, 222, 300, 0], [1, "fod", 1, 218, 301, 0], [1, "fod", 1, 217, 299, 0], [1, "fod", 1, 215, 301, 0], [1, "fod", 1, 212, 300, 0], [1, "fod", 1, 206, 300, 0], [1, "fod", 1, 209, 301, 0], [1, "fod", 1, 204, 299, 0], [1, "fod", 1, 202, 301, 0], [1, "fod", 1, 199, 301, 0], [1, "fod", 1, 222, 282, 0], [1, "fod", 1, 207, 301, 0], [1, "fod", 1, 197, 301, 0], [1, "fod", 1, 215, 291, 0], [1, "fod", 1, 216, 286, 0], [1, "fod", 1, 214, 292, 0], [1, "fod", 1, 210, 289, 0], [1, "fod", 1, 208, 294, 0], [1, "fod", 1, 210, 298, 0], [1, "fod", 1, 212, 281, 0], [1, "fod", 1, 219, 278, 0], [1, "fod", 1, 219, 282, 0], [1, "fod", 1, 205, 286, 0], [1, "fod", 1, 202, 293, 0], [1, "fod", 1, 198, 295, 0], [1, "fod", 2, 213, 282, 0], [1, "fod", 2, 213, 291, 0], [1, "fod", 2, 216, 289, 0], [1, "fod", 2, 219, 289, 0], [1, "fod", 2, 218, 285, 0], [1, "fod", 2, 220, 283, 0], [1, "fod", 2, 211, 283, 0], [1, "fod", 2, 215, 281, 0], [1, "fod", 2, 217, 279, 0], [1, "fod", 2, 208, 290, 0], [1, "fod", 2, 211, 296, 0], [1, "fod", 2, 215, 294, 0], [1, "fod", 2, 212, 298, 0], [1, "fod", 2, 203, 294, 0], [1, "fod", 2, 204, 288, 0], [1, "fod", 2, 200, 294, 0], [1, "fod", 2, 198, 297, 0], [1, "fod", 2, 202, 299, 0], [1, "fod", 2, 200, 299, 0], [1, "fod", 2, 220, 300, 0], [1, "fod", 2, 220, 295, 0], [1, "fod", 2, 220, 292, 0], [1, "fod", 2, 219, 287, 0], [1, "fod", 2, 211, 288, 0], [1, "fod", 2, 213, 287, 0], [1, "fod", 2, 211, 289, 0], [1, "fod", 2, 212, 290, 0], [1, "fod", 2, 195, 296, 0], [1, "fod", 2, 196, 299, 0], [1, "fod", 2, 194, 300, 0], [1, "fod", 2, 195, 300, 0], [1, "fod", 2, 213, 279, 0], [1, "fod", 2, 211, 279, 0], [1, "fod", 0, 218, 290, 0], [1, "fod", 0, 212, 294, 0], [1, "fod", 1, 213, 295, 0], [1, "fod", 1, 217, 292, 0], [1, "fod", 1, 218, 288, 0], [1, "fod", 1, 210, 295, 0], [1, "fod", 1, 213, 292, 0], [1, "fod", 1, 212, 289, 0], [1, "fod", 1, 205, 295, 0], [1, "fod", 2, 206, 296, 0], [1, "fod", 2, 208, 296, 0], [1, "fod", 2, 221, 288, 0], [1, "fod", 2, 209, 299, 0], [1, "fod", 2, 211, 291, 0], [1, "fod", 1, 203, 275, 0], [1, "fod", 1, 204, 272, 0], [1, "fod", 2, 205, 273, 0], [1, "fod", 2, 204, 276, 0], [1, "fod", 2, 202, 276, 0], [1, "fod", 2, 199, 277, 0], [1, "fod", 2, 202, 273, 0], [1, "fod", 2, 199, 270, 0], [1, "fod", 2, 194, 274, 0], [1, "fod", 2, 194, 277, 0], [1, "fod", 1, 192, 274, 0], [1, "fod", 1, 194, 267, 0], [1, "fod", 2, 194, 265, 0], [1, "fod", 2, 190, 272, 0], [1, "fod", 2, 191, 275, 0], [1, "fod", 2, 195, 274, 0], [1, "fod", 2, 200, 271, 0], [1, "fod", 1, 168, 243, 0], [1, "fod", 1, 175, 240, 0], [1, "fod", 1, 169, 234, 0], [1, "fod", 1, 162, 235, 0], [1, "fod", 2, 169, 236, 0], [1, "fod", 2, 171, 234, 0], [1, "fod", 2, 165, 238, 0], [1, "fod", 2, 173, 241, 0], [1, "fod", 2, 174, 238, 0], [1, "fod", 2, 176, 240, 0], [1, "fod", 2, 169, 244, 0], [1, "fod", 2, 166, 243, 0], [1, "fod", 2, 162, 236, 0], [1, "fod", 2, 164, 235, 0], [1, "fod", 2, 162, 233, 0], [1, "fod", 2, 163, 236, 0], [1, "fod", 2, 174, 242, 0], [1, "fod", 2, 171, 243, 0], [1, "fod", 1, 194, 206, 0], [1, "fod", 1, 190, 214, 0], [1, "fod", 1, 186, 206, 0], [1, "fod", 1, 197, 207, 0], [1, "fod", 2, 196, 208, 0], [1, "fod", 2, 198, 206, 0], [1, "fod", 2, 198, 208, 0], [1, "fod", 2, 194, 204, 0], [1, "fod", 2, 187, 206, 0], [1, "fod", 2, 186, 204, 0], [1, "fod", 2, 189, 214, 0], [1, "fod", 2, 189, 213, 0], [1, "fod", 2, 193, 215, 0], [1, "fod", 2, 194, 214, 0], [1, "fod", 2, 187, 215, 0], [1, "fod", 2, 193, 209, 0], [1, "fod", 2, 189, 211, 0], [1, "fod", 2, 187, 209, 0], [1, "fod", 2, 187, 207, 0], [1, "fod", 2, 191, 205, 0], [1, "fod", 2, 189, 203, 0], [1, "cs", 2, 224, 176, 1], [1, "cs", 0, 224, 177, 1], [1, "cs", 3, 224, 178, 1], [1, "cs", 2, 224, 179, 1], [1, "cs", 1, 224, 180, 1], [1, "cs", 2, 224, 181, 1], [1, "cs", 0, 224, 182, 1], [1, "cs", 2, 224, 183, 1], [1, "cs", 0, 224, 184, 1], [1, "cs", 3, 224, 185, 1], [1, "cs", 2, 224, 186, 1], [1, "cs", 0, 224, 187, 1], [1, "cs", 2, 224, 188, 1], [1, "cs", 0, 224, 189, 1], [1, "cs", 1, 224, 190, 1], [1, "cs", 2, 224, 191, 1], [1, "cs", 0, 224, 192, 1], [1, "cs", 2, 224, 193, 1], [1, "cs", 2, 224, 194, 1], [1, "cs", 1, 224, 195, 1], [1, "cs", 2, 224, 196, 1], [1, "cs", 0, 224, 197, 1], [1, "cs", 3, 224, 198, 1], [1, "cs", 2, 224, 199, 1], [1, "cs", 1, 224, 200, 1], [1, "cs", 2, 224, 201, 1], [1, "cs", 3, 224, 202, 1], [1, "cs", 0, 224, 203, 1], [1, "cs", 1, 224, 204, 1], [1, "cs", 2, 224, 205, 1], [1, "cs", 0, 224, 206, 1], [1, "cs", 1, 224, 207, 1], [1, "cs", 3, 224, 208, 1], [1, "cs", 2, 224, 209, 1], [1, "cs", 2, 224, 210, 1], [1, "cs", 0, 223, 211, 1], [1, "cs", 1, 224, 211, 1], [1, "cs", 2, 224, 212, 1], [1, "cs", 2, 224, 213, 1], [1, "cs", 1, 224, 214, 1], [1, "cs", 3, 224, 215, 1], [1, "cs", 0, 224, 216, 1], [1, "cs", 1, 224, 217, 1], [1, "cs", 2, 224, 218, 1], [1, "cs", 3, 224, 219, 1], [1, "cs", 0, 223, 215, 1], [1, "cs", 2, 223, 214, 1], [1, "cs", 2, 223, 212, 1], [1, "cs", 2, 223, 216, 1], [1, "cs", 3, 223, 217, 1], [1, "cs", 0, 223, 218, 1], [1, "cs", 0, 224, 220, 1], [1, "cs", 0, 224, 222, 1], [1, "cs", 0, 223, 209, 1], [1, "cs", 0, 223, 205, 1], [1, "cs", 2, 224, 221, 1], [1, "cs", 2, 223, 219, 1], [1, "cs", 2, 223, 220, 1], [1, "cs", 2, 223, 213, 1], [1, "cs", 2, 223, 210, 1], [1, "cs", 1, 223, 178, 1], [1, "cs", 3, 223, 179, 1], [1, "cs", 3, 223, 181, 1], [1, "cs", 3, 223, 182, 1], [1, "cs", 1, 223, 185, 1], [1, "cs", 2, 223, 184, 1], [1, "cs", 2, 223, 186, 1], [1, "cs", 0, 223, 180, 1], [1, "cs", 0, 223, 183, 1], [1, "cs", 2, 223, 187, 1], [1, "cs", 1, 223, 188, 1], [1, "cs", 2, 223, 189, 1], [1, "cs", 2, 223, 190, 1], [1, "cs", 3, 223, 191, 1], [1, "cs", 1, 223, 192, 1], [1, "cs", 2, 223, 193, 1], [1, "cs", 2, 223, 194, 1], [1, "cs", 3, 223, 195, 1], [1, "cs", 1, 223, 196, 1], [1, "cs", 2, 223, 197, 1], [1, "cs", 2, 223, 199, 1], [1, "cs", 2, 223, 198, 1], [1, "cs", 0, 223, 200, 1], [1, "cs", 2, 223, 201, 1], [1, "cs", 0, 223, 202, 1], [1, "cs", 3, 223, 203, 1], [1, "cs", 3, 223, 204, 1], [1, "cs", 3, 223, 206, 1], [1, "cs", 3, 223, 207, 1], [1, "cs", 3, 223, 208, 1], [1, "cs", 2, 223, 221, 1], [1, "cs", 2, 223, 222, 1], [1, "cs", 0, 223, 224, 1], [1, "cs", 0, 224, 228, 1], [1, "cs", 0, 224, 230, 1], [1, "cs", 0, 223, 234, 1], [1, "cs", 2, 223, 223, 1], [1, "cs", 2, 224, 223, 1], [1, "cs", 2, 224, 224, 1], [1, "cs", 2, 224, 225, 1], [1, "cs", 1, 223, 226, 1], [1, "cs", 1, 224, 231, 1], [1, "cs", 1, 223, 232, 1], [1, "cs", 3, 223, 225, 1], [1, "cs", 3, 224, 226, 1], [1, "cs", 3, 223, 227, 1], [1, "cs", 3, 224, 227, 1], [1, "cs", 3, 223, 229, 1], [1, "cs", 3, 223, 228, 1], [1, "cs", 3, 224, 229, 1], [1, "cs", 3, 223, 230, 1], [1, "cs", 3, 223, 231, 1], [1, "cs", 3, 224, 232, 1], [1, "cs", 3, 224, 233, 1], [1, "cs", 3, 223, 233, 1], [1, "cs", 3, 224, 234, 1], [1, "cs", 3, 224, 235, 1], [1, "cs", 3, 223, 235, 1], [1, "cs", 1, 224, 236, 1], [1, "cs", 2, 223, 236, 1], [1, "cs", 2, 223, 237, 1], [1, "cs", 3, 224, 237, 1], [1, "cs", 3, 224, 238, 1], [1, "cs", 0, 224, 239, 1], [1, "cs", 1, 223, 241, 1], [1, "cs", 0, 224, 243, 1], [1, "cs", 0, 223, 245, 1], [1, "cs", 0, 224, 247, 1], [1, "cs", 2, 223, 240, 1], [1, "cs", 2, 223, 239, 1], [1, "cs", 2, 224, 240, 1], [1, "cs", 2, 224, 241, 1], [1, "cs", 2, 224, 242, 1], [1, "cs", 2, 223, 242, 1], [1, "cs", 2, 223, 243, 1], [1, "cs", 2, 223, 244, 1], [1, "cs", 2, 224, 244, 1], [1, "cs", 2, 224, 245, 1], [1, "cs", 2, 224, 246, 1], [1, "cs", 3, 223, 238, 1], [1, "cs", 3, 223, 246, 1], [1, "cs", 2, 223, 247, 1], [1, "cs", 1, 223, 249, 1], [1, "cs", 1, 224, 253, 1], [1, "cs", 1, 223, 256, 1], [1, "cs", 0, 223, 254, 1], [1, "cs", 0, 224, 250, 1], [1, "cs", 3, 223, 248, 1], [1, "cs", 3, 223, 250, 1], [1, "cs", 3, 223, 252, 1], [1, "cs", 3, 223, 255, 1], [1, "cs", 3, 223, 257, 1], [1, "cs", 2, 224, 248, 1], [1, "cs", 2, 224, 249, 1], [1, "cs", 2, 223, 251, 1], [1, "cs", 2, 224, 251, 1], [1, "cs", 2, 224, 252, 1], [1, "cs", 2, 223, 253, 1], [1, "cs", 2, 224, 254, 1], [1, "cs", 2, 224, 255, 1], [1, "cs", 2, 224, 256, 1], [1, "cs", 2, 224, 257, 1], [1, "cs", 0, 224, 258, 1], [1, "cs", 0, 223, 261, 1], [1, "cs", 0, 224, 263, 1], [1, "cs", 0, 224, 266, 1], [1, "cs", 0, 224, 272, 1], [1, "cs", 0, 223, 270, 1], [1, "cs", 0, 223, 275, 1], [1, "cs", 1, 223, 259, 1], [1, "cs", 1, 223, 264, 1], [1, "cs", 1, 223, 268, 1], [1, "cs", 1, 224, 274, 1], [1, "cs", 2, 223, 258, 1], [1, "cs", 2, 223, 260, 1], [1, "cs", 2, 223, 263, 1], [1, "cs", 2, 223, 265, 1], [1, "cs", 2, 223, 267, 1], [1, "cs", 2, 223, 271, 1], [1, "cs", 2, 223, 273, 1], [1, "cs", 3, 223, 262, 1], [1, "cs", 3, 223, 266, 1], [1, "cs", 3, 223, 269, 1], [1, "cs", 3, 223, 272, 1], [1, "cs", 3, 223, 274, 1], [1, "cs", 3, 224, 275, 1], [1, "cs", 3, 224, 273, 1], [1, "cs", 3, 224, 271, 1], [1, "cs", 3, 224, 270, 1], [1, "cs", 3, 224, 269, 1], [1, "cs", 3, 224, 268, 1], [1, "cs", 3, 224, 267, 1], [1, "cs", 3, 224, 265, 1], [1, "cs", 3, 224, 264, 1], [1, "cs", 3, 224, 262, 1], [1, "cs", 3, 224, 261, 1], [1, "cs", 3, 224, 260, 1], [1, "cs", 3, 224, 259, 1], [1, "cs", 2, 223, 276, 1], [1, "cs", 1, 224, 276, 1], [1, "cs", 1, 224, 280, 1], [1, "cs", 1, 223, 281, 1], [1, "cs", 1, 224, 286, 1], [1, "cs", 0, 223, 280, 1], [1, "cs", 0, 223, 284, 1], [1, "cs", 0, 224, 288, 1], [1, "cs", 0, 224, 279, 1], [1, "cs", 2, 223, 277, 1], [1, "cs", 2, 224, 277, 1], [1, "cs", 2, 224, 278, 1], [1, "cs", 2, 224, 281, 1], [1, "cs", 2, 224, 283, 1], [1, "cs", 2, 224, 282, 1], [1, "cs", 2, 224, 284, 1], [1, "cs", 2, 224, 285, 1], [1, "cs", 2, 224, 287, 1], [1, "cs", 2, 223, 287, 1], [1, "cs", 2, 223, 285, 1], [1, "cs", 2, 223, 283, 1], [1, "cs", 2, 223, 279, 1], [1, "cs", 3, 223, 278, 1], [1, "cs", 3, 223, 282, 1], [1, "cs", 3, 223, 286, 1], [1, "cs", 3, 223, 289, 1], [1, "cs", 3, 224, 289, 1], [1, "cs", 2, 223, 288, 1], [1, "cs", 2, 224, 290, 1], [1, "cs", 1, 223, 290, 1], [1, "cs", 0, 224, 292, 1], [1, "cs", 0, 223, 294, 1], [1, "cs", 0, 224, 297, 1], [1, "cs", 0, 223, 299, 1], [1, "cs", 2, 223, 291, 1], [1, "cs", 2, 224, 291, 1], [1, "cs", 2, 223, 292, 1], [1, "cs", 2, 223, 293, 1], [1, "cs", 2, 224, 293, 1], [1, "cs", 2, 224, 294, 1], [1, "cs", 1, 224, 295, 1], [1, "cs", 2, 223, 295, 1], [1, "cs", 2, 223, 296, 1], [1, "cs", 2, 224, 296, 1], [1, "cs", 2, 223, 297, 1], [1, "cs", 2, 223, 298, 1], [1, "cs", 2, 224, 298, 1], [1, "cs", 2, 224, 299, 1], [1, "cs", 2, 223, 300, 1], [1, "cs", 1, 224, 300, 1], [1, "cs", 0, 223, 301, 1], [1, "cs", 0, 224, 302, 1], [1, "cs", 0, 224, 304, 1], [1, "cs", 3, 224, 301, 1], [1, "cs", 3, 224, 303, 1], [1, "cs", 0, 221, 303, 1], [1, "cs", 0, 219, 304, 1], [1, "cs", 1, 222, 304, 1], [1, "cs", 1, 222, 302, 1], [1, "cs", 2, 223, 302, 1], [1, "cs", 2, 223, 303, 1], [1, "cs", 2, 222, 303, 1], [1, "cs", 2, 223, 304, 1], [1, "cs", 2, 221, 304, 1], [1, "cs", 2, 220, 304, 1], [1, "cs", 2, 220, 303, 1], [1, "cs", 2, 220, 302, 1], [1, "cs", 2, 221, 302, 1], [1, "cs", 2, 219, 303, 1], [1, "cs", 0, 217, 302, 1], [1, "cs", 0, 215, 304, 1], [1, "cs", 0, 214, 302, 1], [1, "cs", 1, 218, 302, 1], [1, "cs", 1, 217, 304, 1], [1, "cs", 1, 215, 302, 1], [1, "cs", 2, 219, 302, 1], [1, "cs", 2, 218, 303, 1], [1, "cs", 2, 218, 304, 1], [1, "cs", 2, 217, 303, 1], [1, "cs", 2, 216, 304, 1], [1, "cs", 2, 215, 303, 1], [1, "cs", 2, 216, 303, 1], [1, "cs", 2, 216, 302, 1], [1, "cs", 2, 214, 303, 1], [1, "cs", 2, 214, 304, 1], [1, "cs", 0, 212, 302, 1], [1, "cs", 0, 210, 303, 1], [1, "cs", 0, 212, 304, 1], [1, "cs", 0, 208, 304, 1], [1, "cs", 1, 210, 302, 1], [1, "cs", 1, 208, 303, 1], [1, "cs", 2, 213, 302, 1], [1, "cs", 2, 213, 303, 1], [1, "cs", 2, 213, 304, 1], [1, "cs", 2, 212, 303, 1], [1, "cs", 2, 211, 304, 1], [1, "cs", 2, 211, 303, 1], [1, "cs", 2, 211, 302, 1], [1, "cs", 2, 209, 302, 1], [1, "cs", 2, 209, 303, 1], [1, "cs", 2, 209, 304, 1], [1, "cs", 2, 210, 304, 1], [1, "cs", 2, 208, 302, 1], [1, "cs", 0, 206, 303, 1], [1, "cs", 0, 203, 304, 1], [1, "cs", 0, 200, 303, 1], [1, "cs", 0, 199, 304, 1], [1, "cs", 0, 195, 304, 1], [1, "cs", 0, 191, 303, 1], [1, "cs", 0, 193, 304, 1], [1, "cs", 0, 189, 304, 1], [1, "cs", 1, 204, 303, 1], [1, "cs", 0, 197, 302, 1], [1, "cs", 0, 202, 302, 1], [1, "cs", 0, 188, 302, 1], [1, "cs", 0, 194, 302, 1], [1, "cs", 1, 197, 303, 1], [1, "cs", 1, 201, 304, 1], [1, "cs", 1, 192, 302, 1], [1, "cs", 1, 189, 303, 1], [1, "cs", 1, 205, 302, 1], [1, "cs", 1, 188, 304, 1], [1, "cs", 2, 207, 302, 1], [1, "cs", 2, 207, 303, 1], [1, "cs", 2, 207, 304, 1], [1, "cs", 2, 206, 304, 1], [1, "cs", 2, 206, 302, 1], [1, "cs", 2, 205, 303, 1], [1, "cs", 2, 204, 304, 1], [1, "cs", 2, 205, 304, 1], [1, "cs", 2, 204, 302, 1], [1, "cs", 2, 203, 302, 1], [1, "cs", 2, 203, 303, 1], [1, "cs", 2, 202, 303, 1], [1, "cs", 2, 201, 303, 1], [1, "cs", 2, 201, 302, 1], [1, "cs", 2, 200, 302, 1], [1, "cs", 2, 199, 302, 1], [1, "cs", 2, 198, 303, 1], [1, "cs", 2, 198, 302, 1], [1, "cs", 2, 199, 303, 1], [1, "cs", 2, 200, 304, 1], [1, "cs", 2, 202, 304, 1], [1, "cs", 2, 197, 304, 1], [1, "cs", 2, 198, 304, 1], [1, "cs", 2, 196, 304, 1], [1, "cs", 2, 196, 303, 1], [1, "cs", 2, 196, 302, 1], [1, "cs", 2, 195, 302, 1], [1, "cs", 2, 195, 303, 1], [1, "cs", 2, 194, 303, 1], [1, "cs", 2, 194, 304, 1], [1, "cs", 2, 193, 303, 1], [1, "cs", 2, 193, 302, 1], [1, "cs", 2, 192, 303, 1], [1, "cs", 2, 192, 304, 1], [1, "cs", 2, 191, 304, 1], [1, "cs", 2, 190, 304, 1], [1, "cs", 2, 190, 303, 1], [1, "cs", 2, 189, 302, 1], [1, "cs", 2, 190, 302, 1], [1, "cs", 2, 191, 302, 1], [1, "cs", 2, 188, 303, 1], [1, "cs", 0, 186, 303, 1], [1, "cs", 0, 183, 304, 1], [1, "cs", 0, 184, 302, 1], [1, "cs", 0, 181, 302, 1], [1, "cs", 0, 176, 302, 1], [1, "cs", 0, 178, 303, 1], [1, "cs", 0, 173, 304, 1], [1, "cs", 0, 170, 303, 1], [1, "cs", 0, 172, 302, 1], [1, "cs", 1, 182, 303, 1], [1, "cs", 1, 178, 304, 1], [1, "cs", 1, 175, 304, 1], [1, "cs", 1, 173, 302, 1], [1, "cs", 1, 185, 304, 1], [1, "cs", 1, 169, 304, 1], [1, "cs", 3, 187, 304, 1], [1, "cs", 3, 186, 304, 1], [1, "cs", 3, 187, 303, 1], [1, "cs", 3, 187, 302, 1], [1, "cs", 3, 186, 302, 1], [1, "cs", 3, 185, 302, 1], [1, "cs", 3, 185, 303, 1], [1, "cs", 3, 184, 303, 1], [1, "cs", 3, 183, 303, 1], [1, "cs", 3, 183, 302, 1], [1, "cs", 3, 182, 302, 1], [1, "cs", 3, 184, 304, 1], [1, "cs", 3, 182, 304, 1], [1, "cs", 3, 181, 304, 1], [1, "cs", 3, 179, 304, 1], [1, "cs", 3, 180, 304, 1], [1, "cs", 3, 181, 303, 1], [1, "cs", 3, 180, 303, 1], [1, "cs", 3, 179, 303, 1], [1, "cs", 3, 180, 302, 1], [1, "cs", 3, 179, 302, 1], [1, "cs", 3, 178, 302, 1], [1, "cs", 3, 177, 302, 1], [1, "cs", 3, 177, 304, 1], [1, "cs", 3, 177, 303, 1], [1, "cs", 3, 176, 303, 1], [1, "cs", 3, 176, 304, 1], [1, "cs", 3, 174, 304, 1], [1, "cs", 3, 175, 303, 1], [1, "cs", 3, 174, 303, 1], [1, "cs", 3, 173, 303, 1], [1, "cs", 3, 172, 303, 1], [1, "cs", 3, 171, 303, 1], [1, "cs", 3, 170, 304, 1], [1, "cs", 3, 171, 304, 1], [1, "cs", 3, 172, 304, 1], [1, "cs", 3, 174, 302, 1], [1, "cs", 3, 175, 302, 1], [1, "cs", 3, 171, 302, 1], [1, "cs", 3, 170, 302, 1], [1, "cs", 3, 169, 302, 1], [1, "cs", 3, 169, 303, 1], [1, "cs", 0, 168, 302, 1], [1, "cs", 0, 166, 303, 1], [1, "cs", 0, 163, 304, 1], [1, "cs", 0, 161, 302, 1], [1, "cs", 0, 159, 303, 1], [1, "cs", 0, 152, 304, 1], [1, "cs", 0, 155, 303, 1], [1, "cs", 1, 164, 303, 1], [1, "cs", 1, 162, 303, 1], [1, "cs", 1, 158, 304, 1], [1, "cs", 1, 156, 302, 1], [1, "cs", 1, 153, 302, 1], [1, "cs", 1, 154, 304, 1], [1, "cs", 2, 168, 304, 1], [1, "cs", 2, 168, 303, 1], [1, "cs", 2, 167, 303, 1], [1, "cs", 2, 167, 304, 1], [1, "cs", 2, 166, 304, 1], [1, "cs", 2, 165, 304, 1], [1, "cs", 2, 164, 304, 1], [1, "cs", 2, 165, 303, 1], [1, "cs", 2, 167, 302, 1], [1, "cs", 2, 166, 302, 1], [1, "cs", 2, 165, 302, 1], [1, "cs", 2, 164, 302, 1], [1, "cs", 2, 163, 302, 1], [1, "cs", 2, 162, 302, 1], [1, "cs", 2, 163, 303, 1], [1, "cs", 2, 162, 304, 1], [1, "cs", 2, 160, 304, 1], [1, "cs", 2, 159, 304, 1], [1, "cs", 2, 161, 304, 1], [1, "cs", 2, 161, 303, 1], [1, "cs", 2, 160, 303, 1], [1, "cs", 2, 160, 302, 1], [1, "cs", 2, 158, 302, 1], [1, "cs", 2, 159, 302, 1], [1, "cs", 2, 157, 302, 1], [1, "cs", 2, 156, 303, 1], [1, "cs", 2, 157, 303, 1], [1, "cs", 2, 158, 303, 1], [1, "cs", 2, 157, 304, 1], [1, "cs", 2, 156, 304, 1], [1, "cs", 2, 155, 304, 1], [1, "cs", 2, 153, 304, 1], [1, "cs", 2, 153, 303, 1], [1, "cs", 2, 154, 303, 1], [1, "cs", 2, 154, 302, 1], [1, "cs", 2, 155, 302, 1], [1, "cs", 2, 152, 303, 1], [1, "cs", 2, 152, 302, 1], [1, "cs", 0, 151, 302, 1], [1, "cs", 0, 149, 303, 1], [1, "cs", 0, 145, 304, 1], [1, "cs", 0, 147, 302, 1], [1, "cs", 0, 143, 303, 1], [1, "cs", 0, 141, 303, 1], [1, "cs", 1, 147, 304, 1], [1, "cs", 1, 145, 302, 1], [1, "cs", 1, 142, 302, 1], [1, "cs", 1, 150, 304, 1], [1, "cs", 2, 151, 304, 1], [1, "cs", 2, 151, 303, 1], [1, "cs", 2, 150, 303, 1], [1, "cs", 2, 150, 302, 1], [1, "cs", 2, 148, 302, 1], [1, "cs", 2, 146, 302, 1], [1, "cs", 2, 144, 302, 1], [1, "cs", 2, 141, 302, 1], [1, "cs", 2, 141, 304, 1], [1, "cs", 2, 142, 304, 1], [1, "cs", 2, 142, 303, 1], [1, "cs", 2, 143, 304, 1], [1, "cs", 2, 144, 304, 1], [1, "cs", 2, 144, 303, 1], [1, "cs", 2, 148, 304, 1], [1, "cs", 2, 148, 303, 1], [1, "cs", 2, 146, 303, 1], [1, "cs", 2, 145, 303, 1], [1, "cs", 2, 147, 303, 1], [1, "cs", 2, 146, 304, 1], [1, "cs", 2, 149, 304, 1], [1, "cs", 3, 149, 302, 1], [1, "cs", 3, 143, 302, 1], [1, "cs", 0, 139, 304, 1], [1, "cs", 0, 138, 302, 1], [1, "cs", 1, 139, 302, 1], [1, "cs", 2, 140, 302, 1], [1, "cs", 2, 140, 303, 1], [1, "cs", 2, 139, 303, 1], [1, "cs", 2, 138, 303, 1], [1, "cs", 2, 138, 304, 1], [1, "cs", 2, 140, 304, 1], [1, "cs", 0, 137, 304, 1], [1, "cs", 0, 135, 303, 1], [1, "cs", 0, 133, 304, 1], [1, "cs", 1, 135, 304, 1], [1, "cs", 1, 136, 302, 1], [1, "cs", 2, 137, 302, 1], [1, "cs", 2, 136, 303, 1], [1, "cs", 2, 137, 303, 1], [1, "cs", 2, 136, 304, 1], [1, "cs", 2, 134, 304, 1], [1, "cs", 2, 134, 303, 1], [1, "cs", 2, 133, 303, 1], [1, "cs", 2, 132, 304, 1], [1, "cs", 0, 131, 302, 1], [1, "cs", 0, 134, 302, 1], [1, "cs", 0, 129, 304, 1], [1, "cs", 1, 130, 303, 1], [1, "cs", 1, 132, 302, 1], [1, "cs", 2, 135, 302, 1], [1, "cs", 2, 133, 302, 1], [1, "cs", 2, 132, 303, 1], [1, "cs", 2, 131, 303, 1], [1, "cs", 2, 130, 304, 1], [1, "cs", 2, 131, 304, 1], [1, "cs", 2, 128, 304, 1], [1, "cs", 2, 129, 303, 1], [1, "cs", 2, 130, 302, 1], [1, "cs", 3, 127, 304, 1], [1, "cs", 2, 132, 301, 1], [1, "cs", 2, 133, 301, 1], [1, "cs", 2, 134, 301, 1], [1, "cs", 2, 135, 301, 1], [1, "cs", 3, 131, 301, 1], [1, "cs", 3, 136, 301, 1], [1, "cs", 3, 136, 178, 1], [1, "cs", 0, 136, 183, 1], [1, "cs", 2, 136, 182, 1], [1, "cs", 1, 136, 181, 1], [1, "cs", 0, 136, 179, 1], [1, "cs", 3, 136, 180, 1], [1, "cs", 2, 135, 183, 1], [1, "cs", 1, 135, 182, 1], [1, "cs", 3, 135, 180, 1], [1, "cs", 0, 134, 183, 1], [1, "cs", 2, 133, 183, 1], [1, "cs", 3, 133, 182, 1], [1, "cs", 1, 132, 183, 1], [1, "cs", 3, 131, 183, 1], [1, "cs", 2, 135, 181, 1], [1, "cs", 2, 134, 182, 1], [1, "cs", 3, 134, 181, 1], [1, "fod", 0, 213, 301, 0], [1, "fod", 0, 204, 301, 0], [1, "fod", 1, 196, 288, 0], [1, "fod", 1, 198, 283, 0], [1, "fod", 1, 190, 288, 0], [1, "fod", 1, 189, 296, 0], [1, "fod", 1, 193, 293, 0], [1, "fod", 1, 183, 292, 0], [1, "fod", 1, 186, 287, 0], [1, "fod", 1, 190, 290, 0], [1, "fod", 1, 218, 271, 0], [1, "fod", 1, 220, 266, 0], [1, "fod", 1, 211, 268, 0], [1, "fod", 1, 210, 274, 0], [1, "fod", 1, 205, 263, 0], [1, "fod", 1, 216, 258, 0], [1, "fod", 2, 201, 294, 0], [1, "fod", 2, 190, 296, 0], [1, "fod", 2, 188, 299, 0], [1, "fod", 2, 186, 297, 0], [1, "fod", 2, 188, 296, 0], [1, "fod", 2, 189, 291, 0], [1, "fod", 2, 189, 286, 0], [1, "fod", 2, 191, 286, 0], [1, "fod", 2, 197, 286, 0], [1, "fod", 2, 195, 290, 0], [1, "fod", 2, 186, 288, 0], [1, "fod", 2, 184, 290, 0], [1, "fod", 2, 183, 293, 0], [1, "fod", 2, 198, 286, 0], [1, "fod", 2, 196, 283, 0], [1, "fod", 2, 196, 281, 0], [1, "fod", 2, 201, 280, 0], [1, "fod", 2, 205, 287, 0], [1, "fod", 2, 209, 283, 0], [1, "fod", 2, 212, 280, 0], [1, "fod", 2, 209, 277, 0], [1, "fod", 2, 217, 278, 0], [1, "fod", 2, 219, 275, 0], [1, "fod", 2, 220, 271, 0], [1, "fod", 2, 220, 267, 0], [1, "fod", 2, 217, 265, 0], [1, "fod", 2, 213, 267, 0], [1, "fod", 2, 208, 264, 0], [1, "fod", 2, 206, 261, 0], [1, "fod", 2, 203, 265, 0], [1, "fod", 2, 204, 270, 0], [1, "fod", 2, 196, 267, 0], [1, "fod", 2, 214, 261, 0], [1, "fod", 2, 211, 260, 0], [1, "fod", 2, 218, 256, 0], [1, "fod", 2, 219, 262, 0], [1, "fod", 2, 220, 253, 0], [1, "fod", 2, 211, 257, 0], [1, "la", 3, 198, 27, 1], [1, "la", 3, 201, 30, 1], [1, "la", 3, 200, 32, 1], [1, "la", 3, 198, 33, 1], [1, "la", 3, 196, 33, 1], [1, "la", 3, 194, 32, 1], [1, "la", 3, 194, 28, 1], [1, "la", 0, 200, 28, 1], [1, "la", 0, 193, 30, 1], [1, "la", 3, 196, 27, 1], [1, "la", 3, 199, 30, 1], [1, "la", 3, 197, 29, 1], [1, "la", 3, 195, 30, 1], [1, "la", 3, 197, 31, 1], [1, "la", 2, 201, 33, 1], [1, "la", 4, 202, 34, 1], [1, "la", 4, 202, 35, 1], [1, "la", 4, 203, 36, 1], [1, "la", 4, 204, 37, 1], [1, "la", 2, 205, 38, 1], [1, "la", 5, 205, 39, 1], [1, "la", 5, 205, 40, 1], [1, "la", 2, 206, 41, 1], [1, "la", 1, 207, 42, 1], [1, "la", 1, 205, 41, 1], [1, "la", 4, 208, 43, 1], [1, "la", 4, 209, 43, 1], [1, "la", 1, 210, 43, 1], [1, "la", 2, 211, 43, 1], [1, "la", 5, 212, 43, 1], [1, "la", 4, 213, 44, 1], [1, "la", 3, 223, 54, 1], [1, "la", 3, 221, 53, 1], [1, "la", 3, 219, 53, 1], [1, "la", 4, 218, 52, 1], [1, "la", 4, 217, 51, 1], [1, "la", 4, 216, 51, 1], [1, "la", 1, 215, 50, 1], [1, "la", 4, 212, 46, 1], [1, "la", 1, 210, 44, 1], [1, "la", 3, 206, 50, 1], [1, "re", 0, 217, 24, 1], [1, "re", 0, 207, 16, 1], [1, "de", 44, 54, 14, 0], [1, "de", 44, 53, 13, 0], [1, "de", 44, 51, 16, 0], [1, "de", 44, 49, 13, 0], [1, "de", 44, 48, 14, 0], [1, "de", 21, 78, 293, 0], [1, "cs", 0, 221, 8, 1], [1, "cs", 0, 224, 9, 1], [1, "cs", 1, 223, 8, 1], [1, "cs", 2, 224, 8, 1], [1, "cs", 2, 222, 8, 1], [1, "cs", 0, 224, 6, 1], [1, "cs", 0, 222, 5, 1], [1, "cs", 0, 219, 7, 1], [1, "cs", 1, 220, 5, 1], [1, "cs", 1, 217, 7, 1], [1, "cs", 2, 224, 5, 1], [1, "cs", 2, 223, 5, 1], [1, "cs", 2, 224, 7, 1], [1, "cs", 2, 223, 7, 1], [1, "cs", 2, 223, 6, 1], [1, "cs", 2, 222, 6, 1], [1, "cs", 2, 222, 7, 1], [1, "cs", 2, 221, 7, 1], [1, "cs", 2, 221, 6, 1], [1, "cs", 2, 221, 5, 1], [1, "cs", 2, 220, 6, 1], [1, "cs", 2, 220, 7, 1], [1, "cs", 2, 220, 8, 1], [1, "cs", 2, 219, 8, 1], [1, "cs", 2, 219, 6, 1], [1, "cs", 2, 219, 5, 1], [1, "cs", 0, 218, 5, 1], [1, "cs", 0, 216, 8, 1], [1, "cs", 2, 218, 8, 1], [1, "cs", 2, 217, 8, 1], [1, "cs", 2, 218, 7, 1], [1, "cs", 2, 218, 6, 1], [1, "cs", 2, 217, 6, 1], [1, "cs", 2, 217, 5, 1], [1, "cs", 1, 215, 6, 1], [1, "cs", 1, 213, 5, 1], [1, "cs", 0, 214, 6, 1], [1, "cs", 0, 216, 5, 1], [1, "cs", 0, 213, 8, 1], [1, "cs", 0, 211, 7, 1], [1, "cs", 0, 209, 5, 1], [1, "cs", 0, 208, 7, 1], [1, "cs", 0, 207, 8, 1], [1, "cs", 2, 216, 6, 1], [1, "cs", 2, 216, 7, 1], [1, "cs", 2, 215, 7, 1], [1, "cs", 2, 215, 8, 1], [1, "cs", 2, 214, 8, 1], [1, "cs", 2, 214, 7, 1], [1, "cs", 2, 215, 5, 1], [1, "cs", 2, 214, 5, 1], [1, "cs", 2, 213, 6, 1], [1, "cs", 2, 213, 7, 1], [1, "cs", 2, 212, 7, 1], [1, "cs", 1, 211, 5, 1], [1, "cs", 1, 209, 8, 1], [1, "cs", 2, 212, 8, 1], [1, "cs", 2, 211, 8, 1], [1, "cs", 2, 210, 8, 1], [1, "cs", 2, 209, 7, 1], [1, "cs", 2, 210, 7, 1], [1, "cs", 2, 210, 6, 1], [1, "cs", 2, 212, 6, 1], [1, "cs", 2, 212, 5, 1], [1, "cs", 2, 211, 6, 1], [1, "cs", 2, 210, 5, 1], [1, "cs", 2, 209, 6, 1], [1, "cs", 2, 208, 6, 1], [1, "cs", 2, 208, 5, 1], [1, "cs", 2, 207, 7, 1], [1, "cs", 2, 207, 6, 1], [1, "cs", 2, 207, 5, 1], [1, "cs", 2, 206, 5, 1], [1, "cs", 2, 208, 8, 1], [1, "cs", 2, 206, 6, 1], [1, "cs", 0, 204, 8, 1], [1, "cs", 0, 205, 6, 1], [1, "cs", 0, 203, 5, 1], [1, "cs", 0, 202, 7, 1], [1, "cs", 0, 199, 8, 1], [1, "cs", 0, 200, 6, 1], [1, "cs", 0, 197, 6, 1], [1, "cs", 0, 195, 8, 1], [1, "cs", 0, 194, 6, 1], [1, "cs", 1, 202, 8, 1], [1, "cs", 1, 206, 7, 1], [1, "cs", 1, 201, 5, 1], [1, "cs", 1, 197, 8, 1], [1, "cs", 1, 192, 7, 1], [1, "cs", 1, 195, 5, 1], [1, "cs", 2, 205, 7, 1], [1, "cs", 2, 205, 8, 1], [1, "cs", 2, 206, 8, 1], [1, "cs", 2, 204, 7, 1], [1, "cs", 2, 204, 6, 1], [1, "cs", 2, 204, 5, 1], [1, "cs", 2, 205, 5, 1], [1, "cs", 2, 203, 6, 1], [1, "cs", 2, 203, 7, 1], [1, "cs", 2, 203, 8, 1], [1, "cs", 2, 201, 8, 1], [1, "cs", 2, 200, 8, 1], [1, "cs", 2, 200, 7, 1], [1, "cs", 2, 201, 7, 1], [1, "cs", 2, 201, 6, 1], [1, "cs", 2, 202, 5, 1], [1, "cs", 2, 202, 6, 1], [1, "cs", 2, 200, 5, 1], [1, "cs", 2, 199, 5, 1], [1, "cs", 2, 197, 5, 1], [1, "cs", 2, 196, 5, 1], [1, "cs", 2, 198, 5, 1], [1, "cs", 2, 198, 6, 1], [1, "cs", 2, 199, 6, 1], [1, "cs", 2, 199, 7, 1], [1, "cs", 2, 198, 7, 1], [1, "cs", 2, 198, 8, 1], [1, "cs", 2, 197, 7, 1], [1, "cs", 2, 196, 7, 1], [1, "cs", 2, 196, 8, 1], [1, "cs", 2, 196, 6, 1], [1, "cs", 2, 195, 6, 1], [1, "cs", 2, 195, 7, 1], [1, "cs", 2, 194, 7, 1], [1, "cs", 2, 193, 8, 1], [1, "cs", 2, 194, 8, 1], [1, "cs", 2, 193, 7, 1], [1, "cs", 2, 193, 6, 1], [1, "cs", 2, 193, 5, 1], [1, "cs", 2, 194, 5, 1], [1, "cs", 0, 192, 5, 1], [1, "cs", 0, 191, 8, 1], [1, "cs", 0, 190, 6, 1], [1, "cs", 0, 188, 7, 1], [1, "cs", 0, 186, 8, 1], [1, "cs", 0, 186, 5, 1], [1, "cs", 0, 184, 7, 1], [1, "cs", 0, 182, 8, 1], [1, "cs", 0, 181, 6, 1], [1, "cs", 1, 189, 8, 1], [1, "cs", 1, 183, 8, 1], [1, "cs", 1, 188, 5, 1], [1, "cs", 1, 185, 6, 1], [1, "cs", 1, 180, 7, 1], [1, "cs", 1, 183, 5, 1], [1, "cs", 1, 178, 8, 1], [1, "cs", 1, 177, 6, 1], [1, "cs", 1, 173, 7, 1], [1, "cs", 1, 171, 7, 1], [1, "cs", 0, 177, 8, 1], [1, "cs", 0, 175, 7, 1], [1, "cs", 0, 179, 5, 1], [1, "cs", 0, 174, 5, 1], [1, "cs", 0, 176, 5, 1], [1, "cs", 0, 172, 8, 1], [1, "cs", 0, 170, 8, 1], [1, "cs", 0, 169, 6, 1], [1, "cs", 2, 192, 6, 1], [1, "cs", 2, 192, 8, 1], [1, "cs", 2, 191, 7, 1], [1, "cs", 2, 191, 6, 1], [1, "cs", 2, 191, 5, 1], [1, "cs", 2, 190, 5, 1], [1, "cs", 2, 189, 5, 1], [1, "cs", 2, 189, 6, 1], [1, "cs", 2, 189, 7, 1], [1, "cs", 2, 190, 7, 1], [1, "cs", 2, 190, 8, 1], [1, "cs", 2, 188, 8, 1], [1, "cs", 2, 187, 8, 1], [1, "cs", 2, 187, 7, 1], [1, "cs", 2, 187, 6, 1], [1, "cs", 2, 188, 6, 1], [1, "cs", 2, 187, 5, 1], [1, "cs", 2, 186, 6, 1], [1, "cs", 2, 186, 7, 1], [1, "cs", 2, 185, 7, 1], [1, "cs", 2, 185, 8, 1], [1, "cs", 2, 184, 8, 1], [1, "cs", 2, 183, 7, 1], [1, "cs", 2, 183, 6, 1], [1, "cs", 2, 184, 6, 1], [1, "cs", 2, 184, 5, 1], [1, "cs", 2, 185, 5, 1], [1, "cs", 2, 182, 6, 1], [1, "cs", 2, 182, 7, 1], [1, "cs", 2, 181, 7, 1], [1, "cs", 2, 181, 8, 1], [1, "cs", 2, 180, 8, 1], [1, "cs", 2, 179, 8, 1], [1, "cs", 2, 182, 5, 1], [1, "cs", 2, 181, 5, 1], [1, "cs", 2, 180, 5, 1], [1, "cs", 2, 180, 6, 1], [1, "cs", 2, 179, 6, 1], [1, "cs", 2, 179, 7, 1], [1, "cs", 2, 178, 7, 1], [1, "cs", 2, 178, 6, 1], [1, "cs", 2, 178, 5, 1], [1, "cs", 2, 177, 5, 1], [1, "cs", 2, 177, 7, 1], [1, "cs", 2, 176, 7, 1], [1, "cs", 2, 176, 6, 1], [1, "cs", 2, 175, 6, 1], [1, "cs", 2, 175, 5, 1], [1, "cs", 2, 176, 8, 1], [1, "cs", 2, 174, 8, 1], [1, "cs", 2, 175, 8, 1], [1, "cs", 2, 173, 8, 1], [1, "cs", 2, 174, 7, 1], [1, "cs", 2, 173, 6, 1], [1, "cs", 2, 174, 6, 1], [1, "cs", 2, 172, 5, 1], [1, "cs", 2, 173, 5, 1], [1, "cs", 2, 172, 6, 1], [1, "cs", 2, 172, 7, 1], [1, "cs", 2, 171, 8, 1], [1, "cs", 2, 170, 7, 1], [1, "cs", 2, 170, 6, 1], [1, "cs", 2, 170, 5, 1], [1, "cs", 2, 171, 5, 1], [1, "cs", 2, 171, 6, 1], [1, "cs", 2, 169, 5, 1], [1, "cs", 2, 169, 7, 1], [1, "cs", 2, 169, 8, 1], [1, "cs", 1, 168, 7, 1], [1, "cs", 1, 166, 5, 1], [1, "cs", 1, 164, 7, 1], [1, "cs", 1, 160, 7, 1], [1, "cs", 1, 156, 8, 1], [1, "cs", 0, 166, 8, 1], [1, "cs", 0, 168, 5, 1], [1, "cs", 0, 164, 6, 1], [1, "cs", 0, 162, 7, 1], [1, "cs", 0, 158, 8, 1], [1, "cs", 0, 157, 6, 1], [1, "cs", 0, 161, 5, 1], [1, "cs", 0, 159, 5, 1], [1, "cs", 0, 155, 7, 1], [1, "cs", 0, 154, 5, 1], [1, "cs", 0, 151, 7, 1], [1, "cs", 1, 153, 8, 1], [1, "cs", 1, 151, 5, 1], [1, "cs", 2, 168, 6, 1], [1, "cs", 2, 168, 8, 1], [1, "cs", 2, 167, 8, 1], [1, "cs", 2, 167, 7, 1], [1, "cs", 2, 167, 6, 1], [1, "cs", 2, 167, 5, 1], [1, "cs", 2, 166, 6, 1], [1, "cs", 2, 166, 7, 1], [1, "cs", 2, 165, 7, 1], [1, "cs", 2, 165, 6, 1], [1, "cs", 2, 165, 5, 1], [1, "cs", 2, 164, 5, 1], [1, "cs", 2, 163, 5, 1], [1, "cs", 2, 162, 5, 1], [1, "cs", 2, 162, 6, 1], [1, "cs", 2, 163, 6, 1], [1, "cs", 2, 163, 7, 1], [1, "cs", 2, 163, 8, 1], [1, "cs", 2, 164, 8, 1], [1, "cs", 2, 165, 8, 1], [1, "cs", 2, 161, 8, 1], [1, "cs", 2, 162, 8, 1], [1, "cs", 2, 160, 8, 1], [1, "cs", 2, 159, 8, 1], [1, "cs", 2, 159, 7, 1], [1, "cs", 2, 159, 6, 1], [1, "cs", 2, 160, 5, 1], [1, "cs", 2, 160, 6, 1], [1, "cs", 2, 161, 6, 1], [1, "cs", 2, 161, 7, 1], [1, "cs", 2, 157, 7, 1], [1, "cs", 2, 158, 7, 1], [1, "cs", 2, 158, 6, 1], [1, "cs", 2, 158, 5, 1], [1, "cs", 2, 155, 5, 1], [1, "cs", 2, 155, 6, 1], [1, "cs", 2, 156, 6, 1], [1, "cs", 2, 156, 7, 1], [1, "cs", 2, 157, 8, 1], [1, "cs", 2, 155, 8, 1], [1, "cs", 2, 154, 8, 1], [1, "cs", 2, 154, 7, 1], [1, "cs", 2, 154, 6, 1], [1, "cs", 2, 152, 8, 1], [1, "cs", 2, 153, 7, 1], [1, "cs", 2, 153, 6, 1], [1, "cs", 2, 153, 5, 1], [1, "cs", 2, 152, 5, 1], [1, "cs", 2, 152, 6, 1], [1, "cs", 2, 152, 7, 1], [1, "cs", 2, 151, 6, 1], [1, "cs", 2, 157, 5, 1], [1, "cs", 1, 156, 5, 1], [1, "cs", 0, 150, 5, 1], [1, "cs", 0, 149, 7, 1], [1, "cs", 0, 147, 8, 1], [1, "cs", 0, 146, 5, 1], [1, "cs", 0, 144, 7, 1], [1, "cs", 0, 142, 5, 1], [1, "cs", 1, 147, 6, 1], [1, "cs", 1, 145, 8, 1], [1, "cs", 1, 144, 5, 1], [1, "cs", 2, 148, 5, 1], [1, "cs", 2, 149, 5, 1], [1, "cs", 2, 150, 6, 1], [1, "cs", 2, 150, 8, 1], [1, "cs", 2, 151, 8, 1], [1, "cs", 2, 150, 7, 1], [1, "cs", 2, 149, 8, 1], [1, "cs", 2, 148, 8, 1], [1, "cs", 2, 149, 6, 1], [1, "cs", 2, 148, 6, 1], [1, "cs", 2, 148, 7, 1], [1, "cs", 2, 147, 7, 1], [1, "cs", 2, 147, 5, 1], [1, "cs", 2, 146, 6, 1], [1, "cs", 2, 146, 7, 1], [1, "cs", 2, 146, 8, 1], [1, "cs", 2, 145, 7, 1], [1, "cs", 2, 145, 6, 1], [1, "cs", 2, 145, 5, 1], [1, "cs", 2, 144, 6, 1], [1, "cs", 2, 143, 5, 1], [1, "cs", 2, 143, 6, 1], [1, "cs", 2, 142, 6, 1], [1, "cs", 2, 141, 5, 1], [1, "cs", 2, 224, 10, 1], [1, "cs", 0, 224, 11, 1], [1, "cs", 0, 224, 13, 1], [1, "cs", 0, 224, 17, 1], [1, "cs", 0, 224, 19, 1], [1, "cs", 0, 224, 22, 1], [1, "cs", 0, 224, 24, 1], [1, "cs", 0, 224, 29, 1], [1, "cs", 0, 224, 33, 1], [1, "cs", 0, 224, 35, 1], [1, "cs", 0, 224, 38, 1], [1, "cs", 1, 224, 14, 1], [1, "cs", 1, 224, 20, 1], [1, "cs", 1, 224, 27, 1], [1, "cs", 1, 224, 31, 1], [1, "cs", 1, 224, 36, 1], [1, "cs", 2, 224, 12, 1], [1, "cs", 2, 224, 15, 1], [1, "cs", 2, 224, 16, 1], [1, "cs", 2, 224, 18, 1], [1, "cs", 2, 224, 21, 1], [1, "cs", 2, 224, 23, 1], [1, "cs", 2, 224, 25, 1], [1, "cs", 2, 224, 26, 1], [1, "cs", 2, 224, 28, 1], [1, "cs", 2, 224, 30, 1], [1, "cs", 2, 224, 32, 1], [1, "cs", 2, 224, 34, 1], [1, "cs", 2, 224, 37, 1], [1, "cs", 2, 224, 39, 1], [1, "cs", 0, 224, 41, 1], [1, "cs", 0, 224, 44, 1], [1, "cs", 0, 224, 46, 1], [1, "cs", 0, 224, 52, 1], [1, "cs", 0, 224, 57, 1], [1, "cs", 1, 224, 47, 1], [1, "cs", 2, 224, 40, 1], [1, "cs", 2, 224, 42, 1], [1, "cs", 2, 224, 43, 1], [1, "cs", 2, 224, 45, 1], [1, "cs", 2, 224, 49, 1], [1, "cs", 1, 224, 50, 1], [1, "cs", 2, 224, 51, 1], [1, "la", 3, 224, 54, 1], [1, "cs", 2, 224, 56, 1], [1, "cs", 2, 224, 58, 1], [1, "cs", 2, 224, 61, 1], [1, "cs", 0, 224, 60, 1], [1, "cs", 0, 224, 64, 1], [1, "cs", 0, 224, 66, 1], [1, "cs", 0, 224, 70, 1], [1, "cs", 0, 224, 74, 1], [1, "cs", 0, 224, 77, 1], [1, "cs", 1, 224, 62, 1], [1, "cs", 1, 224, 68, 1], [1, "cs", 1, 224, 72, 1], [1, "cs", 1, 224, 76, 1], [1, "cs", 1, 224, 80, 1], [1, "cs", 1, 224, 83, 1], [1, "cs", 1, 224, 91, 1], [1, "cs", 1, 224, 95, 1], [1, "cs", 1, 224, 97, 1], [1, "cs", 0, 224, 85, 1], [1, "cs", 0, 224, 88, 1], [1, "cs", 0, 224, 93, 1], [1, "cs", 0, 224, 98, 1], [1, "cs", 2, 224, 59, 1], [1, "cs", 2, 224, 63, 1], [1, "cs", 2, 224, 65, 1], [1, "cs", 2, 224, 67, 1], [1, "cs", 2, 224, 69, 1], [1, "cs", 2, 224, 71, 1], [1, "cs", 2, 224, 73, 1], [1, "cs", 2, 224, 75, 1], [1, "cs", 2, 224, 78, 1], [1, "cs", 2, 224, 79, 1], [1, "cs", 2, 224, 81, 1], [1, "cs", 2, 224, 82, 1], [1, "cs", 2, 224, 84, 1], [1, "cs", 2, 224, 86, 1], [1, "cs", 2, 224, 87, 1], [1, "cs", 2, 224, 89, 1], [1, "cs", 2, 224, 90, 1], [1, "cs", 2, 224, 92, 1], [1, "cs", 2, 224, 94, 1], [1, "cs", 2, 224, 96, 1], [1, "cs", 2, 224, 99, 1], [1, "cs", 2, 224, 100, 1], [1, "cs", 0, 224, 101, 1], [1, "cs", 1, 224, 103, 1], [1, "cs", 2, 224, 102, 1], [1, "cs", 0, 222, 10, 1], [1, "cs", 2, 223, 9, 1], [1, "cs", 2, 222, 9, 1], [1, "cs", 2, 221, 9, 1], [1, "cs", 2, 223, 10, 1], [1, "cs", 2, 223, 11, 1], [1, "cs", 2, 223, 12, 1], [1, "cs", 3, 223, 13, 1], [1, "cs", 3, 222, 11, 1], [1, "cs", 3, 220, 9, 1], [1, "cs", 3, 219, 9, 1], [1, "cs", 3, 221, 10, 1], [1, "re", 2, 219, 13, 1], [1, "re", 1, 218, 18, 1], [1, "re", 1, 214, 13, 1], [1, "cs", 0, 221, 20, 1], [1, "cs", 1, 223, 18, 1], [1, "cs", 2, 222, 19, 1], [1, "cs", 2, 223, 19, 1], [1, "cs", 2, 223, 20, 1], [1, "cs", 2, 222, 20, 1], [1, "cs", 2, 220, 21, 1], [1, "cs", 0, 219, 21, 1], [1, "cs", 3, 221, 21, 1], [1, "cs", 3, 218, 21, 1], [1, "cs", 3, 222, 21, 1], [1, "cs", 3, 220, 22, 1], [1, "cs", 3, 219, 22, 1], [1, "cs", 3, 221, 22, 1], [1, "cs", 0, 211, 9, 1], [1, "cs", 1, 211, 10, 1], [1, "cs", 1, 210, 12, 1], [1, "cs", 0, 211, 13, 1], [1, "cs", 2, 210, 9, 1], [1, "cs", 2, 210, 10, 1], [1, "cs", 2, 210, 11, 1], [1, "cs", 2, 212, 9, 1], [1, "cs", 2, 210, 13, 1], [1, "cs", 2, 211, 12, 1], [1, "cs", 2, 211, 11, 1], [1, "cs", 2, 211, 14, 1], [1, "cs", 2, 212, 15, 1], [1, "cs", 2, 210, 14, 1], [1, "cs", 3, 211, 15, 1], [1, "cs", 3, 213, 9, 1], [1, "cs", 3, 212, 10, 1], [1, "cs", 3, 223, 21, 1], [1, "cs", 3, 209, 9, 1], [1, "la", 3, 223, 22, 1], [1, "la", 3, 221, 23, 1], [1, "la", 3, 207, 9, 1], [1, "la", 3, 209, 10, 1], [1, "la", 0, 209, 12, 1], [1, "la", 4, 209, 14, 1], [1, "la", 4, 219, 23, 1], [1, "la", 3, 210, 15, 1], [1, "la", 3, 217, 22, 1], [1, "la", 4, 212, 16, 1], [1, "la", 2, 214, 19, 1], [1, "la", 4, 213, 20, 1], [1, "la", 1, 212, 21, 1], [1, "la", 4, 215, 18, 1], [1, "la", 2, 216, 17, 1], [1, "la", 5, 216, 16, 1], [1, "la", 5, 216, 15, 1], [1, "la", 1, 217, 16, 1], [1, "la", 2, 218, 16, 1], [1, "la", 2, 216, 14, 1], [1, "la", 2, 219, 16, 1], [1, "la", 5, 220, 16, 1], [1, "la", 5, 216, 13, 1], [1, "la", 4, 217, 15, 1], [1, "cs", 0, 211, 44, 1], [1, "cs", 1, 212, 45, 1], [1, "cs", 2, 213, 45, 1], [1, "cs", 0, 214, 46, 1], [1, "cs", 2, 215, 46, 1], [1, "cs", 3, 213, 46, 1], [1, "cs", 3, 214, 47, 1], [1, "cs", 3, 214, 48, 1], [1, "cs", 3, 216, 46, 1], [1, "cs", 0, 208, 20, 1], [1, "cs", 0, 210, 21, 1], [1, "cs", 0, 212, 23, 1], [1, "cs", 0, 213, 25, 1], [1, "cs", 2, 213, 24, 1], [1, "cs", 2, 211, 22, 1], [1, "cs", 2, 210, 20, 1], [1, "cs", 2, 209, 21, 1], [1, "cs", 2, 209, 20, 1], [1, "cs", 2, 211, 21, 1], [1, "cs", 2, 212, 22, 1], [1, "cs", 2, 213, 23, 1], [1, "cs", 3, 213, 26, 1], [1, "cs", 3, 207, 20, 1], [1, "la", 4, 192, 33, 1], [1, "la", 4, 191, 34, 1], [1, "la", 4, 190, 35, 1], [1, "la", 3, 189, 37, 1], [1, "la", 3, 188, 39, 1], [1, "la", 4, 186, 40, 1], [1, "la", 4, 185, 39, 1], [1, "la", 4, 184, 39, 1], [1, "la", 2, 183, 39, 1], [1, "la", 1, 182, 40, 1], [1, "la", 2, 181, 41, 1], [1, "la", 5, 180, 41, 1], [1, "la", 5, 179, 41, 1], [1, "la", 4, 192, 28, 1], [1, "la", 4, 191, 28, 1], [1, "la", 4, 190, 27, 1], [1, "la", 3, 188, 27, 1], [1, "la", 4, 187, 26, 1], [1, "la", 4, 186, 25, 1], [1, "la", 4, 185, 25, 1], [1, "la", 4, 184, 24, 1], [1, "la", 5, 184, 23, 1], [1, "la", 2, 184, 22, 1], [1, "la", 5, 184, 21, 1], [1, "la", 1, 183, 20, 1], [1, "la", 5, 182, 20, 1], [1, "la", 2, 181, 20, 1], [1, "la", 5, 180, 20, 1], [1, "la", 2, 179, 20, 1], [1, "la", 4, 178, 19, 1], [1, "la", 3, 178, 17, 1], [1, "la", 3, 176, 18, 1], [1, "cs", 0, 177, 15, 1], [1, "cs", 0, 175, 17, 1], [1, "cs", 0, 180, 16, 1], [1, "cs", 0, 174, 19, 1], [1, "cs", 0, 172, 20, 1], [1, "cs", 1, 175, 15, 1], [1, "cs", 1, 172, 18, 1], [1, "cs", 1, 181, 15, 1], [1, "cs", 2, 179, 15, 1], [1, "cs", 2, 177, 16, 1], [1, "cs", 2, 176, 16, 1], [1, "cs", 2, 174, 18, 1], [1, "cs", 2, 173, 19, 1], [1, "cs", 2, 172, 19, 1], [1, "cs", 2, 173, 18, 1], [1, "cs", 2, 173, 17, 1], [1, "cs", 2, 174, 17, 1], [1, "cs", 2, 174, 16, 1], [1, "cs", 2, 175, 16, 1], [1, "cs", 2, 176, 15, 1], [1, "cs", 2, 178, 15, 1], [1, "cs", 2, 178, 16, 1], [1, "cs", 2, 179, 16, 1], [1, "cs", 2, 180, 15, 1], [1, "cs", 2, 181, 16, 1], [1, "cs", 3, 182, 16, 1], [1, "cs", 3, 172, 21, 1], [1, "la", 1, 175, 19, 1], [1, "la", 2, 174, 20, 1], [1, "la", 2, 173, 20, 1], [1, "la", 1, 180, 17, 1], [1, "la", 2, 181, 17, 1], [1, "la", 3, 191, 20, 1], [1, "s", 0, 217, 30, 1], [1, "s", 0, 208, 35, 1], [1, "s", 0, 204, 24, 1], [1, "s", 1, 218, 32, 1], [1, "s", 1, 207, 34, 1], [1, "s", 1, 202, 23, 1], [1, "s", 1, 195, 16, 1], [1, "s", 2, 222, 28, 1], [1, "s", 2, 212, 38, 1], [1, "s", 2, 207, 23, 1], [1, "s", 2, 202, 12, 1], [1, "s", 2, 195, 18, 1], [1, "s", 1, 191, 12, 1], [1, "s", 0, 187, 16, 1], [1, "s", 2, 188, 16, 1], [1, "s", 1, 186, 14, 1], [1, "s", 1, 201, 16, 1], [1, "g", 1, 216, 31, 1], [1, "g", 0, 200, 15, 1], [1, "g", 0, 202, 40, 1], [1, "g", 0, 189, 32, 1], [1, "g", 0, 204, 28, 1], [1, "g", 0, 196, 24, 1], [1, "g", 2, 198, 37, 1], [1, "s", 0, 193, 39, 1], [1, "s", 0, 201, 45, 1], [1, "a", 0, 210, 29, 1], [1, "a", 0, 200, 20, 1], [1, "cs", 0, 200, 34, 1], [1, "cs", 0, 193, 27, 1], [1, "cs", 1, 203, 30, 1], [1, "cs", 1, 191, 31, 1], [1, "cs", 2, 202, 32, 1], [1, "cs", 2, 194, 26, 1], [1, "cs", 2, 192, 27, 1], [1, "cs", 2, 192, 32, 1], [1, "cs", 2, 203, 31, 1], [1, "cs", 2, 202, 31, 1], [1, "cs", 2, 202, 30, 1], [1, "cs", 3, 202, 29, 1], [1, "cs", 3, 201, 32, 1], [1, "cs", 3, 199, 35, 1], [1, "cs", 0, 193, 34, 1], [1, "cs", 2, 194, 34, 1], [1, "cs", 2, 198, 35, 1], [1, "cs", 3, 199, 34, 1], [1, "cs", 3, 191, 29, 1], [1, "cs", 0, 191, 30, 1], [1, "cs", 3, 190, 29, 1], [1, "la", 3, 180, 69, 1], [1, "la", 3, 182, 68, 1], [1, "la", 3, 184, 68, 1], [1, "la", 3, 186, 70, 1], [1, "la", 3, 184, 72, 1], [1, "la", 3, 182, 72, 1], [1, "la", 3, 180, 71, 1], [1, "cs", 0, 186, 68, 1], [1, "cs", 0, 187, 70, 1], [1, "cs", 0, 183, 74, 1], [1, "cs", 0, 178, 70, 1], [1, "cs", 2, 182, 66, 1], [1, "cs", 2, 182, 74, 1], [1, "cs", 2, 181, 73, 1], [1, "cs", 2, 180, 74, 1], [1, "cs", 2, 181, 74, 1], [1, "la", 0, 184, 70, 1], [1, "la", 3, 182, 70, 1], [1, "cs", 2, 181, 67, 1], [1, "cs", 3, 184, 67, 1], [1, "cs", 3, 182, 67, 1], [1, "la", 4, 187, 69, 1], [1, "la", 1, 188, 68, 1], [1, "la", 4, 189, 68, 1], [1, "la", 2, 190, 68, 1], [1, "la", 1, 191, 68, 1], [1, "la", 4, 192, 68, 1], [1, "la", 2, 193, 68, 1], [1, "la", 4, 194, 69, 1], [1, "la", 2, 194, 70, 1], [1, "la", 5, 195, 71, 1], [1, "la", 1, 194, 71, 1], [1, "la", 2, 196, 72, 1], [1, "la", 4, 196, 71, 1], [1, "la", 1, 197, 73, 1], [1, "la", 5, 196, 73, 1], [1, "la", 5, 198, 73, 1], [1, "la", 3, 201, 73, 1], [1, "la", 3, 203, 72, 1], [1, "la", 4, 199, 73, 1], [1, "la", 1, 205, 72, 1], [1, "la", 2, 206, 72, 1], [1, "la", 5, 207, 72, 1], [1, "la", 1, 208, 72, 1], [1, "la", 1, 209, 73, 1], [1, "la", 2, 209, 74, 1], [1, "la", 5, 211, 76, 1], [1, "la", 4, 210, 75, 1], [1, "la", 5, 212, 76, 1], [1, "la", 4, 202, 75, 1], [1, "la", 2, 203, 76, 1], [1, "la", 4, 204, 77, 1], [1, "la", 2, 204, 78, 1], [1, "la", 2, 204, 79, 1], [1, "la", 5, 204, 80, 1], [1, "cs", 0, 202, 74, 1], [1, "cs", 1, 203, 74, 1], [1, "cs", 2, 204, 73, 1], [1, "cs", 2, 203, 75, 1], [1, "cs", 3, 204, 76, 1], [1, "cs", 3, 205, 73, 1], [1, "cs", 0, 205, 74, 1], [1, "cs", 2, 204, 74, 1], [1, "cs", 2, 204, 75, 1], [1, "cs", 2, 206, 73, 1], [1, "cs", 3, 207, 73, 1], [1, "cs", 2, 205, 76, 1], [1, "cs", 3, 205, 77, 1], [1, "la", 3, 183, 66, 1], [1, "la", 4, 183, 65, 1], [1, "la", 4, 184, 64, 1], [1, "la", 4, 185, 63, 1], [1, "la", 1, 185, 62, 1], [1, "la", 2, 185, 61, 1], [1, "la", 2, 185, 60, 1], [1, "la", 4, 186, 59, 1], [1, "la", 1, 187, 58, 1], [1, "la", 2, 187, 57, 1], [1, "la", 2, 187, 56, 1], [1, "s", 0, 191, 60, 1], [1, "s", 1, 195, 58, 1], [1, "s", 1, 199, 46, 1], [1, "s", 2, 202, 49, 1], [1, "g", 2, 197, 55, 1], [1, "g", 1, 213, 55, 1], [1, "g", 0, 192, 45, 1], [1, "g", 0, 210, 61, 1], [1, "g", 0, 182, 52, 1], [1, "g", 0, 180, 35, 1], [1, "g", 0, 175, 25, 1], [1, "g", 0, 168, 32, 1], [1, "g", 1, 179, 28, 1], [1, "g", 1, 161, 16, 1], [1, "g", 2, 172, 12, 1], [1, "g", 2, 160, 25, 1], [1, "g", 2, 157, 39, 1], [1, "g", 2, 170, 43, 1], [1, "g", 2, 202, 67, 1], [1, "g", 2, 217, 72, 1], [1, "g", 2, 214, 82, 1], [1, "g", 2, 193, 86, 1], [1, "g", 2, 168, 60, 1], [1, "g", 2, 165, 78, 1], [1, "g", 2, 173, 88, 1], [1, "s", 0, 185, 51, 1], [1, "s", 0, 175, 44, 1], [1, "s", 0, 165, 50, 1], [1, "s", 0, 160, 32, 1], [1, "s", 1, 162, 30, 1], [1, "s", 1, 176, 28, 1], [1, "s", 1, 154, 17, 1], [1, "s", 1, 184, 49, 1], [1, "s", 1, 192, 62, 1], [1, "s", 1, 216, 62, 1], [1, "s", 1, 204, 65, 1], [1, "s", 1, 217, 79, 1], [1, "s", 1, 206, 86, 1], [1, "la", 3, 211, 69, 1], [1, "la", 4, 215, 69, 1], [1, "la", 5, 201, 81, 1], [1, "la", 1, 207, 83, 1], [1, "la", 3, 173, 32, 1], [1, "la", 2, 181, 45, 1], [1, "la", 1, 178, 38, 1], [1, "la", 1, 213, 69, 1], [1, "la", 5, 214, 69, 1], [1, "la", 4, 216, 68, 1], [1, "la", 0, 191, 78, 1], [1, "la", 3, 191, 80, 1], [1, "la", 3, 189, 79, 1], [1, "g", 2, 150, 29, 1], [1, "g", 2, 154, 67, 1], [1, "g", 2, 202, 94, 1], [1, "g", 2, 155, 90, 1], [1, "s", 2, 215, 80, 1], [1, "s", 2, 204, 62, 1], [1, "s", 2, 218, 60, 1], [1, "s", 2, 194, 62, 1], [1, "s", 0, 216, 86, 1], [1, "s", 0, 211, 93, 1], [1, "la", 0, 216, 92, 1], [1, "la", 0, 151, 96, 1], [1, "la", 1, 155, 95, 1], [1, "la", 4, 214, 88, 1], [1, "s", 0, 205, 99, 1], [1, "s", 1, 217, 88, 1], [1, "s", 1, 213, 94, 1], [1, "s", 1, 202, 97, 1], [1, "s", 0, 199, 85, 1], [1, "s", 0, 190, 93, 1], [1, "s", 1, 199, 87, 1], [1, "s", 1, 192, 97, 1], [1, "la", 3, 196, 92, 1], [1, "la", 1, 199, 91, 1], [1, "la", 1, 220, 91, 1], [1, "la", 0, 219, 77, 1], [1, "la", 0, 200, 59, 1], [1, "la", 3, 188, 87, 1], [1, "la", 0, 183, 94, 1], [1, "la", 1, 187, 83, 1], [1, "la", 1, 175, 82, 1], [1, "la", 1, 172, 94, 1], [1, "la", 2, 179, 78, 1], [1, "la", 0, 166, 87, 1], [1, "la", 3, 159, 80, 1], [1, "la", 3, 167, 15, 1], [1, "la", 1, 164, 17, 1], [1, "la", 1, 172, 28, 1], [1, "la", 3, 153, 24, 1], [1, "la", 4, 164, 91, 1], [1, "la", 4, 156, 82, 1], [1, "la", 4, 149, 90, 1], [1, "s", 0, 178, 85, 1], [1, "s", 1, 180, 85, 1], [1, "s", 0, 163, 96, 1], [1, "s", 0, 159, 86, 1], [1, "s", 0, 185, 78, 1], [1, "s", 1, 194, 75, 1], [1, "s", 2, 195, 76, 1], [1, "s", 2, 181, 78, 1], [1, "s", 2, 161, 87, 1], [1, "s", 2, 166, 97, 1], [1, "s", 2, 177, 97, 1], [1, "s", 0, 149, 85, 1], [1, "s", 1, 151, 83, 1], [1, "s", 1, 175, 74, 1], [1, "s", 0, 174, 72, 1], [1, "la", 3, 168, 71, 1], [1, "la", 3, 180, 60, 1], [1, "s", 0, 156, 63, 1], [1, "s", 0, 151, 47, 1], [1, "s", 1, 158, 64, 1], [1, "s", 1, 161, 75, 1], [1, "s", 1, 162, 51, 1], [1, "s", 1, 175, 45, 1], [1, "s", 1, 152, 47, 1], [1, "s", 1, 159, 33, 1], [1, "s", 1, 152, 18, 1], [1, "s", 0, 151, 13, 1], [1, "s", 0, 166, 22, 1], [1, "s", 0, 170, 63, 1], [1, "s", 2, 172, 62, 1], [1, "s", 2, 155, 61, 1], [1, "s", 2, 167, 51, 1], [1, "s", 2, 150, 52, 1], [1, "la", 4, 178, 69, 1], [1, "la", 4, 177, 68, 1], [1, "la", 3, 176, 67, 1], [1, "la", 0, 174, 67, 1], [1, "la", 1, 172, 67, 1], [1, "la", 4, 171, 67, 1], [1, "la", 4, 170, 66, 1], [1, "la", 4, 169, 66, 1], [1, "la", 1, 168, 66, 1], [1, "la", 4, 167, 67, 1], [1, "la", 1, 166, 67, 1], [1, "la", 4, 165, 68, 1], [1, "la", 5, 164, 68, 1], [1, "la", 2, 163, 68, 1], [1, "la", 5, 162, 68, 1], [1, "la", 2, 161, 68, 1], [1, "la", 3, 153, 72, 1], [1, "la", 3, 163, 60, 1], [1, "la", 3, 164, 42, 1], [1, "la", 0, 155, 51, 1], [1, "la", 1, 168, 42, 1], [1, "la", 4, 158, 48, 1], [1, "la", 4, 178, 57, 1], [1, "la", 4, 151, 69, 1], [1, "la", 2, 170, 74, 1], [1, "la", 2, 160, 84, 1], [1, "la", 2, 174, 92, 1], [1, "la", 2, 188, 90, 1], [1, "la", 2, 209, 84, 1], [1, "la", 2, 206, 93, 1], [1, "la", 5, 156, 70, 1], [1, "la", 5, 165, 57, 1], [1, "la", 5, 182, 58, 1], [1, "la", 5, 166, 44, 1], [1, "la", 1, 163, 39, 1], [1, "la", 1, 152, 53, 1], [1, "la", 1, 152, 37, 1], [1, "la", 2, 163, 13, 1], [1, "de", 12, 219, 12, 0], [1, "de", 14, 203, 13, 0], [1, "de", 15, 220, 19, 0], [1, "de", 12, 223, 15, 0], [1, "de", 12, 213, 10, 0], [1, "de", 37, 217, 19, 0], [1, "de", 38, 220, 14, 0], [1, "de", 38, 215, 10, 0], [1, "de", 40, 214, 14, 0], [1, "de", 40, 222, 16, 0], [1, "de", 40, 209, 18, 0], [1, "de", 37, 212, 18, 0], [1, "de", 38, 215, 26, 0], [1, "de", 37, 222, 25, 0], [1, "de", 40, 221, 29, 0], [1, "de", 12, 220, 27, 0], [1, "de", 13, 213, 27, 0], [1, "de", 14, 215, 30, 0], [1, "de", 15, 219, 33, 0], [1, "de", 38, 220, 31, 0], [1, "de", 38, 217, 35, 0], [1, "de", 40, 221, 34, 0], [1, "de", 39, 215, 32, 0], [1, "de", 37, 211, 35, 0], [1, "de", 12, 223, 38, 0], [1, "de", 13, 213, 38, 0], [1, "de", 14, 222, 44, 0], [1, "de", 15, 208, 33, 0], [1, "de", 15, 206, 23, 0], [1, "de", 13, 205, 28, 0], [1, "de", 14, 211, 23, 0], [1, "de", 14, 201, 20, 0], [1, "de", 15, 198, 9, 0], [1, "de", 15, 199, 16, 0], [1, "de", 12, 194, 15, 0], [1, "de", 12, 197, 23, 0], [1, "de", 37, 205, 13, 0], [1, "de", 39, 204, 9, 0], [1, "de", 40, 196, 12, 0], [1, "de", 40, 198, 18, 0], [1, "de", 37, 192, 11, 0], [1, "de", 37, 199, 24, 0], [1, "de", 37, 209, 24, 0], [1, "de", 39, 209, 30, 0], [1, "de", 39, 204, 31, 0], [1, "de", 39, 192, 24, 0], [1, "de", 40, 187, 23, 0], [1, "de", 38, 187, 18, 0], [1, "de", 39, 192, 18, 0], [1, "de", 37, 185, 15, 0], [1, "de", 12, 188, 15, 0], [1, "de", 13, 185, 13, 0], [1, "de", 14, 189, 9, 0], [1, "de", 15, 187, 22, 0], [1, "de", 15, 180, 9, 0], [1, "de", 12, 177, 14, 0], [1, "de", 14, 173, 9, 0], [1, "de", 14, 171, 15, 0], [1, "de", 40, 182, 9, 0], [1, "de", 39, 179, 13, 0], [1, "de", 39, 175, 9, 0], [1, "de", 40, 173, 14, 0], [1, "de", 37, 169, 11, 0], [1, "de", 37, 163, 10, 0], [1, "de", 38, 164, 15, 0], [1, "de", 39, 170, 20, 0], [1, "de", 40, 160, 17, 0], [1, "de", 40, 154, 10, 0], [1, "de", 40, 165, 23, 0], [1, "de", 40, 150, 19, 0], [1, "de", 37, 155, 16, 0], [1, "de", 39, 146, 10, 0], [1, "de", 12, 159, 12, 0], [1, "de", 13, 151, 9, 0], [1, "de", 14, 150, 14, 0], [1, "de", 15, 153, 19, 0], [1, "de", 13, 161, 25, 0], [1, "de", 14, 169, 25, 0], [1, "de", 15, 176, 25, 0], [1, "de", 12, 180, 29, 0], [1, "de", 12, 188, 31, 0], [1, "de", 14, 181, 36, 0], [1, "de", 37, 186, 33, 0], [1, "de", 38, 183, 26, 0], [1, "de", 39, 177, 21, 0], [1, "de", 40, 175, 31, 0], [1, "de", 37, 176, 39, 0], [1, "de", 37, 168, 34, 0], [1, "de", 38, 162, 32, 0], [1, "de", 38, 168, 45, 0], [1, "de", 38, 173, 45, 0], [1, "de", 39, 160, 35, 0], [1, "de", 40, 161, 42, 0], [1, "de", 40, 170, 39, 0], [1, "de", 40, 181, 43, 0], [1, "de", 40, 156, 26, 0], [1, "de", 40, 150, 32, 0], [1, "de", 37, 159, 26, 0], [1, "de", 37, 155, 40, 0], [1, "de", 37, 154, 45, 0], [1, "de", 39, 149, 45, 0], [1, "de", 40, 150, 50, 0], [1, "de", 40, 160, 52, 0], [1, "de", 37, 164, 52, 0], [1, "de", 38, 168, 50, 0], [1, "de", 12, 176, 45, 0], [1, "de", 12, 167, 32, 0], [1, "de", 13, 158, 32, 0], [1, "de", 14, 149, 28, 0], [1, "de", 15, 163, 30, 0], [1, "de", 14, 158, 39, 0], [1, "de", 12, 171, 43, 0], [1, "de", 12, 174, 36, 0], [1, "de", 12, 151, 43, 0], [1, "de", 13, 152, 48, 0], [1, "de", 14, 164, 49, 0], [1, "de", 15, 149, 52, 0], [1, "de", 12, 174, 49, 0], [1, "de", 13, 183, 51, 0], [1, "de", 14, 186, 48, 0], [1, "de", 37, 182, 48, 0], [1, "de", 38, 187, 52, 0], [1, "de", 39, 188, 43, 0], [1, "de", 37, 200, 38, 0], [1, "de", 40, 194, 37, 0], [1, "de", 39, 199, 44, 0], [1, "de", 38, 200, 49, 0], [1, "de", 37, 196, 54, 0], [1, "de", 12, 194, 40, 0], [1, "de", 13, 202, 45, 0], [1, "de", 14, 198, 47, 0], [1, "de", 15, 198, 55, 0], [1, "de", 15, 212, 54, 0], [1, "de", 15, 216, 63, 0], [1, "de", 14, 209, 62, 0], [1, "de", 12, 219, 60, 0], [1, "de", 12, 206, 56, 0], [1, "de", 12, 218, 72, 0], [1, "de", 12, 223, 67, 0], [1, "de", 12, 205, 64, 0], [1, "de", 12, 193, 63, 0], [1, "de", 14, 216, 80, 0], [1, "de", 14, 222, 87, 0], [1, "de", 38, 210, 53, 0], [1, "de", 37, 210, 47, 0], [1, "de", 37, 200, 63, 0], [1, "de", 37, 218, 62, 0], [1, "de", 37, 222, 60, 0], [1, "de", 37, 207, 70, 0], [1, "de", 38, 203, 68, 0], [1, "de", 38, 195, 66, 0], [1, "de", 38, 218, 55, 0], [1, "de", 38, 212, 61, 0], [1, "de", 38, 222, 70, 0], [1, "de", 38, 218, 70, 0], [1, "de", 40, 222, 81, 0], [1, "de", 38, 214, 79, 0], [1, "de", 39, 213, 83, 0], [1, "de", 39, 207, 76, 0], [1, "de", 39, 208, 86, 0], [1, "de", 39, 218, 87, 0], [1, "de", 39, 222, 93, 0], [1, "de", 39, 216, 96, 0], [1, "de", 39, 209, 94, 0], [1, "de", 39, 201, 87, 0], [1, "de", 39, 198, 82, 0], [1, "de", 39, 207, 99, 0], [1, "de", 39, 200, 97, 0], [1, "de", 39, 202, 92, 0], [1, "de", 37, 194, 97, 0], [1, "de", 39, 204, 88, 0], [1, "de", 39, 189, 90, 0], [1, "de", 39, 194, 81, 0], [1, "de", 39, 188, 98, 0], [1, "de", 37, 183, 91, 0], [1, "de", 37, 186, 80, 0], [1, "de", 37, 191, 72, 0], [1, "de", 38, 184, 77, 0], [1, "de", 38, 180, 80, 0], [1, "de", 39, 173, 75, 0], [1, "de", 40, 178, 87, 0], [1, "de", 40, 174, 94, 0], [1, "de", 40, 192, 93, 0], [1, "de", 40, 165, 92, 0], [1, "de", 37, 160, 89, 0], [1, "de", 38, 161, 85, 0], [1, "de", 38, 164, 98, 0], [1, "de", 38, 151, 99, 0], [1, "de", 38, 151, 85, 0], [1, "de", 40, 148, 83, 0], [1, "de", 40, 160, 77, 0], [1, "de", 40, 167, 77, 0], [1, "de", 40, 153, 69, 0], [1, "de", 40, 149, 74, 0], [1, "de", 37, 161, 64, 0], [1, "de", 37, 154, 61, 0], [1, "de", 39, 157, 55, 0], [1, "de", 39, 174, 64, 0], [1, "de", 39, 175, 56, 0], [1, "de", 39, 149, 67, 0], [1, "de", 12, 218, 96, 0], [1, "de", 13, 212, 95, 0], [1, "de", 14, 204, 85, 0], [1, "de", 15, 215, 85, 0], [1, "de", 15, 197, 97, 0], [1, "de", 12, 198, 87, 0], [1, "de", 14, 196, 77, 0], [1, "de", 13, 194, 86, 0], [1, "de", 15, 181, 84, 0], [1, "de", 14, 184, 79, 0], [1, "de", 14, 188, 93, 0], [1, "de", 13, 180, 87, 0], [1, "de", 13, 178, 96, 0], [1, "de", 13, 163, 95, 0], [1, "de", 15, 172, 88, 0], [1, "de", 15, 176, 75, 0], [1, "de", 14, 172, 72, 0], [1, "de", 14, 169, 82, 0], [1, "de", 13, 164, 78, 0], [1, "de", 13, 158, 87, 0], [1, "de", 13, 149, 86, 0], [1, "de", 15, 154, 91, 0], [1, "de", 15, 160, 74, 0], [1, "de", 14, 152, 76, 0], [1, "de", 14, 158, 63, 0], [1, "de", 14, 150, 60, 0], [1, "de", 12, 169, 59, 0], [1, "de", 13, 173, 61, 0], [1, "cs", 1, 143, 104, 1], [1, "cs", 0, 141, 102, 1], [1, "cs", 3, 138, 102, 1], [1, "cs", 2, 139, 102, 1], [1, "cs", 2, 140, 102, 1], [1, "cs", 3, 143, 107, 1], [1, "cs", 0, 143, 106, 1], [1, "cs", 2, 143, 105, 1], [1, "cs", 2, 142, 103, 1], [1, "cs", 0, 142, 104, 1], [1, "cs", 2, 141, 103, 1], [1, "cs", 3, 142, 105, 1], [1, "cs", 3, 140, 103, 1], [1, "cs", 3, 141, 104, 1], [1, "la", 4, 151, 23, 1], [1, "la", 4, 150, 22, 1], [1, "la", 1, 149, 21, 1], [1, "la", 4, 148, 21, 1], [1, "la", 2, 147, 20, 1], [1, "la", 4, 147, 19, 1], [1, "la", 5, 147, 18, 1], [1, "la", 1, 147, 17, 1], [1, "la", 3, 144, 9, 1], [1, "la", 5, 147, 16, 1], [1, "la", 2, 147, 15, 1], [1, "la", 4, 147, 14, 1], [1, "la", 4, 145, 11, 1], [1, "la", 5, 145, 12, 1], [1, "la", 1, 146, 13, 1], [1, "la", 2, 145, 13, 1], [1, "la", 3, 155, 25, 1], [1, "la", 0, 155, 24, 1], [1, "la", 3, 153, 26, 1], [1, "cs", 0, 151, 24, 1], [1, "cs", 0, 153, 22, 1], [1, "cs", 3, 152, 22, 1], [1, "cs", 3, 154, 22, 1], [1, "cs", 1, 157, 26, 1], [1, "cs", 2, 157, 24, 1], [1, "cs", 2, 156, 26, 1], [1, "cs", 2, 154, 28, 1], [1, "cs", 2, 151, 26, 1], [1, "cs", 2, 152, 25, 1], [1, "cs", 2, 151, 25, 1], [1, "cs", 2, 156, 27, 1], [1, "cs", 2, 157, 23, 1], [1, "cs", 2, 157, 22, 1], [1, "cs", 3, 150, 24, 1], [1, "cs", 3, 150, 23, 1], [1, "de", 38, 155, 29, 0], [1, "de", 12, 157, 27, 0], [1, "de", 14, 153, 29, 0], [1, "de", 15, 158, 23, 0], [1, "de", 13, 156, 21, 0], [1, "de", 13, 147, 36, 0], [1, "de", 13, 161, 56, 0], [1, "de", 13, 147, 79, 0], [1, "de", 12, 157, 99, 0], [1, "de", 12, 172, 99, 0], [1, "la", 3, 143, 102, 1], [1, "la", 4, 149, 96, 1], [1, "la", 4, 145, 102, 1], [1, "la", 1, 148, 97, 1], [1, "la", 5, 148, 98, 1], [1, "cs", 3, 144, 104, 1], [1, "cs", 3, 144, 103, 1], [1, "cs", 3, 145, 103, 1], [1, "cs", 3, 145, 104, 1], [1, "cs", 3, 142, 101, 1], [1, "cs", 3, 143, 100, 1], [1, "cs", 3, 141, 101, 1], [1, "cs", 3, 142, 100, 1], [1, "cs", 0, 141, 100, 1], [1, "cs", 2, 140, 101, 1], [1, "cs", 2, 144, 105, 1], [1, "cs", 3, 146, 103, 1], [1, "cs", 3, 146, 102, 1], [1, "cs", 3, 150, 95, 1], [1, "cs", 0, 150, 97, 1], [1, "cs", 2, 151, 98, 1], [1, "cs", 0, 153, 97, 1], [1, "cs", 3, 153, 96, 1], [1, "cs", 2, 149, 95, 1], [1, "s", 0, 213, 127, 1], [1, "plm", 1, 214, 131, 0], [1, "plm", 1, 207, 128, 0], [1, "plm", 0, 208, 127, 0], [1, "s", 1, 207, 132, 1], [1, "s", 2, 208, 133, 1], [1, "plm", 0, 217, 132, 0], [1, "plm", 2, 186, 158, 0], [1, "plm", 0, 184, 160, 0], [1, "s", 1, 183, 156, 1], [1, "s", 2, 186, 159, 1], [1, "p", 0, 182, 157, 1], [1, "p", 0, 114, 205, 1], [1, "plm", 1, 117, 204, 0], [1, "plm", 0, 117, 205, 0], [1, "plm", 2, 112, 204, 0], [1, "s", 2, 114, 207, 1], [1, "s", 2, 115, 204, 1], [1, "plm", 2, 122, 151, 0], [1, "plm", 1, 123, 150, 0], [1, "plm", 1, 117, 151, 0], [1, "s", 0, 118, 150, 1], [1, "s", 1, 122, 152, 1], [1, "plm", 2, 156, 130, 0], [1, "plm", 1, 154, 127, 0], [1, "s", 0, 153, 128, 1], [1, "s", 2, 152, 130, 1], [1, "p", 0, 123, 65, 1], [1, "plm", 2, 125, 62, 0], [1, "plm", 1, 124, 62, 0], [1, "plm", 0, 120, 65, 0], [1, "s", 1, 125, 63, 1], [1, "s", 1, 121, 64, 1], [1, "s", 2, 122, 62, 1], [1, "cs", 0, 140, 106, 1], [1, "cs", 2, 144, 106, 1], [1, "cs", 2, 145, 105, 1], [1, "cs", 2, 144, 107, 1], [1, "cs", 2, 141, 106, 1], [1, "cs", 2, 141, 105, 1], [1, "cs", 2, 140, 105, 1], [1, "cs", 2, 140, 104, 1], [1, "cs", 1, 138, 103, 1], [1, "cs", 0, 139, 104, 1], [1, "cs", 2, 139, 103, 1], [1, "cs", 2, 139, 105, 1], [1, "cs", 2, 142, 106, 1], [1, "cs", 2, 142, 107, 1], [1, "cs", 2, 139, 101, 1], [1, "de", 19, 27, 264, 0], [1, "la", 4, 147, 99, 1], [1, "la", 1, 146, 100, 1], [1, "la", 4, 145, 101, 1], [1, "cs", 1, 215, 47, 1], [1, "cs", 2, 216, 47, 1], [1, "cs", 2, 215, 48, 1], [1, "la", 4, 214, 45, 1], [1, "la", 4, 215, 45, 1], [1, "la", 0, 216, 46, 1], [1, "la", 4, 216, 48, 1], [1, "la", 4, 216, 49, 1], [1, "la", 4, 217, 50, 1], [1, "la", 3, 214, 49, 1], [1, "la", 4, 211, 45, 1], [1, "la", 3, 213, 47, 1], [1, "cs", 2, 224, 48, 1], [1, "plm", 2, 111, 243, 0], [1, "plm", 1, 108, 246, 0], [1, "s", 1, 110, 243, 1], [1, "s", 0, 108, 245, 1], [1, "s", 0, 121, 276, 1], [1, "plm", 2, 122, 277, 0], [1, "plm", 2, 117, 276, 0], [1, "plm", 1, 118, 277, 0], [1, "s", 1, 118, 278, 1], [1, "cs", 2, 66, 16, 1], [1, "cs", 3, 67, 16, 1], [1, "cs", 0, 67, 17, 1], [1, "cs", 2, 66, 17, 1], [1, "cs", 3, 66, 18, 1], [1, "cs", 3, 68, 17, 1], [1, "cs", 0, 36, 16, 1], [1, "cs", 2, 36, 17, 1], [1, "cs", 2, 36, 18, 1], [1, "cs", 3, 35, 17, 1], [1, "cs", 3, 36, 19, 1], [1, "cs", 3, 35, 18, 1], [1, "cs", 2, 66, 30, 1], [1, "cs", 2, 66, 23, 1], [1, "cs", 3, 66, 22, 1], [1, "cs", 3, 66, 31, 1], [1, "cs", 2, 36, 30, 1], [1, "cs", 2, 36, 23, 1], [1, "cs", 1, 36, 22, 1], [1, "cs", 2, 36, 31, 1], [1, "cs", 3, 42, 13, 1], [1, "cs", 0, 43, 13, 1], [1, "cs", 2, 44, 13, 1], [1, "cs", 3, 42, 16, 1], [1, "cs", 3, 41, 16, 1], [1, "cs", 3, 40, 16, 1], [1, "cs", 0, 42, 19, 1], [1, "cs", 3, 43, 19, 1], [1, "cs", 3, 44, 19, 1], [1, "cs", 3, 45, 19, 1], [1, "cs", 2, 46, 19, 1], [1, "cs", 0, 43, 22, 1], [1, "cs", 2, 42, 22, 1], [1, "cs", 1, 41, 22, 1], [1, "cs", 0, 40, 22, 1], [1, "cs", 3, 39, 17, 1], [1, "cs", 1, 44, 26, 1], [1, "cs", 2, 45, 26, 1], [1, "cs", 3, 46, 26, 1], [1, "cs", 0, 47, 26, 1], [1, "cs", 2, 48, 26, 1], [1, "cs", 3, 47, 25, 1], [1, "cs", 3, 43, 27, 1], [1, "cs", 1, 49, 32, 1], [1, "cs", 2, 50, 32, 1], [1, "cs", 2, 51, 32, 1], [1, "cs", 2, 52, 32, 1], [1, "d", 0, 51, 29, 1], [1, "d", 1, 53, 29, 1], [1, "d", 1, 49, 29, 1], [1, "cs", 3, 55, 31, 1], [1, "cs", 3, 54, 32, 1], [1, "cs", 3, 47, 31, 1], [1, "cs", 3, 48, 32, 1], [1, "cs", 0, 51, 33, 1], [1, "cs", 2, 52, 33, 1], [1, "cs", 2, 50, 33, 1], [1, "cs", 3, 56, 30, 1], [1, "cs", 3, 56, 31, 1], [1, "cs", 3, 46, 30, 1], [1, "cs", 3, 46, 31, 1], [1, "cs", 1, 53, 33, 1], [1, "cs", 2, 49, 33, 1], [1, "cs", 2, 53, 32, 1], [1, "cs", 0, 55, 32, 1], [1, "cs", 0, 47, 32, 1], [1, "d", 1, 54, 35, 1], [1, "fo", 2, 35, 15, 0], [1, "fo", 2, 36, 12, 0], [1, "fo", 2, 67, 15, 0], [1, "cs", 3, 60, 13, 1], [1, "cs", 2, 59, 13, 1], [1, "cs", 1, 58, 13, 1], [1, "cs", 3, 62, 16, 1], [1, "cs", 0, 61, 16, 1], [1, "cs", 3, 60, 16, 1], [1, "cs", 3, 63, 17, 1], [1, "cs", 2, 60, 19, 1], [1, "cs", 1, 59, 19, 1], [1, "cs", 3, 58, 19, 1], [1, "cs", 2, 57, 19, 1], [1, "cs", 2, 56, 19, 1], [1, "cs", 0, 55, 18, 1], [1, "cs", 2, 55, 17, 1], [1, "cs", 2, 63, 23, 1], [1, "cs", 0, 62, 22, 1], [1, "cs", 2, 61, 22, 1], [1, "cs", 1, 60, 22, 1], [1, "cs", 0, 59, 22, 1], [1, "cs", 2, 54, 26, 1], [1, "cs", 2, 55, 26, 1], [1, "cs", 2, 56, 26, 1], [1, "cs", 1, 57, 26, 1], [1, "cs", 2, 58, 26, 1], [1, "cs", 2, 59, 27, 1], [1, "cs", 2, 68, 16, 1], [1, "cs", 2, 68, 15, 1], [1, "cs", 3, 69, 15, 1], [1, "cs", 3, 70, 15, 1], [1, "cs", 3, 70, 14, 1], [1, "cs", 1, 69, 14, 1], [1, "cs", 1, 69, 16, 1], [1, "cs", 2, 71, 13, 1], [1, "cs", 2, 71, 14, 1], [1, "cs", 3, 72, 13, 1], [1, "cs", 3, 70, 8, 1], [1, "cs", 3, 71, 8, 1], [1, "cs", 2, 72, 8, 1], [1, "cs", 0, 73, 8, 1], [1, "cs", 3, 74, 9, 1], [1, "cs", 3, 74, 8, 1], [1, "cs", 0, 75, 8, 1], [1, "cs", 3, 76, 8, 1], [1, "cs", 3, 75, 9, 1], [1, "cs", 3, 75, 10, 1], [1, "cs", 0, 76, 10, 1], [1, "cs", 0, 76, 16, 1], [1, "cs", 3, 76, 15, 1], [1, "cs", 3, 75, 16, 1], [1, "cs", 2, 77, 11, 1], [1, "cs", 2, 77, 14, 1], [1, "cs", 3, 77, 12, 1], [1, "cs", 3, 77, 13, 1], [1, "cs", 3, 77, 15, 1], [1, "cs", 0, 74, 18, 1], [1, "cs", 1, 75, 17, 1], [1, "cs", 2, 74, 17, 1], [1, "cs", 3, 73, 19, 1], [1, "cs", 3, 67, 23, 1], [1, "cs", 0, 68, 23, 1], [1, "cs", 0, 72, 20, 1], [1, "cs", 2, 73, 20, 1], [1, "cs", 2, 74, 19, 1], [1, "cs", 2, 74, 36, 1], [1, "cs", 2, 77, 27, 1], [1, "cs", 2, 76, 26, 1], [1, "cs", 2, 75, 26, 1], [1, "cs", 0, 74, 26, 1], [1, "cs", 2, 75, 25, 1], [1, "cs", 0, 76, 25, 1], [1, "cs", 1, 77, 23, 1], [1, "cs", 2, 77, 16, 1], [1, "cs", 2, 76, 17, 1], [1, "cs", 2, 76, 24, 1], [1, "cs", 2, 77, 24, 1], [1, "cs", 2, 77, 25, 1], [1, "cs", 2, 77, 26, 1], [1, "cs", 1, 75, 27, 1], [1, "cs", 3, 76, 27, 1], [1, "cs", 2, 67, 24, 1], [1, "cs", 2, 66, 24, 1], [1, "cs", 2, 73, 26, 1], [1, "cs", 2, 74, 27, 1], [1, "cs", 2, 74, 25, 1], [1, "cs", 2, 66, 19, 1], [1, "cs", 2, 66, 20, 1], [1, "cs", 2, 66, 21, 1], [1, "cs", 2, 67, 18, 1], [1, "cs", 2, 67, 22, 1], [1, "cs", 0, 77, 36, 1], [1, "cs", 0, 77, 32, 1], [1, "cs", 1, 75, 35, 1], [1, "cs", 2, 75, 36, 1], [1, "cs", 2, 76, 36, 1], [1, "cs", 2, 77, 35, 1], [1, "cs", 2, 77, 34, 1], [1, "cs", 2, 76, 35, 1], [1, "cs", 2, 77, 33, 1], [1, "cs", 2, 77, 31, 1], [1, "cs", 0, 77, 29, 1], [1, "cs", 0, 71, 32, 1], [1, "cs", 0, 76, 34, 1], [1, "cs", 2, 77, 30, 1], [1, "cs", 2, 77, 28, 1], [1, "cs", 2, 76, 28, 1], [1, "cs", 2, 75, 28, 1], [1, "cs", 2, 76, 29, 1], [1, "cs", 2, 76, 33, 1], [1, "cs", 2, 70, 32, 1], [1, "cs", 2, 69, 31, 1], [1, "cs", 0, 68, 31, 1], [1, "cs", 2, 67, 31, 1], [1, "cs", 2, 67, 30, 1], [1, "cs", 2, 69, 32, 1], [1, "cs", 1, 67, 32, 1], [1, "cs", 2, 68, 32, 1], [1, "cs", 2, 66, 32, 1], [1, "cs", 2, 66, 33, 1], [1, "cs", 2, 67, 33, 1], [1, "cs", 2, 70, 33, 1], [1, "cs", 2, 69, 33, 1], [1, "cs", 2, 68, 33, 1], [1, "cs", 0, 68, 34, 1], [1, "cs", 1, 66, 35, 1], [1, "cs", 2, 67, 34, 1], [1, "cs", 2, 66, 34, 1], [1, "cs", 2, 65, 35, 1], [1, "cs", 2, 64, 36, 1], [1, "cs", 2, 65, 36, 1], [1, "cs", 2, 67, 35, 1], [1, "cs", 2, 66, 36, 1], [1, "cs", 2, 69, 34, 1], [1, "cs", 2, 68, 35, 1], [1, "cs", 2, 76, 9, 1], [1, "cs", 2, 77, 9, 1], [1, "cs", 2, 77, 8, 1], [1, "cs", 2, 77, 10, 1], [1, "cs", 2, 78, 8, 1], [1, "cs", 2, 78, 9, 1], [1, "cs", 2, 78, 10, 1], [1, "cs", 2, 78, 11, 1], [1, "cs", 2, 78, 12, 1], [1, "cs", 2, 78, 13, 1], [1, "cs", 0, 79, 9, 1], [1, "cs", 1, 79, 11, 1], [1, "cs", 3, 79, 8, 1], [1, "cs", 3, 79, 10, 1], [1, "cs", 3, 79, 12, 1], [1, "cs", 3, 80, 8, 1], [1, "cs", 1, 80, 10, 1], [1, "cs", 2, 80, 9, 1], [1, "cs", 2, 80, 11, 1], [1, "cs", 2, 81, 8, 1], [1, "cs", 2, 81, 9, 1], [1, "cs", 2, 81, 10, 1], [1, "cs", 2, 78, 14, 1], [1, "cs", 2, 79, 13, 1], [1, "cs", 2, 78, 15, 1], [1, "cs", 2, 80, 12, 1], [1, "cs", 0, 79, 14, 1], [1, "cs", 0, 82, 9, 1], [1, "cs", 2, 82, 8, 1], [1, "cs", 2, 82, 10, 1], [1, "cs", 2, 81, 11, 1], [1, "cs", 3, 80, 13, 1], [1, "cs", 1, 78, 30, 1], [1, "cs", 1, 78, 34, 1], [1, "cs", 1, 78, 27, 1], [1, "cs", 0, 78, 25, 1], [1, "cs", 0, 79, 29, 1], [1, "cs", 0, 79, 32, 1], [1, "cs", 0, 79, 35, 1], [1, "cs", 2, 78, 35, 1], [1, "cs", 2, 78, 36, 1], [1, "cs", 2, 79, 34, 1], [1, "cs", 2, 78, 33, 1], [1, "cs", 2, 79, 33, 1], [1, "cs", 2, 78, 32, 1], [1, "cs", 2, 78, 31, 1], [1, "cs", 2, 79, 31, 1], [1, "cs", 2, 79, 30, 1], [1, "cs", 2, 78, 29, 1], [1, "cs", 2, 78, 28, 1], [1, "cs", 2, 79, 28, 1], [1, "cs", 2, 79, 27, 1], [1, "cs", 2, 78, 26, 1], [1, "cs", 2, 79, 26, 1], [1, "cs", 2, 78, 24, 1], [1, "cs", 2, 80, 34, 1], [1, "cs", 2, 80, 33, 1], [1, "cs", 2, 80, 31, 1], [1, "cs", 2, 80, 30, 1], [1, "cs", 2, 80, 32, 1], [1, "cs", 2, 80, 29, 1], [1, "cs", 2, 80, 28, 1], [1, "cs", 2, 80, 27, 1], [1, "cs", 0, 81, 30, 1], [1, "cs", 1, 81, 32, 1], [1, "cs", 1, 81, 28, 1], [1, "cs", 2, 81, 29, 1], [1, "cs", 2, 81, 31, 1], [1, "cs", 2, 81, 33, 1], [1, "cs", 2, 82, 30, 1], [1, "cs", 2, 82, 31, 1], [1, "cs", 2, 82, 32, 1], [1, "cs", 0, 37, 36, 1], [1, "cs", 2, 38, 36, 1], [1, "cs", 2, 37, 35, 1], [1, "cs", 2, 36, 36, 1], [1, "cs", 2, 34, 35, 1], [1, "cs", 2, 35, 35, 1], [1, "cs", 2, 36, 35, 1], [1, "cs", 0, 33, 34, 1], [1, "cs", 1, 35, 34, 1], [1, "cs", 2, 36, 34, 1], [1, "cs", 2, 34, 34, 1], [1, "cs", 2, 36, 33, 1], [1, "cs", 2, 35, 33, 1], [1, "cs", 2, 34, 33, 1], [1, "cs", 2, 33, 33, 1], [1, "cs", 2, 31, 32, 1], [1, "cs", 1, 36, 32, 1], [1, "cs", 1, 32, 32, 1], [1, "cs", 2, 35, 32, 1], [1, "cs", 2, 33, 32, 1], [1, "cs", 2, 32, 33, 1], [1, "cs", 2, 33, 31, 1], [1, "cs", 2, 34, 31, 1], [1, "cs", 2, 35, 31, 1], [1, "cs", 0, 34, 32, 1], [1, "cs", 2, 35, 30, 1], [1, "cs", 1, 39, 23, 1], [1, "cs", 3, 39, 22, 1], [1, "cs", 3, 36, 24, 1], [1, "cs", 3, 35, 24, 1], [1, "cs", 2, 34, 23, 1], [1, "cs", 2, 35, 23, 1], [1, "cs", 2, 36, 20, 1], [1, "cs", 2, 36, 21, 1], [1, "cs", 2, 35, 22, 1], [1, "cs", 2, 35, 16, 1], [1, "cs", 2, 34, 16, 1], [1, "cs", 2, 33, 16, 1], [1, "cs", 0, 34, 17, 1], [1, "cs", 0, 32, 15, 1], [1, "cs", 2, 31, 14, 1], [1, "cs", 3, 30, 13, 1], [1, "cs", 1, 33, 15, 1], [1, "cs", 1, 31, 13, 1], [1, "cs", 2, 32, 14, 1], [1, "cs", 0, 31, 8, 1], [1, "cs", 2, 32, 8, 1], [1, "cs", 2, 25, 13, 1], [1, "cs", 0, 25, 12, 1], [1, "cs", 2, 25, 11, 1], [1, "cs", 3, 25, 10, 1], [1, "cs", 0, 25, 9, 1], [1, "cs", 2, 25, 8, 1], [1, "cs", 2, 26, 8, 1], [1, "cs", 2, 27, 8, 1], [1, "cs", 2, 28, 8, 1], [1, "cs", 2, 29, 8, 1], [1, "cs", 2, 30, 8, 1], [1, "cs", 2, 26, 9, 1], [1, "cs", 2, 27, 9, 1], [1, "cs", 2, 26, 10, 1], [1, "cs", 1, 27, 10, 1], [1, "cs", 3, 28, 9, 1], [1, "cs", 3, 25, 14, 1], [1, "cs", 0, 25, 15, 1], [1, "cs", 2, 26, 15, 1], [1, "cs", 3, 27, 16, 1], [1, "cs", 0, 28, 17, 1], [1, "cs", 1, 29, 18, 1], [1, "cs", 2, 26, 16, 1], [1, "cs", 2, 25, 16, 1], [1, "cs", 2, 27, 17, 1], [1, "cs", 2, 26, 17, 1], [1, "cs", 1, 27, 18, 1], [1, "cs", 2, 28, 18, 1], [1, "cs", 2, 30, 19, 1], [1, "cs", 2, 29, 19, 1], [1, "cs", 2, 24, 14, 1], [1, "cs", 2, 24, 15, 1], [1, "cs", 0, 23, 14, 1], [1, "cs", 2, 24, 10, 1], [1, "cs", 2, 24, 11, 1], [1, "cs", 2, 24, 12, 1], [1, "cs", 2, 24, 13, 1], [1, "cs", 1, 23, 10, 1], [1, "cs", 0, 22, 8, 1], [1, "cs", 0, 22, 12, 1], [1, "cs", 1, 23, 8, 1], [1, "cs", 2, 24, 8, 1], [1, "cs", 2, 24, 9, 1], [1, "cs", 2, 23, 9, 1], [1, "cs", 2, 22, 9, 1], [1, "cs", 2, 22, 10, 1], [1, "cs", 2, 22, 11, 1], [1, "cs", 2, 23, 11, 1], [1, "cs", 2, 23, 12, 1], [1, "cs", 2, 23, 13, 1], [1, "cs", 2, 22, 13, 1], [1, "cs", 2, 21, 9, 1], [1, "cs", 2, 21, 8, 1], [1, "cs", 2, 29, 25, 1], [1, "cs", 2, 25, 24, 1], [1, "cs", 2, 26, 25, 1], [1, "cs", 2, 27, 25, 1], [1, "cs", 0, 28, 25, 1], [1, "cs", 1, 25, 23, 1], [1, "cs", 2, 26, 24, 1], [1, "cs", 0, 24, 25, 1], [1, "cs", 3, 23, 24, 1], [1, "cs", 3, 24, 24, 1], [1, "cs", 3, 25, 25, 1], [1, "cs", 3, 23, 25, 1], [1, "cs", 1, 22, 26, 1], [1, "cs", 1, 26, 26, 1], [1, "cs", 1, 29, 26, 1], [1, "cs", 2, 23, 26, 1], [1, "cs", 2, 24, 26, 1], [1, "cs", 2, 25, 26, 1], [1, "cs", 2, 27, 26, 1], [1, "cs", 2, 28, 26, 1], [1, "cs", 2, 30, 26, 1], [1, "cs", 2, 29, 27, 1], [1, "cs", 2, 28, 28, 1], [1, "cs", 1, 26, 29, 1], [1, "cs", 0, 28, 27, 1], [1, "cs", 2, 27, 28, 1], [1, "cs", 2, 27, 27, 1], [1, "cs", 2, 26, 28, 1], [1, "cs", 2, 26, 27, 1], [1, "cs", 2, 25, 28, 1], [1, "cs", 2, 25, 27, 1], [1, "cs", 2, 23, 27, 1], [1, "cs", 2, 22, 27, 1], [1, "cs", 2, 24, 27, 1], [1, "cs", 0, 24, 28, 1], [1, "cs", 0, 25, 32, 1], [1, "cs", 1, 24, 30, 1], [1, "cs", 2, 25, 31, 1], [1, "cs", 2, 25, 30, 1], [1, "cs", 2, 25, 29, 1], [1, "cs", 2, 24, 29, 1], [1, "cs", 2, 23, 29, 1], [1, "cs", 2, 26, 33, 1], [1, "cs", 0, 26, 34, 1], [1, "cs", 2, 27, 35, 1], [1, "cs", 2, 22, 28, 1], [1, "cs", 2, 23, 28, 1], [1, "cs", 2, 24, 31, 1], [1, "cs", 2, 24, 32, 1], [1, "cs", 2, 25, 33, 1], [1, "cs", 2, 26, 35, 1], [1, "cs", 2, 24, 33, 1], [1, "cs", 2, 25, 34, 1], [1, "cs", 1, 22, 29, 1], [1, "cs", 1, 24, 34, 1], [1, "cs", 0, 23, 35, 1], [1, "cs", 2, 25, 35, 1], [1, "cs", 2, 24, 35, 1], [1, "cs", 2, 23, 34, 1], [1, "cs", 2, 23, 33, 1], [1, "cs", 0, 22, 33, 1], [1, "cs", 1, 23, 32, 1], [1, "cs", 2, 22, 32, 1], [1, "cs", 2, 23, 31, 1], [1, "cs", 2, 23, 30, 1], [1, "cs", 2, 22, 30, 1], [1, "cs", 2, 22, 31, 1], [1, "cs", 1, 21, 31, 1], [1, "cs", 0, 21, 29, 1], [1, "cs", 2, 21, 30, 1], [1, "cs", 2, 24, 36, 1], [1, "cs", 2, 26, 36, 1], [1, "cs", 2, 25, 36, 1], [1, "cs", 2, 27, 36, 1], [1, "cs", 2, 28, 36, 1], [1, "d", 2, 83, 65, 1], [1, "d", 2, 16, 67, 1], [1, "g", 0, 15, 17, 1], [1, "s", 0, 18, 13, 1], [1, "s", 0, 85, 11, 1], [1, "f", 0, 41, 102, 1], [1, "f", 0, 42, 124, 1], [1, "f", 0, 64, 116, 1], [1, "f", 0, 74, 104, 1], [1, "f", 0, 70, 87, 1], [1, "f", 0, 27, 96, 1], [1, "f", 0, 22, 79, 1], [1, "f", 0, 20, 117, 1], [1, "f", 0, 30, 137, 1], [1, "f", 0, 59, 146, 1], [1, "f", 0, 52, 147, 1], [1, "f", 0, 20, 149, 1], [1, "f", 0, 36, 146, 1], [1, "f", 0, 62, 124, 1], [1, "g", 1, 34, 121, 1], [1, "g", 1, 52, 116, 1], [1, "g", 1, 78, 116, 1], [1, "g", 1, 71, 129, 1], [1, "s", 0, 53, 100, 1], [1, "s", 0, 73, 111, 1], [1, "s", 0, 77, 126, 1], [1, "s", 0, 48, 90, 1], [1, "s", 0, 19, 102, 1], [1, "s", 0, 18, 127, 1], [1, "s", 0, 35, 159, 1], [1, "s", 0, 65, 54, 1], [1, "s", 0, 44, 52, 1], [1, "s", 0, 26, 51, 1], [1, "f", 1, 56, 136, 1], [1, "f", 1, 41, 133, 1], [1, "f", 1, 80, 120, 1], [1, "f", 1, 16, 117, 1], [1, "f", 1, 13, 99, 1], [1, "f", 1, 17, 89, 1], [1, "f", 1, 90, 98, 1], [1, "f", 1, 84, 95, 1], [1, "f", 1, 16, 57, 1], [1, "f", 1, 77, 53, 1], [1, "d", 1, 48, 35, 1], [1, "de", 8, 33, 13, 0], [1, "de", 8, 30, 9, 0], [1, "de", 9, 32, 30, 0], [1, "de", 10, 30, 25, 0], [1, "de", 10, 33, 21, 0], [1, "de", 8, 31, 34, 0], [1, "de", 8, 67, 29, 0], [1, "de", 9, 70, 22, 0], [1, "de", 10, 70, 16, 0], [1, "de", 10, 75, 11, 0], [1, "de", 8, 68, 10, 0], [1, "de", 8, 75, 30, 0], [1, "de", 11, 71, 33, 0], [1, "de", 11, 72, 25, 0], [1, "de", 11, 64, 25, 0], [1, "de", 11, 52, 10, 0], [1, "de", 11, 31, 15, 0], [1, "de", 30, 29, 14, 0], [1, "de", 30, 36, 15, 0], [1, "de", 30, 34, 29, 0], [1, "de", 30, 30, 29, 0], [1, "de", 30, 71, 29, 0], [1, "de", 28, 68, 25, 0], [1, "de", 28, 75, 15, 0], [1, "de", 27, 67, 19, 0], [1, "de", 29, 72, 10, 0], [1, "de", 29, 75, 32, 0], [1, "de", 29, 32, 20, 0], [1, "fo", 1, 39, 12, 0], [1, "fo", 1, 34, 14, 0], [1, "fo", 1, 74, 28, 0], [1, "fo", 2, 74, 29, 0], [1, "fo", 2, 69, 30, 0], [1, "fo", 2, 77, 22, 0], [1, "fo", 2, 74, 21, 0], [1, "fo", 2, 76, 18, 0], [1, "fo", 1, 78, 17, 0], [1, "fo", 1, 28, 19, 0], [1, "fo", 2, 27, 24, 0], [1, "fo", 2, 24, 17, 0], [1, "fo", 2, 29, 21, 0], [1, "fo", 1, 27, 32, 0], [1, "fo", 2, 30, 33, 0], [1, "fo", 1, 29, 28, 0], [1, "fo", 2, 28, 31, 0], [1, "fo", 2, 20, 24, 0], [1, "fo", 2, 20, 26, 0], [1, "fo", 2, 23, 16, 0], [1, "fo", 2, 11, 25, 0], [1, "de", 33, 29, 22, 0], [1, "de", 34, 32, 25, 0], [1, "de", 34, 30, 18, 0], [1, "de", 33, 78, 18, 0], [1, "de", 33, 73, 35, 0], [1, "de", 36, 72, 23, 0], [1, "de", 35, 25, 18, 0], [1, "d", 1, 83, 41, 1], [1, "d", 1, 17, 40, 1], [1, "cs", 2, 224, 104, 1], [1, "cs", 0, 224, 105, 1], [1, "cs", 3, 224, 106, 1], [1, "la", 3, 216, 128, 1], [1, "la", 0, 215, 126, 1], [1, "s", 0, 216, 130, 1], [1, "s", 1, 217, 129, 1], [1, "s", 0, 218, 128, 1], [1, "s", 1, 217, 127, 1], [1, "s", 0, 217, 126, 1], [1, "s", 1, 217, 125, 1], [1, "s", 0, 216, 124, 1], [1, "s", 1, 215, 124, 1], [1, "s", 0, 214, 124, 1], [1, "s", 1, 213, 125, 1], [1, "s", 0, 213, 126, 1], [1, "plm", 2, 217, 130, 0], [1, "plm", 2, 212, 125, 0], [1, "p", 0, 214, 134, 1], [1, "s", 1, 211, 126, 1], [1, "b", 1, 45, 277, 0], [1, "b", 1, 50, 286, 0], [1, "b", 2, 51, 284, 0], [1, "b", 1, 47, 287, 0], [1, "b", 0, 39, 285, 0], [1, "b", 3, 40, 283, 0], [1, "b", 0, 52, 283, 0], [1, "b", 1, 51, 280, 0], [1, "g", 0, 45, 269, 1], [1, "p", 0, 55, 281, 1], [1, "b", 1, 5, 172, 0], [1, "b", 2, 6, 172, 0], [1, "t", 5, 6, 171, 0], [1, "t", 1, 5, 170, 0], [1, "t", 1, 5, 164, 0], [1, "t", 3, 6, 164, 0], [1, "b", 0, 6, 165, 0], [1, "t", 3, 5, 165, 0], [1, "b", 2, 6, 166, 0], [1, "t", 4, 5, 166, 0], [1, "t", 4, 6, 167, 0], [1, "t", 2, 6, 168, 0], [1, "t", 0, 6, 169, 0], [1, "t", 4, 6, 170, 0], [1, "t", 0, 5, 167, 0], [1, "t", 2, 5, 169, 0], [1, "b", 0, 5, 168, 0], [1, "s", 1, 7, 153, 1], [1, "s", 2, 7, 151, 1], [1, "de", 5, 7, 152, 0], [1, "t", 1, 5, 154, 0], [1, "b", 0, 6, 154, 0], [1, "t", 2, 6, 155, 0], [1, "b", 2, 6, 156, 0], [1, "t", 2, 5, 157, 0], [1, "t", 4, 5, 155, 0], [1, "b", 0, 6, 157, 0], [1, "t", 1, 5, 156, 0], [1, "t", 5, 6, 158, 0], [1, "b", 2, 6, 159, 0], [1, "b", 0, 6, 162, 0], [1, "t", 4, 6, 163, 0], [1, "t", 4, 6, 161, 0], [1, "b", 1, 6, 160, 0], [1, "b", 2, 5, 163, 0], [1, "b", 2, 5, 158, 0], [1, "b", 2, 5, 161, 0], [1, "t", 1, 5, 162, 0], [1, "t", 1, 5, 160, 0], [1, "b", 1, 85, 176, 0], [1, "b", 2, 83, 178, 0], [1, "s", 1, 82, 177, 1], [1, "b", 0, 76, 172, 0], [1, "b", 3, 76, 174, 0], [1, "t", 3, 73, 174, 0], [1, "t", 5, 72, 175, 0], [1, "t", 5, 87, 173, 0], [1, "de", 2, 76, 175, 0], [1, "de", 3, 77, 171, 0], [1, "de", 3, 86, 177, 0], [1, "de", 2, 71, 175, 0], [1, "s", 1, 70, 174, 1], [1, "r", 48, 174, 0], [1, "r", 49, 175, 0], [1, "r", 50, 175, 0], [1, "r", 51, 175, 0], [1, "r", 51, 174, 0], [1, "r", 50, 174, 0], [1, "r", 49, 174, 0], [1, "r", 52, 175, 0], [1, "r", 52, 176, 0], [1, "r", 51, 176, 0], [1, "r", 50, 176, 0], [1, "r", 49, 176, 0], [1, "r", 48, 175, 0], [1, "r", 47, 175, 0], [1, "r", 48, 176, 0], [1, "r", 69, 163, 0], [1, "r", 70, 163, 0], [1, "r", 71, 163, 0], [1, "r", 73, 163, 0], [1, "r", 72, 163, 0], [1, "r", 73, 164, 0], [1, "r", 72, 164, 0], [1, "r", 71, 164, 0], [1, "r", 70, 164, 0], [1, "r", 69, 164, 0], [1, "r", 68, 164, 0], [1, "r", 68, 165, 0], [1, "r", 69, 165, 0], [1, "r", 70, 165, 0], [1, "r", 71, 165, 0], [1, "r", 72, 165, 0], [1, "r", 74, 164, 0], [1, "r", 73, 165, 0], [1, "r", 72, 166, 0], [1, "r", 71, 166, 0], [1, "r", 70, 166, 0], [1, "r", 74, 165, 0], [1, "r", 24, 164, 0], [1, "r", 25, 164, 0], [1, "r", 27, 164, 0], [1, "r", 26, 164, 0], [1, "r", 28, 165, 0], [1, "r", 26, 165, 0], [1, "r", 27, 165, 0], [1, "r", 25, 165, 0], [1, "r", 24, 165, 0], [1, "r", 23, 165, 0], [1, "r", 22, 165, 0], [1, "r", 21, 165, 0], [1, "r", 21, 166, 0], [1, "r", 22, 166, 0], [1, "r", 23, 166, 0], [1, "r", 24, 166, 0], [1, "r", 25, 166, 0], [1, "r", 26, 166, 0], [1, "r", 27, 166, 0], [1, "r", 28, 166, 0], [1, "r", 28, 167, 0], [1, "r", 26, 167, 0], [1, "r", 25, 167, 0], [1, "r", 24, 167, 0], [1, "r", 23, 167, 0], [1, "r", 22, 167, 0], [1, "r", 27, 167, 0], [1, "r", 29, 166, 0], [1, "r", 29, 167, 0], [1, "r", 28, 168, 0], [1, "r", 27, 168, 0], [1, "r", 26, 168, 0], [1, "r", 25, 168, 0], [1, "r", 24, 168, 0], [1, "r", 23, 168, 0], [1, "r", 27, 169, 0], [1, "r", 26, 169, 0], [1, "r", 25, 169, 0], [1, "r", 24, 169, 0], [1, "r", 23, 169, 0], [1, "r", 22, 168, 0], [1, "r", 21, 167, 0], [1, "s", 1, 52, 174, 1], [1, "t", 3, 50, 177, 0], [1, "t", 4, 49, 177, 0], [1, "b", 0, 47, 174, 0], [1, "b", 0, 69, 166, 0], [1, "t", 2, 68, 166, 0], [1, "t", 5, 74, 163, 0], [1, "t", 1, 73, 162, 0], [1, "s", 0, 73, 166, 1], [1, "s", 2, 76, 165, 1], [1, "g", 2, 59, 175, 1], [1, "p", 0, 78, 168, 1], [1, "p", 0, 61, 162, 1], [1, "p", 0, 42, 170, 1], [1, "p", 0, 20, 174, 1], [1, "p", 0, 16, 160, 1], [1, "b", 1, 23, 164, 0], [1, "b", 1, 28, 169, 0], [1, "b", 2, 29, 168, 0], [1, "b", 2, 16, 170, 0], [1, "t", 1, 15, 171, 0], [1, "t", 5, 13, 175, 0], [1, "t", 5, 19, 166, 0], [1, "t", 5, 26, 163, 0], [1, "s", 1, 29, 165, 1], [1, "t", 5, 11, 167, 0], [1, "t", 0, 29, 176, 0], [1, "b", 2, 30, 175, 0], [1, "t", 2, 24, 177, 0], [1, "b", 1, 37, 174, 0], [1, "b", 0, 35, 172, 0], [1, "b", 3, 37, 170, 0], [1, "t", 4, 38, 169, 0], [1, "t", 4, 34, 173, 0], [1, "t", 5, 38, 175, 0], [1, "b", 2, 39, 173, 0], [1, "t", 3, 37, 176, 0], [1, "t", 4, 30, 168, 0], [1, "s", 2, 35, 176, 1], [1, "s", 1, 41, 175, 1], [1, "b", 2, 53, 176, 0], [1, "t", 5, 55, 173, 0], [1, "t", 5, 45, 170, 0], [1, "b", 1, 53, 162, 0], [1, "b", 0, 50, 164, 0], [1, "t", 2, 54, 163, 0], [1, "t", 3, 49, 165, 0], [1, "t", 4, 48, 160, 0], [1, "t", 4, 57, 164, 0], [1, "t", 4, 66, 162, 0], [1, "b", 1, 86, 161, 0], [1, "b", 2, 81, 163, 0], [1, "t", 3, 85, 162, 0], [1, "t", 5, 81, 162, 0], [1, "t", 5, 88, 163, 0], [1, "t", 1, 84, 166, 0], [1, "t", 5, 72, 160, 0], [1, "t", 5, 70, 170, 0], [1, "s", 1, 57, 162, 1], [1, "b", 1, 39, 161, 0], [1, "b", 0, 34, 164, 0], [1, "b", 2, 54, 164, 0], [1, "t", 1, 59, 169, 0], [1, "t", 3, 60, 170, 0], [1, "t", 4, 63, 169, 0], [1, "t", 4, 63, 174, 0], [1, "t", 1, 62, 175, 0], [1, "t", 5, 40, 162, 0], [1, "t", 1, 63, 180, 0], [1, "t", 2, 64, 179, 0], [1, "t", 2, 35, 165, 0], [1, "s", 1, 63, 173, 1], [1, "s", 2, 40, 165, 1], [1, "b", 0, 46, 169, 0], [1, "de", 22, 74, 168, 0], [1, "de", 22, 86, 168, 0], [1, "de", 22, 83, 175, 0], [1, "de", 22, 78, 175, 0], [1, "de", 19, 72, 176, 0], [1, "de", 19, 68, 168, 0], [1, "de", 19, 65, 163, 0], [1, "de", 19, 75, 162, 0], [1, "de", 19, 80, 162, 0], [1, "de", 19, 88, 159, 0], [1, "de", 19, 87, 164, 0], [1, "de", 19, 61, 177, 0], [1, "de", 19, 59, 172, 0], [1, "de", 19, 59, 167, 0], [1, "de", 19, 53, 165, 0], [1, "de", 19, 56, 163, 0], [1, "de", 19, 51, 161, 0], [1, "de", 19, 48, 167, 0], [1, "de", 19, 47, 170, 0], [1, "de", 19, 41, 163, 0], [1, "de", 19, 37, 161, 0], [1, "de", 19, 36, 166, 0], [1, "de", 19, 36, 171, 0], [1, "de", 19, 34, 174, 0], [1, "de", 19, 40, 172, 0], [1, "de", 19, 38, 177, 0], [1, "de", 19, 42, 176, 0], [1, "de", 19, 53, 178, 0], [1, "de", 19, 53, 172, 0], [1, "de", 19, 64, 181, 0], [1, "de", 19, 64, 175, 0], [1, "de", 19, 79, 172, 0], [1, "de", 19, 30, 170, 0], [1, "de", 19, 17, 168, 0], [1, "de", 19, 14, 173, 0], [1, "de", 19, 12, 162, 0], [1, "de", 19, 9, 167, 0], [1, "de", 19, 20, 161, 0], [1, "de", 19, 27, 162, 0], [1, "de", 19, 83, 195, 0], [1, "de", 2, 85, 163, 0], [1, "de", 2, 80, 164, 0], [1, "de", 2, 84, 169, 0], [1, "de", 2, 55, 165, 0], [1, "de", 3, 46, 163, 0], [1, "de", 2, 66, 169, 0], [1, "de", 0, 63, 175, 0], [1, "de", 0, 34, 164, 0], [1, "de", 0, 18, 160, 0], [1, "de", 2, 40, 160, 0], [1, "de", 2, 53, 160, 0], [1, "de", 2, 14, 170, 0], [1, "de", 2, 19, 175, 0], [1, "de", 2, 23, 176, 0], [1, "de", 5, 60, 147, 0], [1, "de", 33, 59, 160, 0], [1, "de", 33, 85, 157, 0], [1, "de", 33, 29, 143, 0], [1, "de", 33, 62, 140, 0], [1, "de", 33, 43, 127, 0], [1, "de", 33, 18, 129, 0], [1, "de", 33, 50, 134, 0], [1, "de", 33, 79, 127, 0], [1, "de", 33, 89, 139, 0], [1, "b", 1, 44, 156, 0], [1, "t", 2, 45, 157, 0], [1, "b", 0, 75, 156, 0], [1, "t", 3, 76, 157, 0], [1, "t", 5, 62, 157, 0], [1, "t", 5, 79, 156, 0], [1, "t", 5, 41, 156, 0], [1, "b", 1, 28, 156, 0], [1, "t", 2, 27, 157, 0], [1, "t", 4, 21, 156, 0], [1, "t", 4, 56, 159, 0], [1, "f", 1, 94, 153, 1], [1, "f", 2, 93, 153, 1], [1, "f", 2, 99, 153, 1], [1, "f", 1, 98, 153, 1], [1, "f", 0, 97, 153, 1], [1, "f", 1, 96, 153, 1], [1, "s", 1, 7, 149, 1], [1, "de", 4, 7, 150, 0], [1, "b", 3, 43, 281, 0], [1, "de", 50, 24, 39, 0], [1, "de", 50, 21, 39, 0], [1, "de", 50, 22, 43, 0], [1, "de", 50, 15, 34, 0], [1, "de", 50, 18, 26, 0], [1, "de", 50, 44, 42, 0], [1, "de", 50, 57, 39, 0], [1, "de", 50, 62, 43, 0], [1, "de", 50, 77, 44, 0], [1, "de", 50, 71, 41, 0], [1, "de", 50, 55, 39, 0], [1, "de", 50, 22, 39, 0], [1, "de", 50, 20, 41, 0], [1, "de", 50, 18, 21, 0], [1, "de", 50, 15, 21, 0], [1, "de", 50, 18, 19, 0], [1, "de", 50, 17, 17, 0], [1, "de", 50, 18, 10, 0], [1, "de", 50, 18, 9, 0], [1, "de", 50, 52, 41, 0], [1, "de", 50, 82, 39, 0], [1, "de", 50, 86, 38, 0], [1, "de", 50, 84, 31, 0], [1, "de", 50, 86, 30, 0], [1, "de", 50, 84, 26, 0], [1, "de", 50, 86, 23, 0], [1, "de", 50, 86, 14, 0], [1, "de", 50, 29, 42, 0], [1, "de", 9, 74, 37, 0], [1, "de", 9, 76, 22, 0], [1, "de", 10, 79, 24, 0], [1, "de", 11, 77, 17, 0], [1, "de", 36, 81, 25, 0], [1, "de", 36, 80, 36, 0], [1, "de", 36, 21, 36, 0], [1, "de", 28, 23, 22, 0], [1, "de", 28, 27, 31, 0], [1, "de", 28, 69, 36, 0], [1, "de", 28, 80, 20, 0], [1, "de", 51, 24, 155, 0], [1, "de", 51, 7, 154, 0], [1, "de", 51, 11, 154, 0], [1, "de", 51, 12, 156, 0], [1, "de", 51, 16, 154, 0], [1, "de", 51, 20, 154, 0], [1, "de", 51, 23, 154, 0], [1, "de", 51, 18, 157, 0], [1, "de", 51, 31, 154, 0], [1, "de", 51, 32, 157, 0], [1, "de", 51, 86, 154, 0], [1, "de", 51, 88, 156, 0], [1, "de", 51, 82, 154, 0], [1, "de", 51, 80, 154, 0], [1, "de", 51, 77, 154, 0], [1, "de", 51, 74, 154, 0], [1, "de", 51, 71, 154, 0], [1, "de", 51, 67, 154, 0], [1, "de", 51, 60, 154, 0], [1, "de", 51, 57, 154, 0], [1, "de", 51, 65, 154, 0], [1, "de", 51, 68, 156, 0], [1, "de", 51, 59, 156, 0], [1, "de", 51, 55, 154, 0], [1, "de", 51, 54, 154, 0], [1, "de", 51, 52, 154, 0], [1, "de", 51, 55, 155, 0], [1, "de", 51, 54, 157, 0], [1, "de", 51, 49, 154, 0], [1, "de", 51, 46, 154, 0], [1, "de", 51, 44, 154, 0], [1, "de", 51, 43, 154, 0], [1, "de", 51, 41, 154, 0], [1, "de", 51, 38, 154, 0], [1, "de", 51, 39, 156, 0], [1, "de", 51, 34, 154, 0], [1, "de", 5, 19, 142, 0], [1, "de", 5, 37, 147, 0], [1, "de", 7, 53, 147, 0], [1, "de", 6, 69, 150, 0], [1, "de", 4, 94, 148, 0], [1, "de", 4, 66, 147, 0], [1, "de", 4, 10, 145, 0], [1, "de", 4, 28, 137, 0], [1, "de", 4, 15, 137, 0], [1, "de", 4, 48, 134, 0], [1, "de", 5, 67, 135, 0], [1, "de", 34, 84, 155, 0], [1, "de", 35, 70, 156, 0], [1, "de", 35, 51, 156, 0], [1, "de", 35, 56, 157, 0], [1, "de", 35, 65, 159, 0], [1, "de", 35, 23, 156, 0], [1, "de", 35, 15, 155, 0], [1, "de", 35, 8, 155, 0], [1, "de", 33, 13, 155, 0], [1, "de", 33, 33, 158, 0], [1, "de", 36, 78, 155, 0], [1, "de", 36, 87, 157, 0], [1, "fo", 1, 73, 36, 0], [1, "fo", 1, 80, 24, 0], [1, "fo", 2, 67, 36, 0], [1, "fo", 2, 45, 36, 0], [1, "fo", 2, 53, 34, 0], [1, "fo", 1, 51, 35, 0], [1, "fo", 1, 58, 35, 0], [1, "fo", 1, 33, 35, 0], [1, "fo", 1, 31, 33, 0], [1, "fo", 2, 29, 36, 0], [1, "fo", 2, 56, 36, 0], [1, "fo", 2, 60, 37, 0], [1, "fo", 2, 45, 32, 0], [1, "fo", 2, 22, 25, 0], [1, "fo", 2, 21, 35, 0], [1, "de", 52, 90, 208, 0], [1, "de", 18, 94, 250, 0], [1, "de", 17, 95, 253, 0], [1, "cs", 0, 140, 5, 1], [1, "cs", 2, 139, 5, 1], [1, "cs", 2, 138, 5, 1], [1, "cs", 2, 138, 6, 1], [1, "cs", 2, 139, 6, 1], [1, "cs", 2, 141, 6, 1], [1, "cs", 2, 140, 6, 1], [1, "la", 3, 143, 7, 1], [1, "la", 3, 139, 7, 1], [1, "cs", 0, 137, 7, 1], [1, "cs", 1, 138, 8, 1], [1, "cs", 2, 137, 6, 1], [1, "cs", 2, 137, 8, 1], [1, "cs", 2, 136, 7, 1], [1, "cs", 2, 138, 9, 1], [1, "cs", 3, 139, 9, 1], [1, "cs", 3, 136, 8, 1], [1, "cs", 3, 137, 9, 1], [1, "de", 53, 92, 165, 0], [1, "de", 53, 92, 180, 0], [1, "de", 53, 92, 188, 0], [1, "de", 54, 92, 153, 0], [1, "de", 54, 91, 153, 0], [1, "de", 54, 90, 153, 0], [1, "de", 54, 89, 153, 0], [1, "de", 54, 88, 153, 0], [1, "de", 54, 87, 153, 0], [1, "de", 54, 86, 153, 0], [1, "de", 54, 85, 153, 0], [1, "de", 54, 84, 153, 0], [1, "de", 54, 83, 153, 0], [1, "de", 54, 82, 153, 0], [1, "de", 54, 81, 153, 0], [1, "de", 54, 80, 153, 0], [1, "de", 54, 79, 153, 0], [1, "de", 54, 78, 153, 0], [1, "de", 54, 77, 153, 0], [1, "de", 54, 76, 153, 0], [1, "de", 54, 75, 153, 0], [1, "de", 54, 74, 153, 0], [1, "de", 54, 73, 153, 0], [1, "de", 54, 72, 153, 0], [1, "de", 54, 70, 153, 0], [1, "de", 54, 71, 153, 0], [1, "de", 54, 69, 153, 0], [1, "de", 54, 68, 153, 0], [1, "de", 54, 67, 153, 0], [1, "de", 54, 66, 153, 0], [1, "de", 54, 65, 153, 0], [1, "de", 54, 64, 153, 0], [1, "de", 54, 63, 153, 0], [1, "de", 54, 61, 153, 0], [1, "de", 54, 62, 153, 0], [1, "de", 54, 60, 153, 0], [1, "de", 54, 59, 153, 0], [1, "de", 54, 57, 153, 0], [1, "de", 54, 58, 153, 0], [1, "de", 54, 56, 153, 0], [1, "de", 54, 55, 153, 0], [1, "de", 54, 54, 153, 0], [1, "de", 54, 53, 153, 0], [1, "de", 54, 52, 153, 0], [1, "de", 54, 51, 153, 0], [1, "de", 54, 50, 153, 0], [1, "de", 54, 49, 153, 0], [1, "de", 54, 48, 153, 0], [1, "de", 54, 47, 153, 0], [1, "de", 54, 46, 153, 0], [1, "de", 54, 45, 153, 0], [1, "de", 54, 44, 153, 0], [1, "de", 54, 43, 153, 0], [1, "de", 54, 42, 153, 0], [1, "de", 54, 41, 153, 0], [1, "de", 54, 40, 153, 0], [1, "de", 54, 39, 153, 0], [1, "de", 54, 37, 153, 0], [1, "de", 54, 38, 153, 0], [1, "de", 54, 36, 153, 0], [1, "de", 54, 35, 153, 0], [1, "de", 54, 34, 153, 0], [1, "de", 54, 33, 153, 0], [1, "de", 54, 32, 153, 0], [1, "de", 54, 31, 153, 0], [1, "de", 54, 30, 153, 0], [1, "de", 54, 29, 153, 0], [1, "de", 54, 28, 153, 0], [1, "de", 54, 27, 153, 0], [1, "de", 54, 26, 153, 0], [1, "de", 54, 25, 153, 0], [1, "de", 54, 24, 153, 0], [1, "de", 54, 23, 153, 0], [1, "de", 54, 22, 153, 0], [1, "de", 54, 21, 153, 0], [1, "de", 54, 20, 153, 0], [1, "de", 54, 19, 153, 0], [1, "de", 54, 18, 153, 0], [1, "de", 54, 17, 153, 0], [1, "de", 54, 16, 153, 0], [1, "de", 54, 15, 153, 0], [1, "de", 54, 14, 153, 0], [1, "de", 54, 13, 153, 0], [1, "de", 54, 12, 153, 0], [1, "de", 54, 11, 153, 0], [1, "de", 54, 10, 153, 0], [1, "de", 54, 8, 153, 0], [1, "de", 54, 9, 153, 0], [1, "de", 55, 83, 8, 0], [1, "de", 55, 83, 9, 0], [1, "de", 55, 83, 10, 0], [1, "de", 55, 83, 11, 0], [1, "de", 55, 83, 12, 0], [1, "de", 55, 83, 13, 0], [1, "de", 55, 83, 14, 0], [1, "de", 55, 83, 15, 0], [1, "de", 55, 83, 16, 0], [1, "de", 55, 83, 17, 0], [1, "de", 55, 83, 19, 0], [1, "de", 55, 83, 18, 0], [1, "de", 55, 83, 20, 0], [1, "de", 55, 83, 21, 0], [1, "de", 55, 83, 22, 0], [1, "de", 55, 83, 23, 0], [1, "de", 55, 83, 24, 0], [1, "de", 55, 83, 25, 0], [1, "de", 55, 83, 26, 0], [1, "de", 55, 83, 27, 0], [1, "de", 55, 83, 28, 0], [1, "de", 55, 83, 29, 0], [1, "de", 55, 83, 30, 0], [1, "de", 55, 83, 31, 0], [1, "de", 55, 83, 32, 0], [1, "de", 55, 83, 33, 0], [1, "de", 55, 83, 34, 0], [1, "de", 55, 83, 36, 0], [1, "de", 55, 83, 35, 0], [1, "de", 55, 83, 37, 0], [1, "de", 55, 83, 38, 0], [1, "de", 55, 81, 38, 0], [1, "de", 55, 82, 38, 0], [1, "de", 55, 80, 38, 0], [1, "de", 55, 79, 38, 0], [1, "de", 55, 78, 38, 0], [1, "de", 55, 77, 38, 0], [1, "de", 55, 76, 38, 0], [1, "de", 55, 75, 38, 0], [1, "de", 55, 73, 38, 0], [1, "de", 55, 74, 38, 0], [1, "de", 55, 72, 38, 0], [1, "de", 55, 71, 38, 0], [1, "de", 55, 70, 38, 0], [1, "de", 55, 68, 38, 0], [1, "de", 55, 69, 38, 0], [1, "de", 55, 67, 38, 0], [1, "de", 55, 66, 38, 0], [1, "de", 55, 65, 38, 0], [1, "de", 55, 64, 38, 0], [1, "de", 55, 63, 38, 0], [1, "de", 55, 62, 38, 0], [1, "de", 55, 60, 38, 0], [1, "de", 55, 61, 38, 0], [1, "de", 55, 59, 38, 0], [1, "de", 55, 57, 38, 0], [1, "de", 55, 58, 38, 0], [1, "de", 55, 56, 38, 0], [1, "de", 55, 55, 38, 0], [1, "de", 55, 54, 38, 0], [1, "de", 55, 53, 38, 0], [1, "de", 55, 52, 38, 0], [1, "de", 55, 51, 38, 0], [1, "de", 55, 49, 38, 0], [1, "de", 55, 50, 38, 0], [1, "de", 55, 48, 38, 0], [1, "de", 55, 47, 38, 0], [1, "de", 55, 46, 38, 0], [1, "de", 55, 45, 38, 0], [1, "de", 55, 44, 38, 0], [1, "de", 55, 43, 38, 0], [1, "de", 55, 42, 38, 0], [1, "de", 55, 41, 38, 0], [1, "de", 55, 40, 38, 0], [1, "de", 55, 39, 38, 0], [1, "de", 55, 38, 38, 0], [1, "de", 55, 37, 38, 0], [1, "de", 55, 36, 38, 0], [1, "de", 55, 34, 38, 0], [1, "de", 55, 35, 38, 0], [1, "de", 55, 33, 38, 0], [1, "de", 55, 31, 38, 0], [1, "de", 55, 32, 38, 0], [1, "de", 55, 30, 38, 0], [1, "de", 55, 29, 38, 0], [1, "de", 55, 28, 38, 0], [1, "de", 55, 27, 38, 0], [1, "de", 55, 26, 38, 0], [1, "de", 55, 25, 38, 0], [1, "de", 55, 24, 38, 0], [1, "de", 55, 23, 38, 0], [1, "de", 55, 21, 38, 0], [1, "de", 55, 22, 38, 0], [1, "de", 55, 20, 38, 0], [1, "de", 55, 19, 38, 0], [1, "de", 55, 19, 37, 0], [1, "de", 55, 19, 36, 0], [1, "de", 55, 19, 35, 0], [1, "de", 55, 19, 34, 0], [1, "de", 55, 19, 33, 0], [1, "de", 55, 19, 32, 0], [1, "de", 55, 19, 31, 0], [1, "de", 55, 19, 30, 0], [1, "de", 55, 19, 28, 0], [1, "de", 55, 19, 29, 0], [1, "de", 55, 19, 27, 0], [1, "de", 55, 19, 26, 0], [1, "de", 55, 19, 25, 0], [1, "de", 55, 19, 24, 0], [1, "de", 55, 19, 23, 0], [1, "de", 55, 19, 22, 0], [1, "de", 55, 19, 21, 0], [1, "de", 55, 19, 20, 0], [1, "de", 55, 19, 18, 0], [1, "de", 55, 19, 19, 0], [1, "de", 55, 19, 16, 0], [1, "de", 55, 19, 17, 0], [1, "de", 55, 19, 15, 0], [1, "de", 55, 19, 14, 0], [1, "de", 55, 19, 13, 0], [1, "de", 55, 19, 12, 0], [1, "de", 55, 19, 11, 0], [1, "de", 55, 19, 10, 0], [1, "de", 55, 19, 9, 0], [1, "de", 55, 19, 8, 0], [1, "de", 55, 84, 35, 0], [1, "de", 55, 84, 32, 0], [1, "de", 55, 84, 25, 0], [1, "de", 50, 84, 24, 0], [1, "de", 55, 84, 20, 0], [1, "de", 55, 84, 17, 0], [1, "de", 55, 84, 16, 0], [1, "de", 50, 84, 15, 0], [1, "de", 55, 84, 8, 0], [1, "de", 55, 84, 9, 0], [1, "de", 50, 85, 11, 0], [1, "de", 55, 81, 39, 0], [1, "de", 50, 83, 40, 0], [1, "de", 55, 72, 39, 0], [1, "de", 55, 74, 39, 0], [1, "de", 55, 66, 39, 0], [1, "de", 55, 65, 39, 0], [1, "de", 50, 67, 41, 0], [1, "de", 55, 56, 39, 0], [1, "de", 55, 58, 39, 0], [1, "de", 55, 50, 39, 0], [1, "de", 50, 49, 39, 0], [1, "de", 55, 44, 39, 0], [1, "de", 55, 42, 39, 0], [1, "de", 50, 43, 39, 0], [1, "de", 50, 41, 39, 0], [1, "de", 50, 37, 39, 0], [1, "de", 55, 36, 39, 0], [1, "de", 55, 32, 39, 0], [1, "de", 50, 31, 39, 0], [1, "de", 55, 23, 39, 0], [1, "de", 55, 18, 37, 0], [1, "de", 50, 18, 36, 0], [1, "de", 55, 18, 35, 0], [1, "de", 50, 18, 34, 0], [1, "de", 55, 18, 31, 0], [1, "de", 50, 18, 30, 0], [1, "de", 55, 18, 25, 0], [1, "de", 50, 18, 24, 0], [1, "de", 55, 18, 20, 0], [1, "de", 55, 18, 14, 0], [1, "de", 50, 18, 15, 0], [1, "de", 55, 18, 8, 0], [1, "de", 54, 90, 154, 0], [1, "de", 51, 89, 154, 0], [1, "de", 54, 85, 154, 0], [1, "de", 54, 81, 154, 0], [1, "de", 54, 76, 154, 0], [1, "de", 54, 70, 154, 0], [1, "de", 54, 66, 154, 0], [1, "de", 54, 61, 154, 0], [1, "de", 54, 56, 154, 0], [1, "de", 54, 53, 154, 0], [1, "de", 54, 45, 154, 0], [1, "de", 54, 42, 154, 0], [1, "de", 54, 37, 154, 0], [1, "de", 54, 30, 154, 0], [1, "de", 54, 25, 154, 0], [1, "de", 54, 17, 154, 0], [1, "de", 54, 10, 154, 0], [1, "de", 54, 8, 154, 0], [1, "de", 55, 20, 9, 0], [1, "de", 53, 93, 154, 0], [1, "de", 53, 93, 156, 0], [1, "de", 53, 93, 158, 0], [1, "de", 52, 91, 157, 0], [1, "de", 53, 93, 159, 0], [1, "de", 53, 93, 161, 0], [1, "de", 53, 93, 162, 0], [1, "de", 53, 93, 163, 0], [1, "de", 53, 93, 164, 0], [1, "de", 53, 93, 165, 0], [1, "de", 53, 93, 166, 0], [1, "de", 53, 93, 167, 0], [1, "de", 52, 91, 167, 0], [1, "de", 53, 93, 169, 0], [1, "de", 53, 93, 168, 0], [1, "de", 53, 93, 170, 0], [1, "de", 53, 93, 171, 0], [1, "de", 53, 93, 173, 0], [1, "de", 53, 93, 176, 0], [1, "de", 53, 93, 175, 0], [1, "de", 53, 92, 169, 0], [1, "de", 53, 93, 178, 0], [1, "de", 53, 93, 179, 0], [1, "de", 53, 93, 180, 0], [1, "de", 53, 93, 181, 0], [1, "de", 53, 93, 183, 0], [1, "de", 53, 93, 184, 0], [1, "de", 53, 93, 186, 0], [1, "de", 18, 95, 185, 0], [1, "de", 53, 93, 187, 0], [1, "de", 53, 93, 188, 0], [1, "de", 52, 91, 186, 0], [1, "de", 53, 93, 190, 0], [1, "de", 53, 93, 192, 0], [1, "de", 53, 93, 195, 0], [1, "de", 53, 93, 194, 0], [1, "de", 52, 91, 196, 0], [1, "de", 53, 93, 197, 0], [1, "de", 53, 93, 200, 0], [1, "de", 53, 93, 198, 0], [1, "de", 53, 93, 201, 0], [1, "de", 53, 93, 202, 0], [1, "de", 53, 93, 203, 0], [1, "de", 53, 93, 204, 0], [1, "de", 53, 93, 206, 0], [1, "de", 53, 93, 205, 0], [1, "de", 53, 93, 207, 0], [1, "de", 53, 93, 209, 0], [1, "de", 53, 93, 210, 0], [1, "de", 53, 93, 212, 0], [1, "de", 52, 91, 204, 0], [1, "de", 53, 93, 213, 0], [1, "de", 53, 93, 214, 0], [1, "de", 53, 93, 215, 0], [1, "de", 53, 93, 216, 0], [1, "de", 53, 93, 217, 0], [1, "de", 53, 93, 218, 0], [1, "de", 53, 93, 219, 0], [1, "de", 53, 93, 220, 0], [1, "de", 52, 92, 213, 0], [1, "de", 52, 92, 206, 0], [1, "de", 52, 92, 202, 0], [1, "de", 53, 92, 201, 0], [1, "de", 52, 92, 194, 0], [1, "de", 52, 92, 178, 0], [1, "de", 52, 92, 171, 0], [1, "de", 53, 93, 221, 0], [1, "de", 53, 93, 222, 0], [1, "de", 53, 93, 223, 0], [1, "de", 53, 93, 225, 0], [1, "de", 53, 93, 228, 0], [1, "de", 53, 93, 227, 0], [1, "de", 52, 92, 217, 0], [1, "de", 53, 92, 218, 0], [1, "de", 52, 92, 221, 0], [1, "de", 52, 92, 225, 0], [1, "de", 52, 93, 226, 0], [1, "de", 52, 93, 224, 0], [1, "de", 52, 93, 208, 0], [1, "de", 52, 93, 211, 0], [1, "de", 52, 93, 196, 0], [1, "de", 52, 93, 199, 0], [1, "de", 52, 93, 189, 0], [1, "de", 52, 93, 191, 0], [1, "de", 52, 93, 193, 0], [1, "de", 52, 93, 182, 0], [1, "de", 52, 93, 185, 0], [1, "de", 52, 93, 172, 0], [1, "de", 52, 93, 174, 0], [1, "de", 52, 93, 177, 0], [1, "de", 52, 93, 155, 0], [1, "de", 52, 93, 157, 0], [1, "de", 52, 93, 160, 0], [1, "de", 52, 92, 162, 0], [1, "de", 53, 93, 229, 0], [1, "de", 53, 93, 231, 0], [1, "de", 53, 93, 232, 0], [1, "de", 53, 93, 234, 0], [1, "de", 52, 93, 230, 0], [1, "de", 52, 92, 228, 0], [1, "de", 53, 93, 235, 0], [1, "de", 53, 93, 236, 0], [1, "de", 53, 93, 237, 0], [1, "de", 53, 93, 239, 0], [1, "de", 53, 93, 240, 0], [1, "de", 52, 93, 238, 0], [1, "de", 53, 93, 241, 0], [1, "de", 52, 93, 242, 0], [1, "de", 52, 93, 243, 0], [1, "de", 53, 93, 244, 0], [1, "de", 53, 93, 246, 0], [1, "de", 53, 93, 245, 0], [1, "de", 52, 93, 247, 0], [1, "de", 53, 93, 248, 0], [1, "de", 52, 92, 235, 0], [1, "de", 52, 92, 245, 0], [1, "de", 52, 93, 249, 0], [1, "de", 53, 93, 250, 0], [1, "de", 53, 93, 251, 0], [1, "de", 53, 93, 252, 0], [1, "de", 53, 93, 254, 0], [1, "de", 52, 93, 253, 0], [1, "de", 52, 93, 255, 0], [1, "de", 53, 93, 257, 0], [1, "de", 53, 93, 256, 0], [1, "de", 52, 93, 258, 0], [1, "de", 53, 93, 259, 0], [1, "de", 52, 93, 260, 0], [1, "de", 53, 93, 263, 0], [1, "de", 53, 93, 264, 0], [1, "de", 53, 93, 265, 0], [1, "de", 52, 93, 266, 0], [1, "de", 53, 93, 267, 0], [1, "de", 52, 93, 268, 0], [1, "de", 52, 93, 269, 0], [1, "de", 53, 93, 276, 0], [1, "de", 53, 93, 277, 0], [1, "de", 52, 93, 278, 0], [1, "de", 53, 93, 279, 0], [1, "de", 52, 93, 280, 0], [1, "de", 52, 93, 283, 0], [1, "de", 53, 93, 284, 0], [1, "de", 53, 93, 285, 0], [1, "de", 53, 93, 286, 0], [1, "de", 52, 93, 287, 0], [1, "de", 53, 93, 288, 0], [1, "de", 53, 93, 289, 0], [1, "de", 52, 93, 290, 0], [1, "de", 52, 93, 291, 0], [1, "de", 53, 93, 292, 0], [1, "de", 52, 93, 293, 0], [1, "de", 53, 93, 294, 0], [1, "de", 52, 93, 295, 0], [1, "de", 52, 93, 296, 0], [1, "de", 53, 93, 297, 0], [1, "de", 53, 93, 298, 0], [1, "de", 52, 93, 299, 0], [1, "de", 53, 93, 300, 0], [1, "de", 52, 92, 298, 0], [1, "de", 52, 92, 293, 0], [1, "r", 92, 262, 0], [1, "r", 93, 262, 0], [1, "de", 52, 93, 261, 0], [1, "cs", 0, 223, 104, 1], [1, "cs", 2, 223, 105, 1], [1, "cs", 2, 223, 102, 1], [1, "cs", 2, 223, 103, 1], [1, "la", 3, 141, 8, 1], [1, "cs", 2, 140, 9, 1], [1, "la", 4, 142, 9, 1], [1, "de", 4, 81, 149, 0], [1, "f", 0, 83, 148, 1], [1, "f", 1, 82, 149, 1], [1, "de", 34, 81, 156, 0], [1, "de", 51, 17, 9, 0], [1, "de", 54, 16, 9, 0], [1, "de", 54, 15, 9, 0], [1, "cs", 3, 223, 106, 1], [1, "p", 0, 119, 279, 1], [1, "p", 0, 109, 242, 1], [1, "cs", 1, 29, 9, 1], [1, "cs", 2, 30, 9, 1], [1, "cs", 2, 31, 9, 1], [1, "cs", 2, 32, 9, 1], [1, "cs", 2, 33, 9, 1], [1, "cs", 2, 69, 9, 1], [1, "cs", 2, 71, 9, 1], [1, "cs", 2, 70, 9, 1], [1, "cs", 1, 72, 9, 1], [1, "cs", 2, 73, 9, 1], [1, "de", 10, 31, 10, 0], [1, "de", 10, 29, 10, 0], [1, "de", 10, 44, 10, 0], [1, "de", 4, 87, 10, 0], [1, "de", 4, 86, 10, 0], [1, "de", 5, 87, 9, 0], [1, "de", 5, 13, 10, 0], [1, "de", 4, 14, 11, 0], [1, "de", 4, 16, 10, 0], [1, "de", 4, 17, 10, 0], [1, "cs", 2, 146, 9, 1], [1, "cs", 2, 148, 9, 1], [1, "cs", 2, 150, 9, 1], [1, "cs", 2, 153, 9, 1], [1, "cs", 2, 155, 9, 1], [1, "cs", 1, 149, 9, 1], [1, "cs", 1, 154, 9, 1], [1, "cs", 3, 147, 9, 1], [1, "cs", 3, 151, 9, 1], [1, "cs", 3, 152, 9, 1], [1, "cs", 3, 156, 9, 1], [1, "cs", 3, 157, 9, 1], [1, "cs", 3, 158, 9, 1], [1, "cs", 3, 159, 9, 1], [1, "cs", 3, 160, 9, 1], [1, "cs", 0, 161, 9, 1], [1, "cs", 2, 162, 9, 1], [1, "cs", 2, 163, 9, 1], [1, "cs", 1, 164, 9, 1], [1, "cs", 2, 165, 9, 1], [1, "cs", 3, 166, 9, 1], [1, "cs", 3, 168, 9, 1], [1, "cs", 3, 170, 9, 1], [1, "cs", 1, 169, 9, 1], [1, "cs", 2, 167, 9, 1], [1, "cs", 2, 171, 9, 1], [1, "cs", 2, 173, 9, 1], [1, "cs", 2, 172, 9, 1], [1, "cs", 2, 174, 9, 1], [1, "cs", 1, 175, 9, 1], [1, "cs", 3, 176, 9, 1], [1, "cs", 3, 178, 9, 1], [1, "cs", 3, 179, 9, 1], [1, "cs", 0, 180, 9, 1], [1, "cs", 2, 177, 9, 1], [1, "cs", 2, 182, 9, 1], [1, "cs", 2, 181, 9, 1], [1, "cs", 2, 183, 9, 1], [1, "cs", 2, 184, 9, 1], [1, "cs", 2, 185, 9, 1], [1, "cs", 2, 186, 9, 1], [1, "cs", 1, 187, 9, 1], [1, "cs", 2, 188, 9, 1], [1, "cs", 3, 189, 9, 1], [1, "cs", 3, 190, 9, 1], [1, "cs", 3, 191, 9, 1], [1, "cs", 2, 192, 9, 1], [1, "cs", 0, 193, 9, 1], [1, "cs", 2, 194, 9, 1], [1, "cs", 2, 196, 9, 1], [1, "cs", 2, 198, 9, 1], [1, "cs", 2, 200, 9, 1], [1, "cs", 3, 195, 9, 1], [1, "cs", 3, 197, 9, 1], [1, "cs", 3, 199, 9, 1], [1, "cs", 0, 201, 9, 1], [1, "cs", 2, 202, 9, 1], [1, "cs", 2, 203, 9, 1], [1, "cs", 3, 208, 9, 1], [1, "cs", 3, 207, 9, 1], [1, "cs", 3, 206, 9, 1], [1, "cs", 3, 205, 9, 1], [1, "cs", 3, 204, 9, 1], [1, "cs", 3, 214, 9, 1], [1, "cs", 3, 215, 9, 1], [1, "cs", 3, 216, 9, 1], [1, "cs", 3, 217, 9, 1], [1, "cs", 3, 218, 9, 1], [1, "b", 0, 5, 159, 0], [1, "b", 0, 5, 171, 0], [2, "isl", 1, 122, 63, 0], [2, "isl", 2, 119, 277, 0], [2, "isl", 2, 109, 244, 0], [2, "isl", 2, 114, 205, 0], [2, "isl", 1, 120, 150, 0], [2, "isl", 2, 154, 129, 0], [2, "isl", 0, 184, 158, 0], [2, "isl", 1, 208, 128, 0], [2, "isl", 1, 215, 132, 0], [2, "isl", 1, 214, 128, 0], [2, "isl", 1, 209, 132, 0], [1, "la", 3, 217, 20, 1], [1, "la", 1, 215, 19, 1], [1, "la", 0, 212, 18, 1], [1, "la", 4, 214, 18, 1], [1, "la", 4, 216, 19, 1], [1, "la", 4, 211, 20, 1], [1, "la", 3, 210, 19, 1], [1, "la", 3, 215, 21, 1], [1, "la", 1, 214, 20, 1], [1, "la", 3, 214, 22, 1], [1, "la", 3, 214, 24, 1], [1, "la", 4, 214, 26, 1], [1, "la", 4, 213, 27, 1], [1, "la", 1, 212, 28, 1], [1, "la", 2, 212, 29, 1], [1, "la", 5, 212, 30, 1], [1, "la", 4, 208, 19, 1], [1, "la", 4, 207, 19, 1], [1, "la", 1, 206, 19, 1], [1, "la", 1, 205, 19, 1], [1, "la", 2, 204, 19, 1], [1, "la", 5, 203, 19, 1], [1, "la", 3, 210, 17, 1]]),
                Fe.mode === Ke.MODE_ZOMBIES)
                    Fe.biomes.push(new Fe.Biome(Fe.BIOME_FOREST,2,2,80,80,15));
                else if (Fe.mode === Ke.MODE_LEGACY)
                    Fe.biomes.push(new Fe.Biome(Fe.BIOME_FOREST,2,2,150,150,15));
                else if (0 !== Fe.custom_map && 0 < Fe.custom_map.length && 3 < Fe.custom_map[0].length)
                    for (var e = 0; e < Fe.custom_map.length; e++) {
                        if (0 !== (c = Fe.custom_map[e])[0])
                            break;
                        var t = Ke.BIOME_FOREST;
                        switch (c[1]) {
                        case "FOREST":
                            t = Fe.BIOME_FOREST;
                            break;
                        case "WINTER":
                            t = Fe.BIOME_WINTER;
                            break;
                        case "DESERT":
                            t = Fe.BIOME_DESERT;
                            break;
                        case "LAVA":
                            t = Fe.BIOME_LAVA;
                            break;
                        case "DRAGON":
                            t = Fe.BIOME_DRAGON
                        }
                        Fe.biomes.push(new Fe.Biome(t,c[2],c[3],c[4],c[5],c[6],c[7]))
                    }
                else if (0 !== Fe.custom_map) {
                    for (e = 0; e < Fe.custom_map.length; e++) {
                        var i = Fe.custom_map[e]
                          , t = Ke.BIOME_FOREST;
                        switch (i[0]) {
                        case "FOREST":
                            t = Fe.BIOME_FOREST;
                            break;
                        case "WINTER":
                            t = Fe.BIOME_WINTER;
                            break;
                        case "DESERT":
                            t = Fe.BIOME_DESERT;
                            break;
                        case "LAVA":
                            t = Fe.BIOME_LAVA;
                            break;
                        case "DRAGON":
                            t = Fe.BIOME_DRAGON
                        }
                        if (0 === se(t, i[1], i[2], 0, 10 * (e + 1)))
                            break
                    }
                    if (e !== Fe.custom_map.length)
                        continue
                }
                break
            }
            render_minimap();
            for (var n = [], r = 0; r < Fe.nh; r++) {
                n[r] = new Array(Fe.nw);
                for (var z = 0; z < Fe.nw; z++)
                    n[r][z] = 0
            }
            console.log(Fe.nh + ":" + Fe.nw);
            for (r = 0; r < Fe.biomes.length; r++)
                for (var k = (i = Fe.biomes[r]).x2 / 100, W = i.y2 / 100, o = i.x1 / 100; o <= k; o++)
                    for (var a = i.y1 / 100; a <= W; a++)
                        n[a] && (n[a][o] = 1);
            for (a = 0; a < Fe.nh; a++)
                for (o = 0; o < Fe.nw; o++)
                    if (0 === n[a][o]) {
                        l = u = _ = d = s = V = void 0;
                        for (var V = n, s = o, d = a, _ = s, u = d; u < Fe.nh; u++) {
                            for (var l = s; l < Fe.nw && !((_ = u === d ? Math.max(l, _) : _) < l) && 1 !== V[u][l]; l++)
                                V[u][l] = 1;
                            if (l < _)
                                break
                        }
                        Fe.biomes.push(new Fe.Biome(Fe.BIOME_SEA,s,d,_ - s + 1,u - d,15))
                    }
            he = {
                w: Fe.nw,
                h: Fe.nh,
                tiles: []
            };
            for (r = 0; r < Fe.nh; r++)
                he.tiles[r] = [];
            if (0 !== Fe.custom_map && 0 < Fe.custom_map.length && 3 < Fe.custom_map[0].length)
                for (e = 0; e < Fe.custom_map.length; e++)
                    "isl" === (c = Fe.custom_map[e])[1] && Fe.add_island(c[2], c[3], c[4]);
            else
                Fe.add_islands(Fe.islands);
            if (0 !== Fe.custom_map && 0 < Fe.custom_map.length && 3 < Fe.custom_map[0].length) {
                for (var c, U = [], e = 0; e < Fe.custom_map.length; e++)
                    1 === (c = Fe.custom_map[e])[0] && ("r" === c[1] ? (ce(c[3], c[2], "wtb", 0, 1),
                    U.push([c[3], c[2], c[4]])) : ce(c[4], c[3], c[1], c[2], c[5]));
                _e(0, U),
                U = []
            } else
                for (r = 0; r < Fe.biomes.length; r++) {
                    i = Fe.biomes[r];
                    if (Fe.mode === Ke.MODE_LEGACY) {
                        if (i.t === Fe.BIOME_FOREST) {
                            K = T = E = h = void 0;
                            for (var h = r, E = i.w / 1e4, T = 0; T < 6; T++)
                                le(h, "t", T, Math.floor(80 * E));
                            for (T = 0; T < 4; T++)
                                le(h, "b", T, Math.floor(80 * E));
                            for (T = 0; T < 3; T++)
                                le(h, "s", T, Math.floor(50 * E));
                            for (var K = [], T = 0; T < 6; T++)
                                de(h, K);
                            for (_e(h, K),
                            K = [],
                            le(h, "p", 0, Math.floor(28 * E)),
                            T = 0; T < 3; T++)
                                le(h, "g", T, Math.floor(7 * E));
                            for (T = 0; T < 3; T++)
                                le(h, "d", T, Math.floor(2 * E));
                            for (T = 0; T < 3; T++)
                                le(h, "a", T, Math.floor(+E));
                            for (T = 0; T < 3; T++)
                                le(h, "m", T, Math.floor(+E));
                            le(h, "a", 0, Math.floor(+E)),
                            ue(h)
                        }
                    } else {
                        if (i.t === Fe.BIOME_FOREST) {
                            g = p = I = A = void 0;
                            for (var A = r, I = i.w / 1e4, p = 0; p < 6; p++)
                                le(A, "t", p, Math.floor(20 * I));
                            for (p = 0; p < 4; p++)
                                le(A, "b", p, Math.floor(20 * I));
                            for (p = 0; p < 3; p++)
                                le(A, "s", p, Math.floor(20 * I));
                            var g = [];
                            for (de(A, g),
                            _e(A, g),
                            g = [],
                            le(A, "p", 0, Math.floor(24 * I)),
                            p = 0; p < 3; p++)
                                le(A, "g", p, Math.floor(5 * I));
                            if (Fe.mode === Ke.MODE_ZOMBIES) {
                                for (p = 0; p < 3; p++)
                                    le(A, "d", p, Math.floor(3 * I));
                                for (p = 0; p < 3; p++)
                                    le(A, "a", p, Math.floor(2 * I))
                            }
                            ue(A)
                        }
                        if (i.t === Fe.BIOME_LAVA) {
                            N = b = O = void 0;
                            for (var O = r, b = i.w / 1e4, x = (Z = q = S = R = C = j = X = J = Y = m = F = x = void 0,
                            80 * b), F = O, m = Fe.biomes[F], Y = 0, J = 0; Y < x && J < 1e4; J++) {
                                var X = m.y1 + Fe.RNG.get() * m.h
                                  , j = m.x1 + Fe.RNG.get() * m.w
                                  , C = Math.floor(X / 100)
                                  , R = Math.floor(j / 100)
                                  , X = Fe.dist_from_biome(F, 100 * R + 50, 100 * C + 50);
                                if (!(X < 600)) {
                                    for (var S = 1, q = C - 4; 1 === S && q <= C + 4; q++)
                                        for (var Z = R - 4; 1 === S && Z <= R + 4; Z++)
                                            void 0 !== he.tiles[q][Z] && (S = 0);
                                    0 !== S && (ce(C, R, "la", Y % 6, 0),
                                    Y++)
                                }
                            }
                            for (var N = 0; N < 3; N++)
                                le(O, "s", N, Math.floor(12 * b));
                            for (N = 0; N < 3; N++)
                                le(O, "g", N, Math.floor(6 * b));
                            for (N = 0; N < 3; N++)
                                le(O, "re", N, Math.max(1, Math.floor(+b)), .2);
                            for (N = 0; N < 3; N++)
                                le(O, "a", N, Math.max(1, Math.floor(2 * b)));
                            ue(O)
                        }
                        if (i.t === Fe.BIOME_WINTER) {
                            v = f = D = void 0;
                            for (var D = r, f = i.w / 1e4, v = 0; v < 3; v++)
                                le(D, "s", v, Math.floor(18 * f));
                            for (v = 0; v < 3; v++)
                                le(D, "f", v, Math.floor(24 * f));
                            for (v = 0; v < 3; v++)
                                le(D, "d", v, Math.max(1, Math.floor(2 * f)), .3);
                            for (v = 0; v < 3; v++)
                                le(D, "g", v, Math.floor(6 * f));
                            ue(D)
                        }
                        if (i.t === Fe.BIOME_DESERT) {
                            g = y = $ = M = void 0;
                            for (var M = r, $ = i.w / 1e4, y = 0; y < 3; y++)
                                le(M, "s", y, Math.floor(12 * $));
                            for (y = 0; y < 3; y++)
                                le(M, "m", y, Math.max(1, Math.floor(+$)), .2);
                            le(M, "c", 0, Math.floor(36 * $));
                            for (var g = [], L = (ae = oe = G = re = ne = ie = te = ee = Q = L = void 0,
                            M), Q = g, L = Fe.biomes[L], ee = Math.floor(L.y1 / 100), te = Math.floor(L.x1 / 100), ie = Math.floor(L.h / 100), L = Math.floor(L.w / 100), ne = ee + Math.floor(ie / 2), re = te + Math.floor(L / 2), G = 0; G < 3; G++)
                                ce(oe = Math.floor(ne - 3 + 6 * Fe.RNG.get()), ae = Math.floor(re - 3 + 6 * Fe.RNG.get()), "plm", G, 1);
                            for (var oe, ae, G = 0; G < 80; G++)
                                1 === ce(oe = Math.floor(ne - 3 + 6 * Fe.RNG.get()), ae = Math.floor(re - 3 + 6 * Fe.RNG.get()), "wtb", 0, 1) && Q.push([oe, ae, 0]);
                            _e(M, g),
                            g = []
                        }
                        if (i.t === Fe.BIOME_DRAGON) {
                            P = H = void 0;
                            for (var H = r, P = 0; P < 3; P++)
                                le(H, "s", P, 15);
                            for (P = 0; P < 3; P++)
                                le(H, "a", P, 1);
                            for (P = 0; P < 3; P++)
                                le(H, "d", P, 1);
                            ue(H)
                        }
                    }
                }
            Te("isl", 1),
            Te("wtb", 20),
            Te("la", 1),
            Te("c", 1),
            Te("s", 1),
            Te("f", 1),
            Te("p", 1),
            Te("g", 1),
            Te("d", 1),
            Te("a", 1),
            Te("re", 1),
            Te("m", 1),
            Ee = [],
            Fe.map_wrapper(he)
        }
        ,
        this.render_single_resource = ce,
        this.map_wrapper = function(e) {
            for (var t = 0; t < this.nh; t++)
                for (var i = 0; i < this.nw; i++)
                    if (e.tiles[t] || (e.tiles[t] = []),
                    e.tiles[t][i]) {
                        var n = e.tiles[t][i];
                        if (n.de && 0 < n.de.length)
                            for (var r = 0; r < n.de.length; r++)
                                if (n.de[r] && 0 < n.de[r].length)
                                    if (n.de = n.de[r][0],
                                    41 <= r && r <= 49) {
                                        n.de.scale = 3;
                                        var o = Math.floor(3 * Math.random() + 1);
                                        n.de.p = [];
                                        for (var a = 0; a < o; a++)
                                            n.de.p.push({
                                                x: 120 * Math.random() - 60,
                                                y: 120 * Math.random() - 60,
                                                angle: Math.random() * Math.PI * 2,
                                                _id: 41 + Math.floor(9 * Math.random())
                                            })
                                    } else if (19 <= r && r <= 26) {
                                        n.de.scale = 3;
                                        o = Math.floor(3 * Math.random() + 1);
                                        n.de.p = [];
                                        for (a = 0; a < o; a++)
                                            n.de.p.push({
                                                x: 120 * Math.random() - 60,
                                                y: 120 * Math.random() - 60,
                                                angle: Math.random() * Math.PI * 2,
                                                _id: 19 + Math.floor(8 * Math.random())
                                            })
                                    } else
                                        r <= 15 || 27 <= r && r <= 40 ? (n.de.angle = 0,
                                        n.de.scale = 2) : (n.de.angle = Math.random() * Math.PI * 2,
                                        n.de.scale = 1),
                                        n.de._id = r;
                        s(n, "p", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "t", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "s", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "g", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "d", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "b", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "f", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "sw", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "gw", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "dw", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "a", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "cs", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "plm", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "re", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "c", new Utils.LinearAnimation(!1,1,1,0,10,10)),
                        s(n, "m", new Utils.LinearAnimation(!1,1,1,0,10,10))
                    } else
                        e.tiles[t][i] = []
        }
        ,
        this.time = Le.DAY,
        this.clock = {
            translate: {
                x: 0,
                y: 0
            },
            init: 0,
            hour: 0,
            now: 0
        },
        this.delete_all_units = function() {
            this.fast_units = [],
            this.units[xe.PLAYERS] = [],
            this.units[xe.WORKBENCH] = [],
            this.units[xe.FIRE] = [],
            this.units[xe.BIG_FIRE] = [],
            this.units[xe.SEED] = [],
            this.units[xe.SPIKE] = [],
            this.units[xe.STONE_SPIKE] = [],
            this.units[xe.GOLD_SPIKE] = [],
            this.units[xe.DIAMOND_SPIKE] = [],
            this.units[xe.AMETHYST_SPIKE] = [],
            this.units[xe.REIDITE_SPIKE] = [],
            this.units[xe.BRIDGE] = [],
            this.units[xe.WOOD_TOWER] = [],
            this.units[xe.ROOF] = [],
            this.units[xe.PLOT] = [],
            this.units[xe.WHEAT_SEED] = [],
            this.units[xe.ALOE_VERA_SEED] = [],
            this.units[xe.PUMPKIN_SEED] = [],
            this.units[xe.TOMATO_SEED] = [],
            this.units[xe.CARROT_SEED] = [],
            this.units[xe.WATERMELON_SEED] = [],
            this.units[xe.GARLIC_SEED] = [],
            this.units[xe.THORNBUSH_SEED] = [],
            this.units[xe.WINDMILL] = [],
            this.units[xe.EXTRACTOR_MACHINE_STONE] = [],
            this.units[xe.EXTRACTOR_MACHINE_GOLD] = [],
            this.units[xe.EXTRACTOR_MACHINE_DIAMOND] = [],
            this.units[xe.EXTRACTOR_MACHINE_AMETHYST] = [],
            this.units[xe.EXTRACTOR_MACHINE_REIDITE] = [],
            this.units[xe.WELL] = [],
            this.units[xe.WALL] = [],
            this.units[xe.STONE_WALL] = [],
            this.units[xe.GOLD_WALL] = [],
            this.units[xe.DIAMOND_WALL] = [],
            this.units[xe.AMETHYST_WALL] = [],
            this.units[xe.REIDITE_WALL] = [],
            this.units[xe.BED] = [],
            this.units[xe.WOOD_DOOR] = [],
            this.units[xe.STONE_DOOR] = [],
            this.units[xe.GOLD_DOOR] = [],
            this.units[xe.DIAMOND_DOOR] = [],
            this.units[xe.AMETHYST_DOOR] = [],
            this.units[xe.REIDITE_DOOR] = [],
            this.units[xe.WOOD_DOOR_SPIKE] = [],
            this.units[xe.STONE_DOOR_SPIKE] = [],
            this.units[xe.GOLD_DOOR_SPIKE] = [],
            this.units[xe.DIAMOND_DOOR_SPIKE] = [],
            this.units[xe.AMETHYST_DOOR_SPIKE] = [],
            this.units[xe.REIDITE_DOOR_SPIKE] = [],
            this.units[xe.FURNACE] = [],
            this.units[xe.TOTEM] = [],
            this.units[xe.WOOD_TOWER] = [],
            this.units[xe.CHEST] = [],
            this.units[xe.RESURRECTION] = [],
            this.units[xe.EMERALD_MACHINE] = [],
            this.units[xe.FRUIT] = [],
            this.units[xe.RABBIT] = [],
            this.units[xe.WOLF] = [],
            this.units[xe.CRAB] = [],
            this.units[xe.BOAR] = [],
            this.units[xe.BABY_MAMMOTH] = [],
            this.units[xe.CRAB_BOSS] = [],
            this.units[xe.BABY_DRAGON] = [],
            this.units[xe.BABY_LAVA] = [],
            this.units[xe.HAWK] = [],
            this.units[xe.PIRANHA] = [],
            this.units[xe.KRAKEN] = [],
            this.units[xe.FOX] = [],
            this.units[xe.PENGUIN] = [],
            this.units[xe.SPELL] = [],
            this.units[xe.FIREFLY] = [],
            this.units[xe.BEAR] = [],
            this.units[xe.MAMMOTH] = [],
            this.units[xe.VULTURE] = [],
            this.units[xe.SAND_WORM] = [],
            this.units[xe.DRAGON] = [],
            this.units[xe.LAVA_DRAGON] = [],
            this.units[xe.FLAME] = [],
            this.units[xe.WHEAT_MOB] = [],
            this.units[xe.ALOE_VERA_MOB] = [],
            this.units[xe.PUMPKIN_MOB] = [],
            this.units[xe.GARLIC_MOB] = [],
            this.units[xe.THORNBUSH_MOB] = [],
            this.units[xe.TREASURE_CHEST] = [],
            this.units[xe.DEAD_BOX] = [],
            this.units[xe.CRATE] = [],
            this.units[xe.BREAD_OVEN] = [],
            this.units[xe.SIGN] = [],
            this.units[xe.SPIDER] = [],
            this.units[xe.GIFT] = [],
            this.units[xe.GARLAND] = []
        }
        ,
        this.delete_units = function(e) {
            if (this.fast_units[e]) {
                type = this.fast_units[e].type,
                this.fast_units[e] = null;
                for (var t = this.units[type], i = 0; i < t.length; i++)
                    if (t[i].uid == e)
                        return void t.splice(i, 1)
            }
        }
        ,
        this.delete_units2 = function(e) {
            if (this.fast_units[e]) {
                type = this.fast_units[e].type;
                for (var t = this.units[type], i = 0; i < t.length; i++)
                    if (t[i].uid == e)
                        return
            }
        }
        ,
        this.find_tower = function(e, t) {
            for (var i = 0; i < this.units[xe.WOOD_TOWER].length; i++) {
                var n = this.units[xe.WOOD_TOWER][i];
                if (Math.floor(n.x / 100) === t && Math.floor(n.y / 100) === e)
                    return 1
            }
            return 0
        }
        ,
        this.find_bridge = function(e, t) {
            for (var i = 0; i < this.units[xe.BRIDGE].length; i++) {
                var n = this.units[xe.BRIDGE][i];
                if (Math.floor(n.x / 100) == e && Math.floor(n.y / 100) == t)
                    return !0
            }
            return !1
        }
        ,
        this.move_units = function(e) {
            for (var t = 0; t < e.length; t++) {
                var i, n, r;
                (b = e[t]).angle != b.nangle && (n = 2 * Math.PI,
                b.angle = (b.angle + n) % n,
                b.nangle = (b.nangle + n) % n,
                b.angle != b.nangle) && (i = b.nangle - b.angle,
                r = (r = (r = Math.abs(i)) > Math.PI ? 2 * Math.PI - r : r) / Math.PI * 3 * Ke.ROTATE * qe,
                i > Math.PI || !(i < -Math.PI) && i < 0 ? b.angle -= r : b.angle += r,
                b.angle = (b.angle + n) % n,
                Math.abs(b.angle - b.nangle) < r) && (b.angle = b.nangle),
                Math.floor(b.r.y / 100),
                Math.floor(b.r.x / 100);
                if (b.x == b.r.x && b.y == b.r.y || (b.action & m.IDLE && (b.action -= m.IDLE),
                b.action |= m.WALK,
                i = Utils.get_std_angle(b, b.r) + Math.PI,
                n = qe * b.speed,
                r = Utils.build_vector(n, i),
                Utils.norm(r) < Utils.norm(Utils.get_vector(b, b.r)) ? Utils.add_vector(b, r) : (b.action & m.WALK && (b.action -= m.WALK),
                b.action |= m.IDLE,
                Utils.copy_vector(b.r, b))),
                b.ghost) {
                    var o = b.bubbles;
                    (0 === (_ = o.length) || _ < Le.GHOST_BUBBLES && o[_ - 1].life < .95) && o.push({
                        id: Math.floor(Math.random() * sprite[Le.BUBBLES][0].length),
                        x: Math.floor(b.x + 80 * Math.random() - 40),
                        y: Math.floor(b.y + 80 * Math.random() - 40),
                        life: 1
                    });
                    for (var a = 0; a < _; a++)
                        o[a].life = Math.max(0, o[a].life - qe);
                    for (a = 0; a < _; a++)
                        if (0 === o[a].life) {
                            o.splice(a, 1);
                            break
                        }
                }
                var s = 0;
                if (b.move_effect && De.quality) {
                    var d = b.swim
                      , _ = d.length;
                    0 < b.dist_water && b.vehicle !== Ge.BABY_DRAGON && b.vehicle !== Ge.BABY_LAVA && b.vehicle !== Ge.PLANE && b.vehicle !== Ge.HAWK && b.vehicle !== Ge.NIMBUS && !b.ghost && (s = 1,
                    0 === _ || Utils.dist(d[_ - 1], b) > Le.SWIM_SPACE) && (E = -b.angle,
                    h = 45 * Math.sin(E) * We,
                    E = 45 * Math.cos(E) * We,
                    d.push({
                        x: b.x + h,
                        y: b.y + E,
                        r: 8,
                        alpha: .8
                    }),
                    d.push({
                        x: b.x - h,
                        y: b.y - E,
                        r: 8,
                        alpha: .8
                    }),
                    d.push({
                        x: b.x,
                        y: b.y,
                        r: 24,
                        alpha: 1
                    }));
                    for (a = 0; a < _; a++)
                        d[a].alpha = Math.max(0, d[a].alpha - qe / 2.2),
                        d[a].r += 20 * qe;
                    0 < d.length && 0 === d[0].alpha && d.splice(0, 1);
                    var u, l, c, h, E, T = b.foot, _ = T.length, A = -1, I = Math.max(0, Math.sign(b.dist_sand)), p = Math.max(0, Math.sign(b.dist_winter)), g = (Math.max(0, Math.sign(b.dist_desert)),
                    Math.max(0, Math.sign(b.dist_lava))), O = Math.max(0, Math.sign(b.dist_dragon));
                    0 < b.dist_sand || 0 < b.dist_desert ? A = Le.SAND_STEP : 0 < b.dist_dragon ? A = Le.CAVE_STEP : 0 < b.dist_winter ? A = Le.SNOW_STEP : 0 < b.dist_lava && (A = Le.LAVA_STEP),
                    p = b.vehicle === Ge.MOUNT_BOAR && 1 == (I | p | g | O) ? (A = Le.BOAR_STEP,
                    u = b.vehicle_fx2 - Math.PI / 2,
                    l = 15,
                    c = 11,
                    Le.STEP_SPACE) : b.vehicle === Ge.BABY_MAMMOTH && 1 == (I | p | g | O) ? (A = Le.BABY_MAMMOTH_STEP,
                    u = b.vehicle_fx2 - Math.PI / 2,
                    l = 21,
                    c = 16,
                    Le.STEP_SPACE) : b.vehicle === Ge.CRAB_BOSS && 1 == (I | p | g | O) ? (A = Le.CRAB_STEP,
                    u = b.vehicle_fx2 - Math.PI / 2,
                    l = 10 + (I = 50 * Math.random()),
                    c = 0 + I,
                    .9 * Le.STEP_SPACE) : (u = b.angle,
                    l = 15,
                    c = 11,
                    Le.STEP_SPACE),
                    b.vehicle === Ge.BABY_DRAGON || b.vehicle === Ge.BABY_LAVA || b.vehicle === Ge.NIMBUS || b.vehicle === Ge.HAWK || b.vehicle === Ge.PLANE || b.ghost || (b.vehicle === Ge.SLED ? (0 === _ || Utils.dist(T[_ - 1], b) > Le.TRAIL_SPACE) && T.push({
                        x: b.x,
                        y: b.y,
                        angle: b.vehicle_fx2,
                        alpha: 1,
                        id: Le.SLED_WAVE
                    }) : -1 != A && 0 === s && (0 === _ || Utils.dist(T[_ - 1], b) > p) && (b.id_foot++,
                    1 < Math.abs(b.x - b.r.x) && 1 < Math.abs(b.y - b.r.y) ? b.r.x > b.x && b.r.y < b.y || b.r.x < b.x && b.r.y > b.y ? b.id_foot % 2 ? E = h = -c * We : h = E = c * We : b.id_foot % 2 ? (h = c * We,
                    E = -c * We) : (E = c * We,
                    h = -c * We) : E = b.id_foot % 2 ? (h = Math.sin(u) * l * We,
                    Math.cos(u) * l * We) : (h = -Math.sin(u) * l * We,
                    -Math.cos(u) * l * We),
                    T.push({
                        x: b.x + h,
                        y: b.y + E,
                        angle: u + Math.PI / 2,
                        alpha: 1,
                        id: A
                    })));
                    for (a = 0; a < _; a++)
                        T[a].id === Le.SLED_WAVE ? T[a].alpha = Math.max(0, T[a].alpha - 1.5 * qe) : T[a].alpha = Math.max(0, T[a].alpha - qe / 2.85);
                    0 < T.length && 0 === T[0].alpha && T.splice(0, 1)
                }
            }
        }
        ,
        this.update = function() {
            this.move_units(this.units[xe.PLAYERS]),
            this.move_units(this.units[xe.RABBIT]),
            this.move_units(this.units[xe.WOLF]),
            this.move_units(this.units[xe.CRAB]),
            this.move_units(this.units[xe.BOAR]),
            this.move_units(this.units[xe.BABY_MAMMOTH]),
            this.move_units(this.units[xe.CRAB_BOSS]),
            this.move_units(this.units[xe.BABY_DRAGON]),
            this.move_units(this.units[xe.BABY_LAVA]),
            this.move_units(this.units[xe.HAWK]),
            this.move_units(this.units[xe.SPIDER]),
            this.move_units(this.units[xe.FOX]),
            this.move_units(this.units[xe.PENGUIN]),
            this.move_units(this.units[xe.SPELL]),
            this.move_units(this.units[xe.FIREFLY]),
            this.move_units(this.units[xe.BEAR]),
            this.move_units(this.units[xe.MAMMOTH]),
            this.move_units(this.units[xe.VULTURE]),
            this.move_units(this.units[xe.SAND_WORM]),
            this.move_units(this.units[xe.DRAGON]),
            this.move_units(this.units[xe.FLAME]),
            this.move_units(this.units[xe.PIRANHA]),
            this.move_units(this.units[xe.KRAKEN]),
            this.move_units(this.units[xe.LAVA_DRAGON])
        }
        ,
        this.breath = [],
        this.breath[Le.LAKE] = new Utils.LinearAnimation(!1,1,1.05,1,.008,.008),
        this.breath[Le.LAKE_DEEP] = new Utils.LinearAnimation(!1,1,1.08,1,.006,.006),
        this.breath[Le.WAVE_ONE] = new Utils.LinearAnimation(!1,1,1.02,1,.008,.008),
        this.breath[Le.WAVE_TWO] = new Utils.LinearAnimation(!1,1,1.08,1,.006,.006),
        this.lava = [],
        this.lava[0] = new Utils.LinearAnimation(!1,.1,1,0,.6,.6),
        this.lava[1] = new Utils.LinearAnimation(!1,.4,1,0,.6,.6),
        this.lava[2] = new Utils.LinearAnimation(!1,.3,1,0,.6,.6),
        this.lava[3] = new Utils.LinearAnimation(!1,.8,1,0,.6,.6),
        this.lava[4] = new Utils.LinearAnimation(!1,.3,1,0,.6,.6),
        this.lava[5] = new Utils.LinearAnimation(!1,.8,1,0,.6,.6),
        this.lava[6] = new Utils.LinearAnimation(!1,.5,1,0,.6,.6),
        this.lava[7] = new Utils.LinearAnimation(!1,.9,1,0,.6,.6),
        this.lava[8] = new Utils.LinearAnimation(!1,.6,1,0,.6,.6),
        this.lava[9] = new Utils.LinearAnimation(!1,.2,1,0,.6,.6),
        this.lava[10] = new Utils.LinearAnimation(!1,.6,1,0,.6,.6),
        this.lava[11] = new Utils.LinearAnimation(!1,.4,1,0,.6,.6),
        this.lava[12] = new Utils.LinearAnimation(!1,.8,1,0,.6,.6),
        this.lava[13] = new Utils.LinearAnimation(!1,.2,1,0,.6,.6),
        this.lava[14] = new Utils.LinearAnimation(!1,.7,1,0,.6,.6)
    }
    function V2(e, t, i, n) {
        this.id = e,
        this.speed = 8 * (e + 5),
        this.life = g0 / 1366,
        this.x = t,
        this.y = i,
        this.c = Math.cos(n),
        this.s = Math.sin(n),
        this.alpha = 0
    }
    function U2() {
        this.init = function() {}
        ,
        this.resurrection = {
            pid: 1,
            iid: 1,
            open: !1
        },
        this.well = {
            pid: 1,
            iid: -1,
            open: !1
        },
        this.windmill = {
            amount_wheat: 0,
            amount_flour: 0,
            pid: 1,
            iid: -1,
            open: !1
        },
        this.extractor = {
            amount_wood: 0,
            amount_mineral: 0,
            type: 0,
            mineral: 0,
            pid: 1,
            iid: -1,
            open: !1
        },
        this.bread_oven = {
            amount_wood: 0,
            amount_bread: 0,
            amount_flour: 0,
            pid: 1,
            iid: -1,
            open: !1
        },
        this.sign = {
            iid: -1,
            open: !1
        },
        this.furnace = {
            amount: 0,
            pid: 1,
            iid: -1,
            open: !1
        },
        this.ghost = {
            enabled: !1,
            delay: -1,
            label: !1,
            now: -1,
            draw: Gr
        },
        this.chest = {
            id: -1,
            amount: 0,
            pid: 1,
            iid: -1,
            open: !1,
            lock: !1,
            locked: !1,
            lockpick: !1,
            padlock: !1
        },
        this.alive = !0,
        this.reconnect = {
            enabled: !1,
            rotate: 0
        },
        this.key = Utils.gup("key", window.location.href);
        var e = Utils.gup("egg", window.location.href);
        e && (De.skin = parseInt(e)),
        this.beta = 0 === window.location.href.indexOf("http://starve.io/beta") ? 1 : 0,
        this.key && this.beta ? Cookies.set("starve_beta", this.key) : this.beta && (this.key = Cookies.get("starve_beta")),
        this.token = Cookies.get("starve_token") ? Cookies.get("starve_token") : Ve.Tokenjoin.token,
        window.baguette(),
        window.kot2;
        function t() {
            this.seed = 1,
            this.seed2 = 2,
            this.seed3 = 3,
            this.seedv = 1,
            this.seedv2 = 2,
            this.seedv3 = 3,
            this.new_seed = function(e) {
                this.seed = 2 + Math.floor(Math.random() * Ke.SEED)
            }
            ,
            this.new_seed2 = function(e) {
                this.seed2 = 2 + Math.floor(Math.random() * Ke.SEED)
            }
            ,
            this.new_seed3 = function(e) {
                this.seed3 = 2 + Math.floor(Math.random() * Ke.SEED)
            }
            ,
            this.new_seedv = function(e) {
                this.seedv = 2 + Math.floor(Math.random() * Ke.SEED)
            }
            ,
            this.new_seedv2 = function(e) {
                this.seedv2 = 2 + Math.floor(Math.random() * Ke.SEED)
            }
            ,
            this.new_seedv3 = function(e) {
                this.seedv3 = 2 + Math.floor(Math.random() * Ke.SEED)
            }
            ,
            this.draw_foam_vert = function(e, t, i, n, r, o, a) {
                for (var s = 1; s < a; ) {
                    var d, _, u = s * i % RAND_SIZE, l = RANDOM[u];
                    l < .1 ? (d += 50,
                    s += 50) : (d = Math.floor(l * n + r),
                    o < s && s < a && (l = .5 < Math.random() ? -10 * qe : 10 * qe,
                    _ = d * t,
                    this.bxv[u] = Math.max(-Ke.FLOAM_X, Math.min(Ke.FLOAM_X, this.bxv[u] + l)),
                    this.byv[u] = Math.max(-Ke.FLOAM_Y, Math.min(Ke.FLOAM_Y, this.byv[u] + l)),
                    0 < _) && (ze.beginPath(),
                    ze.arc(s + Ye.cam.x + this.byv[u], e + this.bxv[u] - .8 * Ke.FLOAM_X, _, 0, 2 * Math.PI),
                    Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
                    ze.fillStyle = s2(83, 156, 160, 236, 247, 249, l)) : ze.fillStyle = Le.FLOAM_COLOR[Fe.time],
                    ze.fill()),
                    s += 2 * d)
                }
            }
            ,
            this.draw_foam = function(e, t, i, n, r, o, a) {
                for (var s = 1; s < a; ) {
                    var d, _, u = s * i % RAND_SIZE, l = RANDOM[u];
                    l < .1 ? (d += 50,
                    s += 50) : (d = Math.floor(l * n + r),
                    o < s && s < a && (l = .5 < Math.random() ? -10 * qe : 10 * qe,
                    _ = d * t,
                    this.bx[u] = Math.max(-Ke.FLOAM_X, Math.min(Ke.FLOAM_X, this.bx[u] + l)),
                    this.by[u] = Math.max(-Ke.FLOAM_Y, Math.min(Ke.FLOAM_Y, this.by[u] + l)),
                    0 < _) && (ze.beginPath(),
                    ze.arc(e + this.bx[u] - .8 * Ke.FLOAM_X, s + Ye.cam.y + this.by[u], _, 0, 2 * Math.PI),
                    Fe.transition ? (l = Fe.time ? 1 - Fe.shade.v : Fe.shade.v,
                    ze.fillStyle = s2(83, 156, 160, 236, 247, 249, l)) : ze.fillStyle = Le.FLOAM_COLOR[Fe.time],
                    ze.fill()),
                    s += 2 * d)
                }
            }
            ,
            this.draw_foams_bottom = function(e, t, i, n, r, o) {
                r -= 30,
                o += 30;
                var a = -((i - Ke.LW1SX - n - 2) / Ke.W1EX);
                0 == a && this.new_seed3(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam_vert(i, a, this.seed3, 18, 16, r, o),
                ze.globalAlpha = 1,
                0 == (a = -((e - Ke.LW2SX - n + 500) / Ke.W2EX)) && this.new_seed(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam_vert(e, a, this.seed, 12, 10, r, o),
                -(ze.globalAlpha = 1) !== t && ((a = -((t - Ke.LW3SX - n + 698) / Ke.W3EX)) <= .01 && this.new_seed2(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam_vert(t, a, this.seed2, 6, 6, r, o),
                ze.globalAlpha = 1)
            }
            ,
            this.draw_foams_top = function(e, t, i, n, r, o) {
                r -= 30,
                o += 30;
                var a = -((-i + Ke.LW1SX + n + 2) / Ke.W1EX);
                0 == a && this.new_seed3(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam_vert(i, a, this.seed3, 18, 16, r, o),
                ze.globalAlpha = 1,
                0 == (a = -((-e + Ke.LW2SX + n) / Ke.W2EX)) && this.new_seed(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam_vert(e, a, this.seed, 12, 10, r, o),
                -(ze.globalAlpha = 1) !== t && ((a = -((-t + Ke.LW3SX + n) / Ke.W3EX)) <= .01 && this.new_seed2(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam_vert(t, a, this.seed2, 6, 6, r, o),
                ze.globalAlpha = 1)
            }
            ,
            this.draw_foams_left = function(e, t, i, n, r, o) {
                r -= 30,
                o += 30;
                var a = -((-i + Ke.LW1SX + n + 2) / Ke.W1EX);
                0 == a && this.new_seed3(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam(i, a, this.seed3, 18, 16, r, o),
                ze.globalAlpha = 1,
                0 == (a = -((-e + Ke.LW2SX + n) / Ke.W2EX)) && this.new_seed(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam(e, a, this.seed, 12, 10, r, o),
                -(ze.globalAlpha = 1) !== t && ((a = -((-t + Ke.LW3SX + n) / Ke.W3EX)) <= .01 && this.new_seed2(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam(t, a, this.seed2, 6, 6, r, o),
                ze.globalAlpha = 1)
            }
            ,
            this.draw_foams_right = function(e, t, i, n, r, o) {
                r -= 30,
                o += 30;
                var a = -((i - Ke.LW1SX - n - 2) / Ke.W1EX);
                0 == a && this.new_seed3(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam(i, a, this.seed3, 18, 16, r, o),
                ze.globalAlpha = 1,
                0 == (a = -((e - Ke.LW2SX - n + 500) / Ke.W2EX)) && this.new_seed(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam(e, a, this.seed, 12, 10, r, o),
                -(ze.globalAlpha = 1) !== t && ((a = -((t - Ke.LW3SX - n + 698) / Ke.W3EX)) <= .01 && this.new_seed2(),
                ze.globalAlpha = Utils.ease_in_out_quad(a),
                this.draw_foam(t, a, this.seed2, 6, 6, r, o),
                ze.globalAlpha = 1)
            }
            ,
            this.w1 = {
                r: new Utils.Ease(Utils.ease_out_cubic,0,10,Ke.W1SX,Ke.W1SX,Ke.W1EX),
                l: new Utils.Ease(Utils.ease_in_out_cubic,0,10,Ke.W1EX,Ke.W1EX,Ke.W1SX)
            },
            this.w2 = {
                r: new Utils.Ease(Utils.ease_out_quart,0,10,Ke.W2SX,Ke.W2SX,Ke.W2EX),
                l: new Utils.Ease(Utils.ease_in_out_quad,0,10,Ke.W2EX,Ke.W2EX,Ke.W2SX)
            },
            this.w3 = {
                r: new Utils.Ease(Utils.ease_out_quint,0,10,Ke.W3SX,Ke.W3SX,Ke.W3EX),
                l: new Utils.Ease(Utils.ease_in_out_quad,0,10,Ke.W3EX,Ke.W3EX,Ke.W3SX)
            },
            this.t_ = function(e) {
                e = e.r.x !== e.r.ex || e.l.x === e.l.ex ? e.r : e.l;
                return e
            }
            ,
            this.t = function(e) {
                e = e.r.x === e.r.ex ? e.l.x === e.l.ex ? (e.r.restart(),
                e.l.restart(),
                e.r) : e.l : e.r;
                return e.ease(e.ex),
                e
            }
            ,
            this.bx = [],
            this.by = [],
            this.bxv = [],
            this.byv = [],
            this.init = function() {
                for (var e = 0; e < RAND_SIZE; e++)
                    this.bx[e] = Math.floor(RANDOM[e] * Ke.FLOAM_X),
                    this.by[e] = Math.floor(RANDOM[e] * Ke.FLOAM_Y),
                    this.bxv[e] = Math.floor(RANDOM[e] * Ke.FLOAM_X),
                    this.byv[e] = Math.floor(RANDOM[e] * Ke.FLOAM_Y);
                this.w1.r.x = this.w1.r.ex,
                this.w2.r.ed = 3.5,
                this.w3.r.ed = 2
            }
            ,
            this.init()
        }
        this.token_id = Cookies.get("starve_token_id") ? Cookies.get("starve_token_id") : Ve.Tokenjoin.id,
        this.id = 0,
        this.uid = 0,
        this.day = 0,
        this.die = {
            howdie: "",
            score: 0,
            bank: 0,
            kill: 0
        },
        this.account = {
            connected: 0,
            last: performance.now()
        },
        this.team = [],
        this.in_team = function(e) {
            for (var t = 0; t < this.team.length; t++)
                if (this.team[t] == e)
                    return !0;
            return !1
        }
        ,
        this.shop = {
            delay: 0,
            time: 0,
            value: 0,
            open: !1,
            draw: function() {
                var e;
                this.open && (e = performance.now(),
                this.time = Math.floor((e - this.delay) / 1e3),
                this.time < 60 ? Je.shop.button.draw(ze) : (document.getElementById("shop_starterkit").style.display = "none",
                this.open = !1))
            }
        },
        this.totem = {
            id: -1,
            pid: -1,
            lock: 0,
            timeout: new Utils.LinearAnimation(!1,0,1,0,1 / 30,1),
            wait: !1
        },
        this.helmet = {
            timeout: new Utils.LinearAnimation(!1,0,1,0,.2,1),
            wait: !1
        },
        this.build = {
            timeout: new Utils.LinearAnimation(!1,0,1,0,1,1),
            wait: !1
        },
        this.weapon = {
            timeout: new Utils.LinearAnimation(!1,0,1,0,.1,1),
            wait: !1
        },
        this.cam = new Utils.Ease2d(Utils.ease_out_quad,0,.4,0,0,ke,b0,ke,b0),
        this.cam.delay = 0,
        this.cam.forcedDelay = 0,
        this.cam.update = function() {
            var e, t;
            0 < this.forcedDelay ? this.forcedDelay -= qe : (t = Fe.fast_units[Ye.uid]) && !h0 ? (this.delay = 0,
            e = Math.max(Math.min(ke - t.x, -2), 2 - Fe.w + g0),
            t = Math.max(Math.min(b0 - t.y, -2), 2 - Fe.h + O0),
            this.ease({
                x: e,
                y: t
            })) : (this.delay += qe,
            3 < this.delay && (this.delay = 0,
            Ye.reconnect.enabled || client.get_focus()))
        }
        ,
        this.cam.w = document.documentElement.clientWidth,
        this.cam.h = document.documentElement.clientHeight,
        this.cam.rw = this.cam.w,
        this.cam.rh = this.cam.h,
        this.cam.rx = 0,
        this.cam.ry = 0,
        this.cam.rdw = 0,
        this.cam.rdh = 0,
        this.cam.change = function(e, t) {
            this.x = -Math.min(Math.max(2 * -Fe.dw, e - Fe.dw - this.rw / 2), Fe.w - this.rw),
            this.y = -Math.min(Math.max(2 * -Fe.dh, t - (Fe.dh + this.rh) / 2), Fe.h - this.rh + Fe.dh),
            this.ex = this.x,
            this.ey = this.y
        }
        ,
        this.control = {
            angle: 0,
            timeout: 0,
            previous: 0,
            mouse: 0,
            attack: 0,
            update: function() {
                var e, t = Fe.fast_units[Ye.uid], i = (e = t ? {
                    x: Ye.cam.x + t.x,
                    y: Ye.cam.y + t.y
                } : m0,
                e = S0 ? t.angle : Ve.AMB.e && null != Ve.AMB.a ? Ve.AMB.a : Ve.Autofarm.e && null != Ve.Autofarm.a ? Ve.Autofarm.a : Ve.AutoEme.e && null != Ve.AutoEme.a ? Ve.AutoEme.a : Ve.Tame.e && null != Ve.Tame.a ? Ve.Tame.a : Utils.get_std_angle(je.pos, e),
                !1);
                this.mouse += qe,
                je.state || !t || t.action & m.ATTACK || (this.attack = 1,
                i = !0,
                this.mouse = 0,
                client.send_attack(e)),
                t && (t.angle = e,
                t.nangle = e),
                i || (this.timeout += qe,
                this.timeout = 0,
                client.send_angle(e),
                this.angle = e),
                Ye.chat.open || Ye.terminal.open || (t = 0,
                Ao.is_left() && (t |= 1),
                Ao.is_right() && (t |= 2),
                Ao.is_bottom() && (t |= 4),
                Ao.is_top() && (t |= 8),
                this.previous != t && client.send_move(t),
                this.previous = t)
            }
        },
        this.gauges = {
            c: 1,
            l: 1,
            realhp: 200,
            h: 1,
            t: 1,
            o: 1,
            wa: 1,
            warn_cold: new Utils.LinearAnimation(!0,0,1,0,3,3),
            warn_life: new Utils.LinearAnimation(!0,0,1,0,2,2),
            warn_hunger: new Utils.LinearAnimation(!0,0,1,0,3,3),
            warn_thirst: new Utils.LinearAnimation(!0,0,1,0,3,3),
            warn_oxygen: new Utils.LinearAnimation(!0,0,1,0,3,3),
            warn_warm: new Utils.LinearAnimation(!0,0,1,0,3,3),
            cold: new Utils.Ease(Utils.ease_out_quad,0,1,0,0,1),
            life: new Utils.Ease(Utils.ease_out_quad,0,1,0,0,1),
            hunger: new Utils.Ease(Utils.ease_out_quad,0,1,0,0,1),
            thirst: new Utils.Ease(Utils.ease_out_quad,0,1,0,0,1),
            oxygen: new Utils.Ease(Utils.ease_out_quad,0,1,0,0,1),
            warm: new Utils.Ease(Utils.ease_out_quad,0,1,0,0,1),
            update: function() {
                this.warn_cold.update(),
                this.warn_life.update(),
                this.warn_hunger.update(),
                this.warn_thirst.update(),
                this.warn_oxygen.update(),
                this.warn_warm.update(),
                this.cold.ease(this.c),
                this.life.ease(this.l),
                this.hunger.ease(this.h),
                this.thirst.ease(this.t),
                this.oxygen.ease(this.o),
                this.warm.ease(this.wa)
            }
        },
        this.bigmap = !1,
        this.spectator = !1,
        this.zombie = !1,
        this.vampire = !1,
        this.inv = {
            max: Ke.WITHOUT_BAG,
            bonus: 0,
            bag: 0,
            n: [],
            can_select: [],
            update_bag_size: function(e, t) {
                1 === e && (this.bag = Ke.BAG_SIZE),
                this.bonus += t,
                this.max = Ke.WITHOUT_BAG + this.bonus + this.bag
            },
            drag: {
                item: -1,
                img: null,
                _start: 0,
                _move: 0,
                _x: -1,
                _y: -1,
                move: function(e) {
                    !this._start || e.x === this._x && e.y === this._y || (this._move = 1)
                },
                start: function(e, t) {
                    this._x = t.x,
                    this._y = t.y,
                    this.item = e,
                    this.img = Ye.inv.can_select[e].info.img[2],
                    this._start = 1
                },
                stop: function() {
                    this._start = 0,
                    this._move = 0,
                    this._x = -1,
                    this._y = -1
                },
                release: function() {
                    var e = -1
                      , t = Ye.inv.can_select
                      , i = 0;
                    if (this._start && this._move) {
                        for (var n, r = 0; r < t.length; r++)
                            if (t[r].info.state === C2) {
                                e = r;
                                break
                            }
                        -1 !== e && e !== this.item && t[this.item] && (i = 1,
                        n = t[e],
                        t[e] = t[this.item],
                        t[this.item] = n,
                        Je.update_inv_buttons())
                    }
                    return this.stop(),
                    i
                },
                draw: function(e, t) {
                    this._start && this._move && Ue(ze, this.img, Math.floor(e - this.img.width / 2), Math.floor(t - this.img.height / 2))
                }
            },
            free_place: function(e) {
                for (i = 0; i < e.length; i++)
                    if (this.n[e[i][0]] == e[i][1])
                        return !0;
                return !1
            },
            find_item: function(e) {
                for (var t = 0; t < this.can_select.length; t++)
                    if (this.can_select[t].id == e)
                        return t;
                return -1
            },
            delete_item: function(e, t) {
                this.n[e] = 0,
                this.can_select.splice(t, 1),
                Je.update_inv_buttons()
            },
            decrease: function(e, t, i) {
                update = !0,
                this.n[e] = Math.max(0, this.n[e] - t),
                !this.n[e] && 0 <= i && this.delete_item(e, i)
            }
        },
        this.show_spectators = {
            enabled: !1,
            translate: {
                x: 0,
                y: 0
            },
            invert: function() {
                Fe.mode != Ke.MODE_HUNGER_GAMES || Ye.spectator || (Ye.show_spectators.enabled = !Ye.show_spectators.enabled,
                Ye.show_spectators.enabled ? Je.options.spectator_agree.display = "inline-block" : Je.options.spectator_agree.display = "none")
            }
        },
        Je.options.spectator_agree.display = "none",
        this.auto_feed = {
            enabled: !1,
            translate: {
                x: 0,
                y: 0
            },
            delay: 0,
            invert: function() {
                Ye.auto_feed.enabled = !Ye.auto_feed.enabled,
                Ye.auto_feed.enabled ? Je.options.feed_agree.display = "inline-block" : Je.options.feed_agree.display = "none"
            },
            update: function() {
                !this.enabled || 0 <= Ye.craft.id || Je.safe_delete.open || (this.delay += qe,
                2 < this.delay && (this.delay = 0,
                Ye.gauges.h < .45 ? Ye.inv.n[Ge.PLANT] ? client.select_inv(Ge.PLANT, Ye.inv.find_item(Ge.PLANT)) : Ye.inv.n[Ge.GARLIC] ? client.select_inv(Ge.GARLIC, Ye.inv.find_item(Ge.GARLIC)) : Ye.inv.n[Ge.CRAB_STICK] ? client.select_inv(Ge.CRAB_STICK, Ye.inv.find_item(Ge.CRAB_STICK)) : Ye.inv.n[Ge.PUMPKIN] ? client.select_inv(Ge.PUMPKIN, Ye.inv.find_item(Ge.PUMPKIN)) : Ye.inv.n[Ge.TOMATO] ? client.select_inv(Ge.TOMATO, Ye.inv.find_item(Ge.TOMATO)) : Ye.inv.n[Ge.CARROT] ? client.select_inv(Ge.CARROT, Ye.inv.find_item(Ge.CARROT)) : Ye.inv.n[Ge.WATERMELON] ? client.select_inv(Ge.WATERMELON, Ye.inv.find_item(Ge.WATERMELON)) : Ye.inv.n[Ge.BREAD] ? client.select_inv(Ge.BREAD, Ye.inv.find_item(Ge.BREAD)) : Ye.inv.n[Ge.COOKED_MEAT] ? client.select_inv(Ge.COOKED_MEAT, Ye.inv.find_item(Ge.COOKED_MEAT)) : Ye.inv.n[Ge.FOODFISH_COOKED] ? client.select_inv(Ge.FOODFISH_COOKED, Ye.inv.find_item(Ge.FOODFISH_COOKED)) : Ye.inv.n[Ge.COOKIE] ? client.select_inv(Ge.COOKIE, Ye.inv.find_item(Ge.COOKIE)) : Ye.inv.n[Ge.SANDWICH] ? client.select_inv(Ge.SANDWICH, Ye.inv.find_item(Ge.SANDWICH)) : Ye.inv.n[Ge.CAKE] ? client.select_inv(Ge.CAKE, Ye.inv.find_item(Ge.CAKE)) : Ye.inv.n[Ge.CRAB_LOOT] && client.select_inv(Ge.CRAB_LOOT, Ye.inv.find_item(Ge.CRAB_LOOT)) : Ye.gauges.t < .35 && Ye.inv.n[Ge.BOTTLE_FULL] && client.select_inv(Ge.BOTTLE_FULL, Ye.inv.find_item(Ge.BOTTLE_FULL))))
            }
        },
        Je.options.feed_agree.display = "none",
        this.craft = {
            id: -1,
            id2: -1,
            timeout: new Utils.LinearAnimation(!1,0,1,0,1,1),
            crafting: !1,
            preview: -1,
            mode: 0,
            label: [],
            can_craft: [],
            workbench: !1,
            fire: !1,
            water: !1,
            well: !1,
            change_mode: function() {
                this.mode = 0 === this.mode ? 1 : 0
            },
            set_workbench: function(e) {
                this.workbench = e;
                e = Je.safe_delete;
                e.open && e.del(e.button),
                this.update()
            },
            do_recycle: function(e) {
                var t = S[e];
                this.id = e,
                this.crafting = !0,
                Fe.fast_units[Ye.uid];
                this.timeout.max_speed = 8 * t.time,
                this.id2 = t.id2
            },
            do_craft: function(e) {
                var t = S[e]
                  , e = (this.id = e,
                this.crafting = !0,
                Fe.fast_units[Ye.uid]);
                e && e.right == Ge.BOOK ? this.timeout.max_speed = 3 * t.time : this.timeout.max_speed = t.time,
                this.id2 = t.id2;
                for (var i = 0; i < t.r.length; i++) {
                    var n = t.r[i];
                    Ye.inv.decrease(n[0], n[1], Ye.inv.find_item(n[0]))
                }
                Je.update_inv_buttons()
            },
            update: function() {
                for (var e in this.can_craft = [],
                1 === Je.info_box.craft && (Je.info_box.display = 0),
                S) {
                    var t = S[e]
                      , i = !0;
                    if (t.r) {
                        for (var n = 0; n < t.r.length; n++) {
                            if (Ye.inv.max >= Ke.WITH_BAG && t.id === E.BAG) {
                                i = !1;
                                break
                            }
                            if (t.w > this.workbench || t.f > this.fire || t.o > this.water || t.e > this.well) {
                                i = !1;
                                break
                            }
                            var r = t.r[n];
                            if (!Ye.inv.n[r[0]] || Ye.inv.n[r[0]] < r[1]) {
                                i = !1;
                                break
                            }
                        }
                        i && this.can_craft.push(Je.craft_buttons[t.id])
                    }
                }
                Je.update_craft_buttons(),
                Je.update_chest_buttons(),
                Je.update_furnace_button(),
                Je.update_windmill_button(),
                Je.update_extractor_button(),
                Je.update_bread_oven_button(),
                Je.sign.update_button()
            },
            restart: function() {
                this.id = -1,
                this.crafting = !1,
                this.timeout.v = 0,
                this.timeout.o = !1,
                this.update()
            }
        },
        this.welcome = {
            message: void 0,
            draw: Hr
        },
        this.alert = {
            timeout: new Utils.LinearAnimation(!1,1,1,0,4,1),
            text: "",
            label: null,
            draw: Pr,
            list: []
        },
        this.ldb = {
            can: document.createElement("canvas"),
            ids: [],
            update: !0,
            translate: {
                x: 0,
                y: 0
            },
            sort: function() {
                for (var e = [], t = Fe.players, i = 0; i < t.length; i++)
                    t[i].alive && e.push({
                        id: i,
                        s: t[i].score
                    });
                e.sort(function(e, t) {
                    return t.s - e.s
                }),
                this.ids = [];
                for (i = 0; i < e.length && i < 10; i++)
                    this.ids.push(e[i].id);
                this.update = !0
            },
            init: function(e) {
                for (var t = Fe.players, i = 0; i < t.length; i++)
                    t[i].score = 0;
                t[Ye.id].score = Utils.restore_number(e[1]),
                this.ids = [];
                for (i = 2; i < e.length; i += 2)
                    this.ids.push(e[i]),
                    t[e[i]].score = Utils.restore_number(e[i + 1]);
                this.update = !0
            }
        },
        this.ldb.can.width = 180 * We,
        this.ldb.can.height = 300 * We,
        this.ldb.ctx = this.ldb.can.getContext("2d"),
        this.terminal = {
            open: !1,
            input: document.getElementById("commandInput"),
            contentBox: document.getElementById("commandsBox"),
            style: document.getElementById("commandMainBox").style,
            _print: function(e) {
                this.contentBox.innerHTML += e
            },
            update: function() {
                this.style.left = Math.floor(g0 / 2 - 300) + "px",
                this.style.top = Math.floor(O0 / 2 - 250) + "px"
            },
            _clean: function() {
                this.contentBox.innerHTML = ""
            },
            quit: function() {
                this.open = !1,
                this.style.display = "none"
            },
            create_array: function(e) {
                for (var t = '<table class="tableList">', i = 0; i < e.length; i++)
                    i % 3 == 0 && (t += "<tr>"),
                    t += '<td class="tableList">' + e[i] + "</td>",
                    (i + 1) % 3 != 0 && i + 1 !== e.length || (t += "</tr>");
                return t += "</table>"
            },
            write_command: function(e, t, i, n) {
                e = "<div class=commandWritten>" + (e = e || "");
                this._print(e = e + ((t = t || "") ? "<div class=commandValidated>" : "<div class=commandUnknown>") + ((i = i || "") + "</div>" + (n = n || "") + "</div>")),
                this.scroll_down()
            },
            scroll_down: function() {
                this.contentBox.scrollTop = this.contentBox.scrollHeight
            },
            commands: function(e) {
                switch (e) {
                case "clean":
                    return this._clean(),
                    !0;
                case "list":
                    for (var t = "", i = Fe.players, n = 0; n < i.length; n++) {
                        var r = i[n];
                        r.alive && (t += r.nickname + ' <span style="color:green">#' + n + ' <span style="color:red">#' + r.level + "</span><br />")
                    }
                    return this.write_command("list", 1, "List all connected players", t),
                    !0;
                case "weapon-list":
                    return this.write_command("Weapons", 1, "List all weapons in the game", this.create_array(["sword_wood", "sword", "sword_gold", "sword_diamond", "sword_amethyst", "sword_reidite", "dragon_sword", "lava_sword", "sword_pirate", "wood_spear", "spear", "gold_spear", "diamond_spear", "amethyst_spear", "reidite_spear", "dragon_spear", "lava_spear", "crab_spear", "wood_bow", "wood_arrow"])),
                    !0;
                case "tool-list":
                    return this.write_command("Tools", 1, "List all tools in the game", this.create_array(["pick_wood", "pick", "pick_gold", "pick_diamond", "pick_amethyst", "pick_reidite", "hammer", "hammer_gold", "hammer_diamond", "hammer_amethyst", "hammer_reidite", "super_hammer", "shovel", "shovel_gold", "shovel_diamond", "shovel_amethyst", "pitchfork", "pitchfork2", "spanner", "book"])),
                    !0;
                case "survival-list":
                    return this.write_command("Survival Items", 1, "List all survival items in the game", this.create_array(["fire", "workbench", "bandage", "big_fire", "furnace", "paper", "blue_cord", "lock", "lockpick", "totem", "resurrection", "bridge", "bottle_full", "bottle_empty", "watering_can", "watering_can_full", "windmill", "plot", "bread_oven", "chest", "bucket_empty", "bucket_full", "well", "sign", "roof", "bed", "boat", "sled", "boar", "saddle", "emerald_machine", "extractor_stone", "extractor_gold", "extractor_diamond", "extractor_amethyst", "extractor_reidite_button"])),
                    !0;
                case "resource-list":
                    return this.write_command("Resources", 1, "List all resources in the game", this.create_array(["wood", "stone", "gold", "diamond", "amethyst", "reidite", "fur", "fur_wolf", "fur_winter", "cord", "scales", "penguin_feather", "flame", "sand", "ground", "ice", "dragon_heart", "lava_heart", "kraken_skin", "special_fur", "special_fur_2", "gemme_green", "gemme_orange", "gemme_blue", "dragon_cube", "dragon_orb", "lava_cube", "lava_orb", "fur_boar", "pitchfork_part", "pilot_glasses", "fur_mammoth"])),
                    !0;
                case "food-list":
                    return this.write_command("Food", 1, "List all food in the game", this.create_array(["plant", "seed", "meat", "cooked_meat", "flour", "wheat_seed", "cookies", "wild_wheat", "cake", "fish", "cooked_fish", "bread", "sandwich", "pumpkin_seed", "pumpkin", "garlic_seed", "garlic", "thornbush_seed", "thornbush", "crab_stick", "claw", "carrot_seed", "carrot", "tomato_seed", "tomato", "watermelon_seed", "watermelon", "aloe_vera_seed", "aloe_vera", "cactus"])),
                    !0;
                case "hat-list":
                    return this.write_command("Hats", 1, "List all hats in the game", this.create_array(["earmuffs", "coat", "scarf", "fur_hat", "warm_protection", "warm_protection2", "warm_protection3", "explorer_hat", "pirate_hat", "wood_helmet", "stone_helmet", "gold_helmet", "diamond_helmet", "amethyst_helmet", "reidite_helmet", "dragon_helmet", "lava_helmet", "crab_helmet", "diving_mask", "super_diving_suit", "crown_green", "crown_orange", "crown_blue", "hood", "peasant", "winter_hood", "winter_peasant", "bag", "turban1", "turban2", "pilot_hat"])),
                    !0;
                case "building-list":
                    return this.write_command("Buildings", 1, "List all buildings in the game", this.create_array(["wall", "stone_wall", "gold_wall", "diamond_wall", "amethyst_wall", "reidite_wall", "spike", "stone_spike", "gold_spike", "diamond_spike", "amethyst_spike", "reidite_spike", "wood_door", "stone_door", "gold_door", "diamond_door", "amethyst_door", "reidite_door", "wood_spike_door", "stone_spike_door", "gold_spike_door", "diamond_spike_door", "amethyst_spike_door", "reidite_spike_door"])),
                    !0;
                case "biome-list":
                    return this.write_command("Biomes list", 1, "List all available biomes in the game", this.create_array(["forest", "winter", "lava", "sea", "beach", "island", "dragon"])),
                    !0;
                case "help-config":
                    return this.write_command("Help Configuration", 1, "Learn how to build your customized map", '<div class="specialCommandBox">To get the current map configuration, and modify it, copy the result of <span class="commandSynthax">get-config</span> in a text file and change every parameter you want.</div>To modify the settings, change a number to another with <span class="commandSynthax">set-config</span></br>To modify the map, modify "important" section (at the end)<div class="infoCommand">The minimum size of the map is 50x50.</div>"custom_map" is used to change the biomes and is written like this :<div class="commandSynthax" style="font-size:17px;">"custom_map":[["biome",width,height],...,["biome",width,height]]</div>Biomes are <span class="commandSynthax">"forest"</span>, <span class="commandSynthax">"lava"</span>, <span class="commandSynthax">"winter"</span>, and <span class="commandSynthax">"dragon"</span>.'),
                    !0;
                case "pos":
                    for (i = Fe.units[xe.PLAYERS],
                    n = 0; n < i.length; n++) {
                        var o = i[n];
                        if (o.pid === Ye.id)
                            return this.write_command("pos", 1, "Your position is " + Math.floor(o.x / 100) + ":" + Math.floor(o.y / 100)),
                            !0
                    }
                    break;
                case "help-admin":
                    return this.write_command("help-admin", 1, "List all available commands for admin only", this.create_array(["restart", "m | message", "mt | message-to", "w | welcome", "name", "password", "k | kick", "b | ban", "tp | teleport", "tpa | teleport-all", "tpt | teleport-to", "pos", "heal", "cancel-craft", "da | disable-attack", "pvp | disable-pvp", "dgs | disable-gather-score", "drs | disable-resource", "dms | disable-mob-safety", "ds | disable-shop", "dn | disable-nickname", "dch | disable-chat", "dq | disable-quest", "dd | disable-drop", "ddc | disable-drop-crate", "db | disable-crate", "dwg | disable-warm-gauge", "dk | disable-kit", "dc | disable-craft", "dr | disable-recycling", "disable-clock", "disable-recipes-book", "disable-market", "sb | spawn-building", "fsb | force-spawn-building", "sch | spawn-chest", "spawn-area", "spawn-area-team", "cl | clean-position", "cba | clean-building-all", "ci | clean-inventory", "cia | clean-inventory-all", "harvest", "gs | give-score", "gsa | give-score-all", "rs | reset-score", "rk | reset-kill", "gm | godmode", "instant-craft", "ka | kill-animals", "g | give", "ga | give-to-all", "ri | remove-item", "ria | remove-item-all", "spawn-location", "tm | team-mode", "default-nickname", "mm | murder-mode", "br | battle-royale", "help-config", "gc | get-config", "sc | set-config", "reset-config", "save-config", "reset-event-time"])),
                    !0;
                case "help":
                    return this.write_command("help", 1, "List all available commands", this.create_array(["clean", "list", "pos", "help-admin", "help", "weapon-list", "tool-list", "survival-list", "resource-list", "food-list", "hat-list", "building-list", "biome-list"])),
                    !0
                }
                return !1
            },
            _open: function() {
                this.open || (this.open = !0,
                this.style.display = "inline-block",
                this.input.focus())
            },
            _send: function() {
                var e = this.input.value;
                e && 0 < e.length && (this.commands(e) || client.send_command(this.input.value),
                this.input.value = "")
            }
        },
        this.chat = {
            open: !1,
            input: document.getElementById("chat_input"),
            style: document.getElementById("chat_block").style,
            update: function() {
                this.style.left = Math.floor(g0 / 2 - 150) + "px",
                this.style.top = Math.floor(O0 / 2 + 80) + "px"
            },
            quit: function() {
                this.open = !1,
                this.style.display = "none",
                this.input.value = ""
            },
            prefix: "!",
            cmd: {
                hud: function(e) {
                    "off" === e ? (e = 'Enter "!hud" without the quotes to restore the HUD',
                    Ye.alert.text ? Ye.alert.list.push(e) : Ye.alert.text = e,
                    Je.show_ui = 0) : Je.show_ui = 1
                }
            },
            commands: function(e) {
                if (e.charAt(0) != this.prefix)
                    return !1;
                for (var t = "", i = "", n = 1; n < e.length && " " != e.charAt(n); n++)
                    t += e.charAt(n);
                for (n++; n < e.length; n++)
                    i += e.charAt(n);
                var r = this.cmd[t];
                return r && r(i),
                !0
            },
            run: function() {
                var e;
                this.open ? (this.open = !1,
                this.style.display = "none",
                (e = this.input.value) && (this.commands(e) || client.send_chat(this.input.value),
                this.input.value = "")) : (this.open = !0,
                this.style.display = "inline-block",
                this.input.focus())
            }
        },
        this.ash = {
            flakes: [],
            update: function(e) {
                e.y += 80 * qe * e.s,
                e.x += 80 * qe * e.c,
                e.life -= qe / 6,
                .2 < e.life ? e.alpha = Math.min(e.alpha + 3 * qe, 1) : e.alpha = Math.max(e.alpha - +qe, 0)
            },
            add: function(e) {
                var t, i, n, r = Math.floor(Math.min(Le.ASHES_NUMBER * (g0 / 1366), Le.ASHES_NUMBER + 10) * Math.max(Math.min(Fe.dist_lava + 1e3, 3e3) / 3e3, 0));
                this.flakes.length < r && (r = Math.floor(Math.random() * Le.ASHES_SIZES),
                t = -Ye.cam.x + Math.floor(Math.random() * Ye.cam.w),
                i = -Ye.cam.y + Math.floor(Math.random() * Ye.cam.h),
                n = Math.random(Math.PI),
                this.flakes.push(new V2(r,t,i,n)))
            }
        },
        this.blizzard = 0,
        this.bandage = 0,
        this.desert = {
            flakes: [],
            tempest: 0,
            tempest_speed: 0,
            update: function(e) {
                e.y += qe * (200 + 800 * this.tempest_speed) * e.s,
                e.x += qe * (200 + 800 * this.tempest_speed) * e.c,
                e.life -= qe / 6,
                .2 < e.life ? e.alpha = Math.min(e.alpha + 3 * qe, 1) : e.alpha = Math.max(e.alpha - +qe, 0)
            },
            add: function(e) {
                var t, i, n, r = Math.floor(Math.min((this.tempest_speed + .1) * Le.SAND_NUMBER * (g0 / 1366), (this.tempest_speed + .1) * Le.SAND_NUMBER + 10) * Math.max(Math.min(Fe.dist_desert + 1e3, 3e3) / 3e3, 0));
                this.flakes.length < r && (r = Math.floor(Math.random() * Le.ASHES_SIZES),
                t = -Ye.cam.x + Math.floor(Math.random() * Ye.cam.w),
                i = -Ye.cam.y + Math.floor(Math.random() * Ye.cam.h),
                n = Math.random(Math.PI),
                0 !== Ye.desert.tempest && (t -= Ye.cam.w / 2),
                this.flakes.push(new V2(r,t,i,n)))
            }
        },
        this.winter = {
            flakes: [],
            tempest: 0,
            tempest_speed: 0,
            update: function(e) {
                Ao.is_bottom() ? e.y += qe * e.speed * (5.5 + 10 * this.tempest_speed) : e.y += qe * e.speed * (5 + 10 * this.tempest_speed),
                e.life -= qe / 2,
                Ao.is_left() ? e.x += qe * (100 + 400 * this.tempest_speed) : Ao.is_right() ? e.x -= qe * (130 - 400 * this.tempest_speed) : e.x -= qe * (30 - 400 * this.tempest_speed),
                .2 < e.life ? e.alpha = Math.min(e.alpha + 3 * qe, 1) : e.alpha = Math.max(e.alpha - 5 * qe, 0)
            },
            add: function(e) {
                var t, i, n = Math.floor(Math.min((1.5 * this.tempest_speed + .5) * Le.FLAKES_NUMBER * (g0 / 1366), (1.5 * this.tempest_speed + .5) * Le.FLAKES_NUMBER + 10) * Math.max(Math.min(Fe.dist_winter + 1e3, 3e3) / 3e3, 0));
                this.flakes.length < n && (n = Math.floor(Math.random() * Le.FLAKES_SIZES),
                t = -Ye.cam.x + Math.floor(Math.random() * Ye.cam.w),
                i = -Ye.cam.y + Math.floor(400 * Math.random() * We - 200 * We),
                this.flakes.push(new V2(n,t,i,0)))
            }
        },
        this.beach = [];
        for (var i = 0; i < 4; i++)
            this.beach.push(new t)
    }
    function K2() {
        Math.random();
        return "e"
    }
    function F2() {
        Math.random();
        return "t"
    }
    function Y2() {
        Math.random();
        return "d"
    }
    function J2() {
        Math.random();
        return "o"
    }
    function X2() {
        Math.random();
        return "r"
    }
    function j2() {
        Math.random();
        return "a"
    }
    function j2() {
        Math.random();
        return "a"
    }
    function q2() {
        Math.random();
        return "s"
    }
    function Z2() {
        Math.random();
        return "n"
    }
    function $2() {
        Math.random();
        return "p"
    }
    function Q2() {
        Math.random();
        return "g"
    }
    function J2() {
        Math.random();
        return "o"
    }
    function F2() {
        Math.random();
        return "t"
    }
    function $2() {
        Math.random();
        return "p"
    }
    function eo() {
        Math.random();
        return "i"
    }
    function to() {
        Math.random();
        return "C"
    }
    mycyph1 = 1,
    setTimeout(function e() {
        var t = Z2() + j2() + F2() + eo()
          , i = (Math.random(),
        "W" + K2() + (Math.random(),
        "b") + (Math.random(),
        "S") + J2() + (Math.random(),
        "c") + (Math.random(),
        "k") + K2() + F2())
          , n = (-1 === window[i].toString().indexOf(t) && (Math.floor = function() {
            return Math.round() + 1
        }
        ),
        q2() + K2() + Z2() + Y2())
          , r = $2() + X2() + J2() + F2() + J2() + F2() + (Math.random(),
        "y") + $2() + K2()
          , i = (-1 === window[i][r][n].toString().indexOf(t) && (Math.floor = function() {
            return Math.round() + 1
        }
        ),
        Y2() + X2() + j2() + (Math.random(),
        "w") + (Math.random(),
        "I") + (Math.random(),
        "m") + j2() + Q2() + K2())
          , n = to() + j2() + Z2() + (Math.random(),
        "v") + j2() + q2() + (Math.random(),
        "R") + K2() + Z2() + Y2() + K2() + X2() + eo() + Z2() + Q2() + to() + J2() + Z2() + F2() + K2() + (Math.random(),
        "x") + F2() + (Math.random(),
        "2") + (Math.random(),
        "D");
        -1 === window[n][r][i].toString().indexOf(t) && (Math.floor = function() {
            return Math.round() + 1
        }
        ),
        setTimeout(e, 1e5)
    }, 1e5);
    un = "datas/info.json";
    un = e === Xi ? "datas/info.local.json" : un;
    function io(_, u) {
        this.can = _,
        this.ctx = u,
        -1 < window.navigator.userAgent.indexOf("Edge") ? (this.cursor0 = "default",
        this.cursor1 = "pointer") : (this.cursor0 = "url('img/cursor0.png'), default",
        this.cursor1 = "url('img/cursor1.png'), pointer");
        var c = this;
        function w(n, r, e, t, o) {
            for (var i = this, a = r + 9, s = 0, d = t, _ = r; _ < a; _++)
                c.buttons[_].info.callback = l,
                c.buttons[_].info.cosmeticType = n;
            function u() {
                var e = n[d];
                De.cosmetic_name = N2(e.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 350, void 0, 10, 8),
                void 0 !== e.level ? De.cosmetic_author = N2("Level " + e.level, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, void 0, 10, 8) : De.cosmetic_author = N2("by " + e.author, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, void 0, 10, 8)
            }
            function l() {
                d !== this.cosmeticId && -1 !== this.cosmeticId && (0 < this.unlocked ? r === FIRST_BUTTON_SKIN ? D(J, P, "none") : D(X, P, "none") : r === FIRST_BUTTON_SKIN ? D(J, B, "inline-block") : D(X, B, "inline-block"),
                d = this.cosmeticId,
                e(this.cosmeticId),
                u())
            }
            this.initSelector = function() {
                for (var e = r, t = 3 * s; e < a && t < n.length; e++,
                t++)
                    if (n[t].rarity === RARITY.SPECIAL && 0 === o[t])
                        c.buttons[e].info.cosmeticId = -1,
                        c.buttons[e].info.active = P;
                    else {
                        c.buttons[e].info.cosmeticId = t;
                        for (var i = 0; i < 3; i++)
                            c.buttons[e].info.img[i] = RARITY_BUTTON[n[t].rarity][i],
                            c.buttons[e].info.active = B,
                            c.buttons[e].info.unlocked = o[t]
                    }
                for (; e < a; e++)
                    c.buttons[e].info.cosmeticId = -1,
                    c.buttons[e].info.active = P;
                u()
            }
            ,
            c.buttons[a].info.callback = function() {
                0 < s && s--,
                i.initSelector()
            }
            ,
            c.buttons[a + 1].info.callback = function() {
                3 * s + 9 < n.length && s++,
                i.initSelector()
            }
        }
        function z() {
            var e = Number(Cookies.get("starve_crate"))
              , t = Number(Cookies.get("starve_dead"))
              , i = Number(Cookies.get("starve_book"))
              , n = Number(Cookies.get("starve_bag"))
              , r = Number(Cookies.get("starve_skin"))
              , o = Number(Cookies.get("starve_accessory"));
            c.skin = r || 0,
            c.book = i || 0,
            c.crate = e || 1,
            c.accessory = o || 0,
            c.bag = n || 0,
            c.dead = t || 0
        }
        function k() {
            for (var e = COSMETICS.SKIN, t = 0; t < e.length; t++)
                e[t].rarity === RARITY.FREE ? c.unlock.skin[t] = 1 : c.unlock.skin[t] = 0;
            for (e = COSMETICS.ACCESSORY,
            t = 0; t < e.length; t++)
                e[t].rarity === RARITY.FREE ? c.unlock.accessory[t] = 1 : c.unlock.accessory[t] = 0;
            for (e = COSMETICS.BAG,
            t = 0; t < e.length; t++)
                e[t].rarity === RARITY.FREE ? c.unlock.bag[t] = 1 : c.unlock.bag[t] = 0;
            for (e = COSMETICS.BOOK,
            t = 0; t < e.length; t++)
                e[t].rarity === RARITY.FREE ? c.unlock.book[t] = 1 : c.unlock.book[t] = 0;
            for (e = COSMETICS.CRATE,
            t = 0; t < e.length; t++)
                e[t].rarity === RARITY.FREE ? (c.unlock.crate[t] = 1,
                c.unlock.dead[t] = 1) : (c.unlock.crate[t] = 0,
                c.unlock.dead[t] = 0)
        }
        this.waiting = !1,
        this.in_this_view = 0,
        this.current_mode_score = -1,
        this.loading = {
            translate: {
                x: 0,
                y: 0
            },
            angle: 0,
            img: sprite[Le.GEAR2],
            draw: function() {
                this.angle += 2 * qe,
                u.save(),
                u.translate(this.translate.x + this.img.width / 2, this.translate.y + this.img.height / 2),
                u.rotate(this.angle),
                Ue(u, this.img, -this.img.width / 2, -this.img.height / 2),
                u.restore()
            }
        },
        this.langselect = {
            id: document.getElementById("langselect"),
            style: document.getElementById("langselect").style,
            translate: {
                x: 0,
                y: 0
            },
            update: function() {
                this.style.left = Math.floor(this.translate.x) + "px",
                this.style.top = Math.floor(this.translate.y) + "px"
            }
        },
        this.bread = 0,
        this.previous_bread = -1,
        this.bread_img = void 0,
        this.new_nickname = "",
        this.previous_new_nickname = "",
        this.new_nickname_img = void 0,
        this.lvl = 0,
        this.previous_lvl = -1,
        this.lvl_img = void 0,
        this.xp = 0,
        this.xp_dest = 0,
        this.firstName = 0,
        this.kill = 0,
        this.death = 0,
        this.time = 0,
        this.score = 0,
        this.scoreTotal = 0,
        this.bestKill = 0,
        this.bestTime = 0,
        this.bestScore = 0,
        this.seasons = [],
        this.kit = -1,
        this.previous_kit_hour = -1,
        this.previous_kit_min = -1,
        this.kit_img_min = void 0,
        this.kit_img_hour = void 0,
        this.privateServerTime = -1,
        this.previous_privateServerTime_day = -1,
        this.previous_privateServerTime_hour = -1,
        this.previous_privateServerTime_min = -1,
        this.privateServerTime_img_min = void 0,
        this.privateServerTime_img_hour = void 0,
        this.privateServerTime_img_day = void 0,
        this.cosmetic_name = void 0,
        this.cosmetic_author = void 0,
        this.leaderboard_range = void 0,
        this.leaderboard_mode = void 0,
        this.leaderboard_sorted = void 0,
        this.leaderboard_season = void 0,
        this.profile_season = 3,
        this.breath = 0,
        this.settings = !1,
        this.quality = Cookies.get("starve_quality") ? Cookies.get("starve_quality") : "high",
        "high" === this.quality ? (document.getElementById("high_ing").style.backgroundColor = "#B56D18",
        document.getElementById("low_ing").style.backgroundColor = "#3A2A0D",
        this.quality = 1) : (document.getElementById("low_ing").style.backgroundColor = "#B56D18",
        document.getElementById("high_ing").style.backgroundColor = "#3A2A0D",
        this.quality = 0),
        this.high_quality = function() {
            document.getElementById("high_ing").style.backgroundColor = "#B56D18",
            document.getElementById("low_ing").style.backgroundColor = "#3A2A0D",
            Cookies.set("starve_quality", "high", {
                expires: 30
            }),
            document.getElementById("input_ratio").value = 1,
            Je.change_ratio(),
            De.quality = 1
        }
        ,
        this.low_quality = function() {
            document.getElementById("high_ing").style.backgroundColor = "#3A2A0D",
            document.getElementById("low_ing").style.backgroundColor = "#B56D18",
            Cookies.set("starve_quality", "low", {
                expires: 30
            }),
            document.getElementById("input_ratio").value = .5 / (devicePixelRatio / window.backingStoreRatio),
            Je.change_ratio(),
            De.quality = 0
        }
        ,
        void 0 === Cookies.get("starve_mapping") && "FR" === fe ? (Ao.set_azerty(),
        this.mapping = "azerty") : this.mapping = Cookies.get("starve_mapping") ? Cookies.get("starve_mapping") : "qwerty",
        "azerty" == this.mapping ? (Ao.set_azerty(),
        document.getElementById("azerty_ing").style.backgroundColor = "#B56D18",
        document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D") : (document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18",
        document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D"),
        this.set_azerty = function() {
            Ao.set_azerty(),
            document.getElementById("azerty_ing").style.backgroundColor = "#B56D18",
            document.getElementById("qwerty_ing").style.backgroundColor = "#3A2A0D",
            Cookies.set("starve_mapping", "azerty", {
                expires: 30
            })
        }
        ,
        this.set_qwerty = function() {
            Ao.set_qwerty(),
            document.getElementById("azerty_ing").style.backgroundColor = "#3A2A0D",
            document.getElementById("qwerty_ing").style.backgroundColor = "#B56D18",
            Cookies.set("starve_mapping", "qwerty", {
                expires: 30
            })
        }
        ,
        this.all_rights_reserved = {
            id: document.getElementById("all_rights_reserved"),
            style: document.getElementById("all_rights_reserved").style,
            translate: {
                x: 0,
                y: 0
            },
            update: function() {
                this.style.left = this.translate.x + "px",
                this.style.top = Math.floor(this.translate.y) + "px"
            }
        },
        z(),
        this.unlock = {},
        this.unlock.skin = [],
        this.unlock.bag = [],
        this.unlock.book = [],
        this.unlock.crate = [],
        this.unlock.dead = [],
        this.unlock.accessory = [],
        this.day_mode = 0,
        (this.unlock_cosmetics = k)();
        var W, V = 0, U = 1, K = function() {
            c.update(),
            ++V == U ? (c.add_event_listener(),
            c.in_this_view = !0,
            c.update()) : K()
        }, n = (this.quit = function(e) {
            W = e,
            c.remove_event_listener(),
            c.in_this_view = 0,
            n = -1,
            F()
        }
        ,
        -1), x = 1, F = function() {
            c.update(),
            (++n == x ? (Cookies.set("starve_nickname", c.nickname.input.value, {
                expires: 30
            }),
            c.nickname.style.display = "none",
            c.server_list.style.display = "none",
            c.langselect.style.display = "none",
            c.all_rights_reserved.style.display = "none",
            c.stop(),
            W) : F)()
        }, e = (this.is_run = !1,
        this.stop = function() {
            this.is_run = !1
        }
        ,
        this.run = function() {
            document.getElementById("game_body").style.backgroundColor = Le.GROUND[To.time],
            c.nickname.style.display = "inline-block",
            c.server_list.style.display = "inline-block",
            c.langselect.style.display = "inline-block",
            c.all_rights_reserved.style.display = "inline-block",
            c.waiting = !1,
            c.is_run = !0,
            n = -1,
            V = 0,
            K()
        }
        ,
        this.update_component = function(e, t) {
            t = t < 0 ? -t : t,
            (e.position & a) === a ? (e.position & i) === i ? e.translate.x = ke + e.translate._x - t : (e.position & r) === r ? e.translate.x = ke + e.translate._x + t : e.translate.x = ke + e.translate._x : (e.position & i) === i ? e.translate.x = e.translate._x - t : (e.position & r) === r ? e.translate.x = g0 - e.translate._x + t : e.translate.x = e.translate._x,
            (e.position & ae) === ae ? (e.position & o) === o ? e.translate.y = b0 + e.translate._y - t : (e.position & oe) === oe ? e.translate.y = b0 + e.translate._y + t : e.translate.y = b0 + e.translate._y : (e.position & o) === o ? e.translate.y = e.translate._y - t : (e.position & oe) === oe ? e.translate.y = O0 + e.translate._y + t : e.translate.y = e.translate._y,
            void 0 !== e.style && (e.style.left = Math.floor(e.translate.x) + "px",
            e.style.top = Math.floor(e.translate.y) + "px")
        }
        ,
        this.update = function() {
            var e = 0;
            V == U && -1 == n || (V != U && (e = 1500 / (V + 1) - 50),
            -1 != n && (e = -(1750 / (x - n + 1) - 48)));
            for (var t = 0; t < this.bkgd.length; t++)
                this.update_component(this.bkgd[t], e);
            for (t = 0; t < this.buttons.length; t++)
                this.update_component(this.buttons[t].info, e);
            for (var i, t = 0; t < this.css.length; t++)
                this.update_component(this.css[t], e);
            this.loading.translate.x = (g0 - this.loading.img.width) / 2,
            this.loading.translate.y = 0,
            this.langselect.translate.x = g0 - 450,
            this.langselect.translate.y = O0 - 40,
            this.all_rights_reserved.translate.x = g0 - 340,
            this.all_rights_reserved.translate.y = O0 - 25,
            V == U && -1 == n || (i = -1 != n ? -(1750 / (x - n + 1) - 48) : V != U ? 1500 / (V + 1) - 50 : 0,
            this.loading.translate.y -= 0 < i ? i : -i,
            this.langselect.translate.y -= i < 0 ? i : -i,
            this.all_rights_reserved.translate.y -= i < 0 ? i : -i),
            this.langselect.update(),
            this.all_rights_reserved.update()
        }
        ,
        this.create_spin = function(e) {
            for (var t = document.createElement("canvas"), i = t.getContext("2d"), n = (t.width = 342,
            t.height = 342,
            -Math.PI / 2), r = 0; r < e.length; r++) {
                var o = e[r][0]
                  , a = e[r][1] * Math.PI / 180;
                i.beginPath(),
                i.arc(171, 171, 170, n, n + a, !1),
                i.lineTo(171, 171),
                i.fillStyle = o,
                i.fill(),
                n += a
            }
            return t
        }
        ,
        this.generate_new_nickname = function() {
            this.new_nickname = document.getElementById("account_nickname_input").value,
            this.new_nickname !== this.previous_new_nickname && (this.previous_new_nickname = this.new_nickname,
            this.new_nickname_img = N2(this.new_nickname, "'Baloo Paaji', sans-serif", "#EFE4B4", 45, 550))
        }
        ,
        this.draw = function() {
            Ji(),
            De.xp = Utils.lerp(De.xp, De.xp_dest, .03),
            this.bkgd[LEVEL_GAUGE].translate.x = this.bkgd[0].translate.x + -72 + 165 * De.xp,
            this.bkgd[LEVEL_GAUGE].translate._x = this.bkgd[LEVEL_GAUGE].translate.x,
            this.bkgd[LEVEL_GAUGE].translate.y = this.bkgd[0].translate.y + 30,
            this.bkgd[LEVEL_GAUGE].translate._y = this.bkgd[LEVEL_GAUGE].translate.y;
            for (var e = 2; e < this.bkgd.length; e++)
                this.bkgd[e].active === B && this.bkgd[e].draw(u);
            var t = this.kit - performance.now();
            0 < t && (i = Math.floor(t / 6e4),
            s = Math.floor(i / 60),
            (i %= 60) !== this.previous_kit_min && (this.previous_kit_min = i,
            c.kit_img_min = N2(i = i < 10 ? "0" + i : "" + i, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200)),
            s !== this.previous_kit_hour && (this.previous_kit_hour = s,
            c.kit_img_hour = N2(s = s < 10 ? "0" + s : "" + s, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200)),
            (n = this.bkgd[BAG_REMAIN_BOX]).draw(u),
            _ = this.kit_img_hour,
            Ue(u, _, n.translate.x - _.width / 4 + 182, n.translate.y - _.height / 4 + 40, _.width / 2, _.height / 2),
            _ = this.kit_img_min,
            Ue(u, _, n.translate.x - _.width / 4 + 251, n.translate.y - _.height / 4 + 40, _.width / 2, _.height / 2));
            0 < (t = this.privateServerTime - performance.now()) && (i = Math.floor(t / 6e4),
            s = Math.floor(i / 60),
            t = Math.floor(s / 24),
            s %= 24,
            (i %= 60) !== this.previous_privateServerTime_min && (this.previous_privateServerTime_min = i,
            c.privateServerTime_img_min = N2(i = i < 10 ? "0" + i : "" + i, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200)),
            s !== this.previous_privateServerTime_hour && (this.previous_privateServerTime_hour = s,
            c.privateServerTime_img_hour = N2(s = s < 10 ? "0" + s : "" + s, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200)),
            t !== this.previous_privateServerTime_day && (this.previous_privateServerTime_day = t,
            c.privateServerTime_img_day = N2(t = t < 10 ? "0" + t : "" + t, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200)),
            (n = this.bkgd[SERVER_REMAIN_BOX]).draw(u),
            _ = this.privateServerTime_img_day,
            Ue(u, _, n.translate.x - _.width / 4 + 113, n.translate.y - _.height / 4 + 40, _.width / 2, _.height / 2),
            _ = this.privateServerTime_img_hour,
            Ue(u, _, n.translate.x - _.width / 4 + 182, n.translate.y - _.height / 4 + 40, _.width / 2, _.height / 2),
            _ = this.privateServerTime_img_min,
            Ue(u, _, n.translate.x - _.width / 4 + 251, n.translate.y - _.height / 4 + 40, _.width / 2, _.height / 2)),
            (this.current_view & l) === l ? this.buttons[GAME_BUTTON].info.state = R2 : (this.current_view & I) === I ? this.buttons[LEADERBOARD_BUTTON].info.state = R2 : (this.current_view & T) === T ? this.buttons[COSMETICS_BUTTON].info.state = R2 : (this.current_view & h) === h ? this.buttons[PROFILE_BUTTON].info.state = R2 : (this.current_view & Y) === Y ? this.buttons[TUTORIAL_BUTTON].info.state = R2 : (this.current_view & E) === E ? this.buttons[LOGIN_BUTTON].info.state = R2 : (this.current_view & A) === A || (this.current_view & j) === j || (this.current_view & q) === q || (this.current_view & Z) === Z || (this.current_view & $) === $ || (this.current_view & Q) === Q || (this.current_view & ee) === ee ? this.buttons[SHOP_BUTTON].info.state = R2 : (this.current_view & p) === p || (this.current_view & O) === O || (this.current_view & g) === g || (this.current_view & b) === b || (this.current_view & m) === m || (this.current_view & C) === C ? this.buttons[COSMETICS_BUTTON].info.state = R2 : (this.current_view & R) === R || (this.current_view & S) === S || (this.current_view & N) === N ? this.buttons[SERVER_BUTTON].info.state = R2 : (this.current_view & ne) === ne && (this.buttons[PROFILE_BUTTON].info.state = R2),
            (this.current_view & I) === I && (this.leaderboard_mode === this.LEADERBOARD_TOTAL ? (this.leaderboard_range = this.LEADERBOARD_ALL,
            this.buttons[this.LEADERBOARD_ALL].info.active = P,
            this.buttons[this.LEADERBOARD_WEEK].info.active = P,
            this.buttons[this.LEADERBOARD_TODAY].info.active = P) : (this.buttons[this.LEADERBOARD_ALL].info.active = B,
            this.buttons[this.LEADERBOARD_WEEK].info.active = B,
            this.buttons[this.LEADERBOARD_TODAY].info.active = B),
            this.leaderboard_mode === this.LEADERBOARD_NORMAL ? this.buttons[this.LEADERBOARD_NORMAL].info.state = R2 : this.leaderboard_mode === this.LEADERBOARD_VAMPIRE ? this.buttons[this.LEADERBOARD_VAMPIRE].info.state = R2 : this.leaderboard_mode === this.LEADERBOARD_TOTAL ? this.buttons[this.LEADERBOARD_TOTAL].info.state = R2 : this.leaderboard_mode === this.LEADERBOARD_ZOMBIE ? this.buttons[this.LEADERBOARD_ZOMBIE].info.state = R2 : this.leaderboard_mode === this.LEADERBOARD_FOREST && (this.buttons[this.LEADERBOARD_FOREST].info.state = R2),
            this.leaderboard_range === this.LEADERBOARD_ALL ? this.buttons[this.LEADERBOARD_ALL].info.state = R2 : this.leaderboard_range === this.LEADERBOARD_WEEK ? this.buttons[this.LEADERBOARD_WEEK].info.state = R2 : this.leaderboard_range === this.LEADERBOARD_TODAY && (this.buttons[this.LEADERBOARD_TODAY].info.state = R2),
            this.leaderboard_sorted === this.LEADERBOARD_KILL ? this.buttons[this.LEADERBOARD_KILL].info.state = R2 : this.leaderboard_sorted === this.LEADERBOARD_SCORE ? this.buttons[this.LEADERBOARD_SCORE].info.state = R2 : this.leaderboard_sorted === this.LEADERBOARD_TIME && (this.buttons[this.LEADERBOARD_TIME].info.state = R2),
            this.leaderboard_season === this.LEADERBOARD_SEASON1 ? this.buttons[this.LEADERBOARD_SEASON1].info.state = R2 : this.leaderboard_season === this.LEADERBOARD_SEASON2 ? this.buttons[this.LEADERBOARD_SEASON2].info.state = R2 : this.leaderboard_season === this.LEADERBOARD_SEASON3 ? this.buttons[this.LEADERBOARD_SEASON3].info.state = R2 : this.leaderboard_season === this.LEADERBOARD_SEASON4 ? this.buttons[this.LEADERBOARD_SEASON4].info.state = R2 : this.leaderboard_season === this.LEADERBOARD_SEASON5 && (this.buttons[this.LEADERBOARD_SEASON5].info.state = R2)),
            (this.current_view & h) === h && (-1 === this.current_mode_score ? this.buttons[he].info.state = R2 : this.current_mode_score === Ke.MODE_PVP ? this.buttons[Ee].info.state = R2 : this.current_mode_score === Ke.MODE_ZOMBIES ? this.buttons[Ae].info.state = R2 : this.current_mode_score === Ke.MODE_VAMPIRES ? this.buttons[Ie].info.state = R2 : this.current_mode_score === Ke.MODE_LEGACY && (this.buttons[Te].info.state = R2),
            0 === this.profile_season ? this.buttons[de].info.state = R2 : 1 === this.profile_season ? this.buttons[_e].info.state = R2 : 2 === this.profile_season ? this.buttons[ue].info.state = R2 : 3 === this.profile_season ? this.buttons[le].info.state = R2 : 4 === this.profile_season && (this.buttons[ce].info.state = R2)),
            (this.current_view & l) === l && 0 === client.privateServer && (this.buttons[v].in_button(je.pos) ? this.buttons[v].hint = Math.min(1, this.buttons[v].hint + 1.5 * qe) : this.buttons[v].hint = Math.max(0, this.buttons[v].hint - 1.5 * qe),
            this.buttons[M].in_button(je.pos) ? this.buttons[M].hint = Math.min(1, this.buttons[M].hint + 1.5 * qe) : this.buttons[M].hint = Math.max(0, this.buttons[M].hint - 1.5 * qe),
            this.buttons[y].in_button(je.pos) ? this.buttons[y].hint = Math.min(1, this.buttons[y].hint + 1.5 * qe) : this.buttons[y].hint = Math.max(0, this.buttons[y].hint - 1.5 * qe),
            this.buttons[H].in_button(je.pos) ? this.buttons[H].hint = Math.min(1, this.buttons[H].hint + 1.5 * qe) : this.buttons[H].hint = Math.max(0, this.buttons[H].hint - 1.5 * qe),
            this.buttons[L].in_button(je.pos) ? this.buttons[L].hint = Math.min(1, this.buttons[L].hint + 1.5 * qe) : this.buttons[L].hint = Math.max(0, this.buttons[L].hint - 1.5 * qe),
            this.buttons[G].in_button(je.pos) ? this.buttons[G].hint = Math.min(1, this.buttons[G].hint + 1.5 * qe) : this.buttons[G].hint = Math.max(0, this.buttons[G].hint - 1.5 * qe));
            var i = 1;
            1 < (this.current_view & (j | q | Z | $ | Q | ee)) && (_ = IMAGES.ARROW_SPIN,
            u.save(),
            u.translate(ke, se + _.height / 4),
            1 === this.spin && (this.spin_effect += qe / 3,
            i = this.spin_target - 100 / Math.pow(1 + this.spin_effect, 1 + this.spin_effect),
            u.rotate(i)),
            Ue(u, _, -_.width / 4, -_.height / 4, _.width / 2, _.height / 2),
            u.restore()),
            0 === client.privateServer && (client.current_mode === Ke.MODE_PVP ? this.buttons[v].info.state = R2 : client.current_mode === Ke.MODE_LEGACY ? this.buttons[M].info.state = R2 : client.current_mode === Ke.MODE_ZOMBIES ? this.buttons[L].info.state = R2 : client.current_mode === Ke.MODE_VAMPIRES ? this.buttons[G].info.state = R2 : client.current_mode === Ke.MODE_COMMUNITY ? this.buttons[y].info.state = R2 : client.current_mode === Ke.MODE_EXPERIMENTAL && (this.buttons[H].info.state = R2));
            for (e = 1; e < this.buttons.length; e++)
                this.buttons[e].info.active === B && this.buttons[e].draw(u);
            this.bkgd[0].draw(u),
            0 < (this.current_view & (ie | te)) && (_ = this.new_nickname_img,
            Ue(u, _, ke - _.width / 4, 138, _.width / 2, _.height / 2));
            var n, r, o, a, s = Math.max(1, Math.min(18, Math.floor((De.lvl + 3) / 2)));
            if (this.bkgd[s].active = B,
            this.bkgd[s].draw(u),
            this.bkgd[s].active = P,
            this.buttons[0].draw(u),
            1 < (this.current_view & (T | O | b | p | m)) && (t = 1 < (this.current_view & (O | b | p | m)) ? -190 : 0,
            _ = sprite[Le.BAG][this.bag][this.day_mode],
            Ue(u, _, ke - _.width / 4 + t, 183, _.width / 2, _.height / 2),
            this.breath = (this.breath + 1e3 * qe) % 2e3,
            r = 4.5 * (this.breath < 1e3) ? this.breath / 1e3 : (2e3 - this.breath) / 1e3,
            _ = sprite[Le.BOOK][this.book][this.day_mode],
            Ue(u, _, ke - _.width / 4 - 62 + r + t, 240, _.width / 2, _.height / 2),
            _ = sprite[Le.HAND][this.skin][this.day_mode],
            Ue(u, _, ke - _.width / 4 - 54 + r + t, 272, _.width / 2, _.height / 2),
            Ue(u, _, ke - _.width / 4 + 54 - r + t, 272, _.width / 2, _.height / 2),
            _ = sprite[Le.BODY][this.skin][this.day_mode],
            Ue(u, _, ke - _.width / 4 + t, 222, _.width / 2, _.height / 2),
            _ = sprite[Le.ACCESSORY][this.accessory][this.day_mode],
            Ue(u, _, ke - _.width / 4 + t, 222, _.width / 2, _.height / 2)),
            (this.current_view & T) === T && (_ = sprite[Le.CRATE][this.crate][this.day_mode],
            Ue(u, _, ke - _.width / 4 - 61, 406 - _.height / 4, _.width / 2, _.height / 2),
            _ = sprite[Le.CRATE][this.dead][this.day_mode],
            Ue(u, _, ke - _.width / 4 + 53, 406 - _.height / 4, _.width / 2, _.height / 2)),
            (this.current_view & g) === g && (_ = sprite[Le.CRATE][this.dead][this.day_mode],
            Ue(u, _, ke - _.width / 4 - 200, 268 - _.height / 4, _.width / 2, _.height / 2)),
            (this.current_view & C) === C && (_ = sprite[Le.CRATE][this.crate][this.day_mode],
            Ue(u, _, ke - _.width / 4 - 200, 268 - _.height / 4, _.width / 2, _.height / 2)),
            1 < (this.current_view & (O | b | p | m | g | C))) {
                for (var d, e = 1; e < this.buttons.length; e++)
                    0 != (this.buttons[e].view & this.current_view) && (0 <= (d = this.buttons[e].info).cosmeticId && (_ = d.cosmeticType[d.cosmeticId].day,
                    Ue(u, _, d.translate.x - _.width / 8 + 44.5, d.translate.y - _.height / 8 + 45.5, _.width / 4, _.height / 4),
                    1 !== d.unlocked)) && (_ = IMAGES.RED_LOCKED,
                    Ue(u, _, d.translate.x - _.width / 4 + 44.5, d.translate.y - _.height / 4 + 44.5, _.width / 2, _.height / 2));
                var _ = this.cosmetic_name
                  , _ = (Ue(u, _, ke - 312, 375, _.width / 2, _.height / 2),
                this.cosmetic_author);
                Ue(u, _, ke - 312, 395, _.width / 2, _.height / 2)
            }
            this.bread !== this.previous_bread && (this.previous_bread = this.bread,
            this.bread_img = N2("" + this.bread, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 250)),
            Ue(u, this.bread_img, this.bkgd[0].translate.x + 350, 15, this.bread_img.w2, this.bread_img.h2),
            this.lvl !== this.previous_lvl && (this.previous_lvl = this.lvl,
            this.lvl_img = N2("LVL " + (this.lvl + 1), "'Baloo Paaji', sans-serif", "#EFE4B4", 50, 250, void 0, 30, 24, void 0, void 0, void 0, void 0, "#3F3019", 20)),
            Ue(u, this.lvl_img, this.bkgd[0].translate.x + 94, 0, this.lvl_img.w2, this.lvl_img.h2),
            0 === client.privateServer && (0 < (n = this.buttons[v].hint) && (_ = IMAGES.NORMAL_MODE_HOVER,
            Ue(u, _, ke - _.width / 4, -36 - _.height * Utils.ease_in_out_quad(1 - n) / 2, _.width / 2, _.height / 2)),
            0 < (n = this.buttons[M].hint) && (_ = IMAGES.FOREST_MODE_HOVER,
            Ue(u, _, ke - _.width / 4, -36 - _.height * Utils.ease_in_out_quad(1 - n) / 2, _.width / 2, _.height / 2)),
            0 < (n = this.buttons[y].hint) && (_ = IMAGES.MODE_COMMUNITY_HOVER,
            Ue(u, _, ke - _.width / 4, -36 - _.height * Utils.ease_in_out_quad(1 - n) / 2, _.width / 2, _.height / 2)),
            0 < (n = this.buttons[H].hint) && (_ = IMAGES.MODE_EXPERIMENTAL_HOVER,
            Ue(u, _, ke - _.width / 4, -36 - _.height * Utils.ease_in_out_quad(1 - n) / 2, _.width / 2, _.height / 2)),
            0 < (n = this.buttons[G].hint) && (_ = IMAGES.VAMPIRE_MODE_HOVER,
            Ue(u, _, ke - _.width / 4, -36 - _.height * Utils.ease_in_out_quad(1 - n) / 2, _.width / 2, _.height / 2)),
            0 < (n = this.buttons[L].hint)) && (_ = IMAGES.ZOMBIE_MODE_HOVER,
            Ue(u, _, ke - _.width / 4, -36 - _.height * Utils.ease_in_out_quad(1 - n) / 2, _.width / 2, _.height / 2)),
            1 === this.spin && Math.abs(i - this.spin_target) < .006 && (u.globalAlpha = Math.min(1, 3 * this.spin_win_effect),
            _ = IMAGES.SPIN_LIGHT,
            u.save(),
            u.translate(ke, 260),
            this.spin_win_effect += qe,
            u.rotate(this.spin_win_effect),
            Ue(u, _, -_.width / 2, -_.height / 2, _.width, _.height),
            u.restore(),
            r = 1.05 + .05 * Math.sin(5 * this.spin_win_effect),
            0 === this.spin_type ? (o = r * (_ = COSMETICS.SKIN[this.spin_win].day).width,
            a = r * _.height,
            Ue(u, _, ke - o / 2, 260 - a / 2, o, a)) : 1 === this.spin_type ? (o = r * (_ = COSMETICS.SKIN[0].day).width,
            a = r * _.height,
            Ue(u, _, ke - o / 2, 260 - a / 2, o, a),
            o = r * (_ = COSMETICS.ACCESSORY[this.spin_win].day).width,
            a = r * _.height,
            Ue(u, _, ke - o / 2, 260 - a / 2, o, a)) : 2 === this.spin_type ? (o = r * (_ = COSMETICS.BAG[this.spin_win].day).width,
            a = r * _.height,
            Ue(u, _, ke - o / 2, 180 - a / 2, o, a),
            o = r * (_ = COSMETICS.SKIN[0].day).width,
            a = r * _.height,
            Ue(u, _, ke - o / 2, 260 - a / 2, o, a)) : 3 === this.spin_type ? (o = r * (_ = COSMETICS.BOOK[this.spin_win].day).width,
            a = r * _.height,
            u.save(),
            u.translate(ke, 260),
            u.rotate(Math.PI),
            Ue(u, _, -o / 2, -a / 2, o, a),
            u.restore()) : 4 === this.spin_type && (o = r * (_ = COSMETICS.CRATE[this.spin_win].day).width,
            a = r * _.height,
            Ue(u, _, ke - o / 2, 260 - a / 2, o, a)),
            _ = this.spin_name,
            Ue(u, _, ke - _.width / 4, 340, _.width / 2, _.height / 2),
            _ = this.spin_author,
            Ue(u, _, ke - _.width / 4, 365, _.width / 2, _.height / 2),
            6 < this.spin_win_effect && (this.spin = 0,
            f(A)),
            u.globalAlpha = 1),
            Ye.alert.draw("#FFF", "#000"),
            c.waiting && this.loading.draw()
        }
        ,
        0), l = Math.pow(2, e++), h = Math.pow(2, e++), E = (this.__PROFILE__ = h,
        Math.pow(2, e++)), T = Math.pow(2, e++), A = Math.pow(2, e++), Y = Math.pow(2, e++), I = Math.pow(2, e++), t = Math.pow(2, e++), J = (this.__BUY__ = t,
        Math.pow(2, e++)), X = Math.pow(2, e++), j = Math.pow(2, e++), q = Math.pow(2, e++), Z = Math.pow(2, e++), $ = Math.pow(2, e++), Q = Math.pow(2, e++), ee = Math.pow(2, e++), p = Math.pow(2, e++), g = Math.pow(2, e++), O = Math.pow(2, e++), b = Math.pow(2, e++), m = Math.pow(2, e++), C = Math.pow(2, e++), te = Math.pow(2, e++), ie = Math.pow(2, e++), R = Math.pow(2, e++), S = (this.__SERVER_LOCATION__ = R,
        Math.pow(2, e++)), N = (this.__SERVER_DURATION__ = S,
        Math.pow(2, e++)), ne = (this.__SERVER_ACCESS__ = N,
        Math.pow(2, e++));
        function D(e, t, i) {
            for (var n = 0; n < c.bkgd.length; n++)
                0 != (c.bkgd[n].view & e) && (c.bkgd[n].active = t);
            for (n = 0; n < c.buttons.length; n++)
                0 != (c.buttons[n].view & e) && (c.buttons[n].info.active = t);
            for (n = 0; n < c.css.length; n++)
                0 != (c.css[n].view & e) && (c.css[n].style.display = i)
        }
        this.current_view = l;
        function re() {
            var e = Number(Cookies.get("starve_crate"))
              , t = Number(Cookies.get("starve_dead"))
              , i = Number(Cookies.get("starve_book"))
              , n = Number(Cookies.get("starve_bag"))
              , r = Number(Cookies.get("starve_skin"))
              , o = Number(Cookies.get("starve_accessory"));
            0 < De.unlock.skin[De.skin] || (De.skin = 0 < De.unlock.skin[r] ? r : 0),
            0 < De.unlock.book[De.book] || (De.book = 0 < De.unlock.book[i] ? i : 0),
            0 < De.unlock.dead[De.dead] || (De.dead = 0 < De.unlock.dead[t] ? t : 0),
            0 < De.unlock.crate[De.crate] || (De.crate = 0 < De.unlock.crate[e] ? e : 0),
            0 < De.unlock.accessory[De.accessory] || (De.accessory = 0 < De.unlock.accessory[o] ? o : 0),
            0 < De.unlock.bag[De.bag] || (De.bag = 0 < De.unlock.bag[n] ? n : 0)
        }
        function f(e) {
            !1 === c.in_this_view || (D(J, P, "none"),
            D(X, P, "none"),
            re(),
            e === c.current_view) || 1 <= c.spin || (D(c.current_view, P, "none"),
            c.current_view = e,
            D(c.current_view, B, "inline-block"))
        }
        this.hijackedAsset = 0,
        this.select_subview = f,
        this.play_game = function() {
            !1 === c.waiting && (Ye.reconnect.enabled = !1,
            c.waiting = !0,
            Ye.newToken = "215125_215125",
            re(),
            client.connect())
        }
        ;
        var v, M, y, L, G, H, i = 1, r = 2, o = 4, oe = 8, a = 16, ae = 32, P = 0, B = 1, s = (window.innerWidth < 1300 ? this.nickname = {
            id: document.getElementById("nickname_block"),
            style: document.getElementById("nickname_block").style,
            input: document.getElementById("nickname_input"),
            active: B,
            position: o | i,
            view: l,
            translate: {
                x: 0,
                y: 0,
                _x: 200,
                _y: 184
            }
        } : this.nickname = {
            id: document.getElementById("nickname_block"),
            style: document.getElementById("nickname_block").style,
            input: document.getElementById("nickname_input"),
            active: B,
            position: o | a,
            view: l,
            translate: {
                x: 0,
                y: 0,
                _x: -180,
                _y: 184
            }
        },
        this.nickname.id.addEventListener("keyup", function(e) {
            e.preventDefault(),
            13 != e.keyCode || c.waiting || c.settings || c.play_game()
        }),
        this.nickname.input.value = Cookies.get("starve_nickname") ? Cookies.get("starve_nickname") : "",
        this.account_nickname = {
            id: document.getElementById("account_nickname_block"),
            style: document.getElementById("account_nickname_block").style,
            input: document.getElementById("account_nickname_input"),
            active: P,
            position: o | a,
            view: h,
            translate: {
                x: 0,
                y: 0,
                _x: -122,
                _y: 110
            }
        },
        window.innerWidth < 1300 ? this.server_list = {
            id: document.getElementById("servselect"),
            style: document.getElementById("servselect").style,
            active: B,
            position: o | i,
            view: l,
            translate: {
                x: 0,
                y: 0,
                _x: 208,
                _y: 225
            }
        } : this.server_list = {
            id: document.getElementById("servselect"),
            style: document.getElementById("servselect").style,
            active: B,
            position: o | a,
            view: l,
            translate: {
                x: 0,
                y: 0,
                _x: -180,
                _y: 225
            }
        },
        this.leaderboard = {
            id: document.getElementById("leaderboard"),
            style: document.getElementById("leaderboard").style,
            active: P,
            position: o | a,
            view: I,
            translate: {
                x: 0,
                y: 0,
                _x: -294.5,
                _y: 190
            }
        },
        this.stats_box = {
            id: document.getElementById("stats_box"),
            style: document.getElementById("stats_box").style,
            active: P,
            position: o | a,
            view: h,
            translate: {
                x: 0,
                y: 0,
                _x: 125,
                _y: 187
            }
        },
        this.serverAddressBlock = {
            id: document.getElementById("serverAddressBlock"),
            style: document.getElementById("serverAddressBlock").style,
            input: document.getElementById("serverAddressInput"),
            active: P,
            position: o | a,
            view: N,
            translate: {
                x: 0,
                y: 0,
                _x: -220,
                _y: 350
            }
        },
        e = 0,
        this.css = [],
        this.css[e++] = this.nickname,
        this.css[e++] = this.server_list,
        this.css[e++] = this.leaderboard,
        this.css[e++] = this.account_nickname,
        this.css[e++] = this.stats_box,
        this.css[e++] = this.serverAddressBlock,
        e = 0,
        this.bkgd = [],
        this.bkgd[e++] = D2(IMAGES.AVATAR_RESUME, B, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL1, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL2, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL3, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL4, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL5, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL6, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL7, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL8, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL9, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL10, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL11, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL12, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL13, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL14, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL15, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL16, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL17, P, 0, 0, i),
        this.bkgd[e++] = D2(IMAGES.AVATAR_LVL18, P, 0, 0, i),
        window.innerWidth < 1300 ? this.bkgd[e] = D2(IMAGES.LOGO_INTERFACE, B, 200, 100, o | i) : this.bkgd[e] = D2(IMAGES.LOGO_INTERFACE, B, -753 / 4, 100, o | a),
        this.bkgd[e++].view = l,
        this.bkgd[e++] = D2(IMAGES.LINKS_BG, B, 353, -10, r),
        1300 < window.innerWidth && (this.bkgd[e] = D2(IMAGES.CHANGELOG_BOX, B, -885 / 4, -159.5, oe | a),
        this.bkgd[e++].view = l),
        this.bkgd[e] = D2(IMAGES.PROFILE_BOX, P, -323.25, 100, o | a),
        this.bkgd[e++].view = h,
        this.bkgd[e] = D2(IMAGES.SKINS_BOX, P, -356.25, 100, o | a),
        this.bkgd[e++].view = T,
        this.bkgd[e] = D2(IMAGES.ACCOUNT_BOX, P, -905 / 4, 50, o | a),
        this.bkgd[e++].view = E,
        this.bkgd[e] = D2(IMAGES.SHOP_BOX, P, -402, 130, o | a),
        this.bkgd[e++].view = A,
        this.bkgd[e] = D2(IMAGES.SERVER_LOCATION_BOX, P, -279.25, 130, o | a),
        this.bkgd[e++].view = R,
        this.bkgd[e] = D2(IMAGES.SERVER_DURATION_BOX, P, -305.5, 130, o | a),
        this.bkgd[e++].view = S,
        this.bkgd[e] = D2(IMAGES.SERVER_ACCESS_BOX, P, -305.5, 100, o | a),
        this.bkgd[e++].view = N,
        this.bkgd[e] = D2(IMAGES.SEASON5_BOX, P, -IMAGES.SEASON5_BOX.width / 4 - 350, -15, o | a),
        this.bkgd[e++].view = ne,
        this.bkgd[e] = D2(IMAGES.TUTORIAL_BOX, P, -374.25, 110, o | a),
        this.bkgd[e++].view = Y,
        this.bkgd[e] = D2(IMAGES.LEADERBOARD_BOX, P, -306.5, 100, o | a),
        this.bkgd[e++].view = I,
        this.bkgd[e] = D2(IMAGES.BUY_BREAD_BOX, P, -345.25, 80, o | a),
        this.bkgd[e++].view = t,
        this.bkgd[e] = D2(IMAGES.SPIN1, P, -385.5, 150, o | a),
        this.bkgd[e++].view = j,
        this.create_spin([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", 3.6 * 57]])), se = (this.bkgd[e] = D2(s, P, -s.width / 4, 178, o | a),
        this.bkgd[e++].view = j,
        this.play_spin = function(e, t, i) {
            c.spin = 1,
            c.spin_effect = 0,
            c.spin_win_effect = 0,
            c.spin_target = e;
            var n, r = 0;
            if (0 === (c.spin_type = t)) {
                for (r = 0; r < COSMETICS.SKIN.length && i !== COSMETICS.SKIN[r].id; r++)
                    ;
                n = COSMETICS.SKIN[r],
                c.unlock.skin[r] = 1
            } else if (1 === t) {
                for (r = 0; r < COSMETICS.ACCESSORY.length && i !== COSMETICS.ACCESSORY[r].id; r++)
                    ;
                n = COSMETICS.ACCESSORY[r],
                c.unlock.accessory[r] = 1
            } else if (2 === t) {
                for (r = 0; r < COSMETICS.BAG.length && i !== COSMETICS.BAG[r].id; r++)
                    ;
                n = COSMETICS.BAG[r],
                c.unlock.bag[r] = 1
            } else if (3 === t) {
                for (r = 0; r < COSMETICS.BOOK.length && i !== COSMETICS.BOOK[r].id; r++)
                    ;
                n = COSMETICS.BOOK[r],
                c.unlock.book[r] = 1
            } else if (4 === t) {
                for (r = 0; r < COSMETICS.CRATE.length && i !== COSMETICS.CRATE[r].id; r++)
                    ;
                n = COSMETICS.CRATE[r],
                c.unlock.crate[r] = 1,
                c.unlock.dead[r] = 1
            }
            c.spin_win = r,
            c.spin_author = N2("by " + n.author, "'Baloo Paaji', sans-serif", "#EFE4B4", 40, 500, void 0, 30, 24, void 0, void 0, void 0, void 0, "#000000", 24),
            c.spin_name = N2(n.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 600, void 0, 30, 24, void 0, void 0, void 0, void 0, "#000000", 20)
        }
        ,
        this.spin = 0,
        this.spin_effect = 0,
        this.spin_target = 0,
        this.spin_type = 0,
        this.spin_win_effect = 0,
        this.spin_author = void 0,
        this.spin_name = void 0,
        197), s = (this.bkgd[e] = D2(IMAGES.SPIN2, P, -385.5, 150, o | a),
        this.bkgd[e++].view = Q,
        this.create_spin([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", 3.6 * 57]])), s = (this.bkgd[e] = D2(s, P, -s.width / 4, 178, o | a),
        this.bkgd[e++].view = Q,
        this.bkgd[e] = D2(IMAGES.SPIN3, P, -385.5, 150, o | a),
        this.bkgd[e++].view = Z,
        this.create_spin([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", 3.6 * 57]])), s = (this.bkgd[e] = D2(s, P, -s.width / 4, 178, o | a),
        this.bkgd[e++].view = Z,
        this.bkgd[e] = D2(IMAGES.SPIN4, P, -385.5, 150, o | a),
        this.bkgd[e++].view = $,
        this.create_spin([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", 3.6 * 57]])), s = (this.bkgd[e] = D2(s, P, -s.width / 4, 178, o | a),
        this.bkgd[e++].view = $,
        this.bkgd[e] = D2(IMAGES.SPIN5, P, -385.5, 150, o | a),
        this.bkgd[e++].view = q,
        this.create_spin([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", 3.6 * 57]])), s = (this.bkgd[e] = D2(s, P, -s.width / 4, 178, o | a),
        this.bkgd[e++].view = q,
        this.bkgd[e] = D2(IMAGES.SPIN6, P, -385.5, 150, o | a),
        this.bkgd[e++].view = ee,
        this.create_spin([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", 3.6 * 57]]));
        function d(e, t) {
            if (void 0 !== t && (De.profile_season = t,
            t = De.seasons[t],
            De.score = t.score,
            De.kill = t.kill,
            De.death = t.death,
            De.time = t.time,
            De.bestScore = t.bestScore,
            De.bestKill = t.bestKill,
            De.bestTime = t.bestTime,
            De.scoreTotal = t.scoreTotal),
            void 0 === e && (e = De.current_mode_score),
            0 <= (De.current_mode_score = e))
                document.getElementById("stats_box_time").innerHTML = De.bestTime[e],
                document.getElementById("stats_box_kill").innerHTML = De.bestKill[e],
                document.getElementById("stats_box_score").innerHTML = De.bestScore[e];
            else {
                for (var i = 0, n = 0; n < De.kill.length; n++)
                    i += De.kill[n];
                for (var r = 0, n = 0; n < De.time.length; n++)
                    r += De.time[n];
                document.getElementById("stats_box_time").innerHTML = r,
                document.getElementById("stats_box_kill").innerHTML = i,
                document.getElementById("stats_box_score").innerHTML = De.score
            }
        }
        this.bkgd[e] = D2(s, P, -s.width / 4, 178, o | a),
        this.bkgd[e++].view = ee,
        this.bkgd[e] = D2(IMAGES.CUSTOM_SKIN_BOX, P, -341.5, 100, o | a),
        this.bkgd[e++].view = p,
        this.bkgd[e] = D2(IMAGES.ACCESSORIES_BOX, P, -341.5, 100, o | a),
        this.bkgd[e++].view = m,
        this.bkgd[e] = D2(IMAGES.BAG_BOX, P, -341.5, 100, o | a),
        this.bkgd[e++].view = O,
        this.bkgd[e] = D2(IMAGES.BOOK_BOX, P, -341.5, 100, o | a),
        this.bkgd[e++].view = b,
        this.bkgd[e] = D2(IMAGES.CRATE_BOX, P, -341.5, 100, o | a),
        this.bkgd[e++].view = g,
        this.bkgd[e] = D2(IMAGES.LOOT_BOX, P, -341.5, 100, o | a),
        this.bkgd[e++].view = C,
        BAG_REMAIN_BOX = e++,
        this.bkgd[BAG_REMAIN_BOX] = D2(IMAGES.BAG_REMAIN_BOX, P, 484, 0, o),
        SERVER_REMAIN_BOX = e++,
        this.bkgd[SERVER_REMAIN_BOX] = D2(IMAGES.SERVER_REMAIN_BOX, P, 812.5, 0, o),
        this.bkgd[e] = D2(IMAGES.LOCKED_CUSTOM_ALERT, P, -189.5, -5, o | a),
        this.bkgd[e++].view = X,
        this.bkgd[e] = D2(IMAGES.LOCKED_SKIN_ALERT, P, -189.5, -5, o | a),
        this.bkgd[e++].view = J,
        LEVEL_GAUGE = e++,
        this.bkgd[LEVEL_GAUGE] = D2(IMAGES.GAUGE, B, 93, 30, o),
        this.bkgd[e] = D2(IMAGES.CHANGE_NICKNAME1_BOX, P, -173, 110, o | a),
        this.bkgd[e++].view = te,
        this.bkgd[e] = D2(IMAGES.CHANGE_NICKNAME0_BOX, P, -173, 110, o | a),
        this.bkgd[e++].view = ie,
        e = 0,
        this.buttons = [],
        this.buttons[e++] = Ne(50, 57, 0, [IMAGES.BUY_BREAD_OUT, IMAGES.BUY_BREAD_IN, IMAGES.BUY_BREAD_CLICK], 1, 0, function() {
            c.isUserLogged() ? f(t) : f(E)
        }, 320, 0, i, B),
        window.innerWidth < 1300 ? this.buttons[e] = Ne(202, 97, 0, [IMAGES.PLAY_BUTTON_OUT, IMAGES.PLAY_BUTTON_IN, IMAGES.PLAY_BUTTON_CLICK], 1, 0, this.play_game, 462, 235, o | i, B) : this.buttons[e] = Ne(202, 97, 0, [IMAGES.PLAY_BUTTON_OUT, IMAGES.PLAY_BUTTON_IN, IMAGES.PLAY_BUTTON_CLICK], 1, 0, this.play_game, 74, 235, o | a, B),
        this.buttons[e++].view = l,
        1300 < window.innerWidth && (this.buttons[e] = Ne(355, 168, 0, [IMAGES.CHANGELOG_BUTTON_OUT, IMAGES.CHANGELOG_BUTTON_OUT, IMAGES.CHANGELOG_BUTTON_OUT], 1, 0, function() {
            window.open("./changelog.html", "_blank")
        }, -195, -115, oe | a, B),
        this.buttons[e++].view = l,
        this.buttons[e] = Ne(355, 168, 0, [IMAGES.DEVASTIO_BUTTON_OUT, IMAGES.DEVASTIO_BUTTON_OUT, IMAGES.DEVASTIO_BUTTON_OUT], 1, 0, function() {
            window.open("https://devast.io", "_blank")
        }, 20, -115, oe | a, B),
        this.buttons[e++].view = l),
        this.buttons[e++] = Ne(80, 80, 0, [IMAGES.DISCORD_BUTTON_OUT, IMAGES.DISCORD_BUTTON_IN, IMAGES.DISCORD_BUTTON_CLICK], 1, 0, function() {
            window.open("https://discord.gg/starveio", "_blank")
        }, 330, 10, r, B),
        this.buttons[e++] = Ne(80, 80, 0, [IMAGES.REDDIT_BUTTON_OUT, IMAGES.REDDIT_BUTTON_IN, IMAGES.REDDIT_BUTTON_CLICK], 1, 0, function() {
            window.open("https://reddit.com/r/starveio", "_blank")
        }, 280, 10, r, B),
        this.buttons[e++] = Ne(80, 80, 0, [IMAGES.WIKI_BUTTON_OUT, IMAGES.WIKI_BUTTON_IN, IMAGES.WIKI_BUTTON_CLICK], 1, 0, function() {
            window.open("https://starveiopro.wikia.com/wiki/", "_blank")
        }, 230, 10, r, B),
        this.buttons[e++] = Ne(80, 80, 0, [IMAGES.FACEBOOK_BUTTON_OUT, IMAGES.FACEBOOK_BUTTON_IN, IMAGES.FACEBOOK_BUTTON_CLICK], 1, 0, function() {
            window.open("https://www.facebook.com/pages/category/Video-Game/limaxio-571818073000979/", "_blank")
        }, 155, 10, r, B),
        this.buttons[e++] = Ne(80, 80, 0, [IMAGES.TWITTER_BUTTON_OUT, IMAGES.TWITTER_BUTTON_IN, IMAGES.TWITTER_BUTTON_CLICK], 1, 0, function() {
            window.open("https://twitter.com/lapamauve", "_blank")
        }, 105, 10, r, B),
        this.buttons[e++] = Ne(80, 80, 0, [IMAGES.YOUTUBE_BUTTON_OUT, IMAGES.YOUTUBE_BUTTON_IN, IMAGES.YOUTUBE_BUTTON_CLICK], 1, 0, function() {
            window.open("https://youtube.com/c/lapamauve", "_blank")
        }, 55, 10, r, B),
        LEADERBOARD_BUTTON = e++,
        this.buttons[LEADERBOARD_BUTTON] = Ne(232, 142, 0, [IMAGES.ICONS_BOTTOM_BG_BUTTON_OUT, IMAGES.ICONS_BOTTOM_BG_BUTTON_IN, IMAGES.ICONS_BOTTOM_BG_BUTTON_CLICK], 1, 0, function() {
            f(I),
            Uo(De.LEADERBOARD_ALL, De.LEADERBOARD_TOTAL, De.LEADERBOARD_SCORE, De.LEADERBOARD_SEASON5)
        }, -5, 573, i, B),
        this.buttons[e++] = Ne(236, 165, 0, [IMAGES.LEADERBOARD_ICON, IMAGES.LEADERBOARD_ICON, IMAGES.LEADERBOARD_ICON], 1, 1, function() {
            f(I)
        }, -5, 566, i, B),
        TUTORIAL_BUTTON = e++,
        this.buttons[TUTORIAL_BUTTON] = Ne(236, 165, 0, [IMAGES.ICONS_BG_BUTTON_OUT, IMAGES.ICONS_BG_BUTTON_IN, IMAGES.ICONS_BG_BUTTON_CLICK], 1, 0, function() {
            f(Y)
        }, -5, 494, i, B),
        this.buttons[e++] = Ne(236, 165, 0, [IMAGES.TUTORIAL_ICON, IMAGES.TUTORIAL_ICON, IMAGES.TUTORIAL_ICON], 1, 1, function() {
            f(Y)
        }, -5, 494, i, B),
        SERVER_BUTTON = e++,
        this.buttons[SERVER_BUTTON] = Ne(236, 165, 0, [IMAGES.ICONS_BG_BUTTON_OUT, IMAGES.ICONS_BG_BUTTON_IN, IMAGES.ICONS_BG_BUTTON_CLICK], 1, 0, function() {
            c.isUserLogged() ? 0 < De.privateServerTime - performance.now() && f(N) : f(E)
        }, -5, 415, i, B),
        this.buttons[e++] = Ne(236, 165, 0, [IMAGES.SERVER_ACCESS_ICON, IMAGES.SERVER_ACCESS_ICON, IMAGES.SERVER_ACCESS_ICON], 1, 1, function() {
            c.isUserLogged() ? 0 < De.privateServerTime - performance.now() && f(N) : f(E)
        }, -5, 415, i, B),
        SHOP_BUTTON = e++,
        this.buttons[SHOP_BUTTON] = Ne(236, 165, 0, [IMAGES.ICONS_BG_BUTTON_OUT, IMAGES.ICONS_BG_BUTTON_IN, IMAGES.ICONS_BG_BUTTON_CLICK], 1, 0, function() {
            f(A)
        }, -5, 336, i, B),
        this.buttons[e++] = Ne(236, 165, 0, [IMAGES.SHOP_ICON, IMAGES.SHOP_ICON, IMAGES.SHOP_ICON], 1, 1, function() {
            f(A)
        }, -5, 336, i, B),
        COSMETICS_BUTTON = e++,
        this.buttons[COSMETICS_BUTTON] = Ne(236, 165, 0, [IMAGES.ICONS_BG_BUTTON_OUT, IMAGES.ICONS_BG_BUTTON_IN, IMAGES.ICONS_BG_BUTTON_CLICK], 1, 0, function() {
            f(T)
        }, -5, 257, i, B),
        this.buttons[e++] = Ne(236, 165, 0, [IMAGES.SKINS_ICON, IMAGES.SKINS_ICON, IMAGES.SKINS_ICON], 1, 1, function() {
            f(T)
        }, -5, 257, i, B),
        GAME_BUTTON = e++,
        this.buttons[GAME_BUTTON] = Ne(236, 165, 0, [IMAGES.ICONS_BG_BUTTON_OUT, IMAGES.ICONS_BG_BUTTON_IN, IMAGES.ICONS_BG_BUTTON_CLICK], 1, 0, function() {
            f(l)
        }, -5, 178, i, B),
        this.buttons[e++] = Ne(236, 165, 0, [IMAGES.START_ICON, IMAGES.START_ICON, IMAGES.START_ICON], 1, 1, function() {
            f(l)
        }, -5, 178, i, B),
        LOGIN_BUTTON = e++,
        this.LOGIN_BUTTON = LOGIN_BUTTON,
        this.buttons[LOGIN_BUTTON] = Ne(324, 222, 0, [IMAGES.LOGIN_BUTTON_OUT, IMAGES.LOGIN_BUTTON_IN, IMAGES.LOGIN_BUTTON_CLICK], 1, 0, function() {
            f(E)
        }, 0, 70, i, B),
        PROFILE_BUTTON = e++,
        PROFILE_BUTTON_2 = e++,
        this.PROFILE_BUTTON = PROFILE_BUTTON,
        this.PROFILE_BUTTON_2 = PROFILE_BUTTON_2,
        this.buttons[PROFILE_BUTTON] = Ne(324, 222, 0, [IMAGES.PROFILE_BUTTON_OUT, IMAGES.PROFILE_BUTTON_IN, IMAGES.PROFILE_BUTTON_CLICK], 1, 0, function() {
            f(h),
            d(-1)
        }, 0, 70, i, P),
        this.buttons[PROFILE_BUTTON_2] = Ne(324, 222, 0, [IMAGES.PROFILE_ICON, IMAGES.PROFILE_ICON, IMAGES.PROFILE_ICON], 1, 1, function() {
            f(h),
            d(-1)
        }, 0, 70, i, P),
        0 === client.privateServer && (v = e++,
        window.innerWidth < 1300 ? this.buttons[v] = Ne(266, 176, 0, [IMAGES.NORMAL_MODE_OUT, IMAGES.NORMAL_MODE_IN, IMAGES.NORMAL_MODE_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_PVP)
        }, 150, 300, i | o, B) : this.buttons[v] = Ne(266, 176, 0, [IMAGES.NORMAL_MODE_OUT, IMAGES.NORMAL_MODE_IN, IMAGES.NORMAL_MODE_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_PVP)
        }, -340, 100, a | o, B),
        this.buttons[v].view = l,
        this.buttons[v].hint = 0,
        M = e++,
        window.innerWidth < 1300 ? this.buttons[M] = Ne(266, 176, 0, [IMAGES.FOREST_MODE_OUT, IMAGES.FOREST_MODE_IN, IMAGES.FOREST_MODE_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_LEGACY)
        }, 150, 400, i | o, B) : this.buttons[M] = Ne(266, 176, 0, [IMAGES.FOREST_MODE_OUT, IMAGES.FOREST_MODE_IN, IMAGES.FOREST_MODE_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_LEGACY)
        }, -340, 200, a | o, B),
        this.buttons[M].view = l,
        this.buttons[M].hint = 0,
        y = e++,
        window.innerWidth < 1300 ? this.buttons[y] = Ne(266, 176, 0, [IMAGES.MODE_COMMUNITY_OUT, IMAGES.MODE_COMMUNITY_IN, IMAGES.MODE_COMMUNITY_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_COMMUNITY)
        }, 450, 300, i | o, B) : this.buttons[y] = Ne(266, 176, 0, [IMAGES.MODE_COMMUNITY_OUT, IMAGES.MODE_COMMUNITY_IN, IMAGES.MODE_COMMUNITY_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_COMMUNITY)
        }, -340, 300, a | o, B),
        this.buttons[y].view = l,
        this.buttons[y].hint = 0,
        L = e++,
        window.innerWidth < 1300 ? this.buttons[L] = Ne(266, 176, 0, [IMAGES.ZOMBIE_MODE_OUT, IMAGES.ZOMBIE_MODE_IN, IMAGES.ZOMBIE_MODE_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_ZOMBIES)
        }, 300, 300, i | o, B) : this.buttons[L] = Ne(266, 176, 0, [IMAGES.ZOMBIE_MODE_OUT, IMAGES.ZOMBIE_MODE_IN, IMAGES.ZOMBIE_MODE_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_ZOMBIES)
        }, 204, 100, a | o, B),
        this.buttons[L].view = l,
        this.buttons[L].hint = 0,
        G = e++,
        window.innerWidth < 1300 ? this.buttons[G] = Ne(266, 176, 0, [IMAGES.VAMPIRE_MODE_OUT, IMAGES.VAMPIRE_MODE_IN, IMAGES.VAMPIRE_MODE_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_VAMPIRES)
        }, 300, 400, i | o, B) : this.buttons[G] = Ne(266, 176, 0, [IMAGES.VAMPIRE_MODE_OUT, IMAGES.VAMPIRE_MODE_IN, IMAGES.VAMPIRE_MODE_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_VAMPIRES)
        }, 204, 200, a | o, B),
        this.buttons[G].view = l,
        this.buttons[G].hint = 0,
        H = e++,
        this.buttons[H] = Ne(266, 176, 0, [IMAGES.MODE_EXPERIMENTAL_OUT, IMAGES.MODE_EXPERIMENTAL_IN, IMAGES.MODE_EXPERIMENTAL_CLICK], 1, 0, function() {
            client.select_gamemode(Ke.MODE_EXPERIMENTAL)
        }, window.innerWidth < 1300 ? 450 : 204, window.innerWidth < 1300 ? 400 : 300, (window.innerWidth < 1300 ? i : a) | o, B),
        this.buttons[H].view = l,
        this.buttons[H].hint = 0),
        this.buttons[e] = Ne(87, 78, 0, [IMAGES.MODIFY_NAME_OUT, IMAGES.MODIFY_NAME_IN, IMAGES.MODIFY_NAME_CLICK], 1, 0, function() {
            De.generate_new_nickname(),
            0 === De.firstName ? f(ie) : f(te)
        }, 127, 110, a | o, P),
        this.buttons[e++].view = h,
        this.buttons[e] = Ne(87, 78, 0, [IMAGES.LOGOUT_OUT, IMAGES.LOGOUT_IN, IMAGES.LOGOUT_CLICK], 1, 0, function() {
            Ro === Co && window.FB.getUserID() && window.FB.logout(),
            Ro === mo && void 0 !== Mo && (window.gapi.auth2.getAuthInstance().signOut(),
            Mo = void 0),
            Ro = So = No = void 0,
            De.kit = 0,
            De.bread = 0,
            De.score = 0,
            De.unlock_cosmetics(),
            onUserLogout()
        }, 255, 110, a | o, P),
        this.buttons[e++].view = h,
        this.buttons[e] = Ne(58, 64, 0, [IMAGES.CLOSE_BUTTON_OUT, IMAGES.CLOSE_BUTTON_IN, IMAGES.CLOSE_BUTTON_CLICK], 1, 0, function() {
            f(l)
        }, 189, 118, a | o, P),
        this.buttons[e++].view = E,
        this.buttons[e] = Ne(497, 72, 0, [IMAGES.LOGIN_GOOGLE_OUT, IMAGES.LOGIN_GOOGLE_IN, IMAGES.LOGIN_GOOGLE_CLICK], 1, 0, function() {
            window.gapi.auth2.getAuthInstance().signIn()
        }, -130, 390, a | o, P),
        this.buttons[e++].view = E,
        this.buttons[e] = Ne(497, 72, 0, [IMAGES.LOGIN_FACEBOOK_OUT, IMAGES.LOGIN_FACEBOOK_IN, IMAGES.LOGIN_FACEBOOK_CLICK], 1, 0, function() {
            window.FB.login(function(e) {
                e.authResponse && window.FB.api("/me", function(e) {
                    Ro = Co,
                    So = window.FB.getAuthResponse().accessToken,
                    Po(),
                    window.onUserLogin(No)
                })
            })
        }, -130, 430, a | o, P),
        this.buttons[e++].view = E,
        __LEVEL_FACTOR__ = 2e4,
        this.xp_formula = function(e) {
            var t = De.level_formula(e)
              , i = t * t * __LEVEL_FACTOR__;
            return (e -= i) / ((t + 1) * (t + 1) * __LEVEL_FACTOR__ - i)
        }
        ,
        this.level_formula = function(e) {
            return Math.floor(Math.sqrt(e / __LEVEL_FACTOR__))
        }
        ,
        this.update_score = function(e) {
            De.lvl = De.level_formula(e),
            De.xp_dest = De.xp_formula(e),
            De.xp = 0,
            De.score = e
        }
        ,
        this.login_restore_data = function(e) {
            De.buttons[De.LOGIN_BUTTON].info.active = 0,
            De.buttons[De.PROFILE_BUTTON].info.active = 1,
            De.buttons[De.PROFILE_BUTTON_2].info.active = 1,
            z(),
            -1 === e.name.indexOf("Starver#") ? document.getElementById("account_nickname_input").value = window.decodeURIComponent(window.escape(window.atob(e.name))) : document.getElementById("account_nickname_input").value = e.name,
            De.bread = e.bread;
            for (var t = e.seasons, i = t[t.length - 1], n = (De.seasons = t,
            c.update_score(i.score),
            De.score = i.score,
            De.kill = i.kill,
            De.death = i.death,
            De.time = i.time,
            De.bestScore = i.bestScore,
            De.bestKill = i.bestKill,
            De.bestTime = i.bestTime,
            De.scoreTotal = i.scoreTotal,
            De.firstName = e.firstName,
            document.getElementById("serverAddressInput").value = "https://starve.io/?server=" + e.privateServer,
            void 0 === De.firstName && (De.firstName = 0),
            De.privateServerTime = performance.now() + e.privateServerTime,
            0 < Number(e.privateServerTime) && (De.privateServerTime = performance.now() + Number(e.privateServerTime)),
            De.kit = performance.now() + e.kit,
            0 < Number(e.kit) && (De.kit = performance.now() + Number(e.kit)),
            COSMETICS.SKIN), r = 0; r < e.skins.length; r++)
                if (0 < e.skins[r])
                    for (var o = 0; o < n.length; o++)
                        n[o].id === r && (c.unlock.skin[o] = 1);
            for (n = COSMETICS.ACCESSORY,
            r = 0; r < e.accessories.length; r++)
                if (0 < e.accessories[r])
                    for (o = 0; o < n.length; o++)
                        n[o].id === r && (c.unlock.accessory[o] = 1);
            for (n = COSMETICS.BOOK,
            r = 0; r < e.books.length; r++)
                if (0 < e.books[r])
                    for (o = 0; o < n.length; o++)
                        n[o].id === r && (c.unlock.book[o] = 1);
            for (n = COSMETICS.BAG,
            r = 0; r < e.bags.length; r++)
                if (0 < e.bags[r])
                    for (o = 0; o < n.length; o++)
                        n[o].id === r && (c.unlock.bag[o] = 1);
            for (n = COSMETICS.CRATE,
            r = 0; r < e.crates.length; r++)
                if (0 < e.crates[r])
                    for (o = 0; o < n.length; o++)
                        n[o].id === r && (c.unlock.crate[o] = 1,
                        c.unlock.dead[o] = 1)
        }
        ,
        this.login_after = function() {
            window.onUserLogin = function() {
                var e, t;
                f(l),
                e = c.login_restore_data,
                (t = new XMLHttpRequest).open("GET", bo + "login?token=" + So + "&type=" + Ro),
                t.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
                t.onreadystatechange = function() {
                    4 === this.readyState && 200 === this.status && "0" !== t.responseText && e(JSON.parse(t.responseText))
                }
                ,
                t.send()
            }
            ,
            1 === Do && window.onUserLogin()
        }
        ,
        window.onUserLogout = function() {
            De.buttons[De.LOGIN_BUTTON].info.active = 1,
            De.buttons[De.PROFILE_BUTTON].info.active = 0,
            De.buttons[De.PROFILE_BUTTON_2].info.active = 0,
            f(l)
        }
        ,
        this.isUserLogged = function() {
            return De.buttons[De.PROFILE_BUTTON].info.active
        }
        ,
        this.buttons[e] = Ne(461, 105, 0, [IMAGES.GET_MORE_BUTTON_OUT, IMAGES.GET_MORE_BUTTON_IN, IMAGES.GET_MORE_BUTTON_CLICK], 1, 0, function() {
            c.isUserLogged() ? f(t) : f(E)
        }, -100, 80, a | o, P),
        this.buttons[e++].view = A,
        this.buttons[e] = Ne(157, 158, 0, [IMAGES.TUTO_WIKI_OUT, IMAGES.TUTO_WIKI_IN, IMAGES.TUTO_WIKI_CLICK], 1, 0, function() {
            window.open("https://starveiopro.wikia.com/wiki/", "_blank")
        }, -35, 125, a | o, P),
        this.buttons[e++].view = Y,
        this.buttons[e] = Ne(66, 73, 0, [IMAGES.TUTO_PREVIOUS_OUT, IMAGES.TUTO_PREVIOUS_IN, IMAGES.TUTO_PREVIOUS_CLICK], 1, 0, void 0, -68, 340, a | o, P),
        this.buttons[e++].view = Y,
        this.buttons[e] = Ne(66, 73, 0, [IMAGES.TUTO_NEXT_OUT, IMAGES.TUTO_NEXT_IN, IMAGES.TUTO_NEXT_CLICK], 1, 0, void 0, -30, 340, a | o, P),
        this.buttons[e++].view = Y,
        this.buttons[e] = Ne(97, 66, 0, [IMAGES.LVL_LEADERBOARD_OUT, IMAGES.LVL_LEADERBOARD_IN, IMAGES.LVL_LEADERBOARD_CLICK], 1, 0, void 0, -14, 151, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_KILL = e,
        this.buttons[e] = Ne(135, 66, 0, [IMAGES.KILL_LEADERBOARD_OUT, IMAGES.KILL_LEADERBOARD_IN, IMAGES.KILL_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(void 0, void 0, De.LEADERBOARD_KILL)
        }, 37.5, 151, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_TIME = e,
        this.buttons[e] = Ne(160, 66, 0, [IMAGES.TIME_LEADERBOARD_OUT, IMAGES.TIME_LEADERBOARD_IN, IMAGES.TIME_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(void 0, void 0, De.LEADERBOARD_TIME)
        }, 107.5, 151, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_SCORE = e,
        this.buttons[e] = Ne(207, 66, 0, [IMAGES.SCORE_LEADERBOARD_OUT, IMAGES.SCORE_LEADERBOARD_IN, IMAGES.SCORE_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(void 0, void 0, De.LEADERBOARD_SCORE)
        }, 190.5, 151, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_TODAY = e,
        this.buttons[e] = Ne(144, 66, 0, [IMAGES.TODAY_LEADERBOARD_OUT, IMAGES.TODAY_LEADERBOARD_IN, IMAGES.TODAY_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(De.LEADERBOARD_TODAY)
        }, 103.5, 110, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_WEEK = e,
        this.buttons[e] = Ne(124, 66, 0, [IMAGES.WEEK_LEADERBOARD_OUT, IMAGES.WEEK_LEADERBOARD_IN, IMAGES.WEEK_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(De.LEADERBOARD_WEEK)
        }, 177.5, 110, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_ALL = e,
        this.buttons[e] = Ne(104, 66, 0, [IMAGES.ALL_LEADERBOARD_OUT, IMAGES.ALL_LEADERBOARD_IN, IMAGES.ALL_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(De.LEADERBOARD_ALL)
        }, 242, 110, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_SEASON1 = e,
        this.buttons[e] = Ne(183, 66, 0, [IMAGES.SEASON1_LEADERBOARD_OUT, IMAGES.SEASON1_LEADERBOARD_IN, IMAGES.SEASON1_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(void 0, void 0, void 0, De.LEADERBOARD_SEASON1)
        }, -290, 521, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_SEASON2 = e,
        this.buttons[e] = Ne(183, 66, 0, [IMAGES.SEASON2_LEADERBOARD_OUT, IMAGES.SEASON2_LEADERBOARD_IN, IMAGES.SEASON2_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(void 0, void 0, void 0, De.LEADERBOARD_SEASON2)
        }, -185, 521, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_SEASON3 = e,
        this.buttons[e] = Ne(183, 66, 0, [IMAGES.SEASON3_LEADERBOARD_OUT, IMAGES.SEASON3_LEADERBOARD_IN, IMAGES.SEASON3_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(void 0, void 0, void 0, De.LEADERBOARD_SEASON3)
        }, -80, 521, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_SEASON4 = e,
        this.buttons[e] = Ne(183, 66, 0, [IMAGES.SEASON4_LEADERBOARD_OUT, IMAGES.SEASON4_LEADERBOARD_IN, IMAGES.SEASON4_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(void 0, void 0, void 0, De.LEADERBOARD_SEASON4)
        }, 25, 521, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_SEASON5 = e,
        this.buttons[e] = Ne(183, 66, 0, [IMAGES.SEASON5_LEADERBOARD_OUT, IMAGES.SEASON5_LEADERBOARD_IN, IMAGES.SEASON5_LEADERBOARD_CLICK], 1, 0, function() {
            Uo(void 0, void 0, void 0, De.LEADERBOARD_SEASON5)
        }, 130, 521, a | o, P),
        this.buttons[e++].view = I,
        this.buttons[e] = Ne(232, 352, 0, [IMAGES.CURRENCY1_OUT, IMAGES.CURRENCY1_IN, IMAGES.CURRENCY1_CLICK], 1, 0, function() {
            Bo(300)
        }, -330, 135, a | o, P),
        this.buttons[e++].view = t,
        this.buttons[e] = Ne(232, 352, 0, [IMAGES.CURRENCY2_OUT, IMAGES.CURRENCY2_IN, IMAGES.CURRENCY2_CLICK], 1, 0, function() {
            Bo(600)
        }, -195, 135, a | o, P),
        this.buttons[e++].view = t,
        this.buttons[e] = Ne(243, 374, 0, [IMAGES.CURRENCY3_OUT, IMAGES.CURRENCY3_IN, IMAGES.CURRENCY3_CLICK], 1, 0, function() {
            Bo(2600)
        }, -60, 130, a | o, P),
        this.buttons[e++].view = t,
        this.buttons[e] = Ne(232, 352, 0, [IMAGES.CURRENCY4_OUT, IMAGES.CURRENCY4_IN, IMAGES.CURRENCY4_CLICK], 1, 0, function() {
            Bo(7e3)
        }, 78, 135, a | o, P),
        this.buttons[e++].view = t,
        this.buttons[e] = Ne(243, 374, 0, [IMAGES.CURRENCY5_OUT, IMAGES.CURRENCY5_IN, IMAGES.CURRENCY5_CLICK], 1, 0, function() {
            Bo(2e4)
        }, 213, 130, a | o, P),
        this.buttons[e++].view = t,
        this.buttons[e] = Ne(58, 64, 0, [IMAGES.CLOSE_BUTTON_OUT, IMAGES.CLOSE_BUTTON_IN, IMAGES.CLOSE_BUTTON_CLICK], 1, 0, function() {
            f(A)
        }, 300, 88, a | o, P),
        this.buttons[e++].view = t,
        this.buttons[e] = Ne(323, 112, 0, [IMAGES.SKIN_BUTTON_OUT, IMAGES.SKIN_BUTTON_IN, IMAGES.SKIN_BUTTON_CLICK], 1, 0, function() {
            f(p),
            pe.initSelector()
        }, -315, 185, a | o, P),
        this.buttons[e++].view = T,
        this.buttons[e] = Ne(323, 112, 0, [IMAGES.ACCESSORY_BUTTON_OUT, IMAGES.ACCESSORY_BUTTON_IN, IMAGES.ACCESSORY_BUTTON_CLICK], 1, 0, function() {
            f(m),
            Ce.initSelector()
        }, -315, 321, a | o, P),
        this.buttons[e++].view = T,
        this.buttons[e] = Ne(323, 112, 0, [IMAGES.BAG_BUTTON_OUT, IMAGES.BAG_BUTTON_IN, IMAGES.BAG_BUTTON_CLICK], 1, 0, function() {
            f(O),
            ge.initSelector()
        }, 153, 185, a | o, P),
        this.buttons[e++].view = T,
        this.buttons[e] = Ne(323, 112, 0, [IMAGES.BOOK_BUTTON_OUT, IMAGES.BOOK_BUTTON_IN, IMAGES.BOOK_BUTTON_CLICK], 1, 0, function() {
            f(b),
            Oe.initSelector()
        }, 153, 321, a | o, P),
        this.buttons[e++].view = T,
        this.buttons[e] = Ne(323, 112, 0, [IMAGES.CRATE_BUTTON_OUT, IMAGES.CRATE_BUTTON_IN, IMAGES.CRATE_BUTTON_CLICK], 1, 0, function() {
            f(g),
            be.initSelector()
        }, 153, 463, a | o, P),
        this.buttons[e++].view = T,
        this.buttons[e] = Ne(323, 112, 0, [IMAGES.LOOT_BUTTON_OUT, IMAGES.LOOT_BUTTON_IN, IMAGES.LOOT_BUTTON_CLICK], 1, 0, function() {
            f(C),
            me.initSelector()
        }, -315, 463, a | o, P),
        this.buttons[e++].view = T,
        this.buttons[e] = Ne(327, 117, 0, [IMAGES.SEASON_5, IMAGES.SEASON_5_IN, IMAGES.SEASON_5_OUT], 1, 0, function() {
            f(ne)
        }, 155, 70, i, B),
        this.buttons[e++].view = l,
        this.buttons[e] = Ne(130, 129, 0, [IMAGES.SHOP_BUTTON_OUT, IMAGES.SHOP_BUTTON_IN, IMAGES.SHOP_BUTTON_CLICK], 1, 0, function() {
            D(J, P, "none"),
            f(A)
        }, 10, 40, a | o, P),
        this.buttons[e++].view = J,
        this.buttons[e] = Ne(130, 129, 0, [IMAGES.SHOP_BUTTON_OUT, IMAGES.SHOP_BUTTON_IN, IMAGES.SHOP_BUTTON_CLICK], 1, 0, function() {
            D(X, P, "none"),
            f(A)
        }, 10, 40, a | o, P),
        this.buttons[e++].view = X,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(A)
        }, 200, 140, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(253, 110, 0, [IMAGES.ATLANTA_OUT, IMAGES.ATLANTA_IN, IMAGES.ATLANTA_CLICK], 1, 0, function() {
            wo("Atlanta")
        }, -265, 300, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(253, 110, 0, [IMAGES.DALLAS_OUT, IMAGES.DALLAS_IN, IMAGES.DALLAS_CLICK], 1, 0, function() {
            wo("Dallas")
        }, -130, 300, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(253, 110, 0, [IMAGES.FREMONT_OUT, IMAGES.FREMONT_IN, IMAGES.FREMONT_CLICK], 1, 0, function() {
            wo("Fremont")
        }, 5, 300, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(253, 110, 0, [IMAGES.NEWARK_OUT, IMAGES.NEWARK_IN, IMAGES.NEWARK_CLICK], 1, 0, function() {
            wo("Newark")
        }, 140, 300, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(253, 110, 0, [IMAGES.LONDON_OUT, IMAGES.LONDON_IN, IMAGES.LONDON_CLICK], 1, 0, function() {
            wo("London")
        }, -265, 365, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(253, 110, 0, [IMAGES.FRANKFURT_OUT, IMAGES.FRANKFURT_IN, IMAGES.FRANKFURT_CLICK], 1, 0, function() {
            wo("Frankfurt")
        }, -130, 365, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(253, 110, 0, [IMAGES.SINGAPORE_OUT, IMAGES.SINGAPORE_IN, IMAGES.SINGAPORE_CLICK], 1, 0, function() {
            wo("Singapore")
        }, 5, 365, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(253, 110, 0, [IMAGES.TOKYO_OUT, IMAGES.TOKYO_IN, IMAGES.TOKYO_CLICK], 1, 0, function() {
            wo("Tokyo")
        }, 140, 365, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(253, 110, 0, [IMAGES.TORONTO_OUT, IMAGES.TORONTO_IN, IMAGES.TORONTO_CLICK], 1, 0, function() {
            wo("Toronto")
        }, -265, 430, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(253, 110, 0, [IMAGES.MUMBAI_OUT, IMAGES.MUMBAI_IN, IMAGES.MUMBAI_CLICK], 1, 0, function() {
            wo("Mumbai")
        }, -130, 430, a | o, P),
        this.buttons[e++].view = R,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(R)
        }, 230, 140, a | o, P),
        this.buttons[e++].view = S,
        this.buttons[e] = Ne(230, 352, 0, [IMAGES.DAYS3_OUT, IMAGES.DAYS3_IN, IMAGES.DAYS3_CLICK], 1, 0, function() {
            Bo(350)
        }, -280, 240, a | o, P),
        this.buttons[e++].view = S,
        this.buttons[e] = Ne(230, 352, 0, [IMAGES.DAYS7_OUT, IMAGES.DAYS7_IN, IMAGES.DAYS7_CLICK], 1, 0, function() {
            Bo(700)
        }, -130, 240, a | o, P),
        this.buttons[e++].view = S,
        this.buttons[e] = Ne(230, 352, 0, [IMAGES.DAYS30_OUT, IMAGES.DAYS30_IN, IMAGES.DAYS30_CLICK], 1, 0, function() {
            Bo(1400)
        }, 20, 240, a | o, P),
        this.buttons[e++].view = S,
        this.buttons[e] = Ne(230, 352, 0, [IMAGES.DAYS90_OUT, IMAGES.DAYS90_IN, IMAGES.DAYS90_CLICK], 1, 0, function() {
            Bo(3e3)
        }, 170, 240, a | o, P),
        this.buttons[e++].view = S,
        this.buttons[e] = Ne(105, 119, 0, [IMAGES.COPY_PASTE_OUT, IMAGES.COPY_PASTE_IN, IMAGES.COPY_PASTE_CLICK], 1, 0, function() {
            document.getElementById("serverAddressInput").select(),
            document.execCommand("copy")
        }, 170, 310, a | o, P),
        this.buttons[e++].view = N,
        this.buttons[e] = Ne(105, 119, 0, [IMAGES.RESTART_OUT, IMAGES.RESTART_IN, IMAGES.RESTART_CLICK], 1, 0, function() {
            var e;
            (e = new XMLHttpRequest).open("GET", bo + "rebootServer?token=" + So + "&userid=" + No),
            e.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
            e.onreadystatechange = function() {
                4 === this.readyState && 200 === this.status && "0" !== e.responseText && (location.href = document.getElementById("serverAddressInput").value)
            }
            ,
            e.send()
        }, 235, 310, a | o, P),
        this.buttons[e++].view = N,
        this.buttons[e] = Ne(204, 115, 0, [IMAGES.GUIDE_OUT, IMAGES.GUIDE_IN, IMAGES.GUIDE_CLICK], 1, 0, function() {
            window.open("./commands.html", "_blank")
        }, -265, 490, a | o, P),
        this.buttons[e++].view = N,
        this.buttons[e] = Ne(145, 69, 0, [IMAGES.PRICE5_OUT, IMAGES.PRICE5_IN, IMAGES.PRICE5_CLICK], 1, 0, function() {
            f(j)
        }, -210, 170, a | o, P),
        this.buttons[e++].view = A,
        this.buttons[e] = Ne(145, 69, 0, [IMAGES.PRICE1_OUT, IMAGES.PRICE1_IN, IMAGES.PRICE1_CLICK], 1, 0, function() {
            f($)
        }, 70, 170, a | o, P),
        this.buttons[e++].view = A,
        this.buttons[e] = Ne(145, 69, 0, [IMAGES.PRICE2_OUT, IMAGES.PRICE2_IN, IMAGES.PRICE2_CLICK], 1, 0, function() {
            f(q)
        }, 70, 204, a | o, P),
        this.buttons[e++].view = A,
        this.buttons[e] = Ne(145, 69, 0, [IMAGES.PRICE3_OUT, IMAGES.PRICE3_IN, IMAGES.PRICE3_CLICK], 1, 0, function() {
            f(Q)
        }, -210, 204, a | o, P),
        this.buttons[e++].view = A,
        this.buttons[e] = Ne(145, 69, 0, [IMAGES.PRICE3_OUT, IMAGES.PRICE3_IN, IMAGES.PRICE3_CLICK], 1, 0, function() {
            f(ee)
        }, 70, 238, a | o, P),
        this.buttons[e++].view = A,
        this.buttons[e] = Ne(145, 69, 0, [IMAGES.PRICE3_OUT, IMAGES.PRICE3_IN, IMAGES.PRICE3_CLICK], 1, 0, function() {
            c.isUserLogged() ? Wo(0, 300) : f(E)
        }, 307, 205, a | o, P),
        this.buttons[e++].view = A,
        this.buttons[e] = Ne(145, 69, 0, [IMAGES.PRICE4_OUT, IMAGES.PRICE4_IN, IMAGES.PRICE4_CLICK], 1, 0, function() {
            f(Z)
        }, -210, 238, a | o, P),
        this.buttons[e++].view = A,
        this.buttons[e] = Ne(145, 69, 0, [IMAGES.PRICE4_OUT, IMAGES.PRICE4_IN, IMAGES.PRICE4_CLICK], 1, 0, function() {
            c.isUserLogged() ? Wo(1, 600) : f(E)
        }, 307, 239, a | o, P),
        this.buttons[e++].view = A,
        this.buttons[e] = Ne(192, 101, 0, [IMAGES.YES_BUTTON_OUT, IMAGES.YES_BUTTON_IN, IMAGES.YES_BUTTON_CLICK], 1, 0, function() {
            ko()
        }, -100, 250, a | o, P),
        this.buttons[e++].view = ie,
        this.buttons[e] = Ne(192, 104, 0, [IMAGES.YES_300_BUTTON_OUT, IMAGES.YES_300_BUTTON_IN, IMAGES.YES_300_BUTTON_CLICK], 1, 0, function() {
            ko()
        }, -100, 239, a | o, P),
        this.buttons[e++].view = te,
        this.buttons[e] = Ne(192, 101, 0, [IMAGES.NO_BUTTON_OUT, IMAGES.NO_BUTTON_IN, IMAGES.NO_BUTTON_CLICK], 1, 0, function() {
            f(h)
        }, 10, 250, a | o, P),
        this.buttons[e++].view = ie,
        this.buttons[e] = Ne(192, 104, 0, [IMAGES.NO_THANKS_BUTTON_OUT, IMAGES.NO_THANKS_BUTTON_IN, IMAGES.NO_THANKS_BUTTON_CLICK], 1, 0, function() {
            f(h)
        }, 10, 239, a | o, P),
        this.buttons[e++].view = te,
        (RARITY_BUTTON = [])[RARITY.FREE] = [IMAGES.FREE_ITEM_OUT, IMAGES.FREE_ITEM_IN, IMAGES.FREE_ITEM_CLICK],
        RARITY_BUTTON[RARITY.WOOD] = [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK],
        RARITY_BUTTON[RARITY.STONE] = [IMAGES.STONE_ITEM_OUT, IMAGES.STONE_ITEM_IN, IMAGES.STONE_ITEM_CLICK],
        RARITY_BUTTON[RARITY.GOLD] = [IMAGES.GOLD_ITEM_OUT, IMAGES.GOLD_ITEM_IN, IMAGES.GOLD_ITEM_CLICK],
        RARITY_BUTTON[RARITY.DIAMOND] = [IMAGES.DIAMOND_ITEM_OUT, IMAGES.DIAMOND_ITEM_IN, IMAGES.DIAMOND_ITEM_CLICK],
        RARITY_BUTTON[RARITY.AMETHYST] = [IMAGES.AMETHYST_ITEM_OUT, IMAGES.AMETHYST_ITEM_IN, IMAGES.AMETHYST_ITEM_CLICK],
        RARITY_BUTTON[RARITY.REIDITE] = [IMAGES.REIDITE_ITEM_OUT, IMAGES.REIDITE_ITEM_IN, IMAGES.REIDITE_ITEM_CLICK],
        RARITY_BUTTON[RARITY.LEVEL] = [IMAGES.LEVEL_ITEM_OUT, IMAGES.LEVEL_ITEM_IN, IMAGES.LEVEL_ITEM_CLICK],
        RARITY_BUTTON[RARITY.SPECIAL] = [IMAGES.SPECIAL_ITEM_OUT, IMAGES.SPECIAL_ITEM_IN, IMAGES.SPECIAL_ITEM_CLICK],
        FIRST_BUTTON_SKIN = e,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, a | o, P),
        this.buttons[e++].view = p,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(T)
        }, -320, 470, a | o, P),
        this.buttons[e++].view = p,
        FIRST_BUTTON_ACCESSORY = e,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, a | o, P),
        this.buttons[e++].view = m,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(T)
        }, -320, 470, a | o, P),
        this.buttons[e++].view = m,
        FIRST_BUTTON_LOOT = e,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, a | o, P),
        this.buttons[e++].view = C,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(T)
        }, -320, 470, a | o, P),
        this.buttons[e++].view = C,
        FIRST_BUTTON_BAG = e,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, a | o, P),
        this.buttons[e++].view = O,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(T)
        }, -320, 470, a | o, P),
        this.buttons[e++].view = O,
        FIRST_BUTTON_BOOK = e,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, a | o, P),
        this.buttons[e++].view = b,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(T)
        }, -320, 470, a | o, P),
        this.buttons[e++].view = b,
        FIRST_BUTTON_CRATE = e,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 205, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 300, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, -29, 395, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 205, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 300, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 65, 395, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 205, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 300, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(178, 182, 0, [IMAGES.WOOD_ITEM_OUT, IMAGES.WOOD_ITEM_IN, IMAGES.WOOD_ITEM_CLICK], 1, 0, void 0, 159, 395, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_PREVIOUS_OUT, IMAGES.SKIN_PREVIOUS_IN, IMAGES.SKIN_PREVIOUS_CLICK], 1, 0, void 0, -61, 315, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(39, 122, 0, [IMAGES.SKIN_NEXT_OUT, IMAGES.SKIN_NEXT_IN, IMAGES.SKIN_NEXT_CLICK], 1, 0, void 0, 260, 315, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(T)
        }, -320, 470, a | o, P),
        this.buttons[e++].view = g,
        this.buttons[e] = Ne(260, 260, 0, [IMAGES.SPIN_BUTTON_1_OUT, IMAGES.SPIN_BUTTON_1_IN, IMAGES.SPIN_BUTTON_1_CLICK], 1, 0, function() {
            c.isUserLogged() ? zo(3) : f(E)
        }, -65, 197, a | o, P),
        this.buttons[e++].view = $,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(A)
        }, 309, 180, a | o, P),
        this.buttons[e++].view = $,
        this.buttons[e] = Ne(260, 260, 0, [IMAGES.SPIN_BUTTON_2_OUT, IMAGES.SPIN_BUTTON_2_IN, IMAGES.SPIN_BUTTON_2_CLICK], 1, 0, function() {
            c.isUserLogged() ? zo(0) : f(E)
        }, -65, 197, a | o, P),
        this.buttons[e++].view = j,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(A)
        }, 309, 180, a | o, P),
        this.buttons[e++].view = j,
        this.buttons[e] = Ne(260, 260, 0, [IMAGES.SPIN_BUTTON_3_OUT, IMAGES.SPIN_BUTTON_3_IN, IMAGES.SPIN_BUTTON_3_CLICK], 1, 0, function() {
            c.isUserLogged() ? zo(4) : f(E)
        }, -65, 197, a | o, P),
        this.buttons[e++].view = q,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(A)
        }, 309, 180, a | o, P),
        this.buttons[e++].view = q,
        this.buttons[e] = Ne(260, 260, 0, [IMAGES.SPIN_BUTTON_4_OUT, IMAGES.SPIN_BUTTON_4_IN, IMAGES.SPIN_BUTTON_4_CLICK], 1, 0, function() {
            c.isUserLogged() ? zo(1) : f(E)
        }, -65, 197, a | o, P),
        this.buttons[e++].view = Q,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(A)
        }, 309, 180, a | o, P),
        this.buttons[e++].view = Q,
        this.buttons[e] = Ne(260, 260, 0, [IMAGES.SPIN_BUTTON_5_OUT, IMAGES.SPIN_BUTTON_5_IN, IMAGES.SPIN_BUTTON_5_CLICK], 1, 0, function() {
            c.isUserLogged() ? zo(2) : f(E)
        }, -65, 197, a | o, P),
        this.buttons[e++].view = Z,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(A)
        }, 309, 180, a | o, P),
        this.buttons[e++].view = Z,
        this.buttons[e] = Ne(260, 260, 0, [IMAGES.SPIN_BUTTON_4_OUT, IMAGES.SPIN_BUTTON_4_IN, IMAGES.SPIN_BUTTON_4_CLICK], 1, 0, function() {
            c.isUserLogged() ? zo(5) : f(E)
        }, -65, 197, a | o, P),
        this.buttons[e++].view = ee,
        this.buttons[e] = Ne(115, 73, 0, [IMAGES.BACK_BUTTON_OUT, IMAGES.BACK_BUTTON_IN, IMAGES.BACK_BUTTON_CLICK], 1, 0, function() {
            f(A)
        }, 309, 180, a | o, P),
        this.buttons[e++].view = ee;
        var de = e
          , _e = (this.buttons[e] = Ne(205, 67, 0, [IMAGES.SEASON1_PROFILE_OUT, IMAGES.SEASON1_PROFILE_IN, IMAGES.SEASON1_PROFILE_CLICK], 1, 0, function() {
            d(void 0, 0)
        }, -305, 125, a | o, P),
        this.buttons[e++].view = h,
        e)
          , ue = (this.buttons[e] = Ne(205, 67, 0, [IMAGES.SEASON2_PROFILE_OUT, IMAGES.SEASON2_PROFILE_IN, IMAGES.SEASON2_PROFILE_CLICK], 1, 0, function() {
            d(void 0, 1)
        }, -305, 170, a | o, P),
        this.buttons[e++].view = h,
        e)
          , le = (this.buttons[e] = Ne(205, 67, 0, [IMAGES.SEASON3_PROFILE_OUT, IMAGES.SEASON3_PROFILE_IN, IMAGES.SEASON3_PROFILE_CLICK], 1, 0, function() {
            d(void 0, 2)
        }, -305, 215, a | o, P),
        this.buttons[e++].view = h,
        e)
          , ce = (this.buttons[e] = Ne(205, 67, 0, [IMAGES.SEASON4_PROFILE_OUT, IMAGES.SEASON4_PROFILE_IN, IMAGES.SEASON4_PROFILE_CLICK], 1, 0, function() {
            d(void 0, 3)
        }, -305, 260, a | o, P),
        this.buttons[e++].view = h,
        e)
          , he = (this.buttons[e] = Ne(205, 67, 0, [IMAGES.SEASON5_PROFILE_OUT, IMAGES.SEASON5_PROFILE_IN, IMAGES.SEASON5_PROFILE_CLICK], 1, 0, function() {
            d(void 0, 3)
        }, -305, 305, a | o, P),
        this.buttons[e++].view = h,
        e)
          , Ee = (this.buttons[e] = Ne(460, 73, 0, [IMAGES.TOTAL_PROFILE_OUT, IMAGES.TOTAL_PROFILE_IN, IMAGES.TOTAL_PROFILE_CLICK], 1, 0, function() {
            d(-1)
        }, -180, 170, a | o, P),
        this.buttons[e++].view = h,
        e)
          , Te = (this.buttons[e] = Ne(222, 68, 0, [IMAGES.NORMAL_PROFILE_OUT, IMAGES.NORMAL_PROFILE_IN, IMAGES.NORMAL_PROFILE_CLICK], 1, 0, function() {
            d(Ke.MODE_PVP)
        }, -180, 215, a | o, P),
        this.buttons[e++].view = h,
        e)
          , Ae = (this.buttons[e] = Ne(222, 68, 0, [IMAGES.FOREST_PROFILE_OUT, IMAGES.FOREST_PROFILE_IN, IMAGES.FOREST_PROFILE_CLICK], 1, 0, function() {
            d(Ke.MODE_LEGACY)
        }, -180, 260, a | o, P),
        this.buttons[e++].view = h,
        e)
          , Ie = (this.buttons[e] = Ne(222, 68, 0, [IMAGES.ZOMBIE_PROFILE_OUT, IMAGES.ZOMBIE_PROFILE_IN, IMAGES.ZOMBIE_PROFILE_CLICK], 1, 0, function() {
            d(Ke.MODE_ZOMBIES)
        }, -60, 215, a | o, P),
        this.buttons[e++].view = h,
        e)
          , pe = (this.buttons[e] = Ne(222, 68, 0, [IMAGES.VAMPIRE_PROFILE_OUT, IMAGES.VAMPIRE_PROFILE_IN, IMAGES.VAMPIRE_PROFILE_CLICK], 1, 0, function() {
            d(Ke.MODE_VAMPIRES)
        }, -60, 260, a | o, P),
        this.buttons[e++].view = h,
        this.LEADERBOARD_TOTAL = e,
        this.buttons[e] = Ne(143, 66, 0, [IMAGES.TOTAL_LEAD_OUT, IMAGES.TOTAL_LEAD_IN, IMAGES.TOTAL_LEAD_CLICK], 1, 0, function() {
            Uo(void 0, De.LEADERBOARD_TOTAL)
        }, -298, 110, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_NORMAL = e,
        this.buttons[e] = Ne(104, 66, 0, [IMAGES.NORMAL_LEAD_OUT, IMAGES.NORMAL_LEAD_IN, IMAGES.NORMAL_LEAD_CLICK], 1, 0, function() {
            Uo(void 0, De.LEADERBOARD_NORMAL)
        }, -223, 110, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_FOREST = e,
        this.buttons[e] = Ne(110, 66, 0, [IMAGES.FOREST_LEAD_OUT, IMAGES.FOREST_LEAD_IN, IMAGES.FOREST_LEAD_CLICK], 1, 0, function() {
            Uo(void 0, De.LEADERBOARD_FOREST)
        }, -168, 110, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_ZOMBIE = e,
        this.buttons[e] = Ne(88, 66, 0, [IMAGES.ZOMBIE_LEAD_OUT, IMAGES.ZOMBIE_LEAD_IN, IMAGES.ZOMBIE_LEAD_CLICK], 1, 0, function() {
            Uo(void 0, De.LEADERBOARD_ZOMBIE)
        }, -110, 110, a | o, P),
        this.buttons[e++].view = I,
        this.LEADERBOARD_VAMPIRE = e,
        this.buttons[e] = Ne(88, 66, 0, [IMAGES.VAMPIRE_LEAD_OUT, IMAGES.VAMPIRE_LEAD_IN, IMAGES.VAMPIRE_LEAD_CLICK], 1, 0, function() {
            Uo(void 0, De.LEADERBOARD_VAMPIRE)
        }, -63, 110, a | o, P),
        this.buttons[e++].view = I,
        this.buttons[e] = Ne(86, 44, 0, [IMAGES.TERMS_BUTTON_OUT, IMAGES.TERMS_BUTTON_IN, IMAGES.TERMS_BUTTON_CLICK], 1, 0, function() {
            window.open("./terms.html", "_blank")
        }, 349, 290, a | o, P),
        this.buttons[e++].view = A,
        new w(COSMETICS.SKIN,FIRST_BUTTON_SKIN,function(e) {
            De.skin = e,
            1 === De.unlock.skin[e] && Cookies.set("starve_skin", "" + e, {
                expires: 30
            })
        }
        ,this.skin,this.unlock.skin))
          , ge = new w(COSMETICS.BAG,FIRST_BUTTON_BAG,function(e) {
            De.bag = e,
            1 === De.unlock.bag[e] && Cookies.set("starve_bag", "" + e, {
                expires: 30
            })
        }
        ,this.bag,this.unlock.bag)
          , Oe = new w(COSMETICS.BOOK,FIRST_BUTTON_BOOK,function(e) {
            De.book = e,
            1 === De.unlock.book[e] && Cookies.set("starve_book", "" + e, {
                expires: 30
            })
        }
        ,this.book,this.unlock.book)
          , be = new w(COSMETICS.CRATE,FIRST_BUTTON_CRATE,function(e) {
            De.dead = e,
            1 === De.unlock.dead[e] && Cookies.set("starve_dead", "" + e, {
                expires: 30
            })
        }
        ,this.dead,this.unlock.dead)
          , me = new w(COSMETICS.CRATE,FIRST_BUTTON_LOOT,function(e) {
            De.crate = e,
            1 === De.unlock.crate[e] && Cookies.set("starve_crate", "" + e, {
                expires: 30
            })
        }
        ,this.crate,this.unlock.crate)
          , Ce = new w(COSMETICS.ACCESSORY,FIRST_BUTTON_ACCESSORY,function(e) {
            De.accessory = e,
            1 === De.unlock.accessory[e] && Cookies.set("starve_accessory", "" + e, {
                expires: 30
            })
        }
        ,this.accessory,this.unlock.accessory);
        this.trigger_mousedown = function(e) {
            je.pos = S2(c.can, e);
            for (var t = 0; t < c.buttons.length; t++)
                c.buttons[t].info.active === B && c.buttons[t].trigger(c.can, je.pos, O2)
        }
        ,
        this.trigger_mouseup = function(e) {
            je.pos = S2(c.can, e);
            for (var t = 0; t < c.buttons.length; t++) {
                var i = c.buttons[t];
                if (i.info.active === B && i.trigger(c.can, je.pos, b2))
                    return void i.info.callback()
            }
        }
        ,
        this.current_cursor = !1,
        this.trigger_mousemove = function(e) {
            je.pos = S2(c.can, e);
            for (var t = !1, i = 0; i < c.buttons.length; i++)
                c.buttons[i].info.active === B && (t |= c.buttons[i].trigger(c.can, je.pos, g2));
            c.current_cursor !== t && (c.current_cursor = t,
            _.style.cursor = t ? c.cursor1 : c.cursor0)
        }
        ,
        this.add_event_listener = function() {
            window.addEventListener("mousedown", this.trigger_mousedown, !1),
            window.addEventListener("mouseup", this.trigger_mouseup, !1),
            window.addEventListener("mousemove", this.trigger_mousemove, !1)
        }
        ,
        this.remove_event_listener = function() {
            window.removeEventListener("mousedown", this.trigger_mousedown, !1),
            window.removeEventListener("mouseup", this.trigger_mouseup, !1),
            window.removeEventListener("mousemove", this.trigger_mousemove, !1)
        }
    }
    function no(a, ye) {
        for (var l = this, e = (this.can = a,
        this.ctx = ye,
        -1 < window.navigator.userAgent.indexOf("Edge") ? (this.cursor0 = "default",
        this.cursor1 = "pointer") : (this.cursor0 = "url('img/cursor0.png'), default",
        this.cursor1 = "url('img/cursor1.png'), pointer"),
        this.show_ui = 1,
        this.show_clock = 1,
        this.show_recipe_book = 1,
        this.show_quest = 1,
        this.team_box = {
            id: document.getElementById("team_box"),
            style: document.getElementById("team_box").style,
            update: function() {
                this.style.left = Math.floor(ke - 125) + "px",
                this.style.top = "110px"
            }
        },
        this.audio = {
            button_on: Ne(60, 60, 0, sprite[Le.SOUND_BUTTON_ON]),
            button_off: Ne(60, 60, 0, sprite[Le.SOUND_BUTTON_OFF])
        },
        this.sign = {
            open: !1,
            breads: 0,
            symbol: document.getElementById("sign_object"),
            symbol_id: 0,
            id: document.getElementById("sign_window"),
            style: document.getElementById("sign_window").style,
            button: Ne(60, 60, 0, sprite[Le.SIGN_BUTTON]),
            update_button: function() {
                var e = Math.floor(Math.floor((3 + Ye.craft.can_craft.length) / 4) * (10 + sprite[Le.INV_WOOD][0].width) + 35);
                this.button.info.translate.x = e,
                this.button.info.translate.y = 22
            },
            update: function() {
                this.style.left = Math.floor(ke - 150) + "px",
                this.style.top = Math.floor(b0 - 115) + "px"
            },
            quit: function() {
                Je.sign.style.display = "none",
                Je.sign.open = !1
            },
            select: function() {
                Je.sign.open = !Je.sign.open,
                Je.sign.open ? Je.sign.style.display = "inline-block" : Je.sign.style.display = "none"
            },
            ok: function() {
                client.update_sign(Ye.sign.iid, Je.sign.symbol_id),
                Je.sign.select()
            },
            up: function() {
                Je.sign.symbol_id = 0 === Je.sign.symbol_id ? H2.SYMBOL_MAX - 1 : Je.sign.symbol_id - 1,
                Je.sign.symbol.src = "./img/sign" + Je.sign.symbol_id + ".png"
            },
            down: function() {
                Je.sign.symbol_id = (Je.sign.symbol_id + 1) % H2.SYMBOL_MAX,
                Je.sign.symbol.src = "./img/sign" + Je.sign.symbol_id + ".png"
            }
        },
        document.getElementById("quit_sign").addEventListener("mouseup", this.sign.select, !1),
        document.getElementById("ok_sign").addEventListener("mouseup", this.sign.ok, !1),
        document.getElementById("sign_up").addEventListener("mouseup", this.sign.up, !1),
        document.getElementById("sign_down").addEventListener("mouseup", this.sign.down, !1),
        this.market = {
            open: !1,
            id: document.getElementById("shop_market"),
            style: document.getElementById("shop_market").style,
            items: [{
                id: 0,
                name: "wood",
                val: 1,
                b: 1,
                a: 3,
                img_item: Le.INV_WOOD
            }, {
                id: 1,
                name: "stone",
                val: 1,
                b: 1,
                a: 4,
                img_item: Le.INV_STONE
            }, {
                id: 2,
                name: "gold",
                val: 1,
                b: 1,
                a: 6,
                img_item: Le.INV_GOLD
            }, {
                id: 3,
                name: "diamond",
                val: 4,
                b: 4,
                a: 1,
                img_item: Le.INV_DIAMOND
            }, {
                id: 4,
                name: "amethyst",
                val: 8,
                b: 8,
                a: 1,
                img_item: Le.INV_AMETHYST
            }, {
                id: 5,
                name: "reidite",
                val: 16,
                b: 16,
                a: 1,
                img_item: Le.INV_REIDITE
            }, {
                id: 6,
                name: "pumpkin_seed",
                val: 10,
                b: 10,
                a: 1,
                img_item: Le.INV_PUMPKIN_SEED
            }, {
                id: 7,
                name: "carrot_seed",
                val: 16,
                b: 16,
                a: 1,
                img_item: Le.INV_CARROT_SEED
            }, {
                id: 8,
                name: "tomato_seed",
                val: 20,
                b: 20,
                a: 1,
                img_item: Le.INV_TOMATO_SEED
            }, {
                id: 9,
                name: "thornbush_seed",
                val: 30,
                b: 30,
                a: 1,
                img_item: Le.INV_THORNBUSH_SEED
            }, {
                id: 10,
                name: "garlic_seed",
                val: 40,
                b: 40,
                a: 1,
                img_item: Le.INV_GARLIC_SEED
            }, {
                id: 11,
                name: "watermelon_seed",
                val: 60,
                b: 60,
                a: 1,
                img_item: Le.INV_WATERMELON_SEED
            }],
            button: Ne(60, 60, 0, sprite[Le.MARKET_BUTTON]),
            update: function() {
                this.style.left = Math.floor(ke - 450) + "px",
                this.style.top = Math.floor(b0 - 270) + "px"
            },
            select: function() {
                Je.market.open = !Je.market.open,
                Je.market.open ? Je.market.style.display = "inline-block" : Je.market.style.display = "none"
            },
            quit: function() {
                Je.market.style.display = "none",
                Je.market.open = !1
            },
            buy: function() {
                client.buy_market(this.itemMarket)
            },
            change: function() {
                var e;
                this.id;
                e = 1 === this.itemMarket.a ? Math.floor(Number(this.value) * this.itemMarket.b) : Math.floor(Number(this.value) / this.itemMarket.a),
                this.itemMarket.val = e,
                document.getElementById(this.itemMarket.name + "_trad_number").innerHTML = e + ""
            }
        },
        document.getElementById("quit_market").addEventListener("mouseup", this.market.quit, !1),
        [["mouseup", this.market.buy, "buy_"], ["click", this.market.change, ""], ["change", this.market.change, ""], ["keypress", this.market.keypress, ""]]), t = 0; t < this.market.items.length; t++) {
            var i = this.market.items[t];
            document.getElementById(i.name + "_market").src = void 0 === sprite[i.img_item][0]._src ? sprite[i.img_item][0].src : sprite[i.img_item][0]._src,
            1 === i.a ? (document.getElementById(i.name + "_trad_number").innerHTML = i.b,
            document.getElementById(i.name + "_number").value = 1,
            document.getElementById(i.name + "_number").step = 1,
            document.getElementById(i.name + "_number").min = 1,
            document.getElementById(i.name + "_number").max = Math.floor(255 / i.b)) : (document.getElementById(i.name + "_trad_number").innerHTML = 1,
            document.getElementById(i.name + "_number").value = i.a,
            document.getElementById(i.name + "_number").step = i.a,
            document.getElementById(i.name + "_number").min = i.a),
            document.getElementById("buy_" + i.name + "_number").itemMarket = i,
            document.getElementById(i.name + "_number").itemMarket = i;
            for (var n = 0; n < e.length; n++)
                document.getElementById(e[n][2] + i.name + "_number").addEventListener(e[n][0], e[n][1], !1)
        }
        $("[type='number']").keypress(function(e) {
            e.preventDefault()
        }),
        this.options = {
            open: !1,
            id: document.getElementById("option_in_game"),
            style: document.getElementById("option_in_game").style,
            agree: document.getElementById("agree_ing").style,
            cancel_agree: document.getElementById("cancel_agree_ing").style,
            quests_agree: document.getElementById("quest_agree_ing").style,
            spectator_agree: document.getElementById("spectator_agree_ing").style,
            feed_agree: document.getElementById("auto_feed_agree_ing").style,
            info_box_agree: document.getElementById("info_agree_ing").style,
            aliasing_agree: document.getElementById("pixelated_agree_ing").style,
            button: Ne(60, 60, 0, sprite[Le.OPTION_BUTTON]),
            select_options: function() {
                Je.options.open = !Je.options.open,
                Je.options.open ? Je.options.style.display = "inline-block" : Je.options.style.display = "none"
            },
            azerty: function() {
                De.set_azerty()
            },
            qwerty: function() {
                De.set_qwerty()
            },
            high: function() {
                De.high_quality()
            },
            low: function() {
                De.low_quality()
            },
            checkbox: function() {
                Je.safe_delete.checkbox()
            },
            cancel_checkbox: function() {
                Je.safe_cancel.checkbox()
            },
            quest_checkbox: function() {
                Je.quests.checkbox()
            },
            spectator_checkbox: function() {
                Ye.show_spectators.invert()
            },
            feed_checkbox: function() {
                Ye.auto_feed.invert()
            },
            quit: function() {
                Je.options.style.display = "none",
                Je.options.open = !1
            },
            update: function() {
                this.style.left = Math.floor(ke - 235) + "px",
                this.style.top = Math.floor(b0 - 170) + "px"
            }
        },
        document.getElementById("azerty_ing").addEventListener("mouseup", this.options.azerty, !1),
        document.getElementById("qwerty_ing").addEventListener("mouseup", this.options.qwerty, !1),
        document.getElementById("low_ing").addEventListener("mouseup", this.options.low, !1),
        document.getElementById("high_ing").addEventListener("mouseup", this.options.high, !1),
        document.getElementById("quit_opt").addEventListener("mouseup", this.options.quit, !1),
        document.getElementById("case_agree_opt").addEventListener("mouseup", this.options.checkbox, !1),
        document.getElementById("quest_case_agree_opt").addEventListener("mouseup", this.options.quest_checkbox, !1),
        document.getElementById("cancel_case_agree_opt").addEventListener("mouseup", this.options.cancel_checkbox, !1),
        document.getElementById("spectator_case_agree_opt").addEventListener("mouseup", this.options.spectator_checkbox, !1),
        document.getElementById("auto_feed_case_agree_opt").addEventListener("mouseup", this.options.feed_checkbox, !1),
        this.safe_cancel = {
            open: !1,
            activated: Cookies.get("starve_cancel") && "0" === Cookies.get("starve_cancel") ? 0 : 1,
            id: document.getElementById("cancel_sure_delete"),
            style: document.getElementById("cancel_sure_delete").style,
            agree: document.getElementById("cancel_agree").style,
            button: 0,
            i: 0,
            quit: function() {
                Je.safe_cancel.style.display = "none",
                Je.safe_cancel.open = !1
            },
            yes: function() {
                Ye.craft.crafting && client.cancel_crafting(),
                Je.safe_cancel.quit()
            },
            checkbox: function() {
                Je.safe_cancel.activated ? (Cookies.set("starve_cancel", "0"),
                Je.safe_cancel.agree.display = "inline-block",
                Je.options.cancel_agree.display = "none") : (Cookies.set("starve_cancel", "1"),
                Je.safe_cancel.agree.display = "none",
                Je.options.cancel_agree.display = "inline-block"),
                Je.safe_cancel.activated = !Je.safe_cancel.activated
            },
            del: function() {
                this.activated ? (this.style.display = "inline-block",
                this.open = !0) : this.yes()
            },
            update: function() {
                this.style.left = Math.floor(ke - 235) + "px",
                this.style.top = Math.floor(b0 - 130) + "px"
            }
        },
        this.safe_cancel.id.oncontextmenu = function() {
            return !1
        }
        ,
        this.safe_cancel.agree.display = "none",
        this.safe_cancel.activated ? this.options.cancel_agree.display = "inline-block" : this.options.cancel_agree.display = "none",
        document.getElementById("cancel_yes_delete").addEventListener("mouseup", this.safe_cancel.yes, !1),
        document.getElementById("cancel_no_delete").addEventListener("mouseup", this.safe_cancel.quit, !1),
        document.getElementById("cancel_case_agree").addEventListener("mouseup", this.safe_cancel.checkbox, !1),
        document.addEventListener("cancel_sure_delete", function(e) {
            e.preventDefault()
        }, !1),
        this.aliasing = {
            activated: Cookies.get("starve_aliasing") && "0" === Cookies.get("starve_aliasing") ? 0 : 1,
            set_aliasing: function(e) {
                document.getElementById("game_canvas").style.imageRendering = e ? "pixelated" : "auto"
            },
            checkbox: function() {
                0 === Je.aliasing.activated ? (Cookies.set("starve_aliasing", "1"),
                Je.aliasing.set_aliasing(1),
                Je.options.aliasing_agree.display = "inline-block") : (Cookies.set("starve_aliasing", "0"),
                Je.aliasing.set_aliasing(0),
                Je.options.aliasing_agree.display = "none"),
                Je.aliasing.activated = (Je.aliasing.activated + 1) % 2
            }
        },
        1 === this.aliasing.activated ? this.options.aliasing_agree.display = "inline-block" : (this.aliasing.set_aliasing(0),
        this.options.aliasing_agree.display = "none"),
        document.getElementById("pixelated_case_agree_opt").addEventListener("mouseup", this.aliasing.checkbox, !1),
        this.info_box = {
            activated: Cookies.get("starve_info_box") && "0" === Cookies.get("starve_info_box") ? 0 : 1,
            display: 0,
            x: 0,
            y: 0,
            id: 0,
            craft: 0,
            checkbox: function() {
                0 === Je.info_box.activated ? (Cookies.set("starve_info_box", "1"),
                Je.options.info_box_agree.display = "inline-block") : (Cookies.set("starve_info_box", "0"),
                Je.options.info_box_agree.display = "none"),
                Je.info_box.activated = (Je.info_box.activated + 1) % 2
            },
            trigger: function(e, t, i) {
                return e && this.activated && (this.display = 1,
                this.id = 0 === i ? t.id : S[t.id].id2,
                this.x = t.info.translate.x + 80,
                this.y = t.info.translate.y,
                this.craft = i),
                e
            }
        },
        1 === this.info_box.activated ? this.options.info_box_agree.display = "inline-block" : this.options.info_box_agree.display = "none",
        document.getElementById("info_case_agree_opt").addEventListener("mouseup", this.info_box.checkbox, !1),
        Cookies.get("starve_scale") && (R0 = Number(Cookies.get("starve_scale")),
        document.getElementById("input_ratio").value = R0,
        R0 *= devicePixelRatio / window.backingStoreRatio,
        on()),
        this.change_ratio = function() {
            Cookies.set("starve_scale", "" + document.getElementById("input_ratio").value),
            R0 = document.getElementById("input_ratio").value * (devicePixelRatio / window.backingStoreRatio),
            on()
        }
        ,
        document.getElementById("input_ratio").addEventListener("input", this.change_ratio, !1),
        this.safe_delete = {
            open: !1,
            activated: Cookies.get("starve_safe") && "0" === Cookies.get("starve_safe") ? 0 : 1,
            id: document.getElementById("sure_delete"),
            style: document.getElementById("sure_delete").style,
            agree: document.getElementById("agree").style,
            button: 0,
            i: 0,
            quit: function() {
                Je.safe_delete.style.display = "none",
                Je.safe_delete.open = !1
            },
            all: function() {
                Ye.build.wait || (Ye.craft.preview < 0 && Ye.craft.id < 0 && client.delete_inv(Je.safe_delete.button),
                Je.safe_delete.quit())
            },
            recycle: function() {
                Ye.craft.workbench && !Ye.build.wait && (Ye.craft.preview < 0 && Ye.craft.id < 0 && client.recycle_inv(Je.safe_delete.button),
                Je.safe_delete.quit())
            },
            one: function() {
                Ye.build.wait || (Ye.craft.preview < 0 && Ye.craft.id < 0 && client.delete_one_inv(Je.safe_delete.button),
                Je.safe_delete.quit())
            },
            checkbox: function() {
                Je.safe_delete.activated ? (Cookies.set("starve_safe", "0"),
                Je.safe_delete.agree.display = "inline-block",
                Je.options.agree.display = "none") : (Cookies.set("starve_safe", "1"),
                Je.safe_delete.agree.display = "none",
                Je.options.agree.display = "inline-block"),
                Je.safe_delete.activated = !Je.safe_delete.activated
            },
            del: function(e) {
                this.button = e,
                document.getElementById("item_to_del").src = void 0 === sprite[He[e].img][0]._src ? sprite[He[e].img][0].src : sprite[He[e].img][0]._src,
                He[e].recycle && !Ye.zombie && Ye.craft.workbench ? document.getElementById("recycle_delete").style.display = "inline-block" : document.getElementById("recycle_delete").style.display = "none",
                this.activated ? (this.style.display = "inline-block",
                this.open = !0) : this.all()
            },
            update: function() {
                this.style.left = Math.floor(ke - 235) + "px",
                this.style.top = Math.floor(b0 - 175) + "px"
            }
        },
        this.safe_delete.agree.display = "none",
        this.safe_delete.activated ? this.options.agree.display = "inline-block" : this.options.agree.display = "none",
        document.getElementById("one_delete").addEventListener("mouseup", this.safe_delete.one, !1),
        document.getElementById("yes_delete").addEventListener("mouseup", this.safe_delete.all, !1),
        document.getElementById("recycle_delete").addEventListener("mouseup", this.safe_delete.recycle, !1),
        document.getElementById("no_delete").addEventListener("mouseup", this.safe_delete.quit, !1),
        document.getElementById("case_agree").addEventListener("mouseup", this.safe_delete.checkbox, !1),
        this.shop = {
            open: !1,
            kit: -1,
            button: Ne(60, 60, 0, sprite[Le.SHOP]),
            id: document.getElementById("shop_starterkit"),
            style: document.getElementById("shop_starterkit").style,
            update: function() {
                this.style.left = Math.floor(ke - 300) + "px",
                this.style.top = Math.floor(b0 - 215) + "px"
            },
            quit: function() {
                Je.shop.open = !1,
                Je.shop.style.display = "none"
            },
            select: function() {
                Je.shop.open = !Je.shop.open,
                Je.shop.open ? Je.shop.style.display = "inline-block" : Je.shop.style.display = "none"
            },
            buy: function() {
                0 <= Je.shop.kit && (client.choose_kit(Je.shop.kit),
                Je.shop.quit(),
                ga) && ga("send", "event", "Game", "kit", "" + Je.shop.kit)
            },
            init: function() {
                var e = Ye.shop.value;
                document.getElementById("points_bank").innerHTML = Utils.simplify_number(e) + " points";
                for (var t = 0; t < G2.length; t++)
                    G2[t].price > e ? document.getElementById("starter" + (t + 1)).style.opacity = "0.4" : document.getElementById("starter" + (t + 1)).style.opacity = "1";
                for (t = 1; t < 13; t++)
                    document.getElementById("inv_shop" + t).src = "./img/empty-shop.png",
                    document.getElementById("amount_shop" + t).innerHTML = "";
                document.getElementById("buy_kit").style.opacity = "0.2"
            },
            get_starter: function() {
                e = 8 < this.id.length ? Number(this.id.charAt(7) + this.id.charAt(8)) : Number(this.id.charAt(7));
                var e, t = G2[e - 1];
                Ye.shop.value >= t.price ? (Je.shop.kit = e,
                document.getElementById("buy_kit").style.opacity = "1") : (Je.shop.kit = -1,
                document.getElementById("buy_kit").style.opacity = "0.2");
                for (var t = t.items, i = 1, n = 1; i < t.length + 1; i++)
                    t[i - 1][1] !== Ge.BAG && (document.getElementById("inv_shop" + n).style.display = "inline-block",
                    document.getElementById("inv_shop" + n).src = void 0 === sprite[He[t[i - 1][1]].img][0]._src ? sprite[He[t[i - 1][1]].img][0].src : sprite[He[t[i - 1][1]].img][0]._src,
                    document.getElementById("amount_shop" + n).innerHTML = "" + t[i - 1][0],
                    n++);
                for (; n < 13; n++)
                    document.getElementById("inv_shop" + n).src = "./img/empty-shop.png",
                    document.getElementById("amount_shop" + n).innerHTML = ""
            }
        },
        document.getElementById("quit3").addEventListener("mouseup", this.shop.quit, !1),
        document.getElementById("buy_kit").addEventListener("mouseup", this.shop.buy, !1);
        for (n = 1; n < 11; n++)
            document.getElementById("starter" + n).addEventListener("mouseup", this.shop.get_starter, !1);
        this.quests = {
            open: !1,
            activated: Cookies.get("starve_quests") && "1" === Cookies.get("starve_quests") ? 1 : 0,
            button: Ne(60, 60, 0, sprite[Le.QUEST_BUTTON]),
            id: document.getElementById("chronoquest"),
            style: document.getElementById("chronoquest").style,
            update: function() {
                this.style.left = Math.floor(ke - 420) + "px",
                this.style.top = Math.floor(b0 - 270) + "px"
            },
            quit: function() {
                Je.quests.style.display = "none",
                Je.quests.open = !1
            },
            select: function() {
                Je.quests.open = !Je.quests.open,
                Je.quests.open ? Je.quests.style.display = "inline-block" : Je.quests.style.display = "none"
            },
            list: [],
            reset: function() {
                for (var e = 0; e < B2.length; e++)
                    this.list[e] = 1,
                    document.getElementById("timeremain_" + e).style.display = "inline-block",
                    document.getElementById("time_finished_" + e).style.display = "none",
                    document.getElementById("claim_reward_" + e).style.display = "none"
            },
            timer: 0,
            born: 0,
            update_chrono: function() {
                if (Je.quests.open) {
                    var e = performance.now();
                    if (!(e - this.timer < 1e3)) {
                        this.timer = e;
                        for (var t, i = 0; i < B2.length; i++)
                            Je.quests.list[i] && (t = B2[i].time - (e - Fe.clock.init + Je.quests.born),
                            document.getElementById("timeremain_" + i).innerHTML = 96e4 < t ? Math.floor(t / 48e4) + " days" : 48e4 < t ? Math.floor(t / 48e4) + " day" : 6e4 < t ? Math.floor(t / 6e4) + " min" : Math.floor(t / 1e3) + " sec")
                    }
                }
            },
            restore: function(e) {
                for (var t = 0; t < e.length; t++)
                    1 != e[t] && Je.quests.modify_simple(t, e[t])
            },
            modify_simple: function(e, t) {
                3 !== t || 11 !== e && 12 !== e || (Ye.inv.update_bag_size(0, 1),
                Je.update_inv_buttons()),
                document.getElementById("timeremain_" + e).innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
                1 < t ? (document.getElementById("time_finished_" + e).innerHTML = "SUCCEED",
                document.getElementById("timeremain_" + e).style.display = "none") : 0 === t && (document.getElementById("time_finished_" + e).innerHTML = "FAILED",
                document.getElementById("timeremain_" + e).style.display = "none"),
                document.getElementById("claim_reward_" + e).style.display = 2 === t ? "inline-block" : "none",
                document.getElementById("time_finished_" + e).style.display = "inline",
                Je.quests.list[e] = 0
            },
            modify: function(e, t) {
                Je.quests.modify_simple(e, t),
                Je.quests.activated && (Je.quests.open = !0,
                Je.quests.style.display = "inline-block")
            },
            checkbox: function() {
                Je.quests.activated ? (Cookies.set("starve_quests", "0"),
                Je.options.quests_agree.display = "none") : (Cookies.set("starve_quests", "1"),
                Je.options.quests_agree.display = "inline-block"),
                Je.quests.activated = !Je.quests.activated
            },
            claim: function() {
                var e = Number(this.id.charAt(13))
                  , t = Number(this.id.charAt(14));
                "" !== this.id.charAt(14) && 0 <= t && t <= 9 && (e = 10 * e + t),
                client.claim_quest_reward(e)
            }
        },
        this.quests.activated ? this.options.quests_agree.display = "inline-block" : this.options.quests_agree.display = "none",
        document.getElementById("quit_chronoquest").addEventListener("mouseup", this.quests.quit, !1);
        for (n = 0; n < B2.length; n++)
            document.getElementById("claim_reward_" + n).addEventListener("mouseup", this.quests.claim, !1);
        this.craft_list = {
            open: !1,
            button: Ne(60, 60, 0, sprite[Le.RECIPE_BUTTON]),
            list: {
                id: document.getElementById("recipe_craft"),
                style: document.getElementById("recipe_craft").style,
                recipes: [],
                category: 0,
                update: function() {
                    this.style.left = Math.floor(ke - 335) + "px",
                    this.style.top = Math.floor(b0 - 215) + "px"
                },
                quit: function() {
                    document.getElementById("recipe_craft").style.display = "none",
                    Je.craft_list.open = !1
                },
                previous: function() {
                    document.getElementById("recipe_craft").style.display = "none",
                    document.getElementById("home_craft").style.display = "inline-block"
                },
                get_recipe: function(e) {
                    (t = this.recipes[e]).o ? document.getElementById("watercraft").style.display = "inline-block" : document.getElementById("watercraft").style.display = "none",
                    t.f ? document.getElementById("firecraft").style.display = "inline-block" : document.getElementById("firecraft").style.display = "none",
                    t.w ? document.getElementById("workcraft").style.display = "inline-block" : document.getElementById("workcraft").style.display = "none",
                    t.e ? document.getElementById("wellcraft").style.display = "inline-block" : document.getElementById("wellcraft").style.display = "none";
                    for (var t = t.r, e = 0, i = 1; e < t.length; e++)
                        document.getElementById("inv" + i).style.display = "inline-block",
                        document.getElementById("inv" + i).src = void 0 === sprite[He[t[e][0]].img][0]._src ? sprite[He[t[e][0]].img][0].src : sprite[He[t[e][0]].img][0]._src,
                        document.getElementById("numb" + i).innerHTML = "" + t[e][1],
                        i++;
                    for (; i < 6; i++)
                        document.getElementById("inv" + i).style.display = "none",
                        document.getElementById("numb" + i).innerHTML = ""
                },
                select: function(e) {
                    this.category = e,
                    document.getElementById("home_craft").style.display = "none",
                    document.getElementById("workcraft").style.display = "none",
                    document.getElementById("firecraft").style.display = "none",
                    document.getElementById("watercraft").style.display = "none",
                    document.getElementById("wellcraft").style.display = "none",
                    document.getElementById("recipe_craft").style.display = "inline-block",
                    document.getElementById("inv1").style.display = "none",
                    document.getElementById("inv2").style.display = "none",
                    document.getElementById("inv3").style.display = "none",
                    document.getElementById("inv4").style.display = "none",
                    document.getElementById("inv5").style.display = "none",
                    document.getElementById("numb1").innerHTML = "",
                    document.getElementById("numb2").innerHTML = "",
                    document.getElementById("numb3").innerHTML = "",
                    document.getElementById("numb4").innerHTML = "",
                    document.getElementById("numb5").innerHTML = "";
                    for (var t = 0, i = 0; t < S.length; t++) {
                        var n = S[t];
                        e === n.t && (this.recipes[i] = n,
                        i++,
                        document.getElementById("img_" + i).style.display = "inline-block",
                        document.getElementById("img_" + i).src = void 0 === sprite[He[n.id2].img][0]._src ? sprite[He[n.id2].img][0].src : sprite[He[n.id2].img][0]._src)
                    }
                    for (i++; i < 49; i++)
                        document.getElementById("img_" + i).style.display = "none"
                }
            },
            home: {
                id: document.getElementById("home_craft"),
                style: document.getElementById("home_craft").style,
                update: function() {
                    this.style.left = Math.floor(ke - 285) + "px",
                    this.style.top = Math.floor(b0 - 170) + "px"
                },
                quit: function() {
                    document.getElementById("home_craft").style.display = "none",
                    Je.craft_list.open = !1
                }
            },
            select_book: function() {
                this.open = !this.open,
                this.open ? document.getElementById("home_craft").style.display = "inline-block" : (document.getElementById("home_craft").style.display = "none",
                document.getElementById("recipe_craft").style.display = "none")
            }
        },
        document.getElementById("quit").addEventListener("mouseup", this.craft_list.home.quit, !1),
        document.getElementById("quitmenu").addEventListener("mouseup", this.craft_list.list.quit, !1),
        document.getElementById("backhome").addEventListener("mouseup", this.craft_list.list.previous, !1),
        document.getElementById("hatcategory").addEventListener("mouseup", function() {
            Je.craft_list.list.select(T.CLOTHES)
        }, !1),
        document.getElementById("weaponcategory").addEventListener("mouseup", function() {
            Je.craft_list.list.select(T.WEAPONS)
        }, !1),
        document.getElementById("toolcategory").addEventListener("mouseup", function() {
            Je.craft_list.list.select(T.TOOLS)
        }, !1),
        document.getElementById("foodcategory").addEventListener("mouseup", function() {
            Je.craft_list.list.select(T.FOODS)
        }, !1),
        document.getElementById("placeablecategory").addEventListener("mouseup", function() {
            Je.craft_list.list.select(T.Utils)
        }, !1),
        document.getElementById("constructioncategory").addEventListener("mouseup", function() {
            Je.craft_list.list.select(T.BASES)
        }, !1),
        document.getElementById("img_1").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(0)
        }, !1),
        document.getElementById("img_2").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(1)
        }, !1),
        document.getElementById("img_3").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(2)
        }, !1),
        document.getElementById("img_4").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(3)
        }, !1),
        document.getElementById("img_5").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(4)
        }, !1),
        document.getElementById("img_6").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(5)
        }, !1),
        document.getElementById("img_7").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(6)
        }, !1),
        document.getElementById("img_8").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(7)
        }, !1),
        document.getElementById("img_9").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(8)
        }, !1),
        document.getElementById("img_10").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(9)
        }, !1),
        document.getElementById("img_11").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(10)
        }, !1),
        document.getElementById("img_12").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(11)
        }, !1),
        document.getElementById("img_13").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(12)
        }, !1),
        document.getElementById("img_14").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(13)
        }, !1),
        document.getElementById("img_15").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(14)
        }, !1),
        document.getElementById("img_16").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(15)
        }, !1),
        document.getElementById("img_17").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(16)
        }, !1),
        document.getElementById("img_18").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(17)
        }, !1),
        document.getElementById("img_19").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(18)
        }, !1),
        document.getElementById("img_20").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(19)
        }, !1),
        document.getElementById("img_21").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(20)
        }, !1),
        document.getElementById("img_22").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(21)
        }, !1),
        document.getElementById("img_23").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(22)
        }, !1),
        document.getElementById("img_24").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(23)
        }, !1),
        document.getElementById("img_25").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(24)
        }, !1),
        document.getElementById("img_26").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(25)
        }, !1),
        document.getElementById("img_27").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(26)
        }, !1),
        document.getElementById("img_28").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(27)
        }, !1),
        document.getElementById("img_29").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(28)
        }, !1),
        document.getElementById("img_30").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(29)
        }, !1),
        document.getElementById("img_31").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(30)
        }, !1),
        document.getElementById("img_32").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(31)
        }, !1),
        document.getElementById("img_33").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(32)
        }, !1),
        document.getElementById("img_34").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(33)
        }, !1),
        document.getElementById("img_35").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(34)
        }, !1),
        document.getElementById("img_36").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(35)
        }, !1),
        document.getElementById("img_37").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(36)
        }, !1),
        document.getElementById("img_38").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(37)
        }, !1),
        document.getElementById("img_39").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(38)
        }, !1),
        document.getElementById("img_40").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(39)
        }, !1),
        document.getElementById("img_41").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(40)
        }, !1),
        document.getElementById("img_42").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(41)
        }, !1),
        document.getElementById("img_43").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(42)
        }, !1),
        document.getElementById("img_44").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(43)
        }, !1),
        document.getElementById("img_45").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(44)
        }, !1),
        document.getElementById("img_46").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(45)
        }, !1),
        document.getElementById("img_47").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(46)
        }, !1),
        document.getElementById("img_48").addEventListener("mousedown", function() {
            Je.craft_list.list.get_recipe(47)
        }, !1),
        this.minimap = {
            translate: {
                x: 0,
                y: 0
            },
            marker: {
                x: -1,
                y: -1
            },
            players: [],
            focus: function(e) {
                var t = this.translate.y + (0 < Ye.inv.can_select.length ? -120 : -50);
                e.x > this.translate.x && e.x < this.translate.x + 193 && e.y > t && e.y < t + 193 && (this.marker.x = e.x - this.translate.x,
                this.marker.y = e.y - t)
            }
        },
        this.leaderboard = {
            translate: {
                x: 0,
                y: 0
            },
            img: sprite[Le.LEADERBOARD],
            can: document.createElement("canvas")
        },
        this.leaderboard.can.width = this.leaderboard.img.width,
        this.leaderboard.can.height = this.leaderboard.img.height,
        this.leaderboard.ctx = this.leaderboard.can.getContext("2d"),
        this.gauges = {
            translate: {
                x: 0,
                y: 0
            },
            img: sprite[Le.GAUGES],
            draw: In,
            y: 0
        },
        this.leave_team = function() {
            (div = document.getElementById("team_box")).innerHTML = "",
            div.innerHTML += '<div id="leader"><img src="./img/leaderlogo.png" style="width:25px;margin-right:5px;" ></img>' + Fe.players[Ye.team[0]].nickname + "</div";
            for (var e = 1; e < Ye.team.length; e++)
                div.innerHTML += '<div class="nicknames"> <div style="display:inline-block;padding-top:7px;">' + Fe.players[Ye.team[e]].nickname + "</div></div>";
            div.innerHTML += '<div id="leave" style="display:inline-block;">LEAVE</div></div>',
            div.style.display = "inline-block",
            document.getElementById("leave").addEventListener("click", client.leave_team, !1)
        }
        ,
        this.show_team = function() {
            (div = document.getElementById("team_box")).innerHTML = "",
            div.innerHTML += '<div id="leader"><img src="./img/leaderlogo.png" style="width:25px;margin-right:5px;" ></img>' + Fe.players[Ye.team[0]].nickname + "</div";
            for (var e = 1; e < Ye.team.length; e++)
                div.innerHTML += '<div class="nicknames"> <div style="display:inline-block;padding-top:7px;">' + Fe.players[Ye.team[e]].nickname + "</div></div>";
            div.innerHTML += "</div>",
            div.style.display = "inline-block"
        }
        ,
        this.manage_team = function() {
            (div = document.getElementById("team_box")).innerHTML = "",
            div.innerHTML += '<div id="leader"><img src="./img/leaderlogo.png" style="width:25px;margin-right:5px;" ></img>' + Fe.players[Ye.team[0]].nickname + "</div";
            for (var e = 1; e < Ye.team.length; e++)
                div.innerHTML += '<div class="nicknames"> <div style="display:inline-block;padding-top:7px;">' + Fe.players[Ye.team[e]].nickname + '</div><div class="eject_member" id="eject_member' + e + '"><img src="./img/close-team.png" style="width:20px;padding:5px;"></img></div>';
            0 === Ye.totem.lock ? div.innerHTML += '<div id="lock_team" style="display:inline-block;">LOCK</div></div>' : div.innerHTML += '<div id="lock_team" style="display:inline-block;">UNLOCK</div></div>',
            document.getElementById("lock_team").addEventListener("click", client.lock_team, !1),
            div.style.display = "inline-block";
            for (e = 1; e < Ye.team.length; e++)
                switch (e) {
                case 1:
                    document.getElementById("eject_member" + e).addEventListener("click", function() {
                        client.kick_team(1)
                    }, !1);
                    break;
                case 2:
                    document.getElementById("eject_member" + e).addEventListener("click", function() {
                        client.kick_team(2)
                    }, !1);
                    break;
                case 3:
                    document.getElementById("eject_member" + e).addEventListener("click", function() {
                        client.kick_team(3)
                    }, !1);
                    break;
                case 4:
                    document.getElementById("eject_member" + e).addEventListener("click", function() {
                        client.kick_team(4)
                    }, !1);
                    break;
                case 5:
                    document.getElementById("eject_member" + e).addEventListener("click", function() {
                        client.kick_team(5)
                    }, !1);
                    break;
                case 6:
                    document.getElementById("eject_member" + e).addEventListener("click", function() {
                        client.kick_team(6)
                    }, !1);
                    break;
                case 7:
                    document.getElementById("eject_member" + e).addEventListener("click", function() {
                        client.kick_team(7)
                    }, !1);
                    break;
                case 8:
                    document.getElementById("eject_member" + e).addEventListener("click", function() {
                        client.kick_team(8)
                    }, !1)
                }
        }
        ,
        this.team_buttons = [],
        this.team_buttons[H2.TEAM_LEAVE] = {
            button: Ne(60, 60, 0, sprite[Le.TEAM_BUTTON]),
            action: this.leave_team
        },
        this.team_buttons[H2.TEAM_JOIN] = {
            button: Ne(60, 60, 0, sprite[Le.TEAM_BUTTON]),
            action: client.join_team
        },
        this.team_buttons[H2.TEAM_MANAGE] = {
            button: Ne(60, 60, 0, sprite[Le.MANAGE_TEAM_BUTTON]),
            action: this.manage_team
        },
        this.team_buttons[H2.TEAM_SHOW] = {
            button: Ne(60, 60, 0, sprite[Le.SHOW_TEAM_BUTTON]),
            action: this.show_team
        },
        this.team_buttons[H2.TEAM_FULL] = {
            button: Ne(60, 60, 0, sprite[Le.FULL_TEAM_BUTTON]),
            action: function() {}
        },
        this.team_buttons_id = -1,
        this.bread_oven_wood_button = Ne(60, 60, 0, sprite[Le.BREAD_OVEN_WOOD]),
        this.bread_oven_bread_button = Ne(60, 60, 0, sprite[Le.BREAD_OVEN_BREAD]),
        this.bread_oven_flour_button = Ne(60, 60, 0, sprite[Le.WINDMILL_FLOUR]),
        this.windmill_wheat_button = Ne(60, 60, 0, sprite[Le.WINDMILL_WHEAT_SEED]),
        this.windmill_flour_button = Ne(60, 60, 0, sprite[Le.WINDMILL_FLOUR]),
        this.extractor_wood_button = Ne(60, 60, 0, sprite[Le.INV_WOOD]),
        this.extractor_stone_button = Ne(60, 60, 0, sprite[Le.INV_STONE]),
        this.extractor_gold_button = Ne(60, 60, 0, sprite[Le.INV_GOLD]),
        this.extractor_diamond_button = Ne(60, 60, 0, sprite[Le.INV_DIAMOND]),
        this.extractor_amethyst_button = Ne(60, 60, 0, sprite[Le.INV_AMETHYST]),
        this.extractor_reidite_button = Ne(60, 60, 0, sprite[Le.INV_REIDITE]),
        this.furnace_button = Ne(60, 60, 0, sprite[Le.FURNACE_BUTTON]),
        this.chest_padlock = Ne(60, 60, 0, sprite[Le.PADLOCK]),
        this.chest_lockpick = Ne(60, 60, 0, sprite[Le.KEY]),
        this.chest_locked = Ne(60, 60, 0, sprite[Le.LOCKED]),
        this.resurrection = Ne(120, 120, 0, sprite[Le.DRAGON_HEART]),
        this.resurrection.info.translate.x = 10,
        this.resurrection.info.translate.y = 10,
        this.chest_buttons = [],
        this.chest_buttons[Ge.SWORD] = Ne(68, 68, 0, sprite[Le.CHEST_SWORD], 3),
        this.chest_buttons[Ge.SWORD].id = Ge.SWORD,
        this.chest_buttons[Ge.PICK] = Ne(68, 68, 0, sprite[Le.CHEST_PICK], 3),
        this.chest_buttons[Ge.PICK].id = Ge.PICK,
        this.chest_buttons[Ge.STONE] = Ne(68, 68, 0, sprite[Le.CHEST_STONE], 3),
        this.chest_buttons[Ge.STONE].id = Ge.STONE,
        this.chest_buttons[Ge.WOOD] = Ne(68, 68, 0, sprite[Le.CHEST_WOOD], 3),
        this.chest_buttons[Ge.WOOD].id = Ge.WOOD,
        this.chest_buttons[Ge.PLANT] = Ne(68, 68, 0, sprite[Le.CHEST_PLANT], 3),
        this.chest_buttons[Ge.PLANT].id = Ge.PLANT,
        this.chest_buttons[Ge.CACTUS] = Ne(68, 68, 0, sprite[Le.CHEST_CACTUS], 3),
        this.chest_buttons[Ge.CACTUS].id = Ge.CACTUS,
        this.chest_buttons[Ge.GOLD] = Ne(68, 68, 0, sprite[Le.CHEST_GOLD], 3),
        this.chest_buttons[Ge.GOLD].id = Ge.GOLD,
        this.chest_buttons[Ge.DIAMOND] = Ne(68, 68, 0, sprite[Le.CHEST_DIAMOND], 3),
        this.chest_buttons[Ge.DIAMOND].id = Ge.DIAMOND,
        this.chest_buttons[Ge.PICK_GOLD] = Ne(68, 68, 0, sprite[Le.CHEST_PICK_GOLD], 3),
        this.chest_buttons[Ge.PICK_GOLD].id = Ge.PICK_GOLD,
        this.chest_buttons[Ge.PICK_DIAMOND] = Ne(68, 68, 0, sprite[Le.CHEST_PICK_DIAMOND], 3),
        this.chest_buttons[Ge.PICK_DIAMOND].id = Ge.PICK_DIAMOND,
        this.chest_buttons[Ge.SWORD_GOLD] = Ne(68, 68, 0, sprite[Le.CHEST_SWORD_GOLD], 3),
        this.chest_buttons[Ge.SWORD_GOLD].id = Ge.SWORD_GOLD,
        this.chest_buttons[Ge.SWORD_WOOD] = Ne(68, 68, 0, sprite[Le.CHEST_SWORD_WOOD], 3),
        this.chest_buttons[Ge.SWORD_WOOD].id = Ge.SWORD_WOOD,
        this.chest_buttons[Ge.SWORD_DIAMOND] = Ne(68, 68, 0, sprite[Le.CHEST_SWORD_DIAMOND], 3),
        this.chest_buttons[Ge.SWORD_DIAMOND].id = Ge.SWORD_DIAMOND,
        this.chest_buttons[Ge.FIRE] = Ne(68, 68, 0, sprite[Le.CHEST_FIRE], 3),
        this.chest_buttons[Ge.FIRE].id = Ge.FIRE,
        this.chest_buttons[Ge.WORKBENCH] = Ne(68, 68, 0, sprite[Le.CHEST_WORKBENCH], 3),
        this.chest_buttons[Ge.WORKBENCH].id = Ge.WORKBENCH,
        this.chest_buttons[Ge.SEED] = Ne(68, 68, 0, sprite[Le.CHEST_SEED], 3),
        this.chest_buttons[Ge.SEED].id = Ge.SEED,
        this.chest_buttons[Ge.WALL] = Ne(68, 68, 0, sprite[Le.CHEST_WALL], 3),
        this.chest_buttons[Ge.WALL].id = Ge.WALL,
        this.chest_buttons[Ge.SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_SPIKE], 3),
        this.chest_buttons[Ge.SPIKE].id = Ge.SPIKE,
        this.chest_buttons[Ge.PICK_WOOD] = Ne(68, 68, 0, sprite[Le.CHEST_PICK_WOOD], 3),
        this.chest_buttons[Ge.PICK_WOOD].id = Ge.PICK_WOOD,
        this.chest_buttons[Ge.COOKED_MEAT] = Ne(68, 68, 0, sprite[Le.CHEST_COOKED_MEAT], 3),
        this.chest_buttons[Ge.COOKED_MEAT].id = Ge.COOKED_MEAT,
        this.chest_buttons[Ge.MEAT] = Ne(68, 68, 0, sprite[Le.CHEST_MEAT], 3),
        this.chest_buttons[Ge.MEAT].id = Ge.MEAT,
        this.chest_buttons[Ge.BIG_FIRE] = Ne(68, 68, 0, sprite[Le.CHEST_BIG_FIRE], 3),
        this.chest_buttons[Ge.BIG_FIRE].id = Ge.BIG_FIRE,
        this.chest_buttons[Ge.BANDAGE] = Ne(68, 68, 0, sprite[Le.CHEST_BANDAGE], 3),
        this.chest_buttons[Ge.BANDAGE].id = Ge.BANDAGE,
        this.chest_buttons[Ge.CORD] = Ne(68, 68, 0, sprite[Le.CHEST_CORD], 3),
        this.chest_buttons[Ge.CORD].id = Ge.CORD,
        this.chest_buttons[Ge.STONE_WALL] = Ne(68, 68, 0, sprite[Le.CHEST_STONE_WALL], 3),
        this.chest_buttons[Ge.STONE_WALL].id = Ge.STONE_WALL,
        this.chest_buttons[Ge.GOLD_WALL] = Ne(68, 68, 0, sprite[Le.CHEST_GOLD_WALL], 3),
        this.chest_buttons[Ge.GOLD_WALL].id = Ge.GOLD_WALL,
        this.chest_buttons[Ge.DIAMOND_WALL] = Ne(68, 68, 0, sprite[Le.CHEST_DIAMOND_WALL], 3),
        this.chest_buttons[Ge.DIAMOND_WALL].id = Ge.DIAMOND_WALL,
        this.chest_buttons[Ge.WOOD_DOOR] = Ne(68, 68, 0, sprite[Le.CHEST_DOOR_WOOD_CLOSE], 3),
        this.chest_buttons[Ge.WOOD_DOOR].id = Ge.WOOD_DOOR,
        this.chest_buttons[Ge.CHEST] = Ne(68, 68, 0, sprite[Le.CHEST_CHEST], 3),
        this.chest_buttons[Ge.CHEST].id = Ge.CHEST,
        this.chest_buttons[Ge.STONE_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_STONE_SPIKE], 3),
        this.chest_buttons[Ge.STONE_SPIKE].id = Ge.STONE_SPIKE,
        this.chest_buttons[Ge.GOLD_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_GOLD_SPIKE], 3),
        this.chest_buttons[Ge.GOLD_SPIKE].id = Ge.GOLD_SPIKE,
        this.chest_buttons[Ge.DIAMOND_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_DIAMOND_SPIKE], 3),
        this.chest_buttons[Ge.DIAMOND_SPIKE].id = Ge.DIAMOND_SPIKE,
        this.chest_buttons[Ge.FUR] = Ne(68, 68, 0, sprite[Le.CHEST_FUR], 3),
        this.chest_buttons[Ge.FUR].id = Ge.FUR,
        this.chest_buttons[Ge.FUR_BOAR] = Ne(68, 68, 0, sprite[Le.CHEST_FUR_BOAR], 3),
        this.chest_buttons[Ge.FUR_BOAR].id = Ge.FUR_BOAR,
        this.chest_buttons[Ge.FUR_WOLF] = Ne(68, 68, 0, sprite[Le.CHEST_FUR_WOLF], 3),
        this.chest_buttons[Ge.FUR_WOLF].id = Ge.FUR_WOLF,
        this.chest_buttons[Ge.PENGUIN_FEATHER] = Ne(68, 68, 0, sprite[Le.CHEST_PENGUIN_FEATHER], 3),
        this.chest_buttons[Ge.PENGUIN_FEATHER].id = Ge.PENGUIN_FEATHER,
        this.chest_buttons[Ge.HAWK_FEATHER] = Ne(68, 68, 0, sprite[Le.CHEST_HAWK_FEATHER], 3),
        this.chest_buttons[Ge.HAWK_FEATHER].id = Ge.HAWK_FEATHER,
        this.chest_buttons[Ge.VULTURE_FEATHER] = Ne(68, 68, 0, sprite[Le.CHEST_VULTURE_FEATHER], 3),
        this.chest_buttons[Ge.VULTURE_FEATHER].id = Ge.VULTURE_FEATHER,
        this.chest_buttons[Ge.EMERALD] = Ne(68, 68, 0, sprite[Le.CHEST_EMERALD], 3),
        this.chest_buttons[Ge.EMERALD].id = Ge.EMERALD,
        this.chest_buttons[Ge.EARMUFFS] = Ne(68, 68, 0, sprite[Le.CHEST_EARMUFFS], 3),
        this.chest_buttons[Ge.EARMUFFS].id = Ge.EARMUFFS,
        this.chest_buttons[Ge.STONE_DOOR] = Ne(68, 68, 0, sprite[Le.CHEST_DOOR_STONE_CLOSE], 3),
        this.chest_buttons[Ge.STONE_DOOR].id = Ge.STONE_DOOR,
        this.chest_buttons[Ge.GOLD_DOOR] = Ne(68, 68, 0, sprite[Le.CHEST_DOOR_GOLD_CLOSE], 3),
        this.chest_buttons[Ge.GOLD_DOOR].id = Ge.GOLD_DOOR,
        this.chest_buttons[Ge.DIAMOND_DOOR] = Ne(68, 68, 0, sprite[Le.CHEST_DOOR_DIAMOND_CLOSE], 3),
        this.chest_buttons[Ge.DIAMOND_DOOR].id = Ge.DIAMOND_DOOR,
        this.chest_buttons[Ge.COAT] = Ne(68, 68, 0, sprite[Le.CHEST_COAT], 3),
        this.chest_buttons[Ge.COAT].id = Ge.COAT,
        this.chest_buttons[Ge.WOOD_SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_WOOD_SPEAR], 3),
        this.chest_buttons[Ge.WOOD_SPEAR].id = Ge.WOOD_SPEAR,
        this.chest_buttons[Ge.SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_SPEAR], 3),
        this.chest_buttons[Ge.SPEAR].id = Ge.SPEAR,
        this.chest_buttons[Ge.GOLD_SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_GOLD_SPEAR], 3),
        this.chest_buttons[Ge.GOLD_SPEAR].id = Ge.GOLD_SPEAR,
        this.chest_buttons[Ge.DIAMOND_SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_DIAMOND_SPEAR], 3),
        this.chest_buttons[Ge.DIAMOND_SPEAR].id = Ge.DIAMOND_SPEAR,
        this.chest_buttons[Ge.DRAGON_SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_DRAGON_SPEAR], 3),
        this.chest_buttons[Ge.DRAGON_SPEAR].id = Ge.DRAGON_SPEAR,
        this.chest_buttons[Ge.FURNACE] = Ne(68, 68, 0, sprite[Le.CHEST_FURNACE], 3),
        this.chest_buttons[Ge.FURNACE].id = Ge.FURNACE,
        this.chest_buttons[Ge.EXPLORER_HAT] = Ne(68, 68, 0, sprite[Le.CHEST_EXPLORER_HAT], 3),
        this.chest_buttons[Ge.EXPLORER_HAT].id = Ge.EXPLORER_HAT,
        this.chest_buttons[Ge.PIRATE_HAT] = Ne(68, 68, 0, sprite[Le.CHEST_PIRATE_HAT], 3),
        this.chest_buttons[Ge.PIRATE_HAT].id = Ge.PIRATE_HAT,
        this.chest_buttons[Ge.FLOWER_HAT] = Ne(68, 68, 0, sprite[Le.CHEST_FLOWER_HAT], 3),
        this.chest_buttons[Ge.FLOWER_HAT].id = Ge.FLOWER_HAT,
        this.chest_buttons[Ge.FUR_HAT] = Ne(68, 68, 0, sprite[Le.CHEST_FUR_HAT], 3),
        this.chest_buttons[Ge.FUR_HAT].id = Ge.FUR_HAT,
        this.chest_buttons[Ge.TURBAN1] = Ne(68, 68, 0, sprite[Le.CHEST_TURBAN1], 3),
        this.chest_buttons[Ge.TURBAN1].id = Ge.TURBAN1,
        this.chest_buttons[Ge.TURBAN2] = Ne(68, 68, 0, sprite[Le.CHEST_TURBAN2], 3),
        this.chest_buttons[Ge.TURBAN2].id = Ge.TURBAN2,
        this.chest_buttons[Ge.WOOD_ARROW] = Ne(68, 68, 0, sprite[Le.CHEST_WOOD_ARROW], 3),
        this.chest_buttons[Ge.WOOD_ARROW].id = Ge.WOOD_ARROW,
        this.chest_buttons[Ge.WOOD_BOW] = Ne(68, 68, 0, sprite[Le.CHEST_WOOD_BOW], 3),
        this.chest_buttons[Ge.WOOD_BOW].id = Ge.WOOD_BOW,
        this.chest_buttons[Ge.WOOD_SHIELD] = Ne(68, 68, 0, sprite[Le.CHEST_WOOD_SHIELD], 3),
        this.chest_buttons[Ge.WOOD_SHIELD].id = Ge.WOOD_SHIELD,
        this.chest_buttons[Ge.STONE_ARROW] = Ne(68, 68, 0, sprite[Le.CHEST_STONE_ARROW], 3),
        this.chest_buttons[Ge.STONE_ARROW].id = Ge.STONE_ARROW,
        this.chest_buttons[Ge.STONE_BOW] = Ne(68, 68, 0, sprite[Le.CHEST_STONE_BOW], 3),
        this.chest_buttons[Ge.STONE_BOW].id = Ge.STONE_BOW,
        this.chest_buttons[Ge.STONE_SHIELD] = Ne(68, 68, 0, sprite[Le.CHEST_STONE_SHIELD], 3),
        this.chest_buttons[Ge.STONE_SHIELD].id = Ge.STONE_SHIELD,
        this.chest_buttons[Ge.GOLD_ARROW] = Ne(68, 68, 0, sprite[Le.CHEST_GOLD_ARROW], 3),
        this.chest_buttons[Ge.GOLD_ARROW].id = Ge.GOLD_ARROW,
        this.chest_buttons[Ge.GOLD_BOW] = Ne(68, 68, 0, sprite[Le.CHEST_GOLD_BOW], 3),
        this.chest_buttons[Ge.GOLD_BOW].id = Ge.GOLD_BOW,
        this.chest_buttons[Ge.GOLD_SHIELD] = Ne(68, 68, 0, sprite[Le.CHEST_GOLD_SHIELD], 3),
        this.chest_buttons[Ge.GOLD_SHIELD].id = Ge.GOLD_SHIELD,
        this.chest_buttons[Ge.DIAMOND_ARROW] = Ne(68, 68, 0, sprite[Le.CHEST_DIAMOND_ARROW], 3),
        this.chest_buttons[Ge.DIAMOND_ARROW].id = Ge.DIAMOND_ARROW,
        this.chest_buttons[Ge.DIAMOND_BOW] = Ne(68, 68, 0, sprite[Le.CHEST_DIAMOND_BOW], 3),
        this.chest_buttons[Ge.DIAMOND_BOW].id = Ge.DIAMOND_BOW,
        this.chest_buttons[Ge.DIAMOND_SHIELD] = Ne(68, 68, 0, sprite[Le.CHEST_DIAMOND_SHIELD], 3),
        this.chest_buttons[Ge.DIAMOND_SHIELD].id = Ge.DIAMOND_SHIELD,
        this.chest_buttons[Ge.AMETHYST_ARROW] = Ne(68, 68, 0, sprite[Le.CHEST_AMETHYST_ARROW], 3),
        this.chest_buttons[Ge.AMETHYST_ARROW].id = Ge.AMETHYST_ARROW,
        this.chest_buttons[Ge.AMETHYST_BOW] = Ne(68, 68, 0, sprite[Le.CHEST_AMETHYST_BOW], 3),
        this.chest_buttons[Ge.AMETHYST_BOW].id = Ge.AMETHYST_BOW,
        this.chest_buttons[Ge.AMETHYST_SHIELD] = Ne(68, 68, 0, sprite[Le.CHEST_AMETHYST_SHIELD], 3),
        this.chest_buttons[Ge.AMETHYST_SHIELD].id = Ge.AMETHYST_SHIELD,
        this.chest_buttons[Ge.REIDITE_ARROW] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_ARROW], 3),
        this.chest_buttons[Ge.REIDITE_ARROW].id = Ge.REIDITE_ARROW,
        this.chest_buttons[Ge.REIDITE_BOW] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_BOW], 3),
        this.chest_buttons[Ge.REIDITE_BOW].id = Ge.REIDITE_BOW,
        this.chest_buttons[Ge.REIDITE_SHIELD] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_SHIELD], 3),
        this.chest_buttons[Ge.REIDITE_SHIELD].id = Ge.REIDITE_SHIELD,
        this.chest_buttons[Ge.DRAGON_ARROW] = Ne(68, 68, 0, sprite[Le.CHEST_DRAGON_ARROW], 3),
        this.chest_buttons[Ge.DRAGON_ARROW].id = Ge.DRAGON_ARROW,
        this.chest_buttons[Ge.DRAGON_BOW] = Ne(68, 68, 0, sprite[Le.CHEST_DRAGON_BOW], 3),
        this.chest_buttons[Ge.DRAGON_BOW].id = Ge.DRAGON_BOW,
        this.chest_buttons[Ge.WOOD_HELMET] = Ne(68, 68, 0, sprite[Le.CHEST_WOOD_HELMET], 3),
        this.chest_buttons[Ge.WOOD_HELMET].id = Ge.WOOD_HELMET,
        this.chest_buttons[Ge.STONE_HELMET] = Ne(68, 68, 0, sprite[Le.CHEST_STONE_HELMET], 3),
        this.chest_buttons[Ge.STONE_HELMET].id = Ge.STONE_HELMET,
        this.chest_buttons[Ge.GOLD_HELMET] = Ne(68, 68, 0, sprite[Le.CHEST_GOLD_HELMET], 3),
        this.chest_buttons[Ge.GOLD_HELMET].id = Ge.GOLD_HELMET,
        this.chest_buttons[Ge.DIAMOND_HELMET] = Ne(68, 68, 0, sprite[Le.CHEST_DIAMOND_HELMET], 3),
        this.chest_buttons[Ge.DIAMOND_HELMET].id = Ge.DIAMOND_HELMET,
        this.chest_buttons[Ge.BOOK] = Ne(68, 68, 0, sprite[Le.CHEST_BOOK], 3),
        this.chest_buttons[Ge.BOOK].id = Ge.BOOK,
        this.chest_buttons[Ge.PAPER] = Ne(68, 68, 0, sprite[Le.CHEST_PAPER], 3),
        this.chest_buttons[Ge.PAPER].id = Ge.PAPER,
        this.chest_buttons[Ge.BAG] = Ne(68, 68, 0, sprite[Le.CHEST_BAG], 3),
        this.chest_buttons[Ge.BAG].id = Ge.BAG,
        this.chest_buttons[Ge.AMETHYST] = Ne(68, 68, 0, sprite[Le.CHEST_AMETHYST], 3),
        this.chest_buttons[Ge.AMETHYST].id = Ge.AMETHYST,
        this.chest_buttons[Ge.SWORD_AMETHYST] = Ne(68, 68, 0, sprite[Le.CHEST_SWORD_AMETHYST], 3),
        this.chest_buttons[Ge.SWORD_AMETHYST].id = Ge.SWORD_AMETHYST,
        this.chest_buttons[Ge.PIRATE_SWORD] = Ne(68, 68, 0, sprite[Le.CHEST_PIRATE_SWORD], 3),
        this.chest_buttons[Ge.PIRATE_SWORD].id = Ge.PIRATE_SWORD,
        this.chest_buttons[Ge.PICK_AMETHYST] = Ne(68, 68, 0, sprite[Le.CHEST_PICK_AMETHYST], 3),
        this.chest_buttons[Ge.PICK_AMETHYST].id = Ge.PICK_AMETHYST,
        this.chest_buttons[Ge.PICK_REIDITE] = Ne(68, 68, 0, sprite[Le.CHEST_PICK_REIDITE], 3),
        this.chest_buttons[Ge.PICK_REIDITE].id = Ge.PICK_REIDITE,
        this.chest_buttons[Ge.AMETHYST_SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_AMETHYST_SPEAR], 3),
        this.chest_buttons[Ge.AMETHYST_SPEAR].id = Ge.AMETHYST_SPEAR,
        this.chest_buttons[Ge.HAMMER] = Ne(68, 68, 0, sprite[Le.CHEST_HAMMER], 3),
        this.chest_buttons[Ge.HAMMER].id = Ge.HAMMER,
        this.chest_buttons[Ge.HAMMER_GOLD] = Ne(68, 68, 0, sprite[Le.CHEST_HAMMER_GOLD], 3),
        this.chest_buttons[Ge.HAMMER_GOLD].id = Ge.HAMMER_GOLD,
        this.chest_buttons[Ge.HAMMER_DIAMOND] = Ne(68, 68, 0, sprite[Le.CHEST_HAMMER_DIAMOND], 3),
        this.chest_buttons[Ge.HAMMER_DIAMOND].id = Ge.HAMMER_DIAMOND,
        this.chest_buttons[Ge.HAMMER_AMETHYST] = Ne(68, 68, 0, sprite[Le.CHEST_HAMMER_AMETHYST], 3),
        this.chest_buttons[Ge.HAMMER_AMETHYST].id = Ge.HAMMER_AMETHYST,
        this.chest_buttons[Ge.HAMMER_REIDITE] = Ne(68, 68, 0, sprite[Le.CHEST_HAMMER_REIDITE], 3),
        this.chest_buttons[Ge.HAMMER_REIDITE].id = Ge.HAMMER_REIDITE,
        this.chest_buttons[Ge.AMETHYST_WALL] = Ne(68, 68, 0, sprite[Le.CHEST_AMETHYST_WALL], 3),
        this.chest_buttons[Ge.AMETHYST_WALL].id = Ge.AMETHYST_WALL,
        this.chest_buttons[Ge.AMETHYST_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_AMETHYST_SPIKE], 3),
        this.chest_buttons[Ge.AMETHYST_SPIKE].id = Ge.AMETHYST_SPIKE,
        this.chest_buttons[Ge.AMETHYST_DOOR] = Ne(68, 68, 0, sprite[Le.CHEST_DOOR_AMETHYST_CLOSE], 3),
        this.chest_buttons[Ge.AMETHYST_DOOR].id = Ge.AMETHYST_DOOR,
        this.chest_buttons[Ge.CAP_SCARF] = Ne(68, 68, 0, sprite[Le.CHEST_CAP_SCARF], 3),
        this.chest_buttons[Ge.CAP_SCARF].id = Ge.CAP_SCARF,
        this.chest_buttons[Ge.FUR_WINTER] = Ne(68, 68, 0, sprite[Le.CHEST_FUR_WINTER], 3),
        this.chest_buttons[Ge.FUR_WINTER].id = Ge.FUR_WINTER,
        this.chest_buttons[Ge.FUR_MAMMOTH] = Ne(68, 68, 0, sprite[Le.CHEST_FUR_MAMMOTH], 3),
        this.chest_buttons[Ge.FUR_MAMMOTH].id = Ge.FUR_MAMMOTH,
        this.chest_buttons[Ge.BLUE_CORD] = Ne(68, 68, 0, sprite[Le.CHEST_BLUE_CORD], 3),
        this.chest_buttons[Ge.BLUE_CORD].id = Ge.BLUE_CORD,
        this.chest_buttons[Ge.LOCK] = Ne(68, 68, 0, sprite[Le.CHEST_LOCK], 3),
        this.chest_buttons[Ge.LOCK].id = Ge.LOCK,
        this.chest_buttons[Ge.DRAGON_HEART] = Ne(68, 68, 0, sprite[Le.CHEST_DRAGON_HEART], 3),
        this.chest_buttons[Ge.DRAGON_HEART].id = Ge.DRAGON_HEART,
        this.chest_buttons[Ge.LAVA_HEART] = Ne(68, 68, 0, sprite[Le.CHEST_LAVA_HEART], 3),
        this.chest_buttons[Ge.LAVA_HEART].id = Ge.LAVA_HEART,
        this.chest_buttons[Ge.RESURRECTION] = Ne(68, 68, 0, sprite[Le.CHEST_RESURRECTION], 3),
        this.chest_buttons[Ge.RESURRECTION].id = Ge.RESURRECTION,
        this.chest_buttons[Ge.LOCKPICK] = Ne(68, 68, 0, sprite[Le.CHEST_LOCKPICK], 3),
        this.chest_buttons[Ge.LOCKPICK].id = Ge.LOCKPICK,
        this.chest_buttons[Ge.TOTEM] = Ne(68, 68, 0, sprite[Le.CHEST_TOTEM], 3),
        this.chest_buttons[Ge.TOTEM].id = Ge.TOTEM,
        this.chest_buttons[Ge.AMETHYST_HELMET] = Ne(68, 68, 0, sprite[Le.CHEST_AMETHYST_HELMET], 3),
        this.chest_buttons[Ge.AMETHYST_HELMET].id = Ge.AMETHYST_HELMET,
        this.chest_buttons[Ge.SUPER_HAMMER] = Ne(68, 68, 0, sprite[Le.CHEST_SUPER_HAMMER], 3),
        this.chest_buttons[Ge.SUPER_HAMMER].id = Ge.SUPER_HAMMER,
        this.chest_buttons[Ge.BRIDGE] = Ne(68, 68, 0, sprite[Le.CHEST_BRIDGE], 3),
        this.chest_buttons[Ge.BRIDGE].id = Ge.BRIDGE,
        this.chest_buttons[Ge.WOOD_TOWER] = Ne(68, 68, 0, sprite[Le.CHEST_WOOD_TOWER], 3),
        this.chest_buttons[Ge.WOOD_TOWER].id = Ge.WOOD_TOWER,
        this.chest_buttons[Ge.BOAT] = Ne(68, 68, 0, sprite[Le.CHEST_BOAT], 3),
        this.chest_buttons[Ge.BOAT].id = Ge.BOAT,
        this.chest_buttons[Ge.SLED] = Ne(68, 68, 0, sprite[Le.CHEST_SLED], 3),
        this.chest_buttons[Ge.SLED].id = Ge.SLED,
        this.chest_buttons[Ge.PLANE] = Ne(68, 68, 0, sprite[Le.CHEST_PLANE], 3),
        this.chest_buttons[Ge.PLANE].id = Ge.PLANE,
        this.chest_buttons[Ge.SADDLE] = Ne(68, 68, 0, sprite[Le.CHEST_SADDLE], 3),
        this.chest_buttons[Ge.SADDLE].id = Ge.SADDLE,
        this.chest_buttons[Ge.MOUNT_BOAR] = Ne(68, 68, 0, sprite[Le.CHEST_MOUNT_BOAR], 3),
        this.chest_buttons[Ge.MOUNT_BOAR].id = Ge.MOUNT_BOAR,
        this.chest_buttons[Ge.BABY_DRAGON] = Ne(68, 68, 0, sprite[Le.CHEST_BABY_DRAGON], 3),
        this.chest_buttons[Ge.BABY_DRAGON].id = Ge.BABY_DRAGON,
        this.chest_buttons[Ge.BABY_MAMMOTH] = Ne(68, 68, 0, sprite[Le.CHEST_BABY_MAMMOTH], 3),
        this.chest_buttons[Ge.BABY_MAMMOTH].id = Ge.BABY_MAMMOTH,
        this.chest_buttons[Ge.BABY_LAVA] = Ne(68, 68, 0, sprite[Le.CHEST_BABY_LAVA], 3),
        this.chest_buttons[Ge.BABY_LAVA].id = Ge.BABY_LAVA,
        this.chest_buttons[Ge.HAWK] = Ne(68, 68, 0, sprite[Le.CHEST_HAWK], 3),
        this.chest_buttons[Ge.HAWK].id = Ge.HAWK,
        this.chest_buttons[Ge.CRAB_BOSS] = Ne(68, 68, 0, sprite[Le.CHEST_CRAB_BOSS], 3),
        this.chest_buttons[Ge.CRAB_BOSS].id = Ge.CRAB_BOSS,
        this.chest_buttons[Ge.SAND] = Ne(68, 68, 0, sprite[Le.CHEST_SAND], 3),
        this.chest_buttons[Ge.SAND].id = Ge.SAND,
        this.chest_buttons[Ge.BOTTLE_FULL] = Ne(68, 68, 0, sprite[Le.CHEST_BOTTLE_FULL], 3),
        this.chest_buttons[Ge.BOTTLE_FULL].id = Ge.BOTTLE_FULL,
        this.chest_buttons[Ge.BOTTLE_EMPTY] = Ne(68, 68, 0, sprite[Le.CHEST_BOTTLE_EMPTY], 3),
        this.chest_buttons[Ge.BOTTLE_EMPTY].id = Ge.BOTTLE_EMPTY,
        this.chest_buttons[Ge.SHOVEL] = Ne(68, 68, 0, sprite[Le.CHEST_SHOVEL], 3),
        this.chest_buttons[Ge.SHOVEL].id = Ge.SHOVEL,
        this.chest_buttons[Ge.SHOVEL_GOLD] = Ne(68, 68, 0, sprite[Le.CHEST_SHOVEL_GOLD], 3),
        this.chest_buttons[Ge.SHOVEL_GOLD].id = Ge.SHOVEL_GOLD,
        this.chest_buttons[Ge.SHOVEL_DIAMOND] = Ne(68, 68, 0, sprite[Le.CHEST_SHOVEL_DIAMOND], 3),
        this.chest_buttons[Ge.SHOVEL_DIAMOND].id = Ge.SHOVEL_DIAMOND,
        this.chest_buttons[Ge.SHOVEL_AMETHYST] = Ne(68, 68, 0, sprite[Le.CHEST_SHOVEL_AMETHYST], 3),
        this.chest_buttons[Ge.SHOVEL_AMETHYST].id = Ge.SHOVEL_AMETHYST,
        this.chest_buttons[Ge.SPANNER] = Ne(68, 68, 0, sprite[Le.CHEST_SPANNER], 3),
        this.chest_buttons[Ge.SPANNER].id = Ge.SPANNER,
        this.chest_buttons[Ge.KRAKEN_SKIN] = Ne(68, 68, 0, sprite[Le.CHEST_KRAKEN_SKIN], 3),
        this.chest_buttons[Ge.KRAKEN_SKIN].id = Ge.KRAKEN_SKIN,
        this.chest_buttons[Ge.WATERING_CAN] = Ne(68, 68, 0, sprite[Le.CHEST_WATERING_CAN], 3),
        this.chest_buttons[Ge.WATERING_CAN].id = Ge.WATERING_CAN,
        this.chest_buttons[Ge.FLOUR] = Ne(68, 68, 0, sprite[Le.CHEST_FLOUR], 3),
        this.chest_buttons[Ge.FLOUR].id = Ge.FLOUR,
        this.chest_buttons[Ge.WHEAT_SEED] = Ne(68, 68, 0, sprite[Le.CHEST_WHEAT_SEED], 3),
        this.chest_buttons[Ge.WHEAT_SEED].id = Ge.WHEAT_SEED,
        this.chest_buttons[Ge.COOKIE] = Ne(68, 68, 0, sprite[Le.CHEST_COOKIE], 3),
        this.chest_buttons[Ge.COOKIE].id = Ge.COOKIE,
        this.chest_buttons[Ge.WILD_WHEAT] = Ne(68, 68, 0, sprite[Le.CHEST_WILD_WHEAT], 3),
        this.chest_buttons[Ge.WILD_WHEAT].id = Ge.WILD_WHEAT,
        this.chest_buttons[Ge.WINDMILL] = Ne(68, 68, 0, sprite[Le.CHEST_WINDMILL], 3),
        this.chest_buttons[Ge.WINDMILL].id = Ge.WINDMILL,
        this.chest_buttons[Ge.SUPER_DIVING_SUIT] = Ne(68, 68, 0, sprite[Le.CHEST_SUPER_DIVING_SUIT], 3),
        this.chest_buttons[Ge.SUPER_DIVING_SUIT].id = Ge.SUPER_DIVING_SUIT,
        this.chest_buttons[Ge.DIVING_MASK] = Ne(68, 68, 0, sprite[Le.CHEST_DIVING_MASK], 3),
        this.chest_buttons[Ge.DIVING_MASK].id = Ge.DIVING_MASK,
        this.chest_buttons[Ge.WATERING_CAN_FULL] = Ne(68, 68, 0, sprite[Le.CHEST_WATERING_CAN_FULL], 3),
        this.chest_buttons[Ge.WATERING_CAN_FULL].id = Ge.WATERING_CAN_FULL,
        this.chest_buttons[Ge.CAKE] = Ne(68, 68, 0, sprite[Le.CHEST_CAKE], 3),
        this.chest_buttons[Ge.CAKE].id = Ge.CAKE,
        this.chest_buttons[Ge.BREAD] = Ne(68, 68, 0, sprite[Le.CHEST_BREAD], 3),
        this.chest_buttons[Ge.BREAD].id = Ge.BREAD,
        this.chest_buttons[Ge.FOODFISH] = Ne(68, 68, 0, sprite[Le.CHEST_FOODFISH], 3),
        this.chest_buttons[Ge.FOODFISH].id = Ge.FOODFISH,
        this.chest_buttons[Ge.FOODFISH_COOKED] = Ne(68, 68, 0, sprite[Le.CHEST_FOODFISH_COOKED], 3),
        this.chest_buttons[Ge.FOODFISH_COOKED].id = Ge.FOODFISH_COOKED,
        this.chest_buttons[Ge.SCALES] = Ne(68, 68, 0, sprite[Le.CHEST_SCALES], 3),
        this.chest_buttons[Ge.SCALES].id = Ge.SCALES,
        this.chest_buttons[Ge.GROUND] = Ne(68, 68, 0, sprite[Le.CHEST_GROUND], 3),
        this.chest_buttons[Ge.GROUND].id = Ge.GROUND,
        this.chest_buttons[Ge.PLOT] = Ne(68, 68, 0, sprite[Le.CHEST_PLOT], 3),
        this.chest_buttons[Ge.PLOT].id = Ge.PLOT,
        this.chest_buttons[Ge.ICE] = Ne(68, 68, 0, sprite[Le.CHEST_ICE], 3),
        this.chest_buttons[Ge.ICE].id = Ge.ICE,
        this.chest_buttons[Ge.BREAD_OVEN] = Ne(68, 68, 0, sprite[Le.CHEST_BREAD_OVEN], 3),
        this.chest_buttons[Ge.BREAD_OVEN].id = Ge.BREAD_OVEN,
        this.chest_buttons[Ge.SANDWICH] = Ne(68, 68, 0, sprite[Le.CHEST_SANDWICH], 3),
        this.chest_buttons[Ge.SANDWICH].id = Ge.SANDWICH,
        this.chest_buttons[Ge.DRAGON_HELMET] = Ne(68, 68, 0, sprite[Le.CHEST_DRAGON_HELMET], 3),
        this.chest_buttons[Ge.DRAGON_HELMET].id = Ge.DRAGON_HELMET,
        this.chest_buttons[Ge.DRAGON_SWORD] = Ne(68, 68, 0, sprite[Le.CHEST_DRAGON_SWORD], 3),
        this.chest_buttons[Ge.DRAGON_SWORD].id = Ge.DRAGON_SWORD,
        this.chest_buttons[Ge.DRAGON_ORB] = Ne(68, 68, 0, sprite[Le.CHEST_DRAGON_ORB], 3),
        this.chest_buttons[Ge.DRAGON_ORB].id = Ge.DRAGON_ORB,
        this.chest_buttons[Ge.DRAGON_CUBE] = Ne(68, 68, 0, sprite[Le.CHEST_DRAGON_CUBE], 3),
        this.chest_buttons[Ge.DRAGON_CUBE].id = Ge.DRAGON_CUBE,
        this.chest_buttons[Ge.LAVA_ORB] = Ne(68, 68, 0, sprite[Le.CHEST_LAVA_ORB], 3),
        this.chest_buttons[Ge.LAVA_ORB].id = Ge.LAVA_ORB,
        this.chest_buttons[Ge.LAVA_CUBE] = Ne(68, 68, 0, sprite[Le.CHEST_LAVA_CUBE], 3),
        this.chest_buttons[Ge.LAVA_CUBE].id = Ge.LAVA_CUBE,
        this.chest_buttons[Ge.CROWN_GREEN] = Ne(68, 68, 0, sprite[Le.CHEST_CROWN_GREEN], 3),
        this.chest_buttons[Ge.CROWN_GREEN].id = Ge.CROWN_GREEN,
        this.chest_buttons[Ge.GEMME_GREEN] = Ne(68, 68, 0, sprite[Le.CHEST_GEMME_GREEN], 3),
        this.chest_buttons[Ge.GEMME_GREEN].id = Ge.GEMME_GREEN,
        this.chest_buttons[Ge.GEMME_ORANGE] = Ne(68, 68, 0, sprite[Le.CHEST_GEMME_ORANGE], 3),
        this.chest_buttons[Ge.GEMME_ORANGE].id = Ge.GEMME_ORANGE,
        this.chest_buttons[Ge.CROWN_ORANGE] = Ne(68, 68, 0, sprite[Le.CHEST_CROWN_ORANGE], 3),
        this.chest_buttons[Ge.CROWN_ORANGE].id = Ge.CROWN_ORANGE,
        this.chest_buttons[Ge.GEMME_BLUE] = Ne(68, 68, 0, sprite[Le.CHEST_GEMME_BLUE], 3),
        this.chest_buttons[Ge.GEMME_BLUE].id = Ge.GEMME_BLUE,
        this.chest_buttons[Ge.CROWN_BLUE] = Ne(68, 68, 0, sprite[Le.CHEST_CROWN_BLUE], 3),
        this.chest_buttons[Ge.CROWN_BLUE].id = Ge.CROWN_BLUE,
        this.chest_buttons[Ge.HOOD] = Ne(68, 68, 0, sprite[Le.CHEST_HOOD], 3),
        this.chest_buttons[Ge.HOOD].id = Ge.HOOD,
        this.chest_buttons[Ge.PEASANT] = Ne(68, 68, 0, sprite[Le.CHEST_PEASANT], 3),
        this.chest_buttons[Ge.PEASANT].id = Ge.PEASANT,
        this.chest_buttons[Ge.SPECIAL_FUR] = Ne(68, 68, 0, sprite[Le.CHEST_SPECIAL_FUR], 3),
        this.chest_buttons[Ge.SPECIAL_FUR].id = Ge.SPECIAL_FUR,
        this.chest_buttons[Ge.SPECIAL_FUR_2] = Ne(68, 68, 0, sprite[Le.CHEST_SPECIAL_FUR_2], 3),
        this.chest_buttons[Ge.SPECIAL_FUR_2].id = Ge.SPECIAL_FUR_2,
        this.chest_buttons[Ge.WINTER_PEASANT] = Ne(68, 68, 0, sprite[Le.CHEST_WINTER_PEASANT], 3),
        this.chest_buttons[Ge.WINTER_PEASANT].id = Ge.WINTER_PEASANT,
        this.chest_buttons[Ge.WINTER_HOOD] = Ne(68, 68, 0, sprite[Le.CHEST_WINTER_HOOD], 3),
        this.chest_buttons[Ge.WINTER_HOOD].id = Ge.WINTER_HOOD,
        this.chest_buttons[Ge.BUCKET_FULL] = Ne(68, 68, 0, sprite[Le.CHEST_BUCKET_FULL], 3),
        this.chest_buttons[Ge.BUCKET_FULL].id = Ge.BUCKET_FULL,
        this.chest_buttons[Ge.BUCKET_EMPTY] = Ne(68, 68, 0, sprite[Le.CHEST_BUCKET_EMPTY], 3),
        this.chest_buttons[Ge.BUCKET_EMPTY].id = Ge.BUCKET_EMPTY,
        this.chest_buttons[Ge.WELL] = Ne(68, 68, 0, sprite[Le.CHEST_WELL], 3),
        this.chest_buttons[Ge.WELL].id = Ge.WELL,
        this.chest_buttons[Ge.SIGN] = Ne(68, 68, 0, sprite[Le.CHEST_SIGN], 3),
        this.chest_buttons[Ge.SIGN].id = Ge.SIGN,
        this.chest_buttons[Ge.PUMPKIN_SEED] = Ne(68, 68, 0, sprite[Le.CHEST_PUMPKIN_SEED], 3),
        this.chest_buttons[Ge.PUMPKIN_SEED].id = Ge.PUMPKIN_SEED,
        this.chest_buttons[Ge.PUMPKIN] = Ne(68, 68, 0, sprite[Le.CHEST_PUMPKIN], 3),
        this.chest_buttons[Ge.PUMPKIN].id = Ge.PUMPKIN,
        this.chest_buttons[Ge.ROOF] = Ne(68, 68, 0, sprite[Le.CHEST_ROOF], 3),
        this.chest_buttons[Ge.ROOF].id = Ge.ROOF,
        this.chest_buttons[Ge.GARLIC_SEED] = Ne(68, 68, 0, sprite[Le.CHEST_GARLIC_SEED], 3),
        this.chest_buttons[Ge.GARLIC_SEED].id = Ge.GARLIC_SEED,
        this.chest_buttons[Ge.GARLIC] = Ne(68, 68, 0, sprite[Le.CHEST_GARLIC], 3),
        this.chest_buttons[Ge.GARLIC].id = Ge.GARLIC,
        this.chest_buttons[Ge.THORNBUSH_SEED] = Ne(68, 68, 0, sprite[Le.CHEST_THORNBUSH_SEED], 3),
        this.chest_buttons[Ge.THORNBUSH_SEED].id = Ge.THORNBUSH_SEED,
        this.chest_buttons[Ge.THORNBUSH] = Ne(68, 68, 0, sprite[Le.CHEST_THORNBUSH], 3),
        this.chest_buttons[Ge.THORNBUSH].id = Ge.THORNBUSH,
        this.chest_buttons[Ge.TOMATO_SEED] = Ne(68, 68, 0, sprite[Le.CHEST_TOMATO_SEED], 3),
        this.chest_buttons[Ge.TOMATO_SEED].id = Ge.TOMATO_SEED,
        this.chest_buttons[Ge.TOMATO] = Ne(68, 68, 0, sprite[Le.CHEST_TOMATO], 3),
        this.chest_buttons[Ge.TOMATO].id = Ge.TOMATO,
        this.chest_buttons[Ge.CARROT_SEED] = Ne(68, 68, 0, sprite[Le.CHEST_CARROT_SEED], 3),
        this.chest_buttons[Ge.CARROT_SEED].id = Ge.CARROT_SEED,
        this.chest_buttons[Ge.CARROT] = Ne(68, 68, 0, sprite[Le.CHEST_CARROT], 3),
        this.chest_buttons[Ge.CARROT].id = Ge.CARROT,
        this.chest_buttons[Ge.WATERMELON_SEED] = Ne(68, 68, 0, sprite[Le.CHEST_WATERMELON_SEED], 3),
        this.chest_buttons[Ge.WATERMELON_SEED].id = Ge.WATERMELON_SEED,
        this.chest_buttons[Ge.WATERMELON] = Ne(68, 68, 0, sprite[Le.CHEST_WATERMELON], 3),
        this.chest_buttons[Ge.WATERMELON].id = Ge.WATERMELON,
        this.chest_buttons[Ge.ALOE_VERA_SEED] = Ne(68, 68, 0, sprite[Le.CHEST_ALOE_VERA_SEED], 3),
        this.chest_buttons[Ge.ALOE_VERA_SEED].id = Ge.ALOE_VERA_SEED,
        this.chest_buttons[Ge.ALOE_VERA] = Ne(68, 68, 0, sprite[Le.CHEST_ALOE_VERA], 3),
        this.chest_buttons[Ge.ALOE_VERA].id = Ge.ALOE_VERA,
        this.chest_buttons[Ge.CHRISTMAS_HAT] = Ne(68, 68, 0, sprite[Le.CHEST_CHRISTMAS_HAT], 3),
        this.chest_buttons[Ge.CHRISTMAS_HAT].id = Ge.CHRISTMAS_HAT,
        this.chest_buttons[Ge.ELF_HAT] = Ne(68, 68, 0, sprite[Le.CHEST_ELF_HAT], 3),
        this.chest_buttons[Ge.ELF_HAT].id = Ge.ELF_HAT,
        this.chest_buttons[Ge.WOOD_SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_WOOD_SPEAR], 3),
        this.chest_buttons[Ge.WOOD_SPEAR].id = Ge.WOOD_SPEAR,
        this.chest_buttons[Ge.DRAGON_SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_DRAGON_SPEAR], 3),
        this.chest_buttons[Ge.DRAGON_SPEAR].id = Ge.DRAGON_SPEAR,
        this.chest_buttons[Ge.CRAB_STICK] = Ne(68, 68, 0, sprite[Le.CHEST_CRAB_STICK], 3),
        this.chest_buttons[Ge.CRAB_STICK].id = Ge.CRAB_STICK,
        this.chest_buttons[Ge.CRAB_SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_CRAB_SPEAR], 3),
        this.chest_buttons[Ge.CRAB_SPEAR].id = Ge.CRAB_SPEAR,
        this.chest_buttons[Ge.CRAB_LOOT] = Ne(68, 68, 0, sprite[Le.CHEST_CRAB_LOOT], 3),
        this.chest_buttons[Ge.CRAB_LOOT].id = Ge.CRAB_LOOT,
        this.chest_buttons[Ge.BED] = Ne(68, 68, 0, sprite[Le.CHEST_BED], 3),
        this.chest_buttons[Ge.BED].id = Ge.BED,
        this.chest_buttons[Ge.CROWN_CRAB] = Ne(68, 68, 0, sprite[Le.CHEST_CROWN_CRAB], 3),
        this.chest_buttons[Ge.CROWN_CRAB].id = Ge.CROWN_CRAB,
        this.chest_buttons[Ge.GARLAND] = Ne(68, 68, 0, sprite[Le.CHEST_GARLAND], 3),
        this.chest_buttons[Ge.GARLAND].id = Ge.GARLAND,
        this.chest_buttons[Ge.SUGAR_CAN] = Ne(68, 68, 0, sprite[Le.CHEST_SUGAR_CAN], 3),
        this.chest_buttons[Ge.SUGAR_CAN].id = Ge.SUGAR_CAN,
        this.chest_buttons[Ge.CANDY] = Ne(68, 68, 0, sprite[Le.CHEST_CANDY], 3),
        this.chest_buttons[Ge.CANDY].id = Ge.CANDY,
        this.plus_buttons = [];
        for (n = 0; n < 250; n++)
            this.plus_buttons[n] = Ne(0, 0, 0, sprite[Le.CHEST_PLUS]);
        this.inv_buttons = [],
        this.inv_buttons[Ge.SWORD] = Ne(60, 60, 0, sprite[Le.INV_SWORD], 3),
        this.inv_buttons[Ge.SWORD].id = Ge.SWORD,
        this.inv_buttons[Ge.PICK] = Ne(60, 60, 0, sprite[Le.INV_PICK], 3),
        this.inv_buttons[Ge.PICK].id = Ge.PICK,
        this.inv_buttons[Ge.STONE] = Ne(60, 60, 0, sprite[Le.INV_STONE], 3),
        this.inv_buttons[Ge.STONE].id = Ge.STONE,
        this.inv_buttons[Ge.STONE].info.img[2] = this.inv_buttons[Ge.STONE].info.img[0],
        this.inv_buttons[Ge.WOOD] = Ne(60, 60, 0, sprite[Le.INV_WOOD], 3),
        this.inv_buttons[Ge.WOOD].id = Ge.WOOD,
        this.inv_buttons[Ge.WOOD].info.img[2] = this.inv_buttons[Ge.WOOD].info.img[0],
        this.inv_buttons[Ge.PLANT] = Ne(60, 60, 0, sprite[Le.INV_PLANT], 3),
        this.inv_buttons[Ge.PLANT].id = Ge.PLANT,
        this.inv_buttons[Ge.CACTUS] = Ne(60, 60, 0, sprite[Le.INV_CACTUS], 3),
        this.inv_buttons[Ge.CACTUS].id = Ge.CACTUS,
        this.inv_buttons[Ge.GOLD] = Ne(60, 60, 0, sprite[Le.INV_GOLD], 3),
        this.inv_buttons[Ge.GOLD].id = Ge.GOLD,
        this.inv_buttons[Ge.GOLD].info.img[2] = this.inv_buttons[Ge.GOLD].info.img[0],
        this.inv_buttons[Ge.DIAMOND] = Ne(60, 60, 0, sprite[Le.INV_DIAMOND], 3),
        this.inv_buttons[Ge.DIAMOND].id = Ge.DIAMOND,
        this.inv_buttons[Ge.DIAMOND].info.img[2] = this.inv_buttons[Ge.DIAMOND].info.img[0],
        this.inv_buttons[Ge.PICK_GOLD] = Ne(60, 60, 0, sprite[Le.INV_PICK_GOLD], 3),
        this.inv_buttons[Ge.PICK_GOLD].id = Ge.PICK_GOLD,
        this.inv_buttons[Ge.PICK_DIAMOND] = Ne(60, 60, 0, sprite[Le.INV_PICK_DIAMOND], 3),
        this.inv_buttons[Ge.PICK_DIAMOND].id = Ge.PICK_DIAMOND,
        this.inv_buttons[Ge.SWORD_GOLD] = Ne(60, 60, 0, sprite[Le.INV_SWORD_GOLD], 3),
        this.inv_buttons[Ge.SWORD_GOLD].id = Ge.SWORD_GOLD,
        this.inv_buttons[Ge.SWORD_WOOD] = Ne(60, 60, 0, sprite[Le.INV_SWORD_WOOD], 3),
        this.inv_buttons[Ge.SWORD_WOOD].id = Ge.SWORD_WOOD,
        this.inv_buttons[Ge.SWORD_DIAMOND] = Ne(60, 60, 0, sprite[Le.INV_SWORD_DIAMOND], 3),
        this.inv_buttons[Ge.SWORD_DIAMOND].id = Ge.SWORD_DIAMOND,
        this.inv_buttons[Ge.FIRE] = Ne(60, 60, 0, sprite[Le.INV_FIRE], 3),
        this.inv_buttons[Ge.FIRE].id = Ge.FIRE,
        this.inv_buttons[Ge.WORKBENCH] = Ne(60, 60, 0, sprite[Le.INV_WORK], 3),
        this.inv_buttons[Ge.WORKBENCH].id = Ge.WORKBENCH,
        this.inv_buttons[Ge.SEED] = Ne(60, 60, 0, sprite[Le.INV_SEED], 3),
        this.inv_buttons[Ge.SEED].id = Ge.SEED,
        this.inv_buttons[Ge.WALL] = Ne(60, 60, 0, sprite[Le.INV_WALL], 3),
        this.inv_buttons[Ge.WALL].id = Ge.WALL,
        this.inv_buttons[Ge.SPIKE] = Ne(60, 60, 0, sprite[Le.INV_SPIKE], 3),
        this.inv_buttons[Ge.SPIKE].id = Ge.SPIKE,
        this.inv_buttons[Ge.PICK_WOOD] = Ne(60, 60, 0, sprite[Le.INV_PICK_WOOD], 3),
        this.inv_buttons[Ge.PICK_WOOD].id = Ge.PICK_WOOD,
        this.inv_buttons[Ge.COOKED_MEAT] = Ne(60, 60, 0, sprite[Le.INV_COOKED_MEAT], 3),
        this.inv_buttons[Ge.COOKED_MEAT].id = Ge.COOKED_MEAT,
        this.inv_buttons[Ge.MEAT] = Ne(60, 60, 0, sprite[Le.INV_MEAT], 3),
        this.inv_buttons[Ge.MEAT].id = Ge.MEAT,
        this.inv_buttons[Ge.BIG_FIRE] = Ne(60, 60, 0, sprite[Le.INV_BIG_FIRE], 3),
        this.inv_buttons[Ge.BIG_FIRE].id = Ge.BIG_FIRE,
        this.inv_buttons[Ge.BANDAGE] = Ne(60, 60, 0, sprite[Le.INV_BANDAGE], 3),
        this.inv_buttons[Ge.BANDAGE].id = Ge.BANDAGE,
        this.inv_buttons[Ge.CORD] = Ne(60, 60, 0, sprite[Le.INV_CORD], 3),
        this.inv_buttons[Ge.CORD].id = Ge.CORD,
        this.inv_buttons[Ge.CORD].info.img[2] = this.inv_buttons[Ge.CORD].info.img[0],
        this.inv_buttons[Ge.STONE_WALL] = Ne(60, 60, 0, sprite[Le.INV_STONE_WALL], 3),
        this.inv_buttons[Ge.STONE_WALL].id = Ge.STONE_WALL,
        this.inv_buttons[Ge.GOLD_WALL] = Ne(60, 60, 0, sprite[Le.INV_GOLD_WALL], 3),
        this.inv_buttons[Ge.GOLD_WALL].id = Ge.GOLD_WALL,
        this.inv_buttons[Ge.DIAMOND_WALL] = Ne(60, 60, 0, sprite[Le.INV_DIAMOND_WALL], 3),
        this.inv_buttons[Ge.DIAMOND_WALL].id = Ge.DIAMOND_WALL,
        this.inv_buttons[Ge.WOOD_DOOR] = Ne(60, 60, 0, sprite[Le.INV_DOOR_WOOD_CLOSE], 3),
        this.inv_buttons[Ge.WOOD_DOOR].id = Ge.WOOD_DOOR,
        this.inv_buttons[Ge.CHEST] = Ne(60, 60, 0, sprite[Le.INV_CHEST], 3),
        this.inv_buttons[Ge.CHEST].id = Ge.CHEST,
        this.inv_buttons[Ge.STONE_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_STONE_SPIKE], 3),
        this.inv_buttons[Ge.STONE_SPIKE].id = Ge.STONE_SPIKE,
        this.inv_buttons[Ge.GOLD_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_GOLD_SPIKE], 3),
        this.inv_buttons[Ge.GOLD_SPIKE].id = Ge.GOLD_SPIKE,
        this.inv_buttons[Ge.DIAMOND_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_DIAMOND_SPIKE], 3),
        this.inv_buttons[Ge.DIAMOND_SPIKE].id = Ge.DIAMOND_SPIKE,
        this.inv_buttons[Ge.BAG] = Ne(60, 60, 0, sprite[Le.INV_BAG], 3),
        this.inv_buttons[Ge.BAG].id = Ge.BAG,
        this.inv_buttons[Ge.EARMUFFS] = Ne(60, 60, 0, sprite[Le.INV_EARMUFFS], 3),
        this.inv_buttons[Ge.EARMUFFS].id = Ge.EARMUFFS,
        this.inv_buttons[Ge.STONE_DOOR] = Ne(60, 60, 0, sprite[Le.INV_DOOR_STONE_CLOSE], 3),
        this.inv_buttons[Ge.STONE_DOOR].id = Ge.STONE_DOOR,
        this.inv_buttons[Ge.GOLD_DOOR] = Ne(60, 60, 0, sprite[Le.INV_DOOR_GOLD_CLOSE], 3),
        this.inv_buttons[Ge.GOLD_DOOR].id = Ge.GOLD_DOOR,
        this.inv_buttons[Ge.DIAMOND_DOOR] = Ne(60, 60, 0, sprite[Le.INV_DOOR_DIAMOND_CLOSE], 3),
        this.inv_buttons[Ge.DIAMOND_DOOR].id = Ge.DIAMOND_DOOR,
        this.inv_buttons[Ge.FUR] = Ne(60, 60, 0, sprite[Le.INV_FUR], 3),
        this.inv_buttons[Ge.FUR].id = Ge.FUR,
        this.inv_buttons[Ge.FUR].info.img[2] = this.inv_buttons[Ge.FUR].info.img[0],
        this.inv_buttons[Ge.FUR_BOAR] = Ne(60, 60, 0, sprite[Le.INV_FUR_BOAR], 3),
        this.inv_buttons[Ge.FUR_BOAR].id = Ge.FUR_BOAR,
        this.inv_buttons[Ge.FUR_BOAR].info.img[2] = this.inv_buttons[Ge.FUR_BOAR].info.img[0],
        this.inv_buttons[Ge.FUR_WOLF] = Ne(60, 60, 0, sprite[Le.INV_FUR_WOLF], 3),
        this.inv_buttons[Ge.FUR_WOLF].id = Ge.FUR_WOLF,
        this.inv_buttons[Ge.FUR_WOLF].info.img[2] = this.inv_buttons[Ge.FUR_WOLF].info.img[0],
        this.inv_buttons[Ge.PENGUIN_FEATHER] = Ne(60, 60, 0, sprite[Le.INV_PENGUIN_FEATHER], 3),
        this.inv_buttons[Ge.PENGUIN_FEATHER].id = Ge.PENGUIN_FEATHER,
        this.inv_buttons[Ge.HAWK_FEATHER] = Ne(60, 60, 0, sprite[Le.INV_HAWK_FEATHER], 3),
        this.inv_buttons[Ge.HAWK_FEATHER].id = Ge.HAWK_FEATHER,
        this.inv_buttons[Ge.VULTURE_FEATHER] = Ne(60, 60, 0, sprite[Le.INV_VULTURE_FEATHER], 3),
        this.inv_buttons[Ge.VULTURE_FEATHER].id = Ge.VULTURE_FEATHER,
        this.inv_buttons[Ge.EMERALD] = Ne(60, 60, 0, sprite[Le.INV_EMERALD], 3),
        this.inv_buttons[Ge.EMERALD].id = Ge.EMERALD,
        this.inv_buttons[Ge.EARMUFFS] = Ne(60, 60, 0, sprite[Le.INV_EARMUFFS], 3),
        this.inv_buttons[Ge.EARMUFFS].id = Ge.EARMUFFS,
        this.inv_buttons[Ge.COAT] = Ne(60, 60, 0, sprite[Le.INV_COAT], 3),
        this.inv_buttons[Ge.COAT].id = Ge.COAT,
        this.inv_buttons[Ge.WOOD_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_WOOD_SPEAR], 3),
        this.inv_buttons[Ge.WOOD_SPEAR].id = Ge.WOOD_SPEAR,
        this.inv_buttons[Ge.SPEAR] = Ne(60, 60, 0, sprite[Le.INV_SPEAR], 3),
        this.inv_buttons[Ge.SPEAR].id = Ge.SPEAR,
        this.inv_buttons[Ge.GOLD_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_GOLD_SPEAR], 3),
        this.inv_buttons[Ge.GOLD_SPEAR].id = Ge.GOLD_SPEAR,
        this.inv_buttons[Ge.DIAMOND_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_DIAMOND_SPEAR], 3),
        this.inv_buttons[Ge.DIAMOND_SPEAR].id = Ge.DIAMOND_SPEAR,
        this.inv_buttons[Ge.DRAGON_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_DRAGON_SPEAR], 3),
        this.inv_buttons[Ge.DRAGON_SPEAR].id = Ge.DRAGON_SPEAR,
        this.inv_buttons[Ge.FURNACE] = Ne(60, 60, 0, sprite[Le.INV_FURNACE], 3),
        this.inv_buttons[Ge.FURNACE].id = Ge.FURNACE,
        this.inv_buttons[Ge.EXPLORER_HAT] = Ne(60, 60, 0, sprite[Le.INV_EXPLORER_HAT], 3),
        this.inv_buttons[Ge.EXPLORER_HAT].id = Ge.EXPLORER_HAT,
        this.inv_buttons[Ge.PIRATE_HAT] = Ne(60, 60, 0, sprite[Le.INV_PIRATE_HAT], 3),
        this.inv_buttons[Ge.PIRATE_HAT].id = Ge.PIRATE_HAT,
        this.inv_buttons[Ge.FLOWER_HAT] = Ne(60, 60, 0, sprite[Le.INV_FLOWER_HAT], 3),
        this.inv_buttons[Ge.FLOWER_HAT].id = Ge.FLOWER_HAT,
        this.inv_buttons[Ge.FUR_HAT] = Ne(60, 60, 0, sprite[Le.INV_FUR_HAT], 3),
        this.inv_buttons[Ge.FUR_HAT].id = Ge.FUR_HAT,
        this.inv_buttons[Ge.TURBAN1] = Ne(60, 60, 0, sprite[Le.INV_TURBAN1], 3),
        this.inv_buttons[Ge.TURBAN1].id = Ge.TURBAN1,
        this.inv_buttons[Ge.TURBAN2] = Ne(60, 60, 0, sprite[Le.INV_TURBAN2], 3),
        this.inv_buttons[Ge.TURBAN2].id = Ge.TURBAN2,
        this.inv_buttons[Ge.WOOD_BOW] = Ne(60, 60, 0, sprite[Le.INV_WOOD_BOW], 3),
        this.inv_buttons[Ge.WOOD_BOW].id = Ge.WOOD_BOW,
        this.inv_buttons[Ge.WOOD_ARROW] = Ne(60, 60, 0, sprite[Le.INV_WOOD_ARROW], 3),
        this.inv_buttons[Ge.WOOD_ARROW].id = Ge.WOOD_ARROW,
        this.inv_buttons[Ge.WOOD_SHIELD] = Ne(60, 60, 0, sprite[Le.INV_WOOD_SHIELD], 3),
        this.inv_buttons[Ge.WOOD_SHIELD].id = Ge.WOOD_SHIELD,
        this.inv_buttons[Ge.STONE_BOW] = Ne(60, 60, 0, sprite[Le.INV_STONE_BOW], 3),
        this.inv_buttons[Ge.STONE_BOW].id = Ge.STONE_BOW,
        this.inv_buttons[Ge.STONE_ARROW] = Ne(60, 60, 0, sprite[Le.INV_STONE_ARROW], 3),
        this.inv_buttons[Ge.STONE_ARROW].id = Ge.STONE_ARROW,
        this.inv_buttons[Ge.STONE_SHIELD] = Ne(60, 60, 0, sprite[Le.INV_STONE_SHIELD], 3),
        this.inv_buttons[Ge.STONE_SHIELD].id = Ge.STONE_SHIELD,
        this.inv_buttons[Ge.GOLD_BOW] = Ne(60, 60, 0, sprite[Le.INV_GOLD_BOW], 3),
        this.inv_buttons[Ge.GOLD_BOW].id = Ge.GOLD_BOW,
        this.inv_buttons[Ge.GOLD_ARROW] = Ne(60, 60, 0, sprite[Le.INV_GOLD_ARROW], 3),
        this.inv_buttons[Ge.GOLD_ARROW].id = Ge.GOLD_ARROW,
        this.inv_buttons[Ge.GOLD_SHIELD] = Ne(60, 60, 0, sprite[Le.INV_GOLD_SHIELD], 3),
        this.inv_buttons[Ge.GOLD_SHIELD].id = Ge.GOLD_SHIELD,
        this.inv_buttons[Ge.DIAMOND_BOW] = Ne(60, 60, 0, sprite[Le.INV_DIAMOND_BOW], 3),
        this.inv_buttons[Ge.DIAMOND_BOW].id = Ge.DIAMOND_BOW,
        this.inv_buttons[Ge.DIAMOND_ARROW] = Ne(60, 60, 0, sprite[Le.INV_DIAMOND_ARROW], 3),
        this.inv_buttons[Ge.DIAMOND_ARROW].id = Ge.DIAMOND_ARROW,
        this.inv_buttons[Ge.DIAMOND_SHIELD] = Ne(60, 60, 0, sprite[Le.INV_DIAMOND_SHIELD], 3),
        this.inv_buttons[Ge.DIAMOND_SHIELD].id = Ge.DIAMOND_SHIELD,
        this.inv_buttons[Ge.AMETHYST_BOW] = Ne(60, 60, 0, sprite[Le.INV_AMETHYST_BOW], 3),
        this.inv_buttons[Ge.AMETHYST_BOW].id = Ge.AMETHYST_BOW,
        this.inv_buttons[Ge.AMETHYST_ARROW] = Ne(60, 60, 0, sprite[Le.INV_AMETHYST_ARROW], 3),
        this.inv_buttons[Ge.AMETHYST_ARROW].id = Ge.AMETHYST_ARROW,
        this.inv_buttons[Ge.AMETHYST_SHIELD] = Ne(60, 60, 0, sprite[Le.INV_AMETHYST_SHIELD], 3),
        this.inv_buttons[Ge.AMETHYST_SHIELD].id = Ge.AMETHYST_SHIELD,
        this.inv_buttons[Ge.REIDITE_BOW] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_BOW], 3),
        this.inv_buttons[Ge.REIDITE_BOW].id = Ge.REIDITE_BOW,
        this.inv_buttons[Ge.REIDITE_ARROW] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_ARROW], 3),
        this.inv_buttons[Ge.REIDITE_ARROW].id = Ge.REIDITE_ARROW,
        this.inv_buttons[Ge.REIDITE_SHIELD] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_SHIELD], 3),
        this.inv_buttons[Ge.REIDITE_SHIELD].id = Ge.REIDITE_SHIELD,
        this.inv_buttons[Ge.DRAGON_BOW] = Ne(60, 60, 0, sprite[Le.INV_DRAGON_BOW], 3),
        this.inv_buttons[Ge.DRAGON_BOW].id = Ge.DRAGON_BOW,
        this.inv_buttons[Ge.DRAGON_ARROW] = Ne(60, 60, 0, sprite[Le.INV_DRAGON_ARROW], 3),
        this.inv_buttons[Ge.DRAGON_ARROW].id = Ge.DRAGON_ARROW,
        this.inv_buttons[Ge.WOOD_HELMET] = Ne(60, 60, 0, sprite[Le.INV_WOOD_HELMET], 3),
        this.inv_buttons[Ge.WOOD_HELMET].id = Ge.WOOD_HELMET,
        this.inv_buttons[Ge.STONE_HELMET] = Ne(60, 60, 0, sprite[Le.INV_STONE_HELMET], 3),
        this.inv_buttons[Ge.STONE_HELMET].id = Ge.STONE_HELMET,
        this.inv_buttons[Ge.GOLD_HELMET] = Ne(60, 60, 0, sprite[Le.INV_GOLD_HELMET], 3),
        this.inv_buttons[Ge.GOLD_HELMET].id = Ge.GOLD_HELMET,
        this.inv_buttons[Ge.DIAMOND_HELMET] = Ne(60, 60, 0, sprite[Le.INV_DIAMOND_HELMET], 3),
        this.inv_buttons[Ge.DIAMOND_HELMET].id = Ge.DIAMOND_HELMET,
        this.inv_buttons[Ge.BOOK] = Ne(60, 60, 0, sprite[Le.INV_BOOK], 3),
        this.inv_buttons[Ge.BOOK].id = Ge.BOOK,
        this.inv_buttons[Ge.PAPER] = Ne(60, 60, 0, sprite[Le.INV_PAPER], 3),
        this.inv_buttons[Ge.PAPER].id = Ge.PAPER,
        this.inv_buttons[Ge.PAPER].info.img[2] = this.inv_buttons[Ge.PAPER].info.img[0],
        this.inv_buttons[Ge.BAG] = Ne(60, 60, 0, sprite[Le.INV_BAG], 3),
        this.inv_buttons[Ge.BAG].id = Ge.BAG,
        this.inv_buttons[Ge.AMETHYST] = Ne(60, 60, 0, sprite[Le.INV_AMETHYST], 3),
        this.inv_buttons[Ge.AMETHYST].id = Ge.AMETHYST,
        this.inv_buttons[Ge.AMETHYST].info.img[2] = this.inv_buttons[Ge.AMETHYST].info.img[0],
        this.inv_buttons[Ge.SWORD_AMETHYST] = Ne(60, 60, 0, sprite[Le.INV_SWORD_AMETHYST], 3),
        this.inv_buttons[Ge.SWORD_AMETHYST].id = Ge.SWORD_AMETHYST,
        this.inv_buttons[Ge.PIRATE_SWORD] = Ne(60, 60, 0, sprite[Le.INV_PIRATE_SWORD], 3),
        this.inv_buttons[Ge.PIRATE_SWORD].id = Ge.PIRATE_SWORD,
        this.inv_buttons[Ge.PICK_AMETHYST] = Ne(60, 60, 0, sprite[Le.INV_PICK_AMETHYST], 3),
        this.inv_buttons[Ge.PICK_AMETHYST].id = Ge.PICK_AMETHYST,
        this.inv_buttons[Ge.PICK_REIDITE] = Ne(60, 60, 0, sprite[Le.INV_PICK_REIDITE], 3),
        this.inv_buttons[Ge.PICK_REIDITE].id = Ge.PICK_REIDITE,
        this.inv_buttons[Ge.AMETHYST_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_AMETHYST_SPEAR], 3),
        this.inv_buttons[Ge.AMETHYST_SPEAR].id = Ge.AMETHYST_SPEAR,
        this.inv_buttons[Ge.HAMMER] = Ne(60, 60, 0, sprite[Le.INV_HAMMER], 3),
        this.inv_buttons[Ge.HAMMER].id = Ge.HAMMER,
        this.inv_buttons[Ge.HAMMER_GOLD] = Ne(60, 60, 0, sprite[Le.INV_HAMMER_GOLD], 3),
        this.inv_buttons[Ge.HAMMER_GOLD].id = Ge.HAMMER_GOLD,
        this.inv_buttons[Ge.HAMMER_DIAMOND] = Ne(60, 60, 0, sprite[Le.INV_HAMMER_DIAMOND], 3),
        this.inv_buttons[Ge.HAMMER_DIAMOND].id = Ge.HAMMER_DIAMOND,
        this.inv_buttons[Ge.HAMMER_AMETHYST] = Ne(60, 60, 0, sprite[Le.INV_HAMMER_AMETHYST], 3),
        this.inv_buttons[Ge.HAMMER_AMETHYST].id = Ge.HAMMER_AMETHYST,
        this.inv_buttons[Ge.HAMMER_REIDITE] = Ne(60, 60, 0, sprite[Le.INV_HAMMER_REIDITE], 3),
        this.inv_buttons[Ge.HAMMER_REIDITE].id = Ge.HAMMER_REIDITE,
        this.inv_buttons[Ge.AMETHYST_WALL] = Ne(60, 60, 0, sprite[Le.INV_AMETHYST_WALL], 3),
        this.inv_buttons[Ge.AMETHYST_WALL].id = Ge.AMETHYST_WALL,
        this.inv_buttons[Ge.AMETHYST_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_AMETHYST_SPIKE], 3),
        this.inv_buttons[Ge.AMETHYST_SPIKE].id = Ge.AMETHYST_SPIKE,
        this.inv_buttons[Ge.AMETHYST_DOOR] = Ne(60, 60, 0, sprite[Le.INV_DOOR_AMETHYST_CLOSE], 3),
        this.inv_buttons[Ge.AMETHYST_DOOR].id = Ge.AMETHYST_DOOR,
        this.inv_buttons[Ge.CAP_SCARF] = Ne(60, 60, 0, sprite[Le.INV_CAP_SCARF], 3),
        this.inv_buttons[Ge.CAP_SCARF].id = Ge.CAP_SCARF,
        this.inv_buttons[Ge.FUR_WINTER] = Ne(60, 60, 0, sprite[Le.INV_FUR_WINTER], 3),
        this.inv_buttons[Ge.FUR_WINTER].id = Ge.FUR_WINTER,
        this.inv_buttons[Ge.FUR_WINTER].info.img[2] = this.inv_buttons[Ge.FUR_WINTER].info.img[0],
        this.inv_buttons[Ge.FUR_MAMMOTH] = Ne(60, 60, 0, sprite[Le.INV_FUR_MAMMOTH], 3),
        this.inv_buttons[Ge.FUR_MAMMOTH].id = Ge.FUR_MAMMOTH,
        this.inv_buttons[Ge.FUR_MAMMOTH].info.img[2] = this.inv_buttons[Ge.FUR_MAMMOTH].info.img[0],
        this.inv_buttons[Ge.BLUE_CORD] = Ne(60, 60, 0, sprite[Le.INV_BLUE_CORD], 3),
        this.inv_buttons[Ge.BLUE_CORD].id = Ge.BLUE_CORD,
        this.inv_buttons[Ge.BLUE_CORD].info.img[2] = this.inv_buttons[Ge.BLUE_CORD].info.img[0],
        this.inv_buttons[Ge.LOCK] = Ne(60, 60, 0, sprite[Le.INV_LOCK], 3),
        this.inv_buttons[Ge.LOCK].id = Ge.LOCK,
        this.inv_buttons[Ge.LOCK].info.img[2] = this.inv_buttons[Ge.LOCK].info.img[0],
        this.inv_buttons[Ge.DRAGON_HEART] = Ne(60, 60, 0, sprite[Le.INV_DRAGON_HEART], 3),
        this.inv_buttons[Ge.DRAGON_HEART].id = Ge.DRAGON_HEART,
        this.inv_buttons[Ge.LAVA_HEART] = Ne(60, 60, 0, sprite[Le.INV_LAVA_HEART], 3),
        this.inv_buttons[Ge.LAVA_HEART].id = Ge.LAVA_HEART,
        this.inv_buttons[Ge.RESURRECTION] = Ne(60, 60, 0, sprite[Le.INV_RESURRECTION], 3),
        this.inv_buttons[Ge.RESURRECTION].id = Ge.RESURRECTION,
        this.inv_buttons[Ge.LOCKPICK] = Ne(60, 60, 0, sprite[Le.INV_LOCKPICK], 3),
        this.inv_buttons[Ge.LOCKPICK].id = Ge.LOCKPICK,
        this.inv_buttons[Ge.TOTEM] = Ne(60, 60, 0, sprite[Le.INV_TOTEM], 3),
        this.inv_buttons[Ge.TOTEM].id = Ge.TOTEM,
        this.inv_buttons[Ge.AMETHYST_HELMET] = Ne(60, 60, 0, sprite[Le.INV_AMETHYST_HELMET], 3),
        this.inv_buttons[Ge.AMETHYST_HELMET].id = Ge.AMETHYST_HELMET,
        this.inv_buttons[Ge.SUPER_HAMMER] = Ne(60, 60, 0, sprite[Le.INV_SUPER_HAMMER], 3),
        this.inv_buttons[Ge.SUPER_HAMMER].id = Ge.SUPER_HAMMER,
        this.inv_buttons[Ge.BRIDGE] = Ne(60, 60, 0, sprite[Le.INV_BRIDGE], 3),
        this.inv_buttons[Ge.BRIDGE].id = Ge.BRIDGE,
        this.inv_buttons[Ge.WOOD_TOWER] = Ne(60, 60, 0, sprite[Le.INV_WOOD_TOWER], 3),
        this.inv_buttons[Ge.WOOD_TOWER].id = Ge.WOOD_TOWER,
        this.inv_buttons[Ge.BOAT] = Ne(60, 60, 0, sprite[Le.INV_BOAT], 3),
        this.inv_buttons[Ge.BOAT].id = Ge.BOAT,
        this.inv_buttons[Ge.SLED] = Ne(60, 60, 0, sprite[Le.INV_SLED], 3),
        this.inv_buttons[Ge.SLED].id = Ge.SLED,
        this.inv_buttons[Ge.PLANE] = Ne(60, 60, 0, sprite[Le.INV_PLANE], 3),
        this.inv_buttons[Ge.PLANE].id = Ge.PLANE,
        this.inv_buttons[Ge.SADDLE] = Ne(60, 60, 0, sprite[Le.INV_SADDLE], 3),
        this.inv_buttons[Ge.SADDLE].id = Ge.SADDLE,
        this.inv_buttons[Ge.MOUNT_BOAR] = Ne(60, 60, 0, sprite[Le.INV_MOUNT_BOAR], 3),
        this.inv_buttons[Ge.MOUNT_BOAR].id = Ge.MOUNT_BOAR,
        this.inv_buttons[Ge.CRAB_BOSS] = Ne(60, 60, 0, sprite[Le.INV_CRAB_BOSS], 3),
        this.inv_buttons[Ge.CRAB_BOSS].id = Ge.CRAB_BOSS,
        this.inv_buttons[Ge.BABY_DRAGON] = Ne(60, 60, 0, sprite[Le.INV_BABY_DRAGON], 3),
        this.inv_buttons[Ge.BABY_DRAGON].id = Ge.BABY_DRAGON,
        this.inv_buttons[Ge.BABY_MAMMOTH] = Ne(60, 60, 0, sprite[Le.INV_BABY_MAMMOTH], 3),
        this.inv_buttons[Ge.BABY_MAMMOTH].id = Ge.BABY_MAMMOTH,
        this.inv_buttons[Ge.BABY_LAVA] = Ne(60, 60, 0, sprite[Le.INV_BABY_LAVA], 3),
        this.inv_buttons[Ge.BABY_LAVA].id = Ge.BABY_LAVA,
        this.inv_buttons[Ge.HAWK] = Ne(60, 60, 0, sprite[Le.INV_HAWK], 3),
        this.inv_buttons[Ge.HAWK].id = Ge.HAWK,
        this.inv_buttons[Ge.SAND] = Ne(60, 60, 0, sprite[Le.INV_SAND], 3),
        this.inv_buttons[Ge.SAND].id = Ge.SAND,
        this.inv_buttons[Ge.SAND].info.img[2] = this.inv_buttons[Ge.SAND].info.img[0],
        this.inv_buttons[Ge.BOTTLE_FULL] = Ne(60, 60, 0, sprite[Le.INV_BOTTLE_FULL], 3),
        this.inv_buttons[Ge.BOTTLE_FULL].id = Ge.BOTTLE_FULL,
        this.inv_buttons[Ge.BOTTLE_EMPTY] = Ne(60, 60, 0, sprite[Le.INV_BOTTLE_EMPTY], 3),
        this.inv_buttons[Ge.BOTTLE_EMPTY].id = Ge.BOTTLE_EMPTY,
        this.inv_buttons[Ge.SHOVEL] = Ne(60, 60, 0, sprite[Le.INV_SHOVEL], 3),
        this.inv_buttons[Ge.SHOVEL].id = Ge.SHOVEL,
        this.inv_buttons[Ge.SHOVEL_GOLD] = Ne(60, 60, 0, sprite[Le.INV_SHOVEL_GOLD], 3),
        this.inv_buttons[Ge.SHOVEL_GOLD].id = Ge.SHOVEL_GOLD,
        this.inv_buttons[Ge.SHOVEL_DIAMOND] = Ne(60, 60, 0, sprite[Le.INV_SHOVEL_DIAMOND], 3),
        this.inv_buttons[Ge.SHOVEL_DIAMOND].id = Ge.SHOVEL_DIAMOND,
        this.inv_buttons[Ge.SHOVEL_AMETHYST] = Ne(60, 60, 0, sprite[Le.INV_SHOVEL_AMETHYST], 3),
        this.inv_buttons[Ge.SHOVEL_AMETHYST].id = Ge.SHOVEL_AMETHYST,
        this.inv_buttons[Ge.SPANNER] = Ne(60, 60, 0, sprite[Le.INV_SPANNER], 3),
        this.inv_buttons[Ge.SPANNER].id = Ge.SPANNER,
        this.inv_buttons[Ge.KRAKEN_SKIN] = Ne(60, 60, 0, sprite[Le.INV_KRAKEN_SKIN], 3),
        this.inv_buttons[Ge.KRAKEN_SKIN].id = Ge.KRAKEN_SKIN,
        this.inv_buttons[Ge.KRAKEN_SKIN].info.img[2] = this.inv_buttons[Ge.KRAKEN_SKIN].info.img[0],
        this.inv_buttons[Ge.WATERING_CAN] = Ne(60, 60, 0, sprite[Le.INV_WATERING_CAN], 3),
        this.inv_buttons[Ge.WATERING_CAN].id = Ge.WATERING_CAN,
        this.inv_buttons[Ge.FLOUR] = Ne(60, 60, 0, sprite[Le.INV_FLOUR], 3),
        this.inv_buttons[Ge.FLOUR].id = Ge.FLOUR,
        this.inv_buttons[Ge.FLOUR].info.img[2] = this.inv_buttons[Ge.FLOUR].info.img[0],
        this.inv_buttons[Ge.WHEAT_SEED] = Ne(60, 60, 0, sprite[Le.INV_WHEAT_SEED], 3),
        this.inv_buttons[Ge.WHEAT_SEED].id = Ge.WHEAT_SEED,
        this.inv_buttons[Ge.COOKIE] = Ne(60, 60, 0, sprite[Le.INV_COOKIE], 3),
        this.inv_buttons[Ge.COOKIE].id = Ge.COOKIE,
        this.inv_buttons[Ge.WILD_WHEAT] = Ne(60, 60, 0, sprite[Le.INV_WILD_WHEAT], 3),
        this.inv_buttons[Ge.WILD_WHEAT].id = Ge.WILD_WHEAT,
        this.inv_buttons[Ge.WILD_WHEAT].info.img[2] = this.inv_buttons[Ge.WILD_WHEAT].info.img[0],
        this.inv_buttons[Ge.WINDMILL] = Ne(60, 60, 0, sprite[Le.INV_WINDMILL], 3),
        this.inv_buttons[Ge.WINDMILL].id = Ge.WINDMILL,
        this.inv_buttons[Ge.SUPER_DIVING_SUIT] = Ne(60, 60, 0, sprite[Le.INV_SUPER_DIVING_SUIT], 3),
        this.inv_buttons[Ge.SUPER_DIVING_SUIT].id = Ge.SUPER_DIVING_SUIT,
        this.inv_buttons[Ge.DIVING_MASK] = Ne(60, 60, 0, sprite[Le.INV_DIVING_MASK], 3),
        this.inv_buttons[Ge.DIVING_MASK].id = Ge.DIVING_MASK,
        this.inv_buttons[Ge.WATERING_CAN_FULL] = Ne(60, 60, 0, sprite[Le.INV_WATERING_CAN_FULL], 3),
        this.inv_buttons[Ge.WATERING_CAN_FULL].id = Ge.WATERING_CAN_FULL,
        this.inv_buttons[Ge.CAKE] = Ne(60, 60, 0, sprite[Le.INV_CAKE], 3),
        this.inv_buttons[Ge.CAKE].id = Ge.CAKE,
        this.inv_buttons[Ge.BREAD] = Ne(60, 60, 0, sprite[Le.INV_BREAD], 3),
        this.inv_buttons[Ge.BREAD].id = Ge.BREAD,
        this.inv_buttons[Ge.FOODFISH] = Ne(60, 60, 0, sprite[Le.INV_FOODFISH], 3),
        this.inv_buttons[Ge.FOODFISH].id = Ge.FOODFISH,
        this.inv_buttons[Ge.FOODFISH_COOKED] = Ne(60, 60, 0, sprite[Le.INV_FOODFISH_COOKED], 3),
        this.inv_buttons[Ge.FOODFISH_COOKED].id = Ge.FOODFISH_COOKED,
        this.inv_buttons[Ge.SCALES] = Ne(60, 60, 0, sprite[Le.INV_SCALES], 3),
        this.inv_buttons[Ge.SCALES].id = Ge.SCALES,
        this.inv_buttons[Ge.SCALES].info.img[2] = this.inv_buttons[Ge.SCALES].info.img[0],
        this.inv_buttons[Ge.GROUND] = Ne(60, 60, 0, sprite[Le.INV_GROUND], 3),
        this.inv_buttons[Ge.GROUND].id = Ge.GROUND,
        this.inv_buttons[Ge.GROUND].info.img[2] = this.inv_buttons[Ge.GROUND].info.img[0],
        this.inv_buttons[Ge.PLOT] = Ne(60, 60, 0, sprite[Le.INV_PLOT], 3),
        this.inv_buttons[Ge.PLOT].id = Ge.PLOT,
        this.inv_buttons[Ge.ICE] = Ne(60, 60, 0, sprite[Le.INV_ICE], 3),
        this.inv_buttons[Ge.ICE].id = Ge.ICE,
        this.inv_buttons[Ge.ICE].info.img[2] = this.inv_buttons[Ge.ICE].info.img[0],
        this.inv_buttons[Ge.BREAD_OVEN] = Ne(60, 60, 0, sprite[Le.INV_BREAD_OVEN], 3),
        this.inv_buttons[Ge.BREAD_OVEN].id = Ge.BREAD_OVEN,
        this.inv_buttons[Ge.SANDWICH] = Ne(60, 60, 0, sprite[Le.INV_SANDWICH], 3),
        this.inv_buttons[Ge.SANDWICH].id = Ge.SANDWICH,
        this.inv_buttons[Ge.DRAGON_HELMET] = Ne(60, 60, 0, sprite[Le.INV_DRAGON_HELMET], 3),
        this.inv_buttons[Ge.DRAGON_HELMET].id = Ge.DRAGON_HELMET,
        this.inv_buttons[Ge.DRAGON_SWORD] = Ne(60, 60, 0, sprite[Le.INV_DRAGON_SWORD], 3),
        this.inv_buttons[Ge.DRAGON_SWORD].id = Ge.DRAGON_SWORD,
        this.inv_buttons[Ge.DRAGON_ORB] = Ne(60, 60, 0, sprite[Le.INV_DRAGON_ORB], 3),
        this.inv_buttons[Ge.DRAGON_ORB].id = Ge.DRAGON_ORB,
        this.inv_buttons[Ge.DRAGON_ORB].info.img[2] = this.inv_buttons[Ge.DRAGON_ORB].info.img[0],
        this.inv_buttons[Ge.DRAGON_CUBE] = Ne(60, 60, 0, sprite[Le.INV_DRAGON_CUBE], 3),
        this.inv_buttons[Ge.DRAGON_CUBE].id = Ge.DRAGON_CUBE,
        this.inv_buttons[Ge.DRAGON_CUBE].info.img[2] = this.inv_buttons[Ge.DRAGON_CUBE].info.img[0],
        this.inv_buttons[Ge.LAVA_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_LAVA_SPEAR], 3),
        this.inv_buttons[Ge.LAVA_SPEAR].id = Ge.LAVA_SPEAR,
        this.inv_buttons[Ge.LAVA_SWORD] = Ne(60, 60, 0, sprite[Le.INV_LAVA_SWORD], 3),
        this.inv_buttons[Ge.LAVA_SWORD].id = Ge.LAVA_SWORD,
        this.inv_buttons[Ge.LAVA_ORB] = Ne(60, 60, 0, sprite[Le.INV_LAVA_ORB], 3),
        this.inv_buttons[Ge.LAVA_ORB].id = Ge.LAVA_ORB,
        this.inv_buttons[Ge.LAVA_ORB].info.img[2] = this.inv_buttons[Ge.LAVA_ORB].info.img[0],
        this.inv_buttons[Ge.LAVA_CUBE] = Ne(60, 60, 0, sprite[Le.INV_LAVA_CUBE], 3),
        this.inv_buttons[Ge.LAVA_CUBE].id = Ge.LAVA_CUBE,
        this.inv_buttons[Ge.LAVA_CUBE].info.img[2] = this.inv_buttons[Ge.LAVA_CUBE].info.img[0],
        this.inv_buttons[Ge.CROWN_GREEN] = Ne(60, 60, 0, sprite[Le.INV_CROWN_GREEN], 3),
        this.inv_buttons[Ge.CROWN_GREEN].id = Ge.CROWN_GREEN,
        this.inv_buttons[Ge.GEMME_GREEN] = Ne(60, 60, 0, sprite[Le.INV_GEMME_GREEN], 3),
        this.inv_buttons[Ge.GEMME_GREEN].id = Ge.GEMME_GREEN,
        this.inv_buttons[Ge.GEMME_GREEN].info.img[2] = this.inv_buttons[Ge.GEMME_GREEN].info.img[0],
        this.inv_buttons[Ge.GEMME_ORANGE] = Ne(60, 60, 0, sprite[Le.INV_GEMME_ORANGE], 3),
        this.inv_buttons[Ge.GEMME_ORANGE].id = Ge.GEMME_ORANGE,
        this.inv_buttons[Ge.GEMME_ORANGE].info.img[2] = this.inv_buttons[Ge.GEMME_ORANGE].info.img[0],
        this.inv_buttons[Ge.CROWN_ORANGE] = Ne(60, 60, 0, sprite[Le.INV_CROWN_ORANGE], 3),
        this.inv_buttons[Ge.CROWN_ORANGE].id = Ge.CROWN_ORANGE,
        this.inv_buttons[Ge.GEMME_BLUE] = Ne(60, 60, 0, sprite[Le.INV_GEMME_BLUE], 3),
        this.inv_buttons[Ge.GEMME_BLUE].id = Ge.GEMME_BLUE,
        this.inv_buttons[Ge.GEMME_BLUE].info.img[2] = this.inv_buttons[Ge.GEMME_BLUE].info.img[0],
        this.inv_buttons[Ge.CROWN_BLUE] = Ne(60, 60, 0, sprite[Le.INV_CROWN_BLUE], 3),
        this.inv_buttons[Ge.CROWN_BLUE].id = Ge.CROWN_BLUE,
        this.inv_buttons[Ge.HOOD] = Ne(60, 60, 0, sprite[Le.INV_HOOD], 3),
        this.inv_buttons[Ge.HOOD].id = Ge.HOOD,
        this.inv_buttons[Ge.PEASANT] = Ne(60, 60, 0, sprite[Le.INV_PEASANT], 3),
        this.inv_buttons[Ge.PEASANT].id = Ge.PEASANT,
        this.inv_buttons[Ge.SPECIAL_FUR] = Ne(60, 60, 0, sprite[Le.INV_SPECIAL_FUR], 3),
        this.inv_buttons[Ge.SPECIAL_FUR].id = Ge.SPECIAL_FUR,
        this.inv_buttons[Ge.SPECIAL_FUR_2] = Ne(60, 60, 0, sprite[Le.INV_SPECIAL_FUR_2], 3),
        this.inv_buttons[Ge.SPECIAL_FUR_2].id = Ge.SPECIAL_FUR_2,
        this.inv_buttons[Ge.WINTER_PEASANT] = Ne(60, 60, 0, sprite[Le.INV_WINTER_PEASANT], 3),
        this.inv_buttons[Ge.WINTER_PEASANT].id = Ge.WINTER_PEASANT,
        this.inv_buttons[Ge.WINTER_HOOD] = Ne(60, 60, 0, sprite[Le.INV_WINTER_HOOD], 3),
        this.inv_buttons[Ge.WINTER_HOOD].id = Ge.WINTER_HOOD,
        this.inv_buttons[Ge.BUCKET_FULL] = Ne(60, 60, 0, sprite[Le.INV_BUCKET_FULL], 3),
        this.inv_buttons[Ge.BUCKET_FULL].id = Ge.BUCKET_FULL,
        this.inv_buttons[Ge.BUCKET_EMPTY] = Ne(60, 60, 0, sprite[Le.INV_BUCKET_EMPTY], 3),
        this.inv_buttons[Ge.BUCKET_EMPTY].id = Ge.BUCKET_EMPTY,
        this.inv_buttons[Ge.WELL] = Ne(60, 60, 0, sprite[Le.INV_WELL], 3),
        this.inv_buttons[Ge.WELL].id = Ge.WELL,
        this.inv_buttons[Ge.SIGN] = Ne(60, 60, 0, sprite[Le.INV_SIGN], 3),
        this.inv_buttons[Ge.SIGN].id = Ge.SIGN,
        this.inv_buttons[Ge.PUMPKIN_SEED] = Ne(60, 60, 0, sprite[Le.INV_PUMPKIN_SEED], 3),
        this.inv_buttons[Ge.PUMPKIN_SEED].id = Ge.PUMPKIN_SEED,
        this.inv_buttons[Ge.PUMPKIN] = Ne(60, 60, 0, sprite[Le.INV_PUMPKIN], 3),
        this.inv_buttons[Ge.PUMPKIN].id = Ge.PUMPKIN,
        this.inv_buttons[Ge.GARLIC_SEED] = Ne(60, 60, 0, sprite[Le.INV_GARLIC_SEED], 3),
        this.inv_buttons[Ge.GARLIC_SEED].id = Ge.GARLIC_SEED,
        this.inv_buttons[Ge.GARLIC] = Ne(60, 60, 0, sprite[Le.INV_GARLIC], 3),
        this.inv_buttons[Ge.GARLIC].id = Ge.GARLIC,
        this.inv_buttons[Ge.ROOF] = Ne(60, 60, 0, sprite[Le.INV_ROOF], 3),
        this.inv_buttons[Ge.ROOF].id = Ge.ROOF,
        this.inv_buttons[Ge.THORNBUSH_SEED] = Ne(60, 60, 0, sprite[Le.INV_THORNBUSH_SEED], 3),
        this.inv_buttons[Ge.THORNBUSH_SEED].id = Ge.THORNBUSH_SEED,
        this.inv_buttons[Ge.THORNBUSH] = Ne(60, 60, 0, sprite[Le.INV_THORNBUSH], 3),
        this.inv_buttons[Ge.THORNBUSH].id = Ge.THORNBUSH,
        this.inv_buttons[Ge.CARROT_SEED] = Ne(60, 60, 0, sprite[Le.INV_CARROT_SEED], 3),
        this.inv_buttons[Ge.CARROT_SEED].id = Ge.CARROT_SEED,
        this.inv_buttons[Ge.CARROT] = Ne(60, 60, 0, sprite[Le.INV_CARROT], 3),
        this.inv_buttons[Ge.CARROT].id = Ge.CARROT,
        this.inv_buttons[Ge.TOMATO_SEED] = Ne(60, 60, 0, sprite[Le.INV_TOMATO_SEED], 3),
        this.inv_buttons[Ge.TOMATO_SEED].id = Ge.TOMATO_SEED,
        this.inv_buttons[Ge.TOMATO] = Ne(60, 60, 0, sprite[Le.INV_TOMATO], 3),
        this.inv_buttons[Ge.TOMATO].id = Ge.TOMATO,
        this.inv_buttons[Ge.WATERMELON_SEED] = Ne(60, 60, 0, sprite[Le.INV_WATERMELON_SEED], 3),
        this.inv_buttons[Ge.WATERMELON_SEED].id = Ge.WATERMELON_SEED,
        this.inv_buttons[Ge.WATERMELON] = Ne(60, 60, 0, sprite[Le.INV_WATERMELON], 3),
        this.inv_buttons[Ge.WATERMELON].id = Ge.WATERMELON,
        this.inv_buttons[Ge.ALOE_VERA_SEED] = Ne(60, 60, 0, sprite[Le.INV_ALOE_VERA_SEED], 3),
        this.inv_buttons[Ge.ALOE_VERA_SEED].id = Ge.ALOE_VERA_SEED,
        this.inv_buttons[Ge.ALOE_VERA] = Ne(60, 60, 0, sprite[Le.INV_ALOE_VERA], 3),
        this.inv_buttons[Ge.ALOE_VERA].id = Ge.ALOE_VERA,
        this.inv_buttons[Ge.CHRISTMAS_HAT] = Ne(60, 60, 0, sprite[Le.INV_CHRISTMAS_HAT], 3),
        this.inv_buttons[Ge.CHRISTMAS_HAT].id = Ge.CHRISTMAS_HAT,
        this.inv_buttons[Ge.ELF_HAT] = Ne(60, 60, 0, sprite[Le.INV_ELF_HAT], 3),
        this.inv_buttons[Ge.ELF_HAT].id = Ge.ELF_HAT,
        this.inv_buttons[Ge.WOOD_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_WOOD_SPEAR], 3),
        this.inv_buttons[Ge.WOOD_SPEAR].id = Ge.WOOD_SPEAR,
        this.inv_buttons[Ge.DRAGON_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_DRAGON_SPEAR], 3),
        this.inv_buttons[Ge.DRAGON_SPEAR].id = Ge.DRAGON_SPEAR,
        this.inv_buttons[Ge.CRAB_STICK] = Ne(60, 60, 0, sprite[Le.INV_CRAB_STICK], 3),
        this.inv_buttons[Ge.CRAB_STICK].id = Ge.CRAB_STICK,
        this.inv_buttons[Ge.CRAB_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_CRAB_SPEAR], 3),
        this.inv_buttons[Ge.CRAB_SPEAR].id = Ge.CRAB_SPEAR,
        this.inv_buttons[Ge.CRAB_LOOT] = Ne(60, 60, 0, sprite[Le.INV_CRAB_LOOT], 3),
        this.inv_buttons[Ge.CRAB_LOOT].id = Ge.CRAB_LOOT,
        this.inv_buttons[Ge.BED] = Ne(60, 60, 0, sprite[Le.INV_BED], 3),
        this.inv_buttons[Ge.BED].id = Ge.BED,
        this.inv_buttons[Ge.CROWN_CRAB] = Ne(60, 60, 0, sprite[Le.INV_CROWN_CRAB], 3),
        this.inv_buttons[Ge.CROWN_CRAB].id = Ge.CROWN_CRAB,
        this.inv_buttons[Ge.GARLAND] = Ne(60, 60, 0, sprite[Le.INV_GARLAND], 3),
        this.inv_buttons[Ge.GARLAND].id = Ge.GARLAND,
        this.inv_buttons[Ge.CANDY] = Ne(60, 60, 0, sprite[Le.INV_CANDY], 3),
        this.inv_buttons[Ge.CANDY].id = Ge.CANDY,
        this.inv_buttons[Ge.SUGAR_CAN] = Ne(60, 60, 0, sprite[Le.INV_SUGAR_CAN], 3),
        this.inv_buttons[Ge.SUGAR_CAN].id = Ge.SUGAR_CAN,
        this.craft_buttons = [],
        this.craft_buttons[E.SWORD] = Ne(60, 60, 0, sprite[Le.CRAFT_SWORD], 3),
        this.craft_buttons[E.SWORD].id = E.SWORD,
        this.craft_buttons[E.PICK] = Ne(60, 60, 0, sprite[Le.CRAFT_PICK], 3),
        this.craft_buttons[E.PICK].id = E.PICK,
        this.craft_buttons[E.FIRE] = Ne(60, 60, 0, sprite[Le.CRAFT_FIRE], 3),
        this.craft_buttons[E.FIRE].id = E.FIRE,
        this.craft_buttons[E.WORKBENCH] = Ne(60, 60, 0, sprite[Le.CRAFT_WORK], 3),
        this.craft_buttons[E.WORKBENCH].id = E.WORKBENCH,
        this.craft_buttons[E.WALL] = Ne(60, 60, 0, sprite[Le.CRAFT_WALL], 3),
        this.craft_buttons[E.WALL].id = E.WALL,
        this.craft_buttons[E.SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_SPIKE], 3),
        this.craft_buttons[E.SPIKE].id = E.SPIKE,
        this.craft_buttons[E.SEED] = Ne(60, 60, 0, sprite[Le.CRAFT_SEED], 3),
        this.craft_buttons[E.SEED].id = E.SEED,
        this.craft_buttons[E.PICK_GOLD] = Ne(60, 60, 0, sprite[Le.CRAFT_PICK_GOLD], 3),
        this.craft_buttons[E.PICK_GOLD].id = E.PICK_GOLD,
        this.craft_buttons[E.PICK_DIAMOND] = Ne(60, 60, 0, sprite[Le.CRAFT_PICK_DIAMOND], 3),
        this.craft_buttons[E.PICK_DIAMOND].id = E.PICK_DIAMOND,
        this.craft_buttons[E.SWORD_GOLD] = Ne(60, 60, 0, sprite[Le.CRAFT_SWORD_GOLD], 3),
        this.craft_buttons[E.SWORD_GOLD].id = E.SWORD_GOLD,
        this.craft_buttons[E.SWORD_WOOD] = Ne(60, 60, 0, sprite[Le.CRAFT_SWORD_WOOD], 3),
        this.craft_buttons[E.SWORD_WOOD].id = E.SWORD_WOOD,
        this.craft_buttons[E.SWORD_DIAMOND] = Ne(60, 60, 0, sprite[Le.CRAFT_SWORD_DIAMOND], 3),
        this.craft_buttons[E.SWORD_DIAMOND].id = E.SWORD_DIAMOND,
        this.craft_buttons[E.PICK_WOOD] = Ne(60, 60, 0, sprite[Le.CRAFT_PICK_WOOD], 3),
        this.craft_buttons[E.PICK_WOOD].id = E.PICK_WOOD,
        this.craft_buttons[E.COOKED_MEAT] = Ne(60, 60, 0, sprite[Le.CRAFT_COOKED_MEAT], 3),
        this.craft_buttons[E.COOKED_MEAT].id = E.COOKED_MEAT,
        this.craft_buttons[E.BIG_FIRE] = Ne(60, 60, 0, sprite[Le.CRAFT_BIG_FIRE], 3),
        this.craft_buttons[E.BIG_FIRE].id = E.BIG_FIRE,
        this.craft_buttons[E.BANDAGE] = Ne(60, 60, 0, sprite[Le.CRAFT_BANDAGE], 3),
        this.craft_buttons[E.BANDAGE].id = E.BANDAGE,
        this.craft_buttons[E.STONE_WALL] = Ne(60, 60, 0, sprite[Le.CRAFT_STONE_WALL], 3),
        this.craft_buttons[E.STONE_WALL].id = E.STONE_WALL,
        this.craft_buttons[E.GOLD_WALL] = Ne(60, 60, 0, sprite[Le.CRAFT_GOLD_WALL], 3),
        this.craft_buttons[E.GOLD_WALL].id = E.GOLD_WALL,
        this.craft_buttons[E.DIAMOND_WALL] = Ne(60, 60, 0, sprite[Le.CRAFT_DIAMOND_WALL], 3),
        this.craft_buttons[E.DIAMOND_WALL].id = E.DIAMOND_WALL,
        this.craft_buttons[E.WOOD_DOOR] = Ne(60, 60, 0, sprite[Le.CRAFT_DOOR_WOOD_CLOSE], 3),
        this.craft_buttons[E.WOOD_DOOR].id = E.WOOD_DOOR,
        this.craft_buttons[E.CHEST] = Ne(60, 60, 0, sprite[Le.CRAFT_CHEST], 3),
        this.craft_buttons[E.CHEST].id = E.CHEST,
        this.craft_buttons[E.STONE_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_STONE_SPIKE], 3),
        this.craft_buttons[E.STONE_SPIKE].id = E.STONE_SPIKE,
        this.craft_buttons[E.GOLD_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_GOLD_SPIKE], 3),
        this.craft_buttons[E.GOLD_SPIKE].id = E.GOLD_SPIKE,
        this.craft_buttons[E.DIAMOND_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_DIAMOND_SPIKE], 3),
        this.craft_buttons[E.DIAMOND_SPIKE].id = E.DIAMOND_SPIKE,
        this.craft_buttons[E.BAG] = Ne(60, 60, 0, sprite[Le.CRAFT_BAG], 3),
        this.craft_buttons[E.BAG].id = E.BAG,
        this.craft_buttons[E.EARMUFFS] = Ne(60, 60, 0, sprite[Le.CRAFT_EARMUFFS], 3),
        this.craft_buttons[E.EARMUFFS].id = E.EARMUFFS,
        this.craft_buttons[E.STONE_DOOR] = Ne(60, 60, 0, sprite[Le.CRAFT_DOOR_STONE_CLOSE], 3),
        this.craft_buttons[E.STONE_DOOR].id = E.STONE_DOOR,
        this.craft_buttons[E.GOLD_DOOR] = Ne(60, 60, 0, sprite[Le.CRAFT_DOOR_GOLD_CLOSE], 3),
        this.craft_buttons[E.GOLD_DOOR].id = E.GOLD_DOOR,
        this.craft_buttons[E.DIAMOND_DOOR] = Ne(60, 60, 0, sprite[Le.CRAFT_DOOR_DIAMOND_CLOSE], 3),
        this.craft_buttons[E.DIAMOND_DOOR].id = E.DIAMOND_DOOR,
        this.craft_buttons[E.EARMUFFS] = Ne(60, 60, 0, sprite[Le.CRAFT_EARMUFFS], 3),
        this.craft_buttons[E.EARMUFFS].id = E.EARMUFFS,
        this.craft_buttons[E.COAT] = Ne(60, 60, 0, sprite[Le.CRAFT_COAT], 3),
        this.craft_buttons[E.COAT].id = E.COAT,
        this.craft_buttons[E.WOOD_SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_WOOD_SPEAR], 3),
        this.craft_buttons[E.WOOD_SPEAR].id = E.WOOD_SPEAR,
        this.craft_buttons[E.SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_SPEAR], 3),
        this.craft_buttons[E.SPEAR].id = E.SPEAR,
        this.craft_buttons[E.GOLD_SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_GOLD_SPEAR], 3),
        this.craft_buttons[E.GOLD_SPEAR].id = E.GOLD_SPEAR,
        this.craft_buttons[E.DIAMOND_SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_DIAMOND_SPEAR], 3),
        this.craft_buttons[E.DIAMOND_SPEAR].id = E.DIAMOND_SPEAR,
        this.craft_buttons[E.DRAGON_SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_DRAGON_SPEAR], 3),
        this.craft_buttons[E.DRAGON_SPEAR].id = E.DRAGON_SPEAR,
        this.craft_buttons[E.FURNACE] = Ne(60, 60, 0, sprite[Le.CRAFT_FURNACE], 3),
        this.craft_buttons[E.FURNACE].id = E.FURNACE,
        this.craft_buttons[E.EXPLORER_HAT] = Ne(60, 60, 0, sprite[Le.CRAFT_EXPLORER_HAT], 3),
        this.craft_buttons[E.EXPLORER_HAT].id = E.EXPLORER_HAT,
        this.craft_buttons[E.PIRATE_HAT] = Ne(60, 60, 0, sprite[Le.CRAFT_PIRATE_HAT], 3),
        this.craft_buttons[E.PIRATE_HAT].id = E.PIRATE_HAT,
        this.craft_buttons[E.FLOWER_HAT] = Ne(60, 60, 0, sprite[Le.CRAFT_FLOWER_HAT], 3),
        this.craft_buttons[E.FLOWER_HAT].id = E.FLOWER_HAT,
        this.craft_buttons[E.FUR_HAT] = Ne(60, 60, 0, sprite[Le.CRAFT_FUR_HAT], 3),
        this.craft_buttons[E.FUR_HAT].id = E.FUR_HAT,
        this.craft_buttons[E.TURBAN1] = Ne(60, 60, 0, sprite[Le.CRAFT_TURBAN1], 3),
        this.craft_buttons[E.TURBAN1].id = E.TURBAN1,
        this.craft_buttons[E.TURBAN2] = Ne(60, 60, 0, sprite[Le.CRAFT_TURBAN2], 3),
        this.craft_buttons[E.TURBAN2].id = E.TURBAN2,
        this.craft_buttons[E.WOOD_BOW] = Ne(60, 60, 0, sprite[Le.CRAFT_WOOD_BOW], 3),
        this.craft_buttons[E.WOOD_BOW].id = E.WOOD_BOW,
        this.craft_buttons[E.WOOD_ARROW] = Ne(60, 60, 0, sprite[Le.CRAFT_WOOD_ARROW], 3),
        this.craft_buttons[E.WOOD_ARROW].id = E.WOOD_ARROW,
        this.craft_buttons[E.WOOD_SHIELD] = Ne(60, 60, 0, sprite[Le.CRAFT_WOOD_SHIELD], 3),
        this.craft_buttons[E.WOOD_SHIELD].id = E.WOOD_SHIELD,
        this.craft_buttons[E.STONE_BOW] = Ne(60, 60, 0, sprite[Le.CRAFT_STONE_BOW], 3),
        this.craft_buttons[E.STONE_BOW].id = E.STONE_BOW,
        this.craft_buttons[E.STONE_ARROW] = Ne(60, 60, 0, sprite[Le.CRAFT_STONE_ARROW], 3),
        this.craft_buttons[E.STONE_ARROW].id = E.STONE_ARROW,
        this.craft_buttons[E.STONE_SHIELD] = Ne(60, 60, 0, sprite[Le.CRAFT_STONE_SHIELD], 3),
        this.craft_buttons[E.STONE_SHIELD].id = E.STONE_SHIELD,
        this.craft_buttons[E.GOLD_BOW] = Ne(60, 60, 0, sprite[Le.CRAFT_GOLD_BOW], 3),
        this.craft_buttons[E.GOLD_BOW].id = E.GOLD_BOW,
        this.craft_buttons[E.GOLD_ARROW] = Ne(60, 60, 0, sprite[Le.CRAFT_GOLD_ARROW], 3),
        this.craft_buttons[E.GOLD_ARROW].id = E.GOLD_ARROW,
        this.craft_buttons[E.GOLD_SHIELD] = Ne(60, 60, 0, sprite[Le.CRAFT_GOLD_SHIELD], 3),
        this.craft_buttons[E.GOLD_SHIELD].id = E.GOLD_SHIELD,
        this.craft_buttons[E.DIAMOND_BOW] = Ne(60, 60, 0, sprite[Le.CRAFT_DIAMOND_BOW], 3),
        this.craft_buttons[E.DIAMOND_BOW].id = E.DIAMOND_BOW,
        this.craft_buttons[E.DIAMOND_ARROW] = Ne(60, 60, 0, sprite[Le.CRAFT_DIAMOND_ARROW], 3),
        this.craft_buttons[E.DIAMOND_ARROW].id = E.DIAMOND_ARROW,
        this.craft_buttons[E.DIAMOND_SHIELD] = Ne(60, 60, 0, sprite[Le.CRAFT_DIAMOND_SHIELD], 3),
        this.craft_buttons[E.DIAMOND_SHIELD].id = E.DIAMOND_SHIELD,
        this.craft_buttons[E.AMETHYST_BOW] = Ne(60, 60, 0, sprite[Le.CRAFT_AMETHYST_BOW], 3),
        this.craft_buttons[E.AMETHYST_BOW].id = E.AMETHYST_BOW,
        this.craft_buttons[E.AMETHYST_ARROW] = Ne(60, 60, 0, sprite[Le.CRAFT_AMETHYST_ARROW], 3),
        this.craft_buttons[E.AMETHYST_ARROW].id = E.AMETHYST_ARROW,
        this.craft_buttons[E.AMETHYST_SHIELD] = Ne(60, 60, 0, sprite[Le.CRAFT_AMETHYST_SHIELD], 3),
        this.craft_buttons[E.AMETHYST_SHIELD].id = E.AMETHYST_SHIELD,
        this.craft_buttons[E.REIDITE_BOW] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_BOW], 3),
        this.craft_buttons[E.REIDITE_BOW].id = E.REIDITE_BOW,
        this.craft_buttons[E.REIDITE_ARROW] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_ARROW], 3),
        this.craft_buttons[E.REIDITE_ARROW].id = E.REIDITE_ARROW,
        this.craft_buttons[E.REIDITE_SHIELD] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_SHIELD], 3),
        this.craft_buttons[E.REIDITE_SHIELD].id = E.REIDITE_SHIELD,
        this.craft_buttons[E.DRAGON_BOW] = Ne(60, 60, 0, sprite[Le.CRAFT_DRAGON_BOW], 3),
        this.craft_buttons[E.DRAGON_BOW].id = E.DRAGON_BOW,
        this.craft_buttons[E.DRAGON_ARROW] = Ne(60, 60, 0, sprite[Le.CRAFT_DRAGON_ARROW], 3),
        this.craft_buttons[E.DRAGON_ARROW].id = E.DRAGON_ARROW,
        this.craft_buttons[E.WOOD_HELMET] = Ne(60, 60, 0, sprite[Le.CRAFT_WOOD_HELMET], 3),
        this.craft_buttons[E.WOOD_HELMET].id = E.WOOD_HELMET,
        this.craft_buttons[E.STONE_HELMET] = Ne(60, 60, 0, sprite[Le.CRAFT_STONE_HELMET], 3),
        this.craft_buttons[E.STONE_HELMET].id = E.STONE_HELMET,
        this.craft_buttons[E.GOLD_HELMET] = Ne(60, 60, 0, sprite[Le.CRAFT_GOLD_HELMET], 3),
        this.craft_buttons[E.GOLD_HELMET].id = E.GOLD_HELMET,
        this.craft_buttons[E.DIAMOND_HELMET] = Ne(60, 60, 0, sprite[Le.CRAFT_DIAMOND_HELMET], 3),
        this.craft_buttons[E.DIAMOND_HELMET].id = E.DIAMOND_HELMET,
        this.craft_buttons[E.BOOK] = Ne(60, 60, 0, sprite[Le.CRAFT_BOOK], 3),
        this.craft_buttons[E.BOOK].id = E.BOOK,
        this.craft_buttons[E.PAPER] = Ne(60, 60, 0, sprite[Le.CRAFT_PAPER], 3),
        this.craft_buttons[E.PAPER].id = E.PAPER,
        this.craft_buttons[E.BAG] = Ne(60, 60, 0, sprite[Le.CRAFT_BAG], 3),
        this.craft_buttons[E.BAG].id = E.BAG,
        this.craft_buttons[E.SWORD_AMETHYST] = Ne(60, 60, 0, sprite[Le.CRAFT_SWORD_AMETHYST], 3),
        this.craft_buttons[E.SWORD_AMETHYST].id = E.SWORD_AMETHYST,
        this.craft_buttons[E.PIRATE_SWORD] = Ne(60, 60, 0, sprite[Le.CRAFT_PIRATE_SWORD], 3),
        this.craft_buttons[E.PIRATE_SWORD].id = E.PIRATE_SWORD,
        this.craft_buttons[E.PICK_AMETHYST] = Ne(60, 60, 0, sprite[Le.CRAFT_PICK_AMETHYST], 3),
        this.craft_buttons[E.PICK_AMETHYST].id = E.PICK_AMETHYST,
        this.craft_buttons[E.PICK_REIDITE] = Ne(60, 60, 0, sprite[Le.CRAFT_PICK_REIDITE], 3),
        this.craft_buttons[E.PICK_REIDITE].id = E.PICK_REIDITE,
        this.craft_buttons[E.AMETHYST_SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_AMETHYST_SPEAR], 3),
        this.craft_buttons[E.AMETHYST_SPEAR].id = E.AMETHYST_SPEAR,
        this.craft_buttons[E.HAMMER] = Ne(60, 60, 0, sprite[Le.CRAFT_HAMMER], 3),
        this.craft_buttons[E.HAMMER].id = E.HAMMER,
        this.craft_buttons[E.HAMMER_GOLD] = Ne(60, 60, 0, sprite[Le.CRAFT_HAMMER_GOLD], 3),
        this.craft_buttons[E.HAMMER_GOLD].id = E.HAMMER_GOLD,
        this.craft_buttons[E.HAMMER_DIAMOND] = Ne(60, 60, 0, sprite[Le.CRAFT_HAMMER_DIAMOND], 3),
        this.craft_buttons[E.HAMMER_DIAMOND].id = E.HAMMER_DIAMOND,
        this.craft_buttons[E.HAMMER_AMETHYST] = Ne(60, 60, 0, sprite[Le.CRAFT_HAMMER_AMETHYST], 3),
        this.craft_buttons[E.HAMMER_AMETHYST].id = E.HAMMER_AMETHYST,
        this.craft_buttons[E.HAMMER_REIDITE] = Ne(60, 60, 0, sprite[Le.CRAFT_HAMMER_REIDITE], 3),
        this.craft_buttons[E.HAMMER_REIDITE].id = E.HAMMER_REIDITE,
        this.craft_buttons[E.AMETHYST_WALL] = Ne(60, 60, 0, sprite[Le.CRAFT_AMETHYST_WALL], 3),
        this.craft_buttons[E.AMETHYST_WALL].id = E.AMETHYST_WALL,
        this.craft_buttons[E.AMETHYST_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_AMETHYST_SPIKE], 3),
        this.craft_buttons[E.AMETHYST_SPIKE].id = E.AMETHYST_SPIKE,
        this.craft_buttons[E.AMETHYST_DOOR] = Ne(60, 60, 0, sprite[Le.CRAFT_DOOR_AMETHYST_CLOSE], 3),
        this.craft_buttons[E.AMETHYST_DOOR].id = E.AMETHYST_DOOR,
        this.craft_buttons[E.CAP_SCARF] = Ne(60, 60, 0, sprite[Le.CRAFT_CAP_SCARF], 3),
        this.craft_buttons[E.CAP_SCARF].id = E.CAP_SCARF,
        this.craft_buttons[E.BLUE_CORD] = Ne(60, 60, 0, sprite[Le.CRAFT_BLUE_CORD], 3),
        this.craft_buttons[E.BLUE_CORD].id = E.BLUE_CORD,
        this.craft_buttons[E.LOCK] = Ne(60, 60, 0, sprite[Le.CRAFT_LOCK], 3),
        this.craft_buttons[E.LOCK].id = E.LOCK,
        this.craft_buttons[E.RESURRECTION] = Ne(60, 60, 0, sprite[Le.CRAFT_RESURRECTION], 3),
        this.craft_buttons[E.RESURRECTION].id = E.RESURRECTION,
        this.craft_buttons[E.LOCKPICK] = Ne(60, 60, 0, sprite[Le.CRAFT_LOCKPICK], 3),
        this.craft_buttons[E.LOCKPICK].id = E.LOCKPICK,
        this.craft_buttons[E.TOTEM] = Ne(60, 60, 0, sprite[Le.CRAFT_TOTEM], 3),
        this.craft_buttons[E.TOTEM].id = E.TOTEM,
        this.craft_buttons[E.AMETHYST_HELMET] = Ne(60, 60, 0, sprite[Le.CRAFT_AMETHYST_HELMET], 3),
        this.craft_buttons[E.AMETHYST_HELMET].id = E.AMETHYST_HELMET,
        this.craft_buttons[E.SUPER_HAMMER] = Ne(60, 60, 0, sprite[Le.CRAFT_SUPER_HAMMER], 3),
        this.craft_buttons[E.SUPER_HAMMER].id = E.SUPER_HAMMER,
        this.craft_buttons[E.BRIDGE] = Ne(60, 60, 0, sprite[Le.CRAFT_BRIDGE], 3),
        this.craft_buttons[E.BRIDGE].id = E.BRIDGE,
        this.craft_buttons[E.WOOD_TOWER] = Ne(60, 60, 0, sprite[Le.CRAFT_WOOD_TOWER], 3),
        this.craft_buttons[E.WOOD_TOWER].id = E.WOOD_TOWER,
        this.craft_buttons[E.BOAT] = Ne(60, 60, 0, sprite[Le.CRAFT_BOAT], 3),
        this.craft_buttons[E.BOAT].id = E.BOAT,
        this.craft_buttons[E.SLED] = Ne(60, 60, 0, sprite[Le.CRAFT_SLED], 3),
        this.craft_buttons[E.SLED].id = E.SLED,
        this.craft_buttons[E.PLANE] = Ne(60, 60, 0, sprite[Le.CRAFT_PLANE], 3),
        this.craft_buttons[E.PLANE].id = E.PLANE,
        this.craft_buttons[E.SADDLE] = Ne(60, 60, 0, sprite[Le.CRAFT_SADDLE], 3),
        this.craft_buttons[E.SADDLE].id = E.SADDLE,
        this.craft_buttons[E.MOUNT_BOAR] = Ne(60, 60, 0, sprite[Le.CRAFT_MOUNT_BOAR], 3),
        this.craft_buttons[E.MOUNT_BOAR].id = E.MOUNT_BOAR,
        this.craft_buttons[E.BABY_DRAGON] = Ne(60, 60, 0, sprite[Le.CRAFT_BABY_DRAGON], 3),
        this.craft_buttons[E.BABY_DRAGON].id = E.BABY_DRAGON,
        this.craft_buttons[E.BABY_MAMMOTH] = Ne(60, 60, 0, sprite[Le.CRAFT_BABY_MAMMOTH], 3),
        this.craft_buttons[E.BABY_MAMMOTH].id = E.BABY_MAMMOTH,
        this.craft_buttons[E.CRAB_BOSS] = Ne(60, 60, 0, sprite[Le.CRAFT_CRAB_BOSS], 3),
        this.craft_buttons[E.CRAB_BOSS].id = E.CRAB_BOSS,
        this.craft_buttons[E.BOTTLE_EMPTY] = Ne(60, 60, 0, sprite[Le.CRAFT_BOTTLE_EMPTY], 3),
        this.craft_buttons[E.BOTTLE_EMPTY].id = E.BOTTLE_EMPTY,
        this.craft_buttons[E.BOTTLE_FULL] = Ne(60, 60, 0, sprite[Le.CRAFT_BOTTLE_FULL], 3),
        this.craft_buttons[E.BOTTLE_FULL].id = E.BOTTLE_FULL,
        this.craft_buttons[E.BOTTLE_FULL_2] = Ne(60, 60, 0, sprite[Le.CRAFT_BOTTLE_FULL], 3),
        this.craft_buttons[E.BOTTLE_FULL_2].id = E.BOTTLE_FULL_2,
        this.craft_buttons[E.BOTTLE_FULL_3] = Ne(60, 60, 0, sprite[Le.CRAFT_BOTTLE_FULL], 3),
        this.craft_buttons[E.BOTTLE_FULL_3].id = E.BOTTLE_FULL_3,
        this.craft_buttons[E.SHOVEL] = Ne(60, 60, 0, sprite[Le.CRAFT_SHOVEL], 3),
        this.craft_buttons[E.SHOVEL].id = E.SHOVEL,
        this.craft_buttons[E.SHOVEL_GOLD] = Ne(60, 60, 0, sprite[Le.CRAFT_SHOVEL_GOLD], 3),
        this.craft_buttons[E.SHOVEL_GOLD].id = E.SHOVEL_GOLD,
        this.craft_buttons[E.SHOVEL_DIAMOND] = Ne(60, 60, 0, sprite[Le.CRAFT_SHOVEL_DIAMOND], 3),
        this.craft_buttons[E.SHOVEL_DIAMOND].id = E.SHOVEL_DIAMOND,
        this.craft_buttons[E.SHOVEL_AMETHYST] = Ne(60, 60, 0, sprite[Le.CRAFT_SHOVEL_AMETHYST], 3),
        this.craft_buttons[E.SHOVEL_AMETHYST].id = E.SHOVEL_AMETHYST,
        this.craft_buttons[E.SPANNER] = Ne(60, 60, 0, sprite[Le.CRAFT_SPANNER], 3),
        this.craft_buttons[E.SPANNER].id = E.SPANNER,
        this.craft_buttons[E.WATERING_CAN] = Ne(60, 60, 0, sprite[Le.CRAFT_WATERING_CAN], 3),
        this.craft_buttons[E.WATERING_CAN].id = E.WATERING_CAN,
        this.craft_buttons[E.WHEAT_SEED] = Ne(60, 60, 0, sprite[Le.CRAFT_WHEAT_SEED], 3),
        this.craft_buttons[E.WHEAT_SEED].id = E.WHEAT_SEED,
        this.craft_buttons[E.COOKIE] = Ne(60, 60, 0, sprite[Le.CRAFT_COOKIE], 3),
        this.craft_buttons[E.COOKIE].id = E.COOKIE,
        this.craft_buttons[E.WINDMILL] = Ne(60, 60, 0, sprite[Le.CRAFT_WINDMILL], 3),
        this.craft_buttons[E.WINDMILL].id = E.WINDMILL,
        this.craft_buttons[E.SUPER_DIVING_SUIT] = Ne(60, 60, 0, sprite[Le.CRAFT_SUPER_DIVING_SUIT], 3),
        this.craft_buttons[E.SUPER_DIVING_SUIT].id = E.SUPER_DIVING_SUIT,
        this.craft_buttons[E.DIVING_MASK] = Ne(60, 60, 0, sprite[Le.CRAFT_DIVING_MASK], 3),
        this.craft_buttons[E.DIVING_MASK].id = E.DIVING_MASK,
        this.craft_buttons[E.WATERING_CAN_FULL] = Ne(60, 60, 0, sprite[Le.CRAFT_WATERING_CAN_FULL], 3),
        this.craft_buttons[E.WATERING_CAN_FULL].id = E.WATERING_CAN_FULL,
        this.craft_buttons[E.CAKE] = Ne(60, 60, 0, sprite[Le.CRAFT_CAKE], 3),
        this.craft_buttons[E.CAKE].id = E.CAKE,
        this.craft_buttons[E.BREAD] = Ne(60, 60, 0, sprite[Le.CRAFT_BREAD], 3),
        this.craft_buttons[E.BREAD].id = E.BREAD,
        this.craft_buttons[E.FOODFISH_COOKED] = Ne(60, 60, 0, sprite[Le.CRAFT_FOODFISH_COOKED], 3),
        this.craft_buttons[E.FOODFISH_COOKED].id = E.FOODFISH_COOKED,
        this.craft_buttons[E.PLOT] = Ne(60, 60, 0, sprite[Le.CRAFT_PLOT], 3),
        this.craft_buttons[E.PLOT].id = E.PLOT,
        this.craft_buttons[E.BREAD_OVEN] = Ne(60, 60, 0, sprite[Le.CRAFT_BREAD_OVEN], 3),
        this.craft_buttons[E.BREAD_OVEN].id = E.BREAD_OVEN,
        this.craft_buttons[E.SANDWICH] = Ne(60, 60, 0, sprite[Le.CRAFT_SANDWICH], 3),
        this.craft_buttons[E.SANDWICH].id = E.SANDWICH,
        this.craft_buttons[E.DRAGON_HELMET] = Ne(60, 60, 0, sprite[Le.CRAFT_DRAGON_HELMET], 3),
        this.craft_buttons[E.DRAGON_HELMET].id = E.DRAGON_HELMET,
        this.craft_buttons[E.DRAGON_SWORD] = Ne(60, 60, 0, sprite[Le.INV_DRAGON_SWORD], 3),
        this.craft_buttons[E.DRAGON_SWORD].id = E.DRAGON_SWORD,
        this.craft_buttons[E.CROWN_GREEN] = Ne(60, 60, 0, sprite[Le.CRAFT_CROWN_GREEN], 3),
        this.craft_buttons[E.CROWN_GREEN].id = E.CROWN_GREEN,
        this.craft_buttons[E.CROWN_ORANGE] = Ne(60, 60, 0, sprite[Le.CRAFT_CROWN_ORANGE], 3),
        this.craft_buttons[E.CROWN_ORANGE].id = E.CROWN_ORANGE,
        this.craft_buttons[E.CROWN_BLUE] = Ne(60, 60, 0, sprite[Le.CRAFT_CROWN_BLUE], 3),
        this.craft_buttons[E.CROWN_BLUE].id = E.CROWN_BLUE,
        this.craft_buttons[E.HOOD] = Ne(60, 60, 0, sprite[Le.CRAFT_HOOD], 3),
        this.craft_buttons[E.HOOD].id = E.HOOD,
        this.craft_buttons[E.PEASANT] = Ne(60, 60, 0, sprite[Le.CRAFT_PEASANT], 3),
        this.craft_buttons[E.PEASANT].id = E.PEASANT,
        this.craft_buttons[E.WINTER_PEASANT] = Ne(60, 60, 0, sprite[Le.CRAFT_WINTER_PEASANT], 3),
        this.craft_buttons[E.WINTER_PEASANT].id = E.WINTER_PEASANT,
        this.craft_buttons[E.WINTER_HOOD] = Ne(60, 60, 0, sprite[Le.CRAFT_WINTER_HOOD], 3),
        this.craft_buttons[E.WINTER_HOOD].id = E.WINTER_HOOD,
        this.craft_buttons[E.BUCKET_FULL] = Ne(60, 60, 0, sprite[Le.CRAFT_BUCKET_FULL], 3),
        this.craft_buttons[E.BUCKET_FULL].id = E.BUCKET_FULL,
        this.craft_buttons[E.BUCKET_EMPTY] = Ne(60, 60, 0, sprite[Le.CRAFT_BUCKET_EMPTY], 3),
        this.craft_buttons[E.BUCKET_EMPTY].id = E.BUCKET_EMPTY,
        this.craft_buttons[E.WELL] = Ne(60, 60, 0, sprite[Le.CRAFT_WELL], 3),
        this.craft_buttons[E.WELL].id = E.WELL,
        this.craft_buttons[E.SIGN] = Ne(60, 60, 0, sprite[Le.CRAFT_SIGN], 3),
        this.craft_buttons[E.SIGN].id = E.SIGN,
        this.craft_buttons[E.PUMPKIN_SEED] = Ne(60, 60, 0, sprite[Le.CRAFT_PUMPKIN_SEED], 3),
        this.craft_buttons[E.PUMPKIN_SEED].id = E.PUMPKIN_SEED,
        this.craft_buttons[E.GARLIC_SEED] = Ne(60, 60, 0, sprite[Le.CRAFT_GARLIC_SEED], 3),
        this.craft_buttons[E.GARLIC_SEED].id = E.GARLIC_SEED,
        this.craft_buttons[E.ROOF] = Ne(60, 60, 0, sprite[Le.CRAFT_ROOF], 3),
        this.craft_buttons[E.ROOF].id = E.ROOF,
        this.craft_buttons[E.THORNBUSH_SEED] = Ne(60, 60, 0, sprite[Le.CRAFT_THORNBUSH_SEED], 3),
        this.craft_buttons[E.THORNBUSH_SEED].id = E.THORNBUSH_SEED,
        this.craft_buttons[E.TOMATO_SEED] = Ne(60, 60, 0, sprite[Le.CRAFT_TOMATO_SEED], 3),
        this.craft_buttons[E.TOMATO_SEED].id = E.TOMATO_SEED,
        this.craft_buttons[E.CARROT_SEED] = Ne(60, 60, 0, sprite[Le.CRAFT_CARROT_SEED], 3),
        this.craft_buttons[E.CARROT_SEED].id = E.CARROT_SEED,
        this.craft_buttons[E.WATERMELON_SEED] = Ne(60, 60, 0, sprite[Le.CRAFT_WATERMELON_SEED], 3),
        this.craft_buttons[E.WATERMELON_SEED].id = E.WATERMELON_SEED,
        this.craft_buttons[E.ALOE_VERA_SEED] = Ne(60, 60, 0, sprite[Le.CRAFT_ALOE_VERA_SEED], 3),
        this.craft_buttons[E.ALOE_VERA_SEED].id = E.ALOE_VERA_SEED,
        this.craft_buttons[E.WOOD_SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_WOOD_SPEAR], 3),
        this.craft_buttons[E.WOOD_SPEAR].id = E.WOOD_SPEAR,
        this.craft_buttons[E.DRAGON_SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_DRAGON_SPEAR], 3),
        this.craft_buttons[E.DRAGON_SPEAR].id = E.DRAGON_SPEAR,
        this.craft_buttons[E.CRAB_SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_CRAB_SPEAR], 3),
        this.craft_buttons[E.CRAB_SPEAR].id = E.CRAB_SPEAR,
        this.craft_buttons[E.BED] = Ne(60, 60, 0, sprite[Le.CRAFT_BED], 3),
        this.craft_buttons[E.BED].id = E.BED,
        this.craft_buttons[E.CROWN_CRAB] = Ne(60, 60, 0, sprite[Le.CRAFT_CROWN_CRAB], 3),
        this.craft_buttons[E.CROWN_CRAB].id = E.CROWN_CRAB,
        this.chest_buttons[Ge.PITCHFORK] = Ne(68, 68, 0, sprite[Le.CHEST_PITCHFORK], 3),
        this.chest_buttons[Ge.PITCHFORK].id = Ge.PITCHFORK,
        this.inv_buttons[Ge.PITCHFORK] = Ne(60, 60, 0, sprite[Le.INV_PITCHFORK], 3),
        this.inv_buttons[Ge.PITCHFORK].id = Ge.PITCHFORK,
        this.craft_buttons[E.PITCHFORK] = Ne(60, 60, 0, sprite[Le.CRAFT_PITCHFORK], 3),
        this.craft_buttons[E.PITCHFORK].id = E.PITCHFORK,
        this.chest_buttons[Ge.PITCHFORK2] = Ne(68, 68, 0, sprite[Le.CHEST_PITCHFORK2], 3),
        this.chest_buttons[Ge.PITCHFORK2].id = Ge.PITCHFORK2,
        this.inv_buttons[Ge.PITCHFORK2] = Ne(60, 60, 0, sprite[Le.INV_PITCHFORK2], 3),
        this.inv_buttons[Ge.PITCHFORK2].id = Ge.PITCHFORK2,
        this.craft_buttons[E.PITCHFORK2] = Ne(60, 60, 0, sprite[Le.CRAFT_PITCHFORK2], 3),
        this.craft_buttons[E.PITCHFORK2].id = E.PITCHFORK2,
        this.chest_buttons[Ge.MACHETE] = Ne(68, 68, 0, sprite[Le.CHEST_MACHETE], 3),
        this.chest_buttons[Ge.MACHETE].id = Ge.MACHETE,
        this.inv_buttons[Ge.MACHETE] = Ne(60, 60, 0, sprite[Le.INV_MACHETE], 3),
        this.inv_buttons[Ge.MACHETE].id = Ge.MACHETE,
        this.craft_buttons[E.MACHETE] = Ne(60, 60, 0, sprite[Le.CRAFT_MACHETE], 3),
        this.craft_buttons[E.MACHETE].id = E.MACHETE,
        this.chest_buttons[Ge.PILOT_HELMET] = Ne(68, 68, 0, sprite[Le.CHEST_PILOT_HELMET], 3),
        this.chest_buttons[Ge.PILOT_HELMET].id = Ge.PILOT_HELMET,
        this.inv_buttons[Ge.PILOT_HELMET] = Ne(60, 60, 0, sprite[Le.INV_PILOT_HELMET], 3),
        this.inv_buttons[Ge.PILOT_HELMET].id = Ge.PILOT_HELMET,
        this.craft_buttons[E.PILOT_HELMET] = Ne(60, 60, 0, sprite[Le.CRAFT_PILOT_HELMET], 3),
        this.craft_buttons[E.PILOT_HELMET].id = E.PILOT_HELMET,
        this.chest_buttons[Ge.PITCHFORK_PART] = Ne(68, 68, 0, sprite[Le.CHEST_PITCHFORK_PART], 3),
        this.chest_buttons[Ge.PITCHFORK_PART].id = Ge.PITCHFORK_PART,
        this.inv_buttons[Ge.PITCHFORK_PART] = Ne(60, 60, 0, sprite[Le.INV_PITCHFORK_PART], 3),
        this.inv_buttons[Ge.PITCHFORK_PART].id = Ge.PITCHFORK_PART,
        this.chest_buttons[Ge.SANDWORM_JUICE] = Ne(68, 68, 0, sprite[Le.CHEST_SANDWORM_JUICE], 3),
        this.chest_buttons[Ge.SANDWORM_JUICE].id = Ge.SANDWORM_JUICE,
        this.inv_buttons[Ge.SANDWORM_JUICE] = Ne(60, 60, 0, sprite[Le.INV_SANDWORM_JUICE], 3),
        this.inv_buttons[Ge.SANDWORM_JUICE].id = Ge.SANDWORM_JUICE,
        this.chest_buttons[Ge.PILOT_GLASSES] = Ne(68, 68, 0, sprite[Le.CHEST_PILOT_GLASSES], 3),
        this.chest_buttons[Ge.PILOT_GLASSES].id = Ge.PILOT_GLASSES,
        this.inv_buttons[Ge.PILOT_GLASSES] = Ne(60, 60, 0, sprite[Le.INV_PILOT_GLASSES], 3),
        this.inv_buttons[Ge.PILOT_GLASSES].id = Ge.PILOT_GLASSES,
        this.chest_buttons[Ge.EMERALD_MACHINE] = Ne(68, 68, 0, sprite[Le.CHEST_EMERALD_MACHINE], 3),
        this.chest_buttons[Ge.EMERALD_MACHINE].id = Ge.EMERALD_MACHINE,
        this.inv_buttons[Ge.EMERALD_MACHINE] = Ne(60, 60, 0, sprite[Le.INV_EMERALD_MACHINE], 3),
        this.inv_buttons[Ge.EMERALD_MACHINE].id = Ge.EMERALD_MACHINE,
        this.craft_buttons[E.EMERALD_MACHINE] = Ne(60, 60, 0, sprite[Le.CRAFT_EMERALD_MACHINE], 3),
        this.craft_buttons[E.EMERALD_MACHINE].id = E.EMERALD_MACHINE,
        this.chest_buttons[Ge.WOOD_DOOR_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_WOOD_DOOR_SPIKE], 3),
        this.chest_buttons[Ge.WOOD_DOOR_SPIKE].id = Ge.WOOD_DOOR_SPIKE,
        this.inv_buttons[Ge.WOOD_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_WOOD_DOOR_SPIKE], 3),
        this.inv_buttons[Ge.WOOD_DOOR_SPIKE].id = Ge.WOOD_DOOR_SPIKE,
        this.craft_buttons[E.WOOD_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_WOOD_DOOR_SPIKE], 3),
        this.craft_buttons[E.WOOD_DOOR_SPIKE].id = E.WOOD_DOOR_SPIKE,
        this.chest_buttons[Ge.STONE_DOOR_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_STONE_DOOR_SPIKE], 3),
        this.chest_buttons[Ge.STONE_DOOR_SPIKE].id = Ge.STONE_DOOR_SPIKE,
        this.inv_buttons[Ge.STONE_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_STONE_DOOR_SPIKE], 3),
        this.inv_buttons[Ge.STONE_DOOR_SPIKE].id = Ge.STONE_DOOR_SPIKE,
        this.craft_buttons[E.STONE_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_STONE_DOOR_SPIKE], 3),
        this.craft_buttons[E.STONE_DOOR_SPIKE].id = E.STONE_DOOR_SPIKE,
        this.chest_buttons[Ge.GOLD_DOOR_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_GOLD_DOOR_SPIKE], 3),
        this.chest_buttons[Ge.GOLD_DOOR_SPIKE].id = Ge.GOLD_DOOR_SPIKE,
        this.inv_buttons[Ge.GOLD_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_GOLD_DOOR_SPIKE], 3),
        this.inv_buttons[Ge.GOLD_DOOR_SPIKE].id = Ge.GOLD_DOOR_SPIKE,
        this.craft_buttons[E.GOLD_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_GOLD_DOOR_SPIKE], 3),
        this.craft_buttons[E.GOLD_DOOR_SPIKE].id = E.GOLD_DOOR_SPIKE,
        this.chest_buttons[Ge.DIAMOND_DOOR_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_DIAMOND_DOOR_SPIKE], 3),
        this.chest_buttons[Ge.DIAMOND_DOOR_SPIKE].id = Ge.DIAMOND_DOOR_SPIKE,
        this.inv_buttons[Ge.DIAMOND_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_DIAMOND_DOOR_SPIKE], 3),
        this.inv_buttons[Ge.DIAMOND_DOOR_SPIKE].id = Ge.DIAMOND_DOOR_SPIKE,
        this.craft_buttons[E.DIAMOND_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_DIAMOND_DOOR_SPIKE], 3),
        this.craft_buttons[E.DIAMOND_DOOR_SPIKE].id = E.DIAMOND_DOOR_SPIKE,
        this.chest_buttons[Ge.AMETHYST_DOOR_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_AMETHYST_DOOR_SPIKE], 3),
        this.chest_buttons[Ge.AMETHYST_DOOR_SPIKE].id = Ge.AMETHYST_DOOR_SPIKE;
        this.inv_buttons[Ge.AMETHYST_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_AMETHYST_DOOR_SPIKE], 3),
        this.inv_buttons[Ge.AMETHYST_DOOR_SPIKE].id = Ge.AMETHYST_DOOR_SPIKE,
        this.craft_buttons[E.AMETHYST_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_AMETHYST_DOOR_SPIKE], 3),
        this.craft_buttons[E.AMETHYST_DOOR_SPIKE].id = E.AMETHYST_DOOR_SPIKE,
        this.chest_buttons[Ge.REIDITE_DOOR_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_DOOR_SPIKE], 3),
        this.chest_buttons[Ge.REIDITE_DOOR_SPIKE].id = Ge.REIDITE_DOOR_SPIKE,
        this.inv_buttons[Ge.REIDITE_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_DOOR_SPIKE], 3),
        this.inv_buttons[Ge.REIDITE_DOOR_SPIKE].id = Ge.REIDITE_DOOR_SPIKE,
        this.craft_buttons[E.REIDITE_DOOR_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_DOOR_SPIKE], 3),
        this.craft_buttons[E.REIDITE_DOOR_SPIKE].id = E.REIDITE_DOOR_SPIKE,
        this.chest_buttons[Ge.REIDITE_WALL] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_WALL], 3),
        this.chest_buttons[Ge.REIDITE_WALL].id = Ge.REIDITE_WALL,
        this.inv_buttons[Ge.REIDITE_WALL] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_WALL], 3),
        this.inv_buttons[Ge.REIDITE_WALL].id = Ge.REIDITE_WALL,
        this.craft_buttons[E.REIDITE_WALL] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_WALL], 3),
        this.craft_buttons[E.REIDITE_WALL].id = E.REIDITE_WALL,
        this.chest_buttons[Ge.REIDITE_SPIKE] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_SPIKE], 3),
        this.chest_buttons[Ge.REIDITE_SPIKE].id = Ge.REIDITE_SPIKE,
        this.inv_buttons[Ge.REIDITE_SPIKE] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_SPIKE], 3),
        this.inv_buttons[Ge.REIDITE_SPIKE].id = Ge.REIDITE_SPIKE,
        this.craft_buttons[E.REIDITE_SPIKE] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_SPIKE], 3),
        this.craft_buttons[E.REIDITE_SPIKE].id = E.REIDITE_SPIKE,
        this.chest_buttons[Ge.REIDITE_DOOR] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_DOOR], 3),
        this.chest_buttons[Ge.REIDITE_DOOR].id = Ge.REIDITE_DOOR,
        this.inv_buttons[Ge.REIDITE_DOOR] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_DOOR], 3),
        this.inv_buttons[Ge.REIDITE_DOOR].id = Ge.REIDITE_DOOR,
        this.craft_buttons[E.REIDITE_DOOR] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_DOOR], 3),
        this.craft_buttons[E.REIDITE_DOOR].id = E.REIDITE_DOOR,
        this.chest_buttons[Ge.EXTRACTOR_MACHINE_STONE] = Ne(68, 68, 0, sprite[Le.CHEST_EXTRACTOR_MACHINE_STONE], 3),
        this.chest_buttons[Ge.EXTRACTOR_MACHINE_STONE].id = Ge.EXTRACTOR_MACHINE_STONE,
        this.inv_buttons[Ge.EXTRACTOR_MACHINE_STONE] = Ne(60, 60, 0, sprite[Le.INV_EXTRACTOR_MACHINE_STONE], 3),
        this.inv_buttons[Ge.EXTRACTOR_MACHINE_STONE].id = Ge.EXTRACTOR_MACHINE_STONE,
        this.craft_buttons[E.EXTRACTOR_MACHINE_STONE] = Ne(60, 60, 0, sprite[Le.CRAFT_EXTRACTOR_MACHINE_STONE], 3),
        this.craft_buttons[E.EXTRACTOR_MACHINE_STONE].id = E.EXTRACTOR_MACHINE_STONE,
        this.chest_buttons[Ge.EXTRACTOR_MACHINE_GOLD] = Ne(68, 68, 0, sprite[Le.CHEST_EXTRACTOR_MACHINE_GOLD], 3),
        this.chest_buttons[Ge.EXTRACTOR_MACHINE_GOLD].id = Ge.EXTRACTOR_MACHINE_GOLD,
        this.inv_buttons[Ge.EXTRACTOR_MACHINE_GOLD] = Ne(60, 60, 0, sprite[Le.INV_EXTRACTOR_MACHINE_GOLD], 3),
        this.inv_buttons[Ge.EXTRACTOR_MACHINE_GOLD].id = Ge.EXTRACTOR_MACHINE_GOLD,
        this.craft_buttons[E.EXTRACTOR_MACHINE_GOLD] = Ne(60, 60, 0, sprite[Le.CRAFT_EXTRACTOR_MACHINE_GOLD], 3),
        this.craft_buttons[E.EXTRACTOR_MACHINE_GOLD].id = E.EXTRACTOR_MACHINE_GOLD,
        this.chest_buttons[Ge.EXTRACTOR_MACHINE_DIAMOND] = Ne(68, 68, 0, sprite[Le.CHEST_EXTRACTOR_MACHINE_DIAMOND], 3),
        this.chest_buttons[Ge.EXTRACTOR_MACHINE_DIAMOND].id = Ge.EXTRACTOR_MACHINE_DIAMOND,
        this.inv_buttons[Ge.EXTRACTOR_MACHINE_DIAMOND] = Ne(60, 60, 0, sprite[Le.INV_EXTRACTOR_MACHINE_DIAMOND], 3),
        this.inv_buttons[Ge.EXTRACTOR_MACHINE_DIAMOND].id = Ge.EXTRACTOR_MACHINE_DIAMOND,
        this.craft_buttons[E.EXTRACTOR_MACHINE_DIAMOND] = Ne(60, 60, 0, sprite[Le.CRAFT_EXTRACTOR_MACHINE_DIAMOND], 3),
        this.craft_buttons[E.EXTRACTOR_MACHINE_DIAMOND].id = E.EXTRACTOR_MACHINE_DIAMOND,
        this.chest_buttons[Ge.EXTRACTOR_MACHINE_AMETHYST] = Ne(68, 68, 0, sprite[Le.CHEST_EXTRACTOR_MACHINE_AMETHYST], 3),
        this.chest_buttons[Ge.EXTRACTOR_MACHINE_AMETHYST].id = Ge.EXTRACTOR_MACHINE_AMETHYST,
        this.inv_buttons[Ge.EXTRACTOR_MACHINE_AMETHYST] = Ne(60, 60, 0, sprite[Le.INV_EXTRACTOR_MACHINE_AMETHYST], 3),
        this.inv_buttons[Ge.EXTRACTOR_MACHINE_AMETHYST].id = Ge.EXTRACTOR_MACHINE_AMETHYST,
        this.craft_buttons[E.EXTRACTOR_MACHINE_AMETHYST] = Ne(60, 60, 0, sprite[Le.CRAFT_EXTRACTOR_MACHINE_AMETHYST], 3),
        this.craft_buttons[E.EXTRACTOR_MACHINE_AMETHYST].id = E.EXTRACTOR_MACHINE_AMETHYST,
        this.chest_buttons[Ge.EXTRACTOR_MACHINE_REIDITE] = Ne(68, 68, 0, sprite[Le.CHEST_EXTRACTOR_MACHINE_REIDITE], 3),
        this.chest_buttons[Ge.EXTRACTOR_MACHINE_REIDITE].id = Ge.EXTRACTOR_MACHINE_REIDITE,
        this.inv_buttons[Ge.EXTRACTOR_MACHINE_REIDITE] = Ne(60, 60, 0, sprite[Le.INV_EXTRACTOR_MACHINE_REIDITE], 3),
        this.inv_buttons[Ge.EXTRACTOR_MACHINE_REIDITE].id = Ge.EXTRACTOR_MACHINE_REIDITE,
        this.craft_buttons[E.EXTRACTOR_MACHINE_REIDITE] = Ne(60, 60, 0, sprite[Le.CRAFT_EXTRACTOR_MACHINE_REIDITE], 3),
        this.craft_buttons[E.EXTRACTOR_MACHINE_REIDITE].id = E.EXTRACTOR_MACHINE_REIDITE,
        this.chest_buttons[Ge.FLAME] = Ne(68, 68, 0, sprite[Le.CHEST_FLAME], 3),
        this.chest_buttons[Ge.FLAME].id = Ge.FLAME,
        this.inv_buttons[Ge.FLAME] = Ne(60, 60, 0, sprite[Le.INV_FLAME], 3),
        this.inv_buttons[Ge.FLAME].id = Ge.FLAME,
        this.inv_buttons[Ge.FLAME].info.img[2] = this.inv_buttons[Ge.FLAME].info.img[0],
        this.chest_buttons[Ge.LAVA_HEART] = Ne(68, 68, 0, sprite[Le.CHEST_LAVA_HEART], 3),
        this.chest_buttons[Ge.LAVA_HEART].id = Ge.LAVA_HEART,
        this.inv_buttons[Ge.LAVA_HEART] = Ne(60, 60, 0, sprite[Le.INV_LAVA_HEART], 3),
        this.inv_buttons[Ge.LAVA_HEART].id = Ge.LAVA_HEART,
        this.inv_buttons[Ge.LAVA_HEART].info.img[2] = this.inv_buttons[Ge.LAVA_HEART].info.img[0],
        this.chest_buttons[Ge.REIDITE] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE], 3),
        this.chest_buttons[Ge.REIDITE].id = Ge.REIDITE,
        this.inv_buttons[Ge.REIDITE] = Ne(60, 60, 0, sprite[Le.INV_REIDITE], 3),
        this.inv_buttons[Ge.REIDITE].id = Ge.REIDITE,
        this.inv_buttons[Ge.REIDITE].info.img[2] = this.inv_buttons[Ge.REIDITE].info.img[0],
        this.chest_buttons[Ge.REIDITE_SWORD] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_SWORD], 3),
        this.chest_buttons[Ge.REIDITE_SWORD].id = Ge.REIDITE_SWORD,
        this.inv_buttons[Ge.REIDITE_SWORD] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_SWORD], 3),
        this.inv_buttons[Ge.REIDITE_SWORD].id = Ge.REIDITE_SWORD,
        this.craft_buttons[E.REIDITE_SWORD] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_SWORD], 3),
        this.craft_buttons[E.REIDITE_SWORD].id = E.REIDITE_SWORD,
        this.chest_buttons[Ge.DIAMOND_PROTECTION] = Ne(68, 68, 0, sprite[Le.CHEST_DIAMOND_PROTECTION], 3),
        this.chest_buttons[Ge.DIAMOND_PROTECTION].id = Ge.DIAMOND_PROTECTION,
        this.inv_buttons[Ge.DIAMOND_PROTECTION] = Ne(60, 60, 0, sprite[Le.INV_DIAMOND_PROTECTION], 3),
        this.inv_buttons[Ge.DIAMOND_PROTECTION].id = Ge.DIAMOND_PROTECTION,
        this.craft_buttons[E.DIAMOND_PROTECTION] = Ne(60, 60, 0, sprite[Le.CRAFT_DIAMOND_PROTECTION], 3),
        this.craft_buttons[E.DIAMOND_PROTECTION].id = E.DIAMOND_PROTECTION,
        this.chest_buttons[Ge.AMETHYST_PROTECTION] = Ne(68, 68, 0, sprite[Le.CHEST_AMETHYST_PROTECTION], 3),
        this.chest_buttons[Ge.AMETHYST_PROTECTION].id = Ge.AMETHYST_PROTECTION,
        this.inv_buttons[Ge.AMETHYST_PROTECTION] = Ne(60, 60, 0, sprite[Le.INV_AMETHYST_PROTECTION], 3),
        this.inv_buttons[Ge.AMETHYST_PROTECTION].id = Ge.AMETHYST_PROTECTION,
        this.craft_buttons[E.AMETHYST_PROTECTION] = Ne(60, 60, 0, sprite[Le.CRAFT_AMETHYST_PROTECTION], 3),
        this.craft_buttons[E.AMETHYST_PROTECTION].id = E.AMETHYST_PROTECTION,
        this.chest_buttons[Ge.REIDITE_PROTECTION] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_PROTECTION], 3),
        this.chest_buttons[Ge.REIDITE_PROTECTION].id = Ge.REIDITE_PROTECTION,
        this.inv_buttons[Ge.REIDITE_PROTECTION] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_PROTECTION], 3),
        this.inv_buttons[Ge.REIDITE_PROTECTION].id = Ge.REIDITE_PROTECTION,
        this.craft_buttons[E.REIDITE_PROTECTION] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_PROTECTION], 3),
        this.craft_buttons[E.REIDITE_PROTECTION].id = E.REIDITE_PROTECTION,
        this.chest_buttons[Ge.LAVA_HELMET] = Ne(68, 68, 0, sprite[Le.CHEST_LAVA_HELMET], 3),
        this.chest_buttons[Ge.LAVA_HELMET].id = Ge.LAVA_HELMET,
        this.inv_buttons[Ge.LAVA_HELMET] = Ne(60, 60, 0, sprite[Le.INV_LAVA_HELMET], 3),
        this.inv_buttons[Ge.LAVA_HELMET].id = Ge.LAVA_HELMET,
        this.craft_buttons[E.LAVA_HELMET] = Ne(60, 60, 0, sprite[Le.CRAFT_LAVA_HELMET], 3),
        this.craft_buttons[E.LAVA_HELMET].id = E.LAVA_HELMET,
        this.chest_buttons[Ge.WITCH] = Ne(68, 68, 0, sprite[Le.CHEST_WITCH], 3),
        this.chest_buttons[Ge.WITCH].id = Ge.WITCH,
        this.inv_buttons[Ge.WITCH] = Ne(60, 60, 0, sprite[Le.INV_WITCH], 3),
        this.inv_buttons[Ge.WITCH].id = Ge.WITCH,
        this.craft_buttons[E.WITCH] = Ne(60, 60, 0, sprite[Le.CRAFT_WITCH], 3),
        this.craft_buttons[E.WITCH].id = E.WITCH,
        this.chest_buttons[Ge.WAND1] = Ne(68, 68, 0, sprite[Le.CHEST_WAND1], 3),
        this.chest_buttons[Ge.WAND1].id = Ge.WAND1,
        this.inv_buttons[Ge.WAND1] = Ne(60, 60, 0, sprite[Le.INV_WAND1], 3),
        this.inv_buttons[Ge.WAND1].id = Ge.WAND1,
        this.craft_buttons[E.WAND1] = Ne(60, 60, 0, sprite[Le.CRAFT_WAND1], 3),
        this.craft_buttons[E.WAND1].id = E.WAND1,
        this.chest_buttons[Ge.WAND2] = Ne(68, 68, 0, sprite[Le.CHEST_WAND2], 3),
        this.chest_buttons[Ge.WAND2].id = Ge.WAND2,
        this.inv_buttons[Ge.WAND2] = Ne(60, 60, 0, sprite[Le.INV_WAND2], 3),
        this.inv_buttons[Ge.WAND2].id = Ge.WAND2,
        this.craft_buttons[E.WAND2] = Ne(60, 60, 0, sprite[Le.CRAFT_WAND2], 3),
        this.craft_buttons[E.WAND2].id = E.WAND2,
        this.chest_buttons[Ge.NIMBUS] = Ne(68, 68, 0, sprite[Le.CHEST_NIMBUS], 3),
        this.chest_buttons[Ge.NIMBUS].id = Ge.NIMBUS,
        this.inv_buttons[Ge.NIMBUS] = Ne(60, 60, 0, sprite[Le.INV_NIMBUS], 3),
        this.inv_buttons[Ge.NIMBUS].id = Ge.NIMBUS,
        this.craft_buttons[E.NIMBUS] = Ne(60, 60, 0, sprite[Le.CRAFT_NIMBUS], 3),
        this.craft_buttons[E.NIMBUS].id = E.NIMBUS,
        this.chest_buttons[Ge.FIREFLY] = Ne(68, 68, 0, sprite[Le.CHEST_FIREFLY], 3),
        this.chest_buttons[Ge.FIREFLY].id = Ge.FIREFLY,
        this.inv_buttons[Ge.FIREFLY] = Ne(60, 60, 0, sprite[Le.INV_FIREFLY], 3),
        this.inv_buttons[Ge.FIREFLY].id = Ge.FIREFLY,
        this.craft_buttons[E.FIREFLY] = Ne(60, 60, 0, sprite[Le.CRAFT_FIREFLY], 3),
        this.craft_buttons[E.FIREFLY].id = E.FIREFLY,
        this.chest_buttons[Ge.REIDITE_SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_SPEAR], 3),
        this.chest_buttons[Ge.REIDITE_SPEAR].id = Ge.REIDITE_SPEAR,
        this.inv_buttons[Ge.REIDITE_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_SPEAR], 3),
        this.inv_buttons[Ge.REIDITE_SPEAR].id = Ge.REIDITE_SPEAR,
        this.craft_buttons[E.REIDITE_SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_SPEAR], 3),
        this.craft_buttons[E.REIDITE_SPEAR].id = E.REIDITE_SPEAR,
        this.chest_buttons[Ge.REIDITE_HELMET] = Ne(68, 68, 0, sprite[Le.CHEST_REIDITE_HELMET], 3),
        this.chest_buttons[Ge.REIDITE_HELMET].id = Ge.REIDITE_HELMET,
        this.inv_buttons[Ge.REIDITE_HELMET] = Ne(60, 60, 0, sprite[Le.INV_REIDITE_HELMET], 3),
        this.inv_buttons[Ge.REIDITE_HELMET].id = Ge.REIDITE_HELMET,
        this.craft_buttons[E.REIDITE_HELMET] = Ne(60, 60, 0, sprite[Le.CRAFT_REIDITE_HELMET], 3),
        this.craft_buttons[E.REIDITE_HELMET].id = E.REIDITE_HELMET,
        this.chest_buttons[Ge.LAVA_SPEAR] = Ne(68, 68, 0, sprite[Le.CHEST_LAVA_SPEAR], 3),
        this.chest_buttons[Ge.LAVA_SPEAR].id = Ge.LAVA_SPEAR,
        this.inv_buttons[Ge.LAVA_SPEAR] = Ne(60, 60, 0, sprite[Le.INV_LAVA_SPEAR], 3),
        this.inv_buttons[Ge.LAVA_SPEAR].id = Ge.LAVA_SPEAR,
        this.craft_buttons[E.LAVA_SPEAR] = Ne(60, 60, 0, sprite[Le.CRAFT_LAVA_SPEAR], 3),
        this.craft_buttons[E.LAVA_SPEAR].id = E.LAVA_SPEAR,
        this.chest_buttons[Ge.LAVA_SWORD] = Ne(68, 68, 0, sprite[Le.CHEST_LAVA_SWORD], 3),
        this.chest_buttons[Ge.LAVA_SWORD].id = Ge.LAVA_SWORD,
        this.inv_buttons[Ge.LAVA_SWORD] = Ne(60, 60, 0, sprite[Le.INV_LAVA_SWORD], 3),
        this.inv_buttons[Ge.LAVA_SWORD].id = Ge.LAVA_SWORD,
        this.craft_buttons[E.LAVA_SWORD] = Ne(60, 60, 0, sprite[Le.CRAFT_LAVA_SWORD], 3),
        this.craft_buttons[E.LAVA_SWORD].id = E.LAVA_SWORD,
        this.chest_buttons[Ge.LAVA_ORB] = Ne(68, 68, 0, sprite[Le.CHEST_LAVA_ORB], 3),
        this.chest_buttons[Ge.LAVA_ORB].id = Ge.LAVA_ORB,
        this.inv_buttons[Ge.LAVA_ORB] = Ne(60, 60, 0, sprite[Le.INV_LAVA_ORB], 3),
        this.inv_buttons[Ge.LAVA_ORB].id = Ge.LAVA_ORB,
        this.chest_buttons[Ge.EGG0] = Ne(68, 68, 0, sprite[Le.CHEST_EGG0], 3),
        this.chest_buttons[Ge.EGG0].id = Ge.EGG0,
        this.inv_buttons[Ge.EGG0] = Ne(60, 60, 0, sprite[Le.INV_EGG0], 3),
        this.inv_buttons[Ge.EGG0].id = Ge.EGG0,
        this.chest_buttons[Ge.EGG1] = Ne(68, 68, 0, sprite[Le.CHEST_EGG1], 3),
        this.chest_buttons[Ge.EGG1].id = Ge.EGG1,
        this.inv_buttons[Ge.EGG1] = Ne(60, 60, 0, sprite[Le.INV_EGG1], 3),
        this.inv_buttons[Ge.EGG1].id = Ge.EGG1,
        this.chest_buttons[Ge.EGG2] = Ne(68, 68, 0, sprite[Le.CHEST_EGG2], 3),
        this.chest_buttons[Ge.EGG2].id = Ge.EGG2,
        this.inv_buttons[Ge.EGG2] = Ne(60, 60, 0, sprite[Le.INV_EGG2], 3),
        this.inv_buttons[Ge.EGG2].id = Ge.EGG2,
        this.chest_buttons[Ge.EGG3] = Ne(68, 68, 0, sprite[Le.CHEST_EGG3], 3),
        this.chest_buttons[Ge.EGG3].id = Ge.EGG3,
        this.inv_buttons[Ge.EGG3] = Ne(60, 60, 0, sprite[Le.INV_EGG3], 3),
        this.inv_buttons[Ge.EGG3].id = Ge.EGG3,
        this.chest_buttons[Ge.EGG4] = Ne(68, 68, 0, sprite[Le.CHEST_EGG4], 3),
        this.chest_buttons[Ge.EGG4].id = Ge.EGG4,
        this.inv_buttons[Ge.EGG4] = Ne(60, 60, 0, sprite[Le.INV_EGG4], 3),
        this.inv_buttons[Ge.EGG4].id = Ge.EGG4,
        this.update_craft_buttons = function() {
            for (var e = Ye.craft.can_craft, t = 10, i = 10, n = 0; n < e.length; n++)
                0 < n && !(n % 4) && (t += e[0].info.width + 10,
                i = 10),
                e[n].info.translate.x = t,
                e[n].info.translate.y = i,
                i += 10 + e[n].info.height
        }
        ,
        this.update_chest_buttons = function() {
            for (var e = Math.floor(Math.floor((3 + Ye.craft.can_craft.length) / 4) * (10 + this.chest_buttons[0].info.img[0].width) + 35), t = 0; t < this.chest_buttons.length; t++)
                this.chest_buttons[t] && (this.chest_buttons[t].info.translate.x = e,
                this.chest_buttons[t].info.translate.y = 22);
            this.chest_lockpick.info.translate.x = e + 17,
            this.chest_lockpick.info.translate.y = 22 + sprite[Le.CHEST_SLOT].height,
            this.chest_locked.info.translate.x = e + 17,
            this.chest_locked.info.translate.y = 30,
            this.chest_padlock.info.translate.x = e + 17,
            this.chest_padlock.info.translate.y = 22 + sprite[Le.CHEST_SLOT].height
        }
        ,
        this.update_team_buttons = function() {
            for (var e = Math.floor((g0 - sprite[Le.TEAM_BUTTON][0].width) / 2), t = 0; t < this.team_buttons.length; t++)
                this.team_buttons[t].button.info.translate.x = e,
                this.team_buttons[t].button.info.translate.y = -13
        }
        ,
        this.update_bread_oven_button = function() {
            var e = 12 + Math.floor(Math.floor((3 + Ye.craft.can_craft.length) / 4) * (10 + this.bread_oven_wood_button.info.img[0].width) + 35);
            this.bread_oven_wood_button.info.translate.x = e,
            this.bread_oven_wood_button.info.translate.y = 33,
            this.bread_oven_flour_button.info.translate.x = this.bread_oven_wood_button.info.translate.x,
            this.bread_oven_flour_button.info.translate.y = 137,
            this.bread_oven_bread_button.info.translate.x = this.bread_oven_wood_button.info.translate.x,
            this.bread_oven_bread_button.info.translate.y = 240
        }
        ,
        this.update_extractor_button = function() {
            var e = 12 + Math.floor(Math.floor((3 + Ye.craft.can_craft.length) / 4) * (10 + this.extractor_wood_button.info.img[0].width) + 35);
            this.extractor_wood_button.info.translate.x = e,
            this.extractor_wood_button.info.translate.y = 36,
            this.extractor_stone_button.info.translate.x = e += 83,
            this.extractor_stone_button.info.translate.y = 36,
            this.extractor_gold_button.info.translate.x = e,
            this.extractor_gold_button.info.translate.y = 36,
            this.extractor_diamond_button.info.translate.x = e,
            this.extractor_diamond_button.info.translate.y = 36,
            this.extractor_amethyst_button.info.translate.x = e,
            this.extractor_amethyst_button.info.translate.y = 36,
            this.extractor_reidite_button.info.translate.x = e,
            this.extractor_reidite_button.info.translate.y = 36
        }
        ,
        this.update_windmill_button = function() {
            var e = 12 + Math.floor(Math.floor((3 + Ye.craft.can_craft.length) / 4) * (10 + this.windmill_wheat_button.info.img[0].width) + 35);
            this.windmill_wheat_button.info.translate.x = e,
            this.windmill_wheat_button.info.translate.y = 36,
            this.windmill_flour_button.info.translate.x = e += 83,
            this.windmill_flour_button.info.translate.y = 36
        }
        ,
        this.update_furnace_button = function() {
            var e = Math.floor(Math.floor((3 + Ye.craft.can_craft.length) / 4) * (10 + this.furnace_button.info.img[0].width) + 35);
            this.furnace_button.info.translate.x = e,
            this.furnace_button.info.translate.y = 22
        }
        ,
        this.update_inv_buttons = function() {
            var e, t = Ye.inv.can_select;
            0 < t.length && (e = Math.floor((g0 - (t[0].info.width + 5) * Ye.inv.max) / 2));
            for (var i = 0; i < t.length; i++)
                t[i].info.translate.x = e + (t[i].info.width + 5) * i,
                t[i].info.translate.y = O0 - t[i].info.width - 10,
                this.plus_buttons[t[i].id].info.translate.x = t[i].info.translate.x + 13,
                this.plus_buttons[t[i].id].info.translate.y = t[i].info.translate.y - this.plus_buttons[t[i].id].info.img[0].height - 6
        }
        ;
        var r, o = 0, s = 1, d = function() {
            l.update(),
            ++o == s ? (l.add_event_listener(),
            l.update()) : d()
        }, _ = (this.quit = function(e) {
            Ye.chat.open && Ye.chat.quit(),
            Ye.terminal.open && Ye.terminal.quit(),
            document.getElementById("team_box").style.display = "none",
            l.market.style.display = "none",
            l.market.open = !1,
            l.sign.style.display = "none",
            l.sign.open = !1,
            document.getElementById("shop_starterkit").style.display = "none",
            document.getElementById("home_craft").style.display = "none",
            document.getElementById("recipe_craft").style.display = "none",
            l.craft_list.open = !1,
            document.getElementById("option_in_game").style.display = "none",
            l.options.open = !1,
            document.getElementById("sure_delete").style.display = "none",
            l.safe_delete.open = !1,
            document.getElementById("cancel_sure_delete").style.display = "none",
            l.safe_cancel.open = !1,
            document.getElementById("chronoquest").style.display = "none",
            l.quests.open = !1,
            r = e,
            l.remove_event_listener(),
            l.can.style.cursor = l.cursor0,
            Xe.quit(),
            _ = -1,
            c()
        }
        ,
        -1), u = 1, c = function() {
            l.update(),
            (++_ == u ? (l.stop(),
            r) : c)()
        };
        this.is_run = !1,
        this.stop = function() {
            this.is_run = !1
        }
        ,
        this.run = function() {
            client.change_ground(),
            l.is_run = !0,
            _ = -1,
            o = 0,
            d()
        }
        ,
        this.update = function() {
            this.leaderboard.translate.x = g0 - this.leaderboard.img.width - 10,
            this.leaderboard.translate.y = 5,
            Fe.clock.translate.x = this.leaderboard.translate.x - sprite[Le.CLOCK][0].width - 85,
            Fe.clock.translate.y = 10,
            this.craft_list.button.info.translate.x = this.leaderboard.translate.x - sprite[Le.RECIPE_BUTTON][0].width - 10,
            this.craft_list.button.info.translate.y = 10,
            this.quests.button.info.translate.x = this.leaderboard.translate.x - sprite[Le.QUEST_BUTTON][0].width - 20,
            this.quests.button.info.translate.y = this.craft_list.button.info.translate.y + sprite[Le.RECIPE_BUTTON][0].height + 5,
            this.options.button.info.translate.x = this.leaderboard.translate.x - sprite[Le.OPTION_BUTTON][0].width - 20,
            this.options.button.info.translate.y = this.quests.button.info.translate.y + sprite[Le.OPTION_BUTTON][0].height + 18,
            this.audio.button_on.info.translate.x = this.leaderboard.translate.x - sprite[Le.OPTION_BUTTON][0].width - 20,
            this.audio.button_on.info.translate.y = this.options.button.info.translate.y + sprite[Le.SOUND_BUTTON_OFF][0].height,
            this.audio.button_off.info.translate.x = this.leaderboard.translate.x - sprite[Le.OPTION_BUTTON][0].width - 20,
            this.audio.button_off.info.translate.y = this.options.button.info.translate.y + sprite[Le.SOUND_BUTTON_OFF][0].height,
            this.market.button.info.translate.x = this.leaderboard.translate.x - sprite[Le.MARKET_BUTTON][0].width - 20,
            this.market.button.info.translate.y = this.audio.button_on.info.translate.y + sprite[Le.MARKET_BUTTON][0].height,
            Ye.auto_feed.translate.x = this.leaderboard.translate.x - 63 - 85,
            Ye.auto_feed.translate.y = 100,
            Ye.show_spectators.translate.x = this.leaderboard.translate.x - sprite[Le.SHOW_SPECTATORS].width - 85,
            Ye.show_spectators.translate.y = Ye.auto_feed.translate.y + 10 + sprite[Le.AUTO_FEED].height,
            this.minimap.translate.y = O0 - 3 - 193,
            this.minimap.translate.x = g0 - 3 - 193,
            this.gauges.translate.x = 5,
            this.gauges.translate.y = O0 - this.gauges.img.height - 5,
            this.shop.button.info.translate.x = ke - 45.5,
            this.shop.button.info.translate.y = 50,
            this.update_craft_buttons(),
            this.update_inv_buttons(),
            this.update_chest_buttons(),
            this.update_furnace_button(),
            this.update_windmill_button(),
            this.update_extractor_button(),
            this.update_bread_oven_button(),
            this.update_team_buttons(),
            this.sign.update_button(),
            En(),
            Ye.chat.update(),
            Ye.terminal.update(),
            this.team_box.update(),
            this.craft_list.home.update(),
            this.craft_list.list.update(),
            this.safe_delete.update(),
            this.safe_cancel.update(),
            this.quests.update(),
            this.shop.update(),
            this.options.update(),
            this.market.update(),
            this.sign.update();
            var e = -1 != _ ? -(1500 / (u - _ + 1) - 48) : o != s ? 1500 / (o + 1) - 50 : 0;
            this.shop.button.info.translate.y -= 0 < e ? e : -e,
            this.leaderboard.translate.y -= 0 < e ? e : -e,
            Ye.auto_feed.translate.y -= 0 < e ? e : -e,
            Ye.show_spectators.translate.y -= 0 < e ? e : -e,
            this.craft_list.button.info.translate.y -= 0 < e ? e : -e,
            this.quests.button.info.translate.y -= 0 < e ? e : -e,
            this.options.button.info.translate.y -= 0 < e ? e : -e,
            this.market.button.info.translate.y -= 0 < e ? e : -e,
            this.audio.button_on.info.translate.y -= 0 < e ? e : -e,
            this.audio.button_off.info.translate.y -= 0 < e ? e : -e,
            Fe.clock.translate.y -= 0 < e ? e : -e,
            this.gauges.translate.y -= e < 0 ? e : -e,
            this.minimap.translate.y -= e < 0 ? e : -e
        }
        ,
        this.draw_UI = function() {
            Ye.ghost.enabled || !this.show_ui || Ye.zombie || !function() {
                var e = Ye.craft;
                if (!e.crafting && 0 < e.preview) {
                    var t = Fe.fast_units[Ye.uid];
                    if (!t)
                        return;
                    ze.save(),
                    0 === He[e.preview].grid && 0 === e.mode ? (ze.translate(Ye.cam.x + t.x, Ye.cam.y + t.y),
                    ze.rotate(t.angle),
                    ze.translate(120, 0)) : (i = Math.floor(t.x + 120 * Math.cos(t.angle)),
                    t = Math.floor(t.y + 120 * Math.sin(t.angle)),
                    i = Ye.cam.x + (i - i % 100 + 50),
                    t = Ye.cam.y + (t - t % 100 + 50),
                    ze.translate(i, t));
                    var i = sprite[e.preview][Fe.time];
                    ze.globalAlpha = .5,
                    Ue(ze, i, -i.width / 2, -i.height / 2),
                    ze.globalAlpha = 1,
                    ze.restore(),
                    0 === He[e.preview].grid && (e.label[e.mode] || (0 === e.mode ? e.label[0] = m1(We, Pe[TEXT.MODE_FREE], 20, "#e2c340") : e.label[1] = m1(We, Pe[TEXT.MODE_GRID], 20, "#e2c340")),
                    i = e.label[e.mode],
                    Ue(ze, i, ke + -i.width / 2, Je.gauges.y - 26))
                }
                if (e.crafting) {
                    for (var t = e.timeout.update(), n = 0; n < e.can_craft.length; n++) {
                        var r, o, a = e.can_craft[n];
                        e.id == a.id ? (r = 42 * We,
                        o = 17 * We,
                        Be(ze, a.info.translate.x, a.info.translate.y + r * (1 - e.timeout.v), a.info.width, r * e.timeout.v + o, 10 * We),
                        ze.fillStyle = "#55B973",
                        ze.fill(),
                        ze.globalAlpha = .8) : ze.globalAlpha = .5,
                        a.draw(ze),
                        ze.globalAlpha = 1
                    }
                    t && (e.crafting = !1,
                    e.timeout.v = 0,
                    e.timeout.o = !1)
                } else
                    for (n = 0; n < e.can_craft.length; n++)
                        e.can_craft[n].draw(ze)
            }(),
            (c = Ye.craft).crafting && (l = Fe.fast_units[Ye.uid]) && (ze.save(),
            ze.translate(Ye.cam.x + l.x, Ye.cam.y + l.y),
            _ = -(l = sprite[Le.GEAR]).width / 2,
            u = -l.height / 2 - 125 * We,
            Ue(ze, l, _, u),
            ze.beginPath(),
            ze.lineWidth = 5 * We,
            ze.strokeStyle = Le.CRAFT_LOADING[Fe.time],
            ze.lineCap = "round",
            ze.arc(0, u + l.height / 2, 25 * We, 0, 2 * Math.PI * c.timeout.v),
            ze.stroke(),
            ze.restore());
            var e, t, i, n, r, o, a = Fe.units[xe.PLAYERS];
            if (Fe.mode === Ke.MODE_PVP || Fe.mode === Ke.MODE_EXPERIMENTAL || Fe.mode === Ke.MODE_ZOMBIES || Fe.mode === Ke.MODE_LEGACY || Fe.mode === Ke.MODE_BR || Fe.mode === Ke.MODE_VAMPIRES)
                for (var s = 0; s < a.length; s++)
                    a[s].draw_text();
            else if (Fe.mode === Ke.MODE_HUNGER_GAMES)
                for (s = 0; s < a.length; s++)
                    (Ye.spectator || Ye.show_spectators.enabled || "spectator" !== a[s].player.nickname) && a[s].draw_text();
            if (this.show_ui) {
                d = 0 < Ye.inv.can_select.length ? {
                    x: Je.minimap.translate.x,
                    y: Je.minimap.translate.y - 120 * We
                } : {
                    x: Je.minimap.translate.x,
                    y: Je.minimap.translate.y - 50 * We
                },
                ze.globalAlpha = .8;
                for (var d, _ = sprite[Le.MINIMAP][Fe.time], _ = (Ue(ze, _, d.x, d.y),
                -(ze.globalAlpha = 1) < Je.minimap.marker.x && (ze.fillStyle = "#660000",
                we(ze, d.x + Je.minimap.marker.x * We, d.y + Je.minimap.marker.y * We, 5 * We),
                ze.fill()),
                We), B = Je.minimap.players, w = 0; w < B.length; w++) {
                    var z = B[w];
                    ze.fillStyle = (Fe.time,
                    "#ff0000"),
                    we(ze, d.x + z.x / (100 * Fe.nw) * 193 * We, d.y + z.y / (100 * Fe.nh) * 193 * We, 2 * We),
                    ze.fill()
                }
                var u = Fe.fast_units[Ye.uid]
                  , l = (u && (ze.fillStyle = Fe.time ? "#fff" : "#e39716",
                we(ze, d.x + u.x / (100 * Fe.nw) * 193 * We, d.y + u.y / (100 * Fe.nh) * 193 * We, 4 * We),
                ze.fill()),
                We = _,
                1 === this.show_recipe_book && this.craft_list.button.draw(ye),
                Fe.mode !== Ke.MODE_ZOMBIES && Fe.mode !== Ke.MODE_LEGACY && Fe.mode !== Ke.MODE_BR && 1 === this.show_quest && this.quests.button.draw(ye),
                this.options.button.draw(ye),
                1 === this.show_market && this.market.button.draw(ye),
                (Xe.run ? this.audio.button_on : this.audio.button_off).draw(ye),
                Ye.ldb)
                  , c = Je.leaderboard;
                if (l.update) {
                    l.update = !1;
                    var k = l.ids
                      , l = c.can.width
                      , h = c.can.height
                      , E = c.ctx
                      , W = Fe.players
                      , V = !1;
                    E.clearRect(0, 0, l, h),
                    E.drawImage(c.img, 0, 0);
                    for (var T = 0; T < k.length; T++) {
                        var A = W[k[T]];
                        Fe.mode === Ke.MODE_HUNGER_GAMES && "spectator" === A.nickname || Fe.mode === Ke.MODE_ZOMBIES && A.skin === Ke.ZOMBIE_SKIN || (color = k[T] == Ye.id ? (V = !0,
                        Fe.mode === Ke.MODE_VAMPIRES && A.skin === Ke.VAMPIRE_SKIN ? "#FF0000" : "#FFF") : Fe.mode === Ke.MODE_VAMPIRES && A.skin === Ke.VAMPIRE_SKIN ? "#990000" : "#A1BDCD",
                        E.drawImage(m1(We, "" + (T + 1), 15 * We, color), 20 * We, (40 + 22 * T) * We),
                        A.ldb_label || (A.ldb_label = m1(We, A.nickname, 15 * We, color, void 0, void 0, void 0, void 0, 110 * We)),
                        E.drawImage(A.ldb_label, 39 * We, (40 + 22 * T) * We),
                        E.drawImage(m1(We, Utils.simplify_number(A.score), 15 * We, color), 156 * We, (40 + 22 * T) * We))
                    }
                    V || (Fe.mode === Ke.MODE_PVP || Fe.mode === Ke.MODE_VAMPIRES || Fe.mode === Ke.MODE_LEGACY || Fe.mode === Ke.MODE_BR || Fe.mode === Ke.MODE_EXPERIMENTAL || Fe.mode === Ke.MODE_HUNGER_GAMES && !Ye.spectator || Fe.mode === Ke.MODE_ZOMBIES && !Ye.zombie) && (E.drawImage(sprite[Le.YOUR_SCORE], 15 * We, (46 + 22 * T) * We),
                    E.drawImage(m1(We, Utils.simplify_number(Fe.players[Ye.id].score), 15 * We, "#FFF"), 100 * We, (46 + 22 * T) * We))
                }
                Ue(ze, c.can, c.translate.x, c.translate.y);
                var I, p = -8, g = (Ye.auto_feed.enabled && (I = sprite[Le.AUTO_FEED],
                Ue(ze, I, Ye.auto_feed.translate.x, Ye.auto_feed.translate.y + p),
                p += 70),
                1 === Ye.blizzard ? (I = sprite[Le.STOP_REGENERATION_BLIZZARD],
                Ue(ze, I, Ye.auto_feed.translate.x, Ye.auto_feed.translate.y + p),
                p += 70) : (Ye.gauges.cold.x < .25 || Ye.gauges.hunger.x < .25 || Ye.gauges.thirst.x < .25 || Ye.gauges.oxygen.x < .25 || Ye.gauges.warm.x < .25) && (I = sprite[Le.STOP_REGENERATION],
                Ue(ze, I, Ye.auto_feed.translate.x, Ye.auto_feed.translate.y + p),
                p += 70),
                0 < Ye.bandage && (I = sprite[Le.BANDAGE_ACTIVATED],
                Ue(ze, I, Ye.auto_feed.translate.x, Ye.auto_feed.translate.y + p),
                void 0 === (I = Tn[Ye.bandage]) && (I = m1(We, Ye.bandage + "", 30, "#FDFDFD", null, null, null, null, null, "#C8BBBF", 6),
                Tn[Ye.bandage] = I),
                Ye.bandage < 9 ? Ue(ze, I, Ye.auto_feed.translate.x - 39, Ye.auto_feed.translate.y + p + 20) : Ue(ze, I, Ye.auto_feed.translate.x - 46, Ye.auto_feed.translate.y + p + 20)),
                p += 30,
                ze.save(),
                Ye.winter.tempest && (ze.drawImage(e0, Ye.auto_feed.translate.x, Ye.auto_feed.translate.y + p),
                p += 65),
                Ye.desert.tempest && (ze.drawImage(Qi, Ye.auto_feed.translate.x, Ye.auto_feed.translate.y + p),
                p += 65),
                $i.I.canvas && ze.drawImage($i.I.canvas, Ye.auto_feed.translate.x - 12, Ye.auto_feed.translate.y + p - 16),
                p += 30,
                Fe.units[xe.BED]);
                if (g.length) {
                    var U = Fe.fast_units[Ye.uid];
                    if (U)
                        for (let e = 0; e < g.length; e++)
                            Math.abs(U.x - g[e].x) < 34 && Math.abs(U.y - g[e].y) < 34 && (ze.font = "30px Baloo Paaji",
                            ze.strokeStyle = "black",
                            ze.lineWidth = 7,
                            ze.strokeText("B", Ye.auto_feed.translate.x - 4, Ye.auto_feed.translate.y + p + 20),
                            ze.fillStyle = "#5f57ff",
                            ze.fillText("B", Ye.auto_feed.translate.x - 4, Ye.auto_feed.translate.y + p + 20),
                            p += 30)
                }
                ze.restore(),
                Ve.Fps && (ze.save(),
                ze.font = "30px Baloo Paaji",
                ze.strokeStyle = "black",
                ze.lineWidth = 7,
                I = 235 + Math.floor(5 * Math.random()),
                ze.strokeText((Ve.fakefps ? I : window.fpsdata) + " FPS", Ye.auto_feed.translate.x + -120, Ye.auto_feed.translate.y + -50),
                ze.fillStyle = "white",
                ze.fillText((Ve.fakefps ? I : window.fpsdata) + " FPS", Ye.auto_feed.translate.x + -120, Ye.auto_feed.translate.y + -50),
                ze.restore()),
                Ve.Ping && (ze.save(),
                ze.font = "30px Baloo Paaji",
                ze.strokeStyle = "black",
                ze.lineWidth = 7,
                ze.strokeText(d0 + " Ping", Ye.auto_feed.translate.x + -120, Ye.auto_feed.translate.y + -20),
                ze.fillStyle = "white",
                ze.fillText(d0 + " Ping", Ye.auto_feed.translate.x + -120, Ye.auto_feed.translate.y + -20),
                ze.restore()),
                Ve.speedchecker && (I = Fe.fast_units[Ye.uid]) && (ze.save(),
                ze.font = "30px Baloo Paaji",
                ze.strokeStyle = "black",
                ze.lineWidth = 7,
                ze.strokeText(I.speed, Ye.auto_feed.translate.x + -120, Ye.auto_feed.translate.y + 10),
                ze.fillStyle = "white",
                ze.fillText(I.speed, Ye.auto_feed.translate.x + -120, Ye.auto_feed.translate.y + 10),
                ze.restore()),
                this.gauges.draw(),
                (h = Ye.weapon).wait && (c = h.timeout.update(),
                ze.save(),
                I = sprite[Le.DELAY_WEAPON],
                ze.translate(I.width - 2 * We, Je.gauges.translate.y - 60 * We),
                r = -I.width / 2 - 2,
                o = -I.height / 2 - 4,
                Ue(ze, I, r, o),
                ze.beginPath(),
                ze.lineWidth = 5 * We,
                ze.strokeStyle = Le.WEAPON_LOADING[Fe.time],
                ze.lineCap = "round",
                ze.arc(0, o + I.height / 2, 25 * We, 0, 2 * Math.PI * h.timeout.v),
                ze.stroke(),
                ze.restore(),
                c) && (h.wait = !1,
                h.timeout.v = 0,
                h.timeout.o = !1),
                (r = Ye.helmet).wait && (o = r.timeout.update(),
                ze.save(),
                c = sprite[Le.DELAY_HELMET],
                ze.translate(c.width - 2 * We, Je.gauges.translate.y - 125 * We),
                i = -c.width / 2 + 10,
                n = -c.height / 2 - 4,
                Ue(ze, c, i, n),
                ze.beginPath(),
                ze.lineWidth = 5 * We,
                ze.strokeStyle = Le.HELMET_LOADING[Fe.time],
                ze.lineCap = "round",
                ze.arc(9, n + c.height / 2, 25 * We, 0, 2 * Math.PI * r.timeout.v),
                ze.stroke(),
                ze.restore(),
                o) && (r.wait = !1,
                r.timeout.v = 0,
                r.timeout.o = !1),
                (i = Ye.build).wait && (n = i.timeout.update(),
                ze.save(),
                c = sprite[Le.DELAY_WALL],
                ze.translate(c.width - 12 * We, Je.gauges.translate.y - 190 * We),
                e = -c.width / 2 + 9,
                t = -c.height / 2 - 4,
                Ue(ze, c, e, t),
                ze.beginPath(),
                ze.lineWidth = 5 * We,
                ze.strokeStyle = Le.HELMET_LOADING[Fe.time],
                ze.lineCap = "round",
                ze.arc(9, t + c.height / 2, 25 * We, 0, 2 * Math.PI * i.timeout.v),
                ze.stroke(),
                ze.restore(),
                n) && (i.wait = !1,
                i.timeout.v = 0,
                i.timeout.o = !1),
                (e = Ye.totem).wait && (t = e.timeout.update(),
                ze.save(),
                c = sprite[Le.DELAY_TEAM],
                b = sprite[Le.DELAY_WEAPON].height + 25 * We,
                ze.translate(c.width, Je.gauges.translate.y - 188 * We - b),
                b = -c.width / 2 - 2,
                O = -c.height / 2 - 4,
                Ue(ze, c, 2 + b, O),
                ze.beginPath(),
                ze.lineWidth = 5 * We,
                ze.strokeStyle = Le.WEAPON_LOADING[Fe.time],
                ze.lineCap = "round",
                ze.arc(0, O + c.height / 2, 25 * We, 0, 2 * Math.PI * e.timeout.v),
                ze.stroke(),
                ze.restore(),
                t) && (e.wait = !1,
                e.timeout.v = 0,
                e.timeout.o = !1),
                An(),
                Ye.chest.id = -1,
                Ye.chest.lock = !1,
                Ye.chest.locked = !1,
                Ye.chest.lockpick = !1,
                Ye.chest.padlock = !1,
                Ye.chest.open = !1;
                var K = Fe.fast_units[Ye.uid]
                  , x = Ke.DIST_CHEST;
                if (K) {
                    for (var O, b, F = 0; F < Fe.units[xe.CHEST].length; F++) {
                        var m = Fe.units[xe.CHEST][F]
                          , Y = Utils.dist(m, K);
                        Y < x && (x = Y,
                        Ye.chest.open = !0,
                        Ye.chest.id = m.action < 2 ? -1 : Math.floor((m.action - 1) / 2),
                        Ye.chest.amount = m.info,
                        Ye.chest.pid = m.pid,
                        Ye.chest.iid = m.id,
                        Ye.chest.locked = m.lock,
                        Ye.chest.lock = !(!m.lock || Ye.id == m.pid || Ye.in_team(m.pid)),
                        Ye.chest.padlock = m.pid === Ye.id && !Ye.chest.locked && -1 != Ye.inv.find_item(Ge.LOCK),
                        Ye.chest.locked) && -1 != Ye.inv.find_item(Ge.LOCKPICK) && (Ye.chest.lockpick = !0)
                    }
                    x < Ke.DIST_CHEST && (b = sprite[Le.CHEST_SLOT],
                    O = Je.chest_buttons[0],
                    c = Math.floor(O.info.translate.x + (O.info.img[0].width - b.width) / 2),
                    C = Math.floor(O.info.translate.y + (O.info.img[0].height - b.height) / 2) + 3,
                    Ue(ze, b, c, C),
                    Ye.chest.lock && Ye.chest.pid !== Ye.id || 0 <= Ye.chest.id && ((O = Je.chest_buttons[Ye.chest.id]).draw(ze),
                    1 < (b = Ye.chest.amount)) && hn(b, O),
                    Ye.chest.lock ? Je.chest_locked.draw(ze) : Ye.chest.padlock && Je.chest_padlock.draw(ze),
                    Ye.chest.lockpick) && Je.chest_lockpick.draw(ze)
                }
                if (!Ye.chest.open) {
                    Ye.furnace.amount = 0,
                    Ye.furnace.open = !1;
                    var J = Fe.fast_units[Ye.uid]
                      , X = Ke.DIST_FURNACE;
                    if (J) {
                        for (var C, j = 0; j < Fe.units[xe.FURNACE].length; j++) {
                            var R = Fe.units[xe.FURNACE][j]
                              , q = Utils.dist(R, J);
                            q < X && (X = q,
                            Ye.furnace.open = !0,
                            Ye.furnace.amount = R.info,
                            Ye.furnace.pid = R.pid,
                            Ye.furnace.iid = R.id)
                        }
                        X < Ke.DIST_FURNACE && (c = sprite[Le.FURNACE_SLOT],
                        C = Je.furnace_button,
                        N = Math.floor(C.info.translate.x + (C.info.img[0].width - c.width) / 2),
                        D = Math.floor(C.info.translate.y + (C.info.img[0].height - c.height) / 2) + 3,
                        Ue(ze, c, N, D),
                        0 < Ye.furnace.amount) && (C.draw(ze),
                        1 < (c = Ye.furnace.amount)) && hn(c, C)
                    }
                }
                if (!(Ye.chest.open || Ye.furnace.open || Ye.windmill.open || Ye.bread_oven.open || Ye.extractor.open)) {
                    Ye.well.open = !1;
                    var Z = Fe.fast_units[Ye.uid]
                      , $ = Ke.DIST_WELL;
                    if (Z)
                        for (var Q = 0; Q < Fe.units[xe.WELL].length; Q++) {
                            var S = Fe.units[xe.WELL][Q]
                              , ee = Utils.dist(S, Z);
                            ee < $ && ($ = ee,
                            Ye.well.open = !0,
                            Ye.well.info = S.info,
                            Ye.well.pid = S.pid,
                            Ye.well.iid = S.id)
                        }
                }
                if (!Ye.chest.open && !Ye.furnace.open) {
                    Ye.windmill.open = !1;
                    var te = Fe.fast_units[Ye.uid]
                      , ie = Ke.DIST_WINDMILL;
                    if (te) {
                        for (var N, D, ne = 0; ne < Fe.units[xe.WINDMILL].length; ne++) {
                            var f = Fe.units[xe.WINDMILL][ne]
                              , re = Utils.dist(f, te);
                            re < ie && (ie = re,
                            Ye.windmill.open = !0,
                            Ye.windmill.amount_wheat = 255 & f.info,
                            Ye.windmill.amount_flour = (65280 & f.info) >> 8,
                            Ye.windmill.pid = f.pid,
                            Ye.windmill.iid = f.id)
                        }
                        ie < Ke.DIST_WINDMILL && (N = sprite[Le.WINDMILL_CASES],
                        c = (D = Je.windmill_wheat_button).info.translate.x - 33,
                        Ue(ze, N, c, 0),
                        0 < Ye.windmill.amount_wheat && (D.draw(ze),
                        1 < (M = Ye.windmill.amount_wheat)) && hn(M, D),
                        D = Je.windmill_flour_button,
                        0 < Ye.windmill.amount_flour) && (D.draw(ze),
                        1 < (M = Ye.windmill.amount_flour)) && hn(M, D)
                    }
                }
                if (!Ye.chest.open && !Ye.furnace.open) {
                    Ye.extractor.open = !1;
                    var oe = Fe.fast_units[Ye.uid]
                      , ae = Ke.DIST_EXTRACTOR_MACHINE;
                    if (oe) {
                        for (var se = 0; se < w2.length; se++)
                            for (var de = w2[se][0], _e = w2[se][1], ue = 0; ue < Fe.units[de].length; ue++) {
                                var v = Fe.units[de][ue]
                                  , le = Utils.dist(v, oe);
                                le < ae && (ae = le,
                                Ye.extractor.mineral = _e,
                                Ye.extractor.type = de,
                                Ye.extractor.open = !0,
                                Ye.extractor.amount_wood = 255 & v.info,
                                Ye.extractor.amount_mineral = (65280 & v.info) >> 8,
                                Ye.extractor.pid = v.pid,
                                Ye.extractor.iid = v.id)
                            }
                        if (ae < Ke.DIST_EXTRACTOR_MACHINE) {
                            var c = sprite[Le.EXTRACTOR_CASES]
                              , M = (y = Je.extractor_wood_button).info.translate.x - 33;
                            switch (Ue(ze, c, M, 0),
                            0 < Ye.extractor.amount_wood && (y.draw(ze),
                            1 < (G = Ye.extractor.amount_wood)) && hn(G, y),
                            Ye.extractor.mineral) {
                            case Ge.STONE:
                                var y = Je.extractor_stone_button;
                                break;
                            case Ge.GOLD:
                                y = Je.extractor_gold_button;
                                break;
                            case Ge.DIAMOND:
                                y = Je.extractor_diamond_button;
                                break;
                            case Ge.AMETHYST:
                                y = Je.extractor_amethyst_button;
                                break;
                            case Ge.REIDITE:
                                y = Je.extractor_reidite_button
                            }
                            0 < Ye.extractor.amount_mineral && (y.draw(ze),
                            1 < (G = Ye.extractor.amount_mineral)) && hn(G, y)
                        }
                    }
                }
                if (!(Ye.chest.open || Ye.furnace.open || Ye.windmill.open || Ye.extractor.open)) {
                    Ye.bread_oven.open = !1;
                    var ce = Fe.fast_units[Ye.uid]
                      , he = Ke.DIST_BREAD_OVEN;
                    if (ce) {
                        for (var L, G, H, Ee = 0; Ee < Fe.units[xe.BREAD_OVEN].length; Ee++) {
                            var P = Fe.units[xe.BREAD_OVEN][Ee]
                              , Te = Utils.dist(P, ce);
                            Te < he && (he = Te,
                            Ye.bread_oven.open = !0,
                            Ye.bread_oven.amount_wood = 31 & P.info,
                            Ye.bread_oven.amount_flour = (992 & P.info) >> 5,
                            Ye.bread_oven.amount_bread = (31744 & P.info) >> 10,
                            Ye.bread_oven.pid = P.pid,
                            Ye.bread_oven.iid = P.id)
                        }
                        he < Ke.DIST_BREAD_OVEN && (c = sprite[Le.BREAD_OVEN_UI],
                        L = (G = Je.bread_oven_wood_button).info.translate.x - 32,
                        Ue(ze, c, L, 0),
                        0 < Ye.bread_oven.amount_wood && (G.draw(ze),
                        1 < (H = Ye.bread_oven.amount_wood)) && hn(H, G),
                        G = Je.bread_oven_bread_button,
                        0 < Ye.bread_oven.amount_bread && (G.draw(ze),
                        1 < (H = Ye.bread_oven.amount_bread)) && hn(H, G),
                        G = Je.bread_oven_flour_button,
                        0 < Ye.bread_oven.amount_flour) && (G.draw(ze),
                        1 < (H = Ye.bread_oven.amount_flour)) && hn(H, G)
                    }
                }
                if (!(Ye.chest.open || Ye.furnace.open || Ye.windmill.open || Ye.bread_oven.open || Ye.extractor.open)) {
                    Ye.sign.open = !1;
                    var Ae = Fe.fast_units[Ye.uid]
                      , Ie = Ke.DIST_SIGN;
                    if (Ae) {
                        for (var pe = 0; pe < Fe.units[xe.SIGN].length; pe++) {
                            var ge = Fe.units[xe.SIGN][pe]
                              , Oe = Utils.dist(ge, Ae);
                            Oe < Ie && 0 === ge.info && ge.pid === Ye.id && (Ye.sign.open = !0,
                            Ie = Oe,
                            Ye.sign.iid = ge.id)
                        }
                        Ie < Ke.DIST_SIGN && Je.sign.button.draw(ze)
                    }
                }
                En(),
                cn()
            }
            if (Ye.ghost.enabled) {
                Ye.resurrection.open = !1;
                var be = Fe.fast_units[Ye.uid]
                  , me = Ke.DIST_RESURRECTION;
                if (be) {
                    for (var Ce = 0; Ce < Fe.units[xe.RESURRECTION].length; Ce++) {
                        var Re = Fe.units[xe.RESURRECTION][Ce]
                          , Se = Utils.dist(Re, be);
                        Se < me && (me = Se,
                        Ye.resurrection.open = !0,
                        Ye.resurrection.pid = Re.pid,
                        Ye.resurrection.iid = Re.id)
                    }
                    me < Ke.DIST_RESURRECTION && Je.resurrection.draw(ze)
                }
            }
            if (Ye.bigmap) {
                ze.globalAlpha = .5,
                ze.fillStyle = "#000",
                ze.fillRect(0, 0, g0, O0),
                ze.globalAlpha = .8;
                for (var c = sprite[Le.BIGMAP][Fe.time], Ne = ke - c.width / 2, De = b0 - c.height / 2, fe = (Ue(ze, c, Ne, De),
                -(ze.globalAlpha = 1) < Je.minimap.marker.x && (ze.fillStyle = "#660000",
                we(ze, Ne + 3 * Je.minimap.marker.x * We, De + 3 * Je.minimap.marker.y * We, 14 * We),
                ze.fill()),
                Je.minimap.players), ve = 0; ve < fe.length; ve++) {
                    var Me = fe[ve];
                    ze.fillStyle = (Fe.time,
                    "#ff0000"),
                    we(ze, Ne + Me.x / (100 * Fe.nw) * 600 * We, De + Me.y / (100 * Fe.nh) * 600 * We, 6 * We),
                    ze.fill()
                }
                c = Fe.fast_units[Ye.uid];
                c && (ze.fillStyle = Fe.time ? "#fff" : "#e39716",
                we(ze, Ne + c.x / (100 * Fe.nw) * 600 * We, De + c.y / (100 * Fe.nh) * 600 * We, 12 * We),
                ze.fill())
            }
            this.show_ui && 1 === this.show_clock && (L = Fe.clock,
            H = sprite[Le.CLOCK][Fe.time],
            Ue(ze, H, L.translate.x, L.translate.y),
            ze.save(),
            ze.translate(L.translate.x + H.width / 2, L.translate.y + H.height / 2),
            Fe.clock.now = (performance.now() - L.init + L.hour) % Ke.DAY,
            L = 2 * Math.PI * Fe.clock.now / Ke.DAY - Math.PI / 2,
            ze.rotate(L),
            Ue(ze, sprite[Le.ARROW_CLOCK], -H.width / 2, -H.height / 2),
            ze.restore()),
            Ye.welcome.draw(),
            Ye.alert.draw("#FFF", "#000"),
            this.show_ui && (Ye.ghost.draw(),
            Ye.shop.draw(),
            Ye.inv.drag.draw(je.pos.x, je.pos.y)),
            Ye.reconnect.enabled && (ze.globalAlpha = .9,
            ze.fillStyle = "#000",
            Be(ze, ke - 150, b0 - 90, 300, 180, 15),
            ze.fill(),
            ze.globalAlpha = 1,
            c = sprite[Le.GEAR2],
            ze.save(),
            Ye.reconnect.rotate = (Ye.reconnect.rotate + 2 * qe) % (2 * Math.PI),
            ze.translate(g0 / 2, O0 / 2 - 25),
            ze.rotate(Ye.reconnect.rotate),
            Ue(ze, c, -c.width / 2, -c.height / 2),
            ze.restore(),
            c = sprite[Le.RECONNECT],
            Ue(ze, c, (g0 - c.width) / 2, (O0 - c.height) / 2 + 25))
        }
        ,
        this.update_scene = function() {
            Ye.cam.update(),
            Ye.gauges.update(),
            !Ye.reconnect.enabled && Ye.alive && (Ye.control.update(),
            Ye.auto_feed.update()),
            Fe.update(),
            this.quests.update_chrono()
        }
        ,
        this.draw_scene = function() {
            p2()
        }
        ,
        this.update_connection = function() {
            client.check_state(),
            client.check_pong(),
            client.try_ping(),
            client.update_cam()
        }
        ,
        this.draw = function() {
            var e;
            !Ye.reconnect.enabled && Ye.alive && 1 === client.socket.readyState && this.update_connection(),
            Xe.scheduler(),
            this.update_scene(),
            1 === De.hijackedAsset ? (e = IMAGES.CHEATING_BOX,
            Ue(ye, e, ke - e.width / 4, b0 - e.height / 4, e.width / 2, e.height / 2)) : (this.draw_scene(),
            this.draw_UI())
        }
        ,
        this.trigger_keyup = function(e) {
            var t, i;
            Ye.chat.open || (e.code === Ve.AutoSteal.k && (Ve.AutoSteal.e = !1),
            e.code === Ve.AutoSpike.k && (Ve.AutoSpike.e = !1),
            e.code === Ve.AutoSpikee.k && (Ve.AutoSpikee.e = !1),
            e.code === Ve.AutoSpikeee.k && (Ve.AutoSpikeee.e = !1),
            e.code === Ve.Autowall.k && (Ve.Autowall.e = !1),
            e.code === Ve.SwordInChest.k && (Ve.SwordInChest.e = !1),
            e.code === Ve.godown.k && (Ve.godown.e = !1)),
            Ye.chat.open && 27 === e.keyCode ? Ye.chat.quit() : Ye.terminal.open && 27 === e.keyCode ? Ye.terminal.quit() : Ye.chat.open || Ye.terminal.open || 79 != e.keyCode || -1 != _ ? 13 == e.keyCode && -1 == _ ? Ye.terminal.open ? Ye.terminal._send() : Ye.chat.run() : Ye.chat.open || Ye.terminal.open || (82 === e.keyCode ? Ye.auto_feed.invert() : 80 !== e.keyCode || Fe.mode !== Ke.MODE_HUNGER_GAMES || Ye.spectator ? 49 <= e.keyCode && e.keyCode <= 57 ? Ye.craft.id < 0 && (t = e.keyCode - 49,
            i = Ye.inv.can_select[t]) && client.select_inv(i.id, t) : 89 == e.keyCode ? Ye.bigmap = !Ye.bigmap : 71 == e.keyCode && Ye.craft.change_mode() : Ye.show_spectators.invert()) : Ye.terminal._open(),
            Ao.up(e)
        }
        ;
        this.trigger_keydown = function(e) {
            var t;
            Ao.down(e),
            8 != e.keyCode || Ye.chat.open || Ye.terminal.open || e.preventDefault(),
            Ye.chat.open || Ye.terminal.open || (e.code === Ve.DropSword.k && (t = Fe.fast_units[Ye.uid]) && Ko(t.right) && client.socket.send(JSON.stringify([6, t.right])),
            e.code === Ve.drop.k && Fe.fast_units[Ye.uid] && client.socket.send(JSON.stringify([6, Ge.PLANT])),
            e.code === Ve.AutoRecycle.k && (Ve.AutoRecycle.e = !Ve.AutoRecycle.e),
            e.code === Ve.AutoCraft.k && (Ve.AutoCraft.e = !Ve.AutoCraft.e),
            e.code === Ve.AutoEme.k && (Ve.AutoEme.e = !Ve.AutoEme.e),
            e.code === Ve.Autofarm.k && (Ve.Autofarm.e = !Ve.Autofarm.e),
            e.code === Ve.AutoSteal.k && (Ve.AutoSteal.e = !0),
            e.code === Ve.SwordInChest.k && (Ve.SwordInChest.e = !0),
            e.code === Ve.godown.k && (Ve.godown.e = !0),
            e.code === Ve.AMB.k && (Ve.AMB.e = !Ve.AMB.e),
            e.code === Ve.click.k && (Ve.click.e = !Ve.click.e),
            e.code === Ve.spikea.k && (Ve.spikea.e = !Ve.spikea.e),
            e.code === Ve.Tame.k && (Ve.Tame.e = !Ve.Tame.e),
            e.code === Ve.LowFrame.k && (Ve.LowFrame.e = !Ve.LowFrame.e),
            e.code === Ve.Xray.k && (Ve.Xray.e = !Ve.Xray.e),
            e.code === Ve.AutoSpike.k && (Ve.AutoSpike.e = !0),
            e.code === Ve.AutoSpikee.k && (Ve.AutoSpikee.e = !0),
            e.code === Ve.AutoSpikeee.k && (Ve.AutoSpikeee.e = !0),
            e.code === Ve.Autowall.k && (Ve.Autowall.e = !0),
            e.code === Ve.AutoTotem.k && (Ve.AutoTotem.e = !Ve.AutoTotem.e),
            e.code === Ve.PathFinder.k && (Ve.PathFinder.e = !Ve.PathFinder.e),
            e.code === Ve.AutoBuild.k && (Ve.AutoBuild.e = !Ve.AutoBuild.e),
            e.code === Ve.AutoExtTake.k && (Ve.AutoExtTake.e = !Ve.AutoExtTake.e),
            e.code === Ve.AutoExtPut.k && (Ve.AutoExtPut.e = !Ve.AutoExtPut.e),
            e.code === Ve.AutoBreadPut.k && (Ve.AutoBreadPut.e = !Ve.AutoBreadPut.e),
            e.code === Ve.AutoBreadTake.k && (Ve.AutoBreadTake.e = !Ve.AutoBreadTake.e),
            e.code === Ve.Spectator.k && (h0 ? (h0 = !1,
            client.socket.send(JSON.stringify([11]))) : h0 = !0))
        }
        ,
        this.trigger_mousedown = function(e) {
            je.pos = S2(l.can, e);
            var t, i = !1, n = (Ye.craft.preview < 0 && l.minimap.focus(je.pos),
            Ye.chest), e = (Ye.craft.id < 0 && 0 <= n.id && (Ye.chest.lock && Ye.chest.pid !== Ye.id || (i |= l.chest_buttons[Ye.chest.id].trigger(l.can, je.pos, O2))),
            Ye.windmill), e = (e.open && 0 < e.amount_flour && (i |= l.windmill_flour_button.trigger(l.can, je.pos, O2)),
            Ye.extractor), e = (e.open && 0 < e.amount_mineral && (i = (i = (i = (i = (i |= l.extractor_stone_button.trigger(l.can, je.pos, O2)) | l.extractor_gold_button.trigger(l.can, je.pos, O2)) | l.extractor_diamond_button.trigger(l.can, je.pos, O2)) | l.extractor_amethyst_button.trigger(l.can, je.pos, O2)) | l.extractor_reidite_button.trigger(l.can, je.pos, O2)),
            Ye.bread_oven);
            if (e.open && 0 < e.amount_bread && (i |= l.bread_oven_bread_button.trigger(l.can, je.pos, O2)),
            Ye.sign.open && (i |= l.sign.button.trigger(l.can, je.pos, O2)),
            Ye.chest.lock || Ye.chest.padlock && (i |= l.chest_padlock.trigger(l.can, je.pos, O2)),
            Ye.chest.lockpick && (i |= l.chest_lockpick.trigger(l.can, je.pos, O2)),
            Ye.craft.id < 0 && !l.craft_list.open && !l.safe_delete.open && !l.safe_cancel.open && !l.quests.open && !l.options.open && !l.market.open)
                for (var r = Ye.inv.can_select, o = 0; o < r.length; o++) {
                    var a = r[o].trigger(l.can, je.pos, O2);
                    i |= a,
                    a && Ye.inv.drag.start(o, je.pos),
                    (n.open && (n.id < 0 || n.id == r[o].id) || Ye.furnace.open && r[o].id === Ge.WOOD || Ye.well.open && r[o].id === Ge.BUCKET_FULL || Ye.bread_oven.open && (r[o].id === Ge.WOOD || r[o].id === Ge.FLOUR) || Ye.windmill.open && r[o].id === Ge.WILD_WHEAT || Ye.extractor.open && r[o].id === Ge.WOOD) && (i |= l.plus_buttons[r[o].id].trigger(l.can, je.pos, O2))
                }
            if (Ye.resurrection.open && (i |= l.resurrection.trigger(l.can, je.pos, O2)),
            -1 != l.team_buttons_id ? (i |= l.team_buttons[l.team_buttons_id].button.trigger(l.can, je.pos, O2)) && (t = !0) : t = !1,
            !(!(Ye.craft.id < 0 && Ye.craft.preview < 0) || t || l.craft_list.open || l.safe_delete.open || l.options.open || l.safe_cancel.open || l.market.open || Ye.zombie))
                for (r = Ye.craft.can_craft,
                o = 0; o < r.length; o++)
                    i |= r[o].trigger(l.can, je.pos, O2);
            !(Ye.craft.id < 0 && Ye.craft.preview < 0 && Ye.shop.open) || l.craft_list.open || l.safe_delete.open || l.options.open || l.safe_cancel.open || l.quests.open || l.market.open || (i |= l.shop.button.trigger(l.can, je.pos, O2)),
            !(Ye.craft.preview < 0) || l.safe_delete.open || l.options.open || l.safe_cancel.open || l.quests.open || l.market.open || (i |= l.craft_list.button.trigger(l.can, je.pos, O2)),
            !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.safe_cancel.open || l.quests.open || l.market.open || (i |= l.options.button.trigger(l.can, je.pos, O2)),
            !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.safe_cancel.open || l.quests.open || l.options.open || (i |= l.market.button.trigger(l.can, je.pos, O2)),
            !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.safe_cancel.open || l.quests.open || l.options.open || l.market.open || (Xe.run ? i |= l.audio.button_on.trigger(l.can, je.pos, O2) : i |= l.audio.button_off.trigger(l.can, je.pos, O2)),
            !(Ye.craft.preview < 0) || l.craft_list.open || l.market.open || l.safe_delete.open || l.options.open || l.safe_cancel.open || Fe.mode === Ke.MODE_ZOMBIES || Fe.mode === Ke.MODE_LEGACY || Fe.mode === Ke.MODE_BR || (i |= l.quests.button.trigger(l.can, je.pos, O2)),
            i || l.craft_list.open || l.safe_delete.open || l.options.open || l.safe_cancel.open || l.quests.open || l.market.open || l.sign.open || (0 <= Ye.craft.preview ? client.send_build() : t || je.down())
        }
        ,
        this.trigger_mouseup = function(e) {
            if (je.pos = S2(l.can, e),
            je.up(),
            !Ye.inv.drag.release()) {
                var t, i, n = Ye.chest, r = Ye.furnace, o = Ye.well, a = (Ye.windmill,
                Ye.extractor);
                Ye.bread_oven;
                if (Ye.control.attack && (Ye.control.attack = 0,
                client.stop_attack()),
                -1 != l.team_buttons_id) {
                    var s = l.team_buttons[l.team_buttons_id].button.trigger(l.can, je.pos, b2)
                      , d = document.getElementById("team_box").style;
                    if (s && "inline-block" == d.display)
                        return void (d.display = "none");
                    s && l.team_buttons[l.team_buttons_id].action()
                }
                if (Ye.craft.id < 0 && 0 <= n.id && !l.safe_delete.open && (Ye.chest.lock && Ye.chest.pid !== Ye.id || (s = l.chest_buttons[Ye.chest.id].trigger(l.can, je.pos, b2)) && client.take_chest(n)),
                (t = Ye.windmill).open && 0 < t.amount_flour && !l.safe_delete.open && (s = l.windmill_flour_button.trigger(l.can, je.pos, b2)) && client.take_flour(t),
                (a = Ye.extractor).open && 0 < a.amount_mineral && !l.safe_delete.open)
                    switch (a.type) {
                    case xe.EXTRACTOR_MACHINE_STONE:
                        (s = l.extractor_stone_button.trigger(l.can, je.pos, b2)) && client.take_extractor(a);
                        break;
                    case xe.EXTRACTOR_MACHINE_GOLD:
                        (s = l.extractor_gold_button.trigger(l.can, je.pos, b2)) && client.take_extractor(a);
                        break;
                    case xe.EXTRACTOR_MACHINE_DIAMOND:
                        (s = l.extractor_diamond_button.trigger(l.can, je.pos, b2)) && client.take_extractor(a);
                        break;
                    case xe.EXTRACTOR_MACHINE_AMETHYST:
                        (s = l.extractor_amethyst_button.trigger(l.can, je.pos, b2)) && client.take_extractor(a);
                        break;
                    case xe.EXTRACTOR_MACHINE_REIDITE:
                        (s = l.extractor_reidite_button.trigger(l.can, je.pos, b2)) && client.take_extractor(a)
                    }
                if ((i = Ye.bread_oven).open && 0 < i.amount_bread && !l.safe_delete.open && (s = l.bread_oven_bread_button.trigger(l.can, je.pos, b2)) && client.take_bread(i),
                Ye.sign.open && !l.safe_delete.open && (s = l.sign.button.trigger(l.can, je.pos, b2)) && l.sign.select(),
                Ye.chest.lock || l.safe_delete.open || Ye.chest.padlock && (s = l.chest_padlock.trigger(l.can, je.pos, b2)) && client.lock_chest(n),
                Ye.chest.lockpick && !l.safe_delete.open && (s = l.chest_lockpick.trigger(l.can, je.pos, b2)) && (client.unlock_chest(n),
                ga) && ga("send", "event", "Game", "lockpick"),
                Ye.resurrection.open && (s = l.resurrection.trigger(l.can, je.pos, b2)) && (client.resurrection(),
                ga) && ga("send", "event", "Game", "resurrection"),
                Ye.craft.id < 0 && !l.safe_delete.open)
                    for (var _ = Ye.inv.can_select, u = 0; u < _.length; u++)
                        (s = _[u].trigger(l.can, je.pos, b2)) ? 1 != e.which || e.shiftKey ? (1 == e.which && e.shiftKey || 3 == e.which) && Ye.craft.preview < 0 && l.safe_delete.del(_[u].id) : client.select_inv(_[u].id, u) : n.open && (n.id < 0 || n.id === _[u].id) ? (s = l.plus_buttons[_[u].id].trigger(l.can, je.pos, b2)) && Ye.craft.preview < 0 && client.give_item(n, _[u].id, e.shiftKey ? Ve.hmpic : 1) : o.open && _[u].id === Ge.BUCKET_FULL ? (s = l.plus_buttons[_[u].id].trigger(l.can, je.pos, b2)) && Ye.craft.preview < 0 && client.give_well(o) : r.open && _[u].id === Ge.WOOD ? (s = l.plus_buttons[_[u].id].trigger(l.can, je.pos, b2)) && Ye.craft.preview < 0 && client.give_wood(r, e.shiftKey ? Ve.hmpic : 1) : t.open && _[u].id === Ge.WILD_WHEAT ? (s = l.plus_buttons[_[u].id].trigger(l.can, je.pos, b2)) && Ye.craft.preview < 0 && client.give_wheat(t, e.shiftKey ? 10 : 1) : a.open && _[u].id === Ge.WOOD ? (s = l.plus_buttons[_[u].id].trigger(l.can, je.pos, b2)) && Ye.craft.preview < 0 && client.give_wood_extractor(a, e.shiftKey ? 10 : 1) : !i.open || _[u].id !== Ge.WOOD && _[u].id !== Ge.FLOUR || (s = l.plus_buttons[_[u].id].trigger(l.can, je.pos, b2)) && Ye.craft.preview < 0 && (_[u].id === Ge.WOOD ? client.give_bread_oven(i, e.shiftKey ? 10 : 1, 0) : client.give_bread_oven(i, 0, e.shiftKey ? 10 : 1));
                if (Ye.craft.id < 0 && Ye.craft.preview < 0 && !l.safe_delete.open && !Ye.zombie)
                    for (_ = Ye.craft.can_craft,
                    u = 0; u < _.length; u++)
                        (s = _[u].trigger(l.can, je.pos, b2)) && (ret = client.select_craft(_[u].id)) && ga && ga("send", "event", "Game", "craft", He[S[_[u].id].id2].name);
                !(Ye.craft.id < 0 && Ye.craft.preview < 0 && Ye.shop.open) || l.market.open || l.craft_list.open || l.safe_delete.open || l.options.open || l.safe_cancel.open || l.quests.open || (s = l.shop.button.trigger(l.can, je.pos, g2)) && Je.shop.select(),
                !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.market.open || l.safe_cancel.open || l.quests.open || l.options.open || (Xe.run ? (s = l.audio.button_on.trigger(l.can, je.pos, b2)) && (Xe.select(),
                ga) && ga("send", "event", "Game", "sound on") : (s = l.audio.button_off.trigger(l.can, je.pos, b2)) && (Xe.select(),
                ga) && ga("send", "event", "Game", "sound off")),
                !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.safe_cancel.open || l.quests.open || l.market.open || (s = l.options.button.trigger(l.can, je.pos, b2)) && (l.options.select_options(),
                ga) && ga("send", "event", "Game", "options"),
                !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.safe_cancel.open || l.quests.open || l.options.open || 1 !== l.show_market || (s = l.market.button.trigger(l.can, je.pos, b2)) && (l.market.select(),
                ga) && ga("send", "event", "Game", "market"),
                !(Ye.craft.preview < 0) || l.safe_delete.open || l.market.open || l.options.open || l.safe_cancel.open || l.quests.open || 1 !== l.show_recipe_book || (s = l.craft_list.button.trigger(l.can, je.pos, b2)) && (l.craft_list.select_book(),
                ga) && ga("send", "event", "Game", "recipe"),
                !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.options.open || l.safe_cancel.open || l.market.open || Fe.mode === Ke.MODE_ZOMBIES || Fe.mode === Ke.MODE_LEGACY || Fe.mode === Ke.MODE_BR || 1 !== l.show_quest || (s = l.quests.button.trigger(l.can, je.pos, b2)) && (l.quests.select(),
                ga) && ga("send", "event", "Game", "quests"),
                Ye.craft.crafting && 3 == e.which && l.safe_cancel.del()
            }
        }
        ,
        this.current_cursor = !1,
        this.trigger_mousemove = function(e) {
            je.pos = S2(l.can, e);
            var t = !1
              , e = (Je.info_box.display = 0,
            Ye.inv.drag.move(je.pos),
            -1 != l.team_buttons_id && (t |= l.team_buttons[l.team_buttons_id].button.trigger(l.can, je.pos, g2)),
            Ye.windmill)
              , e = (e.open && 0 < e.amount_flour && (t |= l.windmill_flour_button.trigger(l.can, je.pos, g2)),
            Ye.extractor)
              , e = (e.open && 0 < e.amount_mineral && (t = (t = (t = (t = (t |= l.extractor_stone_button.trigger(l.can, je.pos, g2)) | l.extractor_gold_button.trigger(l.can, je.pos, g2)) | l.extractor_diamond_button.trigger(l.can, je.pos, g2)) | l.extractor_amethyst_button.trigger(l.can, je.pos, g2)) | l.extractor_reidite_button.trigger(l.can, je.pos, g2)),
            Ye.bread_oven)
              , i = (e.open && 0 < e.amount_bread && (t |= l.bread_oven_bread_button.trigger(l.can, je.pos, g2)),
            Ye.sign.open && (t |= l.sign.button.trigger(l.can, je.pos, g2)),
            Ye.chest);
            if (Ye.craft.id < 0 && 0 <= i.id && (Ye.chest.lock && Ye.chest.pid !== Ye.id || (t |= l.chest_buttons[i.id].trigger(l.can, je.pos, g2))),
            Ye.resurrection.open && (t |= l.resurrection.trigger(l.can, je.pos, g2)),
            Ye.chest.lock || Ye.chest.padlock && (t |= l.chest_padlock.trigger(l.can, je.pos, g2)),
            Ye.chest.lockpick && (t |= l.chest_lockpick.trigger(l.can, je.pos, g2)),
            Ye.craft.id < 0)
                for (var n = Ye.inv.can_select, r = 0; r < n.length; r++) {
                    var o = n[r].trigger(l.can, je.pos, g2);
                    t |= Je.info_box.trigger(o, n[r], 0),
                    (i.open && (i.id < 0 || i.id == n[r].id) || Ye.furnace.open && n[r].id == Ge.WOOD || Ye.well.open && n[r].id === Ge.BUCKET_FULL || Ye.bread_oven.open && (n[r].id == Ge.WOOD || n[r].id == Ge.FLOUR) || Ye.windmill.open && n[r].id == Ge.WILD_WHEAT || Ye.extractor.open && n[r].id == Ge.WOOD) && (t |= l.plus_buttons[n[r].id].trigger(l.can, je.pos, g2))
                }
            if (Ye.craft.id < 0 && Ye.craft.preview < 0 && !Ye.zombie)
                for (n = Ye.craft.can_craft,
                r = 0; r < n.length; r++) {
                    o = !1;
                    o = n[r].trigger(l.can, je.pos, g2),
                    t |= Je.info_box.trigger(o, n[r], 1)
                }
            !(Ye.craft.id < 0 && Ye.craft.preview < 0 && Ye.shop.open) || l.craft_list.open || l.safe_delete.open || l.options.open || l.safe_cancel.open || l.quests.open || l.market.open || (t |= l.shop.button.trigger(l.can, je.pos, g2)),
            !(Ye.craft.preview < 0) || l.safe_delete.open || l.options.open || l.safe_cancel.open || l.quests.open || l.market.open || 1 !== l.show_recipe_book || (t |= l.craft_list.button.trigger(l.can, je.pos, g2)),
            !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.safe_cancel.open || l.quests.open || l.market.open || (t |= l.options.button.trigger(l.can, je.pos, g2)),
            !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.safe_cancel.open || l.quests.open || l.options.open || 1 !== l.show_market || (t |= l.market.button.trigger(l.can, je.pos, g2)),
            !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.safe_cancel.open || l.quests.open || l.options.open || l.market.open || (Xe.run ? t |= l.audio.button_on.trigger(l.can, je.pos, g2) : t |= l.audio.button_off.trigger(l.can, je.pos, g2)),
            !(Ye.craft.preview < 0) || l.craft_list.open || l.safe_delete.open || l.options.open || l.safe_cancel.open || l.market.open || Fe.mode === Ke.MODE_ZOMBIES || Fe.mode === Ke.MODE_LEGACY || Fe.mode === Ke.MODE_B || 1 !== l.show_quest || (t |= l.quests.button.trigger(l.can, je.pos, g2)),
            l.current_cursor !== t && (l.current_cursor = t,
            a.style.cursor = t ? l.cursor1 : l.cursor0)
        }
        ,
        this.add_event_listener = function() {
            window.addEventListener("mousedown", this.trigger_mousedown, !1),
            window.addEventListener("mouseup", this.trigger_mouseup, !1),
            window.addEventListener("mousemove", this.trigger_mousemove, !1),
            window.addEventListener("keyup", this.trigger_keyup, !1),
            window.addEventListener("keydown", this.trigger_keydown, !1)
        }
        ,
        this.remove_event_listener = function() {
            window.removeEventListener("mousedown", this.trigger_mousedown, !1),
            window.removeEventListener("mouseup", this.trigger_mouseup, !1),
            window.removeEventListener("mousemove", this.trigger_mousemove, !1),
            window.removeEventListener("keyup", this.trigger_keyup, !1),
            window.removeEventListener("keydown", this.trigger_keydown, !1)
        }
    }
    function ro() {
        Utils.open_in_new_box("https://twitter.com/intent/tweet?text=I%20survived%20" + Ye.day + "%20days%20with%20" + Ye.die.score + "%20points%20in%20http%3A%2F%2Fstarve.io%2F%20%23starve.io")
    }
    function oo() {
        Utils.open_in_new_box("https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.starve.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0")
    }
    function ao(e, t) {
        this.can = e,
        this.ctx = t;
        var i, n = this, r = (this.enable_interface = !1,
        this.sb = {
            id: document.getElementById("scoreboard"),
            style: document.getElementById("scoreboard").style,
            height: 0,
            translate: {
                x: 0,
                y: 0
            },
            update: function() {
                this.style.left = this.translate.x + "px",
                this.style.top = this.translate.y + "px"
            },
            init: function() {
                var i;
                this.id.innerHTML = '<div style="position:absolute;"> <img src="./img/scoreboard.png"style="width:250px;transform:translate(125px, -80px);"> </img> </div><div><div id="whokilled">' + Ye.die.howdie + '</div></div><div class="deco" style="margin-top:35px;"></div><div class="deco"></div><div><div class="stats"> ' + Pe[TEXT.DAYS_SURVIVED] + " : " + Ye.day + '</div><div class="stats"> ' + Pe[TEXT.KILL] + " : " + Ye.die.kill + '</div></div><div id="flexDisplay"><div id="score"> ' + Pe[TEXT.SCORE] + " : " + Ye.die.score + '</div><div id="breadWon"><span id="breadWonInner">0</span><img src="./img/golden-bread.png" style="width:50px;margin-left:-25px;transform: translate(37px, 8px);"></img></div></div><div><div id="points"> ' + Ye.die.bank + " " + Pe[TEXT.POINTS] + '</div></div><div id="shop_points">' + Pe[TEXT.KIT_NEXT] + '</div><div style="display:inline-block;"><div class="social" id="tttwitter">' + Pe[TEXT.TWITTER] + '</div><div class="social" id="fffacebook">' + Pe[TEXT.FACEBOOK] + '</div></div><div id="bbback">' + Pe[TEXT.BACK_TO_THE_GAME] + "</div>",
                this.style.display = "inline-block",
                document.getElementById("tttwitter").addEventListener("mouseup", ro, !1),
                document.getElementById("bbback").addEventListener("mouseup", function() {
                    so.quit(De.run)
                }, !1),
                document.getElementById("fffacebook").addEventListener("mouseup", oo, !1),
                this.height = Math.floor(this.id.clientHeight / 2),
                (i = new XMLHttpRequest).open("GET", bo + "getBreadAndScore?userid=" + No),
                i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
                i.onreadystatechange = function() {
                    var e, t;
                    4 == this.readyState && 200 == this.status && "0" !== i.responseText && (t = (e = JSON.parse(i.responseText)).b - De.bread,
                    De.bread = e.b,
                    De.score = e.s,
                    De.lvl = De.level_formula(De.score),
                    De.xp_dest = De.xp_formula(De.score),
                    De.xp = 0,
                    document.getElementById("breadWonInner").innerHTML = "" + t)
                }
                ,
                i.send()
            }
        },
        0), o = 1, a = function() {
            n.update(),
            ++r == o ? n.update() : a()
        }, s = (this.quit = function(e) {
            !0 === n.enable_interface && (n.enable_interface = !1,
            i = e,
            s = -1,
            _())
        }
        ,
        -1), d = 1, _ = function() {
            n.update(),
            (++s == d ? (n.stop(),
            n.sb.style.display = "none",
            i) : _)()
        };
        this.is_run = !1,
        this.stop = function() {
            this.is_run = !1
        }
        ,
        this.run = function() {
            document.getElementById("game_body").style.backgroundColor = Le.GROUND[To.time],
            n.sb.init(),
            n.is_run = !0,
            n.enable_interface = !0,
            s = -1,
            r = 0,
            a()
        }
        ,
        this.update = function() {
            var e;
            this.sb.translate.x = Math.floor(ke - 275),
            this.sb.translate.y = Math.floor(b0 - this.sb.height - 28),
            r == o && -1 == s || (e = -1 != s ? -(1750 / (d - s + 1) - 48) : r != o ? 1500 / (r + 1) - 50 : 0,
            this.sb.translate.y -= e),
            this.sb.update()
        }
        ,
        this.draw = function() {
            Ji(),
            Ye.alert.draw("#FFF", "#000")
        }
    }
    !function() {
        "use strict";
        function e() {
            this.init()
        }
        function t(e) {
            e.src && 0 !== e.src.length ? this.init(e) : console.error("An array of source files must be passed with any new Howl.")
        }
        e.prototype = {
            init: function() {
                var e = this || A;
                return e._counter = 1e3,
                e._codecs = {},
                e._howls = [],
                e._muted = !1,
                e._volume = 1,
                e._canPlayEvent = "canplaythrough",
                e._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null,
                e.masterGain = null,
                e.noAudio = !1,
                e.usingWebAudio = !0,
                e.autoSuspend = !0,
                e.ctx = null,
                e.mobileAutoEnable = !0,
                e._setup(),
                e
            },
            volume: function(e) {
                var t = this || A;
                if (e = parseFloat(e),
                t.ctx || l(),
                void 0 !== e && 0 <= e && e <= 1) {
                    if (t._volume = e,
                    !t._muted) {
                        t.usingWebAudio && (t.masterGain.gain.value = e);
                        for (var i = 0; i < t._howls.length; i++)
                            if (!t._howls[i]._webAudio)
                                for (var n = t._howls[i]._getSoundIds(), r = 0; r < n.length; r++) {
                                    var o = t._howls[i]._soundById(n[r]);
                                    o && o._node && (o._node.volume = o._volume * e)
                                }
                    }
                    return t
                }
                return t._volume
            },
            mute: function(e) {
                var t = this || A;
                t.ctx || l(),
                t._muted = e,
                t.usingWebAudio && (t.masterGain.gain.value = e ? 0 : t._volume);
                for (var i = 0; i < t._howls.length; i++)
                    if (!t._howls[i]._webAudio)
                        for (var n = t._howls[i]._getSoundIds(), r = 0; r < n.length; r++) {
                            var o = t._howls[i]._soundById(n[r]);
                            o && o._node && (o._node.muted = !!e || o._muted)
                        }
                return t
            },
            unload: function() {
                for (var e = this || A, t = e._howls.length - 1; 0 <= t; t--)
                    e._howls[t].unload();
                return e.usingWebAudio && e.ctx && void 0 !== e.ctx.close && (e.ctx.close(),
                e.ctx = null,
                l()),
                e
            },
            codecs: function(e) {
                return (this || A)._codecs[e.replace(/^x-/, "")]
            },
            _setup: function() {
                var t = this || A;
                if (t.state = t.ctx && t.ctx.state || "running",
                t._autoSuspend(),
                !t.usingWebAudio)
                    if ("undefined" != typeof Audio)
                        try {
                            void 0 === (new Audio).oncanplaythrough && (t._canPlayEvent = "canplay")
                        } catch (e) {
                            t.noAudio = !0
                        }
                    else
                        t.noAudio = !0;
                try {
                    (new Audio).muted && (t.noAudio = !0)
                } catch (t) {}
                return t.noAudio || t._setupCodecs(),
                t
            },
            _setupCodecs: function() {
                var e, t, i = this || A, n = null;
                try {
                    n = "undefined" != typeof Audio ? new Audio : null
                } catch (e) {
                    return i
                }
                return n && "function" == typeof n.canPlayType && (e = n.canPlayType("audio/mpeg;").replace(/^no$/, ""),
                t = (t = i._navigator && i._navigator.userAgent.match(/OPR\/([0-6].)/g)) && parseInt(t[0].split("/")[1], 10) < 33,
                i._codecs = {
                    mp3: !(t || !e && !n.canPlayType("audio/mp3;").replace(/^no$/, "")),
                    mpeg: !!e,
                    opus: !!n.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
                    ogg: !!n.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                    oga: !!n.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                    wav: !!n.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
                    aac: !!n.canPlayType("audio/aac;").replace(/^no$/, ""),
                    caf: !!n.canPlayType("audio/x-caf;").replace(/^no$/, ""),
                    m4a: !!(n.canPlayType("audio/x-m4a;") || n.canPlayType("audio/m4a;") || n.canPlayType("audio/aac;")).replace(/^no$/, ""),
                    mp4: !!(n.canPlayType("audio/x-mp4;") || n.canPlayType("audio/mp4;") || n.canPlayType("audio/aac;")).replace(/^no$/, ""),
                    weba: !!n.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                    webm: !!n.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                    dolby: !!n.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
                    flac: !!(n.canPlayType("audio/x-flac;") || n.canPlayType("audio/flac;")).replace(/^no$/, "")
                }),
                i
            },
            _enableMobileAudio: function() {
                var t, i = this || A, e = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(i._navigator && i._navigator.userAgent), n = !!("ontouchend"in window || i._navigator && 0 < i._navigator.maxTouchPoints || i._navigator && 0 < i._navigator.msMaxTouchPoints);
                if (!i._mobileEnabled && i.ctx && (e || n))
                    return i._mobileEnabled = !1,
                    i._mobileUnloaded || 44100 === i.ctx.sampleRate || (i._mobileUnloaded = !0,
                    i.unload()),
                    i._scratchBuffer = i.ctx.createBuffer(1, 1, 22050),
                    t = function() {
                        A._autoResume();
                        var e = i.ctx.createBufferSource();
                        e.buffer = i._scratchBuffer,
                        e.connect(i.ctx.destination),
                        void 0 === e.start ? e.noteOn(0) : e.start(0),
                        "function" == typeof i.ctx.resume && i.ctx.resume(),
                        e.onended = function() {
                            e.disconnect(0),
                            i._mobileEnabled = !0,
                            i.mobileAutoEnable = !1,
                            document.removeEventListener("touchend", t, !0)
                        }
                    }
                    ,
                    document.addEventListener("touchend", t, !0),
                    i
            },
            _autoSuspend: function() {
                var e = this;
                if (e.autoSuspend && e.ctx && void 0 !== e.ctx.suspend && A.usingWebAudio) {
                    for (var t = 0; t < e._howls.length; t++)
                        if (e._howls[t]._webAudio)
                            for (var i = 0; i < e._howls[t]._sounds.length; i++)
                                if (!e._howls[t]._sounds[i]._paused)
                                    return e;
                    return e._suspendTimer && clearTimeout(e._suspendTimer),
                    e._suspendTimer = setTimeout(function() {
                        e.autoSuspend && (e._suspendTimer = null,
                        e.state = "suspending",
                        e.ctx.suspend().then(function() {
                            e.state = "suspended",
                            e._resumeAfterSuspend && (delete e._resumeAfterSuspend,
                            e._autoResume())
                        }))
                    }, 3e4),
                    e
                }
            },
            _autoResume: function() {
                var t = this;
                if (t.ctx && void 0 !== t.ctx.resume && A.usingWebAudio)
                    return "running" === t.state && t._suspendTimer ? (clearTimeout(t._suspendTimer),
                    t._suspendTimer = null) : "suspended" === t.state ? (t.ctx.resume().then(function() {
                        t.state = "running";
                        for (var e = 0; e < t._howls.length; e++)
                            t._howls[e]._emit("resume")
                    }),
                    t._suspendTimer && (clearTimeout(t._suspendTimer),
                    t._suspendTimer = null)) : "suspending" === t.state && (t._resumeAfterSuspend = !0),
                    t
            }
        };
        var A = new e
          , o = (t.prototype = {
            init: function(e) {
                var t = this;
                return A.ctx || l(),
                t._autoplay = e.autoplay || !1,
                t._format = "string" != typeof e.format ? e.format : [e.format],
                t._html5 = e.html5 || !1,
                t._muted = e.mute || !1,
                t._loop = e.loop || !1,
                t._pool = e.pool || 5,
                t._preload = "boolean" != typeof e.preload || e.preload,
                t._rate = e.rate || 1,
                t._sprite = e.sprite || {},
                t._src = "string" != typeof e.src ? e.src : [e.src],
                t._volume = void 0 !== e.volume ? e.volume : 1,
                t._duration = 0,
                t._state = "unloaded",
                t._sounds = [],
                t._endTimers = {},
                t._queue = [],
                t._onend = e.onend ? [{
                    fn: e.onend
                }] : [],
                t._onfade = e.onfade ? [{
                    fn: e.onfade
                }] : [],
                t._onload = e.onload ? [{
                    fn: e.onload
                }] : [],
                t._onloaderror = e.onloaderror ? [{
                    fn: e.onloaderror
                }] : [],
                t._onpause = e.onpause ? [{
                    fn: e.onpause
                }] : [],
                t._onplay = e.onplay ? [{
                    fn: e.onplay
                }] : [],
                t._onstop = e.onstop ? [{
                    fn: e.onstop
                }] : [],
                t._onmute = e.onmute ? [{
                    fn: e.onmute
                }] : [],
                t._onvolume = e.onvolume ? [{
                    fn: e.onvolume
                }] : [],
                t._onrate = e.onrate ? [{
                    fn: e.onrate
                }] : [],
                t._onseek = e.onseek ? [{
                    fn: e.onseek
                }] : [],
                t._onresume = [],
                t._webAudio = A.usingWebAudio && !t._html5,
                void 0 !== A.ctx && A.ctx && A.mobileAutoEnable && A._enableMobileAudio(),
                A._howls.push(t),
                t._autoplay && t._queue.push({
                    event: "play",
                    action: function() {
                        t.play()
                    }
                }),
                t._preload && t.load(),
                t
            },
            load: function() {
                var e = this
                  , t = null;
                if (!A.noAudio) {
                    "string" == typeof e._src && (e._src = [e._src]);
                    for (var i, n, r = 0; r < e._src.length; r++) {
                        if (e._format && e._format[r])
                            i = e._format[r];
                        else {
                            if ("string" != typeof (n = e._src[r])) {
                                e._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
                                continue
                            }
                            i = (i = (i = /^data:audio\/([^;,]+);/i.exec(n)) || /\.([^.]+)$/.exec(n.split("?", 1)[0])) && i[1].toLowerCase()
                        }
                        if (i || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),
                        i && A.codecs(i)) {
                            t = e._src[r];
                            break
                        }
                    }
                    return t ? (e._src = t,
                    e._state = "loading",
                    "https:" === window.location.protocol && "http:" === t.slice(0, 5) && (e._html5 = !0,
                    e._webAudio = !1),
                    new o(e),
                    e._webAudio && s(e),
                    e) : void e._emit("loaderror", null, "No codec support for selected audio sources.")
                }
                e._emit("loaderror", null, "No audio support.")
            },
            play: function(e, t) {
                var i = this
                  , n = null;
                if ("number" == typeof e)
                    n = e,
                    e = null;
                else {
                    if ("string" == typeof e && "loaded" === i._state && !i._sprite[e])
                        return null;
                    if (void 0 === e) {
                        e = "__default";
                        for (var r = 0, o = 0; o < i._sounds.length; o++)
                            i._sounds[o]._paused && !i._sounds[o]._ended && (r++,
                            n = i._sounds[o]._id);
                        1 === r ? e = null : n = null
                    }
                }
                var a, s, d, _, u, l, c, h, E, T = n ? i._soundById(n) : i._inactiveSound();
                return T ? (n && !e && (e = T._sprite || "__default"),
                "loaded" !== i._state ? (T._sprite = e,
                T._ended = !1,
                a = T._id,
                i._queue.push({
                    event: "play",
                    action: function() {
                        i.play(a)
                    }
                }),
                a) : (n && !T._paused ? t || setTimeout(function() {
                    i._emit("play", T._id)
                }, 0) : (i._webAudio && A._autoResume(),
                s = Math.max(0, 0 < T._seek ? T._seek : i._sprite[e][0] / 1e3),
                d = Math.max(0, (i._sprite[e][0] + i._sprite[e][1]) / 1e3 - s),
                _ = 1e3 * d / Math.abs(T._rate),
                T._paused = !1,
                T._ended = !1,
                T._sprite = e,
                T._seek = s,
                T._start = i._sprite[e][0] / 1e3,
                T._stop = (i._sprite[e][0] + i._sprite[e][1]) / 1e3,
                T._loop = !(!T._loop && !i._sprite[e][2]),
                u = T._node,
                i._webAudio ? (e = function() {
                    i._refreshBuffer(T);
                    var e = T._muted || i._muted ? 0 : T._volume;
                    u.gain.setValueAtTime(e, A.ctx.currentTime),
                    T._playStart = A.ctx.currentTime,
                    void 0 === u.bufferSource.start ? T._loop ? u.bufferSource.noteGrainOn(0, s, 86400) : u.bufferSource.noteGrainOn(0, s, d) : T._loop ? u.bufferSource.start(0, s, 86400) : u.bufferSource.start(0, s, d),
                    _ !== 1 / 0 && (i._endTimers[T._id] = setTimeout(i._ended.bind(i, T), _)),
                    t || setTimeout(function() {
                        i._emit("play", T._id)
                    }, 0)
                }
                ,
                l = "running" === A.state,
                "loaded" === i._state && l ? e() : (h = l || "loaded" !== i._state ? "load" : "resume",
                i.once(h, e, l ? T._id : null),
                i._clearTimer(T._id))) : (c = function() {
                    u.currentTime = s,
                    u.muted = T._muted || i._muted || A._muted || u.muted,
                    u.volume = T._volume * A.volume(),
                    u.playbackRate = T._rate,
                    u.play(),
                    _ !== 1 / 0 && (i._endTimers[T._id] = setTimeout(i._ended.bind(i, T), _)),
                    t || i._emit("play", T._id)
                }
                ,
                h = "loaded" === i._state && (window && window.ejecta || !u.readyState && A._navigator.isCocoonJS),
                4 === u.readyState || h ? c() : (E = function() {
                    c(),
                    u.removeEventListener(A._canPlayEvent, E, !1)
                }
                ,
                u.addEventListener(A._canPlayEvent, E, !1),
                i._clearTimer(T._id)))),
                T._id)) : null
            },
            pause: function(e) {
                var t = this;
                if ("loaded" !== t._state)
                    t._queue.push({
                        event: "pause",
                        action: function() {
                            t.pause(e)
                        }
                    });
                else
                    for (var i = t._getSoundIds(e), n = 0; n < i.length; n++) {
                        t._clearTimer(i[n]);
                        var r = t._soundById(i[n]);
                        if (r && !r._paused && (r._seek = t.seek(i[n]),
                        r._rateSeek = 0,
                        r._paused = !0,
                        t._stopFade(i[n]),
                        r._node))
                            if (t._webAudio) {
                                if (!r._node.bufferSource)
                                    continue;
                                void 0 === r._node.bufferSource.stop ? r._node.bufferSource.noteOff(0) : r._node.bufferSource.stop(0),
                                t._cleanBuffer(r._node)
                            } else
                                isNaN(r._node.duration) && r._node.duration !== 1 / 0 || r._node.pause();
                        arguments[1] || t._emit("pause", r ? r._id : null)
                    }
                return t
            },
            stop: function(e, t) {
                var i = this;
                if ("loaded" !== i._state)
                    i._queue.push({
                        event: "stop",
                        action: function() {
                            i.stop(e)
                        }
                    });
                else
                    for (var n = i._getSoundIds(e), r = 0; r < n.length; r++) {
                        i._clearTimer(n[r]);
                        var o = i._soundById(n[r]);
                        o && (o._seek = o._start || 0,
                        o._rateSeek = 0,
                        o._paused = !0,
                        o._ended = !0,
                        i._stopFade(n[r]),
                        o._node && (i._webAudio ? o._node.bufferSource && (void 0 === o._node.bufferSource.stop ? o._node.bufferSource.noteOff(0) : o._node.bufferSource.stop(0),
                        i._cleanBuffer(o._node)) : isNaN(o._node.duration) && o._node.duration !== 1 / 0 || (o._node.currentTime = o._start || 0,
                        o._node.pause())),
                        t || i._emit("stop", o._id))
                    }
                return i
            },
            mute: function(e, t) {
                var i = this;
                if ("loaded" !== i._state)
                    i._queue.push({
                        event: "mute",
                        action: function() {
                            i.mute(e, t)
                        }
                    });
                else {
                    if (void 0 === t) {
                        if ("boolean" != typeof e)
                            return i._muted;
                        i._muted = e
                    }
                    for (var n = i._getSoundIds(t), r = 0; r < n.length; r++) {
                        var o = i._soundById(n[r]);
                        o && (o._muted = e,
                        i._webAudio && o._node ? o._node.gain.setValueAtTime(e ? 0 : o._volume, A.ctx.currentTime) : o._node && (o._node.muted = !!A._muted || e),
                        i._emit("mute", o._id))
                    }
                }
                return i
            },
            volume: function() {
                var e, t, i = this, n = arguments;
                if (0 === n.length)
                    return i._volume;
                if (1 === n.length || 2 === n.length && void 0 === n[1] ? 0 <= i._getSoundIds().indexOf(n[0]) ? r = parseInt(n[0], 10) : e = parseFloat(n[0]) : 2 <= n.length && (e = parseFloat(n[0]),
                r = parseInt(n[1], 10)),
                !(void 0 !== e && 0 <= e && e <= 1))
                    return (t = r ? i._soundById(r) : i._sounds[0]) ? t._volume : 0;
                if ("loaded" !== i._state)
                    i._queue.push({
                        event: "volume",
                        action: function() {
                            i.volume.apply(i, n)
                        }
                    });
                else {
                    void 0 === r && (i._volume = e);
                    for (var r = i._getSoundIds(r), o = 0; o < r.length; o++)
                        (t = i._soundById(r[o])) && (t._volume = e,
                        n[2] || i._stopFade(r[o]),
                        i._webAudio && t._node && !t._muted ? t._node.gain.setValueAtTime(e, A.ctx.currentTime) : t._node && !t._muted && (t._node.volume = e * A.volume()),
                        i._emit("volume", t._id))
                }
                return i
            },
            fade: function(i, n, e, r) {
                var o = this
                  , t = Math.abs(i - n)
                  , a = n < i ? "out" : "in"
                  , s = t / .01
                  , d = 0 < s ? e / s : e;
                if (d < 4 && (s = Math.ceil(s / (4 / d)),
                d = 4),
                "loaded" !== o._state)
                    o._queue.push({
                        event: "fade",
                        action: function() {
                            o.fade(i, n, e, r)
                        }
                    });
                else {
                    o.volume(i, r);
                    for (var _ = o._getSoundIds(r), u = 0; u < _.length; u++) {
                        var l, c, h, E = o._soundById(_[u]);
                        E && (r || o._stopFade(_[u]),
                        o._webAudio && !E._muted && (c = (l = A.ctx.currentTime) + e / 1e3,
                        E._volume = i,
                        E._node.gain.setValueAtTime(i, l),
                        E._node.gain.linearRampToValueAtTime(n, c)),
                        h = i,
                        E._interval = setInterval(function(e, t) {
                            0 < s && (h += "in" == a ? .01 : -.01),
                            h = Math.max(0, h),
                            h = Math.min(1, h),
                            h = Math.round(100 * h) / 100,
                            o._webAudio ? (void 0 === r && (o._volume = h),
                            t._volume = h) : o.volume(h, e, !0),
                            (n < i && h <= n || i < n && n <= h) && (clearInterval(t._interval),
                            t._interval = null,
                            o.volume(n, e),
                            o._emit("fade", e))
                        }
                        .bind(o, _[u], E), d))
                    }
                }
                return o
            },
            _stopFade: function(e) {
                var t = this._soundById(e);
                return t && t._interval && (this._webAudio && t._node.gain.cancelScheduledValues(A.ctx.currentTime),
                clearInterval(t._interval),
                t._interval = null,
                this._emit("fade", e)),
                this
            },
            loop: function() {
                var e, t, i, n = arguments;
                if (0 === n.length)
                    return this._loop;
                if (1 === n.length) {
                    if ("boolean" != typeof n[0])
                        return !!(i = this._soundById(parseInt(n[0], 10))) && i._loop;
                    this._loop = e = n[0]
                } else
                    2 === n.length && (e = n[0],
                    t = parseInt(n[1], 10));
                for (var r = this._getSoundIds(t), o = 0; o < r.length; o++)
                    (i = this._soundById(r[o])) && (i._loop = e,
                    this._webAudio) && i._node && i._node.bufferSource && (i._node.bufferSource.loop = e) && (i._node.bufferSource.loopStart = i._start || 0,
                    i._node.bufferSource.loopEnd = i._stop);
                return this
            },
            rate: function() {
                var e, t, i = this, n = arguments;
                if (0 === n.length ? o = i._sounds[0]._id : 1 === n.length ? 0 <= i._getSoundIds().indexOf(n[0]) ? o = parseInt(n[0], 10) : e = parseFloat(n[0]) : 2 === n.length && (e = parseFloat(n[0]),
                o = parseInt(n[1], 10)),
                "number" != typeof e)
                    return ((t = i._soundById(o)) || i)._rate;
                if ("loaded" !== i._state)
                    i._queue.push({
                        event: "rate",
                        action: function() {
                            i.rate.apply(i, n)
                        }
                    });
                else {
                    void 0 === o && (i._rate = e);
                    for (var r, o = i._getSoundIds(o), a = 0; a < o.length; a++)
                        (t = i._soundById(o[a])) && (t._rateSeek = i.seek(o[a]),
                        t._playStart = i._webAudio ? A.ctx.currentTime : t._playStart,
                        t._rate = e,
                        i._webAudio && t._node && t._node.bufferSource ? t._node.bufferSource.playbackRate.value = e : t._node && (t._node.playbackRate = e),
                        r = i.seek(o[a]),
                        r = 1e3 * ((i._sprite[t._sprite][0] + i._sprite[t._sprite][1]) / 1e3 - r) / Math.abs(t._rate),
                        !i._endTimers[o[a]] && t._paused || (i._clearTimer(o[a]),
                        i._endTimers[o[a]] = setTimeout(i._ended.bind(i, t), r)),
                        i._emit("rate", t._id))
                }
                return i
            },
            seek: function() {
                var e, t, i = this, n = arguments;
                if (0 === n.length ? t = i._sounds[0]._id : 1 === n.length ? 0 <= i._getSoundIds().indexOf(n[0]) ? t = parseInt(n[0], 10) : (t = i._sounds[0]._id,
                e = parseFloat(n[0])) : 2 === n.length && (e = parseFloat(n[0]),
                t = parseInt(n[1], 10)),
                void 0 !== t)
                    if ("loaded" !== i._state)
                        i._queue.push({
                            event: "seek",
                            action: function() {
                                i.seek.apply(i, n)
                            }
                        });
                    else {
                        var r, o = i._soundById(t);
                        if (o) {
                            if (!("number" == typeof e && 0 <= e))
                                return i._webAudio ? (r = i.playing(t) ? A.ctx.currentTime - o._playStart : 0,
                                a = o._rateSeek ? o._rateSeek - o._seek : 0,
                                o._seek + (a + r * Math.abs(o._rate))) : o._node.currentTime;
                            var a = i.playing(t);
                            a && i.pause(t, !0),
                            o._seek = e,
                            o._ended = !1,
                            i._clearTimer(t),
                            a && i.play(t, !0),
                            !i._webAudio && o._node && (o._node.currentTime = e),
                            i._emit("seek", t)
                        }
                    }
                return i
            },
            playing: function(e) {
                if ("number" == typeof e)
                    return !!(e = this._soundById(e)) && !e._paused;
                for (var t = 0; t < this._sounds.length; t++)
                    if (!this._sounds[t]._paused)
                        return !0;
                return !1
            },
            duration: function(e) {
                var t = this._duration
                  , e = this._soundById(e);
                return t = e ? this._sprite[e._sprite][1] / 1e3 : t
            },
            state: function() {
                return this._state
            },
            unload: function() {
                for (var e = this, t = e._sounds, i = 0; i < t.length; i++) {
                    t[i]._paused || e.stop(t[i]._id),
                    e._webAudio || (/MSIE |Trident\//.test(A._navigator && A._navigator.userAgent) || (t[i]._node.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"),
                    t[i]._node.removeEventListener("error", t[i]._errorFn, !1),
                    t[i]._node.removeEventListener(A._canPlayEvent, t[i]._loadFn, !1)),
                    delete t[i]._node,
                    e._clearTimer(t[i]._id);
                    var n = A._howls.indexOf(e);
                    0 <= n && A._howls.splice(n, 1)
                }
                for (var r = !0, i = 0; i < A._howls.length; i++)
                    if (A._howls[i]._src === e._src) {
                        r = !1;
                        break
                    }
                return a && r && delete a[e._src],
                A.noAudio = !1,
                e._state = "unloaded",
                e._sounds = [],
                null
            },
            on: function(e, t, i, n) {
                e = this["_on" + e];
                return "function" == typeof t && e.push(n ? {
                    id: i,
                    fn: t,
                    once: n
                } : {
                    id: i,
                    fn: t
                }),
                this
            },
            off: function(e, t, i) {
                var n = this["_on" + e]
                  , r = 0;
                if ("number" == typeof t && (i = t,
                t = null),
                t || i)
                    for (r = 0; r < n.length; r++) {
                        var o = i === n[r].id;
                        if (t === n[r].fn && o || !t && o) {
                            n.splice(r, 1);
                            break
                        }
                    }
                else if (e)
                    this["_on" + e] = [];
                else
                    for (var a = Object.keys(this), r = 0; r < a.length; r++)
                        0 === a[r].indexOf("_on") && Array.isArray(this[a[r]]) && (this[a[r]] = []);
                return this
            },
            once: function(e, t, i) {
                return this.on(e, t, i, 1),
                this
            },
            _emit: function(e, t, i) {
                for (var n = this["_on" + e], r = n.length - 1; 0 <= r; r--)
                    n[r].id && n[r].id !== t && "load" !== e || (setTimeout(function(e) {
                        e.call(this, t, i)
                    }
                    .bind(this, n[r].fn), 0),
                    n[r].once && this.off(e, n[r].fn, n[r].id));
                return this
            },
            _loadQueue: function() {
                var e, t = this;
                return 0 < t._queue.length && (e = t._queue[0],
                t.once(e.event, function() {
                    t._queue.shift(),
                    t._loadQueue()
                }),
                e.action()),
                t
            },
            _ended: function(e) {
                var t, i = this, n = e._sprite;
                return i._webAudio || !i._node || i._node.ended ? (n = !(!e._loop && !i._sprite[n][2]),
                i._emit("end", e._id),
                !i._webAudio && n && i.stop(e._id, !0).play(e._id),
                i._webAudio && n && (i._emit("play", e._id),
                e._seek = e._start || 0,
                e._rateSeek = 0,
                e._playStart = A.ctx.currentTime,
                t = 1e3 * (e._stop - e._start) / Math.abs(e._rate),
                i._endTimers[e._id] = setTimeout(i._ended.bind(i, e), t)),
                i._webAudio && !n && (e._paused = !0,
                e._ended = !0,
                e._seek = e._start || 0,
                e._rateSeek = 0,
                i._clearTimer(e._id),
                i._cleanBuffer(e._node),
                A._autoSuspend()),
                i._webAudio || n || i.stop(e._id)) : setTimeout(i._ended.bind(i, e), 100),
                i
            },
            _clearTimer: function(e) {
                return this._endTimers[e] && (clearTimeout(this._endTimers[e]),
                delete this._endTimers[e]),
                this
            },
            _soundById: function(e) {
                for (var t = 0; t < this._sounds.length; t++)
                    if (e === this._sounds[t]._id)
                        return this._sounds[t];
                return null
            },
            _inactiveSound: function() {
                this._drain();
                for (var e = 0; e < this._sounds.length; e++)
                    if (this._sounds[e]._ended)
                        return this._sounds[e].reset();
                return new o(this)
            },
            _drain: function() {
                var e = this
                  , t = e._pool
                  , i = 0
                  , n = 0;
                if (!(e._sounds.length < t)) {
                    for (n = 0; n < e._sounds.length; n++)
                        e._sounds[n]._ended && i++;
                    for (n = e._sounds.length - 1; 0 <= n; n--) {
                        if (i <= t)
                            return;
                        e._sounds[n]._ended && (e._webAudio && e._sounds[n]._node && e._sounds[n]._node.disconnect(0),
                        e._sounds.splice(n, 1),
                        i--)
                    }
                }
            },
            _getSoundIds: function(e) {
                if (void 0 !== e)
                    return [e];
                for (var t = [], i = 0; i < this._sounds.length; i++)
                    t.push(this._sounds[i]._id);
                return t
            },
            _refreshBuffer: function(e) {
                return e._node.bufferSource = A.ctx.createBufferSource(),
                e._node.bufferSource.buffer = a[this._src],
                e._panner ? e._node.bufferSource.connect(e._panner) : e._node.bufferSource.connect(e._node),
                e._node.bufferSource.loop = e._loop,
                e._loop && (e._node.bufferSource.loopStart = e._start || 0,
                e._node.bufferSource.loopEnd = e._stop),
                e._node.bufferSource.playbackRate.value = e._rate,
                this
            },
            _cleanBuffer: function(e) {
                if (this._scratchBuffer) {
                    e.bufferSource.onended = null,
                    e.bufferSource.disconnect(0);
                    try {
                        e.bufferSource.buffer = this._scratchBuffer
                    } catch (e) {}
                }
                return e.bufferSource = null,
                this
            }
        },
        function(e) {
            this._parent = e,
            this.init()
        }
        )
          , a = (o.prototype = {
            init: function() {
                var e = this
                  , t = e._parent;
                return e._muted = t._muted,
                e._loop = t._loop,
                e._volume = t._volume,
                e._rate = t._rate,
                e._seek = 0,
                e._paused = !0,
                e._ended = !0,
                e._sprite = "__default",
                e._id = ++A._counter,
                t._sounds.push(e),
                e.create(),
                e
            },
            create: function() {
                var e = this
                  , t = e._parent
                  , i = A._muted || e._muted || e._parent._muted ? 0 : e._volume;
                return t._webAudio ? (e._node = void 0 === A.ctx.createGain ? A.ctx.createGainNode() : A.ctx.createGain(),
                e._node.gain.setValueAtTime(i, A.ctx.currentTime),
                e._node.paused = !0,
                e._node.connect(A.masterGain)) : (e._node = new Audio,
                e._errorFn = e._errorListener.bind(e),
                e._node.addEventListener("error", e._errorFn, !1),
                e._loadFn = e._loadListener.bind(e),
                e._node.addEventListener(A._canPlayEvent, e._loadFn, !1),
                e._node.src = t._src,
                e._node.preload = "auto",
                e._node.volume = i * A.volume(),
                e._node.load()),
                e
            },
            reset: function() {
                var e = this
                  , t = e._parent;
                return e._muted = t._muted,
                e._loop = t._loop,
                e._volume = t._volume,
                e._rate = t._rate,
                e._seek = 0,
                e._rateSeek = 0,
                e._paused = !0,
                e._ended = !0,
                e._sprite = "__default",
                e._id = ++A._counter,
                e
            },
            _errorListener: function() {
                this._parent._emit("loaderror", this._id, this._node.error ? this._node.error.code : 0),
                this._node.removeEventListener("error", this._errorFn, !1)
            },
            _loadListener: function() {
                var e = this._parent;
                e._duration = Math.ceil(10 * this._node.duration) / 10,
                0 === Object.keys(e._sprite).length && (e._sprite = {
                    __default: [0, 1e3 * e._duration]
                }),
                "loaded" !== e._state && (e._state = "loaded",
                e._emit("load"),
                e._loadQueue()),
                this._node.removeEventListener(A._canPlayEvent, this._loadFn, !1)
            }
        },
        {})
          , s = function(t) {
            var e = t._src;
            if (a[e])
                t._duration = a[e].duration,
                u(t);
            else if (/^data:[^;]+;base64,/.test(e)) {
                for (var i = atob(e.split(",")[1]), n = new Uint8Array(i.length), r = 0; r < i.length; ++r)
                    n[r] = i.charCodeAt(r);
                _(n.buffer, t)
            } else {
                var o = new XMLHttpRequest;
                o.open("GET", e, !0),
                o.responseType = "arraybuffer",
                o.onload = function() {
                    var e = (o.status + "")[0];
                    "0" !== e && "2" !== e && "3" !== e ? t._emit("loaderror", null, "Failed loading audio file with status: " + o.status + ".") : _(o.response, t)
                }
                ,
                o.onerror = function() {
                    t._webAudio && (t._html5 = !0,
                    t._webAudio = !1,
                    t._sounds = [],
                    delete a[e],
                    t.load())
                }
                ,
                d(o)
            }
        }
          , d = function(t) {
            try {
                t.send()
            } catch (e) {
                t.onerror()
            }
        }
          , _ = function(e, t) {
            A.ctx.decodeAudioData(e, function(e) {
                e && 0 < t._sounds.length && (a[t._src] = e,
                u(t, e))
            }, function() {
                t._emit("loaderror", null, "Decoding audio data failed.")
            })
        }
          , u = function(e, t) {
            t && !e._duration && (e._duration = t.duration),
            0 === Object.keys(e._sprite).length && (e._sprite = {
                __default: [0, 1e3 * e._duration]
            }),
            "loaded" !== e._state && (e._state = "loaded",
            e._emit("load"),
            e._loadQueue())
        }
          , l = function() {
            try {
                "undefined" != typeof AudioContext ? A.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? A.ctx = new webkitAudioContext : A.usingWebAudio = !1
            } catch (e) {
                A.usingWebAudio = !1
            }
            var e = /iP(hone|od|ad)/.test(A._navigator && A._navigator.platform)
              , t = A._navigator && A._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/)
              , t = t ? parseInt(t[1], 10) : null;
            e && t && t < 9 && (t = /safari/.test(A._navigator && A._navigator.userAgent.toLowerCase()),
            A._navigator && A._navigator.standalone && !t || A._navigator && !A._navigator.standalone && !t) && (A.usingWebAudio = !1),
            A.usingWebAudio && (A.masterGain = void 0 === A.ctx.createGain ? A.ctx.createGainNode() : A.ctx.createGain(),
            A.masterGain.gain.value = A._muted ? 0 : 1,
            A.masterGain.connect(A.ctx.destination)),
            A._setup()
        };
        "function" == typeof define && define.amd && define([], function() {
            return {
                Howler: A,
                Howl: t
            }
        }),
        "undefined" != typeof exports && (exports.Howler = A,
        exports.Howl = t),
        "undefined" != typeof window ? (window.HowlerGlobal = e,
        window.Howler = A,
        window.Howl = t,
        window.Sound = o) : "undefined" != typeof global && (global.HowlerGlobal = e,
        global.Howler = A,
        global.Howl = t,
        global.Sound = o)
    }(),
    function() {
        "use strict";
        HowlerGlobal.prototype._pos = [0, 0, 0],
        HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0],
        HowlerGlobal.prototype.stereo = function(e) {
            if (this.ctx && this.ctx.listener)
                for (var t = this._howls.length - 1; 0 <= t; t--)
                    this._howls[t].stereo(e);
            return this
        }
        ,
        HowlerGlobal.prototype.pos = function(e, t, i) {
            var n = this;
            return n.ctx && n.ctx.listener ? (t = "number" != typeof t ? n._pos[1] : t,
            i = "number" != typeof i ? n._pos[2] : i,
            "number" != typeof e ? n._pos : (n._pos = [e, t, i],
            n.ctx.listener.setPosition(n._pos[0], n._pos[1], n._pos[2]),
            n)) : n
        }
        ,
        HowlerGlobal.prototype.orientation = function(e, t, i, n, r, o) {
            var a;
            return this.ctx && this.ctx.listener ? (a = this._orientation,
            t = "number" != typeof t ? a[1] : t,
            i = "number" != typeof i ? a[2] : i,
            n = "number" != typeof n ? a[3] : n,
            r = "number" != typeof r ? a[4] : r,
            o = "number" != typeof o ? a[5] : o,
            "number" != typeof e ? a : (this._orientation = [e, t, i, n, r, o],
            this.ctx.listener.setOrientation(e, t, i, n, r, o),
            this)) : this
        }
        ,
        Howl.prototype.init = (n = Howl.prototype.init,
        function(e) {
            return this._orientation = e.orientation || [1, 0, 0],
            this._stereo = e.stereo || null,
            this._pos = e.pos || null,
            this._pannerAttr = {
                coneInnerAngle: void 0 !== e.coneInnerAngle ? e.coneInnerAngle : 360,
                coneOuterAngle: void 0 !== e.coneOuterAngle ? e.coneOuterAngle : 360,
                coneOuterGain: void 0 !== e.coneOuterGain ? e.coneOuterGain : 0,
                distanceModel: void 0 !== e.distanceModel ? e.distanceModel : "inverse",
                maxDistance: void 0 !== e.maxDistance ? e.maxDistance : 1e4,
                panningModel: void 0 !== e.panningModel ? e.panningModel : "HRTF",
                refDistance: void 0 !== e.refDistance ? e.refDistance : 1,
                rolloffFactor: void 0 !== e.rolloffFactor ? e.rolloffFactor : 1
            },
            this._onstereo = e.onstereo ? [{
                fn: e.onstereo
            }] : [],
            this._onpos = e.onpos ? [{
                fn: e.onpos
            }] : [],
            this._onorientation = e.onorientation ? [{
                fn: e.onorientation
            }] : [],
            n.call(this, e)
        }
        ),
        Howl.prototype.stereo = function(e, t) {
            var i = this;
            if (i._webAudio)
                if ("loaded" !== i._state)
                    i._queue.push({
                        event: "stereo",
                        action: function() {
                            i.stereo(e, t)
                        }
                    });
                else {
                    var n = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
                    if (void 0 === t) {
                        if ("number" != typeof e)
                            return i._stereo;
                        i._stereo = e,
                        i._pos = [e, 0, 0]
                    }
                    for (var r = i._getSoundIds(t), o = 0; o < r.length; o++) {
                        var a = i._soundById(r[o]);
                        if (a) {
                            if ("number" != typeof e)
                                return a._stereo;
                            a._stereo = e,
                            a._pos = [e, 0, 0],
                            a._node && (a._pannerAttr.panningModel = "equalpower",
                            a._panner && a._panner.pan || _(a, n),
                            "spatial" == n ? a._panner.setPosition(e, 0, 0) : a._panner.pan.value = e),
                            i._emit("stereo", a._id)
                        }
                    }
                }
            return i
        }
        ,
        Howl.prototype.pos = function(e, t, i, n) {
            var r = this;
            if (r._webAudio)
                if ("loaded" !== r._state)
                    r._queue.push({
                        event: "pos",
                        action: function() {
                            r.pos(e, t, i, n)
                        }
                    });
                else {
                    if (t = "number" != typeof t ? 0 : t,
                    i = "number" != typeof i ? -.5 : i,
                    void 0 === n) {
                        if ("number" != typeof e)
                            return r._pos;
                        r._pos = [e, t, i]
                    }
                    for (var o = r._getSoundIds(n), a = 0; a < o.length; a++) {
                        var s = r._soundById(o[a]);
                        if (s) {
                            if ("number" != typeof e)
                                return s._pos;
                            s._pos = [e, t, i],
                            s._node && (s._panner && !s._panner.pan || _(s, "spatial"),
                            s._panner.setPosition(e, t, i)),
                            r._emit("pos", s._id)
                        }
                    }
                }
            return r
        }
        ,
        Howl.prototype.orientation = function(e, t, i, n) {
            var r = this;
            if (r._webAudio)
                if ("loaded" !== r._state)
                    r._queue.push({
                        event: "orientation",
                        action: function() {
                            r.orientation(e, t, i, n)
                        }
                    });
                else {
                    if (t = "number" != typeof t ? r._orientation[1] : t,
                    i = "number" != typeof i ? r._orientation[2] : i,
                    void 0 === n) {
                        if ("number" != typeof e)
                            return r._orientation;
                        r._orientation = [e, t, i]
                    }
                    for (var o = r._getSoundIds(n), a = 0; a < o.length; a++) {
                        var s = r._soundById(o[a]);
                        if (s) {
                            if ("number" != typeof e)
                                return s._orientation;
                            s._orientation = [e, t, i],
                            s._node && (s._panner || (s._pos || (s._pos = r._pos || [0, 0, -.5]),
                            _(s, "spatial")),
                            s._panner.setOrientation(e, t, i)),
                            r._emit("orientation", s._id)
                        }
                    }
                }
            return r
        }
        ,
        Howl.prototype.pannerAttr = function() {
            var e, t, i, n = this, r = arguments;
            if (n._webAudio) {
                if (0 === r.length)
                    return n._pannerAttr;
                if (1 === r.length) {
                    if ("object" != typeof r[0])
                        return ((i = n._soundById(parseInt(r[0], 10))) || n)._pannerAttr;
                    e = r[0],
                    void 0 === t && (n._pannerAttr = {
                        coneInnerAngle: void 0 !== e.coneInnerAngle ? e.coneInnerAngle : n._coneInnerAngle,
                        coneOuterAngle: void 0 !== e.coneOuterAngle ? e.coneOuterAngle : n._coneOuterAngle,
                        coneOuterGain: void 0 !== e.coneOuterGain ? e.coneOuterGain : n._coneOuterGain,
                        distanceModel: void 0 !== e.distanceModel ? e.distanceModel : n._distanceModel,
                        maxDistance: void 0 !== e.maxDistance ? e.maxDistance : n._maxDistance,
                        panningModel: void 0 !== e.panningModel ? e.panningModel : n._panningModel,
                        refDistance: void 0 !== e.refDistance ? e.refDistance : n._refDistance,
                        rolloffFactor: void 0 !== e.rolloffFactor ? e.rolloffFactor : n._rolloffFactor
                    })
                } else
                    2 === r.length && (e = r[0],
                    t = parseInt(r[1], 10));
                for (var o, a, s = n._getSoundIds(t), d = 0; d < s.length; d++)
                    (i = n._soundById(s[d])) && (o = i._pannerAttr,
                    o = {
                        coneInnerAngle: (void 0 !== e.coneInnerAngle ? e : o).coneInnerAngle,
                        coneOuterAngle: (void 0 !== e.coneOuterAngle ? e : o).coneOuterAngle,
                        coneOuterGain: (void 0 !== e.coneOuterGain ? e : o).coneOuterGain,
                        distanceModel: (void 0 !== e.distanceModel ? e : o).distanceModel,
                        maxDistance: (void 0 !== e.maxDistance ? e : o).maxDistance,
                        panningModel: (void 0 !== e.panningModel ? e : o).panningModel,
                        refDistance: (void 0 !== e.refDistance ? e : o).refDistance,
                        rolloffFactor: (void 0 !== e.rolloffFactor ? e : o).rolloffFactor
                    },
                    (a = i._panner) ? (a.coneInnerAngle = o.coneInnerAngle,
                    a.coneOuterAngle = o.coneOuterAngle,
                    a.coneOuterGain = o.coneOuterGain,
                    a.distanceModel = o.distanceModel,
                    a.maxDistance = o.maxDistance,
                    a.panningModel = o.panningModel,
                    a.refDistance = o.refDistance,
                    a.rolloffFactor = o.rolloffFactor) : (i._pos || (i._pos = n._pos || [0, 0, -.5]),
                    _(i, "spatial")))
            }
            return n
        }
        ,
        Sound.prototype.init = (i = Sound.prototype.init,
        function() {
            var e = this
              , t = e._parent;
            e._orientation = t._orientation,
            e._stereo = t._stereo,
            e._pos = t._pos,
            e._pannerAttr = t._pannerAttr,
            i.call(this),
            e._stereo ? t.stereo(e._stereo) : e._pos && t.pos(e._pos[0], e._pos[1], e._pos[2], e._id)
        }
        ),
        Sound.prototype.reset = (t = Sound.prototype.reset,
        function() {
            var e = this._parent;
            return this._orientation = e._orientation,
            this._pos = e._pos,
            this._pannerAttr = e._pannerAttr,
            t.call(this)
        }
        );
        var t, i, n, _ = function(e, t) {
            "spatial" === (t = t || "spatial") ? (e._panner = Howler.ctx.createPanner(),
            e._panner.coneInnerAngle = e._pannerAttr.coneInnerAngle,
            e._panner.coneOuterAngle = e._pannerAttr.coneOuterAngle,
            e._panner.coneOuterGain = e._pannerAttr.coneOuterGain,
            e._panner.distanceModel = e._pannerAttr.distanceModel,
            e._panner.maxDistance = e._pannerAttr.maxDistance,
            e._panner.panningModel = e._pannerAttr.panningModel,
            e._panner.refDistance = e._pannerAttr.refDistance,
            e._panner.rolloffFactor = e._pannerAttr.rolloffFactor,
            e._panner.setPosition(e._pos[0], e._pos[1], e._pos[2]),
            e._panner.setOrientation(e._orientation[0], e._orientation[1], e._orientation[2])) : (e._panner = Howler.ctx.createStereoPanner(),
            e._panner.pan.value = e._stereo),
            e._panner.connect(e._node),
            e._paused || e._parent.pause(e._id, !0).play(e._id)
        }
    }();
    var De, Fe, Ye, so, _o = {
        AMB: 1,
        FX: 1
    }, c = {
        SEA_DELAY: 12,
        SEA_FADE: 5e3,
        FOREST_DELAY: 12,
        FOREST_FADE: 5e3,
        SNOW_DELAY: 12,
        SNOW_FADE: 5e3,
        TRANSITION: 3e3,
        DISABLE_EFFECT: 46e4,
        PLAYERS: 8,
        ITEMS: 6,
        HAND: 1,
        MISC: 2,
        SHOVEL: 3
    }, uo = [], lo = (uo[-1] = c.HAND,
    uo[Ge.BOOK] = c.HAND,
    uo[Ge.WATERING_CAN_FULL] = c.HAND,
    uo[Ge.WRENCH] = c.MISC,
    uo[Ge.PICK_WOOD] = c.MISC,
    uo[Ge.PICK] = c.MISC,
    uo[Ge.PICK_GOLD] = c.MISC,
    uo[Ge.PICK_DIAMOND] = c.MISC,
    uo[Ge.PICK_AMETHYST] = c.MISC,
    uo[Ge.PICK_REIDITE] = c.MISC,
    uo[Ge.PIRATE_SWORD] = c.MISC,
    uo[Ge.SWORD_WOOD] = c.MISC,
    uo[Ge.SWORD] = c.MISC,
    uo[Ge.LAVA_SWORD] = c.MISC,
    uo[Ge.LAVA_SPEAR] = c.MISC,
    uo[Ge.SWORD_GOLD] = c.MISC,
    uo[Ge.SWORD_DIAMOND] = c.MISC,
    uo[Ge.SWORD_AMETHYST] = c.MISC,
    uo[Ge.SWORD_REIDITE] = c.MISC,
    uo[Ge.CRAB_SPEAR] = c.MISC,
    uo[Ge.WOOD_SPEAR] = c.MISC,
    uo[Ge.SPEAR] = c.MISC,
    uo[Ge.GOLD_SPEAR] = c.MISC,
    uo[Ge.DIAMOND_SPEAR] = c.MISC,
    uo[Ge.DRAGON_SPEAR] = c.MISC,
    uo[Ge.AMETHYST_SPEAR] = c.MISC,
    uo[Ge.AMETHYST_REIDITE] = c.MISC,
    uo[Ge.HAMMER] = c.MISC,
    uo[Ge.HAMMER_GOLD] = c.MISC,
    uo[Ge.HAMMER_DIAMOND] = c.MISC,
    uo[Ge.HAMMER_AMETHYST] = c.MISC,
    uo[Ge.HAMMER_REIDITE] = c.MISC,
    uo[Ge.SUPER_HAMMER] = c.MISC,
    uo[Ge.DRAGON_SWORD] = c.MISC,
    uo[Ge.PITCHFORK2] = c.MISC,
    uo[Ge.PITCHFORK] = c.MISC,
    uo[Ge.SHOVEL] = c.SHOVEL,
    uo[Ge.SHOVEL_GOLD] = c.SHOVEL,
    uo[Ge.SHOVEL_DIAMOND] = c.SHOVEL,
    uo[Ge.SHOVEL_AMETHYST] = c.SHOVEL,
    (SOUND_NATURE = [])[0] = 0,
    SOUND_NATURE[1] = 1,
    SOUND_NATURE[2] = 1,
    SOUND_NATURE[3] = 1,
    SOUND_NATURE[4] = 0,
    SOUND_NATURE[5] = 0,
    SOUND_NATURE[6] = 0,
    SOUND_NATURE[7] = 0,
    SOUND_NATURE[8] = 0,
    SOUND_NATURE[9] = 0,
    SOUND_NATURE[10] = 1,
    SOUND_NATURE[11] = 1,
    SOUND_NATURE[12] = 1,
    SOUND_NATURE[13] = 1,
    SOUND_NATURE[14] = 1,
    SOUND_NATURE[15] = 1,
    SOUND_NATURE[16] = 0,
    SOUND_NATURE[17] = 0,
    SOUND_NATURE[18] = 0,
    SOUND_NATURE[19] = 0,
    SOUND_NATURE[20] = 0,
    SOUND_NATURE[21] = 0,
    SOUND_NATURE[22] = 0,
    SOUND_NATURE[23] = 1,
    SOUND_NATURE[24] = 1,
    SOUND_NATURE[25] = 1,
    SOUND_NATURE[26] = 1,
    SOUND_NATURE[27] = 1,
    SOUND_NATURE[28] = 1,
    SOUND_NATURE[29] = 1,
    SOUND_NATURE[30] = 1,
    SOUND_NATURE[31] = 1,
    SOUND_NATURE[32] = 1,
    SOUND_NATURE[33] = 1,
    SOUND_NATURE[34] = 1,
    SOUND_NATURE[35] = 1,
    SOUND_NATURE[36] = 1,
    SOUND_NATURE[37] = 1,
    SOUND_NATURE[38] = 1,
    SOUND_NATURE[40] = 0,
    SOUND_NATURE[41] = 0,
    SOUND_NATURE[42] = 0,
    SOUND_NATURE[50] = 1,
    SOUND_NATURE[51] = 1,
    SOUND_NATURE[52] = 1,
    SOUND_NATURE[55] = 0,
    SOUND_NATURE[56] = 0,
    SOUND_NATURE[57] = 0,
    SOUND_NATURE[58] = 0,
    (SOUND_BUILD = [])[xe.PLANT] = 0,
    SOUND_BUILD[xe.FIRE] = 0,
    SOUND_BUILD[xe.TOTEM] = 0,
    SOUND_BUILD[xe.BIG_FIRE] = 0,
    SOUND_BUILD[xe.SEED] = -1,
    SOUND_BUILD[xe.WHEAT_SEED] = -1,
    SOUND_BUILD[xe.WORKBENCH] = 0,
    SOUND_BUILD[xe.WALL] = 0,
    SOUND_BUILD[xe.BRIDGE] = 0,
    SOUND_BUILD[xe.PLOT] = 0,
    SOUND_BUILD[xe.WINDMILL] = 1,
    SOUND_BUILD[xe.WELL] = 1,
    SOUND_BUILD[xe.STONE_WALL] = 1,
    SOUND_BUILD[xe.GOLD_WALL] = 1,
    SOUND_BUILD[xe.DIAMOND_WALL] = 1,
    SOUND_BUILD[xe.AMETHYST_WALL] = 1,
    SOUND_BUILD[xe.REIDITE_WALL] = 1,
    SOUND_BUILD[xe.SPIKE] = 0,
    SOUND_BUILD[xe.STONE_SPIKE] = 1,
    SOUND_BUILD[xe.GOLD_SPIKE] = 1,
    SOUND_BUILD[xe.DIAMOND_SPIKE] = 1,
    SOUND_BUILD[xe.AMETHYST_SPIKE] = 1,
    SOUND_BUILD[xe.REIDITE_SPIKE] = 1,
    SOUND_BUILD[xe.WOOD_DOOR] = 0,
    SOUND_BUILD[xe.STONE_DOOR] = 1,
    SOUND_BUILD[xe.GOLD_DOOR] = 1,
    SOUND_BUILD[xe.DIAMOND_DOOR] = 1,
    SOUND_BUILD[xe.AMETHYST_DOOR] = 1,
    SOUND_BUILD[xe.REIDITE_DOOR] = 1,
    SOUND_BUILD[xe.WOOD_DOOR_SPIKE] = 0,
    SOUND_BUILD[xe.STONE_DOOR_SPIKE] = 1,
    SOUND_BUILD[xe.GOLD_DOOR_SPIKE] = 1,
    SOUND_BUILD[xe.DIAMOND_DOOR_SPIKE] = 1,
    SOUND_BUILD[xe.AMETHYST_DOOR_SPIKE] = 1,
    SOUND_BUILD[xe.REIDITE_DOOR_SPIKE] = 1,
    SOUND_BUILD[xe.FURNACE] = 1,
    SOUND_BUILD[xe.RESURRECTION] = 1,
    SOUND_BUILD[xe.EMERALD_MACHINE] = 1,
    SOUND_BUILD[xe.CHEST] = 0,
    {
        DIG: {
            sound: null,
            path: ["audio/ambience.mp3"],
            sprite: {
                d0: [90086, 300, !(SOUND_BUILD[xe.BREAD_OVEN] = 1)],
                d1: [90391, 300, !1],
                d2: [90684, 300, !1]
            },
            sample: {
                d0: c.PLAYERS,
                d1: c.PLAYERS,
                d2: c.PLAYERS
            }
        },
        PUNCH: {
            sound: null,
            path: ["audio/ambience.mp3"],
            sprite: {
                p0: [89303, 300, !1],
                p1: [89549, 300, !1],
                p2: [89815, 300, !1]
            },
            sample: {
                p0: c.PLAYERS,
                p1: c.PLAYERS,
                p2: c.PLAYERS
            }
        },
        WEAPON: {
            sound: null,
            path: ["audio/ambience.mp3"],
            sprite: {
                w0: [88195, 300, !1],
                w1: [88473, 300, !1],
                w2: [88751, 300, !1],
                w3: [89025, 300, !1]
            },
            sample: {
                w0: c.PLAYERS,
                w1: c.PLAYERS,
                w2: c.PLAYERS,
                w3: c.PLAYERS
            }
        },
        AMBIENCE: {
            sound: null,
            path: ["audio/ambience.mp3"],
            sprite: {
                cook: [100, 2800, !0],
                seaday: [3100, 8800, !0],
                seanight: [19882, 8301, !0],
                forestday: [32604, 21890, !0],
                forestnight: [54524, 11393, !0],
                snowday: [66961, 21223, !0],
                snownight: [66961, 21223, !0],
                fire: [12356, 6965, !0],
                swim: [28380, 1797, !0],
                sand: [30562, 655, !0],
                walk: [31658, 813, !0],
                snow: [66014, 925, !0],
                hwood: [91022, 400, !1],
                hand: [91431, 400, !1],
                hstone: [92249, 500, !1]
            },
            sample: {
                cook: 1,
                seaday: 1,
                seanight: 1,
                forestday: 1,
                forestnight: 1,
                snowday: 1,
                snownight: 1,
                fire: c.PLAYERS,
                swim: c.PLAYERS,
                sand: c.PLAYERS,
                walk: c.PLAYERS,
                snow: c.PLAYERS,
                hwood: c.ITEMS,
                hand: c.ITEMS,
                hstone: c.ITEMS
            }
        }
    }), co = function(e, t, i, n, r, o, a, s, d, _, u) {
        this.r = 1,
        this.delay = e,
        this.max_delay = e,
        this.night = t,
        this.day = i,
        this.fade = n,
        this.r_base = r,
        this.r_seed = o,
        this.player = a,
        this.transition_delay = s,
        this.source = d,
        this.source.lx = d.x + d.w,
        this.source.by = d.y + d.h,
        this.outside_box = _,
        this.inside_box = u,
        this.inside = 0,
        this.hackish = {
            d: 5,
            m: 5
        },
        this.effect = function() {
            var e, t, i, n;
            this.delay -= qe,
            this.delay < 0 && (this.delay = this.max_delay,
            e = lo.AMBIENCE.sound.playing(this.night),
            t = lo.AMBIENCE.sound.playing(this.day),
            e && !t ? (i = this.player.volume(this.night) * _o.AMB,
            n = (Math.random() * this.r_seed + this.r_base) * _o.AMB,
            this.player.fade(i, n, this.fade, this.night)) : !e && t && (i = this.player.volume(this.day) * _o.AMB,
            n = (Math.random() * this.r_seed + this.r_base) * _o.AMB,
            this.player.fade(i, n, this.fade, this.day)))
        }
        ,
        this.transition = function() {
            var e;
            this.delay = this.max_delay,
            this.hackish.d = this.hackish.m,
            Fe.time ? (this.player.fade(0, this.r_base * _o.AMB, this.transition_delay, this.night),
            this.player.play(this.night),
            this.player.playing(this.day) && (e = this.player.volume(this.day) * _o.AMB,
            this.player.fade(e, 0, this.transition_delay, this.day))) : (this.player.fade(0, this.r_base * _o.AMB, this.transition_delay, this.day),
            this.player.play(this.day),
            this.player.playing(this.night) && (e = this.player.volume(this.night) * _o.AMB,
            this.player.fade(e, 0, this.transition_delay, this.night)))
        }
        ,
        this.check = function(e) {
            var t;
            this.inside ? Utils.inside_box(e, this.outside_box) ? !Xe.transition && Fe.clock.now < c.DISABLE_EFFECT && (Fe.time ? this.player.playing(this.night) || (this.hackish.d -= qe,
            this.hackish.d < 0 && this.transition()) : this.player.playing(this.day) || (this.hackish.d -= qe,
            this.hackish.d < 0 && this.transition())) : (this.inside = 0,
            this.player.playing(this.night) && (t = this.player.volume(this.night) * _o.AMB,
            this.player.fade(t, 0, this.transition_delay, this.night)),
            this.player.playing(this.day) && (t = this.player.volume(this.day) * _o.AMB,
            this.player.fade(t, 0, this.transition_delay, this.day))) : Utils.inside_box(e, this.inside_box) && (this.inside = 1,
            !Xe.transition) && Fe.clock.now < c.DISABLE_EFFECT && this.transition()
        }
        ,
        this.update = function(e, t) {
            var i = e.x < this.source.x ? Xe.get_x(this.source.x) : e.x > this.source.lx ? Xe.get_x(this.source.lx) : t.x
              , e = e.y < this.source.y ? Xe.get_y(this.source.y) : e.y > this.source.by ? Xe.get_y(this.source.by) : t.y;
            this.player.pos(i, e, -.5, this.night),
            this.player.pos(i, e, -.5, this.day)
        }
    }, ho = (SOUND_PLAYER = {
        DELAY_SWIM: .4,
        DELAY_SAND: .2,
        DELAY_WALK: .2,
        DELAY_SNOW: .2,
        FADE_SWIM: 300,
        FADE_SAND: 100,
        FADE_WALK: 100,
        FADE_SNOW: 100,
        WALK: 0,
        SWIM: 1,
        SAND: 2,
        SNOW: 3,
        FACTOR: 4,
        FACTOR2: 2
    },
    function(e, t, i) {
        this.mom = e,
        this.c = 0,
        this.player = t,
        this.ids = i,
        this.max = i.length,
        this.play = function() {
            this.c = (this.c + 1) % this.max;
            var e = this.ids[this.c];
            this.mom.update_pos(this.player, e),
            this.player.play(e)
        }
    }
    ), Eo = function(e) {
        this.free = 1,
        this.uid = 0,
        this.mode = -1,
        this.swim = Xe.sample.swim[e],
        this.sand = Xe.sample.sand[e],
        this.walk = Xe.sample.walk[e],
        this.snow = Xe.sample.snow[e],
        this.punch = new ho(this,lo.PUNCH.sound,Xe.samples.punch[e]),
        this.weapon = new ho(this,lo.WEAPON.sound,Xe.samples.weapon[e]),
        this.dig = new ho(this,lo.DIG.sound,Xe.samples.dig[e]),
        this.sid = e,
        this.x = 0,
        this.y = 0,
        this.move = 0,
        this.delay = SOUND_PLAYER.DELAY,
        this.pos = {
            x: 0,
            y: 0
        },
        this.ambience = lo.AMBIENCE.sound,
        this.swing = function(e) {
            e === c.HAND ? this.punch.play() : e === c.MISC ? this.weapon.play() : e === c.SHOVEL && this.dig.play()
        }
        ,
        this.detect_position = function(e) {
            return 0 < e.dist_sand ? SOUND_PLAYER.SAND : 0 < e.dist_water ? SOUND_PLAYER.SWIM : 0 < e.dist_winter || 0 < e.dist_lava ? SOUND_PLAYER.SNOW : SOUND_PLAYER.WALK
        }
        ,
        this.init = function(e) {
            this.free = 0,
            this.uid = e;
            e = Fe.fast_units[e];
            e.sid = this.sid,
            this.mode = this.detect_position(e),
            this.pos.x = e.x,
            this.pos.y = e.y
        }
        ,
        this.clean = function() {
            this.free = 1,
            this.mode = -1,
            this.ambience.stop(this.swim),
            this.ambience.stop(this.sand),
            this.ambience.stop(this.walk),
            this.ambience.stop(this.snow)
        }
        ,
        this.fade = function(e, t) {
            var i = this.ambience.volume(e) * _o.FX;
            this.ambience.fade(i, 0, t, e)
        }
        ,
        this.update_pos = function(e, t) {
            this.move && this.sid && e.pos(this.x, this.y, -.5, t)
        }
        ,
        this.effect = function(e, t, i, n, r, o, a) {
            var s, d;
            this.delay = o,
            n && this.mode === r ? (s = this.ambience.volume(e) * _o.FX,
            this.move ? (d = (Math.random() * i + t) * _o.FX,
            this.ambience.fade(s, d, a, e)) : this.ambience.fade(s, 0, a, e)) : this.mode != r && this.move ? this.ambience.fade(0, (t + i) * _o.FX, a, e) : this.move && (s = this.ambience.volume(e) * _o.FX,
            d = (Math.random() * i + t) * _o.FX,
            this.ambience.fade(s, d, a, e)),
            this.update_pos(this.ambience, e),
            this.ambience.play(e)
        }
        ,
        this.update = function() {
            var e, t = Fe.fast_units[this.uid];
            this.delay -= qe,
            0 < this.delay || (e = 0,
            t.x != this.pos.x || t.y != this.pos.y ? (this.move || (this.move = e = 1),
            this.x = Xe.get_x_ext(t.x, SOUND_PLAYER.FACTOR2),
            this.y = Xe.get_y_ext(t.y, SOUND_PLAYER.FACTOR2)) : this.move && (e = 1,
            this.move = 0),
            this.pos.x = t.x,
            this.pos.y = t.y,
            (mode = this.detect_position(t)) != this.mode && (this.mode === SOUND_PLAYER.SWIM ? this.fade(this.swim, SOUND_PLAYER.FADE_SWIM) : this.mode === SOUND_PLAYER.SAND ? this.fade(this.sand, SOUND_PLAYER.FADE_SAND) : this.mode === SOUND_PLAYER.WALK ? this.fade(this.walk, SOUND_PLAYER.FADE_WALK) : this.mode === SOUND_PLAYER.SNOW && this.fade(this.snow, SOUND_PLAYER.FADE_SNOW)),
            mode === SOUND_PLAYER.SWIM ? this.effect(this.swim, .08, .3, e, mode, SOUND_PLAYER.DELAY_SWIM, SOUND_PLAYER.FADE_SWIM) : mode === SOUND_PLAYER.SAND ? this.effect(this.sand, .2, .3, e, mode, SOUND_PLAYER.DELAY_SAND, SOUND_PLAYER.FADE_SAND) : mode === SOUND_PLAYER.WALK ? this.effect(this.walk, .3, .6, e, mode, SOUND_PLAYER.DELAY_WALK, SOUND_PLAYER.FADE_WALK) : mode === SOUND_PLAYER.SNOW && this.effect(this.snow, .1, .25, e, mode, SOUND_PLAYER.DELAY_SNOW, SOUND_PLAYER.FADE_SNOW),
            this.mode = mode)
        }
        ,
        this.check = function() {
            var e = Fe.fast_units[this.uid];
            return !!e || (this.clean(e),
            !1)
        }
    }, he = (mobile = 0,
    document.getElementById("version").innerHTML = H2.VERSION_NUMBER + ".3",
    [[0, "DRAGON", 18, 6, 66, 35, 0], [0, "WINTER", 91, 18, 5, 40, 8], [0, "DESERT", 135, 180, 89, 124, 5], [0, "LAVA", 142, 6, 82, 99, 6], [0, "FOREST", 6, 150, 90, 154, 8], [0, "WINTER", 6, 6, 90, 150, 0], [1, "b", 0, 5, 175, 0], [1, "t", 2, 5, 174, 0], [1, "t", 5, 5, 173, 0], [1, "b", 3, 5, 176, 0], [1, "t", 0, 5, 177, 0], [1, "t", 3, 5, 178, 0], [1, "t", 4, 5, 179, 0], [1, "b", 0, 5, 180, 0], [1, "t", 5, 5, 181, 0], [1, "b", 2, 5, 182, 0], [1, "b", 1, 5, 183, 0], [1, "b", 2, 5, 184, 0], [1, "t", 5, 5, 185, 0], [1, "t", 2, 5, 186, 0], [1, "t", 0, 5, 187, 0], [1, "t", 5, 5, 188, 0], [1, "t", 1, 5, 189, 0], [1, "b", 2, 5, 190, 0], [1, "t", 4, 5, 191, 0], [1, "b", 3, 5, 192, 0], [1, "t", 5, 5, 193, 0], [1, "t", 0, 5, 194, 0], [1, "t", 3, 5, 195, 0], [1, "b", 0, 5, 196, 0], [1, "t", 5, 5, 197, 0], [1, "t", 2, 5, 198, 0], [1, "b", 2, 5, 199, 0], [1, "t", 4, 5, 200, 0], [1, "t", 1, 5, 201, 0], [1, "b", 1, 5, 202, 0], [1, "t", 5, 5, 203, 0], [1, "t", 2, 5, 204, 0], [1, "t", 4, 5, 205, 0], [1, "b", 2, 5, 206, 0], [1, "t", 1, 5, 207, 0], [1, "t", 4, 5, 208, 0], [1, "t", 2, 5, 209, 0], [1, "b", 0, 5, 210, 0], [1, "t", 5, 5, 211, 0], [1, "t", 1, 5, 212, 0], [1, "t", 2, 5, 213, 0], [1, "b", 3, 5, 214, 0], [1, "t", 5, 5, 215, 0], [1, "b", 0, 5, 216, 0], [1, "t", 4, 5, 217, 0], [1, "t", 2, 5, 218, 0], [1, "t", 1, 5, 219, 0], [1, "t", 3, 5, 220, 0], [1, "t", 5, 5, 221, 0], [1, "t", 2, 5, 222, 0], [1, "t", 4, 5, 223, 0], [1, "b", 3, 5, 224, 0], [1, "t", 1, 5, 225, 0], [1, "t", 3, 5, 226, 0], [1, "b", 0, 5, 227, 0], [1, "t", 3, 5, 228, 0], [1, "t", 5, 5, 229, 0], [1, "t", 2, 5, 230, 0], [1, "t", 0, 5, 231, 0], [1, "b", 2, 5, 232, 0], [1, "t", 1, 5, 233, 0], [1, "t", 4, 5, 234, 0], [1, "b", 1, 5, 235, 0], [1, "t", 4, 5, 236, 0], [1, "t", 2, 5, 237, 0], [1, "t", 0, 5, 238, 0], [1, "t", 4, 5, 239, 0], [1, "b", 2, 5, 240, 0], [1, "t", 5, 5, 241, 0], [1, "b", 1, 5, 242, 0], [1, "t", 4, 5, 243, 0], [1, "t", 2, 5, 244, 0], [1, "t", 1, 5, 245, 0], [1, "b", 1, 5, 246, 0], [1, "t", 3, 5, 247, 0], [1, "b", 2, 5, 248, 0], [1, "t", 5, 5, 249, 0], [1, "t", 2, 5, 250, 0], [1, "t", 4, 5, 251, 0], [1, "b", 1, 5, 252, 0], [1, "t", 4, 5, 253, 0], [1, "t", 1, 5, 254, 0], [1, "t", 3, 5, 255, 0], [1, "t", 5, 5, 256, 0], [1, "b", 2, 5, 257, 0], [1, "t", 4, 5, 258, 0], [1, "b", 3, 5, 259, 0], [1, "t", 5, 5, 260, 0], [1, "b", 0, 5, 261, 0], [1, "t", 3, 5, 262, 0], [1, "t", 4, 5, 263, 0], [1, "t", 2, 5, 264, 0], [1, "b", 1, 5, 265, 0], [1, "b", 2, 5, 266, 0], [1, "t", 3, 5, 267, 0], [1, "t", 4, 5, 268, 0], [1, "t", 0, 5, 269, 0], [1, "t", 5, 5, 270, 0], [1, "t", 3, 5, 271, 0], [1, "t", 4, 5, 272, 0], [1, "t", 1, 5, 273, 0], [1, "b", 2, 5, 274, 0], [1, "t", 1, 5, 275, 0], [1, "t", 4, 5, 276, 0], [1, "b", 1, 5, 277, 0], [1, "b", 2, 5, 278, 0], [1, "t", 1, 5, 279, 0], [1, "t", 4, 5, 280, 0], [1, "t", 2, 5, 281, 0], [1, "t", 5, 5, 282, 0], [1, "b", 2, 5, 283, 0], [1, "t", 1, 5, 284, 0], [1, "b", 3, 5, 285, 0], [1, "t", 4, 5, 286, 0], [1, "t", 0, 5, 287, 0], [1, "t", 5, 5, 288, 0], [1, "t", 2, 5, 289, 0], [1, "b", 1, 5, 290, 0], [1, "t", 4, 5, 292, 0], [1, "t", 2, 5, 291, 0], [1, "b", 2, 5, 293, 0], [1, "t", 1, 5, 294, 0], [1, "t", 3, 5, 295, 0], [1, "t", 5, 5, 296, 0], [1, "b", 0, 5, 297, 0], [1, "b", 3, 5, 298, 0], [1, "t", 4, 5, 299, 0], [1, "t", 2, 5, 300, 0], [1, "t", 4, 5, 301, 0], [1, "b", 0, 5, 302, 0], [1, "b", 2, 5, 303, 0], [1, "t", 1, 6, 303, 0], [1, "t", 2, 7, 303, 0], [1, "t", 1, 5, 304, 0], [1, "t", 3, 6, 304, 0], [1, "t", 4, 7, 304, 0], [1, "t", 5, 8, 303, 0], [1, "b", 1, 8, 304, 0], [1, "b", 2, 9, 304, 0], [1, "b", 3, 12, 303, 0], [1, "b", 3, 17, 304, 0], [1, "t", 1, 9, 303, 0], [1, "t", 1, 15, 304, 0], [1, "t", 1, 13, 303, 0], [1, "t", 3, 10, 303, 0], [1, "t", 3, 14, 304, 0], [1, "t", 4, 10, 304, 0], [1, "t", 5, 11, 304, 0], [1, "t", 5, 14, 303, 0], [1, "t", 5, 16, 304, 0], [1, "t", 5, 13, 304, 0], [1, "t", 2, 12, 304, 0], [1, "t", 1, 11, 303, 0], [1, "b", 3, 15, 303, 0], [1, "b", 0, 16, 303, 0], [1, "t", 3, 17, 303, 0], [1, "t", 4, 18, 303, 0], [1, "t", 2, 19, 303, 0], [1, "t", 1, 20, 303, 0], [1, "b", 1, 21, 303, 0], [1, "t", 2, 22, 303, 0], [1, "t", 4, 23, 303, 0], [1, "b", 3, 24, 303, 0], [1, "t", 5, 25, 303, 0], [1, "t", 1, 26, 303, 0], [1, "t", 2, 27, 303, 0], [1, "t", 4, 28, 303, 0], [1, "b", 0, 18, 304, 0], [1, "t", 2, 19, 304, 0], [1, "t", 5, 20, 304, 0], [1, "b", 2, 21, 304, 0], [1, "t", 4, 22, 304, 0], [1, "t", 2, 23, 304, 0], [1, "t", 1, 24, 304, 0], [1, "t", 3, 25, 304, 0], [1, "t", 0, 27, 304, 0], [1, "t", 5, 26, 304, 0], [1, "b", 2, 28, 304, 0], [1, "t", 1, 29, 304, 0], [1, "b", 1, 29, 303, 0], [1, "b", 2, 30, 303, 0], [1, "t", 4, 31, 303, 0], [1, "t", 0, 32, 303, 0], [1, "t", 5, 33, 303, 0], [1, "t", 2, 34, 303, 0], [1, "t", 4, 35, 303, 0], [1, "t", 1, 36, 303, 0], [1, "b", 3, 37, 303, 0], [1, "t", 2, 32, 304, 0], [1, "t", 4, 30, 304, 0], [1, "t", 1, 31, 304, 0], [1, "b", 1, 33, 304, 0], [1, "t", 2, 35, 304, 0], [1, "t", 5, 34, 304, 0], [1, "b", 2, 36, 304, 0], [1, "t", 5, 37, 304, 0], [1, "t", 1, 38, 304, 0], [1, "b", 1, 40, 303, 0], [1, "t", 3, 39, 303, 0], [1, "t", 3, 42, 304, 0], [1, "t", 5, 38, 303, 0], [1, "t", 5, 39, 304, 0], [1, "t", 5, 41, 303, 0], [1, "t", 4, 41, 304, 0], [1, "t", 4, 44, 303, 0], [1, "b", 2, 40, 304, 0], [1, "b", 2, 43, 303, 0], [1, "t", 1, 42, 303, 0], [1, "t", 1, 43, 304, 0], [1, "t", 5, 44, 304, 0], [1, "b", 1, 45, 303, 0], [1, "t", 2, 45, 304, 0], [1, "t", 2, 46, 303, 0], [1, "t", 4, 47, 303, 0], [1, "b", 0, 48, 303, 0], [1, "t", 5, 49, 303, 0], [1, "t", 2, 50, 303, 0], [1, "t", 1, 51, 303, 0], [1, "t", 4, 52, 303, 0], [1, "t", 5, 46, 304, 0], [1, "t", 2, 47, 304, 0], [1, "t", 5, 48, 304, 0], [1, "t", 1, 49, 304, 0], [1, "t", 2, 50, 304, 0], [1, "b", 1, 53, 303, 0], [1, "b", 2, 51, 304, 0], [1, "t", 5, 52, 304, 0], [1, "t", 3, 53, 304, 0], [1, "b", 2, 54, 303, 0], [1, "t", 5, 54, 304, 0], [1, "t", 5, 55, 303, 0], [1, "t", 3, 56, 303, 0], [1, "t", 4, 57, 303, 0], [1, "t", 5, 58, 303, 0], [1, "b", 1, 55, 304, 0], [1, "t", 2, 56, 304, 0], [1, "t", 0, 57, 304, 0], [1, "t", 3, 58, 304, 0], [1, "t", 3, 63, 304, 0], [1, "t", 3, 59, 303, 0], [1, "t", 4, 59, 304, 0], [1, "t", 5, 60, 303, 0], [1, "t", 0, 60, 304, 0], [1, "t", 0, 66, 303, 0], [1, "t", 0, 70, 304, 0], [1, "t", 3, 61, 304, 0], [1, "t", 3, 67, 303, 0], [1, "t", 3, 73, 304, 0], [1, "t", 3, 76, 303, 0], [1, "t", 3, 78, 304, 0], [1, "t", 1, 61, 303, 0], [1, "t", 1, 73, 303, 0], [1, "t", 1, 79, 303, 0], [1, "b", 2, 62, 304, 0], [1, "b", 2, 70, 303, 0], [1, "t", 5, 62, 303, 0], [1, "t", 5, 68, 303, 0], [1, "t", 5, 71, 304, 0], [1, "t", 5, 77, 304, 0], [1, "t", 5, 75, 303, 0], [1, "t", 5, 64, 304, 0], [1, "t", 5, 65, 303, 0], [1, "t", 5, 80, 303, 0], [1, "t", 1, 76, 304, 0], [1, "t", 3, 63, 303, 0], [1, "t", 5, 82, 304, 0], [1, "b", 2, 65, 304, 0], [1, "t", 1, 64, 303, 0], [1, "t", 1, 68, 304, 0], [1, "t", 2, 69, 304, 0], [1, "t", 4, 69, 303, 0], [1, "t", 5, 66, 304, 0], [1, "t", 0, 67, 304, 0], [1, "b", 2, 72, 304, 0], [1, "t", 0, 71, 303, 0], [1, "t", 4, 72, 303, 0], [1, "t", 4, 74, 304, 0], [1, "t", 2, 74, 303, 0], [1, "t", 3, 75, 304, 0], [1, "t", 1, 77, 303, 0], [1, "t", 4, 78, 303, 0], [1, "t", 4, 79, 304, 0], [1, "t", 2, 80, 304, 0], [1, "b", 1, 81, 304, 0], [1, "t", 2, 81, 303, 0], [1, "t", 5, 82, 303, 0], [1, "t", 1, 83, 303, 0], [1, "b", 2, 83, 304, 0], [1, "t", 1, 84, 304, 0], [1, "t", 4, 84, 303, 0], [1, "t", 5, 85, 304, 0], [1, "t", 3, 85, 303, 0], [1, "b", 2, 86, 304, 0], [1, "t", 1, 86, 303, 0], [1, "b", 3, 87, 303, 0], [1, "t", 4, 87, 304, 0], [1, "t", 4, 88, 303, 0], [1, "t", 0, 88, 304, 0], [1, "b", 1, 89, 303, 0], [1, "t", 3, 89, 304, 0], [1, "t", 3, 90, 303, 0], [1, "t", 4, 90, 304, 0], [1, "t", 4, 91, 303, 0], [1, "t", 0, 91, 304, 0], [1, "b", 2, 92, 303, 0], [1, "t", 4, 92, 304, 0], [1, "t", 5, 93, 303, 0], [1, "t", 0, 93, 304, 0], [1, "b", 3, 94, 303, 0], [1, "b", 0, 94, 304, 0], [1, "b", 0, 95, 303, 0], [1, "t", 2, 95, 304, 0], [1, "f", 1, 5, 151, 1], [1, "f", 2, 5, 153, 1], [1, "f", 0, 5, 152, 1], [1, "f", 0, 5, 147, 1], [1, "f", 0, 5, 144, 1], [1, "f", 0, 5, 140, 1], [1, "f", 1, 5, 149, 1], [1, "f", 1, 5, 146, 1], [1, "f", 1, 5, 143, 1], [1, "f", 1, 5, 141, 1], [1, "f", 2, 5, 150, 1], [1, "f", 2, 5, 148, 1], [1, "f", 2, 5, 145, 1], [1, "f", 2, 5, 142, 1], [1, "f", 2, 5, 139, 1], [1, "f", 2, 5, 136, 1], [1, "f", 2, 5, 133, 1], [1, "f", 2, 5, 131, 1], [1, "f", 2, 5, 127, 1], [1, "f", 2, 5, 125, 1], [1, "f", 1, 5, 138, 1], [1, "f", 1, 5, 135, 1], [1, "f", 1, 5, 132, 1], [1, "f", 1, 5, 130, 1], [1, "f", 1, 5, 128, 1], [1, "f", 1, 5, 126, 1], [1, "f", 1, 5, 124, 1], [1, "f", 0, 5, 129, 1], [1, "f", 0, 5, 134, 1], [1, "f", 0, 5, 137, 1], [1, "f", 0, 5, 123, 1], [1, "f", 1, 5, 122, 1], [1, "f", 1, 5, 120, 1], [1, "f", 1, 5, 117, 1], [1, "f", 1, 5, 115, 1], [1, "f", 1, 5, 111, 1], [1, "f", 1, 5, 108, 1], [1, "f", 2, 5, 121, 1], [1, "f", 2, 5, 118, 1], [1, "f", 2, 5, 116, 1], [1, "f", 2, 5, 113, 1], [1, "f", 2, 5, 110, 1], [1, "f", 0, 5, 119, 1], [1, "f", 0, 5, 114, 1], [1, "f", 0, 5, 112, 1], [1, "f", 0, 5, 109, 1], [1, "f", 1, 5, 106, 1], [1, "f", 1, 5, 103, 1], [1, "f", 1, 5, 100, 1], [1, "f", 1, 5, 97, 1], [1, "f", 1, 5, 95, 1], [1, "f", 2, 5, 107, 1], [1, "f", 2, 5, 105, 1], [1, "f", 2, 5, 102, 1], [1, "f", 2, 5, 99, 1], [1, "f", 2, 5, 96, 1], [1, "f", 2, 5, 94, 1], [1, "f", 0, 5, 104, 1], [1, "f", 0, 5, 101, 1], [1, "f", 0, 5, 98, 1], [1, "f", 0, 5, 93, 1], [1, "f", 1, 5, 92, 1], [1, "f", 1, 5, 89, 1], [1, "f", 1, 5, 86, 1], [1, "f", 1, 5, 83, 1], [1, "f", 1, 5, 80, 1], [1, "f", 1, 5, 78, 1], [1, "f", 2, 5, 90, 1], [1, "f", 2, 5, 88, 1], [1, "f", 2, 5, 85, 1], [1, "f", 2, 5, 82, 1], [1, "f", 2, 5, 79, 1], [1, "f", 2, 5, 77, 1], [1, "f", 2, 5, 75, 1], [1, "f", 2, 5, 72, 1], [1, "f", 0, 5, 91, 1], [1, "f", 0, 5, 87, 1], [1, "f", 0, 5, 84, 1], [1, "f", 0, 5, 81, 1], [1, "f", 0, 5, 76, 1], [1, "f", 0, 5, 74, 1], [1, "f", 1, 5, 73, 1], [1, "f", 1, 5, 71, 1], [1, "f", 1, 5, 68, 1], [1, "f", 1, 5, 66, 1], [1, "f", 1, 5, 62, 1], [1, "f", 1, 5, 59, 1], [1, "f", 1, 5, 56, 1], [1, "f", 1, 5, 53, 1], [1, "f", 1, 5, 50, 1], [1, "f", 2, 5, 70, 1], [1, "f", 2, 5, 67, 1], [1, "f", 2, 5, 65, 1], [1, "f", 2, 5, 63, 1], [1, "f", 2, 5, 60, 1], [1, "f", 2, 5, 57, 1], [1, "f", 2, 5, 54, 1], [1, "f", 2, 5, 51, 1], [1, "f", 0, 5, 69, 1], [1, "f", 0, 5, 64, 1], [1, "f", 0, 5, 61, 1], [1, "f", 0, 5, 58, 1], [1, "f", 0, 5, 55, 1], [1, "f", 0, 5, 52, 1], [1, "f", 0, 5, 49, 1], [1, "f", 0, 5, 45, 1], [1, "f", 0, 5, 42, 1], [1, "f", 0, 5, 38, 1], [1, "f", 0, 5, 34, 1], [1, "f", 0, 5, 31, 1], [1, "f", 1, 5, 48, 1], [1, "f", 1, 5, 44, 1], [1, "f", 1, 5, 41, 1], [1, "f", 1, 5, 37, 1], [1, "f", 1, 5, 33, 1], [1, "f", 1, 5, 29, 1], [1, "f", 2, 5, 30, 1], [1, "f", 2, 5, 32, 1], [1, "f", 2, 5, 35, 1], [1, "f", 2, 5, 39, 1], [1, "f", 2, 5, 46, 1], [1, "f", 2, 5, 43, 1], [1, "f", 1, 5, 47, 1], [1, "f", 0, 5, 40, 1], [1, "f", 0, 5, 36, 1], [1, "f", 0, 5, 28, 1], [1, "f", 1, 5, 25, 1], [1, "f", 1, 5, 22, 1], [1, "f", 1, 5, 20, 1], [1, "f", 1, 5, 16, 1], [1, "f", 1, 5, 13, 1], [1, "f", 1, 5, 10, 1], [1, "f", 2, 5, 27, 1], [1, "f", 2, 5, 24, 1], [1, "f", 2, 5, 21, 1], [1, "f", 2, 5, 19, 1], [1, "f", 2, 5, 15, 1], [1, "f", 2, 5, 12, 1], [1, "f", 2, 5, 9, 1], [1, "f", 0, 5, 26, 1], [1, "f", 0, 5, 23, 1], [1, "f", 0, 5, 14, 1], [1, "f", 0, 5, 11, 1], [1, "f", 0, 5, 17, 1], [1, "f", 1, 5, 18, 1], [1, "f", 1, 5, 8, 1], [1, "f", 0, 5, 7, 1], [1, "f", 1, 5, 6, 1], [1, "f", 0, 5, 5, 1], [1, "f", 1, 6, 5, 1], [1, "f", 2, 7, 5, 1], [1, "f", 0, 8, 5, 1], [1, "f", 1, 9, 5, 1], [1, "f", 1, 12, 5, 1], [1, "f", 1, 15, 5, 1], [1, "f", 1, 17, 5, 1], [1, "f", 1, 22, 5, 1], [1, "f", 1, 26, 5, 1], [1, "f", 2, 10, 5, 1], [1, "f", 2, 13, 5, 1], [1, "f", 2, 16, 5, 1], [1, "f", 2, 18, 5, 1], [1, "f", 2, 21, 5, 1], [1, "f", 2, 23, 5, 1], [1, "f", 2, 25, 5, 1], [1, "f", 2, 27, 5, 1], [1, "f", 0, 11, 5, 1], [1, "f", 0, 14, 5, 1], [1, "f", 0, 19, 5, 1], [1, "f", 0, 24, 5, 1], [1, "f", 0, 28, 5, 1], [1, "f", 1, 20, 5, 1], [1, "f", 1, 29, 5, 1], [1, "f", 1, 32, 5, 1], [1, "f", 1, 35, 5, 1], [1, "f", 1, 38, 5, 1], [1, "f", 1, 41, 5, 1], [1, "f", 1, 45, 5, 1], [1, "f", 2, 30, 5, 1], [1, "f", 2, 33, 5, 1], [1, "f", 2, 36, 5, 1], [1, "f", 2, 39, 5, 1], [1, "f", 2, 42, 5, 1], [1, "f", 2, 44, 5, 1], [1, "f", 2, 46, 5, 1], [1, "f", 0, 43, 5, 1], [1, "f", 0, 40, 5, 1], [1, "f", 0, 37, 5, 1], [1, "f", 0, 34, 5, 1], [1, "f", 0, 31, 5, 1], [1, "f", 0, 47, 5, 1], [1, "f", 1, 48, 5, 1], [1, "f", 1, 51, 5, 1], [1, "f", 1, 53, 5, 1], [1, "f", 1, 57, 5, 1], [1, "f", 1, 60, 5, 1], [1, "f", 1, 63, 5, 1], [1, "f", 1, 65, 5, 1], [1, "f", 2, 64, 5, 1], [1, "f", 2, 62, 5, 1], [1, "f", 2, 59, 5, 1], [1, "f", 2, 56, 5, 1], [1, "f", 2, 52, 5, 1], [1, "f", 2, 49, 5, 1], [1, "f", 2, 54, 5, 1], [1, "f", 0, 50, 5, 1], [1, "f", 0, 55, 5, 1], [1, "f", 0, 58, 5, 1], [1, "f", 0, 61, 5, 1], [1, "f", 0, 66, 5, 1], [1, "f", 1, 67, 5, 1], [1, "f", 1, 70, 5, 1], [1, "f", 1, 72, 5, 1], [1, "f", 1, 75, 5, 1], [1, "f", 1, 79, 5, 1], [1, "f", 2, 68, 5, 1], [1, "f", 2, 71, 5, 1], [1, "f", 2, 74, 5, 1], [1, "f", 2, 76, 5, 1], [1, "f", 2, 78, 5, 1], [1, "f", 0, 69, 5, 1], [1, "f", 0, 73, 5, 1], [1, "f", 0, 77, 5, 1], [1, "f", 0, 80, 5, 1], [1, "f", 1, 81, 5, 1], [1, "f", 1, 84, 5, 1], [1, "f", 1, 87, 5, 1], [1, "f", 1, 89, 5, 1], [1, "f", 1, 92, 5, 1], [1, "f", 1, 94, 5, 1], [1, "f", 0, 82, 5, 1], [1, "f", 2, 83, 5, 1], [1, "f", 2, 85, 5, 1], [1, "f", 2, 88, 5, 1], [1, "f", 2, 90, 5, 1], [1, "f", 2, 93, 5, 1], [1, "f", 2, 95, 5, 1], [1, "f", 0, 86, 5, 1], [1, "f", 0, 91, 5, 1], [1, "f", 2, 6, 153, 1], [1, "f", 1, 6, 152, 1], [1, "t", 1, 93, 301, 0], [1, "t", 3, 94, 302, 0], [1, "t", 5, 95, 302, 0], [1, "t", 5, 93, 302, 0], [1, "b", 3, 92, 302, 0], [1, "t", 1, 91, 302, 0], [1, "t", 5, 90, 302, 0], [1, "b", 2, 92, 301, 0], [1, "t", 1, 91, 301, 0], [1, "t", 2, 90, 301, 0], [1, "b", 2, 89, 302, 0], [1, "t", 4, 89, 301, 0], [1, "t", 1, 88, 302, 0], [1, "t", 2, 88, 301, 0], [1, "t", 3, 87, 302, 0], [1, "t", 4, 87, 299, 0], [1, "t", 4, 86, 302, 0], [1, "t", 1, 85, 302, 0], [1, "t", 5, 85, 301, 0], [1, "b", 2, 84, 302, 0], [1, "t", 5, 83, 302, 0], [1, "t", 1, 82, 302, 0], [1, "t", 5, 81, 302, 0], [1, "t", 2, 80, 302, 0], [1, "t", 4, 79, 302, 0], [1, "t", 2, 78, 302, 0], [1, "b", 1, 77, 302, 0], [1, "b", 2, 76, 302, 0], [1, "t", 2, 75, 302, 0], [1, "t", 4, 74, 302, 0], [1, "b", 1, 73, 302, 0], [1, "t", 2, 72, 302, 0], [1, "t", 4, 71, 302, 0], [1, "b", 3, 70, 302, 0], [1, "t", 1, 69, 302, 0], [1, "t", 2, 68, 302, 0], [1, "t", 5, 67, 302, 0], [1, "b", 1, 66, 302, 0], [1, "t", 2, 65, 302, 0], [1, "t", 4, 64, 302, 0], [1, "b", 3, 63, 302, 0], [1, "t", 5, 62, 302, 0], [1, "b", 1, 61, 302, 0], [1, "t", 3, 60, 302, 0], [1, "t", 4, 59, 302, 0], [1, "b", 2, 58, 302, 0], [1, "t", 5, 57, 302, 0], [1, "t", 1, 56, 302, 0], [1, "t", 3, 55, 302, 0], [1, "t", 4, 54, 302, 0], [1, "t", 1, 53, 302, 0], [1, "t", 5, 52, 302, 0], [1, "t", 2, 51, 302, 0], [1, "t", 4, 50, 302, 0], [1, "t", 2, 49, 302, 0], [1, "b", 1, 48, 302, 0], [1, "t", 3, 47, 302, 0], [1, "t", 4, 46, 302, 0], [1, "t", 1, 45, 302, 0], [1, "t", 2, 44, 302, 0], [1, "t", 5, 43, 302, 0], [1, "t", 2, 42, 302, 0], [1, "t", 1, 41, 302, 0], [1, "t", 4, 40, 302, 0], [1, "b", 2, 39, 302, 0], [1, "t", 5, 38, 302, 0], [1, "t", 1, 37, 302, 0], [1, "t", 2, 36, 302, 0], [1, "t", 5, 35, 302, 0], [1, "t", 0, 34, 302, 0], [1, "t", 3, 33, 302, 0], [1, "t", 4, 32, 302, 0], [1, "b", 1, 31, 302, 0], [1, "t", 2, 30, 302, 0], [1, "t", 4, 29, 302, 0], [1, "t", 2, 28, 302, 0], [1, "t", 5, 27, 302, 0], [1, "b", 3, 26, 302, 0], [1, "t", 1, 25, 302, 0], [1, "t", 4, 24, 302, 0], [1, "t", 2, 23, 302, 0], [1, "t", 1, 22, 302, 0], [1, "t", 5, 21, 302, 0], [1, "t", 2, 20, 302, 0], [1, "t", 4, 19, 302, 0], [1, "b", 1, 18, 302, 0], [1, "t", 5, 17, 302, 0], [1, "t", 3, 16, 302, 0], [1, "t", 1, 15, 302, 0], [1, "t", 5, 14, 302, 0], [1, "t", 3, 13, 302, 0], [1, "t", 4, 12, 302, 0], [1, "t", 1, 11, 302, 0], [1, "t", 2, 10, 302, 0], [1, "t", 4, 9, 302, 0], [1, "b", 3, 8, 302, 0], [1, "t", 5, 8, 302, 0], [1, "t", 5, 7, 302, 0], [1, "b", 2, 6, 302, 0], [1, "t", 1, 6, 301, 0], [1, "t", 4, 6, 300, 0], [1, "t", 2, 6, 299, 0], [1, "b", 0, 6, 298, 0], [1, "t", 5, 6, 297, 0], [1, "t", 2, 6, 296, 0], [1, "t", 0, 6, 295, 0], [1, "b", 2, 6, 294, 0], [1, "t", 5, 6, 293, 0], [1, "t", 1, 6, 292, 0], [1, "b", 0, 6, 291, 0], [1, "t", 2, 6, 290, 0], [1, "t", 5, 6, 289, 0], [1, "t", 1, 6, 288, 0], [1, "t", 4, 6, 287, 0], [1, "t", 2, 6, 286, 0], [1, "t", 5, 6, 285, 0], [1, "t", 2, 6, 284, 0], [1, "b", 0, 6, 283, 0], [1, "t", 2, 6, 282, 0], [1, "t", 5, 6, 281, 0], [1, "b", 2, 6, 280, 0], [1, "t", 5, 6, 279, 0], [1, "t", 1, 6, 278, 0], [1, "t", 4, 6, 277, 0], [1, "t", 3, 6, 276, 0], [1, "t", 5, 6, 275, 0], [1, "b", 0, 6, 274, 0], [1, "t", 5, 6, 273, 0], [1, "t", 1, 6, 272, 0], [1, "t", 4, 6, 271, 0], [1, "b", 3, 6, 270, 0], [1, "t", 5, 6, 269, 0], [1, "t", 1, 6, 268, 0], [1, "t", 4, 6, 267, 0], [1, "t", 1, 6, 266, 0], [1, "t", 3, 6, 265, 0], [1, "t", 4, 6, 264, 0], [1, "b", 2, 6, 263, 0], [1, "t", 5, 6, 262, 0], [1, "t", 3, 6, 261, 0], [1, "t", 0, 6, 260, 0], [1, "t", 5, 6, 259, 0], [1, "t", 1, 6, 258, 0], [1, "t", 3, 6, 257, 0], [1, "t", 4, 6, 255, 0], [1, "t", 3, 6, 254, 0], [1, "t", 5, 6, 253, 0], [1, "b", 2, 6, 252, 0], [1, "t", 5, 6, 251, 0], [1, "t", 1, 6, 250, 0], [1, "t", 3, 6, 249, 0], [1, "t", 4, 6, 248, 0], [1, "b", 3, 6, 247, 0], [1, "t", 5, 6, 246, 0], [1, "t", 3, 6, 245, 0], [1, "t", 5, 6, 244, 0], [1, "t", 0, 6, 243, 0], [1, "t", 4, 6, 242, 0], [1, "t", 3, 6, 241, 0], [1, "t", 5, 6, 240, 0], [1, "b", 0, 6, 239, 0], [1, "t", 3, 6, 238, 0], [1, "t", 4, 6, 237, 0], [1, "t", 1, 6, 236, 0], [1, "t", 5, 6, 235, 0], [1, "b", 2, 6, 234, 0], [1, "t", 2, 6, 233, 0], [1, "t", 4, 6, 232, 0], [1, "b", 3, 6, 231, 0], [1, "t", 5, 6, 230, 0], [1, "t", 1, 6, 229, 0], [1, "t", 2, 6, 228, 0], [1, "t", 5, 6, 227, 0], [1, "b", 2, 6, 226, 0], [1, "t", 4, 6, 225, 0], [1, "t", 0, 6, 224, 0], [1, "t", 2, 6, 223, 0], [1, "t", 0, 6, 222, 0], [1, "b", 2, 6, 221, 0], [1, "t", 4, 6, 220, 0], [1, "b", 3, 6, 219, 0], [1, "t", 5, 6, 218, 0], [1, "t", 0, 6, 217, 0], [1, "t", 3, 6, 216, 0], [1, "b", 0, 6, 215, 0], [1, "t", 4, 6, 214, 0], [1, "t", 2, 6, 213, 0], [1, "t", 0, 6, 212, 0], [1, "t", 2, 6, 211, 0], [1, "b", 3, 6, 210, 0], [1, "t", 0, 6, 209, 0], [1, "t", 5, 6, 207, 0], [1, "t", 2, 6, 208, 0], [1, "t", 0, 6, 206, 0], [1, "t", 2, 6, 205, 0], [1, "t", 2, 6, 203, 0], [1, "b", 0, 6, 202, 0], [1, "t", 3, 6, 201, 0], [1, "t", 4, 6, 199, 0], [1, "t", 0, 6, 198, 0], [1, "t", 2, 6, 197, 0], [1, "t", 4, 6, 196, 0], [1, "t", 1, 6, 195, 0], [1, "t", 3, 6, 194, 0], [1, "t", 4, 6, 192, 0], [1, "t", 2, 6, 191, 0], [1, "b", 0, 6, 190, 0], [1, "t", 3, 6, 189, 0], [1, "t", 4, 6, 187, 0], [1, "b", 0, 6, 186, 0], [1, "t", 2, 6, 185, 0], [1, "t", 4, 6, 184, 0], [1, "t", 2, 6, 183, 0], [1, "t", 0, 6, 182, 0], [1, "b", 2, 6, 181, 0], [1, "t", 5, 6, 180, 0], [1, "t", 2, 6, 179, 0], [1, "t", 0, 6, 178, 0], [1, "t", 2, 6, 177, 0], [1, "t", 4, 6, 176, 0], [1, "b", 2, 6, 175, 0], [1, "t", 1, 6, 174, 0], [1, "t", 5, 6, 173, 0], [1, "t", 2, 6, 256, 0], [1, "t", 4, 6, 204, 0], [1, "t", 4, 6, 200, 0], [1, "t", 2, 6, 193, 0], [1, "t", 2, 6, 188, 0], [1, "f", 1, 6, 150, 1], [1, "f", 2, 6, 151, 1], [1, "f", 2, 6, 149, 1], [1, "f", 1, 6, 148, 1], [1, "f", 2, 6, 147, 1], [1, "f", 2, 6, 145, 1], [1, "f", 2, 6, 143, 1], [1, "f", 1, 6, 146, 1], [1, "f", 1, 6, 144, 1], [1, "f", 1, 6, 142, 1], [1, "f", 2, 6, 141, 1], [1, "f", 2, 6, 139, 1], [1, "f", 2, 6, 137, 1], [1, "f", 2, 6, 135, 1], [1, "f", 2, 6, 133, 1], [1, "f", 1, 6, 140, 1], [1, "f", 1, 6, 138, 1], [1, "f", 1, 6, 136, 1], [1, "f", 1, 6, 134, 1], [1, "f", 1, 6, 132, 1], [1, "f", 2, 6, 131, 1], [1, "f", 2, 6, 129, 1], [1, "f", 2, 6, 127, 1], [1, "f", 2, 6, 125, 1], [1, "f", 2, 6, 123, 1], [1, "f", 2, 6, 121, 1], [1, "f", 1, 6, 130, 1], [1, "f", 1, 6, 128, 1], [1, "f", 1, 6, 126, 1], [1, "f", 1, 6, 124, 1], [1, "f", 1, 6, 122, 1], [1, "f", 1, 6, 120, 1], [1, "f", 2, 6, 119, 1], [1, "f", 2, 6, 117, 1], [1, "f", 2, 6, 115, 1], [1, "f", 2, 6, 113, 1], [1, "f", 2, 6, 111, 1], [1, "f", 2, 6, 109, 1], [1, "f", 1, 6, 118, 1], [1, "f", 1, 6, 116, 1], [1, "f", 1, 6, 114, 1], [1, "f", 1, 6, 112, 1], [1, "f", 1, 6, 110, 1], [1, "f", 1, 6, 108, 1], [1, "f", 1, 6, 106, 1], [1, "f", 1, 6, 104, 1], [1, "f", 2, 6, 107, 1], [1, "f", 2, 6, 105, 1], [1, "f", 2, 6, 103, 1], [1, "f", 2, 6, 101, 1], [1, "f", 2, 6, 99, 1], [1, "f", 2, 6, 97, 1], [1, "f", 2, 6, 95, 1], [1, "f", 2, 6, 93, 1], [1, "f", 2, 6, 91, 1], [1, "f", 1, 6, 102, 1], [1, "f", 1, 6, 100, 1], [1, "f", 1, 6, 98, 1], [1, "f", 1, 6, 96, 1], [1, "f", 1, 6, 94, 1], [1, "f", 1, 6, 92, 1], [1, "f", 1, 6, 90, 1], [1, "f", 1, 6, 88, 1], [1, "f", 1, 6, 86, 1], [1, "f", 2, 6, 89, 1], [1, "f", 2, 6, 87, 1], [1, "f", 2, 6, 85, 1], [1, "f", 2, 6, 83, 1], [1, "f", 2, 6, 81, 1], [1, "f", 2, 6, 79, 1], [1, "f", 2, 6, 77, 1], [1, "f", 1, 6, 84, 1], [1, "f", 1, 6, 82, 1], [1, "f", 1, 6, 80, 1], [1, "f", 1, 6, 78, 1], [1, "f", 1, 6, 76, 1], [1, "f", 2, 6, 75, 1], [1, "f", 2, 6, 73, 1], [1, "f", 2, 6, 71, 1], [1, "f", 2, 6, 69, 1], [1, "f", 2, 6, 67, 1], [1, "f", 2, 6, 65, 1], [1, "f", 1, 6, 74, 1], [1, "f", 1, 6, 72, 1], [1, "f", 1, 6, 70, 1], [1, "f", 1, 6, 68, 1], [1, "f", 1, 6, 66, 1], [1, "f", 1, 6, 64, 1], [1, "f", 2, 6, 63, 1], [1, "f", 2, 6, 61, 1], [1, "f", 2, 6, 59, 1], [1, "f", 2, 6, 57, 1], [1, "f", 2, 6, 55, 1], [1, "f", 2, 6, 53, 1], [1, "f", 2, 6, 51, 1], [1, "f", 1, 6, 62, 1], [1, "f", 1, 6, 60, 1], [1, "f", 1, 6, 58, 1], [1, "f", 1, 6, 56, 1], [1, "f", 1, 6, 54, 1], [1, "f", 1, 6, 52, 1], [1, "f", 1, 6, 50, 1], [1, "f", 2, 6, 49, 1], [1, "f", 2, 6, 47, 1], [1, "f", 2, 6, 45, 1], [1, "f", 2, 6, 43, 1], [1, "f", 2, 6, 41, 1], [1, "f", 2, 6, 39, 1], [1, "f", 1, 6, 48, 1], [1, "f", 1, 6, 46, 1], [1, "f", 1, 6, 44, 1], [1, "f", 1, 6, 42, 1], [1, "f", 1, 6, 40, 1], [1, "f", 1, 6, 38, 1], [1, "f", 2, 6, 37, 1], [1, "f", 2, 6, 35, 1], [1, "f", 2, 6, 33, 1], [1, "f", 2, 6, 31, 1], [1, "f", 2, 6, 29, 1], [1, "f", 2, 6, 27, 1], [1, "f", 1, 6, 36, 1], [1, "f", 1, 6, 34, 1], [1, "f", 1, 6, 32, 1], [1, "f", 1, 6, 30, 1], [1, "f", 1, 6, 28, 1], [1, "f", 1, 6, 26, 1], [1, "f", 2, 6, 25, 1], [1, "f", 2, 6, 23, 1], [1, "f", 2, 6, 21, 1], [1, "f", 2, 6, 19, 1], [1, "f", 2, 6, 17, 1], [1, "f", 2, 6, 15, 1], [1, "f", 1, 6, 24, 1], [1, "f", 1, 6, 22, 1], [1, "f", 1, 6, 20, 1], [1, "f", 1, 6, 18, 1], [1, "f", 1, 6, 16, 1], [1, "f", 2, 6, 13, 1], [1, "f", 2, 6, 11, 1], [1, "f", 2, 6, 9, 1], [1, "f", 2, 6, 7, 1], [1, "f", 1, 6, 14, 1], [1, "f", 1, 6, 12, 1], [1, "f", 1, 6, 10, 1], [1, "f", 1, 6, 8, 1], [1, "f", 1, 6, 6, 1], [1, "f", 1, 8, 6, 1], [1, "f", 2, 7, 6, 1], [1, "f", 2, 9, 6, 1], [1, "f", 2, 11, 6, 1], [1, "f", 2, 13, 6, 1], [1, "f", 2, 15, 6, 1], [1, "f", 1, 10, 6, 1], [1, "f", 1, 12, 6, 1], [1, "f", 1, 14, 6, 1], [1, "f", 1, 16, 6, 1], [1, "f", 1, 18, 6, 1], [1, "f", 1, 20, 6, 1], [1, "f", 1, 22, 6, 1], [1, "f", 1, 24, 6, 1], [1, "f", 1, 26, 6, 1], [1, "f", 2, 17, 6, 1], [1, "f", 2, 19, 6, 1], [1, "f", 2, 21, 6, 1], [1, "f", 2, 23, 6, 1], [1, "f", 2, 25, 6, 1], [1, "f", 2, 27, 6, 1], [1, "f", 2, 29, 6, 1], [1, "f", 2, 31, 6, 1], [1, "f", 2, 33, 6, 1], [1, "f", 1, 28, 6, 1], [1, "f", 1, 30, 6, 1], [1, "f", 1, 32, 6, 1], [1, "f", 1, 34, 6, 1], [1, "f", 2, 67, 6, 1], [1, "f", 2, 69, 6, 1], [1, "f", 2, 71, 6, 1], [1, "f", 2, 73, 6, 1], [1, "f", 2, 75, 6, 1], [1, "f", 1, 68, 6, 1], [1, "f", 1, 70, 6, 1], [1, "f", 1, 72, 6, 1], [1, "f", 1, 74, 6, 1], [1, "f", 1, 76, 6, 1], [1, "f", 2, 77, 6, 1], [1, "f", 2, 79, 6, 1], [1, "f", 2, 81, 6, 1], [1, "f", 2, 83, 6, 1], [1, "f", 2, 85, 6, 1], [1, "f", 1, 78, 6, 1], [1, "f", 1, 80, 6, 1], [1, "f", 1, 82, 6, 1], [1, "f", 1, 84, 6, 1], [1, "f", 1, 86, 6, 1], [1, "f", 2, 87, 6, 1], [1, "f", 2, 89, 6, 1], [1, "f", 2, 91, 6, 1], [1, "f", 2, 93, 6, 1], [1, "f", 1, 88, 6, 1], [1, "f", 1, 90, 6, 1], [1, "f", 1, 92, 6, 1], [1, "f", 1, 94, 6, 1], [1, "f", 2, 95, 6, 1], [1, "f", 1, 95, 7, 1], [1, "f", 1, 83, 7, 1], [1, "f", 1, 81, 7, 1], [1, "f", 1, 79, 7, 1], [1, "f", 1, 77, 7, 1], [1, "f", 1, 75, 7, 1], [1, "f", 1, 73, 7, 1], [1, "f", 1, 71, 7, 1], [1, "f", 1, 69, 7, 1], [1, "f", 1, 33, 7, 1], [1, "f", 1, 31, 7, 1], [1, "f", 1, 29, 7, 1], [1, "f", 1, 27, 7, 1], [1, "f", 1, 25, 7, 1], [1, "f", 1, 23, 7, 1], [1, "f", 1, 21, 7, 1], [1, "f", 1, 19, 7, 1], [1, "f", 1, 17, 7, 1], [1, "f", 1, 15, 7, 1], [1, "f", 1, 13, 7, 1], [1, "f", 1, 11, 7, 1], [1, "f", 1, 9, 7, 1], [1, "f", 1, 7, 7, 1], [1, "s", 0, 7, 8, 1], [1, "t", 4, 7, 174, 0], [1, "t", 5, 7, 175, 0], [1, "t", 4, 7, 176, 0], [1, "b", 2, 7, 177, 0], [1, "t", 3, 94, 301, 0], [1, "b", 3, 95, 301, 0], [1, "t", 4, 96, 301, 0], [1, "t", 1, 97, 301, 0], [1, "t", 2, 98, 301, 0], [1, "t", 4, 99, 301, 0], [1, "t", 2, 100, 301, 0], [1, "t", 4, 96, 304, 0], [1, "t", 2, 96, 302, 0], [1, "t", 2, 97, 304, 0], [1, "t", 2, 96, 303, 0], [1, "t", 5, 97, 303, 0], [1, "t", 5, 98, 304, 0], [1, "b", 2, 97, 302, 0], [1, "b", 2, 99, 304, 0], [1, "t", 1, 98, 303, 0], [1, "t", 4, 98, 302, 0], [1, "t", 4, 99, 303, 0], [1, "t", 4, 100, 304, 0], [1, "t", 5, 99, 302, 0], [1, "t", 5, 101, 303, 0], [1, "t", 2, 100, 303, 0], [1, "t", 0, 100, 302, 0], [1, "t", 0, 101, 304, 0], [1, "t", 4, 102, 304, 0], [1, "f", 0, 94, 7, 1], [1, "f", 1, 93, 7, 1], [1, "f", 1, 92, 7, 1], [1, "f", 0, 91, 7, 1], [1, "f", 1, 90, 7, 1], [1, "f", 1, 89, 7, 1], [1, "f", 0, 88, 7, 1], [1, "f", 1, 87, 7, 1], [1, "f", 1, 86, 7, 1], [1, "f", 1, 85, 7, 1], [1, "f", 0, 84, 7, 1], [1, "f", 1, 82, 7, 1], [1, "f", 0, 80, 7, 1], [1, "f", 1, 78, 7, 1], [1, "f", 0, 76, 7, 1], [1, "f", 1, 74, 7, 1], [1, "f", 0, 72, 7, 1], [1, "f", 0, 70, 7, 1], [1, "f", 1, 68, 7, 1], [1, "f", 1, 32, 7, 1], [1, "f", 0, 30, 7, 1], [1, "f", 1, 28, 7, 1], [1, "f", 0, 26, 7, 1], [1, "f", 1, 24, 7, 1], [1, "f", 0, 22, 7, 1], [1, "f", 1, 20, 7, 1], [1, "f", 0, 18, 7, 1], [1, "f", 1, 16, 7, 1], [1, "f", 0, 14, 7, 1], [1, "f", 1, 12, 7, 1], [1, "f", 0, 10, 7, 1], [1, "f", 1, 8, 7, 1], [1, "s", 1, 7, 9, 1], [1, "f", 0, 95, 152, 1], [1, "f", 1, 95, 151, 1], [1, "f", 0, 95, 11, 1], [1, "f", 1, 95, 12, 1], [1, "f", 1, 95, 14, 1], [1, "f", 1, 95, 19, 1], [1, "f", 0, 95, 15, 1], [1, "f", 0, 95, 20, 1], [1, "f", 1, 95, 21, 1], [1, "f", 1, 95, 26, 1], [1, "f", 1, 95, 37, 1], [1, "f", 0, 95, 44, 1], [1, "f", 1, 95, 50, 1], [1, "f", 1, 95, 52, 1], [1, "f", 0, 95, 53, 1], [1, "f", 1, 95, 54, 1], [1, "f", 1, 95, 62, 1], [1, "f", 0, 95, 55, 1], [1, "f", 1, 95, 64, 1], [1, "f", 0, 95, 58, 1], [1, "f", 0, 95, 61, 1], [1, "f", 0, 95, 68, 1], [1, "f", 0, 95, 72, 1], [1, "f", 0, 95, 78, 1], [1, "f", 1, 95, 115, 1], [1, "f", 1, 95, 117, 1], [1, "f", 1, 95, 128, 1], [1, "f", 0, 95, 85, 1], [1, "f", 0, 95, 91, 1], [1, "f", 0, 95, 95, 1], [1, "f", 0, 95, 114, 1], [1, "f", 2, 95, 113, 1], [1, "f", 1, 95, 119, 1], [1, "f", 0, 95, 120, 1], [1, "f", 1, 95, 121, 1], [1, "f", 0, 95, 127, 1], [1, "f", 1, 95, 130, 1], [1, "f", 0, 95, 131, 1], [1, "f", 1, 95, 132, 1], [1, "f", 1, 95, 136, 1], [1, "f", 0, 95, 137, 1], [1, "f", 0, 95, 143, 1], [1, "f", 0, 95, 147, 1], [1, "f", 1, 95, 138, 1], [1, "f", 1, 95, 144, 1], [1, "f", 1, 95, 10, 1], [1, "f", 0, 95, 8, 1], [1, "f", 1, 95, 9, 1], [1, "f", 0, 95, 13, 1], [1, "f", 1, 95, 16, 1], [1, "f", 1, 95, 17, 1], [1, "f", 0, 95, 18, 1], [1, "f", 1, 95, 45, 1], [1, "f", 0, 95, 51, 1], [1, "f", 1, 95, 56, 1], [1, "f", 1, 95, 57, 1], [1, "f", 1, 95, 59, 1], [1, "f", 1, 95, 60, 1], [1, "f", 1, 95, 63, 1], [1, "f", 0, 95, 65, 1], [1, "f", 1, 95, 66, 1], [1, "f", 1, 95, 67, 1], [1, "f", 1, 95, 69, 1], [1, "f", 1, 95, 70, 1], [1, "f", 0, 95, 71, 1], [1, "f", 1, 95, 73, 1], [1, "f", 1, 95, 74, 1], [1, "f", 0, 95, 75, 1], [1, "f", 1, 95, 76, 1], [1, "f", 1, 95, 77, 1], [1, "f", 1, 95, 79, 1], [1, "f", 1, 95, 80, 1], [1, "f", 0, 95, 81, 1], [1, "f", 1, 95, 82, 1], [1, "f", 0, 95, 83, 1], [1, "f", 1, 95, 84, 1], [1, "f", 1, 95, 86, 1], [1, "f", 1, 95, 88, 1], [1, "f", 0, 95, 87, 1], [1, "f", 1, 95, 89, 1], [1, "f", 1, 95, 90, 1], [1, "f", 1, 95, 92, 1], [1, "f", 1, 95, 93, 1], [1, "f", 1, 95, 94, 1], [1, "f", 1, 95, 96, 1], [1, "f", 1, 95, 97, 1], [1, "f", 0, 95, 98, 1], [1, "f", 1, 95, 99, 1], [1, "f", 1, 95, 100, 1], [1, "f", 0, 95, 101, 1], [1, "f", 1, 95, 102, 1], [1, "f", 0, 95, 103, 1], [1, "f", 1, 95, 104, 1], [1, "f", 1, 95, 105, 1], [1, "f", 0, 95, 106, 1], [1, "f", 1, 95, 107, 1], [1, "f", 1, 95, 108, 1], [1, "f", 1, 95, 109, 1], [1, "f", 0, 95, 110, 1], [1, "f", 1, 95, 111, 1], [1, "f", 0, 95, 112, 1], [1, "f", 1, 95, 116, 1], [1, "f", 0, 95, 118, 1], [1, "f", 0, 95, 122, 1], [1, "f", 1, 95, 123, 1], [1, "f", 1, 95, 124, 1], [1, "f", 0, 95, 125, 1], [1, "f", 1, 95, 126, 1], [1, "f", 1, 95, 129, 1], [1, "f", 1, 95, 133, 1], [1, "f", 0, 95, 134, 1], [1, "f", 1, 95, 135, 1], [1, "f", 1, 95, 139, 1], [1, "f", 0, 95, 140, 1], [1, "f", 1, 95, 141, 1], [1, "f", 1, 95, 142, 1], [1, "f", 1, 95, 146, 1], [1, "f", 0, 95, 145, 1], [1, "f", 1, 95, 148, 1], [1, "f", 1, 95, 149, 1], [1, "f", 1, 95, 150, 1], [1, "f", 1, 95, 153, 1], [1, "cs", 0, 64, 9, 1], [1, "cs", 1, 64, 10, 1], [1, "cs", 2, 64, 16, 1], [1, "cs", 2, 64, 19, 1], [1, "cs", 0, 64, 20, 1], [1, "cs", 1, 64, 21, 1], [1, "cs", 2, 64, 22, 1], [1, "cs", 0, 64, 23, 1], [1, "cs", 2, 64, 24, 1], [1, "cs", 1, 64, 29, 1], [1, "cs", 2, 64, 30, 1], [1, "cs", 3, 64, 31, 1], [1, "cs", 0, 64, 32, 1], [1, "cs", 1, 64, 33, 1], [1, "cs", 2, 64, 34, 1], [1, "cs", 0, 64, 35, 1], [1, "cs", 2, 64, 8, 1], [1, "cs", 2, 65, 8, 1], [1, "cs", 1, 65, 9, 1], [1, "cs", 2, 65, 10, 1], [1, "cs", 3, 65, 11, 1], [1, "cs", 1, 65, 16, 1], [1, "cs", 0, 64, 17, 1], [1, "cs", 3, 65, 17, 1], [1, "cs", 2, 64, 18, 1], [1, "cs", 2, 65, 18, 1], [1, "cs", 0, 65, 19, 1], [1, "cs", 1, 65, 20, 1], [1, "cs", 3, 65, 21, 1], [1, "cs", 2, 65, 22, 1], [1, "cs", 3, 65, 23, 1], [1, "cs", 0, 65, 24, 1], [1, "cs", 2, 65, 29, 1], [1, "cs", 3, 65, 30, 1], [1, "cs", 0, 65, 31, 1], [1, "cs", 1, 65, 32, 1], [1, "cs", 2, 65, 33, 1], [1, "cs", 3, 65, 34, 1], [1, "cs", 2, 63, 9, 1], [1, "cs", 0, 62, 9, 1], [1, "cs", 2, 61, 9, 1], [1, "cs", 0, 60, 9, 1], [1, "cs", 2, 59, 9, 1], [1, "cs", 2, 58, 9, 1], [1, "cs", 0, 57, 9, 1], [1, "cs", 2, 56, 9, 1], [1, "cs", 2, 55, 9, 1], [1, "cs", 2, 54, 9, 1], [1, "cs", 0, 53, 9, 1], [1, "cs", 0, 51, 9, 1], [1, "cs", 2, 52, 9, 1], [1, "cs", 2, 50, 9, 1], [1, "cs", 2, 48, 9, 1], [1, "cs", 2, 49, 9, 1], [1, "cs", 0, 47, 9, 1], [1, "cs", 0, 45, 9, 1], [1, "cs", 0, 43, 9, 1], [1, "cs", 2, 46, 9, 1], [1, "cs", 2, 44, 9, 1], [1, "cs", 2, 42, 9, 1], [1, "cs", 2, 41, 9, 1], [1, "cs", 0, 40, 9, 1], [1, "cs", 2, 39, 9, 1], [1, "cs", 2, 38, 9, 1], [1, "cs", 0, 37, 9, 1], [1, "cs", 0, 63, 8, 1], [1, "cs", 2, 65, 7, 1], [1, "cs", 3, 64, 7, 1], [1, "cs", 2, 62, 8, 1], [1, "cs", 3, 61, 8, 1], [1, "cs", 1, 62, 7, 1], [1, "cs", 2, 63, 7, 1], [1, "cs", 0, 64, 6, 1], [1, "cs", 3, 65, 6, 1], [1, "cs", 2, 63, 6, 1], [1, "cs", 2, 62, 6, 1], [1, "cs", 2, 61, 6, 1], [1, "cs", 2, 60, 6, 1], [1, "cs", 2, 59, 6, 1], [1, "cs", 2, 61, 7, 1], [1, "cs", 0, 60, 7, 1], [1, "cs", 2, 60, 8, 1], [1, "cs", 2, 59, 7, 1], [1, "cs", 2, 59, 8, 1], [1, "cs", 1, 58, 8, 1], [1, "cs", 1, 57, 6, 1], [1, "cs", 1, 55, 7, 1], [1, "cs", 0, 56, 6, 1], [1, "cs", 2, 58, 6, 1], [1, "cs", 2, 58, 7, 1], [1, "cs", 2, 57, 7, 1], [1, "cs", 2, 56, 7, 1], [1, "cs", 2, 55, 6, 1], [1, "cs", 2, 57, 8, 1], [1, "cs", 2, 56, 8, 1], [1, "cs", 2, 55, 8, 1], [1, "cs", 0, 54, 8, 1], [1, "cs", 0, 50, 7, 1], [1, "cs", 0, 53, 6, 1], [1, "cs", 2, 54, 6, 1], [1, "cs", 2, 54, 7, 1], [1, "cs", 2, 53, 7, 1], [1, "cs", 2, 52, 7, 1], [1, "cs", 2, 52, 6, 1], [1, "cs", 1, 52, 8, 1], [1, "cs", 2, 53, 8, 1], [1, "cs", 2, 51, 8, 1], [1, "cs", 2, 51, 7, 1], [1, "cs", 2, 51, 6, 1], [1, "cs", 2, 50, 6, 1], [1, "cs", 2, 50, 8, 1], [1, "cs", 2, 49, 8, 1], [1, "cs", 2, 49, 7, 1], [1, "cs", 2, 49, 6, 1], [1, "cs", 0, 46, 7, 1], [1, "cs", 1, 48, 8, 1], [1, "cs", 1, 44, 7, 1], [1, "cs", 1, 41, 8, 1], [1, "cs", 2, 48, 7, 1], [1, "cs", 2, 48, 6, 1], [1, "cs", 2, 47, 6, 1], [1, "cs", 2, 47, 7, 1], [1, "cs", 2, 47, 8, 1], [1, "cs", 2, 46, 8, 1], [1, "cs", 2, 45, 8, 1], [1, "cs", 2, 45, 7, 1], [1, "cs", 2, 45, 6, 1], [1, "cs", 2, 46, 6, 1], [1, "cs", 2, 44, 6, 1], [1, "cs", 2, 44, 8, 1], [1, "cs", 2, 43, 8, 1], [1, "cs", 2, 43, 7, 1], [1, "cs", 2, 43, 6, 1], [1, "cs", 2, 42, 6, 1], [1, "cs", 2, 42, 7, 1], [1, "cs", 2, 42, 8, 1], [1, "cs", 2, 41, 7, 1], [1, "cs", 2, 41, 6, 1], [1, "cs", 2, 40, 6, 1], [1, "cs", 2, 40, 7, 1], [1, "cs", 2, 40, 8, 1], [1, "cs", 2, 39, 8, 1], [1, "cs", 0, 39, 7, 1], [1, "cs", 1, 38, 8, 1], [1, "cs", 2, 39, 6, 1], [1, "cs", 2, 38, 6, 1], [1, "cs", 2, 37, 6, 1], [1, "cs", 2, 38, 7, 1], [1, "cs", 2, 37, 7, 1], [1, "cs", 2, 37, 8, 1], [1, "cs", 2, 37, 10, 1], [1, "cs", 2, 38, 10, 1], [1, "cs", 0, 38, 11, 1], [1, "cs", 0, 38, 17, 1], [1, "cs", 1, 37, 18, 1], [1, "cs", 0, 38, 19, 1], [1, "cs", 2, 37, 11, 1], [1, "cs", 2, 37, 16, 1], [1, "cs", 2, 37, 17, 1], [1, "cs", 2, 38, 18, 1], [1, "cs", 2, 37, 19, 1], [1, "cs", 3, 38, 16, 1], [1, "cs", 0, 37, 21, 1], [1, "cs", 0, 38, 22, 1], [1, "cs", 0, 38, 24, 1], [1, "cs", 2, 37, 20, 1], [1, "cs", 2, 38, 20, 1], [1, "cs", 2, 38, 21, 1], [1, "cs", 1, 37, 23, 1], [1, "cs", 3, 37, 22, 1], [1, "cs", 3, 38, 23, 1], [1, "cs", 2, 37, 24, 1], [1, "cs", 0, 38, 30, 1], [1, "cs", 0, 38, 32, 1], [1, "cs", 0, 37, 31, 1], [1, "cs", 1, 38, 34, 1], [1, "cs", 1, 37, 29, 1], [1, "cs", 2, 38, 29, 1], [1, "cs", 2, 37, 30, 1], [1, "cs", 2, 38, 31, 1], [1, "cs", 2, 37, 32, 1], [1, "cs", 3, 38, 33, 1], [1, "cs", 3, 38, 35, 1], [1, "cs", 2, 37, 33, 1], [1, "cs", 2, 36, 8, 1], [1, "cs", 0, 36, 11, 1], [1, "cs", 0, 35, 9, 1], [1, "cs", 2, 36, 9, 1], [1, "cs", 2, 36, 10, 1], [1, "cs", 2, 35, 10, 1], [1, "cs", 1, 33, 8, 1], [1, "cs", 3, 34, 9, 1], [1, "cs", 3, 35, 8, 1], [1, "cs", 2, 34, 8, 1], [1, "cs", 0, 36, 7, 1], [1, "cs", 1, 34, 7, 1], [1, "cs", 2, 35, 7, 1], [1, "cs", 2, 35, 6, 1], [1, "cs", 2, 36, 6, 1], [1, "cs", 2, 68, 9, 1], [1, "cs", 2, 66, 10, 1], [1, "cs", 3, 66, 9, 1], [1, "cs", 0, 67, 9, 1], [1, "cs", 0, 66, 8, 1], [1, "cs", 2, 67, 8, 1], [1, "cs", 1, 68, 8, 1], [1, "cs", 1, 66, 11, 1], [1, "cs", 2, 67, 10, 1], [1, "cs", 0, 66, 6, 1], [1, "cs", 2, 66, 7, 1], [1, "cs", 2, 67, 7, 1], [1, "cs", 2, 69, 8, 1], [1, "cs", 2, 63, 32, 1], [1, "cs", 2, 62, 34, 1], [1, "cs", 2, 60, 35, 1], [1, "cs", 3, 59, 35, 1], [1, "cs", 0, 61, 35, 1], [1, "cs", 0, 63, 34, 1], [1, "cs", 2, 63, 33, 1], [1, "cs", 2, 63, 35, 1], [1, "cs", 2, 62, 35, 1], [1, "cs", 2, 58, 36, 1], [1, "cs", 1, 59, 36, 1], [1, "cs", 1, 62, 36, 1], [1, "cs", 2, 60, 36, 1], [1, "cs", 2, 61, 34, 1], [1, "cs", 3, 62, 33, 1], [1, "cs", 3, 63, 36, 1], [1, "cs", 3, 61, 36, 1], [1, "cs", 0, 42, 36, 1], [1, "cs", 1, 39, 36, 1], [1, "cs", 2, 41, 36, 1], [1, "cs", 3, 39, 35, 1], [1, "cs", 3, 40, 36, 1], [1, "cs", 3, 43, 36, 1], [1, "cs", 1, 40, 35, 1], [1, "cs", 2, 41, 35, 1], [1, "cs", 2, 40, 34, 1], [1, "cs", 2, 39, 34, 1], [1, "cs", 2, 39, 33, 1], [1, "cs", 2, 39, 32, 1], [1, "cs", 0, 40, 33, 1], [1, "cs", 2, 41, 34, 1], [1, "cs", 1, 44, 36, 1], [1, "cs", 3, 43, 35, 1], [1, "cs", 2, 42, 35, 1], [1, "cs", 0, 37, 34, 1], [1, "cs", 3, 59, 30, 1], [1, "cs", 0, 60, 29, 1], [1, "cs", 2, 60, 28, 1], [1, "cs", 3, 60, 27, 1], [1, "cs", 0, 60, 26, 1], [1, "cs", 2, 54, 25, 1], [1, "cs", 2, 48, 25, 1], [1, "cs", 2, 42, 26, 1], [1, "cs", 0, 55, 25, 1], [1, "cs", 2, 59, 26, 1], [1, "cs", 0, 43, 26, 1], [1, "cs", 1, 42, 27, 1], [1, "cs", 2, 42, 28, 1], [1, "cs", 2, 43, 30, 1], [1, "cs", 0, 42, 29, 1], [1, "cs", 0, 54, 24, 1], [1, "cs", 0, 48, 24, 1], [1, "cs", 2, 54, 23, 1], [1, "cs", 2, 48, 23, 1], [1, "cs", 2, 63, 22, 1], [1, "cs", 2, 63, 21, 1], [1, "cs", 2, 39, 21, 1], [1, "cs", 3, 57, 18, 1], [1, "cs", 2, 56, 18, 1], [1, "cs", 3, 51, 21, 1], [1, "cs", 0, 51, 20, 1], [1, "cs", 2, 51, 19, 1], [1, "cs", 3, 51, 18, 1], [1, "cs", 2, 63, 16, 1], [1, "cs", 2, 63, 10, 1], [1, "cs", 2, 56, 13, 1], [1, "cs", 3, 57, 13, 1], [1, "cs", 1, 45, 18, 1], [1, "cs", 2, 47, 18, 1], [1, "cs", 2, 46, 18, 1], [1, "cs", 0, 46, 13, 1], [1, "cs", 2, 45, 13, 1], [1, "cs", 2, 39, 10, 1], [1, "cs", 2, 39, 16, 1], [1, "cs", 2, 47, 17, 1], [1, "a", 0, 51, 15, 1], [1, "a", 1, 53, 14, 1], [1, "a", 1, 49, 14, 1], [1, "de", 8, 55, 15, 0], [1, "de", 9, 48, 28, 0], [1, "de", 10, 58, 26, 0], [1, "de", 11, 59, 29, 0], [1, "de", 11, 55, 34, 0], [1, "de", 10, 48, 33, 0], [1, "de", 9, 41, 32, 0], [1, "de", 9, 56, 24, 0], [1, "de", 9, 62, 16, 0], [1, "de", 9, 45, 11, 0], [1, "de", 9, 44, 17, 0], [1, "de", 10, 44, 13, 0], [1, "de", 10, 58, 13, 0], [1, "de", 10, 63, 31, 0], [1, "de", 8, 60, 30, 0], [1, "de", 8, 43, 26, 0], [1, "de", 10, 43, 29, 0], [1, "de", 10, 53, 29, 0], [1, "de", 10, 53, 24, 0], [1, "de", 9, 53, 19, 0], [1, "de", 11, 49, 19, 0], [1, "de", 10, 39, 26, 0], [1, "de", 9, 46, 24, 0], [1, "de", 9, 62, 10, 0], [1, "de", 8, 40, 14, 0], [1, "de", 32, 55, 35, 0], [1, "de", 32, 60, 33, 0], [1, "de", 32, 63, 28, 0], [1, "de", 32, 63, 24, 0], [1, "de", 32, 58, 22, 0], [1, "de", 32, 59, 17, 0], [1, "de", 32, 63, 13, 0], [1, "de", 32, 59, 10, 0], [1, "de", 32, 56, 12, 0], [1, "de", 32, 52, 17, 0], [1, "de", 32, 51, 14, 0], [1, "de", 32, 39, 12, 0], [1, "de", 32, 39, 18, 0], [1, "de", 32, 41, 25, 0], [1, "de", 32, 39, 30, 0], [1, "de", 32, 50, 29, 0], [1, "de", 32, 43, 34, 0], [1, "de", 32, 47, 34, 0], [1, "de", 31, 54, 33, 0], [1, "de", 31, 59, 24, 0], [1, "de", 31, 63, 19, 0], [1, "de", 31, 47, 15, 0], [1, "de", 31, 43, 17, 0], [1, "de", 31, 39, 27, 0], [1, "de", 31, 48, 27, 0], [1, "de", 31, 57, 27, 0], [1, "de", 32, 44, 27, 0], [1, "d", 0, 12, 13, 1], [1, "d", 0, 89, 13, 1], [1, "d", 1, 91, 21, 1], [1, "d", 1, 10, 22, 1], [1, "f", 2, 89, 18, 1], [1, "f", 0, 88, 19, 1], [1, "g", 1, 85, 22, 1], [1, "s", 1, 90, 29, 1], [1, "s", 1, 92, 15, 1], [1, "s", 0, 91, 31, 1], [1, "s", 2, 90, 38, 1], [1, "s", 0, 91, 42, 1], [1, "s", 0, 90, 49, 1], [1, "f", 1, 86, 43, 1], [1, "f", 0, 81, 45, 1], [1, "f", 2, 66, 44, 1], [1, "f", 2, 55, 49, 1], [1, "f", 1, 54, 50, 1], [1, "f", 2, 43, 45, 1], [1, "f", 2, 31, 48, 1], [1, "f", 1, 27, 39, 1], [1, "f", 1, 80, 46, 1], [1, "f", 1, 69, 48, 1], [1, "g", 0, 80, 40, 1], [1, "g", 2, 81, 40, 1], [1, "s", 2, 77, 39, 1], [1, "s", 0, 68, 43, 1], [1, "s", 2, 57, 41, 1], [1, "s", 1, 56, 42, 1], [1, "s", 1, 40, 41, 1], [1, "s", 2, 48, 48, 1], [1, "f", 2, 17, 12, 1], [1, "f", 0, 13, 31, 1], [1, "f", 1, 14, 32, 1], [1, "s", 0, 15, 27, 1], [1, "s", 0, 13, 39, 1], [1, "f", 2, 11, 17, 1], [1, "f", 1, 12, 18, 1], [1, "g", 2, 12, 25, 1], [1, "f", 0, 16, 45, 1], [1, "f", 1, 17, 46, 1], [1, "s", 1, 74, 48, 1], [1, "s", 1, 20, 47, 1], [1, "g", 0, 58, 59, 1], [1, "g", 0, 46, 72, 1], [1, "g", 0, 69, 79, 1], [1, "g", 0, 72, 74, 1], [1, "g", 0, 26, 88, 1], [1, "g", 0, 20, 74, 1], [1, "g", 0, 28, 67, 1], [1, "g", 0, 49, 86, 1], [1, "g", 0, 77, 90, 1], [1, "g", 0, 87, 72, 1], [1, "g", 0, 14, 85, 1], [1, "g", 1, 85, 97, 1], [1, "g", 1, 68, 104, 1], [1, "g", 1, 63, 91, 1], [1, "g", 1, 39, 90, 1], [1, "g", 1, 34, 99, 1], [1, "g", 1, 17, 103, 1], [1, "g", 2, 77, 60, 1], [1, "g", 2, 19, 56, 1], [1, "g", 2, 39, 60, 1], [1, "g", 2, 87, 57, 1], [1, "f", 0, 9, 62, 1], [1, "f", 0, 12, 81, 1], [1, "f", 0, 26, 59, 1], [1, "f", 0, 35, 53, 1], [1, "f", 0, 44, 58, 1], [1, "f", 0, 88, 62, 1], [1, "f", 0, 91, 82, 1], [1, "f", 0, 84, 85, 1], [1, "f", 0, 79, 69, 1], [1, "f", 0, 64, 71, 1], [1, "f", 0, 62, 83, 1], [1, "f", 0, 34, 81, 1], [1, "f", 0, 39, 71, 1], [1, "f", 0, 54, 94, 1], [1, "f", 1, 81, 70, 1], [1, "f", 1, 91, 72, 1], [1, "f", 1, 8, 91, 1], [1, "f", 1, 14, 81, 1], [1, "f", 1, 29, 79, 1], [1, "f", 1, 13, 65, 1], [1, "f", 1, 46, 97, 1], [1, "f", 1, 43, 73, 1], [1, "f", 1, 60, 69, 1], [1, "f", 1, 70, 96, 1], [1, "f", 1, 58, 84, 1], [1, "s", 1, 56, 76, 1], [1, "s", 1, 85, 74, 1], [1, "s", 0, 72, 71, 1], [1, "s", 0, 41, 62, 1], [1, "s", 0, 60, 61, 1], [1, "s", 0, 20, 66, 1], [1, "s", 0, 47, 83, 1], [1, "s", 0, 29, 86, 1], [1, "s", 0, 78, 92, 1], [1, "s", 0, 62, 102, 1], [1, "s", 0, 18, 95, 1], [1, "s", 2, 64, 101, 1], [1, "s", 2, 78, 84, 1], [1, "s", 2, 49, 83, 1], [1, "s", 2, 15, 76, 1], [1, "s", 2, 21, 84, 1], [1, "f", 1, 26, 94, 1], [1, "f", 2, 23, 96, 1], [1, "f", 2, 25, 72, 1], [1, "f", 2, 85, 77, 1], [1, "f", 2, 79, 95, 1], [1, "f", 2, 51, 65, 1], [1, "f", 2, 69, 60, 1], [1, "f", 1, 25, 105, 1], [1, "s", 1, 18, 68, 1], [1, "s", 0, 55, 76, 1], [1, "s", 0, 74, 59, 1], [1, "f", 1, 46, 142, 1], [1, "f", 1, 19, 140, 1], [1, "f", 1, 77, 137, 1], [1, "f", 0, 75, 137, 1], [1, "f", 0, 55, 138, 1], [1, "f", 0, 33, 127, 1], [1, "f", 0, 76, 121, 1], [1, "f", 0, 55, 121, 1], [1, "f", 0, 13, 123, 1], [1, "f", 0, 18, 141, 1], [1, "f", 0, 40, 137, 1], [1, "f", 2, 76, 142, 1], [1, "f", 2, 57, 140, 1], [1, "f", 2, 39, 138, 1], [1, "f", 2, 16, 143, 1], [1, "f", 2, 29, 131, 1], [1, "f", 0, 70, 150, 1], [1, "f", 0, 28, 146, 1], [1, "f", 0, 12, 132, 1], [1, "f", 0, 90, 129, 1], [1, "f", 1, 87, 131, 1], [1, "f", 0, 91, 143, 1], [1, "f", 2, 87, 145, 1], [1, "f", 1, 89, 141, 1], [1, "f", 1, 63, 130, 1], [1, "f", 1, 75, 122, 1], [1, "f", 1, 52, 124, 1], [1, "f", 1, 34, 127, 1], [1, "f", 1, 14, 123, 1], [1, "f", 1, 24, 122, 1], [1, "f", 0, 83, 108, 1], [1, "f", 0, 89, 118, 1], [1, "f", 0, 56, 107, 1], [1, "f", 0, 38, 113, 1], [1, "f", 0, 16, 110, 1], [1, "f", 1, 80, 105, 1], [1, "f", 1, 82, 109, 1], [1, "f", 1, 87, 118, 1], [1, "f", 1, 59, 110, 1], [1, "f", 1, 29, 111, 1], [1, "f", 2, 28, 112, 1], [1, "f", 2, 70, 112, 1], [1, "f", 2, 42, 111, 1], [1, "s", 0, 68, 157, 1], [1, "s", 0, 81, 158, 1], [1, "s", 0, 25, 172, 1], [1, "s", 0, 22, 161, 1], [1, "s", 0, 35, 152, 1], [1, "s", 0, 66, 144, 1], [1, "s", 0, 87, 145, 1], [1, "s", 0, 86, 145, 1], [1, "s", 0, 84, 135, 1], [1, "s", 0, 69, 133, 1], [1, "s", 0, 84, 122, 1], [1, "s", 0, 68, 121, 1], [1, "s", 0, 48, 124, 1], [1, "s", 0, 26, 129, 1], [1, "s", 0, 9, 127, 1], [1, "s", 0, 11, 144, 1], [1, "s", 0, 9, 109, 1], [1, "s", 0, 35, 101, 1], [1, "s", 0, 47, 109, 1], [1, "s", 0, 58, 111, 1], [1, "s", 0, 84, 110, 1], [1, "s", 0, 28, 114, 1], [1, "s", 1, 30, 116, 1], [1, "s", 1, 46, 112, 1], [1, "s", 1, 81, 111, 1], [1, "s", 1, 70, 123, 1], [1, "s", 1, 49, 127, 1], [1, "s", 1, 66, 134, 1], [1, "s", 1, 67, 144, 1], [1, "s", 1, 38, 152, 1], [1, "s", 1, 21, 164, 1], [1, "s", 1, 12, 147, 1], [1, "s", 1, 24, 130, 1], [1, "s", 1, 12, 125, 1], [1, "s", 1, 65, 158, 1], [1, "s", 1, 83, 167, 1], [1, "s", 1, 65, 167, 1], [1, "s", 1, 47, 164, 1], [1, "s", 1, 56, 168, 1], [1, "s", 2, 54, 169, 1], [1, "s", 2, 88, 170, 1], [1, "s", 2, 91, 162, 1], [1, "s", 2, 79, 149, 1], [1, "s", 2, 75, 144, 1], [1, "s", 2, 57, 150, 1], [1, "s", 2, 47, 143, 1], [1, "s", 2, 31, 145, 1], [1, "s", 2, 36, 138, 1], [1, "s", 2, 10, 163, 1], [1, "s", 2, 22, 142, 1], [1, "g", 2, 78, 132, 1], [1, "g", 1, 48, 135, 1], [1, "g", 2, 16, 136, 1], [1, "g", 0, 62, 92, 1], [1, "g", 2, 70, 80, 1], [1, "g", 2, 15, 86, 1], [1, "g", 2, 47, 75, 1], [1, "g", 2, 36, 89, 1], [1, "g", 2, 80, 90, 1], [1, "f", 1, 39, 118, 1], [1, "d", 2, 84, 54, 1], [1, "d", 2, 16, 54, 1], [1, "de", 7, 13, 13, 0], [1, "de", 5, 16, 28, 0], [1, "de", 5, 9, 25, 0], [1, "de", 5, 34, 41, 0], [1, "de", 4, 28, 40, 0], [1, "de", 6, 31, 47, 0], [1, "de", 6, 12, 39, 0], [1, "de", 4, 16, 47, 0], [1, "de", 4, 7, 46, 0], [1, "de", 6, 7, 33, 0], [1, "de", 6, 40, 42, 0], [1, "de", 7, 20, 48, 0], [1, "de", 7, 29, 59, 0], [1, "de", 6, 27, 58, 0], [1, "de", 6, 15, 54, 0], [1, "de", 5, 12, 66, 0], [1, "de", 5, 37, 53, 0], [1, "de", 4, 10, 63, 0], [1, "de", 7, 49, 48, 0], [1, "de", 7, 37, 63, 0], [1, "de", 6, 33, 68, 0], [1, "de", 6, 56, 52, 0], [1, "de", 5, 59, 58, 0], [1, "de", 6, 48, 58, 0], [1, "de", 4, 53, 63, 0], [1, "de", 4, 67, 44, 0], [1, "de", 5, 70, 49, 0], [1, "de", 5, 82, 55, 0], [1, "de", 5, 79, 41, 0], [1, "de", 5, 91, 29, 0], [1, "de", 7, 91, 43, 0], [1, "de", 6, 85, 44, 0], [1, "de", 6, 74, 60, 0], [1, "de", 6, 90, 8, 0], [1, "de", 5, 91, 15, 0], [1, "de", 4, 87, 20, 0], [1, "de", 7, 93, 11, 0], [1, "de", 6, 91, 21, 0], [1, "de", 6, 85, 35, 0], [1, "de", 5, 93, 58, 0], [1, "de", 5, 87, 63, 0], [1, "de", 7, 77, 62, 0], [1, "de", 6, 68, 61, 0], [1, "de", 5, 90, 73, 0], [1, "de", 4, 87, 71, 0], [1, "de", 7, 80, 71, 0], [1, "de", 7, 83, 77, 0], [1, "de", 7, 89, 83, 0], [1, "de", 4, 71, 80, 0], [1, "de", 4, 71, 70, 0], [1, "de", 5, 63, 72, 0], [1, "de", 4, 54, 75, 0], [1, "de", 5, 44, 83, 0], [1, "de", 5, 42, 74, 0], [1, "de", 5, 15, 81, 0], [1, "de", 4, 29, 80, 0], [1, "de", 4, 37, 90, 0], [1, "de", 4, 7, 75, 0], [1, "de", 6, 22, 74, 0], [1, "de", 6, 43, 95, 0], [1, "de", 6, 57, 85, 0], [1, "de", 6, 19, 94, 0], [1, "de", 6, 9, 92, 0], [1, "de", 5, 26, 89, 0], [1, "de", 5, 31, 112, 0], [1, "de", 5, 54, 108, 0], [1, "de", 5, 55, 95, 0], [1, "de", 5, 35, 104, 0], [1, "de", 5, 13, 110, 0], [1, "de", 7, 27, 107, 0], [1, "de", 7, 47, 99, 0], [1, "de", 7, 11, 104, 0], [1, "de", 7, 9, 111, 0], [1, "de", 7, 40, 114, 0], [1, "de", 7, 28, 117, 0], [1, "de", 7, 47, 113, 0], [1, "de", 7, 63, 104, 0], [1, "de", 4, 64, 92, 0], [1, "de", 6, 86, 97, 0], [1, "de", 5, 76, 91, 0], [1, "de", 5, 85, 86, 0], [1, "de", 6, 78, 83, 0], [1, "de", 6, 71, 97, 0], [1, "de", 4, 69, 105, 0], [1, "de", 4, 79, 104, 0], [1, "de", 4, 86, 109, 0], [1, "de", 4, 86, 118, 0], [1, "de", 5, 70, 113, 0], [1, "de", 6, 69, 121, 0], [1, "de", 6, 76, 122, 0], [1, "de", 7, 87, 130, 0], [1, "de", 4, 84, 123, 0], [1, "de", 4, 57, 121, 0], [1, "de", 5, 53, 125, 0], [1, "de", 5, 62, 131, 0], [1, "de", 6, 67, 143, 0], [1, "de", 5, 77, 143, 0], [1, "de", 5, 85, 136, 0], [1, "de", 6, 87, 147, 0], [1, "de", 6, 92, 140, 0], [1, "de", 4, 93, 127, 0], [1, "de", 5, 93, 106, 0], [1, "de", 5, 45, 144, 0], [1, "de", 4, 41, 139, 0], [1, "de", 4, 54, 138, 0], [1, "de", 6, 29, 145, 0], [1, "de", 6, 29, 132, 0], [1, "de", 6, 35, 127, 0], [1, "de", 6, 64, 142, 0], [1, "de", 5, 23, 131, 0], [1, "de", 5, 9, 134, 0], [1, "de", 6, 11, 121, 0], [1, "de", 4, 26, 121, 0], [1, "de", 35, 58, 150, 0], [1, "de", 33, 48, 156, 0], [1, "de", 33, 25, 158, 0], [1, "de", 33, 36, 154, 0], [1, "de", 34, 9, 154, 0], [1, "de", 34, 13, 148, 0], [1, "de", 34, 21, 142, 0], [1, "de", 34, 38, 139, 0], [1, "de", 34, 47, 144, 0], [1, "de", 34, 68, 142, 0], [1, "de", 36, 70, 135, 0], [1, "de", 36, 64, 132, 0], [1, "de", 36, 86, 134, 0], [1, "de", 36, 90, 141, 0], [1, "de", 36, 93, 131, 0], [1, "de", 36, 91, 125, 0], [1, "de", 36, 76, 123, 0], [1, "de", 33, 82, 122, 0], [1, "de", 35, 56, 122, 0], [1, "de", 35, 40, 119, 0], [1, "de", 35, 17, 112, 0], [1, "de", 35, 37, 102, 0], [1, "de", 33, 18, 97, 0], [1, "de", 34, 10, 83, 0], [1, "de", 33, 19, 73, 0], [1, "de", 33, 10, 60, 0], [1, "de", 35, 24, 60, 0], [1, "de", 36, 14, 45, 0], [1, "de", 36, 21, 42, 0], [1, "de", 35, 8, 32, 0], [1, "de", 33, 9, 24, 0], [1, "de", 35, 35, 27, 0], [1, "de", 33, 56, 35, 0], [1, "de", 36, 53, 36, 0], [1, "de", 33, 45, 35, 0], [1, "de", 35, 53, 39, 0], [1, "de", 36, 57, 30, 0], [1, "de", 33, 86, 108, 0], [1, "de", 33, 68, 112, 0], [1, "de", 33, 49, 109, 0], [1, "de", 33, 46, 95, 0], [1, "de", 33, 90, 76, 0], [1, "de", 36, 76, 83, 0], [1, "de", 36, 70, 72, 0], [1, "de", 36, 78, 63, 0], [1, "de", 36, 90, 64, 0], [1, "de", 36, 60, 70, 0], [1, "de", 35, 75, 90, 0], [1, "de", 35, 81, 58, 0], [1, "de", 35, 91, 51, 0], [1, "de", 35, 93, 56, 0], [1, "de", 35, 61, 60, 0], [1, "de", 35, 66, 46, 0], [1, "de", 33, 90, 19, 0], [1, "de", 34, 92, 9, 0], [1, "de", 35, 75, 39, 0], [1, "de", 35, 67, 42, 0], [1, "de", 35, 93, 37, 0], [1, "de", 36, 89, 28, 0], [1, "de", 36, 42, 61, 0], [1, "de", 33, 49, 50, 0], [1, "de", 33, 44, 75, 0], [1, "de", 33, 46, 85, 0], [1, "de", 33, 64, 84, 0], [1, "de", 33, 56, 94, 0], [1, "de", 33, 25, 90, 0], [1, "de", 33, 31, 69, 0], [1, "de", 35, 34, 54, 0], [1, "de", 35, 29, 47, 0], [1, "de", 36, 42, 41, 0], [1, "de", 36, 29, 34, 0], [1, "de", 35, 20, 55, 0], [1, "de", 35, 14, 52, 0], [1, "s", 2, 12, 171, 1], [1, "r", 20, 188, 0], [1, "r", 21, 188, 0], [1, "r", 22, 188, 0], [1, "r", 23, 188, 0], [1, "r", 24, 188, 0], [1, "r", 25, 189, 0], [1, "r", 24, 189, 0], [1, "r", 23, 189, 0], [1, "r", 22, 189, 0], [1, "r", 21, 189, 0], [1, "r", 20, 189, 0], [1, "r", 19, 189, 0], [1, "r", 19, 190, 0], [1, "r", 19, 191, 0], [1, "r", 20, 191, 0], [1, "r", 21, 191, 0], [1, "r", 22, 191, 0], [1, "r", 24, 191, 0], [1, "r", 23, 191, 0], [1, "r", 25, 191, 0], [1, "r", 25, 190, 0], [1, "r", 24, 190, 0], [1, "r", 23, 190, 0], [1, "r", 22, 190, 0], [1, "r", 21, 190, 0], [1, "r", 20, 190, 0], [1, "r", 26, 190, 0], [1, "r", 26, 191, 0], [1, "r", 24, 193, 0], [1, "r", 23, 193, 0], [1, "r", 22, 193, 0], [1, "r", 20, 192, 0], [1, "r", 21, 192, 0], [1, "r", 22, 192, 0], [1, "r", 23, 192, 0], [1, "r", 24, 192, 0], [1, "r", 25, 192, 0], [1, "r", 53, 199, 0], [1, "r", 52, 200, 0], [1, "r", 54, 199, 0], [1, "r", 55, 199, 0], [1, "r", 55, 200, 0], [1, "r", 54, 200, 0], [1, "r", 53, 200, 0], [1, "r", 51, 200, 0], [1, "r", 56, 200, 0], [1, "r", 55, 201, 0], [1, "r", 54, 201, 0], [1, "r", 55, 202, 0], [1, "r", 54, 203, 0], [1, "r", 54, 204, 0], [1, "r", 54, 202, 0], [1, "r", 53, 202, 0], [1, "r", 52, 202, 0], [1, "r", 53, 201, 0], [1, "r", 52, 201, 0], [1, "r", 51, 201, 0], [1, "r", 51, 202, 0], [1, "r", 50, 202, 0], [1, "r", 50, 201, 0], [1, "r", 56, 201, 0], [1, "r", 53, 203, 0], [1, "r", 52, 203, 0], [1, "r", 51, 203, 0], [1, "r", 56, 202, 0], [1, "r", 55, 203, 0], [1, "r", 53, 204, 0], [1, "r", 52, 204, 0], [1, "r", 55, 204, 0], [1, "r", 56, 203, 0], [1, "r", 56, 244, 0], [1, "r", 54, 246, 0], [1, "r", 50, 248, 0], [1, "r", 48, 248, 0], [1, "r", 43, 248, 0], [1, "r", 45, 238, 0], [1, "r", 44, 238, 0], [1, "r", 43, 238, 0], [1, "r", 46, 238, 0], [1, "r", 47, 238, 0], [1, "r", 48, 238, 0], [1, "r", 49, 238, 0], [1, "r", 50, 238, 0], [1, "r", 51, 238, 0], [1, "r", 52, 238, 0], [1, "r", 53, 238, 0], [1, "r", 54, 239, 0], [1, "r", 53, 240, 0], [1, "r", 53, 239, 0], [1, "r", 52, 239, 0], [1, "r", 51, 239, 0], [1, "r", 50, 239, 0], [1, "r", 49, 239, 0], [1, "r", 48, 239, 0], [1, "r", 47, 239, 0], [1, "r", 46, 239, 0], [1, "r", 45, 239, 0], [1, "r", 44, 239, 0], [1, "r", 43, 239, 0], [1, "r", 42, 239, 0], [1, "r", 41, 240, 0], [1, "r", 42, 240, 0], [1, "r", 43, 240, 0], [1, "r", 44, 240, 0], [1, "r", 45, 240, 0], [1, "r", 46, 240, 0], [1, "r", 47, 240, 0], [1, "r", 48, 240, 0], [1, "r", 49, 240, 0], [1, "r", 50, 240, 0], [1, "r", 51, 240, 0], [1, "r", 52, 240, 0], [1, "r", 54, 240, 0], [1, "r", 55, 240, 0], [1, "r", 56, 241, 0], [1, "r", 55, 241, 0], [1, "r", 54, 241, 0], [1, "r", 53, 241, 0], [1, "r", 52, 241, 0], [1, "r", 51, 241, 0], [1, "r", 49, 241, 0], [1, "r", 50, 241, 0], [1, "r", 48, 241, 0], [1, "r", 47, 241, 0], [1, "r", 46, 241, 0], [1, "r", 45, 241, 0], [1, "r", 44, 241, 0], [1, "r", 43, 241, 0], [1, "r", 42, 241, 0], [1, "r", 41, 241, 0], [1, "r", 40, 242, 0], [1, "r", 41, 242, 0], [1, "r", 42, 242, 0], [1, "r", 43, 242, 0], [1, "r", 44, 242, 0], [1, "r", 45, 242, 0], [1, "r", 46, 242, 0], [1, "r", 47, 242, 0], [1, "r", 48, 242, 0], [1, "r", 49, 242, 0], [1, "r", 50, 242, 0], [1, "r", 51, 242, 0], [1, "r", 52, 242, 0], [1, "r", 53, 242, 0], [1, "r", 54, 242, 0], [1, "r", 55, 242, 0], [1, "r", 56, 242, 0], [1, "r", 56, 243, 0], [1, "r", 55, 243, 0], [1, "r", 54, 243, 0], [1, "r", 53, 243, 0], [1, "r", 52, 243, 0], [1, "r", 51, 243, 0], [1, "r", 50, 243, 0], [1, "r", 49, 243, 0], [1, "r", 48, 243, 0], [1, "r", 47, 243, 0], [1, "r", 46, 243, 0], [1, "r", 45, 243, 0], [1, "r", 44, 243, 0], [1, "r", 43, 243, 0], [1, "r", 42, 243, 0], [1, "r", 41, 243, 0], [1, "r", 40, 243, 0], [1, "r", 40, 244, 0], [1, "r", 41, 244, 0], [1, "r", 43, 244, 0], [1, "r", 44, 244, 0], [1, "r", 45, 244, 0], [1, "r", 46, 244, 0], [1, "r", 47, 244, 0], [1, "r", 48, 244, 0], [1, "r", 49, 244, 0], [1, "r", 50, 244, 0], [1, "r", 51, 244, 0], [1, "r", 52, 244, 0], [1, "r", 53, 244, 0], [1, "r", 54, 244, 0], [1, "r", 55, 244, 0], [1, "r", 42, 244, 0], [1, "r", 40, 245, 0], [1, "r", 41, 245, 0], [1, "r", 42, 245, 0], [1, "r", 43, 245, 0], [1, "r", 44, 245, 0], [1, "r", 45, 245, 0], [1, "r", 46, 245, 0], [1, "r", 47, 245, 0], [1, "r", 48, 245, 0], [1, "r", 49, 245, 0], [1, "r", 50, 245, 0], [1, "r", 51, 245, 0], [1, "r", 52, 246, 0], [1, "r", 52, 245, 0], [1, "r", 53, 245, 0], [1, "r", 54, 245, 0], [1, "r", 55, 245, 0], [1, "r", 53, 246, 0], [1, "r", 51, 246, 0], [1, "r", 50, 246, 0], [1, "r", 49, 246, 0], [1, "r", 48, 246, 0], [1, "r", 47, 246, 0], [1, "r", 45, 246, 0], [1, "r", 46, 246, 0], [1, "r", 44, 246, 0], [1, "r", 43, 246, 0], [1, "r", 42, 246, 0], [1, "r", 41, 246, 0], [1, "r", 42, 247, 0], [1, "r", 43, 247, 0], [1, "r", 44, 247, 0], [1, "r", 45, 247, 0], [1, "r", 46, 247, 0], [1, "r", 47, 247, 0], [1, "r", 48, 247, 0], [1, "r", 50, 247, 0], [1, "r", 51, 247, 0], [1, "r", 52, 247, 0], [1, "r", 53, 247, 0], [1, "r", 54, 247, 0], [1, "r", 49, 247, 0], [1, "r", 49, 248, 0], [1, "r", 47, 248, 0], [1, "r", 46, 248, 0], [1, "r", 45, 248, 0], [1, "r", 51, 248, 0], [1, "r", 55, 246, 1], [1, "r", 55, 247, 1], [1, "r", 56, 247, 1], [1, "r", 56, 248, 1], [1, "r", 95, 270, 1], [1, "r", 93, 270, 1], [1, "r", 94, 270, 1], [1, "r", 95, 271, 1], [1, "r", 94, 271, 1], [1, "r", 93, 271, 1], [1, "r", 94, 282, 1], [1, "r", 93, 282, 1], [1, "r", 93, 281, 1], [1, "r", 92, 281, 1], [1, "r", 92, 280, 1], [1, "r", 91, 280, 1], [1, "r", 90, 279, 1], [1, "r", 95, 275, 1], [1, "r", 95, 274, 1], [1, "r", 95, 273, 1], [1, "r", 95, 272, 1], [1, "r", 94, 274, 1], [1, "r", 94, 273, 1], [1, "r", 94, 272, 1], [1, "r", 93, 272, 1], [1, "r", 93, 273, 1], [1, "r", 93, 274, 1], [1, "r", 92, 273, 1], [1, "r", 92, 272, 1], [1, "r", 92, 270, 1], [1, "r", 92, 271, 1], [1, "r", 92, 269, 1], [1, "r", 90, 269, 1], [1, "r", 91, 269, 1], [1, "r", 91, 271, 1], [1, "r", 91, 270, 1], [1, "r", 95, 278, 1], [1, "r", 95, 277, 1], [1, "r", 95, 276, 1], [1, "r", 94, 276, 1], [1, "r", 94, 275, 1], [1, "r", 93, 275, 1], [1, "r", 92, 274, 1], [1, "r", 92, 275, 1], [1, "r", 91, 275, 1], [1, "r", 90, 275, 1], [1, "r", 89, 274, 1], [1, "r", 90, 274, 1], [1, "r", 89, 275, 1], [1, "r", 88, 274, 1], [1, "r", 88, 273, 1], [1, "r", 86, 272, 1], [1, "r", 85, 271, 1], [1, "r", 86, 271, 1], [1, "r", 87, 272, 1], [1, "r", 55, 248, 1], [1, "r", 54, 248, 1], [1, "r", 56, 249, 1], [1, "r", 55, 249, 1], [1, "r", 55, 250, 1], [1, "r", 56, 250, 1], [1, "r", 57, 250, 1], [1, "r", 57, 249, 1], [1, "r", 59, 250, 1], [1, "r", 58, 250, 1], [1, "r", 60, 250, 1], [1, "r", 61, 251, 1], [1, "r", 60, 251, 1], [1, "r", 62, 251, 1], [1, "r", 62, 252, 1], [1, "r", 63, 252, 1], [1, "r", 58, 251, 1], [1, "r", 57, 251, 1], [1, "r", 56, 251, 1], [1, "r", 58, 252, 1], [1, "r", 57, 252, 1], [1, "r", 57, 253, 1], [1, "r", 58, 253, 1], [1, "r", 58, 254, 1], [1, "r", 59, 255, 1], [1, "r", 58, 255, 1], [1, "r", 57, 254, 1], [1, "r", 56, 252, 1], [1, "r", 55, 251, 1], [1, "r", 60, 255, 1], [1, "r", 61, 255, 1], [1, "r", 61, 256, 1], [1, "r", 60, 256, 1], [1, "r", 62, 256, 1], [1, "r", 62, 257, 1], [1, "r", 61, 257, 1], [1, "r", 64, 253, 1], [1, "r", 64, 254, 1], [1, "r", 65, 254, 1], [1, "r", 61, 250, 1], [1, "r", 64, 252, 1], [1, "r", 65, 253, 1], [1, "r", 66, 254, 1], [1, "r", 65, 255, 1], [1, "r", 64, 255, 1], [1, "r", 64, 256, 1], [1, "r", 65, 256, 1], [1, "r", 65, 257, 1], [1, "r", 64, 257, 1], [1, "r", 63, 257, 1], [1, "r", 62, 258, 1], [1, "r", 63, 258, 1], [1, "r", 64, 258, 1], [1, "r", 66, 255, 1], [1, "r", 66, 256, 1], [1, "r", 66, 257, 1], [1, "r", 66, 258, 1], [1, "r", 65, 258, 1], [1, "r", 67, 258, 1], [1, "r", 67, 257, 1], [1, "r", 67, 259, 1], [1, "r", 66, 259, 1], [1, "r", 65, 259, 1], [1, "r", 56, 246, 1], [1, "r", 56, 245, 1], [1, "r", 68, 258, 1], [1, "r", 68, 259, 1], [1, "r", 68, 260, 1], [1, "r", 69, 260, 1], [1, "r", 69, 261, 1], [1, "r", 70, 261, 1], [1, "r", 71, 261, 1], [1, "r", 67, 260, 1], [1, "r", 89, 269, 1], [1, "r", 89, 268, 1], [1, "r", 90, 268, 1], [1, "r", 82, 267, 1], [1, "r", 83, 267, 1], [1, "r", 80, 266, 1], [1, "r", 81, 266, 1], [1, "r", 81, 267, 1], [1, "r", 79, 266, 1], [1, "r", 78, 265, 1], [1, "r", 77, 265, 1], [1, "r", 76, 264, 1], [1, "r", 75, 264, 1], [1, "r", 75, 263, 1], [1, "r", 74, 263, 1], [1, "r", 74, 262, 1], [1, "r", 72, 262, 1], [1, "r", 73, 262, 1], [1, "r", 71, 262, 1], [1, "r", 85, 270, 1], [1, "r", 84, 270, 1], [1, "r", 84, 269, 1], [1, "r", 83, 269, 1], [1, "r", 82, 269, 1], [1, "r", 81, 269, 1], [1, "r", 81, 268, 1], [1, "r", 82, 268, 1], [1, "r", 83, 268, 1], [1, "r", 80, 268, 1], [1, "r", 80, 267, 1], [1, "r", 79, 267, 1], [1, "r", 78, 266, 1], [1, "r", 76, 265, 1], [1, "r", 75, 262, 1], [1, "r", 90, 280, 1], [1, "r", 89, 280, 1], [1, "r", 89, 279, 1], [1, "r", 88, 279, 1], [1, "r", 88, 278, 1], [1, "r", 87, 277, 1], [1, "r", 86, 276, 1], [1, "r", 86, 275, 1], [1, "r", 86, 274, 1], [1, "r", 86, 273, 1], [1, "r", 85, 273, 1], [1, "r", 85, 272, 1], [1, "r", 85, 274, 1], [1, "r", 86, 277, 1], [1, "r", 87, 278, 1], [1, "r", 84, 271, 1], [1, "r", 83, 270, 1], [1, "r", 87, 273, 1], [1, "r", 91, 274, 1], [1, "r", 89, 273, 1], [1, "r", 88, 272, 1], [1, "r", 91, 281, 1], [1, "r", 92, 282, 1], [1, "r", 88, 280, 1], [1, "r", 87, 279, 1], [1, "r", 85, 275, 1], [1, "r", 84, 273, 1], [1, "r", 84, 272, 1], [1, "r", 83, 271, 1], [1, "r", 82, 270, 1], [1, "r", 84, 267, 0], [1, "r", 85, 267, 0], [1, "r", 76, 262, 0], [1, "r", 77, 262, 0], [1, "r", 88, 268, 0], [1, "r", 78, 262, 0], [1, "r", 79, 262, 0], [1, "r", 80, 262, 0], [1, "r", 80, 263, 0], [1, "r", 81, 263, 0], [1, "r", 82, 263, 0], [1, "r", 83, 263, 0], [1, "r", 84, 263, 0], [1, "r", 85, 263, 0], [1, "r", 88, 262, 0], [1, "r", 89, 262, 0], [1, "r", 90, 262, 0], [1, "r", 87, 262, 0], [1, "r", 86, 262, 0], [1, "r", 86, 263, 0], [1, "r", 87, 263, 0], [1, "r", 91, 262, 0], [1, "r", 95, 262, 0], [1, "r", 94, 262, 0], [1, "r", 86, 267, 0], [1, "r", 87, 267, 0], [1, "r", 87, 268, 0], [1, "r", 86, 268, 0], [1, "r", 74, 189, 0], [1, "r", 75, 189, 0], [1, "r", 76, 189, 0], [1, "r", 77, 189, 0], [1, "r", 78, 190, 0], [1, "r", 77, 190, 0], [1, "r", 75, 190, 0], [1, "r", 76, 190, 0], [1, "r", 74, 190, 0], [1, "r", 73, 190, 0], [1, "r", 78, 191, 0], [1, "r", 76, 191, 0], [1, "r", 77, 191, 0], [1, "r", 75, 191, 0], [1, "r", 74, 191, 0], [1, "r", 78, 192, 0], [1, "r", 77, 192, 0], [1, "r", 76, 192, 0], [1, "r", 75, 192, 0], [1, "r", 74, 192, 0], [1, "r", 73, 191, 0], [1, "f", 1, 96, 22, 1], [1, "s", 1, 97, 22, 1], [1, "f", 1, 98, 22, 1], [1, "s", 0, 99, 22, 1], [1, "s", 1, 100, 21, 1], [1, "s", 1, 96, 49, 1], [1, "s", 1, 100, 50, 1], [1, "s", 0, 99, 49, 1], [1, "s", 0, 97, 49, 1], [1, "f", 1, 98, 49, 1], [1, "r", 70, 218, 0], [1, "r", 71, 218, 0], [1, "r", 72, 218, 0], [1, "r", 73, 218, 0], [1, "r", 74, 219, 0], [1, "r", 73, 219, 0], [1, "r", 72, 219, 0], [1, "r", 71, 219, 0], [1, "r", 70, 219, 0], [1, "r", 73, 220, 0], [1, "r", 72, 220, 0], [1, "r", 71, 220, 0], [1, "r", 72, 221, 0], [1, "r", 71, 221, 0], [1, "r", 70, 221, 0], [1, "r", 69, 221, 0], [1, "r", 68, 221, 0], [1, "r", 70, 220, 0], [1, "r", 69, 220, 0], [1, "r", 69, 219, 0], [1, "r", 68, 220, 0], [1, "r", 73, 221, 0], [1, "r", 73, 222, 0], [1, "r", 71, 222, 0], [1, "r", 72, 222, 0], [1, "r", 74, 221, 0], [1, "r", 74, 220, 0], [1, "r", 75, 220, 0], [1, "r", 75, 221, 0], [1, "r", 70, 222, 0], [1, "r", 69, 222, 0], [1, "r", 29, 217, 0], [1, "r", 30, 217, 0], [1, "r", 31, 217, 0], [1, "r", 32, 217, 0], [1, "r", 31, 219, 0], [1, "r", 30, 219, 0], [1, "r", 29, 219, 0], [1, "r", 27, 219, 0], [1, "r", 25, 219, 0], [1, "r", 26, 219, 0], [1, "r", 28, 219, 0], [1, "r", 26, 218, 0], [1, "r", 27, 218, 0], [1, "r", 28, 218, 0], [1, "r", 29, 218, 0], [1, "r", 30, 218, 0], [1, "r", 28, 217, 0], [1, "r", 26, 217, 0], [1, "r", 27, 217, 0], [1, "r", 28, 216, 0], [1, "r", 29, 216, 0], [1, "r", 30, 216, 0], [1, "r", 31, 218, 0], [1, "r", 32, 218, 0], [1, "r", 31, 216, 0], [1, "r", 31, 221, 0], [1, "r", 31, 220, 0], [1, "r", 30, 220, 0], [1, "r", 29, 220, 0], [1, "r", 28, 220, 0], [1, "r", 27, 220, 0], [1, "r", 26, 220, 0], [1, "r", 25, 218, 0], [1, "r", 27, 221, 0], [1, "r", 28, 221, 0], [1, "r", 29, 221, 0], [1, "r", 30, 221, 0], [1, "r", 32, 220, 0], [1, "r", 32, 219, 0], [1, "r", 33, 218, 0], [1, "r", 33, 219, 0], [1, "r", 75, 238, 0], [1, "r", 76, 238, 0], [1, "r", 77, 239, 0], [1, "r", 76, 239, 0], [1, "r", 75, 239, 0], [1, "r", 74, 239, 0], [1, "r", 76, 240, 0], [1, "r", 77, 240, 0], [1, "r", 78, 240, 0], [1, "r", 77, 241, 0], [1, "r", 76, 241, 0], [1, "r", 75, 241, 0], [1, "r", 75, 240, 0], [1, "r", 74, 240, 0], [1, "r", 78, 239, 0], [1, "r", 77, 238, 0], [1, "r", 18, 253, 0], [1, "r", 19, 252, 0], [1, "r", 20, 252, 0], [1, "r", 21, 253, 0], [1, "r", 23, 254, 0], [1, "r", 20, 254, 0], [1, "r", 19, 254, 0], [1, "r", 22, 254, 0], [1, "r", 18, 254, 0], [1, "r", 19, 253, 0], [1, "r", 20, 253, 0], [1, "r", 21, 254, 0], [1, "r", 22, 253, 0], [1, "r", 21, 255, 0], [1, "r", 20, 255, 0], [1, "r", 19, 255, 0], [1, "r", 18, 255, 0], [1, "r", 17, 255, 0], [1, "r", 17, 254, 0], [1, "r", 22, 255, 0], [1, "r", 19, 256, 0], [1, "r", 20, 256, 0], [1, "r", 21, 256, 0], [1, "r", 39, 270, 0], [1, "r", 40, 270, 0], [1, "r", 41, 270, 0], [1, "r", 43, 270, 0], [1, "r", 44, 270, 0], [1, "r", 46, 270, 0], [1, "r", 42, 270, 0], [1, "r", 45, 270, 0], [1, "r", 44, 269, 0], [1, "r", 43, 269, 0], [1, "r", 42, 269, 0], [1, "r", 40, 269, 0], [1, "r", 41, 269, 0], [1, "r", 45, 271, 0], [1, "r", 44, 271, 0], [1, "r", 43, 271, 0], [1, "r", 42, 271, 0], [1, "r", 41, 271, 0], [1, "r", 40, 271, 0], [1, "r", 39, 271, 0], [1, "r", 46, 271, 0], [1, "r", 45, 272, 0], [1, "r", 44, 272, 0], [1, "r", 43, 272, 0], [1, "r", 42, 272, 0], [1, "r", 19, 284, 0], [1, "r", 20, 284, 0], [1, "r", 21, 285, 0], [1, "r", 22, 285, 0], [1, "r", 23, 286, 0], [1, "r", 22, 288, 0], [1, "r", 20, 288, 0], [1, "r", 18, 288, 0], [1, "r", 17, 287, 0], [1, "r", 16, 287, 0], [1, "r", 16, 286, 0], [1, "r", 17, 286, 0], [1, "r", 18, 286, 0], [1, "r", 19, 286, 0], [1, "r", 20, 286, 0], [1, "r", 21, 286, 0], [1, "r", 22, 286, 0], [1, "r", 20, 285, 0], [1, "r", 19, 285, 0], [1, "r", 18, 285, 0], [1, "r", 17, 285, 0], [1, "r", 19, 287, 0], [1, "r", 18, 287, 0], [1, "r", 20, 287, 0], [1, "r", 21, 287, 0], [1, "r", 22, 287, 0], [1, "r", 23, 287, 0], [1, "r", 21, 288, 0], [1, "r", 19, 288, 0], [1, "r", 17, 288, 0], [1, "r", 19, 289, 0], [1, "r", 21, 289, 0], [1, "r", 22, 289, 0], [1, "r", 20, 289, 0], [1, "r", 23, 288, 0], [1, "r", 24, 287, 0], [1, "r", 24, 286, 0], [1, "r", 23, 285, 0], [1, "r", 66, 286, 0], [1, "r", 64, 287, 0], [1, "r", 63, 287, 0], [1, "r", 60, 287, 0], [1, "r", 59, 285, 0], [1, "r", 58, 284, 0], [1, "r", 59, 283, 0], [1, "r", 65, 283, 0], [1, "r", 64, 283, 0], [1, "r", 63, 283, 0], [1, "r", 62, 283, 0], [1, "r", 61, 283, 0], [1, "r", 60, 283, 0], [1, "r", 59, 284, 0], [1, "r", 58, 285, 0], [1, "r", 60, 286, 0], [1, "r", 59, 286, 0], [1, "r", 61, 287, 0], [1, "r", 62, 287, 0], [1, "r", 61, 286, 0], [1, "r", 62, 286, 0], [1, "r", 63, 286, 0], [1, "r", 64, 286, 0], [1, "r", 65, 286, 0], [1, "r", 67, 285, 0], [1, "r", 66, 285, 0], [1, "r", 65, 285, 0], [1, "r", 64, 285, 0], [1, "r", 63, 285, 0], [1, "r", 62, 285, 0], [1, "r", 61, 285, 0], [1, "r", 60, 285, 0], [1, "r", 60, 284, 0], [1, "r", 61, 284, 0], [1, "r", 62, 284, 0], [1, "r", 63, 284, 0], [1, "r", 64, 284, 0], [1, "r", 65, 284, 0], [1, "r", 66, 284, 0], [1, "r", 65, 287, 0], [1, "r", 67, 286, 0], [1, "p", 0, 13, 189, 1], [1, "p", 0, 32, 184, 1], [1, "p", 0, 47, 191, 1], [1, "p", 0, 64, 184, 1], [1, "p", 0, 84, 192, 1], [1, "p", 0, 78, 207, 1], [1, "p", 0, 58, 216, 1], [1, "p", 0, 41, 211, 1], [1, "p", 0, 18, 211, 1], [1, "p", 0, 14, 230, 1], [1, "p", 0, 29, 237, 1], [1, "p", 0, 50, 230, 1], [1, "p", 0, 78, 241, 1], [1, "p", 0, 74, 256, 1], [1, "p", 0, 68, 266, 1], [1, "p", 0, 48, 259, 1], [1, "p", 0, 31, 263, 1], [1, "p", 0, 18, 274, 1], [1, "p", 0, 33, 283, 1], [1, "p", 0, 66, 287, 1], [1, "p", 0, 82, 291, 1], [1, "p", 0, 16, 295, 1], [1, "p", 0, 45, 294, 1], [1, "p", 0, 18, 252, 1], [1, "p", 0, 79, 227, 1], [1, "p", 0, 32, 200, 1], [1, "p", 0, 64, 200, 1], [1, "s", 0, 21, 193, 1], [1, "s", 1, 18, 189, 1], [1, "s", 2, 26, 189, 1], [1, "b", 1, 15, 181, 0], [1, "b", 2, 18, 190, 0], [1, "b", 2, 29, 193, 0], [1, "t", 3, 16, 182, 0], [1, "t", 3, 13, 195, 0], [1, "t", 4, 16, 183, 0], [1, "t", 5, 10, 184, 0], [1, "t", 5, 23, 182, 0], [1, "t", 4, 30, 187, 0], [1, "t", 1, 26, 192, 0], [1, "b", 1, 25, 188, 0], [1, "s", 1, 24, 181, 1], [1, "t", 3, 33, 183, 0], [1, "b", 1, 36, 189, 0], [1, "t", 2, 35, 190, 0], [1, "b", 3, 19, 200, 0], [1, "s", 0, 28, 194, 1], [1, "s", 1, 32, 196, 1], [1, "s", 1, 36, 183, 1], [1, "s", 2, 38, 184, 1], [1, "s", 2, 10, 192, 1], [1, "s", 2, 12, 183, 1], [1, "s", 1, 15, 199, 1], [1, "b", 0, 12, 202, 0], [1, "t", 2, 13, 203, 0], [1, "t", 4, 20, 200, 0], [1, "t", 4, 12, 194, 0], [1, "t", 5, 15, 205, 0], [1, "t", 5, 29, 200, 0], [1, "t", 3, 28, 201, 0], [1, "s", 2, 25, 199, 1], [1, "s", 1, 22, 204, 1], [1, "g", 2, 25, 205, 1], [1, "b", 1, 27, 216, 0], [1, "s", 1, 25, 217, 1], [1, "s", 1, 33, 217, 1], [1, "s", 2, 35, 215, 1], [1, "s", 0, 32, 221, 1], [1, "t", 2, 31, 222, 0], [1, "t", 4, 26, 221, 0], [1, "b", 3, 27, 222, 0], [1, "b", 0, 17, 217, 0], [1, "t", 3, 18, 216, 0], [1, "t", 4, 13, 215, 0], [1, "t", 5, 30, 213, 0], [1, "t", 5, 24, 208, 0], [1, "s", 1, 12, 216, 1], [1, "s", 2, 11, 210, 1], [1, "s", 2, 34, 223, 1], [1, "b", 2, 36, 218, 0], [1, "t", 4, 40, 206, 0], [1, "t", 5, 35, 203, 0], [1, "t", 3, 39, 206, 0], [1, "b", 1, 34, 204, 0], [1, "s", 1, 33, 206, 1], [1, "s", 1, 42, 203, 1], [1, "s", 0, 47, 196, 1], [1, "b", 2, 40, 196, 0], [1, "t", 4, 39, 197, 0], [1, "t", 5, 44, 187, 0], [1, "b", 1, 46, 181, 0], [1, "t", 2, 47, 182, 0], [1, "b", 0, 57, 182, 0], [1, "b", 3, 56, 183, 0], [1, "t", 4, 55, 184, 0], [1, "t", 5, 62, 195, 0], [1, "s", 1, 51, 185, 1], [1, "s", 2, 62, 180, 1], [1, "s", 2, 61, 188, 1], [1, "s", 1, 61, 189, 1], [1, "s", 2, 48, 195, 1], [1, "b", 1, 51, 199, 0], [1, "t", 2, 52, 199, 0], [1, "t", 3, 56, 204, 0], [1, "t", 4, 57, 204, 0], [1, "t", 4, 51, 204, 0], [1, "s", 1, 52, 205, 1], [1, "s", 2, 57, 200, 1], [1, "s", 1, 56, 199, 1], [1, "b", 0, 55, 192, 0], [1, "t", 3, 56, 193, 0], [1, "t", 4, 50, 190, 0], [1, "b", 1, 76, 188, 0], [1, "t", 2, 75, 188, 0], [1, "t", 2, 73, 192, 0], [1, "t", 4, 72, 191, 0], [1, "t", 5, 78, 193, 0], [1, "b", 0, 79, 192, 0], [1, "s", 2, 79, 190, 1], [1, "s", 1, 74, 194, 1], [1, "s", 1, 72, 187, 1], [1, "s", 0, 74, 183, 1], [1, "s", 1, 75, 183, 1], [1, "t", 2, 69, 181, 0], [1, "t", 4, 70, 182, 0], [1, "t", 5, 69, 180, 0], [1, "b", 1, 65, 189, 0], [1, "b", 2, 66, 189, 0], [1, "t", 3, 64, 188, 0], [1, "t", 4, 67, 192, 0], [1, "b", 2, 85, 183, 0], [1, "t", 1, 84, 184, 0], [1, "t", 4, 81, 180, 0], [1, "t", 5, 89, 180, 0], [1, "t", 0, 90, 188, 0], [1, "t", 3, 89, 190, 0], [1, "s", 1, 87, 187, 1], [1, "s", 2, 87, 197, 1], [1, "b", 1, 84, 200, 0], [1, "t", 2, 83, 201, 0], [1, "t", 4, 87, 207, 0], [1, "s", 2, 79, 202, 1], [1, "s", 1, 80, 203, 1], [1, "t", 0, 71, 200, 0], [1, "b", 2, 72, 201, 0], [1, "t", 2, 65, 205, 0], [1, "t", 1, 66, 206, 0], [1, "t", 4, 63, 209, 0], [1, "t", 5, 73, 203, 0], [1, "s", 0, 70, 207, 1], [1, "s", 1, 71, 206, 1], [1, "s", 2, 68, 199, 1], [1, "s", 1, 64, 213, 1], [1, "t", 0, 85, 213, 0], [1, "b", 2, 84, 212, 0], [1, "t", 3, 77, 209, 0], [1, "t", 4, 83, 216, 0], [1, "t", 4, 73, 209, 0], [1, "b", 0, 86, 222, 0], [1, "b", 3, 87, 221, 0], [1, "s", 1, 80, 214, 1], [1, "s", 2, 87, 216, 1], [1, "s", 2, 84, 224, 1], [1, "s", 1, 77, 227, 1], [1, "t", 1, 74, 222, 0], [1, "b", 1, 69, 218, 0], [1, "b", 2, 75, 219, 0], [1, "s", 2, 74, 218, 1], [1, "s", 1, 69, 223, 1], [1, "s", 1, 77, 221, 1], [1, "b", 1, 72, 211, 0], [1, "b", 1, 85, 232, 0], [1, "t", 2, 84, 233, 0], [1, "t", 2, 78, 238, 0], [1, "b", 1, 77, 237, 0], [1, "t", 5, 87, 236, 0], [1, "t", 5, 76, 229, 0], [1, "b", 2, 74, 241, 0], [1, "s", 0, 73, 242, 1], [1, "s", 0, 81, 238, 1], [1, "s", 1, 82, 237, 1], [1, "s", 2, 72, 237, 1], [1, "s", 2, 78, 242, 1], [1, "b", 1, 66, 230, 0], [1, "b", 2, 62, 229, 0], [1, "t", 4, 67, 231, 0], [1, "t", 4, 62, 228, 0], [1, "t", 5, 64, 233, 0], [1, "t", 2, 65, 234, 0], [1, "t", 2, 51, 220, 0], [1, "t", 1, 50, 218, 0], [1, "b", 1, 45, 223, 0], [1, "b", 2, 46, 224, 0], [1, "t", 4, 49, 218, 0], [1, "t", 4, 47, 225, 0], [1, "s", 1, 50, 215, 1], [1, "s", 2, 51, 213, 1], [1, "s", 2, 42, 227, 1], [1, "s", 1, 44, 227, 1], [1, "s", 1, 60, 230, 1], [1, "s", 2, 59, 231, 1], [1, "b", 1, 85, 252, 0], [1, "t", 2, 84, 251, 0], [1, "t", 2, 74, 250, 0], [1, "t", 0, 75, 251, 0], [1, "b", 0, 83, 246, 0], [1, "t", 3, 82, 247, 0], [1, "t", 4, 81, 259, 0], [1, "t", 4, 69, 249, 0], [1, "t", 5, 87, 246, 0], [1, "t", 5, 75, 252, 0], [1, "s", 1, 79, 257, 1], [1, "s", 2, 78, 249, 1], [1, "s", 2, 80, 258, 1], [1, "s", 1, 88, 254, 1], [1, "s", 1, 85, 264, 1], [1, "s", 2, 89, 263, 1], [1, "s", 2, 87, 269, 1], [1, "s", 0, 84, 268, 1], [1, "s", 2, 76, 267, 1], [1, "s", 1, 66, 261, 1], [1, "s", 1, 87, 274, 1], [1, "s", 1, 76, 263, 1], [1, "s", 1, 59, 251, 1], [1, "s", 0, 59, 252, 1], [1, "t", 2, 86, 265, 0], [1, "t", 0, 78, 270, 0], [1, "t", 2, 79, 271, 0], [1, "t", 0, 77, 260, 0], [1, "t", 3, 78, 261, 0], [1, "b", 1, 71, 264, 0], [1, "b", 1, 88, 269, 0], [1, "t", 5, 84, 264, 0], [1, "t", 5, 79, 261, 0], [1, "t", 5, 72, 265, 0], [1, "t", 5, 77, 270, 0], [1, "t", 0, 87, 261, 0], [1, "t", 2, 86, 260, 0], [1, "t", 4, 84, 255, 0], [1, "t", 4, 68, 255, 0], [1, "t", 1, 67, 254, 0], [1, "t", 2, 65, 262, 0], [1, "t", 1, 57, 260, 0], [1, "t", 2, 58, 259, 0], [1, "b", 1, 63, 256, 0], [1, "b", 1, 52, 248, 0], [1, "t", 2, 53, 248, 0], [1, "s", 1, 50, 253, 1], [1, "s", 2, 67, 263, 1], [1, "s", 2, 52, 252, 1], [1, "s", 2, 71, 244, 1], [1, "b", 0, 57, 245, 0], [1, "t", 2, 58, 244, 0], [1, "b", 1, 53, 237, 0], [1, "t", 2, 54, 237, 0], [1, "t", 2, 41, 238, 0], [1, "t", 1, 42, 237, 0], [1, "t", 5, 57, 235, 0], [1, "t", 5, 60, 246, 0], [1, "t", 5, 50, 252, 0], [1, "t", 1, 42, 248, 0], [1, "b", 1, 43, 249, 0], [1, "b", 3, 37, 243, 0], [1, "s", 0, 50, 236, 1], [1, "s", 2, 39, 247, 1], [1, "s", 2, 51, 235, 1], [1, "s", 2, 60, 243, 1], [1, "s", 2, 36, 240, 1], [1, "s", 2, 43, 254, 1], [1, "s", 1, 42, 254, 1], [1, "t", 1, 38, 233, 0], [1, "t", 2, 35, 235, 0], [1, "t", 4, 33, 228, 0], [1, "t", 4, 33, 245, 0], [1, "t", 4, 43, 235, 0], [1, "t", 5, 45, 249, 0], [1, "t", 5, 41, 253, 0], [1, "b", 1, 20, 227, 0], [1, "b", 1, 14, 240, 0], [1, "t", 3, 21, 227, 0], [1, "t", 3, 27, 234, 0], [1, "t", 3, 15, 241, 0], [1, "t", 3, 12, 229, 0], [1, "t", 4, 17, 224, 0], [1, "t", 4, 11, 231, 0], [1, "t", 4, 22, 238, 0], [1, "t", 4, 11, 239, 0], [1, "t", 1, 22, 243, 0], [1, "b", 2, 23, 242, 0], [1, "s", 1, 23, 238, 1], [1, "s", 1, 22, 228, 1], [1, "s", 2, 24, 228, 1], [1, "s", 2, 21, 236, 1], [1, "s", 0, 13, 228, 1], [1, "s", 0, 16, 242, 1], [1, "s", 1, 15, 244, 1], [1, "s", 1, 34, 236, 1], [1, "t", 1, 26, 249, 0], [1, "t", 1, 22, 256, 0], [1, "t", 2, 23, 255, 0], [1, "b", 1, 17, 256, 0], [1, "b", 2, 18, 256, 0], [1, "s", 0, 21, 252, 1], [1, "s", 2, 20, 250, 1], [1, "s", 2, 23, 259, 1], [1, "s", 1, 13, 257, 1], [1, "t", 1, 31, 254, 0], [1, "t", 2, 32, 254, 0], [1, "t", 4, 28, 254, 0], [1, "t", 4, 34, 258, 0], [1, "t", 0, 29, 260, 0], [1, "b", 2, 30, 261, 0], [1, "t", 0, 43, 262, 0], [1, "t", 2, 42, 263, 0], [1, "t", 4, 46, 264, 0], [1, "b", 1, 39, 265, 0], [1, "b", 1, 58, 267, 0], [1, "t", 2, 57, 268, 0], [1, "t", 4, 62, 270, 0], [1, "t", 5, 52, 273, 0], [1, "s", 1, 52, 269, 1], [1, "s", 1, 41, 272, 1], [1, "s", 2, 41, 274, 1], [1, "t", 2, 42, 268, 0], [1, "t", 0, 43, 268, 0], [1, "b", 1, 46, 272, 0], [1, "b", 1, 14, 265, 0], [1, "t", 2, 15, 266, 0], [1, "t", 4, 19, 264, 0], [1, "t", 4, 29, 263, 0], [1, "t", 4, 11, 269, 0], [1, "t", 1, 29, 271, 0], [1, "b", 2, 28, 272, 0], [1, "t", 2, 24, 267, 0], [1, "t", 2, 20, 279, 0], [1, "t", 0, 19, 278, 0], [1, "t", 3, 13, 278, 0], [1, "b", 0, 21, 284, 0], [1, "b", 0, 18, 289, 0], [1, "t", 2, 20, 283, 0], [1, "t", 2, 19, 290, 0], [1, "t", 4, 19, 283, 0], [1, "t", 4, 20, 290, 0], [1, "s", 1, 16, 285, 1], [1, "s", 1, 24, 288, 1], [1, "s", 2, 26, 287, 1], [1, "s", 2, 16, 278, 1], [1, "s", 1, 21, 268, 1], [1, "s", 2, 19, 268, 1], [1, "t", 0, 12, 294, 0], [1, "b", 1, 13, 295, 0], [1, "t", 3, 13, 291, 0], [1, "t", 3, 10, 299, 0], [1, "t", 4, 11, 287, 0], [1, "t", 4, 17, 298, 0], [1, "t", 1, 27, 294, 0], [1, "b", 2, 26, 295, 0], [1, "t", 3, 33, 297, 0], [1, "b", 1, 48, 278, 0], [1, "b", 0, 46, 280, 0], [1, "b", 2, 50, 280, 0], [1, "t", 0, 44, 282, 0], [1, "b", 1, 49, 283, 0], [1, "b", 0, 51, 278, 0], [1, "b", 3, 50, 279, 0], [1, "b", 3, 44, 284, 0], [1, "b", 0, 47, 284, 0], [1, "b", 2, 42, 283, 0], [1, "t", 4, 51, 277, 0], [1, "b", 1, 44, 286, 0], [1, "b", 2, 46, 286, 0], [1, "b", 1, 42, 285, 0], [1, "b", 3, 41, 286, 0], [1, "t", 5, 42, 287, 0], [1, "b", 1, 42, 278, 0], [1, "b", 2, 43, 279, 0], [1, "b", 0, 40, 280, 0], [1, "t", 4, 39, 283, 0], [1, "t", 4, 39, 279, 0], [1, "t", 5, 43, 277, 0], [1, "t", 5, 47, 287, 0], [1, "t", 4, 46, 277, 0], [1, "t", 4, 45, 290, 0], [1, "t", 4, 36, 285, 0], [1, "t", 3, 35, 284, 0], [1, "t", 3, 36, 272, 0], [1, "t", 4, 35, 271, 0], [1, "t", 1, 29, 279, 0], [1, "b", 1, 32, 277, 0], [1, "t", 3, 31, 278, 0], [1, "b", 2, 28, 280, 0], [1, "t", 4, 29, 286, 0], [1, "t", 5, 28, 275, 0], [1, "t", 3, 37, 292, 0], [1, "b", 1, 36, 291, 0], [1, "b", 0, 34, 298, 0], [1, "t", 4, 31, 292, 0], [1, "t", 4, 46, 295, 0], [1, "t", 4, 59, 287, 0], [1, "b", 1, 58, 286, 0], [1, "s", 1, 68, 284, 1], [1, "s", 2, 70, 286, 1], [1, "s", 0, 67, 284, 1], [1, "t", 3, 66, 283, 0], [1, "t", 1, 65, 282, 0], [1, "b", 1, 64, 288, 0], [1, "t", 3, 60, 293, 0], [1, "t", 1, 61, 294, 0], [1, "b", 1, 76, 294, 0], [1, "t", 5, 75, 295, 0], [1, "t", 5, 56, 293, 0], [1, "t", 5, 59, 281, 0], [1, "t", 5, 67, 291, 0], [1, "b", 0, 88, 293, 0], [1, "t", 2, 89, 292, 0], [1, "t", 2, 85, 286, 0], [1, "t", 4, 88, 289, 0], [1, "t", 4, 79, 287, 0], [1, "b", 1, 84, 285, 0], [1, "t", 3, 75, 284, 0], [1, "b", 0, 75, 278, 0], [1, "t", 3, 74, 277, 0], [1, "t", 4, 81, 276, 0], [1, "t", 2, 65, 276, 0], [1, "b", 1, 66, 275, 0], [1, "g", 0, 45, 261, 1], [1, "g", 1, 39, 258, 1], [1, "g", 0, 35, 250, 1], [1, "g", 2, 22, 247, 1], [1, "g", 2, 27, 227, 1], [1, "g", 2, 63, 218, 1], [1, "g", 1, 56, 224, 1], [1, "g", 0, 46, 231, 1], [1, "g", 1, 65, 240, 1], [1, "g", 2, 67, 238, 1], [1, "g", 2, 79, 232, 1], [1, "g", 2, 72, 253, 1], [1, "g", 2, 62, 264, 1], [1, "g", 2, 28, 267, 1], [1, "g", 2, 58, 274, 1], [1, "de", 2, 14, 182, 0], [1, "de", 2, 24, 182, 0], [1, "de", 0, 11, 185, 0], [1, "de", 0, 14, 194, 0], [1, "de", 1, 25, 196, 0], [1, "de", 3, 31, 183, 0], [1, "de", 0, 38, 181, 0], [1, "de", 2, 45, 186, 0], [1, "de", 1, 38, 191, 0], [1, "de", 0, 56, 181, 0], [1, "de", 1, 68, 182, 0], [1, "de", 2, 80, 181, 0], [1, "de", 3, 86, 187, 0], [1, "de", 0, 84, 193, 0], [1, "de", 1, 82, 201, 0], [1, "de", 2, 64, 191, 0], [1, "de", 2, 72, 200, 0], [1, "de", 3, 64, 201, 0], [1, "de", 2, 76, 209, 0], [1, "de", 3, 71, 212, 0], [1, "de", 1, 86, 214, 0], [1, "de", 0, 57, 208, 0], [1, "de", 0, 41, 203, 0], [1, "de", 1, 15, 206, 0], [1, "de", 2, 25, 209, 0], [1, "de", 3, 16, 218, 0], [1, "de", 3, 11, 227, 0], [1, "de", 0, 22, 229, 0], [1, "de", 1, 15, 239, 0], [1, "de", 2, 24, 238, 0], [1, "de", 3, 22, 246, 0], [1, "de", 3, 10, 253, 0], [1, "de", 1, 18, 258, 0], [1, "de", 1, 28, 261, 0], [1, "de", 1, 14, 267, 0], [1, "de", 0, 24, 268, 0], [1, "de", 0, 15, 278, 0], [1, "de", 2, 21, 279, 0], [1, "de", 2, 30, 272, 0], [1, "de", 2, 29, 281, 0], [1, "de", 2, 15, 284, 0], [1, "de", 3, 12, 291, 0], [1, "de", 3, 30, 287, 0], [1, "de", 3, 27, 293, 0], [1, "de", 0, 25, 296, 0], [1, "de", 0, 11, 298, 0], [1, "de", 0, 8, 286, 0], [1, "de", 2, 36, 299, 0], [1, "de", 2, 37, 280, 0], [1, "de", 3, 38, 291, 0], [1, "de", 1, 48, 287, 0], [1, "de", 1, 46, 277, 0], [1, "de", 1, 53, 278, 0], [1, "de", 3, 48, 295, 0], [1, "de", 0, 57, 294, 0], [1, "de", 1, 65, 290, 0], [1, "de", 1, 84, 292, 0], [1, "de", 2, 77, 295, 0], [1, "de", 2, 84, 287, 0], [1, "de", 0, 74, 279, 0], [1, "de", 3, 65, 274, 0], [1, "de", 2, 71, 267, 0], [1, "de", 2, 65, 261, 0], [1, "de", 2, 47, 264, 0], [1, "de", 3, 47, 258, 0], [1, "de", 3, 53, 251, 0], [1, "de", 2, 40, 253, 0], [1, "de", 0, 35, 244, 0], [1, "de", 0, 37, 233, 0], [1, "de", 3, 44, 226, 0], [1, "de", 2, 37, 219, 0], [1, "de", 2, 54, 234, 0], [1, "de", 1, 66, 234, 0], [1, "de", 2, 65, 241, 0], [1, "de", 0, 68, 249, 0], [1, "de", 3, 78, 257, 0], [1, "de", 2, 86, 253, 0], [1, "de", 2, 83, 245, 0], [1, "de", 1, 82, 238, 0], [1, "de", 3, 76, 235, 0], [1, "de", 2, 86, 232, 0], [1, "de", 0, 86, 224, 0], [1, "de", 2, 76, 226, 0], [1, "de", 2, 61, 228, 0], [1, "de", 2, 58, 217, 0], [1, "de", 0, 49, 217, 0], [1, "de", 19, 11, 179, 0], [1, "de", 20, 17, 180, 0], [1, "de", 22, 18, 181, 0], [1, "de", 19, 30, 184, 0], [1, "de", 19, 27, 187, 0], [1, "de", 19, 30, 195, 0], [1, "de", 19, 18, 192, 0], [1, "de", 19, 44, 182, 0], [1, "de", 19, 49, 182, 0], [1, "de", 19, 54, 182, 0], [1, "de", 19, 59, 183, 0], [1, "de", 19, 56, 186, 0], [1, "de", 19, 46, 188, 0], [1, "de", 19, 58, 193, 0], [1, "de", 19, 67, 187, 0], [1, "de", 19, 65, 192, 0], [1, "de", 19, 71, 180, 0], [1, "de", 19, 78, 187, 0], [1, "de", 19, 80, 194, 0], [1, "de", 19, 72, 193, 0], [1, "de", 19, 82, 182, 0], [1, "de", 19, 88, 185, 0], [1, "de", 19, 87, 189, 0], [1, "de", 19, 86, 197, 0], [1, "de", 19, 85, 203, 0], [1, "de", 19, 74, 200, 0], [1, "de", 19, 70, 202, 0], [1, "de", 19, 83, 199, 0], [1, "de", 19, 86, 208, 0], [1, "de", 19, 84, 214, 0], [1, "de", 19, 83, 211, 0], [1, "de", 19, 84, 217, 0], [1, "de", 19, 77, 210, 0], [1, "de", 19, 71, 210, 0], [1, "de", 19, 73, 213, 0], [1, "de", 19, 66, 207, 0], [1, "de", 19, 66, 204, 0], [1, "de", 19, 62, 209, 0], [1, "de", 19, 63, 201, 0], [1, "de", 19, 56, 205, 0], [1, "de", 19, 49, 199, 0], [1, "de", 19, 50, 205, 0], [1, "de", 19, 40, 197, 0], [1, "de", 19, 38, 198, 0], [1, "de", 19, 40, 208, 0], [1, "de", 19, 36, 204, 0], [1, "de", 19, 33, 204, 0], [1, "de", 19, 29, 202, 0], [1, "de", 19, 27, 200, 0], [1, "de", 19, 26, 193, 0], [1, "de", 19, 18, 201, 0], [1, "de", 19, 20, 199, 0], [1, "de", 19, 12, 196, 0], [1, "de", 19, 12, 204, 0], [1, "de", 19, 11, 201, 0], [1, "de", 19, 23, 208, 0], [1, "de", 19, 31, 214, 0], [1, "de", 19, 26, 215, 0], [1, "de", 19, 36, 217, 0], [1, "de", 19, 32, 223, 0], [1, "de", 19, 26, 223, 0], [1, "de", 19, 18, 218, 0], [1, "de", 19, 15, 215, 0], [1, "de", 19, 17, 212, 0], [1, "de", 19, 15, 224, 0], [1, "de", 19, 19, 229, 0], [1, "de", 19, 10, 230, 0], [1, "de", 19, 22, 240, 0], [1, "de", 19, 13, 238, 0], [1, "de", 19, 13, 243, 0], [1, "de", 19, 24, 244, 0], [1, "de", 19, 24, 250, 0], [1, "de", 19, 28, 253, 0], [1, "de", 19, 33, 255, 0], [1, "de", 19, 34, 260, 0], [1, "de", 19, 31, 260, 0], [1, "de", 19, 38, 267, 0], [1, "de", 19, 44, 264, 0], [1, "de", 19, 43, 261, 0], [1, "de", 19, 16, 257, 0], [1, "de", 19, 22, 258, 0], [1, "de", 19, 12, 253, 0], [1, "de", 19, 8, 242, 0], [1, "de", 19, 8, 255, 0], [1, "de", 19, 15, 264, 0], [1, "de", 19, 20, 265, 0], [1, "de", 19, 12, 271, 0], [1, "de", 19, 8, 272, 0], [1, "de", 19, 13, 277, 0], [1, "de", 19, 21, 277, 0], [1, "de", 19, 21, 281, 0], [1, "de", 19, 27, 282, 0], [1, "de", 19, 29, 278, 0], [1, "de", 19, 29, 273, 0], [1, "de", 19, 36, 271, 0], [1, "de", 19, 8, 278, 0], [1, "de", 19, 11, 286, 0], [1, "de", 19, 17, 291, 0], [1, "de", 19, 14, 294, 0], [1, "de", 19, 8, 292, 0], [1, "de", 19, 12, 300, 0], [1, "de", 19, 18, 298, 0], [1, "de", 19, 16, 301, 0], [1, "de", 19, 27, 296, 0], [1, "de", 19, 25, 292, 0], [1, "de", 19, 23, 301, 0], [1, "de", 19, 28, 301, 0], [1, "de", 19, 35, 297, 0], [1, "de", 19, 37, 301, 0], [1, "de", 19, 43, 301, 0], [1, "de", 19, 46, 294, 0], [1, "de", 19, 46, 288, 0], [1, "de", 19, 40, 287, 0], [1, "de", 19, 50, 301, 0], [1, "de", 19, 58, 301, 0], [1, "de", 19, 64, 301, 0], [1, "de", 19, 71, 301, 0], [1, "de", 19, 80, 301, 0], [1, "de", 19, 87, 301, 0], [1, "de", 19, 86, 294, 0], [1, "de", 19, 87, 290, 0], [1, "de", 19, 82, 286, 0], [1, "de", 19, 75, 285, 0], [1, "de", 19, 66, 292, 0], [1, "de", 19, 66, 288, 0], [1, "de", 19, 58, 288, 0], [1, "de", 19, 67, 282, 0], [1, "de", 19, 61, 281, 0], [1, "de", 19, 60, 295, 0], [1, "de", 19, 50, 282, 0], [1, "de", 19, 47, 283, 0], [1, "de", 19, 48, 281, 0], [1, "de", 19, 44, 277, 0], [1, "de", 19, 41, 282, 0], [1, "de", 19, 38, 281, 0], [1, "de", 19, 42, 288, 0], [1, "de", 19, 52, 281, 0], [1, "de", 19, 50, 275, 0], [1, "de", 19, 39, 277, 0], [1, "de", 19, 38, 284, 0], [1, "de", 19, 51, 285, 0], [1, "de", 19, 38, 278, 0], [1, "de", 19, 47, 272, 0], [1, "de", 19, 44, 267, 0], [1, "de", 19, 76, 280, 0], [1, "de", 19, 78, 272, 0], [1, "de", 19, 68, 275, 0], [1, "de", 19, 70, 265, 0], [1, "de", 19, 65, 263, 0], [1, "de", 19, 64, 262, 0], [1, "de", 19, 60, 268, 0], [1, "de", 19, 56, 266, 0], [1, "de", 19, 55, 260, 0], [1, "de", 19, 59, 258, 0], [1, "de", 19, 62, 255, 0], [1, "de", 19, 67, 253, 0], [1, "de", 19, 69, 256, 0], [1, "de", 19, 44, 253, 0], [1, "de", 19, 44, 250, 0], [1, "de", 19, 36, 245, 0], [1, "de", 19, 39, 239, 0], [1, "de", 19, 42, 234, 0], [1, "de", 19, 37, 235, 0], [1, "de", 19, 45, 226, 0], [1, "de", 19, 46, 222, 0], [1, "de", 19, 51, 218, 0], [1, "de", 19, 68, 218, 0], [1, "de", 19, 74, 224, 0], [1, "de", 19, 76, 218, 0], [1, "de", 19, 84, 221, 0], [1, "de", 19, 88, 223, 0], [1, "de", 19, 76, 230, 0], [1, "de", 19, 86, 234, 0], [1, "de", 19, 79, 237, 0], [1, "de", 19, 75, 243, 0], [1, "de", 19, 81, 245, 0], [1, "de", 19, 83, 247, 0], [1, "de", 19, 88, 247, 0], [1, "de", 19, 84, 254, 0], [1, "de", 19, 86, 251, 0], [1, "de", 19, 85, 260, 0], [1, "de", 19, 79, 260, 0], [1, "de", 19, 76, 251, 0], [1, "de", 19, 72, 251, 0], [1, "de", 19, 69, 251, 0], [1, "de", 19, 87, 266, 0], [1, "de", 19, 89, 270, 0], [1, "de", 19, 87, 271, 0], [1, "de", 19, 82, 277, 0], [1, "de", 19, 87, 284, 0], [1, "de", 19, 87, 237, 0], [1, "de", 19, 88, 179, 0], [1, "de", 19, 50, 191, 0], [1, "de", 19, 52, 221, 0], [1, "de", 19, 34, 234, 0], [1, "de", 19, 27, 233, 0], [1, "de", 19, 37, 293, 0], [1, "de", 29, 13, 181, 0], [1, "de", 29, 8, 180, 0], [1, "de", 30, 13, 186, 0], [1, "de", 31, 24, 183, 0], [1, "de", 32, 33, 185, 0], [1, "de", 32, 37, 182, 0], [1, "de", 29, 45, 183, 0], [1, "de", 30, 48, 183, 0], [1, "de", 30, 58, 181, 0], [1, "de", 30, 66, 188, 0], [1, "de", 30, 66, 182, 0], [1, "de", 29, 63, 196, 0], [1, "de", 29, 54, 194, 0], [1, "de", 30, 79, 189, 0], [1, "de", 30, 87, 182, 0], [1, "de", 30, 83, 185, 0], [1, "de", 29, 88, 189, 0], [1, "de", 29, 85, 202, 0], [1, "de", 31, 82, 203, 0], [1, "de", 32, 80, 201, 0], [1, "de", 32, 87, 209, 0], [1, "de", 32, 83, 214, 0], [1, "de", 30, 88, 220, 0], [1, "de", 30, 78, 229, 0], [1, "de", 30, 73, 223, 0], [1, "de", 29, 74, 217, 0], [1, "de", 29, 67, 217, 0], [1, "de", 30, 72, 208, 0], [1, "de", 30, 73, 199, 0], [1, "de", 30, 65, 207, 0], [1, "de", 29, 63, 210, 0], [1, "de", 29, 50, 204, 0], [1, "de", 30, 41, 205, 0], [1, "de", 29, 35, 205, 0], [1, "de", 30, 27, 202, 0], [1, "de", 30, 20, 201, 0], [1, "de", 29, 10, 203, 0], [1, "de", 29, 14, 196, 0], [1, "de", 29, 24, 187, 0], [1, "de", 29, 28, 223, 0], [1, "de", 29, 32, 212, 0], [1, "de", 30, 28, 214, 0], [1, "de", 31, 24, 218, 0], [1, "de", 29, 36, 219, 0], [1, "de", 29, 37, 217, 0], [1, "de", 29, 52, 217, 0], [1, "de", 29, 59, 217, 0], [1, "de", 29, 69, 231, 0], [1, "de", 29, 64, 242, 0], [1, "de", 30, 53, 253, 0], [1, "de", 30, 45, 250, 0], [1, "de", 30, 58, 261, 0], [1, "de", 30, 73, 276, 0], [1, "de", 30, 64, 276, 0], [1, "de", 30, 82, 285, 0], [1, "de", 30, 65, 293, 0], [1, "de", 30, 56, 288, 0], [1, "de", 30, 45, 296, 0], [1, "de", 30, 40, 288, 0], [1, "de", 30, 37, 283, 0], [1, "de", 30, 53, 280, 0], [1, "de", 30, 41, 277, 0], [1, "de", 29, 28, 296, 0], [1, "de", 29, 18, 292, 0], [1, "de", 29, 24, 284, 0], [1, "de", 30, 10, 295, 0], [1, "de", 30, 10, 286, 0], [1, "de", 30, 15, 279, 0], [1, "de", 30, 15, 269, 0], [1, "de", 30, 21, 259, 0], [1, "de", 30, 12, 256, 0], [1, "de", 30, 31, 245, 0], [1, "de", 30, 12, 240, 0], [1, "de", 30, 28, 235, 0], [1, "de", 30, 13, 226, 0], [1, "de", 30, 39, 231, 0], [1, "de", 30, 61, 226, 0], [1, "r", 96, 262, 0], [1, "r", 97, 262, 0], [1, "r", 98, 262, 0], [1, "r", 97, 270, 0], [1, "r", 97, 271, 0], [1, "r", 97, 272, 0], [1, "r", 97, 273, 0], [1, "r", 97, 274, 0], [1, "r", 97, 275, 0], [1, "r", 97, 276, 0], [1, "r", 97, 277, 0], [1, "r", 97, 278, 0], [1, "r", 98, 270, 0], [1, "r", 98, 271, 0], [1, "r", 98, 272, 0], [1, "r", 98, 273, 0], [1, "r", 98, 274, 0], [1, "r", 98, 275, 0], [1, "r", 98, 276, 0], [1, "r", 98, 277, 0], [1, "r", 98, 278, 0], [1, "r", 96, 283, 0], [1, "r", 97, 283, 0], [1, "r", 97, 284, 0], [1, "r", 97, 285, 0], [1, "r", 98, 283, 0], [1, "r", 98, 284, 0], [1, "r", 98, 285, 0], [1, "r", 96, 270, 0], [1, "r", 96, 271, 0], [1, "r", 96, 272, 0], [1, "r", 96, 273, 0], [1, "r", 96, 274, 0], [1, "r", 96, 275, 0], [1, "r", 96, 276, 0], [1, "r", 96, 277, 0], [1, "r", 96, 278, 0], [1, "r", 44, 248, 0], [1, "de", 16, 94, 290, 0], [1, "de", 16, 94, 252, 0], [1, "de", 16, 94, 228, 0], [1, "de", 17, 94, 200, 0], [1, "r", 95, 282, 1], [1, "r", 95, 281, 1], [1, "r", 94, 281, 1], [1, "r", 90, 281, 1], [1, "r", 91, 282, 1], [1, "r", 89, 281, 1], [1, "r", 85, 276, 1], [1, "r", 85, 277, 1], [1, "r", 86, 278, 1], [1, "p", 0, 85, 279, 1], [1, "r", 86, 279, 1], [1, "r", 87, 280, 1], [1, "r", 96, 281, 0], [1, "r", 97, 281, 0], [1, "r", 98, 281, 0], [1, "r", 98, 282, 0], [1, "r", 97, 282, 0], [1, "r", 96, 282, 0], [1, "r", 68, 261, 1], [1, "fo", 1, 94, 168, 0], [1, "fo", 2, 94, 151, 0], [1, "fo", 1, 94, 138, 0], [1, "fo", 1, 93, 124, 0], [1, "fo", 1, 94, 129, 0], [1, "fo", 1, 93, 113, 0], [1, "fo", 1, 94, 102, 0], [1, "fo", 1, 94, 93, 0], [1, "fo", 1, 93, 90, 0], [1, "fo", 1, 94, 79, 0], [1, "fo", 1, 94, 76, 0], [1, "fo", 1, 93, 70, 0], [1, "fo", 1, 93, 63, 0], [1, "fo", 1, 94, 53, 0], [1, "fo", 1, 93, 10, 0], [1, "fo", 1, 85, 8, 0], [1, "fo", 1, 94, 12, 0], [1, "fo", 1, 66, 13, 0], [1, "fo", 1, 69, 9, 0], [1, "fo", 2, 68, 14, 0], [1, "fo", 2, 66, 25, 0], [1, "fo", 2, 92, 9, 0], [1, "fo", 2, 94, 14, 0], [1, "fo", 2, 87, 9, 0], [1, "fo", 2, 71, 9, 0], [1, "fo", 2, 90, 12, 0], [1, "fo", 2, 91, 13, 0], [1, "fo", 1, 74, 12, 0], [1, "fo", 2, 72, 12, 0], [1, "fo", 2, 75, 13, 0], [1, "fo", 2, 74, 15, 0], [1, "fo", 2, 84, 12, 0], [1, "fo", 2, 81, 14, 0], [1, "fo", 1, 84, 13, 0], [1, "fo", 1, 84, 19, 0], [1, "fo", 1, 11, 9, 0], [1, "fo", 1, 7, 14, 0], [1, "fo", 1, 8, 22, 0], [1, "fo", 1, 7, 34, 0], [1, "fo", 1, 12, 24, 0], [1, "fo", 2, 8, 24, 0], [1, "fo", 2, 9, 21, 0], [1, "fo", 2, 31, 10, 0], [1, "fo", 2, 33, 27, 0], [1, "fo", 2, 9, 34, 0], [1, "fo", 2, 8, 19, 0], [1, "fo", 1, 14, 10, 0], [1, "fo", 2, 13, 9, 0], [1, "fo", 2, 15, 11, 0], [1, "fo", 2, 9, 9, 0], [1, "fo", 2, 9, 10, 0], [1, "fo", 2, 9, 15, 0], [1, "fo", 2, 10, 23, 0], [1, "fo", 2, 34, 29, 0], [1, "fo", 2, 27, 18, 0], [1, "fo", 2, 25, 21, 0], [1, "fo", 2, 20, 18, 0], [1, "fo", 2, 18, 21, 0], [1, "fo", 2, 29, 9, 0], [1, "fo", 2, 13, 14, 0], [1, "fo", 2, 9, 38, 0], [1, "fo", 2, 21, 39, 0], [1, "fo", 2, 84, 26, 0], [1, "fo", 2, 77, 25, 0], [1, "fo", 2, 86, 35, 0], [1, "fo", 1, 70, 35, 0], [1, "fo", 2, 72, 36, 0], [1, "fo", 2, 73, 31, 0], [1, "fo", 2, 89, 39, 0], [1, "fo", 2, 65, 40, 0], [1, "fo", 2, 92, 32, 0], [1, "fo", 2, 90, 28, 0], [1, "de", 22, 25, 266, 0], [1, "de", 22, 17, 206, 0], [1, "de", 19, 8, 184, 0], [1, "de", 19, 22, 183, 0], [1, "de", 19, 35, 188, 0], [1, "de", 19, 36, 192, 0], [1, "de", 19, 50, 277, 0], [1, "de", 19, 35, 279, 0], [1, "t", 4, 7, 178, 0], [1, "t", 1, 7, 179, 0], [1, "t", 3, 7, 180, 0], [1, "t", 2, 7, 181, 0], [1, "t", 5, 7, 182, 0], [1, "t", 4, 7, 183, 0], [1, "t", 3, 7, 184, 0], [1, "t", 4, 7, 185, 0], [1, "t", 2, 7, 186, 0], [1, "t", 1, 7, 187, 0], [1, "t", 4, 7, 188, 0], [1, "t", 3, 7, 189, 0], [1, "t", 5, 7, 190, 0], [1, "t", 1, 7, 191, 0], [1, "t", 3, 7, 192, 0], [1, "t", 4, 7, 193, 0], [1, "t", 3, 7, 194, 0], [1, "t", 5, 7, 195, 0], [1, "t", 2, 7, 196, 0], [1, "t", 4, 7, 197, 0], [1, "b", 2, 7, 198, 0], [1, "t", 4, 7, 199, 0], [1, "t", 2, 7, 200, 0], [1, "t", 5, 7, 201, 0], [1, "t", 2, 7, 202, 0], [1, "t", 4, 7, 203, 0], [1, "t", 2, 7, 204, 0], [1, "t", 5, 7, 205, 0], [1, "t", 2, 7, 206, 0], [1, "t", 1, 7, 207, 0], [1, "t", 4, 7, 208, 0], [1, "t", 3, 7, 209, 0], [1, "t", 1, 7, 210, 0], [1, "b", 0, 7, 211, 0], [1, "t", 3, 7, 212, 0], [1, "t", 4, 7, 213, 0], [1, "t", 3, 7, 214, 0], [1, "t", 5, 7, 215, 0], [1, "t", 5, 7, 216, 0], [1, "t", 3, 7, 217, 0], [1, "t", 1, 7, 218, 0], [1, "t", 4, 7, 219, 0], [1, "b", 2, 7, 220, 0], [1, "t", 1, 7, 221, 0], [1, "t", 2, 7, 222, 0], [1, "t", 4, 7, 223, 0], [1, "t", 3, 7, 224, 0], [1, "t", 1, 7, 225, 0], [1, "t", 4, 7, 226, 0], [1, "t", 2, 7, 227, 0], [1, "t", 5, 7, 228, 0], [1, "t", 3, 7, 229, 0], [1, "t", 1, 7, 230, 0], [1, "t", 4, 7, 231, 0], [1, "b", 2, 7, 232, 0], [1, "t", 5, 7, 233, 0], [1, "t", 1, 7, 234, 0], [1, "t", 3, 7, 235, 0], [1, "t", 4, 7, 236, 0], [1, "t", 2, 7, 237, 0], [1, "t", 5, 7, 238, 0], [1, "b", 3, 7, 239, 0], [1, "t", 2, 7, 240, 0], [1, "t", 1, 7, 241, 0], [1, "t", 2, 7, 242, 0], [1, "t", 4, 7, 243, 0], [1, "t", 3, 7, 244, 0], [1, "t", 4, 7, 245, 0], [1, "t", 1, 7, 246, 0], [1, "b", 0, 7, 247, 0], [1, "t", 3, 7, 248, 0], [1, "t", 5, 7, 249, 0], [1, "t", 2, 7, 250, 0], [1, "t", 1, 7, 251, 0], [1, "t", 4, 7, 252, 0], [1, "t", 3, 7, 253, 0], [1, "t", 5, 7, 254, 0], [1, "t", 1, 7, 255, 0], [1, "t", 4, 7, 256, 0], [1, "t", 1, 7, 257, 0], [1, "t", 2, 7, 258, 0], [1, "t", 5, 7, 260, 0], [1, "t", 3, 7, 259, 0], [1, "t", 1, 7, 261, 0], [1, "t", 3, 7, 262, 0], [1, "t", 4, 7, 263, 0], [1, "t", 1, 7, 264, 0], [1, "t", 2, 7, 265, 0], [1, "t", 5, 7, 266, 0], [1, "t", 2, 7, 267, 0], [1, "t", 2, 7, 269, 0], [1, "b", 2, 7, 268, 0], [1, "t", 4, 7, 270, 0], [1, "t", 1, 7, 271, 0], [1, "t", 5, 7, 272, 0], [1, "b", 2, 7, 273, 0], [1, "t", 4, 7, 274, 0], [1, "t", 2, 7, 275, 0], [1, "t", 5, 7, 276, 0], [1, "t", 5, 7, 277, 0], [1, "t", 2, 7, 278, 0], [1, "t", 1, 7, 279, 0], [1, "t", 4, 7, 280, 0], [1, "b", 1, 7, 281, 0], [1, "t", 3, 7, 282, 0], [1, "t", 4, 7, 283, 0], [1, "t", 1, 7, 284, 0], [1, "t", 3, 7, 285, 0], [1, "t", 5, 7, 286, 0], [1, "t", 4, 7, 288, 0], [1, "t", 2, 7, 287, 0], [1, "b", 0, 7, 289, 0], [1, "t", 4, 7, 290, 0], [1, "t", 2, 7, 291, 0], [1, "t", 5, 7, 292, 0], [1, "t", 3, 7, 293, 0], [1, "t", 1, 7, 294, 0], [1, "t", 4, 7, 295, 0], [1, "t", 3, 7, 296, 0], [1, "t", 1, 7, 297, 0], [1, "t", 4, 7, 298, 0], [1, "t", 2, 7, 299, 0], [1, "b", 0, 7, 300, 0], [1, "t", 2, 7, 301, 0], [1, "r", 196, 271, 0], [1, "r", 199, 274, 0], [1, "r", 167, 238, 0], [1, "r", 171, 240, 0], [1, "r", 189, 207, 0], [1, "r", 192, 209, 0], [1, "r", 198, 271, 0], [1, "r", 197, 271, 0], [1, "r", 198, 272, 0], [1, "r", 197, 272, 0], [1, "r", 196, 272, 0], [1, "r", 195, 272, 0], [1, "r", 199, 272, 0], [1, "r", 199, 273, 0], [1, "r", 198, 273, 0], [1, "r", 197, 273, 0], [1, "r", 196, 273, 0], [1, "r", 198, 274, 0], [1, "r", 197, 274, 0], [1, "r", 195, 273, 0], [1, "r", 196, 274, 0], [1, "r", 198, 275, 0], [1, "r", 197, 275, 0], [1, "r", 200, 274, 0], [1, "r", 200, 273, 0], [1, "r", 199, 275, 0], [1, "plm", 2, 200, 272, 0], [1, "plm", 1, 195, 271, 0], [1, "plm", 0, 199, 268, 0], [1, "plm", 0, 193, 277, 0], [1, "plm", 1, 199, 276, 0], [1, "s", 1, 200, 275, 1], [1, "s", 1, 194, 272, 1], [1, "s", 2, 193, 270, 1], [1, "g", 2, 193, 273, 1], [1, "g", 2, 201, 267, 1], [1, "m", 2, 220, 298, 1], [1, "m", 1, 219, 292, 1], [1, "m", 1, 214, 297, 1], [1, "r", 168, 238, 0], [1, "r", 169, 238, 0], [1, "r", 170, 238, 0], [1, "r", 171, 239, 0], [1, "r", 170, 239, 0], [1, "r", 169, 239, 0], [1, "r", 168, 239, 0], [1, "r", 167, 239, 0], [1, "r", 166, 239, 0], [1, "r", 166, 240, 0], [1, "r", 167, 240, 0], [1, "r", 168, 240, 0], [1, "r", 169, 240, 0], [1, "r", 170, 240, 0], [1, "r", 168, 241, 0], [1, "r", 169, 241, 0], [1, "r", 170, 241, 0], [1, "r", 171, 241, 0], [1, "plm", 2, 171, 238, 0], [1, "plm", 1, 166, 238, 0], [1, "plm", 0, 167, 237, 0], [1, "plm", 0, 171, 242, 0], [1, "plm", 0, 165, 243, 0], [1, "plm", 0, 171, 235, 0], [1, "plm", 0, 174, 241, 0], [1, "s", 1, 165, 239, 1], [1, "s", 1, 172, 241, 1], [1, "s", 0, 170, 237, 1], [1, "s", 1, 171, 237, 1], [1, "s", 2, 174, 236, 1], [1, "s", 2, 162, 241, 1], [1, "s", 2, 170, 246, 1], [1, "s", 2, 167, 235, 1], [1, "s", 2, 176, 243, 1], [1, "r", 190, 207, 0], [1, "r", 191, 207, 0], [1, "r", 192, 208, 0], [1, "r", 191, 208, 0], [1, "r", 190, 208, 0], [1, "r", 189, 208, 0], [1, "r", 188, 208, 0], [1, "r", 189, 209, 0], [1, "r", 190, 209, 0], [1, "r", 191, 209, 0], [1, "r", 188, 209, 0], [1, "r", 190, 210, 0], [1, "r", 191, 210, 0], [1, "r", 192, 210, 0], [1, "plm", 2, 189, 210, 0], [1, "plm", 2, 192, 205, 0], [1, "plm", 1, 192, 207, 0], [1, "plm", 0, 193, 210, 0], [1, "plm", 0, 187, 208, 0], [1, "plm", 0, 197, 206, 0], [1, "plm", 0, 191, 213, 0], [1, "plm", 0, 190, 204, 0], [1, "s", 1, 188, 207, 1], [1, "s", 1, 190, 211, 1], [1, "s", 2, 188, 213, 1], [1, "s", 2, 187, 205, 1], [1, "s", 0, 194, 210, 1], [1, "s", 0, 198, 207, 1], [1, "s", 1, 193, 204, 1], [1, "s", 1, 193, 213, 1], [1, "s", 2, 198, 212, 1], [1, "s", 2, 182, 208, 1], [1, "s", 1, 204, 271, 1], [1, "s", 0, 203, 272, 1], [1, "s", 0, 189, 275, 1], [1, "s", 0, 195, 265, 1], [1, "s", 2, 196, 264, 1], [1, "s", 2, 186, 274, 1], [1, "s", 2, 197, 280, 1], [1, "s", 0, 217, 282, 1], [1, "s", 1, 214, 285, 1], [1, "s", 1, 214, 274, 1], [1, "s", 1, 203, 282, 1], [1, "s", 1, 205, 290, 1], [1, "s", 0, 207, 292, 1], [1, "s", 0, 197, 297, 1], [1, "s", 0, 184, 287, 1], [1, "s", 2, 213, 289, 1], [1, "s", 2, 196, 294, 1], [1, "s", 2, 187, 286, 1], [1, "s", 1, 192, 289, 1], [1, "s", 1, 189, 299, 1], [1, "s", 0, 213, 273, 1], [1, "g", 2, 212, 278, 1], [1, "g", 1, 200, 288, 1], [1, "g", 2, 215, 265, 1], [1, "g", 2, 183, 281, 1], [1, "s", 0, 178, 295, 1], [1, "s", 0, 167, 281, 1], [1, "s", 0, 175, 263, 1], [1, "s", 1, 176, 293, 1], [1, "s", 1, 163, 285, 1], [1, "s", 1, 177, 266, 1], [1, "s", 1, 161, 272, 1], [1, "s", 2, 185, 261, 1], [1, "c", 0, 217, 270, 1], [1, "c", 0, 220, 278, 1], [1, "c", 0, 217, 283, 1], [1, "c", 0, 220, 287, 1], [1, "c", 0, 210, 292, 1], [1, "c", 0, 205, 297, 1], [1, "c", 0, 198, 293, 1], [1, "c", 0, 208, 283, 1], [1, "c", 0, 197, 283, 1], [1, "c", 0, 190, 289, 1], [1, "c", 0, 183, 296, 1], [1, "c", 0, 189, 291, 1], [1, "c", 0, 178, 284, 1], [1, "c", 0, 208, 265, 1], [1, "c", 0, 169, 292, 1], [1, "s", 1, 158, 294, 1], [1, "s", 0, 151, 297, 1], [1, "s", 0, 147, 288, 1], [1, "c", 0, 150, 289, 1], [1, "c", 0, 160, 282, 1], [1, "c", 0, 146, 274, 1], [1, "c", 0, 167, 264, 1], [1, "c", 0, 165, 267, 1], [1, "g", 0, 189, 257, 1], [1, "g", 1, 197, 248, 1], [1, "g", 2, 170, 255, 1], [1, "g", 2, 212, 234, 1], [1, "g", 2, 189, 230, 1], [1, "g", 2, 173, 221, 1], [1, "g", 1, 210, 214, 1], [1, "s", 1, 153, 257, 1], [1, "s", 0, 158, 255, 1], [1, "s", 0, 184, 248, 1], [1, "s", 0, 212, 254, 1], [1, "s", 1, 203, 249, 1], [1, "s", 2, 204, 252, 1], [1, "s", 2, 187, 248, 1], [1, "s", 0, 206, 237, 1], [1, "s", 0, 196, 227, 1], [1, "s", 0, 181, 228, 1], [1, "s", 1, 199, 227, 1], [1, "s", 1, 208, 238, 1], [1, "s", 1, 179, 222, 1], [1, "s", 1, 213, 223, 1], [1, "s", 2, 182, 222, 1], [1, "s", 2, 211, 226, 1], [1, "s", 2, 214, 214, 1], [1, "s", 2, 201, 216, 1], [1, "s", 2, 215, 192, 1], [1, "s", 1, 210, 198, 1], [1, "s", 1, 198, 196, 1], [1, "s", 2, 208, 199, 1], [1, "s", 2, 187, 192, 1], [1, "s", 1, 179, 198, 1], [1, "s", 2, 177, 197, 1], [1, "s", 0, 164, 197, 1], [1, "s", 1, 159, 193, 1], [1, "s", 1, 149, 206, 1], [1, "s", 1, 164, 209, 1], [1, "s", 2, 165, 210, 1], [1, "s", 2, 161, 191, 1], [1, "s", 1, 162, 224, 1], [1, "s", 0, 150, 236, 1], [1, "s", 1, 149, 239, 1], [1, "s", 2, 153, 236, 1], [1, "s", 2, 160, 223, 1], [1, "s", 2, 151, 207, 1], [1, "s", 2, 147, 220, 1], [1, "s", 2, 145, 265, 1], [1, "s", 2, 145, 285, 1], [1, "c", 0, 152, 266, 1], [1, "c", 0, 185, 271, 1], [1, "c", 0, 210, 254, 1], [1, "c", 0, 209, 256, 1], [1, "c", 0, 198, 254, 1], [1, "c", 0, 213, 246, 1], [1, "c", 0, 216, 237, 1], [1, "c", 0, 204, 240, 1], [1, "c", 0, 196, 234, 1], [1, "c", 0, 188, 238, 1], [1, "c", 0, 182, 245, 1], [1, "c", 0, 173, 252, 1], [1, "c", 0, 153, 248, 1], [1, "c", 0, 158, 233, 1], [1, "c", 0, 147, 230, 1], [1, "c", 0, 151, 224, 1], [1, "c", 0, 157, 214, 1], [1, "c", 0, 167, 219, 1], [1, "c", 0, 171, 208, 1], [1, "c", 0, 179, 219, 1], [1, "c", 0, 176, 229, 1], [1, "c", 0, 195, 221, 1], [1, "c", 0, 207, 222, 1], [1, "c", 0, 214, 207, 1], [1, "c", 0, 205, 210, 1], [1, "c", 0, 204, 196, 1], [1, "c", 0, 214, 196, 1], [1, "c", 0, 190, 199, 1], [1, "c", 0, 184, 194, 1], [1, "c", 0, 172, 199, 1], [1, "c", 0, 161, 204, 1], [1, "c", 0, 157, 196, 1], [1, "c", 0, 149, 194, 1], [1, "c", 0, 147, 208, 1], [1, "c", 0, 207, 274, 1], [1, "c", 0, 217, 258, 1], [1, "c", 0, 201, 260, 1], [1, "c", 0, 178, 276, 1], [1, "c", 0, 187, 265, 1], [1, "s", 1, 204, 260, 1], [1, "s", 1, 216, 260, 1], [1, "s", 1, 187, 255, 1], [1, "s", 2, 189, 254, 1], [1, "s", 2, 212, 257, 1], [1, "s", 2, 182, 286, 1], [1, "s", 2, 169, 280, 1], [1, "s", 2, 217, 273, 1], [1, "s", 2, 215, 282, 1], [1, "s", 2, 172, 263, 1], [1, "s", 2, 176, 267, 1], [1, "s", 2, 215, 251, 1], [1, "fod", 1, 221, 282, 0], [1, "fod", 1, 222, 284, 0], [1, "fod", 1, 221, 290, 0], [1, "fod", 1, 222, 294, 0], [1, "fod", 1, 221, 297, 0], [1, "fod", 1, 223, 298, 0], [1, "fod", 1, 222, 300, 0], [1, "fod", 1, 218, 301, 0], [1, "fod", 1, 217, 299, 0], [1, "fod", 1, 215, 301, 0], [1, "fod", 1, 212, 300, 0], [1, "fod", 1, 206, 300, 0], [1, "fod", 1, 209, 301, 0], [1, "fod", 1, 204, 299, 0], [1, "fod", 1, 202, 301, 0], [1, "fod", 1, 199, 301, 0], [1, "fod", 1, 222, 282, 0], [1, "fod", 1, 207, 301, 0], [1, "fod", 1, 197, 301, 0], [1, "fod", 1, 215, 291, 0], [1, "fod", 1, 216, 286, 0], [1, "fod", 1, 214, 292, 0], [1, "fod", 1, 210, 289, 0], [1, "fod", 1, 208, 294, 0], [1, "fod", 1, 210, 298, 0], [1, "fod", 1, 212, 281, 0], [1, "fod", 1, 219, 278, 0], [1, "fod", 1, 219, 282, 0], [1, "fod", 1, 205, 286, 0], [1, "fod", 1, 202, 293, 0], [1, "fod", 1, 198, 295, 0], [1, "fod", 2, 213, 282, 0], [1, "fod", 2, 213, 291, 0], [1, "fod", 2, 216, 289, 0], [1, "fod", 2, 219, 289, 0], [1, "fod", 2, 218, 285, 0], [1, "fod", 2, 220, 283, 0], [1, "fod", 2, 211, 283, 0], [1, "fod", 2, 215, 281, 0], [1, "fod", 2, 217, 279, 0], [1, "fod", 2, 208, 290, 0], [1, "fod", 2, 211, 296, 0], [1, "fod", 2, 215, 294, 0], [1, "fod", 2, 212, 298, 0], [1, "fod", 2, 203, 294, 0], [1, "fod", 2, 204, 288, 0], [1, "fod", 2, 200, 294, 0], [1, "fod", 2, 198, 297, 0], [1, "fod", 2, 202, 299, 0], [1, "fod", 2, 200, 299, 0], [1, "fod", 2, 220, 300, 0], [1, "fod", 2, 220, 295, 0], [1, "fod", 2, 220, 292, 0], [1, "fod", 2, 219, 287, 0], [1, "fod", 2, 211, 288, 0], [1, "fod", 2, 213, 287, 0], [1, "fod", 2, 211, 289, 0], [1, "fod", 2, 212, 290, 0], [1, "fod", 2, 195, 296, 0], [1, "fod", 2, 196, 299, 0], [1, "fod", 2, 194, 300, 0], [1, "fod", 2, 195, 300, 0], [1, "fod", 2, 213, 279, 0], [1, "fod", 2, 211, 279, 0], [1, "fod", 0, 218, 290, 0], [1, "fod", 0, 212, 294, 0], [1, "fod", 1, 213, 295, 0], [1, "fod", 1, 217, 292, 0], [1, "fod", 1, 218, 288, 0], [1, "fod", 1, 210, 295, 0], [1, "fod", 1, 213, 292, 0], [1, "fod", 1, 212, 289, 0], [1, "fod", 1, 205, 295, 0], [1, "fod", 2, 206, 296, 0], [1, "fod", 2, 208, 296, 0], [1, "fod", 2, 221, 288, 0], [1, "fod", 2, 209, 299, 0], [1, "fod", 2, 211, 291, 0], [1, "fod", 1, 203, 275, 0], [1, "fod", 1, 204, 272, 0], [1, "fod", 2, 205, 273, 0], [1, "fod", 2, 204, 276, 0], [1, "fod", 2, 202, 276, 0], [1, "fod", 2, 199, 277, 0], [1, "fod", 2, 202, 273, 0], [1, "fod", 2, 199, 270, 0], [1, "fod", 2, 194, 274, 0], [1, "fod", 2, 194, 277, 0], [1, "fod", 1, 192, 274, 0], [1, "fod", 1, 194, 267, 0], [1, "fod", 2, 194, 265, 0], [1, "fod", 2, 190, 272, 0], [1, "fod", 2, 191, 275, 0], [1, "fod", 2, 195, 274, 0], [1, "fod", 2, 200, 271, 0], [1, "fod", 1, 168, 243, 0], [1, "fod", 1, 175, 240, 0], [1, "fod", 1, 169, 234, 0], [1, "fod", 1, 162, 235, 0], [1, "fod", 2, 169, 236, 0], [1, "fod", 2, 171, 234, 0], [1, "fod", 2, 165, 238, 0], [1, "fod", 2, 173, 241, 0], [1, "fod", 2, 174, 238, 0], [1, "fod", 2, 176, 240, 0], [1, "fod", 2, 169, 244, 0], [1, "fod", 2, 166, 243, 0], [1, "fod", 2, 162, 236, 0], [1, "fod", 2, 164, 235, 0], [1, "fod", 2, 162, 233, 0], [1, "fod", 2, 163, 236, 0], [1, "fod", 2, 174, 242, 0], [1, "fod", 2, 171, 243, 0], [1, "fod", 1, 194, 206, 0], [1, "fod", 1, 190, 214, 0], [1, "fod", 1, 186, 206, 0], [1, "fod", 1, 197, 207, 0], [1, "fod", 2, 196, 208, 0], [1, "fod", 2, 198, 206, 0], [1, "fod", 2, 198, 208, 0], [1, "fod", 2, 194, 204, 0], [1, "fod", 2, 187, 206, 0], [1, "fod", 2, 186, 204, 0], [1, "fod", 2, 189, 214, 0], [1, "fod", 2, 189, 213, 0], [1, "fod", 2, 193, 215, 0], [1, "fod", 2, 194, 214, 0], [1, "fod", 2, 187, 215, 0], [1, "fod", 2, 193, 209, 0], [1, "fod", 2, 189, 211, 0], [1, "fod", 2, 187, 209, 0], [1, "fod", 2, 187, 207, 0], [1, "fod", 2, 191, 205, 0], [1, "fod", 2, 189, 203, 0], [1, "cs", 2, 224, 176, 1], [1, "cs", 0, 224, 177, 1], [1, "cs", 3, 224, 178, 1], [1, "cs", 2, 224, 179, 1], [1, "cs", 1, 224, 180, 1], [1, "cs", 2, 224, 181, 1], [1, "cs", 0, 224, 182, 1], [1, "cs", 2, 224, 183, 1], [1, "cs", 0, 224, 184, 1], [1, "cs", 3, 224, 185, 1], [1, "cs", 2, 224, 186, 1], [1, "cs", 0, 224, 187, 1], [1, "cs", 2, 224, 188, 1], [1, "cs", 0, 224, 189, 1], [1, "cs", 1, 224, 190, 1], [1, "cs", 2, 224, 191, 1], [1, "cs", 0, 224, 192, 1], [1, "cs", 2, 224, 193, 1], [1, "cs", 2, 224, 194, 1], [1, "cs", 1, 224, 195, 1], [1, "cs", 2, 224, 196, 1], [1, "cs", 0, 224, 197, 1], [1, "cs", 3, 224, 198, 1], [1, "cs", 2, 224, 199, 1], [1, "cs", 1, 224, 200, 1], [1, "cs", 2, 224, 201, 1], [1, "cs", 3, 224, 202, 1], [1, "cs", 0, 224, 203, 1], [1, "cs", 1, 224, 204, 1], [1, "cs", 2, 224, 205, 1], [1, "cs", 0, 224, 206, 1], [1, "cs", 1, 224, 207, 1], [1, "cs", 3, 224, 208, 1], [1, "cs", 2, 224, 209, 1], [1, "cs", 2, 224, 210, 1], [1, "cs", 0, 223, 211, 1], [1, "cs", 1, 224, 211, 1], [1, "cs", 2, 224, 212, 1], [1, "cs", 2, 224, 213, 1], [1, "cs", 1, 224, 214, 1], [1, "cs", 3, 224, 215, 1], [1, "cs", 0, 224, 216, 1], [1, "cs", 1, 224, 217, 1], [1, "cs", 2, 224, 218, 1], [1, "cs", 3, 224, 219, 1], [1, "cs", 0, 223, 215, 1], [1, "cs", 2, 223, 214, 1], [1, "cs", 2, 223, 212, 1], [1, "cs", 2, 223, 216, 1], [1, "cs", 3, 223, 217, 1], [1, "cs", 0, 223, 218, 1], [1, "cs", 0, 224, 220, 1], [1, "cs", 0, 224, 222, 1], [1, "cs", 0, 223, 209, 1], [1, "cs", 0, 223, 205, 1], [1, "cs", 2, 224, 221, 1], [1, "cs", 2, 223, 219, 1], [1, "cs", 2, 223, 220, 1], [1, "cs", 2, 223, 213, 1], [1, "cs", 2, 223, 210, 1], [1, "cs", 1, 223, 178, 1], [1, "cs", 3, 223, 179, 1], [1, "cs", 3, 223, 181, 1], [1, "cs", 3, 223, 182, 1], [1, "cs", 1, 223, 185, 1], [1, "cs", 2, 223, 184, 1], [1, "cs", 2, 223, 186, 1], [1, "cs", 0, 223, 180, 1], [1, "cs", 0, 223, 183, 1], [1, "cs", 2, 223, 187, 1], [1, "cs", 1, 223, 188, 1], [1, "cs", 2, 223, 189, 1], [1, "cs", 2, 223, 190, 1], [1, "cs", 3, 223, 191, 1], [1, "cs", 1, 223, 192, 1], [1, "cs", 2, 223, 193, 1], [1, "cs", 2, 223, 194, 1], [1, "cs", 3, 223, 195, 1], [1, "cs", 1, 223, 196, 1], [1, "cs", 2, 223, 197, 1], [1, "cs", 2, 223, 199, 1], [1, "cs", 2, 223, 198, 1], [1, "cs", 0, 223, 200, 1], [1, "cs", 2, 223, 201, 1], [1, "cs", 0, 223, 202, 1], [1, "cs", 3, 223, 203, 1], [1, "cs", 3, 223, 204, 1], [1, "cs", 3, 223, 206, 1], [1, "cs", 3, 223, 207, 1], [1, "cs", 3, 223, 208, 1], [1, "cs", 2, 223, 221, 1], [1, "cs", 2, 223, 222, 1], [1, "cs", 0, 223, 224, 1], [1, "cs", 0, 224, 228, 1], [1, "cs", 0, 224, 230, 1], [1, "cs", 0, 223, 234, 1], [1, "cs", 2, 223, 223, 1], [1, "cs", 2, 224, 223, 1], [1, "cs", 2, 224, 224, 1], [1, "cs", 2, 224, 225, 1], [1, "cs", 1, 223, 226, 1], [1, "cs", 1, 224, 231, 1], [1, "cs", 1, 223, 232, 1], [1, "cs", 3, 223, 225, 1], [1, "cs", 3, 224, 226, 1], [1, "cs", 3, 223, 227, 1], [1, "cs", 3, 224, 227, 1], [1, "cs", 3, 223, 229, 1], [1, "cs", 3, 223, 228, 1], [1, "cs", 3, 224, 229, 1], [1, "cs", 3, 223, 230, 1], [1, "cs", 3, 223, 231, 1], [1, "cs", 3, 224, 232, 1], [1, "cs", 3, 224, 233, 1], [1, "cs", 3, 223, 233, 1], [1, "cs", 3, 224, 234, 1], [1, "cs", 3, 224, 235, 1], [1, "cs", 3, 223, 235, 1], [1, "cs", 1, 224, 236, 1], [1, "cs", 2, 223, 236, 1], [1, "cs", 2, 223, 237, 1], [1, "cs", 3, 224, 237, 1], [1, "cs", 3, 224, 238, 1], [1, "cs", 0, 224, 239, 1], [1, "cs", 1, 223, 241, 1], [1, "cs", 0, 224, 243, 1], [1, "cs", 0, 223, 245, 1], [1, "cs", 0, 224, 247, 1], [1, "cs", 2, 223, 240, 1], [1, "cs", 2, 223, 239, 1], [1, "cs", 2, 224, 240, 1], [1, "cs", 2, 224, 241, 1], [1, "cs", 2, 224, 242, 1], [1, "cs", 2, 223, 242, 1], [1, "cs", 2, 223, 243, 1], [1, "cs", 2, 223, 244, 1], [1, "cs", 2, 224, 244, 1], [1, "cs", 2, 224, 245, 1], [1, "cs", 2, 224, 246, 1], [1, "cs", 3, 223, 238, 1], [1, "cs", 3, 223, 246, 1], [1, "cs", 2, 223, 247, 1], [1, "cs", 1, 223, 249, 1], [1, "cs", 1, 224, 253, 1], [1, "cs", 1, 223, 256, 1], [1, "cs", 0, 223, 254, 1], [1, "cs", 0, 224, 250, 1], [1, "cs", 3, 223, 248, 1], [1, "cs", 3, 223, 250, 1], [1, "cs", 3, 223, 252, 1], [1, "cs", 3, 223, 255, 1], [1, "cs", 3, 223, 257, 1], [1, "cs", 2, 224, 248, 1], [1, "cs", 2, 224, 249, 1], [1, "cs", 2, 223, 251, 1], [1, "cs", 2, 224, 251, 1], [1, "cs", 2, 224, 252, 1], [1, "cs", 2, 223, 253, 1], [1, "cs", 2, 224, 254, 1], [1, "cs", 2, 224, 255, 1], [1, "cs", 2, 224, 256, 1], [1, "cs", 2, 224, 257, 1], [1, "cs", 0, 224, 258, 1], [1, "cs", 0, 223, 261, 1], [1, "cs", 0, 224, 263, 1], [1, "cs", 0, 224, 266, 1], [1, "cs", 0, 224, 272, 1], [1, "cs", 0, 223, 270, 1], [1, "cs", 0, 223, 275, 1], [1, "cs", 1, 223, 259, 1], [1, "cs", 1, 223, 264, 1], [1, "cs", 1, 223, 268, 1], [1, "cs", 1, 224, 274, 1], [1, "cs", 2, 223, 258, 1], [1, "cs", 2, 223, 260, 1], [1, "cs", 2, 223, 263, 1], [1, "cs", 2, 223, 265, 1], [1, "cs", 2, 223, 267, 1], [1, "cs", 2, 223, 271, 1], [1, "cs", 2, 223, 273, 1], [1, "cs", 3, 223, 262, 1], [1, "cs", 3, 223, 266, 1], [1, "cs", 3, 223, 269, 1], [1, "cs", 3, 223, 272, 1], [1, "cs", 3, 223, 274, 1], [1, "cs", 3, 224, 275, 1], [1, "cs", 3, 224, 273, 1], [1, "cs", 3, 224, 271, 1], [1, "cs", 3, 224, 270, 1], [1, "cs", 3, 224, 269, 1], [1, "cs", 3, 224, 268, 1], [1, "cs", 3, 224, 267, 1], [1, "cs", 3, 224, 265, 1], [1, "cs", 3, 224, 264, 1], [1, "cs", 3, 224, 262, 1], [1, "cs", 3, 224, 261, 1], [1, "cs", 3, 224, 260, 1], [1, "cs", 3, 224, 259, 1], [1, "cs", 2, 223, 276, 1], [1, "cs", 1, 224, 276, 1], [1, "cs", 1, 224, 280, 1], [1, "cs", 1, 223, 281, 1], [1, "cs", 1, 224, 286, 1], [1, "cs", 0, 223, 280, 1], [1, "cs", 0, 223, 284, 1], [1, "cs", 0, 224, 288, 1], [1, "cs", 0, 224, 279, 1], [1, "cs", 2, 223, 277, 1], [1, "cs", 2, 224, 277, 1], [1, "cs", 2, 224, 278, 1], [1, "cs", 2, 224, 281, 1], [1, "cs", 2, 224, 283, 1], [1, "cs", 2, 224, 282, 1], [1, "cs", 2, 224, 284, 1], [1, "cs", 2, 224, 285, 1], [1, "cs", 2, 224, 287, 1], [1, "cs", 2, 223, 287, 1], [1, "cs", 2, 223, 285, 1], [1, "cs", 2, 223, 283, 1], [1, "cs", 2, 223, 279, 1], [1, "cs", 3, 223, 278, 1], [1, "cs", 3, 223, 282, 1], [1, "cs", 3, 223, 286, 1], [1, "cs", 3, 223, 289, 1], [1, "cs", 3, 224, 289, 1], [1, "cs", 2, 223, 288, 1], [1, "cs", 2, 224, 290, 1], [1, "cs", 1, 223, 290, 1], [1, "cs", 0, 224, 292, 1], [1, "cs", 0, 223, 294, 1], [1, "cs", 0, 224, 297, 1], [1, "cs", 0, 223, 299, 1], [1, "cs", 2, 223, 291, 1], [1, "cs", 2, 224, 291, 1], [1, "cs", 2, 223, 292, 1], [1, "cs", 2, 223, 293, 1], [1, "cs", 2, 224, 293, 1], [1, "cs", 2, 224, 294, 1], [1, "cs", 1, 224, 295, 1], [1, "cs", 2, 223, 295, 1], [1, "cs", 2, 223, 296, 1], [1, "cs", 2, 224, 296, 1], [1, "cs", 2, 223, 297, 1], [1, "cs", 2, 223, 298, 1], [1, "cs", 2, 224, 298, 1], [1, "cs", 2, 224, 299, 1], [1, "cs", 2, 223, 300, 1], [1, "cs", 1, 224, 300, 1], [1, "cs", 0, 223, 301, 1], [1, "cs", 0, 224, 302, 1], [1, "cs", 0, 224, 304, 1], [1, "cs", 3, 224, 301, 1], [1, "cs", 3, 224, 303, 1], [1, "cs", 0, 221, 303, 1], [1, "cs", 0, 219, 304, 1], [1, "cs", 1, 222, 304, 1], [1, "cs", 1, 222, 302, 1], [1, "cs", 2, 223, 302, 1], [1, "cs", 2, 223, 303, 1], [1, "cs", 2, 222, 303, 1], [1, "cs", 2, 223, 304, 1], [1, "cs", 2, 221, 304, 1], [1, "cs", 2, 220, 304, 1], [1, "cs", 2, 220, 303, 1], [1, "cs", 2, 220, 302, 1], [1, "cs", 2, 221, 302, 1], [1, "cs", 2, 219, 303, 1], [1, "cs", 0, 217, 302, 1], [1, "cs", 0, 215, 304, 1], [1, "cs", 0, 214, 302, 1], [1, "cs", 1, 218, 302, 1], [1, "cs", 1, 217, 304, 1], [1, "cs", 1, 215, 302, 1], [1, "cs", 2, 219, 302, 1], [1, "cs", 2, 218, 303, 1], [1, "cs", 2, 218, 304, 1], [1, "cs", 2, 217, 303, 1], [1, "cs", 2, 216, 304, 1], [1, "cs", 2, 215, 303, 1], [1, "cs", 2, 216, 303, 1], [1, "cs", 2, 216, 302, 1], [1, "cs", 2, 214, 303, 1], [1, "cs", 2, 214, 304, 1], [1, "cs", 0, 212, 302, 1], [1, "cs", 0, 210, 303, 1], [1, "cs", 0, 212, 304, 1], [1, "cs", 0, 208, 304, 1], [1, "cs", 1, 210, 302, 1], [1, "cs", 1, 208, 303, 1], [1, "cs", 2, 213, 302, 1], [1, "cs", 2, 213, 303, 1], [1, "cs", 2, 213, 304, 1], [1, "cs", 2, 212, 303, 1], [1, "cs", 2, 211, 304, 1], [1, "cs", 2, 211, 303, 1], [1, "cs", 2, 211, 302, 1], [1, "cs", 2, 209, 302, 1], [1, "cs", 2, 209, 303, 1], [1, "cs", 2, 209, 304, 1], [1, "cs", 2, 210, 304, 1], [1, "cs", 2, 208, 302, 1], [1, "cs", 0, 206, 303, 1], [1, "cs", 0, 203, 304, 1], [1, "cs", 0, 200, 303, 1], [1, "cs", 0, 199, 304, 1], [1, "cs", 0, 195, 304, 1], [1, "cs", 0, 191, 303, 1], [1, "cs", 0, 193, 304, 1], [1, "cs", 0, 189, 304, 1], [1, "cs", 1, 204, 303, 1], [1, "cs", 0, 197, 302, 1], [1, "cs", 0, 202, 302, 1], [1, "cs", 0, 188, 302, 1], [1, "cs", 0, 194, 302, 1], [1, "cs", 1, 197, 303, 1], [1, "cs", 1, 201, 304, 1], [1, "cs", 1, 192, 302, 1], [1, "cs", 1, 189, 303, 1], [1, "cs", 1, 205, 302, 1], [1, "cs", 1, 188, 304, 1], [1, "cs", 2, 207, 302, 1], [1, "cs", 2, 207, 303, 1], [1, "cs", 2, 207, 304, 1], [1, "cs", 2, 206, 304, 1], [1, "cs", 2, 206, 302, 1], [1, "cs", 2, 205, 303, 1], [1, "cs", 2, 204, 304, 1], [1, "cs", 2, 205, 304, 1], [1, "cs", 2, 204, 302, 1], [1, "cs", 2, 203, 302, 1], [1, "cs", 2, 203, 303, 1], [1, "cs", 2, 202, 303, 1], [1, "cs", 2, 201, 303, 1], [1, "cs", 2, 201, 302, 1], [1, "cs", 2, 200, 302, 1], [1, "cs", 2, 199, 302, 1], [1, "cs", 2, 198, 303, 1], [1, "cs", 2, 198, 302, 1], [1, "cs", 2, 199, 303, 1], [1, "cs", 2, 200, 304, 1], [1, "cs", 2, 202, 304, 1], [1, "cs", 2, 197, 304, 1], [1, "cs", 2, 198, 304, 1], [1, "cs", 2, 196, 304, 1], [1, "cs", 2, 196, 303, 1], [1, "cs", 2, 196, 302, 1], [1, "cs", 2, 195, 302, 1], [1, "cs", 2, 195, 303, 1], [1, "cs", 2, 194, 303, 1], [1, "cs", 2, 194, 304, 1], [1, "cs", 2, 193, 303, 1], [1, "cs", 2, 193, 302, 1], [1, "cs", 2, 192, 303, 1], [1, "cs", 2, 192, 304, 1], [1, "cs", 2, 191, 304, 1], [1, "cs", 2, 190, 304, 1], [1, "cs", 2, 190, 303, 1], [1, "cs", 2, 189, 302, 1], [1, "cs", 2, 190, 302, 1], [1, "cs", 2, 191, 302, 1], [1, "cs", 2, 188, 303, 1], [1, "cs", 0, 186, 303, 1], [1, "cs", 0, 183, 304, 1], [1, "cs", 0, 184, 302, 1], [1, "cs", 0, 181, 302, 1], [1, "cs", 0, 176, 302, 1], [1, "cs", 0, 178, 303, 1], [1, "cs", 0, 173, 304, 1], [1, "cs", 0, 170, 303, 1], [1, "cs", 0, 172, 302, 1], [1, "cs", 1, 182, 303, 1], [1, "cs", 1, 178, 304, 1], [1, "cs", 1, 175, 304, 1], [1, "cs", 1, 173, 302, 1], [1, "cs", 1, 185, 304, 1], [1, "cs", 1, 169, 304, 1], [1, "cs", 3, 187, 304, 1], [1, "cs", 3, 186, 304, 1], [1, "cs", 3, 187, 303, 1], [1, "cs", 3, 187, 302, 1], [1, "cs", 3, 186, 302, 1], [1, "cs", 3, 185, 302, 1], [1, "cs", 3, 185, 303, 1], [1, "cs", 3, 184, 303, 1], [1, "cs", 3, 183, 303, 1], [1, "cs", 3, 183, 302, 1], [1, "cs", 3, 182, 302, 1], [1, "cs", 3, 184, 304, 1], [1, "cs", 3, 182, 304, 1], [1, "cs", 3, 181, 304, 1], [1, "cs", 3, 179, 304, 1], [1, "cs", 3, 180, 304, 1], [1, "cs", 3, 181, 303, 1], [1, "cs", 3, 180, 303, 1], [1, "cs", 3, 179, 303, 1], [1, "cs", 3, 180, 302, 1], [1, "cs", 3, 179, 302, 1], [1, "cs", 3, 178, 302, 1], [1, "cs", 3, 177, 302, 1], [1, "cs", 3, 177, 304, 1], [1, "cs", 3, 177, 303, 1], [1, "cs", 3, 176, 303, 1], [1, "cs", 3, 176, 304, 1], [1, "cs", 3, 174, 304, 1], [1, "cs", 3, 175, 303, 1], [1, "cs", 3, 174, 303, 1], [1, "cs", 3, 173, 303, 1], [1, "cs", 3, 172, 303, 1], [1, "cs", 3, 171, 303, 1], [1, "cs", 3, 170, 304, 1], [1, "cs", 3, 171, 304, 1], [1, "cs", 3, 172, 304, 1], [1, "cs", 3, 174, 302, 1], [1, "cs", 3, 175, 302, 1], [1, "cs", 3, 171, 302, 1], [1, "cs", 3, 170, 302, 1], [1, "cs", 3, 169, 302, 1], [1, "cs", 3, 169, 303, 1], [1, "cs", 0, 168, 302, 1], [1, "cs", 0, 166, 303, 1], [1, "cs", 0, 163, 304, 1], [1, "cs", 0, 161, 302, 1], [1, "cs", 0, 159, 303, 1], [1, "cs", 0, 152, 304, 1], [1, "cs", 0, 155, 303, 1], [1, "cs", 1, 164, 303, 1], [1, "cs", 1, 162, 303, 1], [1, "cs", 1, 158, 304, 1], [1, "cs", 1, 156, 302, 1], [1, "cs", 1, 153, 302, 1], [1, "cs", 1, 154, 304, 1], [1, "cs", 2, 168, 304, 1], [1, "cs", 2, 168, 303, 1], [1, "cs", 2, 167, 303, 1], [1, "cs", 2, 167, 304, 1], [1, "cs", 2, 166, 304, 1], [1, "cs", 2, 165, 304, 1], [1, "cs", 2, 164, 304, 1], [1, "cs", 2, 165, 303, 1], [1, "cs", 2, 167, 302, 1], [1, "cs", 2, 166, 302, 1], [1, "cs", 2, 165, 302, 1], [1, "cs", 2, 164, 302, 1], [1, "cs", 2, 163, 302, 1], [1, "cs", 2, 162, 302, 1], [1, "cs", 2, 163, 303, 1], [1, "cs", 2, 162, 304, 1], [1, "cs", 2, 160, 304, 1], [1, "cs", 2, 159, 304, 1], [1, "cs", 2, 161, 304, 1], [1, "cs", 2, 161, 303, 1], [1, "cs", 2, 160, 303, 1], [1, "cs", 2, 160, 302, 1], [1, "cs", 2, 158, 302, 1], [1, "cs", 2, 159, 302, 1], [1, "cs", 2, 157, 302, 1], [1, "cs", 2, 156, 303, 1], [1, "cs", 2, 157, 303, 1], [1, "cs", 2, 158, 303, 1], [1, "cs", 2, 157, 304, 1], [1, "cs", 2, 156, 304, 1], [1, "cs", 2, 155, 304, 1], [1, "cs", 2, 153, 304, 1], [1, "cs", 2, 153, 303, 1], [1, "cs", 2, 154, 303, 1], [1, "cs", 2, 154, 302, 1], [1, "cs", 2, 155, 302, 1], [1, "cs", 2, 152, 303, 1], [1, "cs", 2, 152, 302, 1], [1, "cs", 0, 151, 302, 1], [1, "cs", 0, 149, 303, 1], [1, "cs", 0, 145, 304, 1], [1, "cs", 0, 147, 302, 1], [1, "cs", 0, 143, 303, 1], [1, "cs", 0, 141, 303, 1], [1, "cs", 1, 147, 304, 1], [1, "cs", 1, 145, 302, 1], [1, "cs", 1, 142, 302, 1], [1, "cs", 1, 150, 304, 1], [1, "cs", 2, 151, 304, 1], [1, "cs", 2, 151, 303, 1], [1, "cs", 2, 150, 303, 1], [1, "cs", 2, 150, 302, 1], [1, "cs", 2, 148, 302, 1], [1, "cs", 2, 146, 302, 1], [1, "cs", 2, 144, 302, 1], [1, "cs", 2, 141, 302, 1], [1, "cs", 2, 141, 304, 1], [1, "cs", 2, 142, 304, 1], [1, "cs", 2, 142, 303, 1], [1, "cs", 2, 143, 304, 1], [1, "cs", 2, 144, 304, 1], [1, "cs", 2, 144, 303, 1], [1, "cs", 2, 148, 304, 1], [1, "cs", 2, 148, 303, 1], [1, "cs", 2, 146, 303, 1], [1, "cs", 2, 145, 303, 1], [1, "cs", 2, 147, 303, 1], [1, "cs", 2, 146, 304, 1], [1, "cs", 2, 149, 304, 1], [1, "cs", 3, 149, 302, 1], [1, "cs", 3, 143, 302, 1], [1, "cs", 0, 139, 304, 1], [1, "cs", 0, 138, 302, 1], [1, "cs", 1, 139, 302, 1], [1, "cs", 2, 140, 302, 1], [1, "cs", 2, 140, 303, 1], [1, "cs", 2, 139, 303, 1], [1, "cs", 2, 138, 303, 1], [1, "cs", 2, 138, 304, 1], [1, "cs", 2, 140, 304, 1], [1, "cs", 0, 137, 304, 1], [1, "cs", 0, 135, 303, 1], [1, "cs", 0, 133, 304, 1], [1, "cs", 1, 135, 304, 1], [1, "cs", 1, 136, 302, 1], [1, "cs", 2, 137, 302, 1], [1, "cs", 2, 136, 303, 1], [1, "cs", 2, 137, 303, 1], [1, "cs", 2, 136, 304, 1], [1, "cs", 2, 134, 304, 1], [1, "cs", 2, 134, 303, 1], [1, "cs", 2, 133, 303, 1], [1, "cs", 2, 132, 304, 1], [1, "cs", 0, 131, 302, 1], [1, "cs", 0, 134, 302, 1], [1, "cs", 0, 129, 304, 1], [1, "cs", 1, 130, 303, 1], [1, "cs", 1, 132, 302, 1], [1, "cs", 2, 135, 302, 1], [1, "cs", 2, 133, 302, 1], [1, "cs", 2, 132, 303, 1], [1, "cs", 2, 131, 303, 1], [1, "cs", 2, 130, 304, 1], [1, "cs", 2, 131, 304, 1], [1, "cs", 2, 128, 304, 1], [1, "cs", 2, 129, 303, 1], [1, "cs", 2, 130, 302, 1], [1, "cs", 3, 127, 304, 1], [1, "cs", 2, 132, 301, 1], [1, "cs", 2, 133, 301, 1], [1, "cs", 2, 134, 301, 1], [1, "cs", 2, 135, 301, 1], [1, "cs", 3, 131, 301, 1], [1, "cs", 3, 136, 301, 1], [1, "cs", 3, 136, 178, 1], [1, "cs", 0, 136, 183, 1], [1, "cs", 2, 136, 182, 1], [1, "cs", 1, 136, 181, 1], [1, "cs", 0, 136, 179, 1], [1, "cs", 3, 136, 180, 1], [1, "cs", 2, 135, 183, 1], [1, "cs", 1, 135, 182, 1], [1, "cs", 3, 135, 180, 1], [1, "cs", 0, 134, 183, 1], [1, "cs", 2, 133, 183, 1], [1, "cs", 3, 133, 182, 1], [1, "cs", 1, 132, 183, 1], [1, "cs", 3, 131, 183, 1], [1, "cs", 2, 135, 181, 1], [1, "cs", 2, 134, 182, 1], [1, "cs", 3, 134, 181, 1], [1, "fod", 0, 213, 301, 0], [1, "fod", 0, 204, 301, 0], [1, "fod", 1, 196, 288, 0], [1, "fod", 1, 198, 283, 0], [1, "fod", 1, 190, 288, 0], [1, "fod", 1, 189, 296, 0], [1, "fod", 1, 193, 293, 0], [1, "fod", 1, 183, 292, 0], [1, "fod", 1, 186, 287, 0], [1, "fod", 1, 190, 290, 0], [1, "fod", 1, 218, 271, 0], [1, "fod", 1, 220, 266, 0], [1, "fod", 1, 211, 268, 0], [1, "fod", 1, 210, 274, 0], [1, "fod", 1, 205, 263, 0], [1, "fod", 1, 216, 258, 0], [1, "fod", 2, 201, 294, 0], [1, "fod", 2, 190, 296, 0], [1, "fod", 2, 188, 299, 0], [1, "fod", 2, 186, 297, 0], [1, "fod", 2, 188, 296, 0], [1, "fod", 2, 189, 291, 0], [1, "fod", 2, 189, 286, 0], [1, "fod", 2, 191, 286, 0], [1, "fod", 2, 197, 286, 0], [1, "fod", 2, 195, 290, 0], [1, "fod", 2, 186, 288, 0], [1, "fod", 2, 184, 290, 0], [1, "fod", 2, 183, 293, 0], [1, "fod", 2, 198, 286, 0], [1, "fod", 2, 196, 283, 0], [1, "fod", 2, 196, 281, 0], [1, "fod", 2, 201, 280, 0], [1, "fod", 2, 205, 287, 0], [1, "fod", 2, 209, 283, 0], [1, "fod", 2, 212, 280, 0], [1, "fod", 2, 209, 277, 0], [1, "fod", 2, 217, 278, 0], [1, "fod", 2, 219, 275, 0], [1, "fod", 2, 220, 271, 0], [1, "fod", 2, 220, 267, 0], [1, "fod", 2, 217, 265, 0], [1, "fod", 2, 213, 267, 0], [1, "fod", 2, 208, 264, 0], [1, "fod", 2, 206, 261, 0], [1, "fod", 2, 203, 265, 0], [1, "fod", 2, 204, 270, 0], [1, "fod", 2, 196, 267, 0], [1, "fod", 2, 214, 261, 0], [1, "fod", 2, 211, 260, 0], [1, "fod", 2, 218, 256, 0], [1, "fod", 2, 219, 262, 0], [1, "fod", 2, 220, 253, 0], [1, "fod", 2, 211, 257, 0], [1, "la", 3, 198, 27, 1], [1, "la", 3, 201, 30, 1], [1, "la", 3, 200, 32, 1], [1, "la", 3, 198, 33, 1], [1, "la", 3, 196, 33, 1], [1, "la", 3, 194, 32, 1], [1, "la", 3, 194, 28, 1], [1, "la", 0, 200, 28, 1], [1, "la", 0, 193, 30, 1], [1, "la", 3, 196, 27, 1], [1, "la", 3, 199, 30, 1], [1, "la", 3, 197, 29, 1], [1, "la", 3, 195, 30, 1], [1, "la", 3, 197, 31, 1], [1, "la", 2, 201, 33, 1], [1, "la", 4, 202, 34, 1], [1, "la", 4, 202, 35, 1], [1, "la", 4, 203, 36, 1], [1, "la", 4, 204, 37, 1], [1, "la", 2, 205, 38, 1], [1, "la", 5, 205, 39, 1], [1, "la", 5, 205, 40, 1], [1, "la", 2, 206, 41, 1], [1, "la", 1, 207, 42, 1], [1, "la", 1, 205, 41, 1], [1, "la", 4, 208, 43, 1], [1, "la", 4, 209, 43, 1], [1, "la", 1, 210, 43, 1], [1, "la", 2, 211, 43, 1], [1, "la", 5, 212, 43, 1], [1, "la", 4, 213, 44, 1], [1, "la", 3, 223, 54, 1], [1, "la", 3, 221, 53, 1], [1, "la", 3, 219, 53, 1], [1, "la", 4, 218, 52, 1], [1, "la", 4, 217, 51, 1], [1, "la", 4, 216, 51, 1], [1, "la", 1, 215, 50, 1], [1, "la", 4, 212, 46, 1], [1, "la", 1, 210, 44, 1], [1, "la", 3, 206, 50, 1], [1, "re", 0, 217, 24, 1], [1, "re", 0, 207, 16, 1], [1, "de", 44, 54, 14, 0], [1, "de", 44, 53, 13, 0], [1, "de", 44, 51, 16, 0], [1, "de", 44, 49, 13, 0], [1, "de", 44, 48, 14, 0], [1, "de", 21, 78, 293, 0], [1, "cs", 0, 221, 8, 1], [1, "cs", 0, 224, 9, 1], [1, "cs", 1, 223, 8, 1], [1, "cs", 2, 224, 8, 1], [1, "cs", 2, 222, 8, 1], [1, "cs", 0, 224, 6, 1], [1, "cs", 0, 222, 5, 1], [1, "cs", 0, 219, 7, 1], [1, "cs", 1, 220, 5, 1], [1, "cs", 1, 217, 7, 1], [1, "cs", 2, 224, 5, 1], [1, "cs", 2, 223, 5, 1], [1, "cs", 2, 224, 7, 1], [1, "cs", 2, 223, 7, 1], [1, "cs", 2, 223, 6, 1], [1, "cs", 2, 222, 6, 1], [1, "cs", 2, 222, 7, 1], [1, "cs", 2, 221, 7, 1], [1, "cs", 2, 221, 6, 1], [1, "cs", 2, 221, 5, 1], [1, "cs", 2, 220, 6, 1], [1, "cs", 2, 220, 7, 1], [1, "cs", 2, 220, 8, 1], [1, "cs", 2, 219, 8, 1], [1, "cs", 2, 219, 6, 1], [1, "cs", 2, 219, 5, 1], [1, "cs", 0, 218, 5, 1], [1, "cs", 0, 216, 8, 1], [1, "cs", 2, 218, 8, 1], [1, "cs", 2, 217, 8, 1], [1, "cs", 2, 218, 7, 1], [1, "cs", 2, 218, 6, 1], [1, "cs", 2, 217, 6, 1], [1, "cs", 2, 217, 5, 1], [1, "cs", 1, 215, 6, 1], [1, "cs", 1, 213, 5, 1], [1, "cs", 0, 214, 6, 1], [1, "cs", 0, 216, 5, 1], [1, "cs", 0, 213, 8, 1], [1, "cs", 0, 211, 7, 1], [1, "cs", 0, 209, 5, 1], [1, "cs", 0, 208, 7, 1], [1, "cs", 0, 207, 8, 1], [1, "cs", 2, 216, 6, 1], [1, "cs", 2, 216, 7, 1], [1, "cs", 2, 215, 7, 1], [1, "cs", 2, 215, 8, 1], [1, "cs", 2, 214, 8, 1], [1, "cs", 2, 214, 7, 1], [1, "cs", 2, 215, 5, 1], [1, "cs", 2, 214, 5, 1], [1, "cs", 2, 213, 6, 1], [1, "cs", 2, 213, 7, 1], [1, "cs", 2, 212, 7, 1], [1, "cs", 1, 211, 5, 1], [1, "cs", 1, 209, 8, 1], [1, "cs", 2, 212, 8, 1], [1, "cs", 2, 211, 8, 1], [1, "cs", 2, 210, 8, 1], [1, "cs", 2, 209, 7, 1], [1, "cs", 2, 210, 7, 1], [1, "cs", 2, 210, 6, 1], [1, "cs", 2, 212, 6, 1], [1, "cs", 2, 212, 5, 1], [1, "cs", 2, 211, 6, 1], [1, "cs", 2, 210, 5, 1], [1, "cs", 2, 209, 6, 1], [1, "cs", 2, 208, 6, 1], [1, "cs", 2, 208, 5, 1], [1, "cs", 2, 207, 7, 1], [1, "cs", 2, 207, 6, 1], [1, "cs", 2, 207, 5, 1], [1, "cs", 2, 206, 5, 1], [1, "cs", 2, 208, 8, 1], [1, "cs", 2, 206, 6, 1], [1, "cs", 0, 204, 8, 1], [1, "cs", 0, 205, 6, 1], [1, "cs", 0, 203, 5, 1], [1, "cs", 0, 202, 7, 1], [1, "cs", 0, 199, 8, 1], [1, "cs", 0, 200, 6, 1], [1, "cs", 0, 197, 6, 1], [1, "cs", 0, 195, 8, 1], [1, "cs", 0, 194, 6, 1], [1, "cs", 1, 202, 8, 1], [1, "cs", 1, 206, 7, 1], [1, "cs", 1, 201, 5, 1], [1, "cs", 1, 197, 8, 1], [1, "cs", 1, 192, 7, 1], [1, "cs", 1, 195, 5, 1], [1, "cs", 2, 205, 7, 1], [1, "cs", 2, 205, 8, 1], [1, "cs", 2, 206, 8, 1], [1, "cs", 2, 204, 7, 1], [1, "cs", 2, 204, 6, 1], [1, "cs", 2, 204, 5, 1], [1, "cs", 2, 205, 5, 1], [1, "cs", 2, 203, 6, 1], [1, "cs", 2, 203, 7, 1], [1, "cs", 2, 203, 8, 1], [1, "cs", 2, 201, 8, 1], [1, "cs", 2, 200, 8, 1], [1, "cs", 2, 200, 7, 1], [1, "cs", 2, 201, 7, 1], [1, "cs", 2, 201, 6, 1], [1, "cs", 2, 202, 5, 1], [1, "cs", 2, 202, 6, 1], [1, "cs", 2, 200, 5, 1], [1, "cs", 2, 199, 5, 1], [1, "cs", 2, 197, 5, 1], [1, "cs", 2, 196, 5, 1], [1, "cs", 2, 198, 5, 1], [1, "cs", 2, 198, 6, 1], [1, "cs", 2, 199, 6, 1], [1, "cs", 2, 199, 7, 1], [1, "cs", 2, 198, 7, 1], [1, "cs", 2, 198, 8, 1], [1, "cs", 2, 197, 7, 1], [1, "cs", 2, 196, 7, 1], [1, "cs", 2, 196, 8, 1], [1, "cs", 2, 196, 6, 1], [1, "cs", 2, 195, 6, 1], [1, "cs", 2, 195, 7, 1], [1, "cs", 2, 194, 7, 1], [1, "cs", 2, 193, 8, 1], [1, "cs", 2, 194, 8, 1], [1, "cs", 2, 193, 7, 1], [1, "cs", 2, 193, 6, 1], [1, "cs", 2, 193, 5, 1], [1, "cs", 2, 194, 5, 1], [1, "cs", 0, 192, 5, 1], [1, "cs", 0, 191, 8, 1], [1, "cs", 0, 190, 6, 1], [1, "cs", 0, 188, 7, 1], [1, "cs", 0, 186, 8, 1], [1, "cs", 0, 186, 5, 1], [1, "cs", 0, 184, 7, 1], [1, "cs", 0, 182, 8, 1], [1, "cs", 0, 181, 6, 1], [1, "cs", 1, 189, 8, 1], [1, "cs", 1, 183, 8, 1], [1, "cs", 1, 188, 5, 1], [1, "cs", 1, 185, 6, 1], [1, "cs", 1, 180, 7, 1], [1, "cs", 1, 183, 5, 1], [1, "cs", 1, 178, 8, 1], [1, "cs", 1, 177, 6, 1], [1, "cs", 1, 173, 7, 1], [1, "cs", 1, 171, 7, 1], [1, "cs", 0, 177, 8, 1], [1, "cs", 0, 175, 7, 1], [1, "cs", 0, 179, 5, 1], [1, "cs", 0, 174, 5, 1], [1, "cs", 0, 176, 5, 1], [1, "cs", 0, 172, 8, 1], [1, "cs", 0, 170, 8, 1], [1, "cs", 0, 169, 6, 1], [1, "cs", 2, 192, 6, 1], [1, "cs", 2, 192, 8, 1], [1, "cs", 2, 191, 7, 1], [1, "cs", 2, 191, 6, 1], [1, "cs", 2, 191, 5, 1], [1, "cs", 2, 190, 5, 1], [1, "cs", 2, 189, 5, 1], [1, "cs", 2, 189, 6, 1], [1, "cs", 2, 189, 7, 1], [1, "cs", 2, 190, 7, 1], [1, "cs", 2, 190, 8, 1], [1, "cs", 2, 188, 8, 1], [1, "cs", 2, 187, 8, 1], [1, "cs", 2, 187, 7, 1], [1, "cs", 2, 187, 6, 1], [1, "cs", 2, 188, 6, 1], [1, "cs", 2, 187, 5, 1], [1, "cs", 2, 186, 6, 1], [1, "cs", 2, 186, 7, 1], [1, "cs", 2, 185, 7, 1], [1, "cs", 2, 185, 8, 1], [1, "cs", 2, 184, 8, 1], [1, "cs", 2, 183, 7, 1], [1, "cs", 2, 183, 6, 1], [1, "cs", 2, 184, 6, 1], [1, "cs", 2, 184, 5, 1], [1, "cs", 2, 185, 5, 1], [1, "cs", 2, 182, 6, 1], [1, "cs", 2, 182, 7, 1], [1, "cs", 2, 181, 7, 1], [1, "cs", 2, 181, 8, 1], [1, "cs", 2, 180, 8, 1], [1, "cs", 2, 179, 8, 1], [1, "cs", 2, 182, 5, 1], [1, "cs", 2, 181, 5, 1], [1, "cs", 2, 180, 5, 1], [1, "cs", 2, 180, 6, 1], [1, "cs", 2, 179, 6, 1], [1, "cs", 2, 179, 7, 1], [1, "cs", 2, 178, 7, 1], [1, "cs", 2, 178, 6, 1], [1, "cs", 2, 178, 5, 1], [1, "cs", 2, 177, 5, 1], [1, "cs", 2, 177, 7, 1], [1, "cs", 2, 176, 7, 1], [1, "cs", 2, 176, 6, 1], [1, "cs", 2, 175, 6, 1], [1, "cs", 2, 175, 5, 1], [1, "cs", 2, 176, 8, 1], [1, "cs", 2, 174, 8, 1], [1, "cs", 2, 175, 8, 1], [1, "cs", 2, 173, 8, 1], [1, "cs", 2, 174, 7, 1], [1, "cs", 2, 173, 6, 1], [1, "cs", 2, 174, 6, 1], [1, "cs", 2, 172, 5, 1], [1, "cs", 2, 173, 5, 1], [1, "cs", 2, 172, 6, 1], [1, "cs", 2, 172, 7, 1], [1, "cs", 2, 171, 8, 1], [1, "cs", 2, 170, 7, 1], [1, "cs", 2, 170, 6, 1], [1, "cs", 2, 170, 5, 1], [1, "cs", 2, 171, 5, 1], [1, "cs", 2, 171, 6, 1], [1, "cs", 2, 169, 5, 1], [1, "cs", 2, 169, 7, 1], [1, "cs", 2, 169, 8, 1], [1, "cs", 1, 168, 7, 1], [1, "cs", 1, 166, 5, 1], [1, "cs", 1, 164, 7, 1], [1, "cs", 1, 160, 7, 1], [1, "cs", 1, 156, 8, 1], [1, "cs", 0, 166, 8, 1], [1, "cs", 0, 168, 5, 1], [1, "cs", 0, 164, 6, 1], [1, "cs", 0, 162, 7, 1], [1, "cs", 0, 158, 8, 1], [1, "cs", 0, 157, 6, 1], [1, "cs", 0, 161, 5, 1], [1, "cs", 0, 159, 5, 1], [1, "cs", 0, 155, 7, 1], [1, "cs", 0, 154, 5, 1], [1, "cs", 0, 151, 7, 1], [1, "cs", 1, 153, 8, 1], [1, "cs", 1, 151, 5, 1], [1, "cs", 2, 168, 6, 1], [1, "cs", 2, 168, 8, 1], [1, "cs", 2, 167, 8, 1], [1, "cs", 2, 167, 7, 1], [1, "cs", 2, 167, 6, 1], [1, "cs", 2, 167, 5, 1], [1, "cs", 2, 166, 6, 1], [1, "cs", 2, 166, 7, 1], [1, "cs", 2, 165, 7, 1], [1, "cs", 2, 165, 6, 1], [1, "cs", 2, 165, 5, 1], [1, "cs", 2, 164, 5, 1], [1, "cs", 2, 163, 5, 1], [1, "cs", 2, 162, 5, 1], [1, "cs", 2, 162, 6, 1], [1, "cs", 2, 163, 6, 1], [1, "cs", 2, 163, 7, 1], [1, "cs", 2, 163, 8, 1], [1, "cs", 2, 164, 8, 1], [1, "cs", 2, 165, 8, 1], [1, "cs", 2, 161, 8, 1], [1, "cs", 2, 162, 8, 1], [1, "cs", 2, 160, 8, 1], [1, "cs", 2, 159, 8, 1], [1, "cs", 2, 159, 7, 1], [1, "cs", 2, 159, 6, 1], [1, "cs", 2, 160, 5, 1], [1, "cs", 2, 160, 6, 1], [1, "cs", 2, 161, 6, 1], [1, "cs", 2, 161, 7, 1], [1, "cs", 2, 157, 7, 1], [1, "cs", 2, 158, 7, 1], [1, "cs", 2, 158, 6, 1], [1, "cs", 2, 158, 5, 1], [1, "cs", 2, 155, 5, 1], [1, "cs", 2, 155, 6, 1], [1, "cs", 2, 156, 6, 1], [1, "cs", 2, 156, 7, 1], [1, "cs", 2, 157, 8, 1], [1, "cs", 2, 155, 8, 1], [1, "cs", 2, 154, 8, 1], [1, "cs", 2, 154, 7, 1], [1, "cs", 2, 154, 6, 1], [1, "cs", 2, 152, 8, 1], [1, "cs", 2, 153, 7, 1], [1, "cs", 2, 153, 6, 1], [1, "cs", 2, 153, 5, 1], [1, "cs", 2, 152, 5, 1], [1, "cs", 2, 152, 6, 1], [1, "cs", 2, 152, 7, 1], [1, "cs", 2, 151, 6, 1], [1, "cs", 2, 157, 5, 1], [1, "cs", 1, 156, 5, 1], [1, "cs", 0, 150, 5, 1], [1, "cs", 0, 149, 7, 1], [1, "cs", 0, 147, 8, 1], [1, "cs", 0, 146, 5, 1], [1, "cs", 0, 144, 7, 1], [1, "cs", 0, 142, 5, 1], [1, "cs", 1, 147, 6, 1], [1, "cs", 1, 145, 8, 1], [1, "cs", 1, 144, 5, 1], [1, "cs", 2, 148, 5, 1], [1, "cs", 2, 149, 5, 1], [1, "cs", 2, 150, 6, 1], [1, "cs", 2, 150, 8, 1], [1, "cs", 2, 151, 8, 1], [1, "cs", 2, 150, 7, 1], [1, "cs", 2, 149, 8, 1], [1, "cs", 2, 148, 8, 1], [1, "cs", 2, 149, 6, 1], [1, "cs", 2, 148, 6, 1], [1, "cs", 2, 148, 7, 1], [1, "cs", 2, 147, 7, 1], [1, "cs", 2, 147, 5, 1], [1, "cs", 2, 146, 6, 1], [1, "cs", 2, 146, 7, 1], [1, "cs", 2, 146, 8, 1], [1, "cs", 2, 145, 7, 1], [1, "cs", 2, 145, 6, 1], [1, "cs", 2, 145, 5, 1], [1, "cs", 2, 144, 6, 1], [1, "cs", 2, 143, 5, 1], [1, "cs", 2, 143, 6, 1], [1, "cs", 2, 142, 6, 1], [1, "cs", 2, 141, 5, 1], [1, "cs", 2, 224, 10, 1], [1, "cs", 0, 224, 11, 1], [1, "cs", 0, 224, 13, 1], [1, "cs", 0, 224, 17, 1], [1, "cs", 0, 224, 19, 1], [1, "cs", 0, 224, 22, 1], [1, "cs", 0, 224, 24, 1], [1, "cs", 0, 224, 29, 1], [1, "cs", 0, 224, 33, 1], [1, "cs", 0, 224, 35, 1], [1, "cs", 0, 224, 38, 1], [1, "cs", 1, 224, 14, 1], [1, "cs", 1, 224, 20, 1], [1, "cs", 1, 224, 27, 1], [1, "cs", 1, 224, 31, 1], [1, "cs", 1, 224, 36, 1], [1, "cs", 2, 224, 12, 1], [1, "cs", 2, 224, 15, 1], [1, "cs", 2, 224, 16, 1], [1, "cs", 2, 224, 18, 1], [1, "cs", 2, 224, 21, 1], [1, "cs", 2, 224, 23, 1], [1, "cs", 2, 224, 25, 1], [1, "cs", 2, 224, 26, 1], [1, "cs", 2, 224, 28, 1], [1, "cs", 2, 224, 30, 1], [1, "cs", 2, 224, 32, 1], [1, "cs", 2, 224, 34, 1], [1, "cs", 2, 224, 37, 1], [1, "cs", 2, 224, 39, 1], [1, "cs", 0, 224, 41, 1], [1, "cs", 0, 224, 44, 1], [1, "cs", 0, 224, 46, 1], [1, "cs", 0, 224, 52, 1], [1, "cs", 0, 224, 57, 1], [1, "cs", 1, 224, 47, 1], [1, "cs", 2, 224, 40, 1], [1, "cs", 2, 224, 42, 1], [1, "cs", 2, 224, 43, 1], [1, "cs", 2, 224, 45, 1], [1, "cs", 2, 224, 49, 1], [1, "cs", 1, 224, 50, 1], [1, "cs", 2, 224, 51, 1], [1, "la", 3, 224, 54, 1], [1, "cs", 2, 224, 56, 1], [1, "cs", 2, 224, 58, 1], [1, "cs", 2, 224, 61, 1], [1, "cs", 0, 224, 60, 1], [1, "cs", 0, 224, 64, 1], [1, "cs", 0, 224, 66, 1], [1, "cs", 0, 224, 70, 1], [1, "cs", 0, 224, 74, 1], [1, "cs", 0, 224, 77, 1], [1, "cs", 1, 224, 62, 1], [1, "cs", 1, 224, 68, 1], [1, "cs", 1, 224, 72, 1], [1, "cs", 1, 224, 76, 1], [1, "cs", 1, 224, 80, 1], [1, "cs", 1, 224, 83, 1], [1, "cs", 1, 224, 91, 1], [1, "cs", 1, 224, 95, 1], [1, "cs", 1, 224, 97, 1], [1, "cs", 0, 224, 85, 1], [1, "cs", 0, 224, 88, 1], [1, "cs", 0, 224, 93, 1], [1, "cs", 0, 224, 98, 1], [1, "cs", 2, 224, 59, 1], [1, "cs", 2, 224, 63, 1], [1, "cs", 2, 224, 65, 1], [1, "cs", 2, 224, 67, 1], [1, "cs", 2, 224, 69, 1], [1, "cs", 2, 224, 71, 1], [1, "cs", 2, 224, 73, 1], [1, "cs", 2, 224, 75, 1], [1, "cs", 2, 224, 78, 1], [1, "cs", 2, 224, 79, 1], [1, "cs", 2, 224, 81, 1], [1, "cs", 2, 224, 82, 1], [1, "cs", 2, 224, 84, 1], [1, "cs", 2, 224, 86, 1], [1, "cs", 2, 224, 87, 1], [1, "cs", 2, 224, 89, 1], [1, "cs", 2, 224, 90, 1], [1, "cs", 2, 224, 92, 1], [1, "cs", 2, 224, 94, 1], [1, "cs", 2, 224, 96, 1], [1, "cs", 2, 224, 99, 1], [1, "cs", 2, 224, 100, 1], [1, "cs", 0, 224, 101, 1], [1, "cs", 1, 224, 103, 1], [1, "cs", 2, 224, 102, 1], [1, "cs", 0, 222, 10, 1], [1, "cs", 2, 223, 9, 1], [1, "cs", 2, 222, 9, 1], [1, "cs", 2, 221, 9, 1], [1, "cs", 2, 223, 10, 1], [1, "cs", 2, 223, 11, 1], [1, "cs", 2, 223, 12, 1], [1, "cs", 3, 223, 13, 1], [1, "cs", 3, 222, 11, 1], [1, "cs", 3, 220, 9, 1], [1, "cs", 3, 219, 9, 1], [1, "cs", 3, 221, 10, 1], [1, "re", 2, 219, 13, 1], [1, "re", 1, 218, 18, 1], [1, "re", 1, 214, 13, 1], [1, "cs", 0, 221, 20, 1], [1, "cs", 1, 223, 18, 1], [1, "cs", 2, 222, 19, 1], [1, "cs", 2, 223, 19, 1], [1, "cs", 2, 223, 20, 1], [1, "cs", 2, 222, 20, 1], [1, "cs", 2, 220, 21, 1], [1, "cs", 0, 219, 21, 1], [1, "cs", 3, 221, 21, 1], [1, "cs", 3, 218, 21, 1], [1, "cs", 3, 222, 21, 1], [1, "cs", 3, 220, 22, 1], [1, "cs", 3, 219, 22, 1], [1, "cs", 3, 221, 22, 1], [1, "cs", 0, 211, 9, 1], [1, "cs", 1, 211, 10, 1], [1, "cs", 1, 210, 12, 1], [1, "cs", 0, 211, 13, 1], [1, "cs", 2, 210, 9, 1], [1, "cs", 2, 210, 10, 1], [1, "cs", 2, 210, 11, 1], [1, "cs", 2, 212, 9, 1], [1, "cs", 2, 210, 13, 1], [1, "cs", 2, 211, 12, 1], [1, "cs", 2, 211, 11, 1], [1, "cs", 2, 211, 14, 1], [1, "cs", 2, 212, 15, 1], [1, "cs", 2, 210, 14, 1], [1, "cs", 3, 211, 15, 1], [1, "cs", 3, 213, 9, 1], [1, "cs", 3, 212, 10, 1], [1, "cs", 3, 223, 21, 1], [1, "cs", 3, 209, 9, 1], [1, "la", 3, 223, 22, 1], [1, "la", 3, 221, 23, 1], [1, "la", 3, 207, 9, 1], [1, "la", 3, 209, 10, 1], [1, "la", 0, 209, 12, 1], [1, "la", 4, 209, 14, 1], [1, "la", 4, 219, 23, 1], [1, "la", 3, 210, 15, 1], [1, "la", 3, 217, 22, 1], [1, "la", 4, 212, 16, 1], [1, "la", 2, 214, 19, 1], [1, "la", 4, 213, 20, 1], [1, "la", 1, 212, 21, 1], [1, "la", 4, 215, 18, 1], [1, "la", 2, 216, 17, 1], [1, "la", 5, 216, 16, 1], [1, "la", 5, 216, 15, 1], [1, "la", 1, 217, 16, 1], [1, "la", 2, 218, 16, 1], [1, "la", 2, 216, 14, 1], [1, "la", 2, 219, 16, 1], [1, "la", 5, 220, 16, 1], [1, "la", 5, 216, 13, 1], [1, "la", 4, 217, 15, 1], [1, "cs", 0, 211, 44, 1], [1, "cs", 1, 212, 45, 1], [1, "cs", 2, 213, 45, 1], [1, "cs", 0, 214, 46, 1], [1, "cs", 2, 215, 46, 1], [1, "cs", 3, 213, 46, 1], [1, "cs", 3, 214, 47, 1], [1, "cs", 3, 214, 48, 1], [1, "cs", 3, 216, 46, 1], [1, "cs", 0, 208, 20, 1], [1, "cs", 0, 210, 21, 1], [1, "cs", 0, 212, 23, 1], [1, "cs", 0, 213, 25, 1], [1, "cs", 2, 213, 24, 1], [1, "cs", 2, 211, 22, 1], [1, "cs", 2, 210, 20, 1], [1, "cs", 2, 209, 21, 1], [1, "cs", 2, 209, 20, 1], [1, "cs", 2, 211, 21, 1], [1, "cs", 2, 212, 22, 1], [1, "cs", 2, 213, 23, 1], [1, "cs", 3, 213, 26, 1], [1, "cs", 3, 207, 20, 1], [1, "la", 4, 192, 33, 1], [1, "la", 4, 191, 34, 1], [1, "la", 4, 190, 35, 1], [1, "la", 3, 189, 37, 1], [1, "la", 3, 188, 39, 1], [1, "la", 4, 186, 40, 1], [1, "la", 4, 185, 39, 1], [1, "la", 4, 184, 39, 1], [1, "la", 2, 183, 39, 1], [1, "la", 1, 182, 40, 1], [1, "la", 2, 181, 41, 1], [1, "la", 5, 180, 41, 1], [1, "la", 5, 179, 41, 1], [1, "la", 4, 192, 28, 1], [1, "la", 4, 191, 28, 1], [1, "la", 4, 190, 27, 1], [1, "la", 3, 188, 27, 1], [1, "la", 4, 187, 26, 1], [1, "la", 4, 186, 25, 1], [1, "la", 4, 185, 25, 1], [1, "la", 4, 184, 24, 1], [1, "la", 5, 184, 23, 1], [1, "la", 2, 184, 22, 1], [1, "la", 5, 184, 21, 1], [1, "la", 1, 183, 20, 1], [1, "la", 5, 182, 20, 1], [1, "la", 2, 181, 20, 1], [1, "la", 5, 180, 20, 1], [1, "la", 2, 179, 20, 1], [1, "la", 4, 178, 19, 1], [1, "la", 3, 178, 17, 1], [1, "la", 3, 176, 18, 1], [1, "cs", 0, 177, 15, 1], [1, "cs", 0, 175, 17, 1], [1, "cs", 0, 180, 16, 1], [1, "cs", 0, 174, 19, 1], [1, "cs", 0, 172, 20, 1], [1, "cs", 1, 175, 15, 1], [1, "cs", 1, 172, 18, 1], [1, "cs", 1, 181, 15, 1], [1, "cs", 2, 179, 15, 1], [1, "cs", 2, 177, 16, 1], [1, "cs", 2, 176, 16, 1], [1, "cs", 2, 174, 18, 1], [1, "cs", 2, 173, 19, 1], [1, "cs", 2, 172, 19, 1], [1, "cs", 2, 173, 18, 1], [1, "cs", 2, 173, 17, 1], [1, "cs", 2, 174, 17, 1], [1, "cs", 2, 174, 16, 1], [1, "cs", 2, 175, 16, 1], [1, "cs", 2, 176, 15, 1], [1, "cs", 2, 178, 15, 1], [1, "cs", 2, 178, 16, 1], [1, "cs", 2, 179, 16, 1], [1, "cs", 2, 180, 15, 1], [1, "cs", 2, 181, 16, 1], [1, "cs", 3, 182, 16, 1], [1, "cs", 3, 172, 21, 1], [1, "la", 1, 175, 19, 1], [1, "la", 2, 174, 20, 1], [1, "la", 2, 173, 20, 1], [1, "la", 1, 180, 17, 1], [1, "la", 2, 181, 17, 1], [1, "la", 3, 191, 20, 1], [1, "s", 0, 217, 30, 1], [1, "s", 0, 208, 35, 1], [1, "s", 0, 204, 24, 1], [1, "s", 1, 218, 32, 1], [1, "s", 1, 207, 34, 1], [1, "s", 1, 202, 23, 1], [1, "s", 1, 195, 16, 1], [1, "s", 2, 222, 28, 1], [1, "s", 2, 212, 38, 1], [1, "s", 2, 207, 23, 1], [1, "s", 2, 202, 12, 1], [1, "s", 2, 195, 18, 1], [1, "s", 1, 191, 12, 1], [1, "s", 0, 187, 16, 1], [1, "s", 2, 188, 16, 1], [1, "s", 1, 186, 14, 1], [1, "s", 1, 201, 16, 1], [1, "g", 1, 216, 31, 1], [1, "g", 0, 200, 15, 1], [1, "g", 0, 202, 40, 1], [1, "g", 0, 189, 32, 1], [1, "g", 0, 204, 28, 1], [1, "g", 0, 196, 24, 1], [1, "g", 2, 198, 37, 1], [1, "s", 0, 193, 39, 1], [1, "s", 0, 201, 45, 1], [1, "a", 0, 210, 29, 1], [1, "a", 0, 200, 20, 1], [1, "cs", 0, 200, 34, 1], [1, "cs", 0, 193, 27, 1], [1, "cs", 1, 203, 30, 1], [1, "cs", 1, 191, 31, 1], [1, "cs", 2, 202, 32, 1], [1, "cs", 2, 194, 26, 1], [1, "cs", 2, 192, 27, 1], [1, "cs", 2, 192, 32, 1], [1, "cs", 2, 203, 31, 1], [1, "cs", 2, 202, 31, 1], [1, "cs", 2, 202, 30, 1], [1, "cs", 3, 202, 29, 1], [1, "cs", 3, 201, 32, 1], [1, "cs", 3, 199, 35, 1], [1, "cs", 0, 193, 34, 1], [1, "cs", 2, 194, 34, 1], [1, "cs", 2, 198, 35, 1], [1, "cs", 3, 199, 34, 1], [1, "cs", 3, 191, 29, 1], [1, "cs", 0, 191, 30, 1], [1, "cs", 3, 190, 29, 1], [1, "la", 3, 180, 69, 1], [1, "la", 3, 182, 68, 1], [1, "la", 3, 184, 68, 1], [1, "la", 3, 186, 70, 1], [1, "la", 3, 184, 72, 1], [1, "la", 3, 182, 72, 1], [1, "la", 3, 180, 71, 1], [1, "cs", 0, 186, 68, 1], [1, "cs", 0, 187, 70, 1], [1, "cs", 0, 183, 74, 1], [1, "cs", 0, 178, 70, 1], [1, "cs", 2, 182, 66, 1], [1, "cs", 2, 182, 74, 1], [1, "cs", 2, 181, 73, 1], [1, "cs", 2, 180, 74, 1], [1, "cs", 2, 181, 74, 1], [1, "la", 0, 184, 70, 1], [1, "la", 3, 182, 70, 1], [1, "cs", 2, 181, 67, 1], [1, "cs", 3, 184, 67, 1], [1, "cs", 3, 182, 67, 1], [1, "la", 4, 187, 69, 1], [1, "la", 1, 188, 68, 1], [1, "la", 4, 189, 68, 1], [1, "la", 2, 190, 68, 1], [1, "la", 1, 191, 68, 1], [1, "la", 4, 192, 68, 1], [1, "la", 2, 193, 68, 1], [1, "la", 4, 194, 69, 1], [1, "la", 2, 194, 70, 1], [1, "la", 5, 195, 71, 1], [1, "la", 1, 194, 71, 1], [1, "la", 2, 196, 72, 1], [1, "la", 4, 196, 71, 1], [1, "la", 1, 197, 73, 1], [1, "la", 5, 196, 73, 1], [1, "la", 5, 198, 73, 1], [1, "la", 3, 201, 73, 1], [1, "la", 3, 203, 72, 1], [1, "la", 4, 199, 73, 1], [1, "la", 1, 205, 72, 1], [1, "la", 2, 206, 72, 1], [1, "la", 5, 207, 72, 1], [1, "la", 1, 208, 72, 1], [1, "la", 1, 209, 73, 1], [1, "la", 2, 209, 74, 1], [1, "la", 5, 211, 76, 1], [1, "la", 4, 210, 75, 1], [1, "la", 5, 212, 76, 1], [1, "la", 4, 202, 75, 1], [1, "la", 2, 203, 76, 1], [1, "la", 4, 204, 77, 1], [1, "la", 2, 204, 78, 1], [1, "la", 2, 204, 79, 1], [1, "la", 5, 204, 80, 1], [1, "cs", 0, 202, 74, 1], [1, "cs", 1, 203, 74, 1], [1, "cs", 2, 204, 73, 1], [1, "cs", 2, 203, 75, 1], [1, "cs", 3, 204, 76, 1], [1, "cs", 3, 205, 73, 1], [1, "cs", 0, 205, 74, 1], [1, "cs", 2, 204, 74, 1], [1, "cs", 2, 204, 75, 1], [1, "cs", 2, 206, 73, 1], [1, "cs", 3, 207, 73, 1], [1, "cs", 2, 205, 76, 1], [1, "cs", 3, 205, 77, 1], [1, "la", 3, 183, 66, 1], [1, "la", 4, 183, 65, 1], [1, "la", 4, 184, 64, 1], [1, "la", 4, 185, 63, 1], [1, "la", 1, 185, 62, 1], [1, "la", 2, 185, 61, 1], [1, "la", 2, 185, 60, 1], [1, "la", 4, 186, 59, 1], [1, "la", 1, 187, 58, 1], [1, "la", 2, 187, 57, 1], [1, "la", 2, 187, 56, 1], [1, "s", 0, 191, 60, 1], [1, "s", 1, 195, 58, 1], [1, "s", 1, 199, 46, 1], [1, "s", 2, 202, 49, 1], [1, "g", 2, 197, 55, 1], [1, "g", 1, 213, 55, 1], [1, "g", 0, 192, 45, 1], [1, "g", 0, 210, 61, 1], [1, "g", 0, 182, 52, 1], [1, "g", 0, 180, 35, 1], [1, "g", 0, 175, 25, 1], [1, "g", 0, 168, 32, 1], [1, "g", 1, 179, 28, 1], [1, "g", 1, 161, 16, 1], [1, "g", 2, 172, 12, 1], [1, "g", 2, 160, 25, 1], [1, "g", 2, 157, 39, 1], [1, "g", 2, 170, 43, 1], [1, "g", 2, 202, 67, 1], [1, "g", 2, 217, 72, 1], [1, "g", 2, 214, 82, 1], [1, "g", 2, 193, 86, 1], [1, "g", 2, 168, 60, 1], [1, "g", 2, 165, 78, 1], [1, "g", 2, 173, 88, 1], [1, "s", 0, 185, 51, 1], [1, "s", 0, 175, 44, 1], [1, "s", 0, 165, 50, 1], [1, "s", 0, 160, 32, 1], [1, "s", 1, 162, 30, 1], [1, "s", 1, 176, 28, 1], [1, "s", 1, 154, 17, 1], [1, "s", 1, 184, 49, 1], [1, "s", 1, 192, 62, 1], [1, "s", 1, 216, 62, 1], [1, "s", 1, 204, 65, 1], [1, "s", 1, 217, 79, 1], [1, "s", 1, 206, 86, 1], [1, "la", 3, 211, 69, 1], [1, "la", 4, 215, 69, 1], [1, "la", 5, 201, 81, 1], [1, "la", 1, 207, 83, 1], [1, "la", 3, 173, 32, 1], [1, "la", 2, 181, 45, 1], [1, "la", 1, 178, 38, 1], [1, "la", 1, 213, 69, 1], [1, "la", 5, 214, 69, 1], [1, "la", 4, 216, 68, 1], [1, "la", 0, 191, 78, 1], [1, "la", 3, 191, 80, 1], [1, "la", 3, 189, 79, 1], [1, "g", 2, 150, 29, 1], [1, "g", 2, 154, 67, 1], [1, "g", 2, 202, 94, 1], [1, "g", 2, 155, 90, 1], [1, "s", 2, 215, 80, 1], [1, "s", 2, 204, 62, 1], [1, "s", 2, 218, 60, 1], [1, "s", 2, 194, 62, 1], [1, "s", 0, 216, 86, 1], [1, "s", 0, 211, 93, 1], [1, "la", 0, 216, 92, 1], [1, "la", 0, 151, 96, 1], [1, "la", 1, 155, 95, 1], [1, "la", 4, 214, 88, 1], [1, "s", 0, 205, 99, 1], [1, "s", 1, 217, 88, 1], [1, "s", 1, 213, 94, 1], [1, "s", 1, 202, 97, 1], [1, "s", 0, 199, 85, 1], [1, "s", 0, 190, 93, 1], [1, "s", 1, 199, 87, 1], [1, "s", 1, 192, 97, 1], [1, "la", 3, 196, 92, 1], [1, "la", 1, 199, 91, 1], [1, "la", 1, 220, 91, 1], [1, "la", 0, 219, 77, 1], [1, "la", 0, 200, 59, 1], [1, "la", 3, 188, 87, 1], [1, "la", 0, 183, 94, 1], [1, "la", 1, 187, 83, 1], [1, "la", 1, 175, 82, 1], [1, "la", 1, 172, 94, 1], [1, "la", 2, 179, 78, 1], [1, "la", 0, 166, 87, 1], [1, "la", 3, 159, 80, 1], [1, "la", 3, 167, 15, 1], [1, "la", 1, 164, 17, 1], [1, "la", 1, 172, 28, 1], [1, "la", 3, 153, 24, 1], [1, "la", 4, 164, 91, 1], [1, "la", 4, 156, 82, 1], [1, "la", 4, 149, 90, 1], [1, "s", 0, 178, 85, 1], [1, "s", 1, 180, 85, 1], [1, "s", 0, 163, 96, 1], [1, "s", 0, 159, 86, 1], [1, "s", 0, 185, 78, 1], [1, "s", 1, 194, 75, 1], [1, "s", 2, 195, 76, 1], [1, "s", 2, 181, 78, 1], [1, "s", 2, 161, 87, 1], [1, "s", 2, 166, 97, 1], [1, "s", 2, 177, 97, 1], [1, "s", 0, 149, 85, 1], [1, "s", 1, 151, 83, 1], [1, "s", 1, 175, 74, 1], [1, "s", 0, 174, 72, 1], [1, "la", 3, 168, 71, 1], [1, "la", 3, 180, 60, 1], [1, "s", 0, 156, 63, 1], [1, "s", 0, 151, 47, 1], [1, "s", 1, 158, 64, 1], [1, "s", 1, 161, 75, 1], [1, "s", 1, 162, 51, 1], [1, "s", 1, 175, 45, 1], [1, "s", 1, 152, 47, 1], [1, "s", 1, 159, 33, 1], [1, "s", 1, 152, 18, 1], [1, "s", 0, 151, 13, 1], [1, "s", 0, 166, 22, 1], [1, "s", 0, 170, 63, 1], [1, "s", 2, 172, 62, 1], [1, "s", 2, 155, 61, 1], [1, "s", 2, 167, 51, 1], [1, "s", 2, 150, 52, 1], [1, "la", 4, 178, 69, 1], [1, "la", 4, 177, 68, 1], [1, "la", 3, 176, 67, 1], [1, "la", 0, 174, 67, 1], [1, "la", 1, 172, 67, 1], [1, "la", 4, 171, 67, 1], [1, "la", 4, 170, 66, 1], [1, "la", 4, 169, 66, 1], [1, "la", 1, 168, 66, 1], [1, "la", 4, 167, 67, 1], [1, "la", 1, 166, 67, 1], [1, "la", 4, 165, 68, 1], [1, "la", 5, 164, 68, 1], [1, "la", 2, 163, 68, 1], [1, "la", 5, 162, 68, 1], [1, "la", 2, 161, 68, 1], [1, "la", 3, 153, 72, 1], [1, "la", 3, 163, 60, 1], [1, "la", 3, 164, 42, 1], [1, "la", 0, 155, 51, 1], [1, "la", 1, 168, 42, 1], [1, "la", 4, 158, 48, 1], [1, "la", 4, 178, 57, 1], [1, "la", 4, 151, 69, 1], [1, "la", 2, 170, 74, 1], [1, "la", 2, 160, 84, 1], [1, "la", 2, 174, 92, 1], [1, "la", 2, 188, 90, 1], [1, "la", 2, 209, 84, 1], [1, "la", 2, 206, 93, 1], [1, "la", 5, 156, 70, 1], [1, "la", 5, 165, 57, 1], [1, "la", 5, 182, 58, 1], [1, "la", 5, 166, 44, 1], [1, "la", 1, 163, 39, 1], [1, "la", 1, 152, 53, 1], [1, "la", 1, 152, 37, 1], [1, "la", 2, 163, 13, 1], [1, "de", 12, 219, 12, 0], [1, "de", 14, 203, 13, 0], [1, "de", 15, 220, 19, 0], [1, "de", 12, 223, 15, 0], [1, "de", 12, 213, 10, 0], [1, "de", 37, 217, 19, 0], [1, "de", 38, 220, 14, 0], [1, "de", 38, 215, 10, 0], [1, "de", 40, 214, 14, 0], [1, "de", 40, 222, 16, 0], [1, "de", 40, 209, 18, 0], [1, "de", 37, 212, 18, 0], [1, "de", 38, 215, 26, 0], [1, "de", 37, 222, 25, 0], [1, "de", 40, 221, 29, 0], [1, "de", 12, 220, 27, 0], [1, "de", 13, 213, 27, 0], [1, "de", 14, 215, 30, 0], [1, "de", 15, 219, 33, 0], [1, "de", 38, 220, 31, 0], [1, "de", 38, 217, 35, 0], [1, "de", 40, 221, 34, 0], [1, "de", 39, 215, 32, 0], [1, "de", 37, 211, 35, 0], [1, "de", 12, 223, 38, 0], [1, "de", 13, 213, 38, 0], [1, "de", 14, 222, 44, 0], [1, "de", 15, 208, 33, 0], [1, "de", 15, 206, 23, 0], [1, "de", 13, 205, 28, 0], [1, "de", 14, 211, 23, 0], [1, "de", 14, 201, 20, 0], [1, "de", 15, 198, 9, 0], [1, "de", 15, 199, 16, 0], [1, "de", 12, 194, 15, 0], [1, "de", 12, 197, 23, 0], [1, "de", 37, 205, 13, 0], [1, "de", 39, 204, 9, 0], [1, "de", 40, 196, 12, 0], [1, "de", 40, 198, 18, 0], [1, "de", 37, 192, 11, 0], [1, "de", 37, 199, 24, 0], [1, "de", 37, 209, 24, 0], [1, "de", 39, 209, 30, 0], [1, "de", 39, 204, 31, 0], [1, "de", 39, 192, 24, 0], [1, "de", 40, 187, 23, 0], [1, "de", 38, 187, 18, 0], [1, "de", 39, 192, 18, 0], [1, "de", 37, 185, 15, 0], [1, "de", 12, 188, 15, 0], [1, "de", 13, 185, 13, 0], [1, "de", 14, 189, 9, 0], [1, "de", 15, 187, 22, 0], [1, "de", 15, 180, 9, 0], [1, "de", 12, 177, 14, 0], [1, "de", 14, 173, 9, 0], [1, "de", 14, 171, 15, 0], [1, "de", 40, 182, 9, 0], [1, "de", 39, 179, 13, 0], [1, "de", 39, 175, 9, 0], [1, "de", 40, 173, 14, 0], [1, "de", 37, 169, 11, 0], [1, "de", 37, 163, 10, 0], [1, "de", 38, 164, 15, 0], [1, "de", 39, 170, 20, 0], [1, "de", 40, 160, 17, 0], [1, "de", 40, 154, 10, 0], [1, "de", 40, 165, 23, 0], [1, "de", 40, 150, 19, 0], [1, "de", 37, 155, 16, 0], [1, "de", 39, 146, 10, 0], [1, "de", 12, 159, 12, 0], [1, "de", 13, 151, 9, 0], [1, "de", 14, 150, 14, 0], [1, "de", 15, 153, 19, 0], [1, "de", 13, 161, 25, 0], [1, "de", 14, 169, 25, 0], [1, "de", 15, 176, 25, 0], [1, "de", 12, 180, 29, 0], [1, "de", 12, 188, 31, 0], [1, "de", 14, 181, 36, 0], [1, "de", 37, 186, 33, 0], [1, "de", 38, 183, 26, 0], [1, "de", 39, 177, 21, 0], [1, "de", 40, 175, 31, 0], [1, "de", 37, 176, 39, 0], [1, "de", 37, 168, 34, 0], [1, "de", 38, 162, 32, 0], [1, "de", 38, 168, 45, 0], [1, "de", 38, 173, 45, 0], [1, "de", 39, 160, 35, 0], [1, "de", 40, 161, 42, 0], [1, "de", 40, 170, 39, 0], [1, "de", 40, 181, 43, 0], [1, "de", 40, 156, 26, 0], [1, "de", 40, 150, 32, 0], [1, "de", 37, 159, 26, 0], [1, "de", 37, 155, 40, 0], [1, "de", 37, 154, 45, 0], [1, "de", 39, 149, 45, 0], [1, "de", 40, 150, 50, 0], [1, "de", 40, 160, 52, 0], [1, "de", 37, 164, 52, 0], [1, "de", 38, 168, 50, 0], [1, "de", 12, 176, 45, 0], [1, "de", 12, 167, 32, 0], [1, "de", 13, 158, 32, 0], [1, "de", 14, 149, 28, 0], [1, "de", 15, 163, 30, 0], [1, "de", 14, 158, 39, 0], [1, "de", 12, 171, 43, 0], [1, "de", 12, 174, 36, 0], [1, "de", 12, 151, 43, 0], [1, "de", 13, 152, 48, 0], [1, "de", 14, 164, 49, 0], [1, "de", 15, 149, 52, 0], [1, "de", 12, 174, 49, 0], [1, "de", 13, 183, 51, 0], [1, "de", 14, 186, 48, 0], [1, "de", 37, 182, 48, 0], [1, "de", 38, 187, 52, 0], [1, "de", 39, 188, 43, 0], [1, "de", 37, 200, 38, 0], [1, "de", 40, 194, 37, 0], [1, "de", 39, 199, 44, 0], [1, "de", 38, 200, 49, 0], [1, "de", 37, 196, 54, 0], [1, "de", 12, 194, 40, 0], [1, "de", 13, 202, 45, 0], [1, "de", 14, 198, 47, 0], [1, "de", 15, 198, 55, 0], [1, "de", 15, 212, 54, 0], [1, "de", 15, 216, 63, 0], [1, "de", 14, 209, 62, 0], [1, "de", 12, 219, 60, 0], [1, "de", 12, 206, 56, 0], [1, "de", 12, 218, 72, 0], [1, "de", 12, 223, 67, 0], [1, "de", 12, 205, 64, 0], [1, "de", 12, 193, 63, 0], [1, "de", 14, 216, 80, 0], [1, "de", 14, 222, 87, 0], [1, "de", 38, 210, 53, 0], [1, "de", 37, 210, 47, 0], [1, "de", 37, 200, 63, 0], [1, "de", 37, 218, 62, 0], [1, "de", 37, 222, 60, 0], [1, "de", 37, 207, 70, 0], [1, "de", 38, 203, 68, 0], [1, "de", 38, 195, 66, 0], [1, "de", 38, 218, 55, 0], [1, "de", 38, 212, 61, 0], [1, "de", 38, 222, 70, 0], [1, "de", 38, 218, 70, 0], [1, "de", 40, 222, 81, 0], [1, "de", 38, 214, 79, 0], [1, "de", 39, 213, 83, 0], [1, "de", 39, 207, 76, 0], [1, "de", 39, 208, 86, 0], [1, "de", 39, 218, 87, 0], [1, "de", 39, 222, 93, 0], [1, "de", 39, 216, 96, 0], [1, "de", 39, 209, 94, 0], [1, "de", 39, 201, 87, 0], [1, "de", 39, 198, 82, 0], [1, "de", 39, 207, 99, 0], [1, "de", 39, 200, 97, 0], [1, "de", 39, 202, 92, 0], [1, "de", 37, 194, 97, 0], [1, "de", 39, 204, 88, 0], [1, "de", 39, 189, 90, 0], [1, "de", 39, 194, 81, 0], [1, "de", 39, 188, 98, 0], [1, "de", 37, 183, 91, 0], [1, "de", 37, 186, 80, 0], [1, "de", 37, 191, 72, 0], [1, "de", 38, 184, 77, 0], [1, "de", 38, 180, 80, 0], [1, "de", 39, 173, 75, 0], [1, "de", 40, 178, 87, 0], [1, "de", 40, 174, 94, 0], [1, "de", 40, 192, 93, 0], [1, "de", 40, 165, 92, 0], [1, "de", 37, 160, 89, 0], [1, "de", 38, 161, 85, 0], [1, "de", 38, 164, 98, 0], [1, "de", 38, 151, 99, 0], [1, "de", 38, 151, 85, 0], [1, "de", 40, 148, 83, 0], [1, "de", 40, 160, 77, 0], [1, "de", 40, 167, 77, 0], [1, "de", 40, 153, 69, 0], [1, "de", 40, 149, 74, 0], [1, "de", 37, 161, 64, 0], [1, "de", 37, 154, 61, 0], [1, "de", 39, 157, 55, 0], [1, "de", 39, 174, 64, 0], [1, "de", 39, 175, 56, 0], [1, "de", 39, 149, 67, 0], [1, "de", 12, 218, 96, 0], [1, "de", 13, 212, 95, 0], [1, "de", 14, 204, 85, 0], [1, "de", 15, 215, 85, 0], [1, "de", 15, 197, 97, 0], [1, "de", 12, 198, 87, 0], [1, "de", 14, 196, 77, 0], [1, "de", 13, 194, 86, 0], [1, "de", 15, 181, 84, 0], [1, "de", 14, 184, 79, 0], [1, "de", 14, 188, 93, 0], [1, "de", 13, 180, 87, 0], [1, "de", 13, 178, 96, 0], [1, "de", 13, 163, 95, 0], [1, "de", 15, 172, 88, 0], [1, "de", 15, 176, 75, 0], [1, "de", 14, 172, 72, 0], [1, "de", 14, 169, 82, 0], [1, "de", 13, 164, 78, 0], [1, "de", 13, 158, 87, 0], [1, "de", 13, 149, 86, 0], [1, "de", 15, 154, 91, 0], [1, "de", 15, 160, 74, 0], [1, "de", 14, 152, 76, 0], [1, "de", 14, 158, 63, 0], [1, "de", 14, 150, 60, 0], [1, "de", 12, 169, 59, 0], [1, "de", 13, 173, 61, 0], [1, "cs", 1, 143, 104, 1], [1, "cs", 0, 141, 102, 1], [1, "cs", 3, 138, 102, 1], [1, "cs", 2, 139, 102, 1], [1, "cs", 2, 140, 102, 1], [1, "cs", 3, 143, 107, 1], [1, "cs", 0, 143, 106, 1], [1, "cs", 2, 143, 105, 1], [1, "cs", 2, 142, 103, 1], [1, "cs", 0, 142, 104, 1], [1, "cs", 2, 141, 103, 1], [1, "cs", 3, 142, 105, 1], [1, "cs", 3, 140, 103, 1], [1, "cs", 3, 141, 104, 1], [1, "la", 4, 151, 23, 1], [1, "la", 4, 150, 22, 1], [1, "la", 1, 149, 21, 1], [1, "la", 4, 148, 21, 1], [1, "la", 2, 147, 20, 1], [1, "la", 4, 147, 19, 1], [1, "la", 5, 147, 18, 1], [1, "la", 1, 147, 17, 1], [1, "la", 3, 144, 9, 1], [1, "la", 5, 147, 16, 1], [1, "la", 2, 147, 15, 1], [1, "la", 4, 147, 14, 1], [1, "la", 4, 145, 11, 1], [1, "la", 5, 145, 12, 1], [1, "la", 1, 146, 13, 1], [1, "la", 2, 145, 13, 1], [1, "la", 3, 155, 25, 1], [1, "la", 0, 155, 24, 1], [1, "la", 3, 153, 26, 1], [1, "cs", 0, 151, 24, 1], [1, "cs", 0, 153, 22, 1], [1, "cs", 3, 152, 22, 1], [1, "cs", 3, 154, 22, 1], [1, "cs", 1, 157, 26, 1], [1, "cs", 2, 157, 24, 1], [1, "cs", 2, 156, 26, 1], [1, "cs", 2, 154, 28, 1], [1, "cs", 2, 151, 26, 1], [1, "cs", 2, 152, 25, 1], [1, "cs", 2, 151, 25, 1], [1, "cs", 2, 156, 27, 1], [1, "cs", 2, 157, 23, 1], [1, "cs", 2, 157, 22, 1], [1, "cs", 3, 150, 24, 1], [1, "cs", 3, 150, 23, 1], [1, "de", 38, 155, 29, 0], [1, "de", 12, 157, 27, 0], [1, "de", 14, 153, 29, 0], [1, "de", 15, 158, 23, 0], [1, "de", 13, 156, 21, 0], [1, "de", 13, 147, 36, 0], [1, "de", 13, 161, 56, 0], [1, "de", 13, 147, 79, 0], [1, "de", 12, 157, 99, 0], [1, "de", 12, 172, 99, 0], [1, "la", 3, 143, 102, 1], [1, "la", 4, 149, 96, 1], [1, "la", 4, 145, 102, 1], [1, "la", 1, 148, 97, 1], [1, "la", 5, 148, 98, 1], [1, "cs", 3, 144, 104, 1], [1, "cs", 3, 144, 103, 1], [1, "cs", 3, 145, 103, 1], [1, "cs", 3, 145, 104, 1], [1, "cs", 3, 142, 101, 1], [1, "cs", 3, 143, 100, 1], [1, "cs", 3, 141, 101, 1], [1, "cs", 3, 142, 100, 1], [1, "cs", 0, 141, 100, 1], [1, "cs", 2, 140, 101, 1], [1, "cs", 2, 144, 105, 1], [1, "cs", 3, 146, 103, 1], [1, "cs", 3, 146, 102, 1], [1, "cs", 3, 150, 95, 1], [1, "cs", 0, 150, 97, 1], [1, "cs", 2, 151, 98, 1], [1, "cs", 0, 153, 97, 1], [1, "cs", 3, 153, 96, 1], [1, "cs", 2, 149, 95, 1], [1, "s", 0, 213, 127, 1], [1, "plm", 1, 214, 131, 0], [1, "plm", 1, 207, 128, 0], [1, "plm", 0, 208, 127, 0], [1, "s", 1, 207, 132, 1], [1, "s", 2, 208, 133, 1], [1, "plm", 0, 217, 132, 0], [1, "plm", 2, 186, 158, 0], [1, "plm", 0, 184, 160, 0], [1, "s", 1, 183, 156, 1], [1, "s", 2, 186, 159, 1], [1, "p", 0, 182, 157, 1], [1, "p", 0, 114, 205, 1], [1, "plm", 1, 117, 204, 0], [1, "plm", 0, 117, 205, 0], [1, "plm", 2, 112, 204, 0], [1, "s", 2, 114, 207, 1], [1, "s", 2, 115, 204, 1], [1, "plm", 2, 122, 151, 0], [1, "plm", 1, 123, 150, 0], [1, "plm", 1, 117, 151, 0], [1, "s", 0, 118, 150, 1], [1, "s", 1, 122, 152, 1], [1, "plm", 2, 156, 130, 0], [1, "plm", 1, 154, 127, 0], [1, "s", 0, 153, 128, 1], [1, "s", 2, 152, 130, 1], [1, "p", 0, 123, 65, 1], [1, "plm", 2, 125, 62, 0], [1, "plm", 1, 124, 62, 0], [1, "plm", 0, 120, 65, 0], [1, "s", 1, 125, 63, 1], [1, "s", 1, 121, 64, 1], [1, "s", 2, 122, 62, 1], [1, "cs", 0, 140, 106, 1], [1, "cs", 2, 144, 106, 1], [1, "cs", 2, 145, 105, 1], [1, "cs", 2, 144, 107, 1], [1, "cs", 2, 141, 106, 1], [1, "cs", 2, 141, 105, 1], [1, "cs", 2, 140, 105, 1], [1, "cs", 2, 140, 104, 1], [1, "cs", 1, 138, 103, 1], [1, "cs", 0, 139, 104, 1], [1, "cs", 2, 139, 103, 1], [1, "cs", 2, 139, 105, 1], [1, "cs", 2, 142, 106, 1], [1, "cs", 2, 142, 107, 1], [1, "cs", 2, 139, 101, 1], [1, "de", 19, 27, 264, 0], [1, "la", 4, 147, 99, 1], [1, "la", 1, 146, 100, 1], [1, "la", 4, 145, 101, 1], [1, "cs", 1, 215, 47, 1], [1, "cs", 2, 216, 47, 1], [1, "cs", 2, 215, 48, 1], [1, "la", 4, 214, 45, 1], [1, "la", 4, 215, 45, 1], [1, "la", 0, 216, 46, 1], [1, "la", 4, 216, 48, 1], [1, "la", 4, 216, 49, 1], [1, "la", 4, 217, 50, 1], [1, "la", 3, 214, 49, 1], [1, "la", 4, 211, 45, 1], [1, "la", 3, 213, 47, 1], [1, "cs", 2, 224, 48, 1], [1, "plm", 2, 111, 243, 0], [1, "plm", 1, 108, 246, 0], [1, "s", 1, 110, 243, 1], [1, "s", 0, 108, 245, 1], [1, "s", 0, 121, 276, 1], [1, "plm", 2, 122, 277, 0], [1, "plm", 2, 117, 276, 0], [1, "plm", 1, 118, 277, 0], [1, "s", 1, 118, 278, 1], [1, "cs", 2, 66, 16, 1], [1, "cs", 3, 67, 16, 1], [1, "cs", 0, 67, 17, 1], [1, "cs", 2, 66, 17, 1], [1, "cs", 3, 66, 18, 1], [1, "cs", 3, 68, 17, 1], [1, "cs", 0, 36, 16, 1], [1, "cs", 2, 36, 17, 1], [1, "cs", 2, 36, 18, 1], [1, "cs", 3, 35, 17, 1], [1, "cs", 3, 36, 19, 1], [1, "cs", 3, 35, 18, 1], [1, "cs", 2, 66, 30, 1], [1, "cs", 2, 66, 23, 1], [1, "cs", 3, 66, 22, 1], [1, "cs", 3, 66, 31, 1], [1, "cs", 2, 36, 30, 1], [1, "cs", 2, 36, 23, 1], [1, "cs", 1, 36, 22, 1], [1, "cs", 2, 36, 31, 1], [1, "cs", 3, 42, 13, 1], [1, "cs", 0, 43, 13, 1], [1, "cs", 2, 44, 13, 1], [1, "cs", 3, 42, 16, 1], [1, "cs", 3, 41, 16, 1], [1, "cs", 3, 40, 16, 1], [1, "cs", 0, 42, 19, 1], [1, "cs", 3, 43, 19, 1], [1, "cs", 3, 44, 19, 1], [1, "cs", 3, 45, 19, 1], [1, "cs", 2, 46, 19, 1], [1, "cs", 0, 43, 22, 1], [1, "cs", 2, 42, 22, 1], [1, "cs", 1, 41, 22, 1], [1, "cs", 0, 40, 22, 1], [1, "cs", 3, 39, 17, 1], [1, "cs", 1, 44, 26, 1], [1, "cs", 2, 45, 26, 1], [1, "cs", 3, 46, 26, 1], [1, "cs", 0, 47, 26, 1], [1, "cs", 2, 48, 26, 1], [1, "cs", 3, 47, 25, 1], [1, "cs", 3, 43, 27, 1], [1, "cs", 1, 49, 32, 1], [1, "cs", 2, 50, 32, 1], [1, "cs", 2, 51, 32, 1], [1, "cs", 2, 52, 32, 1], [1, "d", 0, 51, 29, 1], [1, "d", 1, 53, 29, 1], [1, "d", 1, 49, 29, 1], [1, "cs", 3, 55, 31, 1], [1, "cs", 3, 54, 32, 1], [1, "cs", 3, 47, 31, 1], [1, "cs", 3, 48, 32, 1], [1, "cs", 0, 51, 33, 1], [1, "cs", 2, 52, 33, 1], [1, "cs", 2, 50, 33, 1], [1, "cs", 3, 56, 30, 1], [1, "cs", 3, 56, 31, 1], [1, "cs", 3, 46, 30, 1], [1, "cs", 3, 46, 31, 1], [1, "cs", 1, 53, 33, 1], [1, "cs", 2, 49, 33, 1], [1, "cs", 2, 53, 32, 1], [1, "cs", 0, 55, 32, 1], [1, "cs", 0, 47, 32, 1], [1, "d", 1, 54, 35, 1], [1, "fo", 2, 35, 15, 0], [1, "fo", 2, 36, 12, 0], [1, "fo", 2, 67, 15, 0], [1, "cs", 3, 60, 13, 1], [1, "cs", 2, 59, 13, 1], [1, "cs", 1, 58, 13, 1], [1, "cs", 3, 62, 16, 1], [1, "cs", 0, 61, 16, 1], [1, "cs", 3, 60, 16, 1], [1, "cs", 3, 63, 17, 1], [1, "cs", 2, 60, 19, 1], [1, "cs", 1, 59, 19, 1], [1, "cs", 3, 58, 19, 1], [1, "cs", 2, 57, 19, 1], [1, "cs", 2, 56, 19, 1], [1, "cs", 0, 55, 18, 1], [1, "cs", 2, 55, 17, 1], [1, "cs", 2, 63, 23, 1], [1, "cs", 0, 62, 22, 1], [1, "cs", 2, 61, 22, 1], [1, "cs", 1, 60, 22, 1], [1, "cs", 0, 59, 22, 1], [1, "cs", 2, 54, 26, 1], [1, "cs", 2, 55, 26, 1], [1, "cs", 2, 56, 26, 1], [1, "cs", 1, 57, 26, 1], [1, "cs", 2, 58, 26, 1], [1, "cs", 2, 59, 27, 1], [1, "cs", 2, 68, 16, 1], [1, "cs", 2, 68, 15, 1], [1, "cs", 3, 69, 15, 1], [1, "cs", 3, 70, 15, 1], [1, "cs", 3, 70, 14, 1], [1, "cs", 1, 69, 14, 1], [1, "cs", 1, 69, 16, 1], [1, "cs", 2, 71, 13, 1], [1, "cs", 2, 71, 14, 1], [1, "cs", 3, 72, 13, 1], [1, "cs", 3, 70, 8, 1], [1, "cs", 3, 71, 8, 1], [1, "cs", 2, 72, 8, 1], [1, "cs", 0, 73, 8, 1], [1, "cs", 3, 74, 9, 1], [1, "cs", 3, 74, 8, 1], [1, "cs", 0, 75, 8, 1], [1, "cs", 3, 76, 8, 1], [1, "cs", 3, 75, 9, 1], [1, "cs", 3, 75, 10, 1], [1, "cs", 0, 76, 10, 1], [1, "cs", 0, 76, 16, 1], [1, "cs", 3, 76, 15, 1], [1, "cs", 3, 75, 16, 1], [1, "cs", 2, 77, 11, 1], [1, "cs", 2, 77, 14, 1], [1, "cs", 3, 77, 12, 1], [1, "cs", 3, 77, 13, 1], [1, "cs", 3, 77, 15, 1], [1, "cs", 0, 74, 18, 1], [1, "cs", 1, 75, 17, 1], [1, "cs", 2, 74, 17, 1], [1, "cs", 3, 73, 19, 1], [1, "cs", 3, 67, 23, 1], [1, "cs", 0, 68, 23, 1], [1, "cs", 0, 72, 20, 1], [1, "cs", 2, 73, 20, 1], [1, "cs", 2, 74, 19, 1], [1, "cs", 2, 74, 36, 1], [1, "cs", 2, 77, 27, 1], [1, "cs", 2, 76, 26, 1], [1, "cs", 2, 75, 26, 1], [1, "cs", 0, 74, 26, 1], [1, "cs", 2, 75, 25, 1], [1, "cs", 0, 76, 25, 1], [1, "cs", 1, 77, 23, 1], [1, "cs", 2, 77, 16, 1], [1, "cs", 2, 76, 17, 1], [1, "cs", 2, 76, 24, 1], [1, "cs", 2, 77, 24, 1], [1, "cs", 2, 77, 25, 1], [1, "cs", 2, 77, 26, 1], [1, "cs", 1, 75, 27, 1], [1, "cs", 3, 76, 27, 1], [1, "cs", 2, 67, 24, 1], [1, "cs", 2, 66, 24, 1], [1, "cs", 2, 73, 26, 1], [1, "cs", 2, 74, 27, 1], [1, "cs", 2, 74, 25, 1], [1, "cs", 2, 66, 19, 1], [1, "cs", 2, 66, 20, 1], [1, "cs", 2, 66, 21, 1], [1, "cs", 2, 67, 18, 1], [1, "cs", 2, 67, 22, 1], [1, "cs", 0, 77, 36, 1], [1, "cs", 0, 77, 32, 1], [1, "cs", 1, 75, 35, 1], [1, "cs", 2, 75, 36, 1], [1, "cs", 2, 76, 36, 1], [1, "cs", 2, 77, 35, 1], [1, "cs", 2, 77, 34, 1], [1, "cs", 2, 76, 35, 1], [1, "cs", 2, 77, 33, 1], [1, "cs", 2, 77, 31, 1], [1, "cs", 0, 77, 29, 1], [1, "cs", 0, 71, 32, 1], [1, "cs", 0, 76, 34, 1], [1, "cs", 2, 77, 30, 1], [1, "cs", 2, 77, 28, 1], [1, "cs", 2, 76, 28, 1], [1, "cs", 2, 75, 28, 1], [1, "cs", 2, 76, 29, 1], [1, "cs", 2, 76, 33, 1], [1, "cs", 2, 70, 32, 1], [1, "cs", 2, 69, 31, 1], [1, "cs", 0, 68, 31, 1], [1, "cs", 2, 67, 31, 1], [1, "cs", 2, 67, 30, 1], [1, "cs", 2, 69, 32, 1], [1, "cs", 1, 67, 32, 1], [1, "cs", 2, 68, 32, 1], [1, "cs", 2, 66, 32, 1], [1, "cs", 2, 66, 33, 1], [1, "cs", 2, 67, 33, 1], [1, "cs", 2, 70, 33, 1], [1, "cs", 2, 69, 33, 1], [1, "cs", 2, 68, 33, 1], [1, "cs", 0, 68, 34, 1], [1, "cs", 1, 66, 35, 1], [1, "cs", 2, 67, 34, 1], [1, "cs", 2, 66, 34, 1], [1, "cs", 2, 65, 35, 1], [1, "cs", 2, 64, 36, 1], [1, "cs", 2, 65, 36, 1], [1, "cs", 2, 67, 35, 1], [1, "cs", 2, 66, 36, 1], [1, "cs", 2, 69, 34, 1], [1, "cs", 2, 68, 35, 1], [1, "cs", 2, 76, 9, 1], [1, "cs", 2, 77, 9, 1], [1, "cs", 2, 77, 8, 1], [1, "cs", 2, 77, 10, 1], [1, "cs", 2, 78, 8, 1], [1, "cs", 2, 78, 9, 1], [1, "cs", 2, 78, 10, 1], [1, "cs", 2, 78, 11, 1], [1, "cs", 2, 78, 12, 1], [1, "cs", 2, 78, 13, 1], [1, "cs", 0, 79, 9, 1], [1, "cs", 1, 79, 11, 1], [1, "cs", 3, 79, 8, 1], [1, "cs", 3, 79, 10, 1], [1, "cs", 3, 79, 12, 1], [1, "cs", 3, 80, 8, 1], [1, "cs", 1, 80, 10, 1], [1, "cs", 2, 80, 9, 1], [1, "cs", 2, 80, 11, 1], [1, "cs", 2, 81, 8, 1], [1, "cs", 2, 81, 9, 1], [1, "cs", 2, 81, 10, 1], [1, "cs", 2, 78, 14, 1], [1, "cs", 2, 79, 13, 1], [1, "cs", 2, 78, 15, 1], [1, "cs", 2, 80, 12, 1], [1, "cs", 0, 79, 14, 1], [1, "cs", 0, 82, 9, 1], [1, "cs", 2, 82, 8, 1], [1, "cs", 2, 82, 10, 1], [1, "cs", 2, 81, 11, 1], [1, "cs", 3, 80, 13, 1], [1, "cs", 1, 78, 30, 1], [1, "cs", 1, 78, 34, 1], [1, "cs", 1, 78, 27, 1], [1, "cs", 0, 78, 25, 1], [1, "cs", 0, 79, 29, 1], [1, "cs", 0, 79, 32, 1], [1, "cs", 0, 79, 35, 1], [1, "cs", 2, 78, 35, 1], [1, "cs", 2, 78, 36, 1], [1, "cs", 2, 79, 34, 1], [1, "cs", 2, 78, 33, 1], [1, "cs", 2, 79, 33, 1], [1, "cs", 2, 78, 32, 1], [1, "cs", 2, 78, 31, 1], [1, "cs", 2, 79, 31, 1], [1, "cs", 2, 79, 30, 1], [1, "cs", 2, 78, 29, 1], [1, "cs", 2, 78, 28, 1], [1, "cs", 2, 79, 28, 1], [1, "cs", 2, 79, 27, 1], [1, "cs", 2, 78, 26, 1], [1, "cs", 2, 79, 26, 1], [1, "cs", 2, 78, 24, 1], [1, "cs", 2, 80, 34, 1], [1, "cs", 2, 80, 33, 1], [1, "cs", 2, 80, 31, 1], [1, "cs", 2, 80, 30, 1], [1, "cs", 2, 80, 32, 1], [1, "cs", 2, 80, 29, 1], [1, "cs", 2, 80, 28, 1], [1, "cs", 2, 80, 27, 1], [1, "cs", 0, 81, 30, 1], [1, "cs", 1, 81, 32, 1], [1, "cs", 1, 81, 28, 1], [1, "cs", 2, 81, 29, 1], [1, "cs", 2, 81, 31, 1], [1, "cs", 2, 81, 33, 1], [1, "cs", 2, 82, 30, 1], [1, "cs", 2, 82, 31, 1], [1, "cs", 2, 82, 32, 1], [1, "cs", 0, 37, 36, 1], [1, "cs", 2, 38, 36, 1], [1, "cs", 2, 37, 35, 1], [1, "cs", 2, 36, 36, 1], [1, "cs", 2, 34, 35, 1], [1, "cs", 2, 35, 35, 1], [1, "cs", 2, 36, 35, 1], [1, "cs", 0, 33, 34, 1], [1, "cs", 1, 35, 34, 1], [1, "cs", 2, 36, 34, 1], [1, "cs", 2, 34, 34, 1], [1, "cs", 2, 36, 33, 1], [1, "cs", 2, 35, 33, 1], [1, "cs", 2, 34, 33, 1], [1, "cs", 2, 33, 33, 1], [1, "cs", 2, 31, 32, 1], [1, "cs", 1, 36, 32, 1], [1, "cs", 1, 32, 32, 1], [1, "cs", 2, 35, 32, 1], [1, "cs", 2, 33, 32, 1], [1, "cs", 2, 32, 33, 1], [1, "cs", 2, 33, 31, 1], [1, "cs", 2, 34, 31, 1], [1, "cs", 2, 35, 31, 1], [1, "cs", 0, 34, 32, 1], [1, "cs", 2, 35, 30, 1], [1, "cs", 1, 39, 23, 1], [1, "cs", 3, 39, 22, 1], [1, "cs", 3, 36, 24, 1], [1, "cs", 3, 35, 24, 1], [1, "cs", 2, 34, 23, 1], [1, "cs", 2, 35, 23, 1], [1, "cs", 2, 36, 20, 1], [1, "cs", 2, 36, 21, 1], [1, "cs", 2, 35, 22, 1], [1, "cs", 2, 35, 16, 1], [1, "cs", 2, 34, 16, 1], [1, "cs", 2, 33, 16, 1], [1, "cs", 0, 34, 17, 1], [1, "cs", 0, 32, 15, 1], [1, "cs", 2, 31, 14, 1], [1, "cs", 3, 30, 13, 1], [1, "cs", 1, 33, 15, 1], [1, "cs", 1, 31, 13, 1], [1, "cs", 2, 32, 14, 1], [1, "cs", 0, 31, 8, 1], [1, "cs", 2, 32, 8, 1], [1, "cs", 2, 25, 13, 1], [1, "cs", 0, 25, 12, 1], [1, "cs", 2, 25, 11, 1], [1, "cs", 3, 25, 10, 1], [1, "cs", 0, 25, 9, 1], [1, "cs", 2, 25, 8, 1], [1, "cs", 2, 26, 8, 1], [1, "cs", 2, 27, 8, 1], [1, "cs", 2, 28, 8, 1], [1, "cs", 2, 29, 8, 1], [1, "cs", 2, 30, 8, 1], [1, "cs", 2, 26, 9, 1], [1, "cs", 2, 27, 9, 1], [1, "cs", 2, 26, 10, 1], [1, "cs", 1, 27, 10, 1], [1, "cs", 3, 28, 9, 1], [1, "cs", 3, 25, 14, 1], [1, "cs", 0, 25, 15, 1], [1, "cs", 2, 26, 15, 1], [1, "cs", 3, 27, 16, 1], [1, "cs", 0, 28, 17, 1], [1, "cs", 1, 29, 18, 1], [1, "cs", 2, 26, 16, 1], [1, "cs", 2, 25, 16, 1], [1, "cs", 2, 27, 17, 1], [1, "cs", 2, 26, 17, 1], [1, "cs", 1, 27, 18, 1], [1, "cs", 2, 28, 18, 1], [1, "cs", 2, 30, 19, 1], [1, "cs", 2, 29, 19, 1], [1, "cs", 2, 24, 14, 1], [1, "cs", 2, 24, 15, 1], [1, "cs", 0, 23, 14, 1], [1, "cs", 2, 24, 10, 1], [1, "cs", 2, 24, 11, 1], [1, "cs", 2, 24, 12, 1], [1, "cs", 2, 24, 13, 1], [1, "cs", 1, 23, 10, 1], [1, "cs", 0, 22, 8, 1], [1, "cs", 0, 22, 12, 1], [1, "cs", 1, 23, 8, 1], [1, "cs", 2, 24, 8, 1], [1, "cs", 2, 24, 9, 1], [1, "cs", 2, 23, 9, 1], [1, "cs", 2, 22, 9, 1], [1, "cs", 2, 22, 10, 1], [1, "cs", 2, 22, 11, 1], [1, "cs", 2, 23, 11, 1], [1, "cs", 2, 23, 12, 1], [1, "cs", 2, 23, 13, 1], [1, "cs", 2, 22, 13, 1], [1, "cs", 2, 21, 9, 1], [1, "cs", 2, 21, 8, 1], [1, "cs", 2, 29, 25, 1], [1, "cs", 2, 25, 24, 1], [1, "cs", 2, 26, 25, 1], [1, "cs", 2, 27, 25, 1], [1, "cs", 0, 28, 25, 1], [1, "cs", 1, 25, 23, 1], [1, "cs", 2, 26, 24, 1], [1, "cs", 0, 24, 25, 1], [1, "cs", 3, 23, 24, 1], [1, "cs", 3, 24, 24, 1], [1, "cs", 3, 25, 25, 1], [1, "cs", 3, 23, 25, 1], [1, "cs", 1, 22, 26, 1], [1, "cs", 1, 26, 26, 1], [1, "cs", 1, 29, 26, 1], [1, "cs", 2, 23, 26, 1], [1, "cs", 2, 24, 26, 1], [1, "cs", 2, 25, 26, 1], [1, "cs", 2, 27, 26, 1], [1, "cs", 2, 28, 26, 1], [1, "cs", 2, 30, 26, 1], [1, "cs", 2, 29, 27, 1], [1, "cs", 2, 28, 28, 1], [1, "cs", 1, 26, 29, 1], [1, "cs", 0, 28, 27, 1], [1, "cs", 2, 27, 28, 1], [1, "cs", 2, 27, 27, 1], [1, "cs", 2, 26, 28, 1], [1, "cs", 2, 26, 27, 1], [1, "cs", 2, 25, 28, 1], [1, "cs", 2, 25, 27, 1], [1, "cs", 2, 23, 27, 1], [1, "cs", 2, 22, 27, 1], [1, "cs", 2, 24, 27, 1], [1, "cs", 0, 24, 28, 1], [1, "cs", 0, 25, 32, 1], [1, "cs", 1, 24, 30, 1], [1, "cs", 2, 25, 31, 1], [1, "cs", 2, 25, 30, 1], [1, "cs", 2, 25, 29, 1], [1, "cs", 2, 24, 29, 1], [1, "cs", 2, 23, 29, 1], [1, "cs", 2, 26, 33, 1], [1, "cs", 0, 26, 34, 1], [1, "cs", 2, 27, 35, 1], [1, "cs", 2, 22, 28, 1], [1, "cs", 2, 23, 28, 1], [1, "cs", 2, 24, 31, 1], [1, "cs", 2, 24, 32, 1], [1, "cs", 2, 25, 33, 1], [1, "cs", 2, 26, 35, 1], [1, "cs", 2, 24, 33, 1], [1, "cs", 2, 25, 34, 1], [1, "cs", 1, 22, 29, 1], [1, "cs", 1, 24, 34, 1], [1, "cs", 0, 23, 35, 1], [1, "cs", 2, 25, 35, 1], [1, "cs", 2, 24, 35, 1], [1, "cs", 2, 23, 34, 1], [1, "cs", 2, 23, 33, 1], [1, "cs", 0, 22, 33, 1], [1, "cs", 1, 23, 32, 1], [1, "cs", 2, 22, 32, 1], [1, "cs", 2, 23, 31, 1], [1, "cs", 2, 23, 30, 1], [1, "cs", 2, 22, 30, 1], [1, "cs", 2, 22, 31, 1], [1, "cs", 1, 21, 31, 1], [1, "cs", 0, 21, 29, 1], [1, "cs", 2, 21, 30, 1], [1, "cs", 2, 24, 36, 1], [1, "cs", 2, 26, 36, 1], [1, "cs", 2, 25, 36, 1], [1, "cs", 2, 27, 36, 1], [1, "cs", 2, 28, 36, 1], [1, "d", 2, 83, 65, 1], [1, "d", 2, 16, 67, 1], [1, "g", 0, 15, 17, 1], [1, "s", 0, 18, 13, 1], [1, "s", 0, 85, 11, 1], [1, "f", 0, 41, 102, 1], [1, "f", 0, 42, 124, 1], [1, "f", 0, 64, 116, 1], [1, "f", 0, 74, 104, 1], [1, "f", 0, 70, 87, 1], [1, "f", 0, 27, 96, 1], [1, "f", 0, 22, 79, 1], [1, "f", 0, 20, 117, 1], [1, "f", 0, 30, 137, 1], [1, "f", 0, 59, 146, 1], [1, "f", 0, 52, 147, 1], [1, "f", 0, 20, 149, 1], [1, "f", 0, 36, 146, 1], [1, "f", 0, 62, 124, 1], [1, "g", 1, 34, 121, 1], [1, "g", 1, 52, 116, 1], [1, "g", 1, 78, 116, 1], [1, "g", 1, 71, 129, 1], [1, "s", 0, 53, 100, 1], [1, "s", 0, 73, 111, 1], [1, "s", 0, 77, 126, 1], [1, "s", 0, 48, 90, 1], [1, "s", 0, 19, 102, 1], [1, "s", 0, 18, 127, 1], [1, "s", 0, 35, 159, 1], [1, "s", 0, 65, 54, 1], [1, "s", 0, 44, 52, 1], [1, "s", 0, 26, 51, 1], [1, "f", 1, 56, 136, 1], [1, "f", 1, 41, 133, 1], [1, "f", 1, 80, 120, 1], [1, "f", 1, 16, 117, 1], [1, "f", 1, 13, 99, 1], [1, "f", 1, 17, 89, 1], [1, "f", 1, 90, 98, 1], [1, "f", 1, 84, 95, 1], [1, "f", 1, 16, 57, 1], [1, "f", 1, 77, 53, 1], [1, "d", 1, 48, 35, 1], [1, "de", 8, 33, 13, 0], [1, "de", 8, 30, 9, 0], [1, "de", 9, 32, 30, 0], [1, "de", 10, 30, 25, 0], [1, "de", 10, 33, 21, 0], [1, "de", 8, 31, 34, 0], [1, "de", 8, 67, 29, 0], [1, "de", 9, 70, 22, 0], [1, "de", 10, 70, 16, 0], [1, "de", 10, 75, 11, 0], [1, "de", 8, 68, 10, 0], [1, "de", 8, 75, 30, 0], [1, "de", 11, 71, 33, 0], [1, "de", 11, 72, 25, 0], [1, "de", 11, 64, 25, 0], [1, "de", 11, 52, 10, 0], [1, "de", 11, 31, 15, 0], [1, "de", 30, 29, 14, 0], [1, "de", 30, 36, 15, 0], [1, "de", 30, 34, 29, 0], [1, "de", 30, 30, 29, 0], [1, "de", 30, 71, 29, 0], [1, "de", 28, 68, 25, 0], [1, "de", 28, 75, 15, 0], [1, "de", 27, 67, 19, 0], [1, "de", 29, 72, 10, 0], [1, "de", 29, 75, 32, 0], [1, "de", 29, 32, 20, 0], [1, "fo", 1, 39, 12, 0], [1, "fo", 1, 34, 14, 0], [1, "fo", 1, 74, 28, 0], [1, "fo", 2, 74, 29, 0], [1, "fo", 2, 69, 30, 0], [1, "fo", 2, 77, 22, 0], [1, "fo", 2, 74, 21, 0], [1, "fo", 2, 76, 18, 0], [1, "fo", 1, 78, 17, 0], [1, "fo", 1, 28, 19, 0], [1, "fo", 2, 27, 24, 0], [1, "fo", 2, 24, 17, 0], [1, "fo", 2, 29, 21, 0], [1, "fo", 1, 27, 32, 0], [1, "fo", 2, 30, 33, 0], [1, "fo", 1, 29, 28, 0], [1, "fo", 2, 28, 31, 0], [1, "fo", 2, 20, 24, 0], [1, "fo", 2, 20, 26, 0], [1, "fo", 2, 23, 16, 0], [1, "fo", 2, 11, 25, 0], [1, "de", 33, 29, 22, 0], [1, "de", 34, 32, 25, 0], [1, "de", 34, 30, 18, 0], [1, "de", 33, 78, 18, 0], [1, "de", 33, 73, 35, 0], [1, "de", 36, 72, 23, 0], [1, "de", 35, 25, 18, 0], [1, "d", 1, 83, 41, 1], [1, "d", 1, 17, 40, 1], [1, "cs", 2, 224, 104, 1], [1, "cs", 0, 224, 105, 1], [1, "cs", 3, 224, 106, 1], [1, "la", 3, 216, 128, 1], [1, "la", 0, 215, 126, 1], [1, "s", 0, 216, 130, 1], [1, "s", 1, 217, 129, 1], [1, "s", 0, 218, 128, 1], [1, "s", 1, 217, 127, 1], [1, "s", 0, 217, 126, 1], [1, "s", 1, 217, 125, 1], [1, "s", 0, 216, 124, 1], [1, "s", 1, 215, 124, 1], [1, "s", 0, 214, 124, 1], [1, "s", 1, 213, 125, 1], [1, "s", 0, 213, 126, 1], [1, "plm", 2, 217, 130, 0], [1, "plm", 2, 212, 125, 0], [1, "p", 0, 214, 134, 1], [1, "s", 1, 211, 126, 1], [1, "b", 1, 45, 277, 0], [1, "b", 1, 50, 286, 0], [1, "b", 2, 51, 284, 0], [1, "b", 1, 47, 287, 0], [1, "b", 0, 39, 285, 0], [1, "b", 3, 40, 283, 0], [1, "b", 0, 52, 283, 0], [1, "b", 1, 51, 280, 0], [1, "g", 0, 45, 269, 1], [1, "p", 0, 55, 281, 1], [1, "b", 1, 5, 172, 0], [1, "b", 2, 6, 172, 0], [1, "t", 5, 6, 171, 0], [1, "t", 1, 5, 170, 0], [1, "t", 1, 5, 164, 0], [1, "t", 3, 6, 164, 0], [1, "b", 0, 6, 165, 0], [1, "t", 3, 5, 165, 0], [1, "b", 2, 6, 166, 0], [1, "t", 4, 5, 166, 0], [1, "t", 4, 6, 167, 0], [1, "t", 2, 6, 168, 0], [1, "t", 0, 6, 169, 0], [1, "t", 4, 6, 170, 0], [1, "t", 0, 5, 167, 0], [1, "t", 2, 5, 169, 0], [1, "b", 0, 5, 168, 0], [1, "s", 1, 7, 153, 1], [1, "s", 2, 7, 151, 1], [1, "de", 5, 7, 152, 0], [1, "t", 1, 5, 154, 0], [1, "b", 0, 6, 154, 0], [1, "t", 2, 6, 155, 0], [1, "b", 2, 6, 156, 0], [1, "t", 2, 5, 157, 0], [1, "t", 4, 5, 155, 0], [1, "b", 0, 6, 157, 0], [1, "t", 1, 5, 156, 0], [1, "t", 5, 6, 158, 0], [1, "b", 2, 6, 159, 0], [1, "b", 0, 6, 162, 0], [1, "t", 4, 6, 163, 0], [1, "t", 4, 6, 161, 0], [1, "b", 1, 6, 160, 0], [1, "b", 2, 5, 163, 0], [1, "b", 2, 5, 158, 0], [1, "b", 2, 5, 161, 0], [1, "t", 1, 5, 162, 0], [1, "t", 1, 5, 160, 0], [1, "b", 1, 85, 176, 0], [1, "b", 2, 83, 178, 0], [1, "s", 1, 82, 177, 1], [1, "b", 0, 76, 172, 0], [1, "b", 3, 76, 174, 0], [1, "t", 3, 73, 174, 0], [1, "t", 5, 72, 175, 0], [1, "t", 5, 87, 173, 0], [1, "de", 2, 76, 175, 0], [1, "de", 3, 77, 171, 0], [1, "de", 3, 86, 177, 0], [1, "de", 2, 71, 175, 0], [1, "s", 1, 70, 174, 1], [1, "r", 48, 174, 0], [1, "r", 49, 175, 0], [1, "r", 50, 175, 0], [1, "r", 51, 175, 0], [1, "r", 51, 174, 0], [1, "r", 50, 174, 0], [1, "r", 49, 174, 0], [1, "r", 52, 175, 0], [1, "r", 52, 176, 0], [1, "r", 51, 176, 0], [1, "r", 50, 176, 0], [1, "r", 49, 176, 0], [1, "r", 48, 175, 0], [1, "r", 47, 175, 0], [1, "r", 48, 176, 0], [1, "r", 69, 163, 0], [1, "r", 70, 163, 0], [1, "r", 71, 163, 0], [1, "r", 73, 163, 0], [1, "r", 72, 163, 0], [1, "r", 73, 164, 0], [1, "r", 72, 164, 0], [1, "r", 71, 164, 0], [1, "r", 70, 164, 0], [1, "r", 69, 164, 0], [1, "r", 68, 164, 0], [1, "r", 68, 165, 0], [1, "r", 69, 165, 0], [1, "r", 70, 165, 0], [1, "r", 71, 165, 0], [1, "r", 72, 165, 0], [1, "r", 74, 164, 0], [1, "r", 73, 165, 0], [1, "r", 72, 166, 0], [1, "r", 71, 166, 0], [1, "r", 70, 166, 0], [1, "r", 74, 165, 0], [1, "r", 24, 164, 0], [1, "r", 25, 164, 0], [1, "r", 27, 164, 0], [1, "r", 26, 164, 0], [1, "r", 28, 165, 0], [1, "r", 26, 165, 0], [1, "r", 27, 165, 0], [1, "r", 25, 165, 0], [1, "r", 24, 165, 0], [1, "r", 23, 165, 0], [1, "r", 22, 165, 0], [1, "r", 21, 165, 0], [1, "r", 21, 166, 0], [1, "r", 22, 166, 0], [1, "r", 23, 166, 0], [1, "r", 24, 166, 0], [1, "r", 25, 166, 0], [1, "r", 26, 166, 0], [1, "r", 27, 166, 0], [1, "r", 28, 166, 0], [1, "r", 28, 167, 0], [1, "r", 26, 167, 0], [1, "r", 25, 167, 0], [1, "r", 24, 167, 0], [1, "r", 23, 167, 0], [1, "r", 22, 167, 0], [1, "r", 27, 167, 0], [1, "r", 29, 166, 0], [1, "r", 29, 167, 0], [1, "r", 28, 168, 0], [1, "r", 27, 168, 0], [1, "r", 26, 168, 0], [1, "r", 25, 168, 0], [1, "r", 24, 168, 0], [1, "r", 23, 168, 0], [1, "r", 27, 169, 0], [1, "r", 26, 169, 0], [1, "r", 25, 169, 0], [1, "r", 24, 169, 0], [1, "r", 23, 169, 0], [1, "r", 22, 168, 0], [1, "r", 21, 167, 0], [1, "s", 1, 52, 174, 1], [1, "t", 3, 50, 177, 0], [1, "t", 4, 49, 177, 0], [1, "b", 0, 47, 174, 0], [1, "b", 0, 69, 166, 0], [1, "t", 2, 68, 166, 0], [1, "t", 5, 74, 163, 0], [1, "t", 1, 73, 162, 0], [1, "s", 0, 73, 166, 1], [1, "s", 2, 76, 165, 1], [1, "g", 2, 59, 175, 1], [1, "p", 0, 78, 168, 1], [1, "p", 0, 61, 162, 1], [1, "p", 0, 42, 170, 1], [1, "p", 0, 20, 174, 1], [1, "p", 0, 16, 160, 1], [1, "b", 1, 23, 164, 0], [1, "b", 1, 28, 169, 0], [1, "b", 2, 29, 168, 0], [1, "b", 2, 16, 170, 0], [1, "t", 1, 15, 171, 0], [1, "t", 5, 13, 175, 0], [1, "t", 5, 19, 166, 0], [1, "t", 5, 26, 163, 0], [1, "s", 1, 29, 165, 1], [1, "t", 5, 11, 167, 0], [1, "t", 0, 29, 176, 0], [1, "b", 2, 30, 175, 0], [1, "t", 2, 24, 177, 0], [1, "b", 1, 37, 174, 0], [1, "b", 0, 35, 172, 0], [1, "b", 3, 37, 170, 0], [1, "t", 4, 38, 169, 0], [1, "t", 4, 34, 173, 0], [1, "t", 5, 38, 175, 0], [1, "b", 2, 39, 173, 0], [1, "t", 3, 37, 176, 0], [1, "t", 4, 30, 168, 0], [1, "s", 2, 35, 176, 1], [1, "s", 1, 41, 175, 1], [1, "b", 2, 53, 176, 0], [1, "t", 5, 55, 173, 0], [1, "t", 5, 45, 170, 0], [1, "b", 1, 53, 162, 0], [1, "b", 0, 50, 164, 0], [1, "t", 2, 54, 163, 0], [1, "t", 3, 49, 165, 0], [1, "t", 4, 48, 160, 0], [1, "t", 4, 57, 164, 0], [1, "t", 4, 66, 162, 0], [1, "b", 1, 86, 161, 0], [1, "b", 2, 81, 163, 0], [1, "t", 3, 85, 162, 0], [1, "t", 5, 81, 162, 0], [1, "t", 5, 88, 163, 0], [1, "t", 1, 84, 166, 0], [1, "t", 5, 72, 160, 0], [1, "t", 5, 70, 170, 0], [1, "s", 1, 57, 162, 1], [1, "b", 1, 39, 161, 0], [1, "b", 0, 34, 164, 0], [1, "b", 2, 54, 164, 0], [1, "t", 1, 59, 169, 0], [1, "t", 3, 60, 170, 0], [1, "t", 4, 63, 169, 0], [1, "t", 4, 63, 174, 0], [1, "t", 1, 62, 175, 0], [1, "t", 5, 40, 162, 0], [1, "t", 1, 63, 180, 0], [1, "t", 2, 64, 179, 0], [1, "t", 2, 35, 165, 0], [1, "s", 1, 63, 173, 1], [1, "s", 2, 40, 165, 1], [1, "b", 0, 46, 169, 0], [1, "de", 22, 74, 168, 0], [1, "de", 22, 86, 168, 0], [1, "de", 22, 83, 175, 0], [1, "de", 22, 78, 175, 0], [1, "de", 19, 72, 176, 0], [1, "de", 19, 68, 168, 0], [1, "de", 19, 65, 163, 0], [1, "de", 19, 75, 162, 0], [1, "de", 19, 80, 162, 0], [1, "de", 19, 88, 159, 0], [1, "de", 19, 87, 164, 0], [1, "de", 19, 61, 177, 0], [1, "de", 19, 59, 172, 0], [1, "de", 19, 59, 167, 0], [1, "de", 19, 53, 165, 0], [1, "de", 19, 56, 163, 0], [1, "de", 19, 51, 161, 0], [1, "de", 19, 48, 167, 0], [1, "de", 19, 47, 170, 0], [1, "de", 19, 41, 163, 0], [1, "de", 19, 37, 161, 0], [1, "de", 19, 36, 166, 0], [1, "de", 19, 36, 171, 0], [1, "de", 19, 34, 174, 0], [1, "de", 19, 40, 172, 0], [1, "de", 19, 38, 177, 0], [1, "de", 19, 42, 176, 0], [1, "de", 19, 53, 178, 0], [1, "de", 19, 53, 172, 0], [1, "de", 19, 64, 181, 0], [1, "de", 19, 64, 175, 0], [1, "de", 19, 79, 172, 0], [1, "de", 19, 30, 170, 0], [1, "de", 19, 17, 168, 0], [1, "de", 19, 14, 173, 0], [1, "de", 19, 12, 162, 0], [1, "de", 19, 9, 167, 0], [1, "de", 19, 20, 161, 0], [1, "de", 19, 27, 162, 0], [1, "de", 19, 83, 195, 0], [1, "de", 2, 85, 163, 0], [1, "de", 2, 80, 164, 0], [1, "de", 2, 84, 169, 0], [1, "de", 2, 55, 165, 0], [1, "de", 3, 46, 163, 0], [1, "de", 2, 66, 169, 0], [1, "de", 0, 63, 175, 0], [1, "de", 0, 34, 164, 0], [1, "de", 0, 18, 160, 0], [1, "de", 2, 40, 160, 0], [1, "de", 2, 53, 160, 0], [1, "de", 2, 14, 170, 0], [1, "de", 2, 19, 175, 0], [1, "de", 2, 23, 176, 0], [1, "de", 5, 60, 147, 0], [1, "de", 33, 59, 160, 0], [1, "de", 33, 85, 157, 0], [1, "de", 33, 29, 143, 0], [1, "de", 33, 62, 140, 0], [1, "de", 33, 43, 127, 0], [1, "de", 33, 18, 129, 0], [1, "de", 33, 50, 134, 0], [1, "de", 33, 79, 127, 0], [1, "de", 33, 89, 139, 0], [1, "b", 1, 44, 156, 0], [1, "t", 2, 45, 157, 0], [1, "b", 0, 75, 156, 0], [1, "t", 3, 76, 157, 0], [1, "t", 5, 62, 157, 0], [1, "t", 5, 79, 156, 0], [1, "t", 5, 41, 156, 0], [1, "b", 1, 28, 156, 0], [1, "t", 2, 27, 157, 0], [1, "t", 4, 21, 156, 0], [1, "t", 4, 56, 159, 0], [1, "f", 1, 94, 153, 1], [1, "f", 2, 93, 153, 1], [1, "f", 2, 99, 153, 1], [1, "f", 1, 98, 153, 1], [1, "f", 0, 97, 153, 1], [1, "f", 1, 96, 153, 1], [1, "s", 1, 7, 149, 1], [1, "de", 4, 7, 150, 0], [1, "b", 3, 43, 281, 0], [1, "de", 50, 24, 39, 0], [1, "de", 50, 21, 39, 0], [1, "de", 50, 22, 43, 0], [1, "de", 50, 15, 34, 0], [1, "de", 50, 18, 26, 0], [1, "de", 50, 44, 42, 0], [1, "de", 50, 57, 39, 0], [1, "de", 50, 62, 43, 0], [1, "de", 50, 77, 44, 0], [1, "de", 50, 71, 41, 0], [1, "de", 50, 55, 39, 0], [1, "de", 50, 22, 39, 0], [1, "de", 50, 20, 41, 0], [1, "de", 50, 18, 21, 0], [1, "de", 50, 15, 21, 0], [1, "de", 50, 18, 19, 0], [1, "de", 50, 17, 17, 0], [1, "de", 50, 18, 10, 0], [1, "de", 50, 18, 9, 0], [1, "de", 50, 52, 41, 0], [1, "de", 50, 82, 39, 0], [1, "de", 50, 86, 38, 0], [1, "de", 50, 84, 31, 0], [1, "de", 50, 86, 30, 0], [1, "de", 50, 84, 26, 0], [1, "de", 50, 86, 23, 0], [1, "de", 50, 86, 14, 0], [1, "de", 50, 29, 42, 0], [1, "de", 9, 74, 37, 0], [1, "de", 9, 76, 22, 0], [1, "de", 10, 79, 24, 0], [1, "de", 11, 77, 17, 0], [1, "de", 36, 81, 25, 0], [1, "de", 36, 80, 36, 0], [1, "de", 36, 21, 36, 0], [1, "de", 28, 23, 22, 0], [1, "de", 28, 27, 31, 0], [1, "de", 28, 69, 36, 0], [1, "de", 28, 80, 20, 0], [1, "de", 51, 24, 155, 0], [1, "de", 51, 7, 154, 0], [1, "de", 51, 11, 154, 0], [1, "de", 51, 12, 156, 0], [1, "de", 51, 16, 154, 0], [1, "de", 51, 20, 154, 0], [1, "de", 51, 23, 154, 0], [1, "de", 51, 18, 157, 0], [1, "de", 51, 31, 154, 0], [1, "de", 51, 32, 157, 0], [1, "de", 51, 86, 154, 0], [1, "de", 51, 88, 156, 0], [1, "de", 51, 82, 154, 0], [1, "de", 51, 80, 154, 0], [1, "de", 51, 77, 154, 0], [1, "de", 51, 74, 154, 0], [1, "de", 51, 71, 154, 0], [1, "de", 51, 67, 154, 0], [1, "de", 51, 60, 154, 0], [1, "de", 51, 57, 154, 0], [1, "de", 51, 65, 154, 0], [1, "de", 51, 68, 156, 0], [1, "de", 51, 59, 156, 0], [1, "de", 51, 55, 154, 0], [1, "de", 51, 54, 154, 0], [1, "de", 51, 52, 154, 0], [1, "de", 51, 55, 155, 0], [1, "de", 51, 54, 157, 0], [1, "de", 51, 49, 154, 0], [1, "de", 51, 46, 154, 0], [1, "de", 51, 44, 154, 0], [1, "de", 51, 43, 154, 0], [1, "de", 51, 41, 154, 0], [1, "de", 51, 38, 154, 0], [1, "de", 51, 39, 156, 0], [1, "de", 51, 34, 154, 0], [1, "de", 5, 19, 142, 0], [1, "de", 5, 37, 147, 0], [1, "de", 7, 53, 147, 0], [1, "de", 6, 69, 150, 0], [1, "de", 4, 94, 148, 0], [1, "de", 4, 66, 147, 0], [1, "de", 4, 10, 145, 0], [1, "de", 4, 28, 137, 0], [1, "de", 4, 15, 137, 0], [1, "de", 4, 48, 134, 0], [1, "de", 5, 67, 135, 0], [1, "de", 34, 84, 155, 0], [1, "de", 35, 70, 156, 0], [1, "de", 35, 51, 156, 0], [1, "de", 35, 56, 157, 0], [1, "de", 35, 65, 159, 0], [1, "de", 35, 23, 156, 0], [1, "de", 35, 15, 155, 0], [1, "de", 35, 8, 155, 0], [1, "de", 33, 13, 155, 0], [1, "de", 33, 33, 158, 0], [1, "de", 36, 78, 155, 0], [1, "de", 36, 87, 157, 0], [1, "fo", 1, 73, 36, 0], [1, "fo", 1, 80, 24, 0], [1, "fo", 2, 67, 36, 0], [1, "fo", 2, 45, 36, 0], [1, "fo", 2, 53, 34, 0], [1, "fo", 1, 51, 35, 0], [1, "fo", 1, 58, 35, 0], [1, "fo", 1, 33, 35, 0], [1, "fo", 1, 31, 33, 0], [1, "fo", 2, 29, 36, 0], [1, "fo", 2, 56, 36, 0], [1, "fo", 2, 60, 37, 0], [1, "fo", 2, 45, 32, 0], [1, "fo", 2, 22, 25, 0], [1, "fo", 2, 21, 35, 0], [1, "de", 52, 90, 208, 0], [1, "de", 18, 94, 250, 0], [1, "de", 17, 95, 253, 0], [1, "cs", 0, 140, 5, 1], [1, "cs", 2, 139, 5, 1], [1, "cs", 2, 138, 5, 1], [1, "cs", 2, 138, 6, 1], [1, "cs", 2, 139, 6, 1], [1, "cs", 2, 141, 6, 1], [1, "cs", 2, 140, 6, 1], [1, "la", 3, 143, 7, 1], [1, "la", 3, 139, 7, 1], [1, "cs", 0, 137, 7, 1], [1, "cs", 1, 138, 8, 1], [1, "cs", 2, 137, 6, 1], [1, "cs", 2, 137, 8, 1], [1, "cs", 2, 136, 7, 1], [1, "cs", 2, 138, 9, 1], [1, "cs", 3, 139, 9, 1], [1, "cs", 3, 136, 8, 1], [1, "cs", 3, 137, 9, 1], [1, "de", 53, 92, 165, 0], [1, "de", 53, 92, 180, 0], [1, "de", 53, 92, 188, 0], [1, "de", 54, 92, 153, 0], [1, "de", 54, 91, 153, 0], [1, "de", 54, 90, 153, 0], [1, "de", 54, 89, 153, 0], [1, "de", 54, 88, 153, 0], [1, "de", 54, 87, 153, 0], [1, "de", 54, 86, 153, 0], [1, "de", 54, 85, 153, 0], [1, "de", 54, 84, 153, 0], [1, "de", 54, 83, 153, 0], [1, "de", 54, 82, 153, 0], [1, "de", 54, 81, 153, 0], [1, "de", 54, 80, 153, 0], [1, "de", 54, 79, 153, 0], [1, "de", 54, 78, 153, 0], [1, "de", 54, 77, 153, 0], [1, "de", 54, 76, 153, 0], [1, "de", 54, 75, 153, 0], [1, "de", 54, 74, 153, 0], [1, "de", 54, 73, 153, 0], [1, "de", 54, 72, 153, 0], [1, "de", 54, 70, 153, 0], [1, "de", 54, 71, 153, 0], [1, "de", 54, 69, 153, 0], [1, "de", 54, 68, 153, 0], [1, "de", 54, 67, 153, 0], [1, "de", 54, 66, 153, 0], [1, "de", 54, 65, 153, 0], [1, "de", 54, 64, 153, 0], [1, "de", 54, 63, 153, 0], [1, "de", 54, 61, 153, 0], [1, "de", 54, 62, 153, 0], [1, "de", 54, 60, 153, 0], [1, "de", 54, 59, 153, 0], [1, "de", 54, 57, 153, 0], [1, "de", 54, 58, 153, 0], [1, "de", 54, 56, 153, 0], [1, "de", 54, 55, 153, 0], [1, "de", 54, 54, 153, 0], [1, "de", 54, 53, 153, 0], [1, "de", 54, 52, 153, 0], [1, "de", 54, 51, 153, 0], [1, "de", 54, 50, 153, 0], [1, "de", 54, 49, 153, 0], [1, "de", 54, 48, 153, 0], [1, "de", 54, 47, 153, 0], [1, "de", 54, 46, 153, 0], [1, "de", 54, 45, 153, 0], [1, "de", 54, 44, 153, 0], [1, "de", 54, 43, 153, 0], [1, "de", 54, 42, 153, 0], [1, "de", 54, 41, 153, 0], [1, "de", 54, 40, 153, 0], [1, "de", 54, 39, 153, 0], [1, "de", 54, 37, 153, 0], [1, "de", 54, 38, 153, 0], [1, "de", 54, 36, 153, 0], [1, "de", 54, 35, 153, 0], [1, "de", 54, 34, 153, 0], [1, "de", 54, 33, 153, 0], [1, "de", 54, 32, 153, 0], [1, "de", 54, 31, 153, 0], [1, "de", 54, 30, 153, 0], [1, "de", 54, 29, 153, 0], [1, "de", 54, 28, 153, 0], [1, "de", 54, 27, 153, 0], [1, "de", 54, 26, 153, 0], [1, "de", 54, 25, 153, 0], [1, "de", 54, 24, 153, 0], [1, "de", 54, 23, 153, 0], [1, "de", 54, 22, 153, 0], [1, "de", 54, 21, 153, 0], [1, "de", 54, 20, 153, 0], [1, "de", 54, 19, 153, 0], [1, "de", 54, 18, 153, 0], [1, "de", 54, 17, 153, 0], [1, "de", 54, 16, 153, 0], [1, "de", 54, 15, 153, 0], [1, "de", 54, 14, 153, 0], [1, "de", 54, 13, 153, 0], [1, "de", 54, 12, 153, 0], [1, "de", 54, 11, 153, 0], [1, "de", 54, 10, 153, 0], [1, "de", 54, 8, 153, 0], [1, "de", 54, 9, 153, 0], [1, "de", 55, 83, 8, 0], [1, "de", 55, 83, 9, 0], [1, "de", 55, 83, 10, 0], [1, "de", 55, 83, 11, 0], [1, "de", 55, 83, 12, 0], [1, "de", 55, 83, 13, 0], [1, "de", 55, 83, 14, 0], [1, "de", 55, 83, 15, 0], [1, "de", 55, 83, 16, 0], [1, "de", 55, 83, 17, 0], [1, "de", 55, 83, 19, 0], [1, "de", 55, 83, 18, 0], [1, "de", 55, 83, 20, 0], [1, "de", 55, 83, 21, 0], [1, "de", 55, 83, 22, 0], [1, "de", 55, 83, 23, 0], [1, "de", 55, 83, 24, 0], [1, "de", 55, 83, 25, 0], [1, "de", 55, 83, 26, 0], [1, "de", 55, 83, 27, 0], [1, "de", 55, 83, 28, 0], [1, "de", 55, 83, 29, 0], [1, "de", 55, 83, 30, 0], [1, "de", 55, 83, 31, 0], [1, "de", 55, 83, 32, 0], [1, "de", 55, 83, 33, 0], [1, "de", 55, 83, 34, 0], [1, "de", 55, 83, 36, 0], [1, "de", 55, 83, 35, 0], [1, "de", 55, 83, 37, 0], [1, "de", 55, 83, 38, 0], [1, "de", 55, 81, 38, 0], [1, "de", 55, 82, 38, 0], [1, "de", 55, 80, 38, 0], [1, "de", 55, 79, 38, 0], [1, "de", 55, 78, 38, 0], [1, "de", 55, 77, 38, 0], [1, "de", 55, 76, 38, 0], [1, "de", 55, 75, 38, 0], [1, "de", 55, 73, 38, 0], [1, "de", 55, 74, 38, 0], [1, "de", 55, 72, 38, 0], [1, "de", 55, 71, 38, 0], [1, "de", 55, 70, 38, 0], [1, "de", 55, 68, 38, 0], [1, "de", 55, 69, 38, 0], [1, "de", 55, 67, 38, 0], [1, "de", 55, 66, 38, 0], [1, "de", 55, 65, 38, 0], [1, "de", 55, 64, 38, 0], [1, "de", 55, 63, 38, 0], [1, "de", 55, 62, 38, 0], [1, "de", 55, 60, 38, 0], [1, "de", 55, 61, 38, 0], [1, "de", 55, 59, 38, 0], [1, "de", 55, 57, 38, 0], [1, "de", 55, 58, 38, 0], [1, "de", 55, 56, 38, 0], [1, "de", 55, 55, 38, 0], [1, "de", 55, 54, 38, 0], [1, "de", 55, 53, 38, 0], [1, "de", 55, 52, 38, 0], [1, "de", 55, 51, 38, 0], [1, "de", 55, 49, 38, 0], [1, "de", 55, 50, 38, 0], [1, "de", 55, 48, 38, 0], [1, "de", 55, 47, 38, 0], [1, "de", 55, 46, 38, 0], [1, "de", 55, 45, 38, 0], [1, "de", 55, 44, 38, 0], [1, "de", 55, 43, 38, 0], [1, "de", 55, 42, 38, 0], [1, "de", 55, 41, 38, 0], [1, "de", 55, 40, 38, 0], [1, "de", 55, 39, 38, 0], [1, "de", 55, 38, 38, 0], [1, "de", 55, 37, 38, 0], [1, "de", 55, 36, 38, 0], [1, "de", 55, 34, 38, 0], [1, "de", 55, 35, 38, 0], [1, "de", 55, 33, 38, 0], [1, "de", 55, 31, 38, 0], [1, "de", 55, 32, 38, 0], [1, "de", 55, 30, 38, 0], [1, "de", 55, 29, 38, 0], [1, "de", 55, 28, 38, 0], [1, "de", 55, 27, 38, 0], [1, "de", 55, 26, 38, 0], [1, "de", 55, 25, 38, 0], [1, "de", 55, 24, 38, 0], [1, "de", 55, 23, 38, 0], [1, "de", 55, 21, 38, 0], [1, "de", 55, 22, 38, 0], [1, "de", 55, 20, 38, 0], [1, "de", 55, 19, 38, 0], [1, "de", 55, 19, 37, 0], [1, "de", 55, 19, 36, 0], [1, "de", 55, 19, 35, 0], [1, "de", 55, 19, 34, 0], [1, "de", 55, 19, 33, 0], [1, "de", 55, 19, 32, 0], [1, "de", 55, 19, 31, 0], [1, "de", 55, 19, 30, 0], [1, "de", 55, 19, 28, 0], [1, "de", 55, 19, 29, 0], [1, "de", 55, 19, 27, 0], [1, "de", 55, 19, 26, 0], [1, "de", 55, 19, 25, 0], [1, "de", 55, 19, 24, 0], [1, "de", 55, 19, 23, 0], [1, "de", 55, 19, 22, 0], [1, "de", 55, 19, 21, 0], [1, "de", 55, 19, 20, 0], [1, "de", 55, 19, 18, 0], [1, "de", 55, 19, 19, 0], [1, "de", 55, 19, 16, 0], [1, "de", 55, 19, 17, 0], [1, "de", 55, 19, 15, 0], [1, "de", 55, 19, 14, 0], [1, "de", 55, 19, 13, 0], [1, "de", 55, 19, 12, 0], [1, "de", 55, 19, 11, 0], [1, "de", 55, 19, 10, 0], [1, "de", 55, 19, 9, 0], [1, "de", 55, 19, 8, 0], [1, "de", 55, 84, 35, 0], [1, "de", 55, 84, 32, 0], [1, "de", 55, 84, 25, 0], [1, "de", 50, 84, 24, 0], [1, "de", 55, 84, 20, 0], [1, "de", 55, 84, 17, 0], [1, "de", 55, 84, 16, 0], [1, "de", 50, 84, 15, 0], [1, "de", 55, 84, 8, 0], [1, "de", 55, 84, 9, 0], [1, "de", 50, 85, 11, 0], [1, "de", 55, 81, 39, 0], [1, "de", 50, 83, 40, 0], [1, "de", 55, 72, 39, 0], [1, "de", 55, 74, 39, 0], [1, "de", 55, 66, 39, 0], [1, "de", 55, 65, 39, 0], [1, "de", 50, 67, 41, 0], [1, "de", 55, 56, 39, 0], [1, "de", 55, 58, 39, 0], [1, "de", 55, 50, 39, 0], [1, "de", 50, 49, 39, 0], [1, "de", 55, 44, 39, 0], [1, "de", 55, 42, 39, 0], [1, "de", 50, 43, 39, 0], [1, "de", 50, 41, 39, 0], [1, "de", 50, 37, 39, 0], [1, "de", 55, 36, 39, 0], [1, "de", 55, 32, 39, 0], [1, "de", 50, 31, 39, 0], [1, "de", 55, 23, 39, 0], [1, "de", 55, 18, 37, 0], [1, "de", 50, 18, 36, 0], [1, "de", 55, 18, 35, 0], [1, "de", 50, 18, 34, 0], [1, "de", 55, 18, 31, 0], [1, "de", 50, 18, 30, 0], [1, "de", 55, 18, 25, 0], [1, "de", 50, 18, 24, 0], [1, "de", 55, 18, 20, 0], [1, "de", 55, 18, 14, 0], [1, "de", 50, 18, 15, 0], [1, "de", 55, 18, 8, 0], [1, "de", 54, 90, 154, 0], [1, "de", 51, 89, 154, 0], [1, "de", 54, 85, 154, 0], [1, "de", 54, 81, 154, 0], [1, "de", 54, 76, 154, 0], [1, "de", 54, 70, 154, 0], [1, "de", 54, 66, 154, 0], [1, "de", 54, 61, 154, 0], [1, "de", 54, 56, 154, 0], [1, "de", 54, 53, 154, 0], [1, "de", 54, 45, 154, 0], [1, "de", 54, 42, 154, 0], [1, "de", 54, 37, 154, 0], [1, "de", 54, 30, 154, 0], [1, "de", 54, 25, 154, 0], [1, "de", 54, 17, 154, 0], [1, "de", 54, 10, 154, 0], [1, "de", 54, 8, 154, 0], [1, "de", 55, 20, 9, 0], [1, "de", 53, 93, 154, 0], [1, "de", 53, 93, 156, 0], [1, "de", 53, 93, 158, 0], [1, "de", 52, 91, 157, 0], [1, "de", 53, 93, 159, 0], [1, "de", 53, 93, 161, 0], [1, "de", 53, 93, 162, 0], [1, "de", 53, 93, 163, 0], [1, "de", 53, 93, 164, 0], [1, "de", 53, 93, 165, 0], [1, "de", 53, 93, 166, 0], [1, "de", 53, 93, 167, 0], [1, "de", 52, 91, 167, 0], [1, "de", 53, 93, 169, 0], [1, "de", 53, 93, 168, 0], [1, "de", 53, 93, 170, 0], [1, "de", 53, 93, 171, 0], [1, "de", 53, 93, 173, 0], [1, "de", 53, 93, 176, 0], [1, "de", 53, 93, 175, 0], [1, "de", 53, 92, 169, 0], [1, "de", 53, 93, 178, 0], [1, "de", 53, 93, 179, 0], [1, "de", 53, 93, 180, 0], [1, "de", 53, 93, 181, 0], [1, "de", 53, 93, 183, 0], [1, "de", 53, 93, 184, 0], [1, "de", 53, 93, 186, 0], [1, "de", 18, 95, 185, 0], [1, "de", 53, 93, 187, 0], [1, "de", 53, 93, 188, 0], [1, "de", 52, 91, 186, 0], [1, "de", 53, 93, 190, 0], [1, "de", 53, 93, 192, 0], [1, "de", 53, 93, 195, 0], [1, "de", 53, 93, 194, 0], [1, "de", 52, 91, 196, 0], [1, "de", 53, 93, 197, 0], [1, "de", 53, 93, 200, 0], [1, "de", 53, 93, 198, 0], [1, "de", 53, 93, 201, 0], [1, "de", 53, 93, 202, 0], [1, "de", 53, 93, 203, 0], [1, "de", 53, 93, 204, 0], [1, "de", 53, 93, 206, 0], [1, "de", 53, 93, 205, 0], [1, "de", 53, 93, 207, 0], [1, "de", 53, 93, 209, 0], [1, "de", 53, 93, 210, 0], [1, "de", 53, 93, 212, 0], [1, "de", 52, 91, 204, 0], [1, "de", 53, 93, 213, 0], [1, "de", 53, 93, 214, 0], [1, "de", 53, 93, 215, 0], [1, "de", 53, 93, 216, 0], [1, "de", 53, 93, 217, 0], [1, "de", 53, 93, 218, 0], [1, "de", 53, 93, 219, 0], [1, "de", 53, 93, 220, 0], [1, "de", 52, 92, 213, 0], [1, "de", 52, 92, 206, 0], [1, "de", 52, 92, 202, 0], [1, "de", 53, 92, 201, 0], [1, "de", 52, 92, 194, 0], [1, "de", 52, 92, 178, 0], [1, "de", 52, 92, 171, 0], [1, "de", 53, 93, 221, 0], [1, "de", 53, 93, 222, 0], [1, "de", 53, 93, 223, 0], [1, "de", 53, 93, 225, 0], [1, "de", 53, 93, 228, 0], [1, "de", 53, 93, 227, 0], [1, "de", 52, 92, 217, 0], [1, "de", 53, 92, 218, 0], [1, "de", 52, 92, 221, 0], [1, "de", 52, 92, 225, 0], [1, "de", 52, 93, 226, 0], [1, "de", 52, 93, 224, 0], [1, "de", 52, 93, 208, 0], [1, "de", 52, 93, 211, 0], [1, "de", 52, 93, 196, 0], [1, "de", 52, 93, 199, 0], [1, "de", 52, 93, 189, 0], [1, "de", 52, 93, 191, 0], [1, "de", 52, 93, 193, 0], [1, "de", 52, 93, 182, 0], [1, "de", 52, 93, 185, 0], [1, "de", 52, 93, 172, 0], [1, "de", 52, 93, 174, 0], [1, "de", 52, 93, 177, 0], [1, "de", 52, 93, 155, 0], [1, "de", 52, 93, 157, 0], [1, "de", 52, 93, 160, 0], [1, "de", 52, 92, 162, 0], [1, "de", 53, 93, 229, 0], [1, "de", 53, 93, 231, 0], [1, "de", 53, 93, 232, 0], [1, "de", 53, 93, 234, 0], [1, "de", 52, 93, 230, 0], [1, "de", 52, 92, 228, 0], [1, "de", 53, 93, 235, 0], [1, "de", 53, 93, 236, 0], [1, "de", 53, 93, 237, 0], [1, "de", 53, 93, 239, 0], [1, "de", 53, 93, 240, 0], [1, "de", 52, 93, 238, 0], [1, "de", 53, 93, 241, 0], [1, "de", 52, 93, 242, 0], [1, "de", 52, 93, 243, 0], [1, "de", 53, 93, 244, 0], [1, "de", 53, 93, 246, 0], [1, "de", 53, 93, 245, 0], [1, "de", 52, 93, 247, 0], [1, "de", 53, 93, 248, 0], [1, "de", 52, 92, 235, 0], [1, "de", 52, 92, 245, 0], [1, "de", 52, 93, 249, 0], [1, "de", 53, 93, 250, 0], [1, "de", 53, 93, 251, 0], [1, "de", 53, 93, 252, 0], [1, "de", 53, 93, 254, 0], [1, "de", 52, 93, 253, 0], [1, "de", 52, 93, 255, 0], [1, "de", 53, 93, 257, 0], [1, "de", 53, 93, 256, 0], [1, "de", 52, 93, 258, 0], [1, "de", 53, 93, 259, 0], [1, "de", 52, 93, 260, 0], [1, "de", 53, 93, 263, 0], [1, "de", 53, 93, 264, 0], [1, "de", 53, 93, 265, 0], [1, "de", 52, 93, 266, 0], [1, "de", 53, 93, 267, 0], [1, "de", 52, 93, 268, 0], [1, "de", 52, 93, 269, 0], [1, "de", 53, 93, 276, 0], [1, "de", 53, 93, 277, 0], [1, "de", 52, 93, 278, 0], [1, "de", 53, 93, 279, 0], [1, "de", 52, 93, 280, 0], [1, "de", 52, 93, 283, 0], [1, "de", 53, 93, 284, 0], [1, "de", 53, 93, 285, 0], [1, "de", 53, 93, 286, 0], [1, "de", 52, 93, 287, 0], [1, "de", 53, 93, 288, 0], [1, "de", 53, 93, 289, 0], [1, "de", 52, 93, 290, 0], [1, "de", 52, 93, 291, 0], [1, "de", 53, 93, 292, 0], [1, "de", 52, 93, 293, 0], [1, "de", 53, 93, 294, 0], [1, "de", 52, 93, 295, 0], [1, "de", 52, 93, 296, 0], [1, "de", 53, 93, 297, 0], [1, "de", 53, 93, 298, 0], [1, "de", 52, 93, 299, 0], [1, "de", 53, 93, 300, 0], [1, "de", 52, 92, 298, 0], [1, "de", 52, 92, 293, 0], [1, "r", 92, 262, 0], [1, "r", 93, 262, 0], [1, "de", 52, 93, 261, 0], [1, "cs", 0, 223, 104, 1], [1, "cs", 2, 223, 105, 1], [1, "cs", 2, 223, 102, 1], [1, "cs", 2, 223, 103, 1], [1, "la", 3, 141, 8, 1], [1, "cs", 2, 140, 9, 1], [1, "la", 4, 142, 9, 1], [1, "de", 4, 81, 149, 0], [1, "f", 0, 83, 148, 1], [1, "f", 1, 82, 149, 1], [1, "de", 34, 81, 156, 0], [1, "de", 51, 17, 9, 0], [1, "de", 54, 16, 9, 0], [1, "de", 54, 15, 9, 0], [1, "cs", 3, 223, 106, 1], [1, "p", 0, 119, 279, 1], [1, "p", 0, 109, 242, 1], [1, "cs", 1, 29, 9, 1], [1, "cs", 2, 30, 9, 1], [1, "cs", 2, 31, 9, 1], [1, "cs", 2, 32, 9, 1], [1, "cs", 2, 33, 9, 1], [1, "cs", 2, 69, 9, 1], [1, "cs", 2, 71, 9, 1], [1, "cs", 2, 70, 9, 1], [1, "cs", 1, 72, 9, 1], [1, "cs", 2, 73, 9, 1], [1, "de", 10, 31, 10, 0], [1, "de", 10, 29, 10, 0], [1, "de", 10, 44, 10, 0], [1, "de", 4, 87, 10, 0], [1, "de", 4, 86, 10, 0], [1, "de", 5, 87, 9, 0], [1, "de", 5, 13, 10, 0], [1, "de", 4, 14, 11, 0], [1, "de", 4, 16, 10, 0], [1, "de", 4, 17, 10, 0], [1, "cs", 2, 146, 9, 1], [1, "cs", 2, 148, 9, 1], [1, "cs", 2, 150, 9, 1], [1, "cs", 2, 153, 9, 1], [1, "cs", 2, 155, 9, 1], [1, "cs", 1, 149, 9, 1], [1, "cs", 1, 154, 9, 1], [1, "cs", 3, 147, 9, 1], [1, "cs", 3, 151, 9, 1], [1, "cs", 3, 152, 9, 1], [1, "cs", 3, 156, 9, 1], [1, "cs", 3, 157, 9, 1], [1, "cs", 3, 158, 9, 1], [1, "cs", 3, 159, 9, 1], [1, "cs", 3, 160, 9, 1], [1, "cs", 0, 161, 9, 1], [1, "cs", 2, 162, 9, 1], [1, "cs", 2, 163, 9, 1], [1, "cs", 1, 164, 9, 1], [1, "cs", 2, 165, 9, 1], [1, "cs", 3, 166, 9, 1], [1, "cs", 3, 168, 9, 1], [1, "cs", 3, 170, 9, 1], [1, "cs", 1, 169, 9, 1], [1, "cs", 2, 167, 9, 1], [1, "cs", 2, 171, 9, 1], [1, "cs", 2, 173, 9, 1], [1, "cs", 2, 172, 9, 1], [1, "cs", 2, 174, 9, 1], [1, "cs", 1, 175, 9, 1], [1, "cs", 3, 176, 9, 1], [1, "cs", 3, 178, 9, 1], [1, "cs", 3, 179, 9, 1], [1, "cs", 0, 180, 9, 1], [1, "cs", 2, 177, 9, 1], [1, "cs", 2, 182, 9, 1], [1, "cs", 2, 181, 9, 1], [1, "cs", 2, 183, 9, 1], [1, "cs", 2, 184, 9, 1], [1, "cs", 2, 185, 9, 1], [1, "cs", 2, 186, 9, 1], [1, "cs", 1, 187, 9, 1], [1, "cs", 2, 188, 9, 1], [1, "cs", 3, 189, 9, 1], [1, "cs", 3, 190, 9, 1], [1, "cs", 3, 191, 9, 1], [1, "cs", 2, 192, 9, 1], [1, "cs", 0, 193, 9, 1], [1, "cs", 2, 194, 9, 1], [1, "cs", 2, 196, 9, 1], [1, "cs", 2, 198, 9, 1], [1, "cs", 2, 200, 9, 1], [1, "cs", 3, 195, 9, 1], [1, "cs", 3, 197, 9, 1], [1, "cs", 3, 199, 9, 1], [1, "cs", 0, 201, 9, 1], [1, "cs", 2, 202, 9, 1], [1, "cs", 2, 203, 9, 1], [1, "cs", 3, 208, 9, 1], [1, "cs", 3, 207, 9, 1], [1, "cs", 3, 206, 9, 1], [1, "cs", 3, 205, 9, 1], [1, "cs", 3, 204, 9, 1], [1, "cs", 3, 214, 9, 1], [1, "cs", 3, 215, 9, 1], [1, "cs", 3, 216, 9, 1], [1, "cs", 3, 217, 9, 1], [1, "cs", 3, 218, 9, 1], [1, "b", 0, 5, 159, 0], [1, "b", 0, 5, 171, 0], [2, "isl", 1, 122, 63, 0], [2, "isl", 2, 119, 277, 0], [2, "isl", 2, 109, 244, 0], [2, "isl", 2, 114, 205, 0], [2, "isl", 1, 120, 150, 0], [2, "isl", 2, 154, 129, 0], [2, "isl", 0, 184, 158, 0], [2, "isl", 1, 208, 128, 0], [2, "isl", 1, 215, 132, 0], [2, "isl", 1, 214, 128, 0], [2, "isl", 1, 209, 132, 0], [1, "la", 3, 217, 20, 1], [1, "la", 1, 215, 19, 1], [1, "la", 0, 212, 18, 1], [1, "la", 4, 214, 18, 1], [1, "la", 4, 216, 19, 1], [1, "la", 4, 211, 20, 1], [1, "la", 3, 210, 19, 1], [1, "la", 3, 215, 21, 1], [1, "la", 1, 214, 20, 1], [1, "la", 3, 214, 22, 1], [1, "la", 3, 214, 24, 1], [1, "la", 4, 214, 26, 1], [1, "la", 4, 213, 27, 1], [1, "la", 1, 212, 28, 1], [1, "la", 2, 212, 29, 1], [1, "la", 5, 212, 30, 1], [1, "la", 4, 208, 19, 1], [1, "la", 4, 207, 19, 1], [1, "la", 1, 206, 19, 1], [1, "la", 1, 205, 19, 1], [1, "la", 2, 204, 19, 1], [1, "la", 5, 203, 19, 1], [1, "la", 3, 210, 17, 1]]), To = {
        time: Math.floor(2 * Math.random()),
        items: []
    }, Je = (document.getElementById("game_body").style.backgroundColor = Le.GROUND[To.time],
    To.items.push(new k2(xe.FIRE,0,0,0,0,Math.random() * Math.PI * 2,2,1)),
    To.items.push(new k2(xe.FRUIT,0,0,0,0,0,0,5)),
    To.items.push(new k2(xe.WORKBENCH,0,0,0,0,Math.PI / 4,0,0)),
    To.items.push(new k2(xe.FRUIT,0,0,0,0,0,0,5)),
    client = new function() {
        var s = this;
        this.socket = null,
        this._current_id = 0,
        this.server_list = [],
        this.mode_list = [[], [], [], [], [], [], [], [], []],
        this.selected_server = [-1, -1, -1, -1, -1, -1, -1, -1, -1],
        this.current_mode = 0,
        this.privateServer = 0,
        this.get_rivet_token = function() {
            return null
        }
        ,
        this.fetch_server_list = async function() {
            var e = await this.get_rivet_token()
              , t = (console.log(e),
            {})
              , e = (e && (t.Authorization = "Bearer " + e),
            await fetch(L2 + "/lobbies/list", {
                method: "GET",
                headers: t
            }));
            if (console.log(t + ":aa"),
            !e.ok)
                throw console.error("Failed to list lobbies"),
                "Failed to list lobbies";
            var i, n = await e.json(), r = (console.log("Lobbies", n),
            this.server_list = [],
            {});
            for (i of n.game_modes)
                this.server_list.push({
                    a: "Auto Select",
                    gm: i.game_mode_id,
                    m: 100,
                    nu: 0,
                    auto: !0
                });
            for (let t of n.lobbies) {
                var o = t.game_mode_id;
                let e;
                e = o in r ? ++r[o] : r[o] = 1;
                o = n.regions.find(e=>e.region_id == t.region_id);
                this.server_list.push({
                    a: o.region_display_name + " " + e,
                    gm: t.game_mode_id,
                    idx: e,
                    m: t.max_players_normal,
                    nu: t.total_player_count,
                    id: t.lobby_id
                })
            }
        }
        ,
        this.geolocate_server = function(e) {
            for (var t = [], i = 0; i < e.length; i++)
                -1 !== e[i].a.indexOf(ln) && t.push(i);
            return 0 === t.length ? 0 : t[Math.floor(Math.random() * t.length)]
        }
        ,
        this.set_server_list = function(e) {
            for (var t = 0, i = 0; i < e.length; i++)
                t += e[i].nu;
            for (var n = document.getElementById("servselect"), r = (-1 === client.selected_server[client.current_mode] ? client.selected_server[client.current_mode] = n.selectedIndex = client.geolocate_server(e) : n.selectedIndex = client.selected_server[client.current_mode],
            '<label for="ul-id"><button type="button" class="ng-binding">' + e[n.selectedIndex].a + (0 < e[n.selectedIndex].nu ? " [" + e[n.selectedIndex].nu + " " + Pe[TEXT.PLAYERS] + "]" : "") + '</button></label><ul role="listbox" id="ul-id" class="md-whiteframe-z1" name="ul-id"><li role="option" id="selectDisabled">' + Pe[TEXT.CHOOSE] + " (" + this.total_players + ") " + Pe[TEXT.TOTAL_PLAYERS] + "</li>"), i = 0; i < e.length; i++)
                r = (r += '<li role="option">' + e[i].a) + " [" + e[i].nu + " " + Pe[TEXT.PLAYERS] + "]</li>\n";
            r += '<li role="option" id="selectDisabled">(' + t + ") " + Pe[TEXT.TOTAL_MODE] + "</li>",
            n.innerHTML = r += "</div>",
            $(".md-select").on("click", function() {
                $(this).toggleClass("active")
            }),
            $(".md-select ul li").on("click", function() {
                for (var e = $(this).text(), t = -1, i = client.mode_list[client.current_mode], n = 0; n < i.length; n++)
                    if (i[n].a + " [" + i[n].nu + " " + Pe[TEXT.PLAYERS] + "]" === e) {
                        t = n;
                        break
                    }
                -1 !== t && (document.getElementById("servselect").selectedIndex = t,
                client.selected_server[client.current_mode] = t,
                $(".md-select ul li").removeClass("active"),
                $(this).addClass("active"),
                $(".md-select label button").text(e))
            })
        }
        ,
        this.total_players = 0,
        this.update_server_list = function() {
            for (var e = this.total_players = 0; e < client.server_list.length; e++)
                ("experimental" == this.server_list[e].gm ? this.mode_list[Ke.MODE_EXPERIMENTAL] : "zombies" == this.server_list[e].gm ? this.mode_list[Ke.MODE_ZOMBIES] : "forest" == this.server_list[e].gm ? this.mode_list[Ke.MODE_LEGACY] : "battle-royale" == this.server_list[e].gm ? this.mode_list[Ke.MODE_BR] : "vampires" == this.server_list[e].gm ? this.mode_list[Ke.MODE_VAMPIRES] : this.mode_list[Ke.MODE_PVP]).push(this.server_list[e]),
                this.total_players += this.server_list[e].nu;
            for (e = 0; e < this.mode_list.length; e++)
                0 === this.mode_list[e].length && this.mode_list[e].push({
                    a: Pe[TEXT.COMMING_SOON],
                    nu: 0,
                    i: "127.0.0.1",
                    p: 80
                });
            this.set_server_list(this.mode_list[0]),
            this.select_gamemode = function(e) {
                client.current_mode = e,
                client.set_server_list(client.mode_list[client.current_mode]),
                client.set_server_list(client.mode_list[client.current_mode]),
                document.getElementById("servselect").selectedIndex = client.current_mode
            }
        }
        ,
        this.timeout_server = 0,
        this.timeout_number = 0,
        this.timeout_handler = null,
        this.timeout = function() {
            s.timeout_number++,
            s.socket.close(),
            N0 = !1,
            s.timeout_number > H2.TIMEOUT_NUMBER ? (De.error_level = H2.ERROR_REFUSED,
            s.new_alert(Pe[TEXT.YOU_CANNOT_JOIN]),
            De.waiting = !1,
            Ye.reconnect.enabled && Je.quit(De.run)) : s.connect_timeout()
        }
        ,
        this.kick = function(e) {
            this._current_id == this.socket._current_id && (this._current_id++,
            this.new_alert(Pe[TEXT.KICKED] + e),
            Je.quit(De.run))
        }
        ,
        this.mute = function() {
            this.new_alert("You speak too much")
        }
        ,
        this.already_used_key = function() {
            clearTimeout(this.timeout_handler),
            this.new_alert(Pe[TEXT.KEY_ALREADY]),
            De.waiting = !1
        }
        ,
        this.hide_shop_kit = function() {
            Ye.shop.open = !1
        }
        ,
        this.hide_recipe_book = function() {
            Je.show_recipe_book = 0
        }
        ,
        this.hide_clock = function() {
            Je.show_clock = 0
        }
        ,
        this.sand_tempest = function(e) {
            Ye.desert.tempest = e,
            -300 < Fe.dist_desert && (0 === e ? this.new_alert(Pe[TEXT.TEMPEST_OFF]) : this.new_alert(Pe[TEXT.TEMPEST_ON]))
        }
        ,
        this.bandage = function(e) {
            Ye.bandage = e
        }
        ,
        this.blizzard_status = function(e) {
            Ye.blizzard = e
        }
        ,
        this.blizzard = function(e) {
            Ye.winter.tempest = e,
            -300 < Fe.dist_winter && (0 === e ? this.new_alert(Pe[TEXT.BLIZZARD_OFF]) : this.new_alert(Pe[TEXT.BLIZZARD_ON]))
        }
        ,
        this.explorer_quest = function(e) {
            0 === e ? document.getElementById("exploreForest").src = "img/forest-leaf-ok.png" : 1 === e ? document.getElementById("exploreWinter").src = "img/winter-flake-ok.png" : 2 === e ? document.getElementById("exploreLava").src = "img/lava-volcano-ok.png" : 3 === e && (document.getElementById("exploreDesert").src = "img/desert-cactus-ok.png")
        }
        ,
        this.hide_market = function() {
            Je.show_market = 0
        }
        ,
        this.hide_quest = function() {
            Je.show_quest = 0
        }
        ,
        this.clean_inventory = function() {
            Ye.inv.can_select = [],
            Ye.inv.n = [],
            Ye.inv.id = -1,
            Ye.inv.drag.stop(),
            Ye.craft.can_craft = [],
            Ye.craft.crafting = !1,
            Ye.craft.can_build = !1,
            Ye.craft.preview = -1,
            Ye.craft.id = -1,
            Ye.craft.workbench = !1,
            Ye.craft.well = !1,
            Ye.craft.fire = !1,
            Ye.craft.water = !1,
            Ye.craft.timeout = new Utils.LinearAnimation(!1,0,1,0,1,1)
        }
        ,
        this.wrong_key = function() {
            clearTimeout(this.timeout_handler),
            this.new_alert(),
            De.waiting = !1
        }
        ,
        this.commands = function(e) {
            for (var t = 0; t < e.length; t++)
                "string" == typeof e[t] && (e[t] = Utils.escape_html(e[t]));
            Ye.terminal.write_command(e[1], e[2], e[3], e[4])
        }
        ,
        this.message = function(e) {
            this.new_alert(e)
        }
        ,
        this.wrong_password = function() {
            clearTimeout(this.timeout_handler),
            this.new_alert(Pe[TEXT.WRONG_PASSWORD]),
            De.waiting = !1
        }
        ,
        this.new_version = function() {
            clearTimeout(this.timeout_handler),
            this.new_alert(Pe[TEXT.NEW_VERSION]),
            De.waiting = !1
        }
        ,
        this.old_version = function() {
            clearTimeout(this.timeout_handler),
            this.new_alert(Pe[TEXT.OLD_VERSION]),
            De.waiting = !1
        }
        ,
        this.get_bag = function() {
            Ye.inv.update_bag_size(1, 0),
            Je.update_inv_buttons()
        }
        ,
        this.verified_account = function(e) {
            var t = e[1]
              , i = Fe.players[t]
              , i = (i.skin = e[2],
            i.accessory = e[3],
            i.baglook = e[4],
            i.book = e[5],
            i.crate = e[6],
            i.dead = e[7],
            i.level = e[8],
            i.id = t,
            Fe.fast_units[t * Fe.max_units]);
            i && (i.skin = e[2],
            i.accessory = e[3],
            i.baglook = e[4],
            i.book = e[5])
        }
        ,
        this.build_stop = function(e) {
            e === Ge.BAG ? (Ye.inv.update_bag_size(1, 0),
            Je.update_inv_buttons()) : this.gather([0, e, 1]),
            Ye.craft.restart()
        }
        ,
        this.recycle_ok = function(e) {
            Ye.auto_feed.delay = 0,
            Ye.craft.do_recycle(e)
        }
        ,
        this.recycle_stop = function(e) {
            for (var t, i = S[e].r, n = 0; n < i.length; n++)
                (Ye.inv.max > Ye.inv.can_select.length || 0 < Ye.inv.n[i[n][0]]) && (t = Math.floor(.8 * i[n][1])) && this.gather([0, i[n][0], t]);
            Ye.craft.restart()
        }
        ,
        this.build_ok = function(e) {
            Ye.auto_feed.delay = 0,
            Ye.craft.do_craft(e)
        }
        ,
        this.new_alert = function(e) {
            Ye.alert.text ? e !== Ye.alert.text && e !== Ye.alert.list[Ye.alert.list.length - 1] && Ye.alert.list.push(e) : Ye.alert.text = e
        }
        ,
        this.no_resources = function() {
            this.new_alert(Pe[TEXT.NO_MORE_RESOURCES])
        }
        ,
        this.survive = function() {
            var e = 0 == Ye.day ? Pe[TEXT.SURVIVED_1DAY] : Pe[TEXT.SURVIVED] + (Ye.day + 1) + Pe[TEXT.DAYS];
            this.new_alert(e),
            Ye.day++
        }
        ,
        this.fail_restore = function() {
            clearTimeout(s.timeout_handler),
            Ye.reconnect.enabled = !1,
            Ye.alive = !1,
            this.new_alert(Pe[TEXT.DEAD_SAD]),
            Je.quit(De.run),
            this.socket.close(),
            N0 = !1
        }
        ,
        this.blocked = function() {
            clearTimeout(this.timeout_handler),
            this.new_alert(Pe[TEXT.SPAM_ME]),
            De.waiting = !1
        }
        ,
        this.full = function() {
            clearTimeout(this.timeout_handler),
            this.new_alert(Pe[TEXT.SPAM_ME2]),
            De.waiting = !1
        }
        ,
        this.new_player = function(e) {
            var t = e[1]
              , i = Fe.players;
            i[t].nickname = e[2],
            i[t].skin = e[3],
            i[t].accessory = e[4],
            i[t].baglook = e[5],
            i[t].book = e[6],
            i[t].crate = e[7],
            i[t].dead = e[8],
            i[t].level = e[9],
            i[t].score = 0,
            i[t].ldb_label = null,
            i[t].label = null,
            i[t].label_winter = null,
            i[t].alive = !0,
            i[t].id = t,
            1 === v2 && (i[t].nickname += "|" + t),
            setTimeout(()=>{
                c0.Join.unshift(e[2] + " | " + Fe.players[e[1]].level),
                5 < c0.Join.length && c0.Join.pop()
            }
            , 750),
            c0.toggle11 = !0,
            clearTimeout(c0.toggle1),
            c0.toggle1 = setTimeout(()=>{
                c0.toggle11 = !1
            }
            , 1e4)
        }
        ,
        this.get_focus = function() {
            h0 || this.socket[f2](x0[F0].stringify([11]))
        }
        ,
        this.empty_res = function() {
            this.new_alert(Pe[TEXT.EMPTY]),
            Ve.AutoEme.e && 2 < ++A0 && (A0 = 0)
        }
        ,
        this.inv_full = function() {
            this.new_alert(Pe[TEXT.INV_FULL])
        }
        ,
        this.choose_kit = function(e) {
            a0 = e,
            this.socket[f2](X0[V0].stringify([21, e])),
            Ye.shop.open = !1
        }
        ,
        this.kit_ok = function(e) {
            for (var t = G2[e - 1].items, i = 0; i < t.length && Ye.inv.max > Ye.inv.can_select.length; i++) {
                var n = t[i][1]
                  , r = t[i][0];
                t[i][1] === Ge.BAG ? Ye.inv.update_bag_size(1, 0) : this.gather([0, n, r])
            }
        }
        ,
        this.gather = function(e) {
            for (var t = e.length, i = Ye.inv, n = 1; n < t; n += 2) {
                for (var r = e[n], o = e[n + 1], a = 0; a < i.can_select.length; a++)
                    if (i.can_select[a].id == r) {
                        i.n[r] += o;
                        break
                    }
                a == i.can_select.length && (i.n[r] = o,
                i.can_select.push(Je.inv_buttons[r]),
                Je.update_inv_buttons())
            }
            Ye.craft.update()
        }
        ,
        this.gauges = function(e, t, i, n, r, o, a) {
            (Math.floor(11 - (performance.now() - M0.HPTimer) / 1e3) < 5 || e / 100 > Ye.gauges.l) && (M0.HPTimer = performance.now()),
            M0.GaugeTimer = performance.now(),
            Ye.gauges.l = e / 100,
            Ye.gauges.realhp = 2 * e,
            Ye.gauges.h = t / 100,
            Ye.gauges.c = i / 100,
            Ye.gauges.t = n / 100,
            Ye.gauges.o = r / 100,
            Ye.gauges.wa = o / 100,
            Ve.Ice2 ? 40 < Math.floor(100 - 100 * Ye.gauges.wa) && (client.socket.send(JSON.stringify([5, 136])),
            client.socket.send(JSON.stringify([5, 136])),
            client.socket.send(JSON.stringify([5, 136]))) : Ve.Ice && !Ye.gauges.wa && client.socket.send(JSON.stringify([5, 136])),
            Ye.bandage = a
        }
        ,
        this.succeed_quest = function(e) {
            Je.quests.modify(e, 2)
        }
        ,
        this.fail_quest = function(e) {
            Je.quests.modify(e, 0)
        }
        ,
        this.claimed = function(e) {
            Je.quests.modify(e, 3)
        }
        ,
        this.gauges_life = function(e, t) {
            Ye.gauges.l = e / 100,
            Ye.bandage = t
        }
        ,
        this.gauges_water = function(e) {
            Ye.gauges.t = e / 100
        }
        ,
        this.gauges_food = function(e) {
            Ye.gauges.h = e / 100
        }
        ,
        this.gauges_warm = function(e) {
            Ye.gauges.wa = e / 100
        }
        ,
        this.gauges_cold = function(e) {
            Ye.gauges.c = e / 100
        }
        ,
        this.get_time = function(e) {
            Fe.time = e,
            Fe.transition = !0,
            Ve.BaseFixer.smart && (window.bruh = 0,
            window.FixArray = 0),
            Xe.transition = 1
        }
        ,
        this.change_ground = function() {
            document.getElementById("game_body").style.backgroundColor = Le.GROUND[Fe.time]
        }
        ,
        this.kill_player = function(e) {
            Fe.mode == Ke.MODE_HUNGER_GAMES && "spectator" !== Fe.players[e].nickname && this.new_alert(Fe.players[e].nickname + Pe[TEXT.DEAD]),
            Fe.players[e].alive = !1,
            c0.Leave.unshift(Fe.players[e].nickname + " | " + Fe.players[e].level),
            5 < c0.Leave.length && c0.Leave.pop(),
            c0.toggle22 = !0,
            clearTimeout(c0.toggle2),
            c0.toggle2 = setTimeout(()=>{
                c0.toggle22 = !1
            }
            , 1e4)
        }
        ,
        this.set_cam = function(e) {
            e = new Uint16Array(e);
            player.cam.change(e[1], e[2])
        }
        ,
        this.recover_focus = function(e) {
            e = new Uint16Array(e);
            Ye.cam.change(e[1], e[2])
        }
        ,
        this.hitten_other = function(e, t) {
            for (var i = new Uint16Array(t), n = (e.length - 2) / 4, r = 0; r < n; r++) {
                var o = i[1 + 2 * r]
                  , a = e[4 + 4 * r]
                  , s = (e[5 + 4 * r] >> 1) / 127 * Math.PI * 2
                  , a = Fe.fast_units[a * Fe.max_units + o];
                a && a.hit && (Xe.loaded && Xe.run && Xe.hit(1 & e[5 + 4 * r], SOUND_BUILD[a.type], a.x, a.y),
                a.hit.angle = s,
                a.hit.update = s)
            }
        }
        ,
        this.hitten = function(e) {
            for (var t = new Uint16Array(e), i = (t.length - 1) / 4, n = 0; n < i; n++) {
                var r, o = 4 * n, a = t[1 + o], s = t[2 + o], d = (t[3 + o] >> 1) / 127 * Math.PI * 2, _ = t[4 + o], u = he.tiles[s][a];
                switch (_) {
                case 0:
                    (r = u.p[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 1:
                    (r = u.s[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 2:
                    (r = u.s[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 3:
                    (r = u.s[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 4:
                    (r = u.t[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 5:
                    (r = u.t[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 6:
                    (r = u.t[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 7:
                    (r = u.t[3][0]).angle = d,
                    r.update = !0;
                    break;
                case 8:
                    (r = u.t[4][0]).angle = d,
                    r.update = !0;
                    break;
                case 9:
                    (r = u.t[5][0]).angle = d,
                    r.update = !0;
                    break;
                case 10:
                    (r = u.g[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 11:
                    (r = u.g[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 12:
                    (r = u.g[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 13:
                    (r = u.d[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 14:
                    (r = u.d[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 15:
                    (r = u.d[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 16:
                    (r = u.b[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 17:
                    (r = u.b[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 18:
                    (r = u.b[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 19:
                    (r = u.b[3][0]).angle = d,
                    r.update = !0;
                    break;
                case 20:
                    (r = u.f[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 21:
                    (r = u.f[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 22:
                    (r = u.f[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 23:
                    (r = u.sw[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 24:
                    (r = u.sw[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 25:
                    (r = u.sw[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 26:
                    (r = u.gw[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 27:
                    (r = u.gw[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 28:
                    (r = u.gw[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 29:
                    (r = u.dw[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 30:
                    (r = u.dw[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 31:
                    (r = u.dw[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 32:
                    (r = u.a[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 33:
                    (r = u.a[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 34:
                    (r = u.a[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 35:
                    (r = u.cs[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 36:
                    (r = u.cs[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 37:
                    (r = u.cs[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 38:
                    (r = u.cs[3][0]).angle = d,
                    r.update = !0;
                    break;
                case 40:
                    (r = u.plm[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 41:
                    (r = u.plm[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 42:
                    (r = u.plm[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 50:
                    (r = u.re[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 51:
                    (r = u.re[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 52:
                    (r = u.re[2][0]).angle = d,
                    r.update = !0;
                    break;
                case 55:
                    (r = u.c[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 56:
                    (r = u.m[0][0]).angle = d,
                    r.update = !0;
                    break;
                case 57:
                    (r = u.m[1][0]).angle = d,
                    r.update = !0;
                    break;
                case 58:
                    (r = u.m[2][0]).angle = d,
                    r.update = !0
                }
                Xe.loaded && Xe.run && r && Xe.hit(1 & t[3 + o], SOUND_NATURE[_], r.x, r.y)
            }
        }
        ,
        this.resurrection = function() {
            this.socket[f2](J0[B0].stringify([17, Ye.resurrection.pid, Ye.resurrection.iid]))
        }
        ,
        this.give_wheat = function(e, t) {
            this.socket[f2](J0[z0].stringify([22, t, e.pid, e.iid]))
        }
        ,
        this.give_bread_oven = function(e, t, i) {
            t ? this.socket[f2](J0[z0].stringify([25, t, e.pid, e.iid])) : this.socket[f2](J0[w0].stringify([24, i, e.pid, e.iid]))
        }
        ,
        this.take_bread = function(e) {
            this.socket[f2](q0[k0].stringify([26, e.pid, e.iid]))
        }
        ,
        this.claim_quest_reward = function(e) {
            this.socket[f2](q0[U0].stringify([27, e]))
        }
        ,
        this.give_well = function(e) {
            this.socket[f2](j0[B0].stringify([30, e.pid, e.iid]))
        }
        ,
        this.give_wood_extractor = function(e, t) {
            this.socket[f2](X0[k0].stringify([38, t, e.pid, e.iid, e.type]))
        }
        ,
        this.give_wood = function(e, t) {
            for (; 0 !== t; )
                255 < t ? (this.socket[f2](X0[k0].stringify([12, 255, e.pid, e.iid])),
                t -= 255) : (this.socket[f2](X0[k0].stringify([12, t, e.pid, e.iid])),
                t = 0)
        }
        ,
        this.give_item = function(e, t, i) {
            for (; 0 !== i; )
                255 < i ? (this.socket.send(JSON.stringify([8, t, 255, e.pid, e.iid])),
                i -= 255) : (this.socket.send(JSON.stringify([8, t, i, e.pid, e.iid])),
                i = 0)
        }
        ,
        this.take_extractor = function(e) {
            this.socket[f2](q0[k0].stringify([37, e.pid, e.iid, e.type]))
        }
        ,
        this.take_flour = function(e) {
            this.socket[f2](q0[k0].stringify([23, e.pid, e.iid]))
        }
        ,
        this.take_chest = function(e) {
            this.socket[f2](q0[k0].stringify([9, e.pid, e.iid]))
        }
        ,
        this.unlock_chest = function(e) {
            this.socket[f2](Z0[W0].stringify([15, e.pid, e.iid]))
        }
        ,
        this.lock_chest = function(e) {
            this.socket[f2]($0[V0].stringify([16, e.iid]))
        }
        ,
        this.kick_team = function(e) {
            s.socket[f2](Q0[U0].stringify([20, Ye.totem.id, Ye.team[e]]))
        }
        ,
        this.join_team = function() {
            s.socket[f2](tn[en].stringify([18, Ye.totem.pid, Ye.totem.id]))
        }
        ,
        this.leave_team = function() {
            s.socket[f2](nn[K0].stringify([19]))
        }
        ,
        this.lock_team = function() {
            s.socket[f2](nn[U0].stringify([35, Ye.totem.id])),
            "LOCK" == document.getElementById("lock_team").innerHTML ? (Ye.totem.lock = 1,
            document.getElementById("lock_team").innerHTML = "UNLOCK") : (Ye.totem.lock = 0,
            document.getElementById("lock_team").innerHTML = "LOCK")
        }
        ,
        this.removeunits = function(e) {
            Fe.delete_units(e)
        }
        ,
        this.units = function(e, t, i) {
            for (var n = new Uint16Array(e), r = (i && Fe.delete_all_units(),
            (t.length - 2) / 18), o = 0; o < r; o++) {
                var a, s = 2 + 18 * o, d = 1 + 9 * o, _ = t[s], u = n[1 + d], l = n[5 + d], c = _ * Fe.max_units + l, h = n[2 + d], E = n[3 + d], T = n[4 + d], A = n[6 + d], I = n[7 + d], d = n[8 + d], s = t[1 + s] / 255 * Math.PI * 2;
                if (u & m.DELETE) {
                    Fe.fast_units[Ye.uid];
                    if (F.includes(c) || F.push(c),
                    window.AutoMaticActive)
                        K.includes(c) || K.push(c),
                        O = !0;
                    else if (Fe.delete_units(c),
                    O && (O = !1,
                    K)) {
                        for (let e = 0; e < K.length; e++)
                            Fe.delete_units(K[e]);
                        K = []
                    }
                } else
                    Fe.fast_units[c] ? ((a = Fe.fast_units[c]).r.x = E,
                    a.r.y = T,
                    0 != _ && Utils.dist(a, a.r) > H2.LAG_DISTANCE && (a.x = E,
                    a.y = T),
                    a.id === Ye.id && 0 !== _ || (a.nangle = s),
                    a.action |= u,
                    a.info = A,
                    a.speed = I,
                    a.extra = d,
                    a.update && a.update(u),
                    2 !== u || 61 != h && 70 != h && 80 != h && 67 != h && 65 != h && 74 != h && 77 != h && 78 != h && 72 != h && 69 != h && 64 != h && 73 != h && 88 != h && 63 != h && 62 != h && 86 != h && 82 != h && 66 != h && 71 != h && 68 != h && 75 != h && 76 != h && 60 != h || (a.dmged += function(t) {
                        if (t) {
                            let e = 0;
                            switch (t.right) {
                            case -1:
                                e = 5;
                                break;
                            case 0:
                                e = 19;
                                break;
                            case 1:
                                e = 2;
                                break;
                            case 3:
                                e = 3;
                                break;
                            case 5:
                                e = 22;
                                break;
                            case 6:
                                e = 24;
                                break;
                            case 7:
                                e = 5;
                                break;
                            case 14:
                                e = 15;
                                break;
                            case 8:
                                e = 1;
                                break;
                            case 12:
                                e = 10;
                                break;
                            case 13:
                                e = 14;
                                break;
                            case 15:
                                e = 17;
                                break;
                            case 16:
                                e = 22;
                                break;
                            case 17:
                                e = 24;
                                break;
                            case 18:
                                e = 14;
                                break;
                            case 19:
                                e = 30;
                                break;
                            case 28:
                                e = 1;
                                break;
                            case 30:
                                e = 27;
                                break;
                            case 31:
                                e = 5;
                                break;
                            case 32:
                                e = 6;
                                break;
                            case 33:
                                e = 18;
                                break;
                            case 34:
                                e = 22;
                                break;
                            case 35:
                                e = 2;
                                break;
                            case 36:
                                e = 3;
                                break;
                            case 4:
                            case 37:
                                e = 4;
                                break;
                            case 38:
                                e = 5;
                                break;
                            case 39:
                                e = 6;
                                break;
                            case 45:
                                e = 12;
                                break;
                            case 49:
                                e = 1;
                                break;
                            case 51:
                                e = 4;
                                break;
                            case 52:
                                e = 5;
                                break;
                            case 53:
                            case 54:
                                e = 0;
                                break;
                            case 55:
                                e = 2;
                                break;
                            case 56:
                                e = 5;
                                break;
                            case 57:
                                e = 12;
                                break;
                            case 62:
                                e = 30;
                                break;
                            case 63:
                                e = 33;
                                break;
                            case 65:
                                e = 100;
                                break;
                            case 66:
                                e = 200;
                                break;
                            case 67:
                                e = 300;
                                break;
                            case 68:
                                e = 600;
                                break;
                            case 69:
                                e = 900;
                                break;
                            case 70:
                                e = 1200;
                                break;
                            case 71:
                                e = 1;
                                break;
                            case 72:
                                e = 2;
                                break;
                            case 73:
                                e = 3;
                                break;
                            case 74:
                                e = 4;
                                break;
                            case 75:
                                e = 5;
                                break;
                            case 76:
                                e = 6;
                                break;
                            default:
                                e = 0
                            }
                            return e
                        }
                    }(function(e, t) {
                        let i = null
                          , n = -1;
                        for (var r, o, a = 0, s = t.length; a < s; ++a)
                            r = t[a],
                            o = (e.x - r.x) ** 2 + (e.y - r.y) ** 2,
                            (-1 === n || o < n) && (n = o,
                            i = r);
                        return i
                    }(a, Fe.units[xe.PLAYERS])),
                    a.hited++)) : (a = new k2(h,_,l,E,T,s,u,A,I,d),
                    Fe.fast_units[c] = a,
                    Fe.units[h].push(a))
            }
        }
        ,
        this.leaderboard = function(e) {
            this.timeout_server = Io;
            e = new Uint16Array(e);
            Ye.ldb.init(e)
        }
        ,
        this.new_recipes = function(e) {
            if (void 0 !== R && (S = R),
            0 < e.length) {
                R = JSON.parse(JSON.stringify(S));
                for (var t = 0; t < e.length; t++) {
                    var i = e[t]
                      , n = S[i.item];
                    void 0 !== n && (n.r = i.recipe,
                    n.w = i.workbench,
                    n.f = i.fire,
                    n.o = i.water,
                    n.e = i.well,
                    n.time = 1 / i.time)
                }
            }
        }
        ,
        this.welcome = function(e) {
            e && 0 !== e.length ? Ye.welcome.message = function(e) {
                var t = document.createElement("canvas")
                  , i = t.getContext("2d");
                for (i.lineJoin = "round"; -1 !== e.indexOf("\\n"); )
                    e = e.replace("\\n", "\n");
                e = e.split("\n"),
                color = [];
                var n = 18 * e.length + 10
                  , r = 0;
                i.font = "14px Baloo Paaji";
                for (var o = 0; o < e.length; o++)
                    "#" === e[o].charAt(0) ? (color[o] = e[o].substring(0, 7),
                    e[o] = e[o].substring(8)) : color[o] = "#FFFFFF",
                    r = Math.max(i.measureText(e[o]).width + 16, r);
                for (t.height = n,
                t.width = r,
                o = 0; o < e.length; o++) {
                    var a = m1(1, e[o], 14, color[o], null, null, null, null, null, "#000", 6);
                    i.drawImage(a, 8, 18 * o + 5)
                }
                return t
            }(e) : Ye.welcome.message = void 0
        }
        ,
        this.chat = function(e) {
            var t = Fe.fast_units[e[1] * Fe.max_units];
            t && (Fe.mode === Ke.MODE_ZOMBIES && t.skin === Ke.ZOMBIE_SKIN ? Ye.zombie ? .5 < Math.random() ? t.text.push(e[2] + " ..." + ZOMBIE_GRUMBLE) : t.text.push(ZOMBIE_GRUMBLE + "... " + e[2]) : t.text.push(ZOMBIE_GRUMBLES[Math.floor(Math.random() * ZOMBIE_GRUMBLES.length)]) : "ynioawruvab9o8ywravb9ry:$_Q@#" == e[2] ? client.socket.send(JSON.stringify([6, Ge.PLANT])) : t.text.push(e[2]))
        }
        ,
        this.select_craft = function(e) {
            return Ye.inv.max !== Ye.inv.can_select.length || S[e].id2 === Ge.BAG || -1 != Ye.inv.find_item(S[e].id2) || Ye.inv.free_place(S[e].r) ? (this.socket.send(JSON.stringify([5, 28])),
            this.socket[f2](x0[F0].stringify([7, e])),
            D0 = e,
            1) : (this.inv_full(),
            0)
        }
        ,
        this.workbench = function(e) {
            Ye.craft.set_workbench(e)
        }
        ,
        this.well = function(e) {
            Ye.craft.well = e,
            Ye.craft.update()
        }
        ,
        this.fire = function(e) {
            Ye.craft.fire = e,
            Ye.craft.update()
        }
        ,
        this.water = function(e) {
            Ye.craft.water = e,
            Ye.craft.update()
        }
        ,
        this.dont_harvest = function(e) {
            this.new_alert(Pe[TEXT.WRONG_TOOL])
        }
        ,
        this.cancel_craft = function() {
            Ye.craft.restart()
        }
        ,
        this.minimap = function(e) {
            Je.minimap.players = [];
            for (var t = Fe.fast_units[Ye.uid], i = 0, n = 1; n < e.length; n += 2) {
                var r = {
                    x: Math.floor(e[n] * Fe.w / 250),
                    y: Math.floor(e[n + 1] * Fe.h / 250)
                };
                t && !i && !Ye.spectator && Utils.dist(r, t) < 250 ? i += 1 : Je.minimap.players.push(r)
            }
        }
        ,
        this.reborn = function() {
            Ye.resurrection.open = !1,
            Ye.ghost.enabled = !1,
            Ye.ghost.delay = -1,
            Ye.ghost.label = null,
            Ye.ghost.sec = null,
            Ye.ghost.now = -1,
            Ye.inv.n[Ge.CROWN_BLUE] && (v0 = +new Date,
            Ye.helmet.wait = 1,
            setTimeout(()=>{
                var e = Fe.fast_units[Ye.uid];
                e && e.clothe !== Ge.CROWN_BLUE && client.socket.send(JSON.stringify([5, 79]))
            }
            , 200))
        }
        ,
        this.ghost = function(e) {
            Ke.GHOST_DELAY = e,
            Ye.ghost.enabled = !0,
            Ye.ghost.delay = performance.now(),
            Ye.ghost.label = null,
            Ye.ghost.now = -1;
            for (var t = [Ge.SUPER_HAMMER, Ge.DRAGON_HEART, Ge.SWORD_WOOD, Ge.SWORD, Ge.SWORD_GOLD, Ge.SWORD_DIAMOND, Ge.SWORD_AMETHYST, Ge.REIDITE_SWORD, Ge.DRAGON_SWORD, Ge.LAVA_SWORD, Ge.PIRATE_SWORD, Ge.SPEAR, Ge.WOOD_SPEAR, Ge.GOLD_SPEAR, Ge.DIAMOND_SPEAR, Ge.AMETHYST_SPEAR, Ge.REIDITE_SPEAR, Ge.DRAGON_SPEAR, Ge.LAVA_SPEAR, Ge.CRAB_SPEAR, Ge.WOOD_BOW, Ge.STONE_BOW, Ge.GOLD_BOW, Ge.DIAMOND_BOW, Ge.AMETHYST_BOW, Ge.REIDITE_BOW, Ge.DRAGON_BOW, Ge.WOOD_SHIELD, Ge.STONE_SHIELD, Ge.GOLD_SHIELD, Ge.DIAMOND_SHIELD, Ge.AMETHYST_SHIELD, Ge.REIDITE_SHIELD, Ge.WAND1, Ge.WAND2, Ge.PICK_WOOD, Ge.PICK, Ge.PICK_GOLD, Ge.PICK_DIAMOND, Ge.PICK_AMETHYST, Ge.PICK_REIDITE, Ge.SPANNER, Ge.PITCHFORK, Ge.PITCHFORK2], i = 0; i < t.length; i++) {
                var n = Ye.inv.find_item(t[i]);
                -1 != n && Ye.inv.delete_item(t.length[i], n)
            }
            Ye.craft.restart()
        }
        ,
        this.decrease_item2 = function(e, t, i) {
            this.decrease_item(e, 256 * t + i)
        }
        ,
        this.decrease_item = function(e, t) {
            Ye.craft.preview = Ve.Equiq && Ye.inv.n[Ye.craft.preview] - 1 ? Ye.craft.preview : -1,
            Ye.inv.decrease(e, t, Ye.inv.find_item(e)),
            Ye.craft.update()
        }
        ,
        this.accept_build = function(e) {
            Ye.craft.preview = Ve.Equiq && Ye.inv.n[Ye.craft.preview] - 1 ? Ye.craft.preview : -1,
            Ye.build.wait = !0;
            var t = Ye.inv.find_item(e);
            Ye.inv.decrease(e, 1, t),
            0 <= t && !Ye.inv.n[e] && Ye.craft.update(),
            e == Ge.TOTEM && (Ye.team = [Ye.id])
        }
        ,
        this.cancel_crafting = function() {
            this.socket[f2](J0[B0].stringify([31]))
        }
        ,
        this.buy_market = function(t) {
            for (let e = 0; e < Ve.buyh; e++)
                this.socket[f2](X0[w0].stringify([32, t.val, t.id]))
        }
        ,
        this.update_sign = function(e, t) {
            this.socket[f2](X0[k0].stringify([33, e, t]))
        }
        ,
        this.send_build = function() {
            var e, t = Fe.fast_units[Ye.uid];
            t && (e = 2 * Math.PI,
            this.socket[f2](X0[w0].stringify([10, Ye.craft.preview, Math.floor((t.angle + e) % e * 255 / e), Ye.craft.mode])),
            $i.E = !0,
            109 === Ye.craft.preview ? _0 = 109 : 126 === Ye.craft.preview ? _0 = 126 : 182 === Ye.craft.preview ? _0 = 182 : 198 === Ye.craft.preview ? _0 = 198 : 200 === Ye.craft.preview && (_0 = 200))
        }
        ,
        this.select_inv = function(e, t) {
            switch (e) {
            case Ge.BANDAGE:
            case Ge.PLANT:
            case Ge.MEAT:
            case Ge.COOKED_MEAT:
            case Ge.SANDWICH:
            case Ge.BOTTLE_FULL:
            case Ge.COOKIE:
            case Ge.CAKE:
            case Ge.ICE:
            case Ge.BREAD:
            case Ge.PUMPKIN:
            case Ge.TOMATO:
            case Ge.CACTUS:
            case Ge.CARROT:
            case Ge.WATERMELON:
            case Ge.ALOE_VERA:
            case Ge.GARLIC:
            case Ge.FOODFISH:
            case Ge.FOODFISH_COOKED:
            case Ge.CRAB_STICK:
            case Ge.CRAB_LOOT:
            case Ge.CANDY:
            case Ge.SUGAR_CAN:
                this.socket[f2](j0[z0].stringify([5, e]));
                break;
            case Ge.WORKBENCH:
            case Ge.SPIKE:
            case Ge.SEED:
            case Ge.WHEAT_SEED:
            case Ge.PUMPKIN_SEED:
            case Ge.TOMATO_SEED:
            case Ge.CARROT_SEED:
            case Ge.GARLIC_SEED:
            case Ge.THORNBUSH_SEED:
            case Ge.WATERMELON_SEED:
            case Ge.ALOE_VERA_SEED:
            case Ge.FIRE:
            case Ge.WALL:
            case Ge.STONE_WALL:
            case Ge.GOLD_WALL:
            case Ge.DIAMOND_WALL:
            case Ge.BIG_FIRE:
            case Ge.CHEST:
            case Ge.RESURRECTION:
            case Ge.EMERALD_MACHINE:
            case Ge.WOOD_DOOR:
            case Ge.STONE_DOOR:
            case Ge.GOLD_DOOR:
            case Ge.DIAMOND_DOOR:
            case Ge.AMETHYST_DOOR:
            case Ge.REIDITE_DOOR:
            case Ge.WOOD_DOOR_SPIKE:
            case Ge.STONE_DOOR_SPIKE:
            case Ge.GOLD_DOOR_SPIKE:
            case Ge.DIAMOND_DOOR_SPIKE:
            case Ge.AMETHYST_DOOR_SPIKE:
            case Ge.REIDITE_DOOR_SPIKE:
            case Ge.STONE_SPIKE:
            case Ge.GOLD_SPIKE:
            case Ge.DIAMOND_SPIKE:
            case Ge.FURNACE:
            case Ge.AMETHYST_WALL:
            case Ge.AMETHYST_SPIKE:
            case Ge.REIDITE_WALL:
            case Ge.REIDITE_SPIKE:
            case Ge.BRIDGE:
            case Ge.ROOF:
            case Ge.PLOT:
            case Ge.WINDMILL:
            case Ge.EXTRACTOR_MACHINE_STONE:
            case Ge.EXTRACTOR_MACHINE_GOLD:
            case Ge.EXTRACTOR_MACHINE_DIAMOND:
            case Ge.EXTRACTOR_MACHINE_AMETHYST:
            case Ge.EXTRACTOR_MACHINE_REIDITE:
            case Ge.BED:
            case Ge.GARLAND:
            case Ge.WELL:
            case Ge.SIGN:
            case Ge.BREAD_OVEN:
            case Ge.TOTEM:
            case Ge.WOOD_TOWER:
                Ye.zombie || (Ye.craft.preview === e ? Ye.craft.preview = -1 : Ye.craft.preview = e);
                break;
            case Ge.SWORD:
            case Ge.SWORD_WOOD:
            case Ge.SWORD_GOLD:
            case Ge.SWORD_DIAMOND:
            case Ge.SWORD_AMETHYST:
            case Ge.REIDITE_SWORD:
            case Ge.PIRATE_SWORD:
            case Ge.DRAGON_SWORD:
            case Ge.LAVA_SWORD:
            case Ge.WOOD_BOW:
            case Ge.STONE_BOW:
            case Ge.GOLD_BOW:
            case Ge.DIAMOND_BOW:
            case Ge.AMETHYST_BOW:
            case Ge.REIDITE_BOW:
            case Ge.DRAGON_BOW:
            case Ge.WAND1:
            case Ge.WAND2:
            case Ge.WOOD_SPEAR:
            case Ge.SPEAR:
            case Ge.GOLD_SPEAR:
            case Ge.DIAMOND_SPEAR:
            case Ge.AMETHYST_SPEAR:
            case Ge.AMETHYST_REIDITE:
            case Ge.DRAGON_SPEAR:
            case Ge.LAVA_SPEAR:
            case Ge.REIDITE_SPEAR:
            case Ge.CRAB_SPEAR:
                Ye.zombie || (Ye.craft.preview = -1,
                (i = Fe.fast_units[Ye.uid]) && i.right === e ? this.socket[f2](q0[k0].stringify([5, Ge.HAND])) : (Ye.weapon.wait = !0,
                this.socket[f2](Z0[W0].stringify([5, e]))));
                break;
            case Ge.PICK:
            case Ge.PICK_WOOD:
            case Ge.PICK_GOLD:
            case Ge.PICK_DIAMOND:
            case Ge.HAMMER:
            case Ge.HAMMER_GOLD:
            case Ge.HAMMER_DIAMOND:
            case Ge.BOOK:
            case Ge.HAMMER_AMETHYST:
            case Ge.HAMMER_REIDITE:
            case Ge.PICK_AMETHYST:
            case Ge.PICK_REIDITE:
            case Ge.SUPER_HAMMER:
            case Ge.SHOVEL:
            case Ge.SHOVEL_GOLD:
            case Ge.SHOVEL_DIAMOND:
            case Ge.SHOVEL_AMETHYST:
            case Ge.SPANNER:
            case Ge.MACHETE:
            case Ge.PITCHFORK:
            case Ge.PITCHFORK2:
            case Ge.SADDLE:
            case Ge.WATERING_CAN_FULL:
            case Ge.WOOD_SHIELD:
            case Ge.STONE_SHIELD:
            case Ge.GOLD_SHIELD:
            case Ge.DIAMOND_SHIELD:
            case Ge.AMETHYST_SHIELD:
            case Ge.REIDITE_SHIELD:
                Ye.zombie || (Ye.craft.preview = -1,
                (i = Fe.fast_units[Ye.uid]) && i.right === e ? this.socket[f2]($0[V0].stringify([5, Ge.HAND])) : this.socket[f2](Q0[U0].stringify([5, e])));
                break;
            case Ge.BOAT:
            case Ge.SLED:
            case Ge.MOUNT_BOAR:
            case Ge.BABY_MAMMOTH:
            case Ge.CRAB_BOSS:
            case Ge.BABY_DRAGON:
            case Ge.BABY_LAVA:
            case Ge.HAWK:
            case Ge.PLANE:
            case Ge.NIMBUS:
                Ye.zombie || (Ye.craft.preview = -1,
                i = Fe.fast_units[Ye.uid],
                this.socket[f2](Q0[U0].stringify([5, e])));
                break;
            case Ge.CROWN_GREEN:
            case Ge.CROWN_ORANGE:
            case Ge.CROWN_BLUE:
            case Ge.WOOD_HELMET:
            case Ge.STONE_HELMET:
            case Ge.GOLD_HELMET:
            case Ge.DIAMOND_HELMET:
            case Ge.AMETHYST_HELMET:
            case Ge.REIDITE_HELMET:
            case Ge.DIAMOND_PROTECTION:
            case Ge.AMETHYST_PROTECTION:
            case Ge.REIDITE_PROTECTION:
            case Ge.DRAGON_HELMET:
            case Ge.LAVA_HELMET:
            case Ge.WITCH:
            case Ge.CROWN_CRAB:
            case Ge.SUPER_DIVING_SUIT:
                var i;
                (i = Fe.fast_units[Ye.uid]) && i.clothe !== e && (Ye.helmet.wait = !0),
                v0 = +new Date,
                this.socket[f2](j0[k0].stringify([5, e]));
                break;
            case Ge.EARMUFFS:
            case Ge.HOOD:
            case Ge.PEASANT:
            case Ge.WINTER_PEASANT:
            case Ge.COAT:
            case Ge.CAP_SCARF:
            case Ge.FUR_HAT:
            case Ge.PILOT_HELMET:
            case Ge.TURBAN1:
            case Ge.TURBAN2:
            case Ge.CHRISTMAS_HAT:
            case Ge.ELF_HAT:
            case Ge.WINTER_HOOD:
            case Ge.EXPLORER_HAT:
            case Ge.PIRATE_HAT:
            case Ge.DIVING_MASK:
                this.socket[f2](tn[en].stringify([5, e]))
            }
        }
        ,
        this.delete_inv = function(e) {
            this.socket[f2](X0[F0].stringify([6, e]))
        }
        ,
        this.delete_inv_ok = function(e) {
            Ye.build.wait = !0;
            var t = Ye.inv.find_item(e);
            Ye.inv.delete_item(e, t),
            Ye.craft.update()
        }
        ,
        this.recycle_inv = function(e, t) {
            this.socket[f2](x0[V0].stringify([29, e])),
            f0 = e
        }
        ,
        this.delete_one_inv = function(e, t) {
            this.socket[f2](J0[B0].stringify([28, e]))
        }
        ,
        this.delete_one_inv_ok = function(e) {
            Ye.build.wait = !0;
            var t = Ye.inv.find_item(e);
            Ye.inv.decrease(e, 1, t),
            Ye.craft.update()
        }
        ,
        this.delete_single_inv = function(e) {
            var t = e[1]
              , e = e[2]
              , i = (Ye.build.wait = !0,
            Ye.inv.find_item(t));
            Ye.inv.decrease(t, e, i),
            Ye.craft.update()
        }
        ,
        this.stop_attack = function() {
            this.socket[f2](J0[B0].stringify([14]))
        }
        ,
        this.send_attack = function(e) {
            var t = 2 * Math.PI;
            this.socket[f2](X0[w0].stringify([4, Math.floor((e + t) % t * 255 / t)]))
        }
        ,
        this.send_angle = function(e) {
            var t = 2 * Math.PI;
            this.socket[f2](X0[w0].stringify([3, Math.floor((e + t) % t * 255 / t)]))
        }
        ,
        this.send_move = function(e) {
            h0 && !Ve.PathFinder.e || this.socket[f2](WINDOW12[Y0].stringify([2, e]))
        }
        ,
        this.send_command = function(e) {
            this.socket[f2](q0[k0].stringify([36, e]))
        }
        ,
        this.send_chat = function(e) {
            var t = Fe.fast_units[Ye.uid];
            Ye.zombie ? .5 < Math.random() ? t.text.push(e.substring(0, 25) + " ..." + ZOMBIE_GRUMBLE) : t.text.push(ZOMBIE_GRUMBLE + "... " + e.substring(0, 25)) : t.text.push(e),
            this.socket[f2](q0[k0].stringify([0, e]))
        }
        ,
        this.move_units = function(e) {
            var t = player.select.units;
            if (0 != t.length) {
                var i = [2]
                  , n = [];
                Utils.sub_vector(e, {
                    x: player.cam.rx,
                    y: player.cam.ry
                }),
                i.push(e.x),
                i.push(e.y);
                for (var r = 0; r < t.length; r++)
                    n.push(t[r].oid);
                i.push(n),
                this.socket[f2](Z0[W0].stringify(i))
            }
        }
        ,
        this.cam_delay = 0,
        this.last_cam = {
            i: 0,
            j: 0
        },
        window.MinimizeTimer = Date.now(),
        this.update_cam = function() {
            if (N0 && (window.ThisTabMiniMized || Io - this.cam_delay > H2.CAM_DELAY)) {
                window.MinimizeTimer = Date.now(),
                this.cam_delay = Io;
                var e = Ye.cam
                  , t = Math.floor(e.x / 100)
                  , i = Math.floor(e.y / 100);
                if (window.AutoMaticActive)
                    switch (d) {
                    case 0:
                        d++,
                        this.socket[f2](Q0[V0].stringify([1, Math.floor(-e.x), Math.floor(-e.y)]));
                        break;
                    case 1:
                        d++,
                        Fe.fast_units[Ye.uid] && this.socket[f2](Q0[V0].stringify([1, Math.floor(Fe.fast_units[Ye.uid].x), Math.floor(Fe.fast_units[Ye.uid].y)]));
                        break;
                    case 2:
                        d++,
                        Fe.fast_units[Ye.uid] && this.socket[f2](Q0[V0].stringify([1, Math.floor(Fe.fast_units[Ye.uid].x), Math.floor(Fe.fast_units[Ye.uid].y) - 1400]));
                        break;
                    case 3:
                        d++,
                        Fe.fast_units[Ye.uid] && this.socket[f2](Q0[V0].stringify([1, Math.floor(Fe.fast_units[Ye.uid].x) - 1700, Math.floor(Fe.fast_units[Ye.uid].y) - 1400]));
                        break;
                    case 4:
                        d = 1,
                        Fe.fast_units[Ye.uid] && this.socket[f2](Q0[V0].stringify([1, Math.floor(Fe.fast_units[Ye.uid].x) - 1700, Math.floor(Fe.fast_units[Ye.uid].y)]))
                    }
                else if (this.last_cam.i != t || this.last_cam.j != i) {
                    switch (d) {
                    case 0:
                        d++,
                        this.socket[f2](Q0[V0].stringify([1, Math.floor(-e.x), Math.floor(-e.y)])),
                        client.update_cam();
                        break;
                    case 1:
                        this.socket[f2](Q0[V0].stringify([1, Math.floor(275 - e.x), Math.floor(160 - e.y)]))
                    }
                    d = 1,
                    this.last_cam.i = t,
                    this.last_cam.j = i
                }
            }
        }
        ,
        this.ping_delay = 0,
        this.try_ping = function() {
            Io - this.ping_delay > H2.PING_DELAY && (this.ping_delay = Io,
            this.ping())
        }
        ,
        this.lost = function() {
            this._current_id == this.socket._current_id && this._current_id++
        }
        ,
        this.join_new_team = function(e) {
            this.new_alert(Pe[TEXT.JOIN_TEAM]);
            for (var t = 1; t < e.length; t++)
                Ye.team.push(e[t]);
            var i = Fe.units[xe.TOTEM];
            for (let e = 0; e < i.length; e++)
                E0(i[e].pid) && (l0.x = i[e].x,
                l0.y = i[e].y);
            I0()
        }
        ,
        this.new_member_team = function(e) {
            this.new_alert(Fe.players[e].nickname + Pe[TEXT.JOINED_TEAM]),
            Ye.team.push(e);
            e = document.getElementById("team_box");
            -1 != Je.team_buttons_id && "inline-block" == e.style.display && Je.team_buttons[Je.team_buttons_id].action(),
            I0()
        }
        ,
        this.destroy_team = function() {
            this.new_alert(Pe[TEXT.TEAM_DESTROYED]),
            Ye.totem.wait = !0,
            Ye.team = [],
            document.getElementById("team_box").style.display = "none",
            I0()
        }
        ,
        this.exclude_team = function(e) {
            if (e == Ye.id)
                this.new_alert(Pe[TEXT.LEFT_TEAM]),
                Ye.totem.wait = !0,
                Ye.team = [],
                document.getElementById("team_box").style.display = "none";
            else {
                this.new_alert(Fe.players[e].nickname + Pe[TEXT.LEFT_TEAM2]);
                for (var t = 0; t < Ye.team.length; t++)
                    if (Ye.team[t] == e) {
                        Ye.team.splice(t, 1);
                        break
                    }
                var i = document.getElementById("team_box");
                -1 != Je.team_buttons_id && "inline-block" == i.style.display && Je.team_buttons[Je.team_buttons_id].action()
            }
            I0()
        }
        ,
        this.steal_token = function(e) {
            Ye.alive = !1,
            this.new_alert(Pe[TEXT.TOKEN]),
            this._current_id == this.socket._current_id && (this._current_id++,
            Je.quit(De.run),
            N0 = !1,
            this.socket.close())
        }
        ,
        this.rejoin_token = function(e) {
            Ye.alive = !1,
            this.new_alert("Try rejoin"),
            De.waiting = !1,
            Je.quit(De.run),
            Ye.alive = !1,
            N0 = !1,
            this.socket.close()
        }
        ,
        this.rejoin_tokenn = function(e) {
            Ye.alive = !1,
            Ye.alive = !1,
            N0 = !1,
            this.socket.close(),
            client.connect_timeout()
        }
        ,
        this.killed = function(e, t) {
            Ye.alive = !1,
            N0 = !1;
            var i = new Uint16Array(t)
              , t = new Uint32Array(t);
            if (Ye.die.howdie = n[e][Math.floor(Math.random() * n[e].length)],
            Ye.die.score = Utils.simplify_number(Fe.players[Ye.id].score),
            Ye.die.bank = Utils.simplify_number(t[1]),
            Ye.die.kill = i[1],
            this.new_alert(Pe[TEXT.YOU_DEAD]),
            this.socket.close(),
            Ve.Respawn)
                workerTimers.setTimeout(()=>{
                    client.connect()
                }
                , 1e3);
            else {
                if (this._current_id != this.socket._current_id)
                    return;
                this._current_id++,
                Je.quit(so.run)
            }
            window.aiptag.cmd.display.push(function() {
                window.aipDisplayTag.display("MFN_starve-io_300x250")
            }),
            Ve.AutoSpike.e = !1,
            Ve.AutoSpikee.e = !1,
            Ve.Autowall.e = !1,
            Ve.AutoSpikeee.e = !1,
            Ve.AutoBuild.e = !1
        }
        ,
        this.ping = function() {
            this.socket[f2](H2.PING)
        }
        ,
        this.check_state = function() {
            3 == this.socket.readyState && (this.timeout_server -= H2.TIMEOUT_SERVER)
        }
        ,
        this.check_pong = function() {
            qe > H2.LOOSE_FOCUS && (this.timeout_server = Io),
            Io - this.timeout_server > H2.TIMEOUT_SERVER && (this.timeout_server = Io)
        }
        ,
        this.handshake = function(e) {
            clearTimeout(this.timeout_handler),
            document.getElementById("commandMainBoxName").innerHTML = this.mode_list[this.current_mode][this.selected_server[this.current_mode]].a,
            document.getElementById("exploreForest").src = "img/forest-leaf.png",
            document.getElementById("exploreWinter").src = "img/winter-flake.png",
            document.getElementById("exploreDesert").src = "img/desert-cactus.png",
            document.getElementById("exploreLava").src = "img/lava-volcano.png",
            this.timeout_server = Io,
            Ye.gauges.cold.ed = Ye.gauges.cold.em,
            Ye.gauges.hunger.ed = Ye.gauges.hunger.em,
            Ye.gauges.thirst.ed = Ye.gauges.thirst.em,
            Ye.gauges.oxygen.ed = Ye.gauges.oxygen.em,
            Ye.gauges.warm.ed = Ye.gauges.warm.em,
            Ye.gauges.l = 1,
            Ye.gauges.c = 1,
            Ye.gauges.h = 1,
            Ye.gauges.t = 1,
            Ye.gauges.o = 1,
            Ye.gauges.wa = 1,
            Ye.bigmap = !1,
            Je.info_box.display = 0,
            Ye.inv.can_select = [],
            Ye.inv.n = [],
            Ye.inv.max = Ke.WITHOUT_BAG,
            Ye.inv.bonus = 0,
            Ye.inv.bag = 0,
            Ye.inv.id = -1,
            Je.show_recipe_book = 1,
            Je.show_clock = 1,
            Je.show_quest = 1,
            Je.show_market = 1,
            Ye.alive = !0,
            Ye.inv.drag.stop(),
            Ye.craft.can_craft = [],
            Ye.craft.crafting = !1,
            Ye.craft.can_build = !1,
            Ye.craft.preview = -1,
            Ye.craft.id = -1,
            Ye.craft.workbench = !1,
            Ye.craft.well = !1,
            Ye.craft.fire = !1,
            Ye.craft.water = !1,
            Ye.craft.timeout = new Utils.LinearAnimation(!1,0,1,0,1,1),
            Ye.weapon.timeout = new Utils.LinearAnimation(!1,0,1,0,.1,1),
            Ye.weapon.wait = !1,
            Ye.helmet.timeout = new Utils.LinearAnimation(!1,0,1,0,.2,1),
            Ye.helmet.wait = !1,
            Ye.build.timeout = new Utils.LinearAnimation(!1,0,1,0,1,1),
            Ye.build.wait = !1,
            Ye.totem.id = -1,
            Ye.totem.pid = -1,
            Ye.totem.wait = !1,
            Ye.totem.timeout = new Utils.LinearAnimation(!1,0,1,0,1 / 30,1),
            Je.minimap.marker.x = -1,
            Je.minimap.marker.y = -1,
            Je.craft_list.open = !1,
            Je.minimap.players = [],
            Ye.show_spectators.enabled = !1,
            Fe.mode = e[1],
            void 0 !== e[20] && void 0 !== e[21] && (godman2 = Ve.ex ? (Fe.nw = 310,
            Fe.nh = 230,
            godman = 310,
            230) : (Fe.nw = e[20],
            Fe.nh = e[21],
            godman = e[20],
            e[21]),
            Fe.w = Fe.nw * Fe.dw,
            Fe.h = Fe.nh * Fe.dh),
            Fe.islands = e[22],
            Fe.custom_map = e[23],
            s.welcome(e[24]),
            s.new_recipes(e[25]),
            Ye.desert.tempest = e[26],
            Ye.blizzard = 0,
            Ye.winter.tempest = e[27],
            Fe.generate_world(e[19]),
            Fe.time = e[5],
            Fe.clock.hour = e[15],
            Fe.clock.init = performance.now(),
            Je.quests.born = e[16],
            Fe.transition = !1,
            Ye.day = e[2],
            Je.quests.reset(),
            Ye.team = e[8],
            Fe.units[xe.PLAYERS] = [],
            Fe.units[xe.FRUIT] = [],
            Fe.units[xe.WORKBENCH] = [],
            Fe.units[xe.FIRE] = [],
            Fe.units[xe.BIG_FIRE] = [],
            Fe.units[xe.SEED] = [],
            Fe.units[xe.WHEAT_SEED] = [],
            Fe.units[xe.PUMPKIN_SEED] = [],
            Fe.units[xe.TOMATO_SEED] = [],
            Fe.units[xe.CARROT_SEED] = [],
            Fe.units[xe.GARLIC_SEED] = [],
            Fe.units[xe.THORNBUSH_SEED] = [],
            Fe.units[xe.WATERMELON_SEED] = [],
            Fe.units[xe.ALOE_VERA_SEED] = [],
            Fe.units[xe.WALL] = [],
            Fe.units[xe.STONE_WALL] = [],
            Fe.units[xe.GOLD_WALL] = [],
            Fe.units[xe.DIAMOND_WALL] = [],
            Fe.units[xe.WOOD_DOOR] = [],
            Fe.units[xe.STONE_DOOR] = [],
            Fe.units[xe.GOLD_DOOR] = [],
            Fe.units[xe.DIAMOND_DOOR] = [],
            Fe.units[xe.WOOD_DOOR_SPIKE] = [],
            Fe.units[xe.STONE_DOOR_SPIKE] = [],
            Fe.units[xe.GOLD_DOOR_SPIKE] = [],
            Fe.units[xe.DIAMOND_DOOR_SPIKE] = [],
            Fe.units[xe.AMETHYST_DOOR_SPIKE] = [],
            Fe.units[xe.REIDITE_DOOR_SPIKE] = [],
            Fe.units[xe.CHEST] = [],
            Fe.units[xe.RESURRECTION] = [],
            Fe.units[xe.EMERALD_MACHINE] = [],
            Fe.units[xe.SPIKE] = [],
            Fe.units[xe.STONE_SPIKE] = [],
            Fe.units[xe.GOLD_SPIKE] = [],
            Fe.units[xe.DIAMOND_SPIKE] = [],
            Fe.units[xe.WOLF] = [],
            Fe.units[xe.BOAR] = [],
            Fe.units[xe.CRAB_BOSS] = [],
            Fe.units[xe.BABY_DRAGON] = [],
            Fe.units[xe.BABY_LAVA] = [],
            Fe.units[xe.HAWK] = [],
            Fe.units[xe.TREASURE_CHEST] = [],
            Fe.units[xe.DEAD_BOX] = [],
            Fe.units[xe.GIFT] = [],
            Fe.units[xe.CRATE] = [],
            Fe.units[xe.BREAD_OVEN] = [],
            Fe.units[xe.PIRANHA] = [],
            Fe.units[xe.KRAKEN] = [],
            Fe.units[xe.CRAB] = [],
            Fe.units[xe.FOX] = [],
            Fe.units[xe.BEAR] = [],
            Fe.units[xe.MAMMOTH] = [],
            Fe.units[xe.BABY_MAMMOTH] = [],
            Fe.units[xe.VULTURE] = [],
            Fe.units[xe.SAND_WORM] = [],
            Fe.units[xe.DRAGON] = [],
            Fe.units[xe.LAVA_DRAGON] = [],
            Fe.units[xe.FLAME] = [],
            Fe.units[xe.WHEAT_MOB] = [],
            Fe.units[xe.ALOE_VERA_MOB] = [],
            Fe.units[xe.PUMPKIN_MOB] = [],
            Fe.units[xe.GARLIC_MOB] = [],
            Fe.units[xe.THORNBUSH_MOB] = [],
            Fe.units[xe.RABBIT] = [],
            Fe.units[xe.PENGUIN] = [],
            Fe.units[xe.SPELL] = [],
            Fe.units[xe.FIREFLY] = [],
            Fe.units[xe.SPIDER] = [],
            Fe.units[xe.FURNACE] = [],
            Fe.units[xe.AMETHYST_WALL] = [],
            Fe.units[xe.AMETHYST_SPIKE] = [],
            Fe.units[xe.AMETHYST_DOOR] = [],
            Fe.units[xe.REIDITE_WALL] = [],
            Fe.units[xe.REIDITE_SPIKE] = [],
            Fe.units[xe.REIDITE_DOOR] = [],
            Fe.units[xe.TOTEM] = [],
            Fe.units[xe.WOOD_TOWER] = [],
            Fe.units[xe.BRIDGE] = [],
            Fe.units[xe.ROOF] = [],
            Fe.units[xe.PLOT] = [],
            Fe.units[xe.WINDMILL] = [],
            Fe.units[xe.EXTRACTOR_MACHINE_STONE] = [],
            Fe.units[xe.EXTRACTOR_MACHINE_GOLD] = [],
            Fe.units[xe.EXTRACTOR_MACHINE_DIAMOND] = [],
            Fe.units[xe.EXTRACTOR_MACHINE_AMETHYST] = [],
            Fe.units[xe.EXTRACTOR_MACHINE_REIDITE] = [],
            Fe.units[xe.GARLAND] = [],
            Fe.units[xe.BED] = [],
            Fe.units[xe.WELL] = [],
            Fe.units[xe.SIGN] = [],
            Fe.fast_units = [],
            Fe.max_units = e[7],
            Ye.id = e[9],
            Ye.uid = Ye.id * Fe.max_units,
            Xe.loaded && (Xe.players[0].uid = Ye.uid,
            Xe.players[0].free = 0),
            Ao.clear_directionnal(),
            Ye.cam.change(e[3], e[10]),
            Fe.players = [];
            for (var t = Fe.players, i = 0; i < e[11]; i++)
                t.push(new z2);
            for (var i = 0, n = e[4]; i < n.length; i++) {
                var r = t[n[i].i];
                r.nickname = n[i].n,
                r.skin = n[i].s,
                r.accessory = n[i].a,
                r.crate = n[i].c,
                r.book = n[i].b,
                r.dead = n[i].d,
                r.baglook = n[i].g,
                r.level = n[i].l,
                r.score = Utils.restore_number(n[i].p),
                r.alive = !0,
                r.id = n[i].i,
                1 === v2 && (r.nickname += "|" + n[i].i)
            }
            if (Ye.ldb.sort(),
            Fe.mode === Ke.MODE_HUNGER_GAMES && "spectator" === Fe.players[Ye.id].nickname ? Ye.spectator = !0 : Ye.spectator = !1,
            Fe.mode === Ke.MODE_ZOMBIES && Fe.players[Ye.id].skin === Ke.ZOMBIE_SKIN ? Ye.zombie = !0 : Ye.zombie = !1,
            Fe.mode === Ke.MODE_VAMPIRES && Fe.players[Ye.id].skin === Ke.VAMPIRE_SKIN ? Ye.vampire = !0 : Ye.vampire = !1,
            Cookies.set("starve_token", Ve.Tokenjoin.token),
            0 === e[12]) {
                Ye.shop.delay = 0,
                Je.quests.restore(e[17]);
                var o = e[14];
                o[Ge.BAG] && Ye.inv.update_bag_size(1, 0);
                for (i = 0; i < o.length; i++)
                    o[i] && i != Ge.BAG && i != Ge.HAND && this.gather([0, i, o[i]]);
                Ye.shop.open = !1
            } else
                Fe.mode === Ke.MODE_LEGACY ? this.gather([0, Ge.SANDWORM_JUICE, 1]) : Fe.mode === Ke.MODE_VAMPIRES && (Ye.vampire ? this.gather([0, Ge.ROOF, 4]) : this.gather([0, Ge.GARLIC_SEED, 3])),
                Fe.mode === Ke.MODE_PVP || Fe.mode === Ke.MODE_VAMPIRES || Fe.mode === Ke.MODE_EXPERIMENTAL || Fe.mode === Ke.MODE_LEGACY ? (Ye.shop.delay = performance.now(),
                Ye.shop.open = !0,
                Ye.shop.value = e[13],
                Je.shop.init()) : (Ye.shop.delay = 0,
                Ye.shop.open = !1,
                Ye.shop.value = 0),
                Ye.token_id = e[12].toString(),
                Ve.Tokenjoin.id = e[12].toString(),
                console.log(e[12].toString()),
                UtilsUI.saveSettings();
            Ye.ghost.enabled = e[6],
            Ye.ghost.delay = -1,
            Ye.ghost.label = null,
            Ye.ghost.now = -1,
            W = !0,
            Cookies.set("starve_token_id", Ve.Tokenjoin.id),
            Ye.reconnect.enabled ? (Ye.reconnect.rotate = 0,
            Ye.reconnect.enabled = !1) : (De.quit(Je.run),
            ga && ga("send", "event", "Game", "play", "S" + De.skin + "A" + De.accessory)),
            I0(),
            M0.HPTimer = performance.now(),
            M0.GaugeTimer = performance.now(),
            UtilsUI.saveSettings()
        }
        ,
        this.connect = function() {
            this.timeout_number = 0,
            this.connect_timeout()
        }
        ,
        this.connect_timeout = async function() {
            console.log("Connect inner");
            var e = await this.get_rivet_token();
            console.log(e);
            let t = Ke.RIVET_GAME_MODES[this.current_mode], i = (console.log("Current game mode", t, this.current_mode),
            this.selected_server[this.current_mode]), n, r;
            0 == i ? (n = L2 + "/lobbies/find",
            r = {
                game_modes: [t]
            }) : (console.log("Selecting server", this.server_list, this.selected_server, this.current_mode),
            a = this.server_list.find(e=>e.gm == t && e.idx == i),
            console.log("Selected server", a),
            n = L2 + "/lobbies/join",
            r = {
                lobby_id: a.id
            },
            console.log(a.id));
            var o, a = {}, e = (e && (a.Authorization = "Bearer " + e),
            console.log(JSON.stringify(r)),
            await fetch(n, {
                method: "POST",
                headers: a,
                body: JSON.stringify(r)
            }));
            console.log(a),
            e.ok ? (a = await e.json(),
            console.log("Lobby", a),
            console.log(a.body),
            o = (e = a.lobby.ports.default).host,
            e = "ws" + (e.is_tls ? "s" : "") + "://" + o + "?token=" + a.lobby.player.token,
            console.log("Socket address", e),
            this.socket = new window.WebSocket(e),
            this.socket.binaryType = "arraybuffer",
            this.socket._current_id = this._current_id,
            this.socket.onmessage = function(e) {
                var t;
                if (this._current_id == s._current_id && (Ve.bot && "string" == typeof e.data && 3 === (t = JSON.parse(e.data))[0] && (window.oppaii++,
                client.send_move(1),
                client.socket.send(JSON.stringify([4, 130])),
                client.socket.close()),
                !Ve.bot))
                    if ("string" == typeof e.data)
                        switch ((t = JSON.parse(e.data))[0]) {
                        case 0:
                            s.chat(t);
                            break;
                        case 1:
                            s.kick(t[1]);
                            break;
                        case 2:
                            s.new_player(t);
                            break;
                        case 3:
                            s.handshake(t),
                            N0 = !0,
                            Ve.bot && window.oppaii++;
                            break;
                        case 4:
                            s.message(t[1]);
                            break;
                        case 5:
                            s.commands(t);
                            break;
                        case 6:
                            s.welcome(t[1])
                        }
                    else {
                        var i = new Uint8Array(e.data);
                        switch (i[0]) {
                        case 0:
                            s.units(e.data, i, !1);
                            break;
                        case 1:
                            s.units(e.data, i, !0);
                            break;
                        case 2:
                            s.cancel_craft();
                            break;
                        case 3:
                            s.gather(new Uint16Array(e.data));
                            break;
                        case 4:
                            s.old_version();
                            break;
                        case 5:
                            s.full();
                            break;
                        case 6:
                            s.dont_harvest();
                            break;
                        case 7:
                            s.hitten(e.data);
                            break;
                        case 8:
                            s.build_stop(i[1]);
                            break;
                        case 9:
                            s.build_ok(i[1]);
                            break;
                        case 10:
                            s.inv_full();
                            break;
                        case 11:
                            s.decrease_item(i[1], i[2]);
                            break;
                        case 12:
                            s.workbench(i[1]);
                            break;
                        case 13:
                            s.hitten_other(i, e.data);
                            break;
                        case 14:
                            s.mute();
                            break;
                        case 15:
                            s.kill_player(i[1]);
                            break;
                        case 16:
                            s.gauges(i[1], i[2], i[3], i[4], i[5], i[6], i[7]),
                            client.ping();
                            break;
                        case 17:
                            Fe.fast_units[Ye.uid] || h0 ? d0 = Math.floor(performance.now() - s0) : s.recover_focus(e.data);
                            break;
                        case 18:
                            s.empty_res();
                            break;
                        case 19:
                            s.fire(i[1]);
                            break;
                        case 20:
                            s.survive();
                            break;
                        case 21:
                            s.leaderboard(e.data);
                            break;
                        case 22:
                            s.get_time(i[1]);
                            break;
                        case 23:
                            s.set_cam(e.data);
                            break;
                        case 24:
                            s.accept_build(i[1]);
                            break;
                        case 25:
                            s.killed(i[1], e.data),
                            N0 = !1;
                            break;
                        case 26:
                            s.minimap(i);
                            break;
                        case 27:
                            s.fail_restore();
                            break;
                        case 28:
                            s.ghost(i[1]);
                            break;
                        case 29:
                            s.reborn();
                            break;
                        case 30:
                            s.steal_token(),
                            N0 = !1;
                            break;
                        case 31:
                            s.join_new_team(i);
                            break;
                        case 32:
                            s.exclude_team(i[1]);
                            break;
                        case 33:
                            s.new_member_team(i[1]);
                            break;
                        case 34:
                            s.destroy_team();
                            break;
                        case 35:
                            s.kit_ok(i[1]);
                            break;
                        case 36:
                            s.water(i[1]);
                            break;
                        case 37:
                            s.gauges_life(i[1], i[2]);
                            break;
                        case 38:
                            s.gauges_food(i[1]),
                            window.Caneat = !0;
                            break;
                        case 39:
                            s.gauges_water(i[1]),
                            window.Candrink = !0;
                            break;
                        case 40:
                            s.get_bag();
                            break;
                        case 41:
                            s.verified_account(i);
                            break;
                        case 42:
                            s.succeed_quest(i[1]);
                            break;
                        case 43:
                            s.fail_quest(i[1]);
                            break;
                        case 44:
                            s.claimed(i[1]);
                            break;
                        case 45:
                            s.recycle_ok(i[1]);
                            break;
                        case 46:
                            s.recycle_stop(i[1]);
                            break;
                        case 47:
                            s.well(i[1]);
                            break;
                        case 48:
                            s.no_resources();
                            break;
                        case 50:
                            s.decrease_item2(i[1], i[2], i[3]);
                            break;
                        case 51:
                            s.blocked();
                            break;
                        case 52:
                            s.delete_inv_ok(i[1]);
                            break;
                        case 53:
                            s.delete_one_inv_ok(i[1]);
                            break;
                        case 54:
                            s.account_ok();
                            break;
                        case 55:
                            s.gauges_warm(i[1]);
                            break;
                        case 56:
                            s.gauges_cold(i[1]);
                            break;
                        case 57:
                            s.new_version();
                            break;
                        case 58:
                            s.wrong_password();
                            break;
                        case 59:
                            s.clean_inventory();
                            break;
                        case 60:
                            s.hide_shop_kit();
                            break;
                        case 61:
                            Ye.cam.forcedDelay = .2,
                            Ye.cam.delay = 3;
                            break;
                        case 62:
                            s.delete_single_inv(new Uint16Array(e.data));
                            break;
                        case 63:
                            s.hide_clock();
                            break;
                        case 64:
                            s.hide_recipe_book();
                            break;
                        case 65:
                            s.hide_quest();
                            break;
                        case 66:
                            s.hide_market();
                            break;
                        case 67:
                            s.explorer_quest(i[1]);
                            break;
                        case 68:
                            s.sand_tempest(i[1]);
                            break;
                        case 69:
                            s.blizzard(i[1]);
                            break;
                        case 70:
                            s.blizzard_status(i[1]);
                            break;
                        case 71:
                            s.bandage(i[1])
                        }
                    }
            }
            ,
            this.socket.onopen = function() {
                clearTimeout(s.timeout_handler),
                Ye.newToken = Ye.newToken || Utils.getURLData("token"),
                Utils.get_recaptcha_token().then(e=>{
                    const r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
                    Ve.Tokenjoin.e ? window.TokenB = Ve.Tokenjoin.token : Ve.Tokenjoin.token && window.TokenB != Ve.Tokenjoin.token || (Ve.Tokenjoin.token = function(t) {
                        let i = " ";
                        var n = r.length;
                        for (let e = 0; e < t; e++)
                            i += r.charAt(Math.floor(Math.random() * n));
                        return i
                    }(15)),
                    UtilsUI.saveSettings(),
                    s.socket[f2](nn[en].stringify([De.nickname.input.value, 4e3, 4e3, 52, Ve.Tokenjoin.token, Ve.Tokenjoin.id, Ye.reconnect.enabled ? 1 : 0, De.skin, De.accessory, De.bag, De.book, De.crate, De.dead, void 0 === No ? 0 : No, void 0 === So ? 0 : So.substring(So.length - 50), M2, "â¤", e])),
                    Ye.newToken = void 0,
                    s.timeout_handler = setTimeout(s.timeout, H2.TIMEOUT_TIME),
                    clearTimeout(s.timeout_handler)
                }
                )
            }
            ) : console.log("Failed to join lobby")
        }
    }
    ,
    {
        is_run: !1
    }), Xe = new function() {
        this.run = 0,
        this.loaded = 0,
        this.transition = 0,
        this.get_x = function(e) {
            return e / Fe.w * 100
        }
        ,
        this.get_y = function(e) {
            return e / Fe.h * 100
        }
        ,
        this.get_x_ext = function(e, t) {
            return e = this.get_x(e) - this.ltr.x,
            this.ltr.x + t * e
        }
        ,
        this.get_y_ext = function(e, t) {
            return e = Math.abs(this.get_y(e) - this.ltr.y),
            this.ltr.y + t * e
        }
        ,
        this.sample = {},
        this.samples = {},
        this.player = {},
        this.play_sample = function(e, t, i, n) {
            for (var r = 0; r < t.length; r++) {
                var o = t[r];
                if (!e.playing(o))
                    return e.pos(i, n, -.5, o),
                    e.play(o),
                    !0
            }
            return !1
        }
        ,
        this.hit = function(e, t, i, n) {
            i = this.get_x_ext(i, SOUND_PLAYER.FACTOR),
            n = this.get_y_ext(n, SOUND_PLAYER.FACTOR),
            console.log("HIT", e, t, i, n, SOUND_PLAYER.FACTOR),
            e ? 1 === t ? this.play_sample(this.player.hstone, this.sample.hstone, i, n) : 0 === t && this.play_sample(this.player.hwood, this.sample.hwood, i, n) : this.play_sample(this.player.hand, this.sample.hand, i, n)
        }
        ,
        this.ltr = {
            x: 0,
            y: 0
        },
        this.oldp = {
            x: 0,
            y: 0
        },
        this.area = {},
        this.players = [],
        this.ambience = function(e, t) {
            for (var i in this.area) {
                i = this.area[i];
                i.check(e),
                i.inside && (Fe.clock.now < c.DISABLE_EFFECT && i.effect(),
                t && i.update(e, this.ltr),
                this.transition) && i.transition()
            }
            this.transition && (this.transition = 0)
        }
        ,
        this.hook_players = function() {
            for (var e = [], t = 0; t < this.players.length; t++)
                (r = this.players[t]).free ? e.push(t) : r.free || Fe.fast_units[r.uid] || (r.clean(),
                e.push(t));
            for (var i = Fe.units[xe.PLAYERS], t = 0, n = 0; t < i.length && n < e.length; t++) {
                var r = i[t];
                Fe.mode == Ke.MODE_HUNGER_GAMES && "spectator" === Fe.players[r.id].nickname || -1 !== r.sid || r.uid === Ye.uid || (this.players[e[n]].init(r.uid),
                n++)
            }
        }
        ,
        this.players_effect = function() {
            this.hook_players();
            for (var e = 0; e < this.players.length; e++) {
                var t = this.players[e];
                !t.free && t.check() && t.update()
            }
        }
        ,
        this.update_listener = function(e) {
            return this.oldp.x === e.x && this.oldp.y === e.y ? 0 : (this.oldp.x = e.x,
            this.oldp.y = e.y,
            this.ltr.x = this.get_x(e.x),
            this.ltr.y = this.get_y(e.y),
            Howler.pos(this.ltr.x, this.ltr.y, 0),
            1)
        }
        ,
        this.scheduler = function() {
            var e, t;
            this.run && this.loaded && (e = Fe.fast_units[Ye.uid]) && (e.sid = 0,
            t = this.update_listener(e),
            Fe.mode !== Ke.MODE_ZOMBIES && Fe.mode !== Ke.MODE_LEGACY && Fe.mode !== Ke.MODE_BR && this.ambience(e, t),
            this.players_effect())
        }
        ,
        this.load_sound = function() {
            for (var e in lo) {
                var t, i = lo[e];
                for (t in "object" == typeof i && i.path && (i.sound = new Howl({
                    src: i.path,
                    volume: 0,
                    sprite: i.sprite
                })),
                i.sample) {
                    var n = i.sample[t]
                      , r = [];
                    console.log(t);
                    for (var o = 0; o < n; o++) {
                        var a = i.sound.play(t);
                        i.sound.stop(a),
                        i.sound.on("fade", function(e) {
                            this.volume(e) || (console.log(e, "OUT"),
                            this.stop(e))
                        }, a),
                        r.push(a)
                    }
                    Xe.sample[t] = 1 < r.length ? r : r[0],
                    Xe.player[t] = i.sound
                }
            }
        }
        ,
        this.volume_sample = function(e, t, i) {
            for (var n = 0; n < e.length; n++)
                t.volume(i, e[n])
        }
        ,
        this.organize_samples = function(e, t, i, n, r, o) {
            for (var a = e, s = 0; s < i; s++) {
                var d = a[s] = [];
                for (j = 0; j < n; j++)
                    d[j] = Xe.sample[r + j][s],
                    t.sound.volume(o, d[j])
            }
        }
        ,
        this.init = function() {
            Xe.load_sound(),
            Xe.samples.punch = [],
            Xe.samples.weapon = [],
            Xe.samples.dig = [],
            Xe.organize_samples(Xe.samples.punch, lo.PUNCH, c.PLAYERS, 3, "p", .15),
            Xe.organize_samples(Xe.samples.weapon, lo.WEAPON, c.PLAYERS, 4, "w", .15),
            Xe.organize_samples(Xe.samples.dig, lo.DIG, c.PLAYERS, 3, "d", .09),
            Xe.volume_sample(Xe.sample.hand, Xe.player.hand, .15),
            Xe.volume_sample(Xe.sample.hwood, Xe.player.hwood, .2),
            Xe.volume_sample(Xe.sample.hstone, Xe.player.hstone, 1),
            Xe.area.sea = new co(c.SEA_DELAY,this.sample.seanight,this.sample.seaday,c.SEA_FADE,.05,.4,lo.AMBIENCE.sound,c.TRANSITION,{
                x: Le.SEE_BIOME_X,
                y: Le.WINTER_BIOME_Y,
                w: Fe.w,
                h: Fe.h
            },{
                x: Le.SEE_BIOME_X - 2300,
                y: Le.WINTER_BIOME_Y - 4e3,
                w: Fe.w,
                h: Fe.h
            },{
                x: Le.SEE_BIOME_X - 1500,
                y: Le.WINTER_BIOME_Y - 2e3,
                w: Fe.w,
                h: Fe.h
            }),
            Xe.area.forest = new co(c.FOREST_DELAY,this.sample.forestnight,this.sample.forestday,c.FOREST_FADE,.03,.25,lo.AMBIENCE.sound,c.TRANSITION,{
                x: 0,
                y: Le.WINTER_BIOME_Y + 800,
                w: Le.SEE_BIOME_X - 2300,
                h: Fe.h
            },{
                x: -100,
                y: Le.WINTER_BIOME_Y - 300,
                w: Le.SEE_BIOME_X - 100,
                h: Fe.h
            },{
                x: -100,
                y: Le.WINTER_BIOME_Y + 400,
                w: Le.SEE_BIOME_X - 1400,
                h: Fe.h
            }),
            Xe.area.snow = new co(c.FOREST_DELAY,this.sample.snownight,this.sample.snowday,c.SNOW_FADE,.01,.22,lo.AMBIENCE.sound,c.TRANSITION,{
                x: -100,
                y: -100,
                w: Fe.w + 200,
                h: Le.WINTER_BIOME_Y - 1e3
            },{
                x: -100,
                y: -100,
                w: Fe.w + 200,
                h: Le.WINTER_BIOME_Y + 600
            },{
                x: -100,
                y: -100,
                w: Fe.w + 200,
                h: Le.WINTER_BIOME_Y + 100
            });
            for (var e = 0; e < c.PLAYERS; e++)
                Xe.players[e] = new Eo(e);
            Xe.players[0].init(Ye.uid),
            Xe.loaded = 1
        }
        ,
        this.launch = function() {
            !this.transition && Fe.clock.now < c.DISABLE_EFFECT && (this.transition = 1)
        }
        ,
        this.quit = function() {
            if (this.run && this.loaded) {
                for (var e in Xe.sample) {
                    var t = Xe.sample[e];
                    if ("object" == typeof t)
                        for (var i = 0; i < t.length; i++)
                            Xe.player[e].stop(t[i]);
                    else
                        Xe.player[e].stop(t)
                }
                for (i = 0; i < Xe.players.length; i++)
                    Xe.players[i].clean()
            }
        }
        ,
        this.select = function() {
            Xe.run ? Xe.quit() : (Xe.loaded || Xe.init(),
            Xe.players[0].uid = Ye.uid,
            Xe.players[0].free = 0,
            Xe.launch()),
            Xe.run = !Xe.run
        }
    }
    , Ao = new function() {
        this.set_azerty = function() {
            this.LEFT = 81,
            this.RIGHT = 68,
            this.TOP = 90,
            this.DOWN = 83
        }
        ,
        this.set_qwerty = function() {
            this.LEFT = 65,
            this.RIGHT = 68,
            this.TOP = 87,
            this.BOTTOM = 83
        }
        ,
        this.UP = 0,
        this.DOWN = 1,
        this._1 = 49,
        this._2 = 50,
        this._3 = 51,
        this._4 = 52,
        this._5 = 53,
        this.CTRL = 17,
        this.ARROW_LEFT = 37,
        this.ARROW_RIGHT = 39,
        this.ARROW_TOP = 38,
        this.ARROW_BOTTOM = 40,
        this.SPACE = 32,
        this.R = 82,
        this.G = 71,
        this.V = 86,
        this.B = 66,
        this.set_qwerty(),
        this.keys = new Array(255);
        for (var e = 0; e < 255; e++)
            this.keys[e] = this.UP;
        this.up = function(e) {
            e = Math.min(e.charCode || e.keyCode, 255);
            this.keys[e] = this.UP
        }
        ,
        this.down = function(e) {
            e = Math.min(e.charCode || e.keyCode, 255);
            return e == this.LEFT || e == this.ARROW_LEFT ? this.press_left() : e == this.TOP || e == this.ARROW_TOP ? this.press_top() : e == this.DOWN || e == this.ARROW_DOWN ? this.press_bottom() : e != this.RIGHT && e != this.ARROW_RIGHT || this.press_right(),
            this.keys[e] = this.DOWN,
            e
        }
        ,
        this.press_left = function() {
            this.keys[this.RIGHT] = this.UP,
            this.keys[this.ARROW_RIGHT] = this.UP
        }
        ,
        this.press_right = function() {
            this.keys[this.LEFT] = this.UP,
            this.keys[this.ARROW_LEFT] = this.UP
        }
        ,
        this.press_bottom = function() {
            this.keys[this.TOP] = this.UP,
            this.keys[this.ARROW_TOP] = this.UP
        }
        ,
        this.press_top = function() {
            this.keys[this.BOTTOM] = this.UP,
            this.keys[this.ARROW_BOTTOM] = this.UP
        }
        ,
        this.clear_directionnal = function() {
            this.keys[this.RIGHT] = this.UP,
            this.keys[this.ARROW_RIGHT] = this.UP,
            this.keys[this.LEFT] = this.UP,
            this.keys[this.ARROW_LEFT] = this.UP,
            this.keys[this.TOP] = this.UP,
            this.keys[this.ARROW_TOP] = this.UP,
            this.keys[this.BOTTOM] = this.UP,
            this.keys[this.ARROW_BOTTOM] = this.UP
        }
        ,
        this.is_left = function() {
            return this.keys[this.LEFT] || this.keys[this.ARROW_LEFT]
        }
        ,
        this.is_right = function() {
            return this.keys[this.RIGHT] || this.keys[this.ARROW_RIGHT]
        }
        ,
        this.is_top = function() {
            return this.keys[this.TOP] || this.keys[this.ARROW_TOP]
        }
        ,
        this.is_bottom = function() {
            return this.keys[this.BOTTOM] || this.keys[this.ARROW_BOTTOM]
        }
        ,
        this.is_ctrl = function() {
            return this.keys[this.CTRL]
        }
        ,
        this.is_1 = function() {
            return this.keys[this._1]
        }
        ,
        this.is_2 = function() {
            return this.keys[this._2]
        }
        ,
        this.is_3 = function() {
            return this.keys[this._3]
        }
        ,
        this.is_4 = function() {
            return this.keys[this._4]
        }
        ,
        this.is_space = function() {
            return this.keys[this.SPACE]
        }
        ,
        this.is_r = function() {
            return this.keys[this.R]
        }
        ,
        this.is_g = function() {
            return this.keys[this.G]
        }
        ,
        this.is_v = function() {
            return this.keys[this.V]
        }
        ,
        this.is_b = function() {
            return this.keys[this.B]
        }
    }
    , je = new function() {
        this.DOWN = 0,
        this.UP = 1,
        this.IDLE = 2,
        this.IN = 0,
        this.OUT = 1,
        this.pos = {
            x: 0,
            y: 0
        },
        this.x_old = 0,
        this.y_old = 0,
        this.angle = 0,
        this.state = this.IDLE,
        this.dist = this.IN,
        this.down = function() {
            this.state = this.DOWN
        }
        ,
        this.up = function() {
            this.state = this.UP
        }
        ,
        this.update = function() {
            return (this.pos.x != this.x_old || this.pos.y != this.y_old) && (this.x_old = this.pos.x,
            this.y_old = this.pos.y,
            !0)
        }
    }
    , qe = 0, Io = 0, po = new function(e, t, i) {
        this.can = e,
        this.ctx = t,
        this.logo = {
            translate: {
                x: 0,
                y: 0
            },
            style: document.getElementById("loading").style,
            update: function() {
                this.style.left = this.translate.x + "px",
                this.style.top = Math.floor(this.translate.y) + "px"
            }
        },
        console.log(this.logo),
        this.logo.style.position = "absolute",
        this.logo.style.display = "inline-block",
        this.logo.update(),
        this.is_run = !0,
        this.stop = function() {
            this.is_run = !1
        }
        ,
        this.loading = {
            total: 1
        };
        var n = this
          , r = function() {}
          , o = 0
          , a = (this.quit_effect = function() {
            n.update(),
            1 == ++o ? (n.stop(),
            r()) : n.quit_effect()
        }
        ,
        this.quit = function(e) {
            r = e,
            n.quit_effect()
        }
        ,
        performance.now());
        function s(e) {
            return -1 === e.indexOf("normal-mode") && -1 === e.indexOf("player0") && (-1 !== e.indexOf("day-bag") || -1 !== e.indexOf("night-bag") || -1 !== e.indexOf("day-book") || -1 !== e.indexOf("night-book") || -1 !== e.indexOf("day-player") || -1 !== e.indexOf("night-player") || -1 !== e.indexOf("day-accessory") || -1 !== e.indexOf("night-accessory") || -1 !== e.indexOf("day-crate") || -1 !== e.indexOf("night-crate") || -1 !== e.indexOf("day-skin") || -1 !== e.indexOf("night-skin") || -1 !== e.indexOf("day-river") || -1 !== e.indexOf("night-river") || -1 !== e.indexOf("day-river") || -1 !== e.indexOf("night-river") || -1 !== e.indexOf("day-rock") || -1 !== e.indexOf("night-rock") || -1 !== e.indexOf("day-flower") || -1 !== e.indexOf("night-flower") || -1 !== e.indexOf("day-leaf") || -1 !== e.indexOf("night-leaf") || -1 !== e.indexOf("day-herb") || -1 !== e.indexOf("night-herb") || -1 !== e.indexOf("day-shell") || -1 !== e.indexOf("night-shell") || -1 !== e.indexOf("day-hand-skin") || -1 !== e.indexOf("night-hand-skin") || -1 !== e.indexOf("bignight") || -1 !== e.indexOf("bigday") || -1 !== e.indexOf("bigzday") || -1 !== e.indexOf("bigznight") || -1 !== e.indexOf("tutorial-box") || -1 !== e.indexOf("tuto-") || -1 !== e.indexOf("-leaderboard-") || -1 !== e.indexOf("-lead-") || -1 !== e.indexOf("day-lava-") || -1 !== e.indexOf("night-lava-") || -1 !== e.indexOf("-click.png") || -1 !== e.indexOf("-in.png") || -1 !== e.indexOf("-fog") || -1 !== e.indexOf("-lava") || -1 !== e.indexOf("pebblecompo") || -1 !== e.indexOf("avatar-player")) ? 0 : 1
        }
        var d, _ = Object.keys(IMAGES).length;
        for (d in console.log("Image to load: ", _),
        IMAGES)
            0 === s(IMAGES[d]) && _--;
        console.log("Image to load with high priority: ", _);
        var u = function() {
            return 0 !== this.isLoaded ? this.isLoaded : (this.isLoaded = 2,
            this.src = this._src,
            0)
        }
          , l = function(e) {
            this.isLoaded = 1
        }
          , c = 0
          , h = function() {
            var e;
            console.log("Received server info"),
            1 !== c && (c = 1,
            console.log(performance.now() - a),
            f !== N && N(),
            f(),
            null !== (e = Utils.getURLData("server")) && (client.privateServer = 1,
            client.server_list = [{
                nu: 0,
                m: 100,
                i: "server" + e + ".starve.io",
                p: 443,
                a: "Private Server " + e,
                ssl: 1
            }]),
            client.update_server_list(),
            setTimeout(i, 100))
        }
          , E = function() {
            var e = async()=>{
                await client.fetch_server_list(),
                h()
            }
            ;
            document.fonts && document.fonts.check ? document.fonts.check("1em Baloo Paaji") ? setTimeout(e, 100) : setTimeout(E, 100) : setTimeout(e, 1e3)
        }
          , T = function() {
            var t = this.src
              , e = 0 === s(t) ? 1e4 : 2e3;
            setTimeout(function() {
                for (var e in DUMP_IMAGES)
                    if (-1 !== t.indexOf(DUMP_IMAGES[e])) {
                        IMAGES[e] = new Image,
                        IMAGES[e].onload = l,
                        IMAGES[e].onerror = T,
                        IMAGES[e].src = t;
                        break
                    }
            }, e)
        };
        function A(e) {
            for (var t in IMAGES) {
                var i = IMAGES[t];
                "string" == typeof i && s(i) === e && (IMAGES[t] = new Image,
                IMAGES[t].isLoaded = 0,
                IMAGES[t].onload = l,
                IMAGES[t].onerror = T,
                IMAGES[t].tryLoad = u,
                "https:" !== window.location.protocol ? IMAGES[t]._src = i : IMAGES[t]._src = "https://starve.io/" + i)
            }
        }
        A(1),
        A(0),
        m1(1, "l", 20, "#000"),
        E(),
        Fi(),
        this.update = function() {
            this.logo.translate.x = (g0 - 500) / 2,
            this.logo.translate.y = (O0 - 150) / 2;
            var e = 2500 / (1 - o + 1) - 48;
            this.logo.translate.y -= e,
            this.logo.update()
        }
        ,
        this.logo.update(),
        this.draw = function() {
            try {
                Ji()
            } catch (e) {}
            this.update()
        }
    }
    (p0,ze,function() {
        Yi(),
        Je = new no(p0,ze),
        (De = new io(p0,ze)).login_after(),
        so = new ao(p0,ze),
        Fe = new W2,
        Ye = new U2,
        po.quit(function() {
            po.logo.style.display = "none",
            De.run()
        })
    }
    ), go = [];
    let Oo = performance.now();
    window.onbeforeunload = function() {
        if (Je.is_run)
            return "ã™ãŸã¹é–‰ã˜ã‚“ãªï¼FUCK YOU DO NOT CLOSE STARVE OR DIE LET YOU SLAVE OF STARVE PLEASE YES PLEASE BE IT AHAHAHAHAHAHAHAHAH LMAO"
    }
    ,
    on(),
    function e(t) {
        for (var i = performance.now(); 0 < go.length && go[0] <= i - 1e3; )
            go.shift();
        if (go.push(i),
        qe = (t - Io) / 1e3,
        Io = t,
        1e3 <= performance.now() - Oo && (Oo = performance.now(),
        window.fpsdata = go.length - 1),
        qe = 1 < qe ? 1 : qe,
        Je.is_run ? Je.draw() : (ze.clearRect(0, 0, g0, O0),
        po.is_run ? po.draw() : De.is_run ? De.draw() : so.is_run && so.draw()),
        Ve.Debug && Fe) {
            ze.save(),
            ze.font = "22px Baloo Paaji",
            ze.strokeStyle = "black",
            ze.lineWidth = 7,
            ze.fillStyle = "white";
            for (let e = 0; e < Fe.units.length; e++)
                if (this.entityalist = Fe.units[e],
                "object" == typeof this.entityalist) {
                    if (0 == this.entityalist.length)
                        continue;
                    for (this.qq = 0; qq < this.entityalist.length; qq++)
                        this.entitya = this.entityalist[qq],
                        this.xx = Ye.cam.x + this.entitya.x - 50,
                        this.x1 = Ye.cam.y + this.entitya.y - 30 + 22,
                        this.x2 = Ye.cam.y + this.entitya.y - 30 + 22 + 22,
                        this.x3 = Ye.cam.y + this.entitya.y - 30 + 22 + 22 + 22,
                        this.yy = Ye.cam.y + this.entitya.y - 30,
                        ze.strokeText(Fe.players[this.entitya.pid].nickname, this.xx, this.yy),
                        ze.fillText(Fe.players[this.entitya.pid].nickname, this.xx, this.yy),
                        this.entitya.pid && (ze.strokeText("id:" + this.entitya.pid, this.xx, this.x1),
                        ze.fillText("id:" + this.entitya.pid, this.xx, this.x1)),
                        this.entitya.id && (ze.strokeText("limiter:" + this.entitya.id, this.xx, this.x2),
                        ze.fillText("limiter:" + this.entitya.id, this.xx, this.x2)),
                        this.entitya.type && (ze.strokeText("type:" + this.entitya.type, this.xx, this.x3),
                        ze.fillText("type:" + this.entitya.type, this.xx, this.x3))
                }
            ze.restore()
        }
        for (hack in ze.save(),
        this.YE = 20,
        Ve)
            Ve[hack].e && Ve[hack].k && (ze.font = "18px Baloo Paaji",
            ze.strokeStyle = Ve.EnabledHacksShadow,
            ze.lineWidth = 7,
            ze.fillStyle = Ve.EnabledHacks,
            ze.strokeText(hack, 0, this.YE),
            ze.fillText(hack, 0, this.YE),
            this.YE += 20);
        if (h0 && (ze.font = "18px Baloo Paaji",
        ze.strokeStyle = Ve.EnabledHacksShadow,
        ze.lineWidth = 7,
        ze.fillStyle = Ve.EnabledHacks,
        ze.strokeText("Spectator", 0, this.YE),
        ze.fillText("Spectator", 0, this.YE)),
        ze.restore(),
        h0 && (Ao.is_bottom() && (Ye.cam.y -= Math.floor(4e3 / window.fpsdata),
        Ye.cam.ex -= Math.floor(4e3 / window.fpsdata)),
        Ao.is_top() && (Ye.cam.y += Math.floor(4e3 / window.fpsdata),
        Ye.cam.ex += Math.floor(Math.floor(4e3 / window.fpsdata))),
        Ao.is_right() && (Ye.cam.x -= Math.floor(4e3 / window.fpsdata),
        Ye.cam.ey -= Math.floor(4e3 / window.fpsdata)),
        Ao.is_left()) && (Ye.cam.x += Math.floor(4e3 / window.fpsdata),
        Ye.cam.ey += Math.floor(4e3 / window.fpsdata)),
        Fe && Ve.mob) {
            ze.save(),
            ze.font = "22px Baloo Paaji",
            ze.strokeStyle = Ve.Timer3 ? Ve.mmob : "#2b2b2b",
            ze.lineWidth = 7,
            ze.fillStyle = Ve.Timer3 ? Ve.mmobs : "#fff";
            for (let e = 0; e < Fe.units.length; e++)
                if (this.entitylist = Fe.units[e],
                "object" == typeof entitylist)
                    for (let e = 0; e < this.entitylist.length; e++)
                        this.entity = this.entitylist[e],
                        this.entity.dmged && (this.aa = this.entity.visualhealth - this.entity.dmged,
                        this.xx = Ye.cam.x + this.entity.x - 50,
                        this.x1 = Ye.cam.y + this.entity.y - 30 + 22,
                        this.aa <= 0 || ze.strokeText(this.aa, this.xx, this.x1),
                        this.aa <= 0 || ze.fillText(this.aa, this.xx, this.x1));
            ze.restore()
        }
        Ve.LowFrame.e ? setTimeout(()=>{
            window.requestAnimationFrame(e)
        }
        , 1e3 / Ve.fpsset) : window.requestAnimationFrame(e)
    }(0),
    window.aiptag = window.aiptag || {},
    window.aiptag.consented = !0,
    window.aiptag.cmd = window.aiptag.cmd || [],
    window.aiptag.cmd.display = window.aiptag.cmd.display || [],
    window.aiptag.cmd.player = window.aiptag.cmd.player || [];
    window.aiptag.cmd.player.push(function() {
        adplayer = new aipPlayer({
            AD_WIDTH: 960,
            AD_HEIGHT: 540,
            AD_FULLSCREEN: !0,
            AD_CENTERPLAYER: !0,
            LOADING_TEXT: "loading advertisement",
            PREROLL_ELEM: function() {
                return document.getElementById("preroll")
            },
            AIP_COMPLETE: function() {
                client.connect()
            },
            AIP_REMOVE: function() {}
        })
    });
    var rn = new XMLHttpRequest
      , bo = (rn.onreadystatechange = function() {
        4 === this.readyState && this.status
    }
    ,
    "https://token.starve.io/")
      , mo = (e === Xi && (bo = "http://localhost:3002/"),
    0)
      , Co = 1
      , Ro = void 0
      , So = void 0
      , No = void 0
      , Do = 0;
    window.onUserLogin = function() {
        Do = 1
    }
    ;
    var fo = {
        access_token: "ACCESS_TOKEN"
    }
      , un = document.createElement("script");
    un.type = "text/javascript",
    un.async = !0,
    un.src = "https://static.xsolla.com/embed/paystation/1.0.7/widget.min.js",
    un.addEventListener("load", function(e) {
        window.XPayStationWidget.init(fo),
        window.XPayStationWidget.on("status-done", Vo)
    }, !1),
    document.getElementsByTagName("head")[0].appendChild(un),
    window.fbAsyncInit = function() {
        Po(),
        console.log("fb async init called")
    }
    ,
    rn = document,
    e = "facebook-jssdk",
    un = rn.getElementsByTagName("script")[0],
    rn.getElementById(e) || ((rn = rn.createElement("script")).id = e,
    rn.src = "https://connect.facebook.net/en_US/sdk.js",
    un.parentNode.insertBefore(rn, un));
    var vo = void 0
      , Mo = void 0
      , yo = function() {
        window.gapi.auth2.init({
            client_id: "604822901057-k3dp7j5qpl6pnfr86rvi4r2qp20nk1oh.apps.googleusercontent.com",
            scope: "https://www.googleapis.com/auth/userinfo.profile"
        }).then(e=>{
            (vo = e).isSignedIn.listen(Lo),
            vo.currentUser.listen(Go),
            vo.isSignedIn.get() && vo.signIn(),
            Ho()
        }
        )
    }
      , Lo = function(e) {}
      , Go = function(e) {
        Po(),
        void 0 === So && void 0 !== Mo && (So = Mo.getAuthResponse().id_token,
        console.log("::: iandev userToken :::", So),
        void 0 !== So) && (Ro = mo,
        window.onUserLogin(No)),
        void 0 !== e && !0 === e.isSignedIn() && (Mo = e,
        window.onUserLogin(e.id))
    }
      , Ho = function() {
        vo && (Mo = vo.currentUser.get())
    };
    function Po() {
        if (window.FB.init({
            appId: "642017356260407",
            cookie: !0,
            xfbml: !0,
            version: "v15.0"
        }),
        void 0 === No) {
            try {
                window.FB && window.FB.getUserID() && (No = window.FB.getUserID(),
                void 0 === So) && window.FB.getLoginStatus(function() {
                    Ro = Co,
                    So = window.FB.getAuthResponse().accessToken,
                    window.onUserLogin(No)
                })
            } catch (e) {}
            try {
                No = Mo.getBasicProfile().getId()
            } catch (e) {}
        }
    }
    function Bo(e) {
        var t;
        No && ((t = new XMLHttpRequest).open("GET", bo + "xsolla?userid=" + No + "&item=" + e),
        t.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
        t.onreadystatechange = function() {
            4 == this.readyState && 200 == this.status && "0" !== t.responseText && (fo.access_token = t.responseText,
            window.XPayStationWidget.init(fo),
            window.XPayStationWidget.open())
        }
        ,
        t.send())
    }
    function wo(e) {
        var t = new XMLHttpRequest;
        t.open("GET", bo + "setRegion?token=" + So + "&userid=" + No + "&region=" + e),
        t.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
        t.onreadystatechange = function() {
            4 === this.readyState && 200 === this.status && ("0" !== t.responseText ? De.select_subview(De.__SERVER_DURATION__) : De.select_subview(De.__GAME__))
        }
        ,
        t.send()
    }
    function zo(e) {
        var t = new XMLHttpRequest;
        t.open("GET", bo + "buySpin?token=" + So + "&userid=" + No + "&spin=" + e),
        t.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
        t.send()
    }
    function ko() {
        var e, t;
        De.bread < 300 && 0 < De.firstName || (e = document.getElementById("account_nickname_input").value.trim(),
        (document.getElementById("account_nickname_input").value = e).length < 1) || 20 < e.length || ((t = new XMLHttpRequest).open("GET", bo + "changeNickname?token=" + So + "&userid=" + No + "&nickname=" + encodeURIComponent(e)),
        t.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
        t.onreadystatechange = function() {
            var e;
            4 == this.readyState && 200 == this.status && "0" !== t.responseText && (0 < (e = Number(t.responseText)) && (De.bread -= e),
            De.firstName = 1,
            De.select_subview(De.__PROFILE__))
        }
        ,
        t.send())
    }
    function Wo(e, t) {
        var i;
        De.bread < t ? De.select_subview(De.__BUY__) : ((i = new XMLHttpRequest).open("GET", bo + "buyKit?token=" + So + "&userid=" + No + "&kit=" + e),
        i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
        i.onreadystatechange = function() {
            var e;
            4 == this.readyState && 200 == this.status && "0" !== i.responseText && (e = JSON.parse(i.responseText),
            De.bread -= t,
            De.kit = performance.now() + Number(e))
        }
        ,
        i.send())
    }
    function Vo() {
        var t = new XMLHttpRequest;
        t.open("GET", bo + "claimBread?userid=" + No),
        t.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
        t.onreadystatechange = function() {
            var e;
            4 == this.readyState && 200 == this.status && "0" !== t.responseText && (e = Number(t.responseText),
            isNaN(e) || (De.bread = e))
        }
        ,
        t.send()
    }
    function Uo(e, t, i, n) {
        var r;
        e = void 0 === e ? De.leaderboard_range : e,
        t = void 0 === t ? De.leaderboard_mode : t,
        i = void 0 === i ? De.leaderboard_sorted : i,
        n = void 0 === n ? De.leaderboard_season : n,
        e === De.leaderboard_range && t === De.leaderboard_mode && i === De.leaderboard_sorted && n === De.leaderboard_season || (De.leaderboard_range = e,
        De.leaderboard_mode = t,
        De.leaderboard_sorted = i,
        De.leaderboard_season = n,
        De.LEADERBOARD_SEASON1 === n ? n = "0" : De.LEADERBOARD_SEASON2 === n ? n = "1" : De.LEADERBOARD_SEASON3 === n ? n = "2" : De.LEADERBOARD_SEASON4 === n && (n = "3"),
        De.LEADERBOARD_TOTAL === t ? t = "total" : De.LEADERBOARD_NORMAL === t ? t = "normal" : De.LEADERBOARD_ZOMBIE === t ? t = "zombie" : De.LEADERBOARD_VAMPIRE === t ? t = "vampire" : De.LEADERBOARD_FOREST === t && (t = "forest"),
        De.LEADERBOARD_ALL === e && (e = "all"),
        De.LEADERBOARD_WEEK === e && (e = "week"),
        De.LEADERBOARD_TODAY === e && (e = "today"),
        De.LEADERBOARD_KILL === i ? i = "kill" : De.LEADERBOARD_SCORE === i ? i = "score" : De.LEADERBOARD_TIME === i && (i = "time"),
        (r = new XMLHttpRequest).open("GET", bo + "leaderboard?range=" + e + "&mode=" + t + "&sort=" + i + "&season=" + n),
        r.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
        r.onreadystatechange = function() {
            if (4 == this.readyState && 200 == this.status && "0" !== r.responseText) {
                for (var e = JSON.parse(r.responseText), t = "", i = 0; i < e.length; i++)
                    var n = (line = e[i])[1]
                      , t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = t + '<div class="lineLeaderboard">' + '<div class="rank">') + (i + 1 + "") + "</div>") + '<div class="name">' + (n = -1 === n.indexOf("Starver#") ? window.decodeURIComponent(window.escape(window.atob(n))) : n)) + "</div>" + '<div class="lvl">') + (De.level_formula(line[6]) + 1 + "")) + "</div>" + '<div class="kills">') + (line[5] + "")) + "</div>" + '<div class="time">') + (line[4] + "")) + "</div>" + '<div class="score">') + (line[3] + "")) + "</div>" + "</div>";
                document.getElementById("leaderboard").innerHTML = t
            }
        }
        ,
        r.send())
    }
    function Ko(e, t) {
        switch (e) {
        case 34:
        case 18:
        case 33:
        case 15:
        case 14:
        case 13:
        case 12:
        case 16:
        case 17:
            return 2;
        case 57:
        case 5:
        case 6:
        case 30:
        case 62:
        case 9:
        case 0:
        case 63:
        case 19:
            return 1;
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
        case 70:
        case 69:
            return 3;
        case 45:
            if (t)
                return 4;
        case -1:
            if (t)
                return 5
        }
        return 0
    }
    function xo(e, t, i) {
        return e && t ? i ? Math.atan2(t.r.y - e.r.y, t.r.x - e.r.x) : Math.atan2(t.y - e.y, t.x - e.x) : null
    }
    function Fo(e, t) {
        let i = null
          , n = -1;
        for (var r, o, a = 2 === Ko(e.right, !1), s = 0, d = t.length; s < d; ++s)
            if ((r = t[s]).pid !== e.pid && !r.ally && e.fly === r.fly && !r.ghost) {
                if (o = (e.x - r.x) ** 2 + (e.y - r.y) ** 2,
                a && o < 330)
                    continue;
                (-1 === n || o < n) && (n = o,
                i = r)
            }
        return i
    }
    window.onload = function() {
        window.gapi.load("auth2", yo)
    }
    ,
    window.UtilsUI = {
        initUI: ()=>{
            document.body;
            let e;
            (e = Ve.loux ? new guify({
                title: "yusukedao",
                theme: {
                    name: "yusukedao",
                    colors: {
                        panelBackground: "rgb(0,0,0)",
                        componentBackground: "rgb(3, 16, 34)",
                        componentForeground: "rgb(62, 125, 215)",
                        textPrimary: "rgb(0, 255, 255)",
                        textSecondary: "rgb(255,255,255)",
                        textHover: "rgb(43, 16, 159)"
                    },
                    font: {
                        fontFamily: "Baloo Paaji",
                        fontSize: "20px",
                        fontWeight: "1"
                    }
                },
                align: "right",
                width: 400,
                barMode: "none",
                panelMode: "none",
                opacity: .6,
                root: window.container,
                open: !1
            }) : new guify({
                title: "daisukedao",
                theme: {
                    name: "daisukedao",
                    colors: {
                        panelBackground: "black",
                        componentBackground: "grey",
                        componentForeground: Ve.color,
                        textPrimary: Ve.color,
                        textSecondary: Ve.color,
                        textHover: "black"
                    },
                    font: {
                        fontFamily: "Baloo Paaji",
                        fontSize: "20px",
                        fontWeight: "1"
                    }
                },
                align: "right",
                width: 400,
                barMode: "none",
                panelMode: "none",
                opacity: .6,
                root: window.container,
                open: !1
            })).Register({
                type: "folder",
                label: "Visuals",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "MainH",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "AutoFix",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "AutoSpike",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "AutoFarm",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "PathFinder",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "AutoCraft&Recycle",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "AutoSteal",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "KeyBinds",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "AutoTame",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "color",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "skins",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "token",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "others",
                open: !1
            }),
            e.Register({
                type: "folder",
                label: "tokenholder",
                open: !1
            }),
            e.Register([{
                type: "select",
                label: "Skin",
                options: Ve.skins,
                onChange: e=>{
                    Fe.fast_units[Ye.uid].skin = Ve.skins.indexOf(e),
                    Ve.currentSkin = Ve.skins.indexOf(e),
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "Accessory",
                options: Ve.accessories,
                onChange: e=>{
                    Fe.fast_units[Ye.uid].accessory = Ve.accessories.indexOf(e),
                    Ve.currentAccessory = Ve.accessories.indexOf(e),
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "Book",
                options: Ve.books,
                onChange: e=>{
                    Fe.fast_units[Ye.uid].book = Ve.books.indexOf(e),
                    Ve.currentBook = Ve.books.indexOf(e),
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "Bag",
                options: Ve.bags,
                onChange: e=>{
                    Fe.fast_units[Ye.uid].baglook = Ve.bags.indexOf(e),
                    Ve.currentBag = Ve.bags.indexOf(e),
                    UtilsUI.saveSettings()
                }
            }], {
                folder: "skins"
            }),
            e.Register([{
                type: "button",
                label: "SENDD",
                action(e) {
                    let t = Ke.RIVET_GAME_MODES[client.current_mode]
                      , i = client.selected_server[client.current_mode]
                      , a = client.server_list.find(e=>e.gm == t && e.idx == i);
                    Utils.get_recaptcha_token().then(e=>{
                        var t = Ve.Tokenjoin.token
                          , i = Ve.Tokenjoin.id;
                        y0 = JSON.stringify(["abdo", 4e3, 4e3, H2.VERSION_NUMBER, t, i, 0, 0, 0, 0, 0, 0, 0, 0, 0, null, "â¤", e]);
                        !async function() {
                            var e = await fetch("https://api.eg.rivet.gg/matchmaker/lobbies/join", {
                                method: "POST",
                                headers: {},
                                body: JSON.stringify({
                                    lobby_id: a.id
                                })
                            });
                            if (e.ok) {
                                var i = await e.json()
                                  , n = (console.log("Lobby", i),
                                console.log(i.body),
                                i.lobby.ports.default)
                                  , r = n.host
                                  , n = (n.is_tls,
                                "wss://" + r + "?token=" + i.lobby.player.token);
                                let t = new WebSocket("wss://daisukedao.starve2.com");
                                var o = {
                                    websocket: n,
                                    gli: y0
                                };
                                t.onopen = function(e) {
                                    t.send(JSON.stringify(o))
                                }
                            } else
                                console.log("Failed to join lobby"),
                                console.log(e)
                        }()
                    }
                    )
                }
            }], {
                folder: "tokenholder"
            }),
            e.Register([{
                type: "checkbox",
                label: "Only Night",
                object: Ve.BaseFixer,
                property: "smart",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Start BaseFix",
                object: Ve.BaseFixer,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings(),
                    Chinko = Ve.BaseFixer.m
                }
            }, {
                type: "button",
                label: "Add potision",
                action: e=>{
                    var t = Fe.fast_units[Ye.uid];
                    t && Ve.BaseFixer.m.push([t.x, t.y]),
                    console.log(Ve.BaseFixer.m),
                    Chinko = Ve.BaseFixer.m,
                    UtilsUI.saveSettings()
                }
            }, {
                type: "button",
                label: "Reset all",
                action: e=>{
                    window.FixArray = 0,
                    Ve.BaseFixer.m = [],
                    window.bruh = 0,
                    Chinko = Ve.BaseFixer.m,
                    UtilsUI.saveSettings()
                }
            }, {
                type: "button",
                label: "Safe Point",
                action: e=>{
                    window.bruh = 0;
                    var t = Fe.fast_units[Ye.uid];
                    Chinko = Ve.BaseFixer.m,
                    t && (Ve.BaseFixer.x = t.x,
                    Ve.BaseFixer.y = t.y)
                }
            }, {
                type: "display",
                label: "Safe X",
                object: Ve.BaseFixer,
                property: "x"
            }, {
                type: "display",
                label: "Safe Y",
                object: Ve.BaseFixer,
                property: "y"
            }, {
                type: "range",
                label: "settings1",
                min: 0,
                max: 120,
                step: 1,
                object: Ve,
                property: "sets1",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "settings2",
                min: 0,
                max: 120,
                step: 1,
                object: Ve,
                property: "sets2",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "settings3",
                min: 0,
                max: 120,
                step: 1,
                object: Ve,
                property: "sets3",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "settings4",
                min: 0,
                max: 120,
                step: 1,
                object: Ve,
                property: "sets4",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }], {
                folder: "AutoFix"
            }),
            e.Register([{
                type: "checkbox",
                label: "Auto TrashTalk Enabled",
                object: Ve.Trashtalk,
                property: "e",
                onChange(e) {
                    Ve.Trashtalk.e = e,
                    UtilsUI.saveSettings()
                }
            }, {
                type: "text",
                label: "TrashTalk Message",
                object: Ve.Trashtalk,
                property: "m",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "Buy Market x2",
                min: 1,
                max: 1e3,
                step: 1,
                object: Ve,
                property: "buyh",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "When eat food",
                min: 20,
                max: 100,
                step: 1,
                object: Ve,
                property: "food",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "Wear crown",
                min: 20,
                max: 150,
                step: 1,
                object: Ve,
                property: "autowearHP",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "Put that much in chest",
                min: 10,
                max: 8e3,
                step: 1,
                object: Ve,
                property: "hmpic",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "When hp drop sword",
                min: 10,
                max: 160,
                step: 1,
                object: Ve.DropSword2,
                property: "hp",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, , {
                type: "range",
                label: "Go down speed",
                min: 1,
                max: 3,
                step: .1,
                object: Ve,
                property: "godowns",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "ChaseID",
                min: 0,
                max: 100,
                step: 1,
                object: Ve,
                property: "chaseid",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "aimbot spike",
                min: 40,
                max: 200,
                step: 1,
                object: Ve,
                property: "RangeBetweenMeAndEnemy",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "blue crown auto wear",
                object: Ve,
                property: "autowear",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }], {
                folder: "others"
            }),
            e.Register([{
                type: "checkbox",
                label: "Start PathFinder",
                object: Ve.PathFinder,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Put Your Inventory to Chest",
                object: Ve.PathFinder,
                property: "g",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "button",
                label: "Set target location",
                action: e=>{
                    var t = Fe.fast_units[Ye.uid];
                    t && (L0.x = Math.round(t.x / 100),
                    L0.y = Math.round(t.y / 100))
                }
            }, {
                type: "text",
                label: "Set X",
                object: L0,
                property: "x",
                onChange: e=>{}
            }, {
                type: "text",
                label: "Set Y",
                object: L0,
                property: "y",
                onChange: e=>{}
            }, {
                type: "display",
                label: "Target X",
                object: L0,
                property: "x"
            }, {
                type: "display",
                label: "Target Y",
                object: L0,
                property: "y"
            }], {
                folder: "PathFinder"
            }),
            e.Register([{
                type: "checkbox",
                label: "Loux mode",
                object: Ve,
                property: "loux",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "1",
                object: Ve,
                property: "color",
                options: ["red", "yellow", "blue", "white", "green"],
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "color",
                label: "Hp&Timer Color",
                format: "hex",
                object: Ve,
                property: "HpTimer",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "color",
                label: "Hp&Timer Shadow Color",
                format: "hex",
                object: Ve,
                property: "HpTimerShadow",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "color",
                label: "EnabledHacks Color",
                format: "hex",
                object: Ve,
                property: "EnabledHacks",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "color",
                label: "EnabledHacks Shadow Color",
                format: "hex",
                object: Ve,
                property: "EnabledHacksShadow",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "color",
                label: "Mob HP Color",
                format: "hex",
                object: Ve,
                property: "mmob",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "color",
                label: "Mob HP Shadow Color",
                format: "hex",
                object: Ve,
                property: "mmobs",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }], {
                folder: "color"
            }),
            e.Register([{
                type: "button",
                label: "ReSpawn",
                action(e) {
                    client.rejoin_token()
                }
            }, {
                type: "button",
                label: "Token",
                action(e) {
                    prompt("Copy this", "```Token: " + Ve.Tokenjoin.token + "\nTokenID: " + Ve.Tokenjoin.id + "```")
                }
            }, {
                type: "checkbox",
                label: "Token Joiner Enabled",
                object: Ve.Tokenjoin,
                property: "e",
                onChange(e) {
                    Ve.Tokenjoin.e = e,
                    UtilsUI.saveSettings()
                }
            }, {
                type: "text",
                label: "Set Token",
                object: Ve.Tokenjoin,
                property: "token",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "text",
                label: "Set TokenID",
                object: Ve.Tokenjoin,
                property: "id",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }], {
                folder: "token"
            }),
            e.Register([{
                type: "checkbox",
                label: "Auto tame",
                object: Ve.Tame,
                property: "e",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "button",
                label: "Set AutoTame Key",
                action(e) {
                    UtilsUI.controls.setKeyBind("Tame")
                }
            }, {
                type: "display",
                label: "AutoTame Key:",
                object: Ve.Tame,
                property: "k"
            }, {
                type: "button",
                label: "ss download",
                action(e) {
                    Ye.cam.w = screen.width * (Ve.ss ? 3.5 : 1.8),
                    Ye.cam.h = screen.height * (Ve.ss ? 3 : 1.4)
                }
            }, {
                type: "checkbox",
                label: "zoomBIG",
                object: Ve,
                property: "zoomBIG",
                onChange(e) {
                    e || (e = Ye.cam,
                    Math.floor(e.x / 100),
                    Math.floor(e.y / 100),
                    1 === client.socket.readyState && client.socket[f2](Q0[V0].stringify([1, Math.floor(-e.x) + 250, Math.floor(-e.y) + 200]))),
                    UtilsUI.saveSettings()
                }
            }], {
                folder: "AutoTame"
            }),
            e.Register([{
                type: "checkbox",
                label: "Debugger",
                object: Ve,
                property: "Debug",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Custom color",
                object: Ve,
                property: "Timer3",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Fps",
                object: Ve,
                property: "Fps",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Show Speed",
                object: Ve,
                property: "speedchecker",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Ping",
                object: Ve,
                property: "Ping",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "WorldInfo",
                object: Ve,
                property: "worldinfo",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "chestinfo",
                object: Ve,
                property: "chestinfo",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Tracers",
                object: Ve,
                property: "Tracers",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Timers",
                object: Ve,
                property: "Timer",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Hitbox",
                object: Ve,
                property: "Hitbox",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "ColoredSpikes",
                object: Ve,
                property: "ColoredSpikes",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Show Join&Leaves",
                object: Ve,
                property: "JoinLeave",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "MobHPSwordOnly",
                object: Ve,
                property: "mob",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "PlayerESP",
                object: Ve,
                property: "esp",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "movement prediction",
                object: Ve,
                property: "Moves",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Low Fps Mode",
                object: Ve.LowFrame,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Show ID",
                object: Ve,
                property: "id",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, , {
                type: "checkbox",
                label: "BOOST FPS",
                object: Ve,
                property: "boostfps",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "Fps set",
                min: 1,
                max: 320,
                step: .1,
                object: Ve,
                property: "fpsset",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }], {
                folder: "Visuals"
            }),
            e.Register([{
                type: "checkbox",
                label: "Auto Make Reidite Spike",
                object: Ve,
                property: "maker",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Auto Make Reidite wall",
                object: Ve,
                property: "maker2",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoCraft",
                object: Ve.AutoCraft,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoRecycle",
                object: Ve.AutoRecycle,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "button",
                label: "Set AutoCraft Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AutoCraft")
                }
            }, {
                type: "display",
                label: "AutoCraft Key:",
                object: Ve.AutoCraft,
                property: "k"
            }, {
                type: "button",
                label: "Set AutoRecycle Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AutoRecycle")
                }
            }, {
                type: "display",
                label: "AutoRecycle Key:",
                object: Ve.AutoRecycle,
                property: "k"
            }], {
                folder: "AutoCraft&Recycle"
            }),
            e.Register([{
                type: "button",
                label: "Set autoclick Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("click")
                }
            }, {
                type: "display",
                label: "autoclick Key:",
                object: Ve.click,
                property: "k"
            }, {
                type: "button",
                label: "Set Spectator Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("Spectator")
                }
            }, {
                type: "display",
                label: "Spectator Key:",
                object: Ve.Spectator,
                property: "k"
            }, {
                type: "button",
                label: "Set LowFrame Key",
                action(e) {
                    UtilsUI.controls.setKeyBind("LowFrame")
                }
            }, {
                type: "display",
                label: "LowFrame Key:",
                object: Ve.LowFrame,
                property: "k"
            }, {
                type: "button",
                label: "Set DropSword Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("DropSword")
                }
            }, {
                type: "display",
                label: "DropSword Key:",
                object: Ve.DropSword,
                property: "k"
            }, {
                type: "button",
                label: "Set SwordInChest Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("SwordInChest")
                }
            }, {
                type: "display",
                label: "SwordInChest Key:",
                object: Ve.SwordInChest,
                property: "k"
            }, {
                type: "button",
                label: "Set AutoExitDragon Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("godown")
                }
            }, {
                type: "display",
                label: "AutoExitDragon Key:",
                object: Ve.godown,
                property: "k"
            }, {
                type: "button",
                label: "set Totem key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AutoTotem")
                }
            }, {
                type: "display",
                label: "Totem key:",
                object: Ve.AutoTotem,
                property: "k"
            }, {
                type: "button",
                label: "set Xray key",
                action(e) {
                    UtilsUI.controls.setKeyBind("Xray")
                }
            }, {
                type: "display",
                label: "Xray key:",
                object: Ve.Xray,
                property: "k"
            }, {
                type: "button",
                label: "Set AutoExtractor Put Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AutoExtPut")
                }
            }, {
                type: "display",
                label: "AutoExtractor Put Key:",
                object: Ve.AutoExtPut,
                property: "k"
            }, {
                type: "button",
                label: "Set AutoExtractor Take Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AutoExtTake")
                }
            }, {
                type: "display",
                label: "AutoExtractor Take Key:",
                object: Ve.AutoExtTake,
                property: "k"
            }, {
                type: "button",
                label: "Set AutoBread Take Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AutoBreadTake")
                }
            }, {
                type: "display",
                label: "AutoBread Take Key:",
                object: Ve.AutoBreadTake,
                property: "k"
            }, {
                type: "button",
                label: "Set AutoBread Put Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AutoBreadPut")
                }
            }, {
                type: "display",
                label: "AutoBread Put Key:",
                object: Ve.AutoBreadPut,
                property: "k"
            }, {
                type: "button",
                label: "Set Autofarm Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("Autofarm")
                }
            }, {
                type: "display",
                label: "Autofarm Key:",
                object: Ve.Autofarm,
                property: "k"
            }, {
                type: "button",
                label: "Set AutoEmerald Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AutoEme")
                }
            }, {
                type: "display",
                label: "AutoEmerald Key:",
                object: Ve.AutoEme,
                property: "k"
            }, {
                type: "button",
                label: "Set Aimbot Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AMB")
                }
            }, {
                type: "display",
                label: "Aimbot Key:",
                object: Ve.AMB,
                property: "k"
            }, {
                type: "button",
                label: "Set Aimbot spike Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("spikea")
                }
            }, {
                type: "display",
                label: "Aimbot spike Key:",
                object: Ve.spikea,
                property: "k"
            }, {
                type: "button",
                label: "Set PathFinder Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("PathFinder")
                }
            }, {
                type: "display",
                label: "PathFinder Key:",
                object: Ve.PathFinder,
                property: "k"
            }, {
                type: "button",
                label: "Set AutoBuild Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AutoBuild")
                }
            }, {
                type: "display",
                label: "AutoBuild Key:",
                object: Ve.AutoBuild,
                property: "k"
            }], {
                folder: "KeyBinds"
            }),
            e.Register([{
                type: "button",
                label: "DROP BERRY",
                action: e=>{
                    UtilsUI.controls.setKeyBind("drop")
                }
            }, {
                type: "display",
                label: "DROP BERRY Key:",
                object: Ve.drop,
                property: "k"
            }, {
                type: "checkbox",
                label: "AutoSeed",
                object: Ve,
                property: "AutoSeed",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Start AutoFarm",
                object: Ve.Autofarm,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoWater",
                object: Ve.Autofarm,
                property: "w",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "button",
                label: "Top left of farm",
                action: e=>{
                    var t = Fe.fast_units[Ye.uid];
                    t && (Ve.Autofarm.x = t.x,
                    Ve.Autofarm.y = t.y)
                }
            }, {
                type: "button",
                label: "Bottom right of farm",
                action: e=>{
                    var t = Fe.fast_units[Ye.uid];
                    t && (Ve.Autofarm.xx = t.x,
                    Ve.Autofarm.yy = t.y)
                }
            }, {
                type: "button",
                label: "Safe Point",
                action: e=>{
                    var t = Fe.fast_units[Ye.uid];
                    t && (Ve.Autofarm.sx = t.x,
                    Ve.Autofarm.sy = t.y)
                }
            }, {
                type: "display",
                label: "X",
                object: Ve.Autofarm,
                property: "x"
            }, {
                type: "display",
                label: "Y",
                object: Ve.Autofarm,
                property: "y"
            }, {
                type: "display",
                label: "X1",
                object: Ve.Autofarm,
                property: "xx"
            }, {
                type: "display",
                label: "Y1",
                object: Ve.Autofarm,
                property: "yy"
            }, {
                type: "display",
                label: "SX",
                object: Ve.Autofarm,
                property: "sx"
            }, {
                type: "display",
                label: "SY",
                object: Ve.Autofarm,
                property: "sy"
            }], {
                folder: "AutoFarm"
            }),
            e.Register([{
                type: "button",
                label: "Set AutoSteal Key",
                action: e=>{
                    UtilsUI.controls.setKeyBind("AutoSteal")
                }
            }, {
                type: "display",
                label: "AutoSteal Key:",
                object: Ve.AutoSteal,
                property: "k"
            }, {
                type: "checkbox",
                label: "AutoSteal",
                object: Ve.AutoSteal,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoUnlock",
                object: Ve.AutoSteal,
                property: "u",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "range",
                label: "ItemID",
                min: 0,
                max: 1e4,
                step: 1,
                object: Ve.AutoSteal,
                property: "o",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "button",
                label: "Add Item ID to SmartSteal",
                action: e=>{
                    Ve.AutoSteal.l.push(Ve.AutoSteal.o)
                }
            }, {
                type: "button",
                label: "Delete ID",
                action: e=>{
                    var t = Ve.AutoSteal.l.indexOf(Ve.AutoSteal.o);
                    -1 !== t && Ve.AutoSteal.l.splice(t, 1)
                }
            }, {
                type: "button",
                label: "Clear",
                action: e=>{
                    Ve.AutoSteal.l = []
                }
            }], {
                folder: "AutoSteal"
            }),
            e.Register([{
                type: "button",
                label: "AutoSpike key",
                action(e) {
                    UtilsUI.controls.setKeyBind("AutoSpike")
                }
            }, {
                type: "display",
                label: "AutoSpike key:",
                object: Ve.AutoSpike,
                property: "k"
            }, {
                type: "checkbox",
                label: "Custom AutoSpike",
                object: Ve.AutoSpike,
                property: "m",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "Mode",
                object: Ve.yusu,
                property: "0",
                options: ["Low", "Middle", "High"],
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "1",
                object: Ve.AutoSpike.p,
                property: "0",
                options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall", "Nothing"],
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "2",
                object: Ve.AutoSpike.p,
                property: "1",
                options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall", "Nothing"],
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "3",
                object: Ve.AutoSpike.p,
                property: "2",
                options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall", "Nothing"],
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "4",
                object: Ve.AutoSpike.p,
                property: "3",
                options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall", "Nothing"],
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "5",
                object: Ve.AutoSpike.p,
                property: "4",
                options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall", "Nothing"],
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "6",
                object: Ve.AutoSpike.p,
                property: "5",
                options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall", "Nothing"],
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "7",
                object: Ve.AutoSpike.p,
                property: "6",
                options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall", "Nothing"],
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "button",
                label: "set resurrection key",
                action(e) {
                    UtilsUI.controls.setKeyBind("AutoSpikee")
                }
            }, {
                type: "display",
                label: "resurrection key:",
                object: Ve.AutoSpikee,
                property: "k"
            }, {
                type: "checkbox",
                label: "resurrection2",
                object: Ve.AutoSpikee,
                property: "m",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "button",
                label: "set fire key",
                action(e) {
                    UtilsUI.controls.setKeyBind("AutoSpikeee")
                }
            }, {
                type: "display",
                label: "fie key:",
                object: Ve.AutoSpikeee,
                property: "k"
            }, {
                type: "checkbox",
                label: "fire2",
                object: Ve.AutoSpikeee,
                property: "m",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "button",
                label: "set Autowall key",
                action(e) {
                    UtilsUI.controls.setKeyBind("Autowall")
                }
            }, {
                type: "display",
                label: "Autowall key:",
                object: Ve.Autowall,
                property: "k"
            }], {
                folder: "AutoSpike"
            }),
            e.Register([{
                type: "checkbox",
                label: "Chase Enemy",
                object: Ve,
                property: "movetoenemy",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoRespawn",
                object: Ve,
                property: "Respawn",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "select",
                label: "AutoBuild Mode",
                object: Ve.AutoBuild.c,
                property: "0",
                options: ["Bridge", "Roof", "Plot"],
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoIce",
                object: Ve,
                property: "Ice",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoIce afk mode",
                object: Ve,
                property: "afk",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoCrown",
                object: Ve,
                property: "Crown",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoEmerald",
                object: Ve.AutoEme,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "aimbot",
                object: Ve.AMB,
                property: "e",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "aimbot spike auto",
                object: Ve.spikea,
                property: "e",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "auto Totem",
                object: Ve.AutoTotem,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Xray",
                object: Ve.Xray,
                property: "e",
                onChange(e) {
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoExtractor Take",
                object: Ve.AutoExtTake,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoExtractor Put",
                object: Ve.AutoExtPut,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoBread Take",
                object: Ve.AutoBreadTake,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "AutoBread Put",
                object: Ve.AutoBreadPut,
                property: "e",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }, {
                type: "checkbox",
                label: "Equip after place",
                object: Ve,
                property: "Equiq",
                onChange: e=>{
                    UtilsUI.saveSettings()
                }
            }], {
                folder: "MainH"
            })
        }
        ,
        controls: null,
        controller: class {
            setKeyBind(i) {
                Ve[i].k = "Press any key";
                let n = 0;
                document.addEventListener("keydown", function e(t) {
                    1 <= ++n && ("Escape" == t.code ? Ve[i].k = "NONE" : Ve[i].k = t.code,
                    document.removeEventListener("keydown", e),
                    UtilsUI.saveSettings())
                })
            }
        }
        ,
        saveSettings: ()=>{
            for (var e in Ve)
                localStorage.setItem(e + "yusukedao", JSON.stringify(Ve[e]))
        }
        ,
        loadSettings: ()=>{
            for (var e in Ve) {
                var t = localStorage.getItem(e + "yusukedao");
                t && (Ve[e] = JSON.parse(t))
            }
        }
        ,
        LoadHack: ()=>{
            UtilsUI.loadSettings(),
            Ve.Xray.e = !1,
            Ve.AutoSpike.e = !1,
            Ve.AutoSpikee.e = !1,
            Ve.AutoSpikeee.e = !1,
            Ve.PathFinder.e = !1,
            Ve.bot = !1,
            Ve.AMB.e = !1,
            Ve.spikea.e = !1,
            Ve.click.e = !1,
            Ve.Autofarm.e = !1,
            Ve.AutoEme.e = !1,
            Ve.Tame.e = !1,
            Ve.LowFrame.e = !1,
            UtilsUI.controls = new UtilsUI.controller;
            var e = document.createElement("script");
            e.onload = function() {
                try {
                    UtilsUI.initUI()
                } catch {
                    Ve.GuiFixer = !0,
                    UtilsUI.saveSettings()
                }
            }
            ,
            e.src = "https://unpkg.com/guify@0.12.0/lib/guify.min.js",
            document.body.appendChild(e)
        }
    },
    UtilsUI.LoadHack();
    let Yo = (e,t)=>{
        var i = e.y
          , n = e.x
          , e = t ? t.x : e
          , r = t ? t.y : 0;
        let o = 0;
        return i < r - Number(Ve.sets2) && t && (o += 4),
        i > r + Number(Ve.sets2) && t && (o += 8),
        t = r,
        t -= i,
        Math.sqrt(t * t) <= Number(Ve.sets3) && (n < e - Number(Ve.sets4) && (o += 2),
        n > e + Number(Ve.sets4)) && (o += 1),
        o
    }
    ;
    function Jo(e, t) {
        return e && t ? Math.sqrt((e.x - t.x) ** 2 + (e.y - t.y) ** 2) : null
    }
    let Xo = performance.now();
    performance.now();
    function jo() {
        if (client.socket && Ye.alive && 1 === client.socket.readyState && N0) {
            let n = Fe.fast_units[Ye.uid];
            if (Ve.PathFinder.e && client.socket && Ye.alive && 1 === client.socket.readyState && N0 && n) {
                var e = {
                    x: Math.round(n.x / 100),
                    y: Math.round(n.y / 100)
                }
                  , i = L0;
                if (i.x <= Fe.nw && 0 <= i.x && i.y <= Fe.nh && 0 <= i.y) {
                    var r = new PF.Grid(Fe.nw,Fe.nh);
                    if (W) {
                        W = !1;
                        for (let t = 0; t < he.tiles.length; t++)
                            for (let e = 0; e < he.tiles[t].length; e++)
                                he.tiles[t][e].t && (he.tiles[t][e].t[0] ? z.push(["t", "0", he.tiles[t][e].t[0]]) : he.tiles[t][e].t[1] ? z.push(["t", "1", he.tiles[t][e].t[1]]) : he.tiles[t][e].t[2] ? z.push(["t", "2", he.tiles[t][e].t[2]]) : he.tiles[t][e].t[3] ? z.push(["t", "3", he.tiles[t][e].t[3]]) : he.tiles[t][e].t[4] ? z.push(["t", "4", he.tiles[t][e].t[4]]) : he.tiles[t][e].t[5] && z.push(["t", "5", he.tiles[t][e].t[5]])),
                                he.tiles[t][e].b && (he.tiles[t][e].b[0] ? z.push(["b", "0", he.tiles[t][e].b[0]]) : he.tiles[t][e].b[1] ? z.push(["b", "1", he.tiles[t][e].b[1]]) : he.tiles[t][e].b[2] ? z.push(["b", "2", he.tiles[t][e].b[2]]) : he.tiles[t][e].b[3] ? z.push(["b", "3", he.tiles[t][e].b[3]]) : he.tiles[t][e].b[4] ? z.push(["b", "4", he.tiles[t][e].b[4]]) : he.tiles[t][e].b[5] && z.push(["b", "5", he.tiles[t][e].b[5]])),
                                he.tiles[t][e].f && (he.tiles[t][e].f[0] ? z.push(["f", "0", he.tiles[t][e].f[0]]) : he.tiles[t][e].f[1] ? z.push(["f", "1", he.tiles[t][e].f[1]]) : he.tiles[t][e].f[2] ? z.push(["f", "2", he.tiles[t][e].f[2]]) : he.tiles[t][e].f[3] ? z.push(["f", "3", he.tiles[t][e].f[3]]) : he.tiles[t][e].f[4] ? z.push(["f", "4", he.tiles[t][e].f[4]]) : he.tiles[t][e].f[5] && z.push(["f", "5", he.tiles[t][e].f[5]])),
                                he.tiles[t][e].s && (he.tiles[t][e].s[0] ? z.push(["s", "0", he.tiles[t][e].s[0]]) : he.tiles[t][e].s[1] ? z.push(["s", "1", he.tiles[t][e].s[1]]) : he.tiles[t][e].s[2] ? z.push(["s", "2", he.tiles[t][e].s[2]]) : he.tiles[t][e].s[3] ? z.push(["s", "3", he.tiles[t][e].s[3]]) : he.tiles[t][e].s[4] ? z.push(["s", "4", he.tiles[t][e].s[4]]) : he.tiles[t][e].s[5] && z.push(["s", "5", he.tiles[t][e].s[5]])),
                                he.tiles[t][e].g && (he.tiles[t][e].g[0] ? z.push(["g", "0", he.tiles[t][e].g[0]]) : he.tiles[t][e].g[1] ? z.push(["g", "1", he.tiles[t][e].g[1]]) : he.tiles[t][e].g[2] ? z.push(["g", "2", he.tiles[t][e].g[2]]) : he.tiles[t][e].g[3] ? z.push(["g", "3", he.tiles[t][e].g[3]]) : he.tiles[t][e].g[4] ? z.push(["g", "4", he.tiles[t][e].g[4]]) : he.tiles[t][e].g[5] && z.push(["g", "5", he.tiles[t][e].g[5]])),
                                he.tiles[t][e].d && (he.tiles[t][e].d[0] ? z.push(["d", "0", he.tiles[t][e].d[0]]) : he.tiles[t][e].d[1] ? z.push(["d", "1", he.tiles[t][e].d[1]]) : he.tiles[t][e].d[2] ? z.push(["d", "2", he.tiles[t][e].d[2]]) : he.tiles[t][e].d[3] ? z.push(["d", "3", he.tiles[t][e].d[3]]) : he.tiles[t][e].d[4] ? z.push(["d", "4", he.tiles[t][e].d[4]]) : he.tiles[t][e].d[5] && z.push(["d", "5", he.tiles[t][e].d[5]])),
                                he.tiles[t][e].a && (he.tiles[t][e].a[0] ? z.push(["a", "0", he.tiles[t][e].a[0]]) : he.tiles[t][e].a[1] ? z.push(["a", "1", he.tiles[t][e].a[1]]) : he.tiles[t][e].a[2] ? z.push(["a", "2", he.tiles[t][e].a[2]]) : he.tiles[t][e].a[3] ? z.push(["a", "3", he.tiles[t][e].a[3]]) : he.tiles[t][e].a[4] ? z.push(["a", "4", he.tiles[t][e].a[4]]) : he.tiles[t][e].a[5] && z.push(["a", "5", he.tiles[t][e].a[5]])),
                                he.tiles[t][e].re && (he.tiles[t][e].re[0] ? z.push(["re", "0", he.tiles[t][e].re[0]]) : he.tiles[t][e].re[1] ? z.push(["re", "1", he.tiles[t][e].re[1]]) : he.tiles[t][e].re[2] ? z.push(["re", "2", he.tiles[t][e].re[2]]) : he.tiles[t][e].re[3] ? z.push(["re", "3", he.tiles[t][e].re[3]]) : he.tiles[t][e].re[4] ? z.push(["re", "4", he.tiles[t][e].re[4]]) : he.tiles[t][e].re[5] && z.push(["re", "5", he.tiles[t][e].re[5]])),
                                he.tiles[t][e].m && (he.tiles[t][e].m[0] ? z.push(["m", "0", he.tiles[t][e].m[0]]) : he.tiles[t][e].m[1] ? z.push(["m", "1", he.tiles[t][e].m[1]]) : he.tiles[t][e].m[2] ? z.push(["m", "2", he.tiles[t][e].m[2]]) : he.tiles[t][e].m[3] ? z.push(["m", "3", he.tiles[t][e].m[3]]) : he.tiles[t][e].m[4] ? z.push(["m", "4", he.tiles[t][e].m[4]]) : he.tiles[t][e].m[5] && z.push(["m", "5", he.tiles[t][e].m[5]])),
                                he.tiles[t][e].la && (he.tiles[t][e].la[0] ? z.push(["la", "0", he.tiles[t][e].la[0]]) : he.tiles[t][e].la[1] ? z.push(["la", "1", he.tiles[t][e].la[1]]) : he.tiles[t][e].la[2] ? z.push(["la", "2", he.tiles[t][e].la[2]]) : he.tiles[t][e].la[3] ? z.push(["la", "3", he.tiles[t][e].la[3]]) : he.tiles[t][e].la[4] ? z.push(["la", "4", he.tiles[t][e].la[4]]) : he.tiles[t][e].la[5] && z.push(["la", "5", he.tiles[t][e].la[5]])),
                                he.tiles[t][e].plm && (he.tiles[t][e].plm[0] ? z.push(["plm", "0", he.tiles[t][e].plm[0]]) : he.tiles[t][e].plm[1] ? z.push(["plm", "1", he.tiles[t][e].plm[1]]) : he.tiles[t][e].plm[2] ? z.push(["plm", "2", he.tiles[t][e].plm[2]]) : he.tiles[t][e].plm[3] ? z.push(["plm", "3", he.tiles[t][e].plm[3]]) : he.tiles[t][e].plm[4] ? z.push(["plm", "4", he.tiles[t][e].plm[4]]) : he.tiles[t][e].plm[5] && z.push(["plm", "5", he.tiles[t][e].plm[5]])),
                                he.tiles[t][e].p && (he.tiles[t][e].p[0] ? z.push(["p", "0", he.tiles[t][e].p[0]]) : he.tiles[t][e].p[1] ? z.push(["p", "1", he.tiles[t][e].p[1]]) : he.tiles[t][e].p[2] ? z.push(["p", "2", he.tiles[t][e].p[2]]) : he.tiles[t][e].p[3] ? z.push(["p", "3", he.tiles[t][e].p[3]]) : he.tiles[t][e].p[4] ? z.push(["p", "4", he.tiles[t][e].p[4]]) : he.tiles[t][e].p[5] && z.push(["p", "5", he.tiles[t][e].p[5]])),
                                he.tiles[t][e].c && (he.tiles[t][e].c[0] ? z.push(["d", "0", he.tiles[t][e].c[0]]) : he.tiles[t][e].c[1] ? z.push(["d", "1", he.tiles[t][e].c[1]]) : he.tiles[t][e].c[2] ? z.push(["d", "2", he.tiles[t][e].c[2]]) : he.tiles[t][e].c[3] ? z.push(["d", "3", he.tiles[t][e].c[3]]) : he.tiles[t][e].c[4] ? z.push(["d", "4", he.tiles[t][e].c[4]]) : he.tiles[t][e].c[5] && z.push(["d", "5", he.tiles[t][e].c[5]])),
                                he.tiles[t][e].cs && (he.tiles[t][e].cs[0] ? z.push(["cs", "0", he.tiles[t][e].cs[0]]) : he.tiles[t][e].cs[1] ? z.push(["cs", "1", he.tiles[t][e].cs[1]]) : he.tiles[t][e].cs[2] ? z.push(["cs", "2", he.tiles[t][e].cs[2]]) : he.tiles[t][e].cs[3] ? z.push(["cs", "3", he.tiles[t][e].cs[3]]) : he.tiles[t][e].cs[4] ? z.push(["cs", "4", he.tiles[t][e].cs[4]]) : he.tiles[t][e].cs[5] && z.push(["cs", "5", he.tiles[t][e].cs[5]])),
                                he.tiles[t][e].gw && (he.tiles[t][e].gw[0] ? z.push(["gw", "0", he.tiles[t][e].gw[0]]) : he.tiles[t][e].gw[1] ? z.push(["gw", "1", he.tiles[t][e].gw[1]]) : he.tiles[t][e].gw[2] ? z.push(["gw", "2", he.tiles[t][e].gw[2]]) : he.tiles[t][e].gw[3] ? z.push(["gw", "3", he.tiles[t][e].gw[3]]) : he.tiles[t][e].gw[4] ? z.push(["gw", "4", he.tiles[t][e].gw[4]]) : he.tiles[t][e].gw[5] && z.push(["gw", "5", he.tiles[t][e].gw[5]])),
                                he.tiles[t][e].dw && (he.tiles[t][e].dw[0] ? z.push(["dw", "0", he.tiles[t][e].dw[0]]) : he.tiles[t][e].dw[1] ? z.push(["dw", "1", he.tiles[t][e].dw[1]]) : he.tiles[t][e].dw[2] ? z.push(["dw", "2", he.tiles[t][e].dw[2]]) : he.tiles[t][e].dw[3] ? z.push(["dw", "3", he.tiles[t][e].dw[3]]) : he.tiles[t][e].dw[4] ? z.push(["dw", "4", he.tiles[t][e].dw[4]]) : he.tiles[t][e].dw[5] && z.push(["dw", "5", he.tiles[t][e].dw[5]]));
                        console.log(z)
                    }
                    for (let e = 0; e < z.length; e++) {
                        if (!(Math.floor(z[e][2][0].x / 100) + 1 > Fe.nw || Math.floor(z[e][2][0].y / 100) + 1 > Fe.nh || Math.floor(z[e][2][0].x / 100) < 0 || Math.floor(z[e][2][0].y / 100) < 0))
                            switch (z[e][0]) {
                            case "t":
                                switch (z[e][1]) {
                                case "0":
                                case "1":
                                    o();
                                    break;
                                case "2":
                                case "3":
                                case "4":
                                case "5":
                                    t();
                                    break;
                                case "6":
                                    console.log("More?")
                                }
                                break;
                            case "b":
                                switch (z[e][1]) {
                                case "0":
                                case "1":
                                    o();
                                    break;
                                case "2":
                                case "3":
                                    t();
                                    break;
                                case "4":
                                    console.log("More?")
                                }
                                break;
                            case "f":
                                switch (z[e][1]) {
                                case "0":
                                case "1":
                                    o();
                                    break;
                                case "2":
                                    t();
                                    break;
                                case "3":
                                    console.log("More?")
                                }
                                break;
                            case "s":
                                switch (z[e][1]) {
                                case "0":
                                    o();
                                    break;
                                case "1":
                                case "2":
                                    t();
                                    break;
                                case "3":
                                    console.log("More?")
                                }
                                break;
                            case "g":
                            case "d":
                                switch (z[e][1]) {
                                case "0":
                                case "1":
                                case "2":
                                    t();
                                    break;
                                case "3":
                                    console.log("More?")
                                }
                                break;
                            case "a":
                            case "re":
                                switch (z[e][1]) {
                                case "0":
                                    o();
                                    break;
                                case "1":
                                case "2":
                                    t();
                                    break;
                                case "3":
                                    console.log("More?")
                                }
                                break;
                            case "m":
                                switch (z[e][1]) {
                                case "0":
                                case "1":
                                    o();
                                    break;
                                case "2":
                                    t();
                                    break;
                                case "3":
                                    console.log("More?")
                                }
                                break;
                            case "la":
                                switch (z[e][1]) {
                                case "0":
                                    o();
                                    break;
                                case "1":
                                case "2":
                                    t();
                                    break;
                                case "3":
                                    o();
                                    break;
                                case "4":
                                case "5":
                                    t();
                                    break;
                                case "6":
                                    console.log("More?")
                                }
                                break;
                            case "plm":
                                switch (z[e][1]) {
                                case "0":
                                case "1":
                                    t();
                                    break;
                                case "2":
                                    o();
                                    break;
                                case "3":
                                    console.log("More?")
                                }
                                break;
                            case "p":
                            case "c":
                                switch (z[e][1]) {
                                case "0":
                                    t();
                                    break;
                                case "1":
                                    console.log("More?")
                                }
                                break;
                            case "cs":
                                switch (z[e][1]) {
                                case "0":
                                case "1":
                                case "2":
                                case "3":
                                    o();
                                    break;
                                case "4":
                                    console.log("More?")
                                }
                                break;
                            case "gw":
                            case "dw":
                                switch (z[e][1]) {
                                case "0":
                                case "1":
                                case "2":
                                    t();
                                    break;
                                case "3":
                                    console.log("More?")
                                }
                            }
                        function t() {
                            r.setWalkableAt(Math.floor(z[e][2][0].x / 100) + 1, Math.floor(z[e][2][0].y / 100), !1),
                            r.setWalkableAt(Math.floor(z[e][2][0].x / 100) - 1, Math.floor(z[e][2][0].y / 100), !1),
                            r.setWalkableAt(Math.floor(z[e][2][0].x / 100), Math.floor(z[e][2][0].y / 100) + 1, !1),
                            r.setWalkableAt(Math.floor(z[e][2][0].x / 100), Math.floor(z[e][2][0].y / 100) - 1, !1),
                            Math.floor(z[e][2][0].x / 100) == i.x && Math.floor(z[e][2][0].y / 100) == i.y && (V = z[e])
                        }
                        function o() {
                            r.setWalkableAt(Math.floor(z[e][2][0].x / 100), Math.floor(z[e][2][0].y / 100), !1),
                            r.setWalkableAt(Math.floor(z[e][2][0].x / 100) + 1, Math.floor(z[e][2][0].y / 100) - 1, !1),
                            r.setWalkableAt(Math.floor(z[e][2][0].x / 100) - 1, Math.floor(z[e][2][0].y / 100) + 1, !1),
                            r.setWalkableAt(Math.floor(z[e][2][0].x / 100) + 1, Math.floor(z[e][2][0].y / 100) + 1, !1),
                            r.setWalkableAt(Math.floor(z[e][2][0].x / 100) - 1, Math.floor(z[e][2][0].y / 100) - 1, !1),
                            Math.floor(z[e][2][0].x / 100) == i.x && Math.floor(z[e][2][0].y / 100) == i.y && (V = z[e])
                        }
                    }
                    var a = []
                      , s = [];
                    for (let e = 0; e < Fe.units.length; e++)
                        if (Fe.units[e] && Fe.units[e][0] && Fe.units[e][0].type)
                            switch (Fe.units[e][0].type) {
                            case xe.WOOD_DOOR:
                            case xe.STONE_DOOR:
                            case xe.GOLD_DOOR:
                            case xe.DIAMOND_DOOR:
                            case xe.AMETHYST_DOOR:
                            case xe.REIDITE_DOOR:
                            case xe.WOOD_DOOR_SPIKE:
                            case xe.STONE_DOOR_SPIKE:
                            case xe.GOLD_DOOR_SPIKE:
                            case xe.DIAMOND_DOOR_SPIKE:
                            case xe.AMETHYST_DOOR_SPIKE:
                                (1 & Fe.units[e][0].info ? s : a).push(Fe.units[e]);
                                break;
                            case xe.PUMPKIN_SEED:
                            case xe.PUMPKIN_MOB:
                            case xe.GARLIC_SEED:
                            case xe.GARLIC_MOB:
                            case xe.THORNBUSH_SEED:
                            case xe.THORNBUSH_MOB:
                            case xe.ALOE_VERA_MOB:
                            case xe.TOMATO_SEED:
                            case xe.CARROT_SEED:
                            case xe.WOOD_DOOR:
                            case xe.ALOE_VERA_MOB:
                            case xe.ALOE_VERA_SEED:
                            case xe.WATERMELON_SEED:
                                a.push(Fe.units[e]);
                                break;
                            case xe.WORKBENCH:
                            case xe.WALL:
                            case xe.SPIKE:
                            case xe.STONE_WALL:
                            case xe.GOLD_WALL:
                            case xe.DIAMOND_WALL:
                            case xe.CHEST:
                            case xe.STONE_SPIKE:
                            case xe.GOLD_SPIKE:
                            case xe.DIAMOND_SPIKE:
                            case xe.FURNACE:
                            case xe.AMETHYST_WALL:
                            case xe.AMETHYST_SPIKE:
                            case xe.RESURRECTION:
                            case xe.EMERALD_MACHINE:
                            case xe.EXTRACTOR_MACHINE_STONE:
                            case xe.EXTRACTOR_MACHINE_GOLD:
                            case xe.EXTRACTOR_MACHINE_DIAMOND:
                            case xe.EXTRACTOR_MACHINE_AMETHYST:
                            case xe.EXTRACTOR_MACHINE_REIDITE:
                            case xe.TOTEM:
                            case xe.WINDMILL:
                            case xe.BREAD_OVEN:
                            case xe.WELL:
                            case xe.REIDITE_WALL:
                            case xe.REIDITE_SPIKE:
                                a.push(Fe.units[e])
                            }
                    for (let t = 0; t < a.length; t++)
                        for (let e = 0; e < a[t].length; e++)
                            Math.floor(a[t][e].x / 100) == i.x && Math.floor(a[t][e].y / 100) == i.y || Math.floor(a[t][e].x / 100) + 1 > Fe.nw || Math.floor(a[t][e].y / 100) + 1 > Fe.nh || Math.floor(a[t][e].x / 100) < 0 || Math.floor(a[t][e].y / 100) < 0 || r.setWalkableAt(Math.floor(a[t][e].x / 100), Math.floor(a[t][e].y / 100), !1);
                    for (let t = 0; t < s.length; t++)
                        for (let e = 0; e < s[t].length; e++)
                            Math.floor(s[t][e].x / 100) + 1 > Fe.nw || Math.floor(s[t][e].y / 100) + 1 > Fe.nh || Math.floor(s[t][e].x / 100) < 0 || Math.floor(s[t][e].y / 100) < 0 || r.setWalkableAt(Math.floor(s[t][e].x / 100), Math.floor(s[t][e].y / 100), !0);
                    !V || Math.floor(V[2][0].x / 100) + 1 > Fe.nw || Math.floor(V[2][0].y / 100) + 1 > Fe.nh || Math.floor(V[2][0].x / 100) < 0 || Math.floor(V[2][0].y / 100) < 0 || (r.setWalkableAt(Math.floor(V[2][0].x / 100) + 1, Math.floor(V[2][0].y / 100), !1),
                    r.setWalkableAt(Math.floor(V[2][0].x / 100) - 1, Math.floor(V[2][0].y / 100), !1),
                    r.setWalkableAt(Math.floor(V[2][0].x / 100), Math.floor(V[2][0].y / 100) + 1, !1),
                    r.setWalkableAt(Math.floor(V[2][0].x / 100), Math.floor(V[2][0].y / 100) - 1, !1),
                    r.setWalkableAt(Math.floor(V[2][0].x / 100), Math.floor(V[2][0].y / 100), !0));
                    var d = new PF.AStarFinder({
                        allowDiagonal: !0,
                        dontCrossCorners: !0
                    });
                    k = d.findPath(e.x, e.y, i.x, i.y, r);
                    for (let e = 0, t = Fe.units[xe.CHEST]; e < t.length; e++)
                        if (!(300 < Jo(Fe.fast_units[Ye.uid], t)))
                            for (item in Ye.inv.n)
                                client.socket.send(JSON.stringify([8, parseInt(item), 255, t[e].pid, t[e].id]));
                    0 === k.length ? client.send_move(0) : k[1] && (e.x == k[1][0] && e.y + 1 == k[1][1] && client.send_move(4),
                    e.x == k[1][0] && e.y - 1 == k[1][1] && client.send_move(8),
                    e.x - 1 == k[1][0] && e.y == k[1][1] && client.send_move(1),
                    e.x + 1 == k[1][0] && e.y == k[1][1] && client.send_move(2),
                    e.x - 1 == k[1][0] && e.y - 1 == k[1][1] && client.send_move(9),
                    e.x - 1 == k[1][0] && e.y + 1 == k[1][1] && client.send_move(5),
                    e.x + 1 == k[1][0] && e.y - 1 == k[1][1] && client.send_move(10),
                    e.x + 1 == k[1][0]) && e.y + 1 == k[1][1] && client.send_move(6)
                }
            }
            if (Ve.movetoenemy && Fe.fast_units[Ye.uid] && N0 && n)
                for (let e = 0; e < Fe.units[xe.PLAYERS].length; e++) {
                    var _;
                    Fe.units[xe.PLAYERS][e].pid == Ve.chaseid && (_ = 0,
                    Math.floor(Fe.units[xe.PLAYERS][e].x / 100),
                    Math.floor(Fe.units[xe.PLAYERS][e].y / 100),
                    Math.sqrt(Math.pow(Fe.fast_units[Ye.uid].y - Fe.units[xe.PLAYERS][e].y, 2) + Math.pow(Fe.fast_units[Ye.uid].x - Fe.units[xe.PLAYERS][e].x, 2)) < 350) && (_ = Yo(Fe.fast_units[Ye.uid], Fe.units[xe.PLAYERS][e]),
                    client.send_move(_))
                }
            if (3e3 < performance.now() - Xo && client.socket && !Ve.movetoenemy && (Xo = performance.now(),
            1 === client.socket.readyState) && N0 && Fe.fast_units[Ye.uid] && Ve.Ping && (s0 = performance.now(),
            client.socket.send(JSON.stringify([11]))),
            500 < Date.now() - window.Timeouts) {
                if (!n)
                    return;
                window.Timeouts = Date.now();
                for (var u = 0; u < K.length; u++)
                    F.includes(K[u]) || Fe.delete_units(K[u]);
                F = []
            }
            if (Ve.AutoSpikee.e && Ye.inv.n[Ge.RESURRECTION] && n) {
                var d = 2 * Math.PI
                  , l = Math.floor((n.angle + d) % d * 255 / d);
                if (Ve.AutoSpikee.m || client.socket.send(JSON.stringify([10, 145, l, 0])),
                Ve.AutoSpikee.m)
                    for (let e = 0; e < 15; e++)
                        client.socket.send(JSON.stringify([10, 145, l, 0])),
                        client.socket.send(JSON.stringify([10, 145, (5 * e + l) % 255, 0])),
                        client.socket.send(JSON.stringify([10, 145, (l - 5 * e + 255) % 255, 0])),
                        client.socket.send(JSON.stringify([10, 145, (15 * e + l) % 255, 0])),
                        client.socket.send(JSON.stringify([10, 145, (l - 15 * e + 255) % 255, 0]))
            }
            if (Ve.AutoSpikeee.e && n) {
                var e = 2 * Math.PI
                  , c = Math.floor((n.angle + e) % e * 255 / e);
                if (Ve.AutoSpikeee.m || (Ye.inv.n[Ge.FIRE] ? client.socket.send(JSON.stringify([10, 107, c, 0])) : Ye.inv.n[Ge.BIG_FIRE] && client.socket.send(JSON.stringify([10, 112, c, 0]))),
                Ve.AutoSpikeee.m && n)
                    for (let e = 0; e < 10; e++)
                        Ye.inv.n[Ge.FIRE] ? (client.socket.send(JSON.stringify([10, 107, c, 0])),
                        client.socket.send(JSON.stringify([10, 107, (2 * e + c) % 255, 0])),
                        client.socket.send(JSON.stringify([10, 107, (c - 2 * e + 255) % 255, 0]))) : Ye.inv.n[Ge.BIG_FIRE] && (client.socket.send(JSON.stringify([10, 112, c, 0])),
                        client.socket.send(JSON.stringify([10, 112, (5 * e + c) % 255, 0])),
                        client.socket.send(JSON.stringify([10, 112, (c - 5 * e + 255) % 255, 0])))
            }
            if (Ve.Autowall.e && n) {
                var h = 2 * Math.PI
                  , E = Math.floor((n.angle + h) % h * 255 / h);
                for (let e = 0; e < 22; e++)
                    client.socket.send(JSON.stringify([10, 156, E, 0])),
                    client.socket.send(JSON.stringify([10, 156, (e + E) % 255, 0])),
                    client.socket.send(JSON.stringify([10, 156, (E - e + 255) % 255, 0]))
            }
            if (Ve.AutoSpike.e && n) {
                let t = null;
                for (const B of Ve.AutoSpike.p) {
                    var T = U[B];
                    if (-1 !== T && Ye.inv.n[T]) {
                        t = T;
                        break
                    }
                }
                if (t) {
                    var h = 2 * Math.PI
                      , A = Math.floor((n.angle + h) % h * 255 / h);
                    if (Ve.AutoSpike.m || client.socket.send(JSON.stringify([10, t, A, 0])),
                    Ve.AutoSpike.m)
                        for (let e = 0; e < 22; e++)
                            client.socket.send(JSON.stringify([10, t, A, 0])),
                            client.socket.send(JSON.stringify([10, t, (e + A) % 255, 0])),
                            client.socket.send(JSON.stringify([10, t, (A - e + 255) % 255, 0]))
                }
            }
            if (Ve.Crown && Ye.ghost.enabled && 5050 < +new Date - v0) {
                var I = Fe.units[xe.RESURRECTION];
                if (0 < I.length) {
                    Ye.inv.n[39] ? p = 39 : Ye.inv.n[38] ? p = 38 : Ye.inv.n[37] ? p = 37 : Ye.inv.n[36] ? p = 36 : Ye.inv.n[35] && (p = 35);
                    for (let e = 0; e < I.length; e++)
                        Jo(n, I[e]) < 350 && client.socket.send(JSON.stringify([17, I[e].pid, I[e].id]));
                    client.socket.send(JSON.stringify([5, 79])),
                    p && client.socket.send(JSON.stringify([5, p]))
                }
            }
            if (Ve.AutoBuild.e && Ye.inv.n[P0()] && n && (h = 2 * Math.PI,
            p = Math.floor((n.angle + h) % h * 255 / h),
            client.socket.send(JSON.stringify([10, P0(), p, Ve.AutoBuild.m ? 1 : 0]))),
            Ve.AutoEme.e && n) {
                var h = {
                    x: T0[A0][0],
                    y: T0[A0][1]
                }
                  , p = {
                    x: n.x - h.x,
                    y: n.y - h.y
                }
                  , h = {
                    x: Math.abs(n.x - h.x),
                    y: Math.abs(n.y - h.y)
                };
                let e = 0;
                if (60 < h.x && (50 < p.x && (e += 1),
                p.x < 50) && (e += 2),
                60 < h.y && (50 < p.y && (e += 8),
                p.y < 50) && (e += 4),
                client.send_move(e),
                h.x < 100 && h.y < 100) {
                    switch (A0) {
                    case 0:
                        client.socket.send(JSON.stringify([4, 105]));
                        break;
                    case 1:
                        client.socket.send(JSON.stringify([4, 40]));
                        break;
                    case 2:
                        client.socket.send(JSON.stringify([4, 216]))
                    }
                    client.socket.send(JSON.stringify([14])),
                    Ve.AutoEme.a = n.angle
                }
            }
            if (Ve.DropSword2.e && n && Math.floor(200 * Ye.gauges.life.x) <= Ve.DropSword2.hp && Ko(n.right) && client.socket.send(JSON.stringify([6, n.right])),
            Ve.autowear && n && Math.floor(200 * Ye.gauges.life.x) <= Ve.autowearHP && Ye.inv.n[Ge.CROWN_BLUE] && !Ye.helmet.wait && (v0 = +new Date,
            Ye.helmet.wait = 1,
            n.clothe !== Ge.CROWN_BLUE) && (client.socket.send(JSON.stringify([5, 79])),
            client.send_chat("Try Crown Wear By Low HP YUSU HAX")),
            Ve.godown.e && n && (client.send_move(0),
            (n.vehicle === Ge.BABY_DRAGON || n.vehicle === Ge.BABY_LAVA || n.vehicle === Ge.NIMBUS || n.vehicle === Ge.HAWK || n.vehicle === Ge.PLANE) && 250 < n.speed || (n.vehicle === Ge.BABY_DRAGON || n.vehicle === Ge.BABY_LAVA || n.vehicle === Ge.NIMBUS || n.vehicle === Ge.HAWK || n.vehicle === Ge.PLANE) && 200 < performance.now() - $o && Ve.Ping && ($o = performance.now(),
            client.socket.send(JSON.stringify([5, n.vehicle])))),
            Ve.SwordInChest.e && Ko(n.right, !1) && n) {
                var g = {
                    A: [],
                    L: []
                };
                for (let e = Fe.units[xe.CHEST], t = 0; t < e.length; t++)
                    Jo(n, e[t]) < 200 && (!e[t].lock || e[t].ally ? g.A.push({
                        id: e[t].id,
                        placeid: e[t].pid
                    }) : Ye.inv.n[152] && g.L.push({
                        id: e[t].id,
                        placeid: e[t].pid,
                        x: e[t].x,
                        y: e[t].y
                    }));
                if (g.A.length)
                    for (let e = 0; e < g.A.length; e++)
                        client.socket.send(JSON.stringify([8, n.right, 255, g.A[e].placeid, g.A[e].id])),
                        client.socket.send(JSON.stringify([9, g.A[e].placeid, g.A[e].id]));
                else if (Ye.inv.n[Ge.CHEST]) {
                    $i.E = !0,
                    client.socket.send(JSON.stringify([10, 161, 35, 0])),
                    client.socket.send(JSON.stringify([10, 161, 235, 0])),
                    client.socket.send(JSON.stringify([10, 161, 100, 0])),
                    client.socket.send(JSON.stringify([10, 161, 169, 0]));
                    for (let e = -15; e < 15; e++) {
                        for (; $i.L + e < 0; )
                            e++;
                        client.socket.send(JSON.stringify([8, n.right, 255, Ye.id, $i.L + e])),
                        client.socket.send(JSON.stringify([9, Ye.id, $i.L + e]))
                    }
                } else
                    Ye.build.wait || (p = function(e, t) {
                        let i = null
                          , n = -1;
                        for (var r, o, a = 0, s = t.length; a < s; ++a)
                            r = t[a],
                            o = (e.x - r.x) ** 2 + (e.y - r.y) ** 2,
                            (-1 === n || o < n) && (n = o,
                            i = r);
                        return i
                    }(n, g.L)) && (client.socket.send(JSON.stringify([15, p.placeid, p.id])),
                    client.socket.send(JSON.stringify([8, n.right, 255, p.placeid, p.id])),
                    client.socket.send(JSON.stringify([9, p.placeid, p.id])))
            }
            for (var O = Fe.units[xe.CHEST], u = 0; u < O.length; u++)
                if (Se(O[u]),
                Ve.AutoSteal.e && (O[u].ally || !O[u].lock || O[u].info && Ve.AutoSteal.u && Ye.inv.n[152] || O[u].steal && Ye.inv.n[152]) && Jo(n, O[u]) < 300) {
                    (Ve.AutoSteal.u || O[u].steal) && !O[u].ally && O[u].lock && (client.socket.send(JSON.stringify([15, O[u].pid, O[u].id])),
                    client.socket.send(JSON.stringify([15, O[u].pid, O[u].id])));
                    for (let e = 0; e < 5; e++)
                        client.socket.send(JSON.stringify([9, O[u].pid, O[u].id]))
                }
            function b(e, t) {
                Ye.inv.n[e] ? n.right !== e && client.socket.send(JSON.stringify([5, e])) : Ye.inv.n[t] && n.right !== t && client.socket.send(JSON.stringify([5, t]))
            }
            var m, C;
            if (Ve.Autofarm.e && n) {
                for (var R, S = {
                    obj: null,
                    dist: -1,
                    type: 0
                }, N = Ve.Autofarm.x, D = Ve.Autofarm.y, f = Ve.Autofarm.xx - Ve.Autofarm.x, v = Ve.Autofarm.yy - Ve.Autofarm.y, u = 0, M = [...Fe.units[xe.PUMPKIN_SEED], ...Fe.units[xe.SEED], ...Fe.units[xe.WHEAT_SEED], ...Fe.units[xe.THORNBUSH_SEED], ...Fe.units[xe.GARLIC_SEED], ...Fe.units[xe.CARROT_SEED], ...Fe.units[xe.ALOE_VERA_SEED], ...Fe.units[xe.WATERMELON_SEED], ...Fe.units[xe.TOMATO_SEED]], w = M.length, y = null; u < w; ++u)
                    (R = M[u]).info && 10 !== R.info && (Ve.Autofarm.w || 16 !== R.info) && N < R.x - 50 + 100 && N + f > R.x - 50 && D < R.y - 50 + 100 && D + v > R.y - 50 && (y = (n.x - R.x) ** 2 + (n.y - R.y) ** 2,
                    -1 === S.dist || y < S.dist) && (S.dist = y,
                    S.obj = R);
                if (S.obj && 150 < Ye.gauges.realhp) {
                    switch (S.dist = (h = n,
                    p = S.obj,
                    h && p ? Math.sqrt((h.x - p.x) ** 2 + (h.y - p.y) ** 2) : null),
                    S.obj.info) {
                    case 1:
                    case 2:
                    case 3:
                        b(54, 53),
                        S.type = 2;
                        break;
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                        Ve.Autofarm.w ? Ye.inv.n[49] && (49 !== n.right && client.socket.send(JSON.stringify([5, 49])),
                        S.type = 1) : (b(54, 53),
                        S.type = 2)
                    }
                    var L = {
                        x: n.x - S.obj.x,
                        y: n.y - S.obj.y
                    }
                      , G = {
                        x: Math.abs(n.x - S.obj.x),
                        y: Math.abs(n.y - S.obj.y)
                    };
                    let e = 0;
                    1 == S.type ? (90 < G.x && (0 < L.x && (e += 1),
                    L.x < 0) && (e += 2),
                    90 < G.y && (0 < L.y && (e += 8),
                    L.y < 0) && (e += 4)) : (125 < G.x && (0 < L.x && (e += 1),
                    L.x < 0) && (e += 2),
                    125 < G.y && (0 < L.y && (e += 8),
                    L.y < 0) && (e += 4)),
                    G.x < 300 && G.y < 300 && (Ve.Autofarm.a = xo(n, S.obj, !1),
                    L = 2 * Math.PI,
                    G = Math.floor((Ve.Autofarm.a + L) % L * 255 / L),
                    Ve.Autofarm.a) && (client.socket.send(JSON.stringify([4, G])),
                    client.socket.send(JSON.stringify([14]))),
                    client.send_move(e)
                } else {
                    var L = {
                        x: n.x - Ve.Autofarm.sx,
                        y: n.y - Ve.Autofarm.sy
                    }
                      , G = {
                        x: Math.abs(n.x - Ve.Autofarm.sx),
                        y: Math.abs(n.y - Ve.Autofarm.sy)
                    };
                    let e = 0;
                    60 < G.x && (0 < L.x && (e += 1),
                    L.x < 0) && (e += 2),
                    60 < G.y && (0 < L.y && (e += 8),
                    L.y < 0) && (e += 4),
                    client.send_move(e)
                }
            }
            if (Ve.Tame.e && n)
                for (let e = [...Fe.units[xe.HAWK], ...Fe.units[xe.BABY_MAMMOTH], ...Fe.units[xe.BABY_DRAGON], ...Fe.units[xe.BABY_LAVA], ...Fe.units[xe.CRAB_BOSS], ...Fe.units[xe.BOAR]], t = e.length, i = 0; i < t; i++)
                    !e[i].info && (C = function(e, t) {
                        let i = null;
                        return obj = t,
                        y = (e.x - obj.x) ** 2 + (e.y - obj.y) ** 2,
                        i = obj
                    }(n, e[i]),
                    (m = Jo(n, e[i])) <= 200) && n.right == Le.SADDLE ? (Ve.Tame.a = xo(n, C, !1),
                    C = 2 * Math.PI,
                    C = Math.floor((Ve.Tame.a + C) % C * 255 / C),
                    client.socket.send(JSON.stringify([3, C])),
                    Ve.Tame.a && m <= 178 && (client.socket.send(JSON.stringify([4, C])),
                    client.socket.send(JSON.stringify([14])))) : Ve.Tame.a = null;
            if (Ve.AMB.e && n) {
                let e = null;
                switch (Ko(n.right, !0)) {
                case 1:
                    e = n.fly ? 196.8 : 157.6;
                    break;
                case 2:
                    e = n.fly ? 291.8 : 227.6;
                    break;
                case 3:
                    e = 620;
                    break;
                case 4:
                    e = n.fly ? 140 : 125;
                    break;
                case 5:
                    e = n.clothe == Ge.WINTER_HOOD || n.clothe == Ge.HOOD ? n.fly ? 120.8 : 97.6 : null
                }
                e && ((G = Fo(n, Fe.units[xe.PLAYERS])) && (L = Jo(n, G)) <= e ? (Ve.AMB.a = xo(n, G, !0),
                G = 2 * Math.PI,
                G = Math.floor((Ve.AMB.a + G) % G * 255 / G),
                client.socket.send(JSON.stringify([3, G])),
                Ve.AMB.a && L <= e - 22 && (client.socket.send(JSON.stringify([4, G])),
                client.socket.send(JSON.stringify([14])))) : Ve.AMB.a = null)
            }
            if (Ve.spikea.e && n) {
                L = Fo(n, Fe.units[xe.PLAYERS]);
                if (L) {
                    G = Jo(n, L);
                    if (G <= Ve.RangeBetweenMeAndEnemy) {
                        var L = xo(n, L, !0)
                          , H = 2 * Math.PI
                          , P = Math.floor((L + H) % H * 255 / H);
                        if (L && G <= Ve.RangeBetweenMeAndEnemy && Ye.inv.n[156])
                            for (let e = 0; e < 15; e++)
                                client.socket.send(JSON.stringify([10, 156, P, 0])),
                                client.socket.send(JSON.stringify([10, 156, (2 * e + P) % 255, 0])),
                                client.socket.send(JSON.stringify([10, 156, (P - 2 * e + 255) % 255, 0]))
                    }
                }
            }
        }
    }
    function qo() {
        if (client.socket && Ye.alive && 1 === client.socket.readyState && N0) {
            if (Fe.fast_units[Ye.uid] && (Ve.currentSkin && (Fe.fast_units[Ye.uid].skin = Ve.currentSkin),
            Ve.currentAccessory && (Fe.fast_units[Ye.uid].accessory = Ve.currentAccessory),
            Ve.currentBook && (Fe.fast_units[Ye.uid].book = Ve.currentBook),
            Ve.currentBag) && (Fe.fast_units[Ye.uid].baglook = Ve.currentBag),
            (Ve.AutoBreadTake.e || Ve.AutoBreadPut.e || Ve.AutoSteal.e) && Fe.fast_units[Ye.uid] && Fe.units[xe.WINDMILL].forEach(e=>{
                Jo(Fe.fast_units[Ye.uid], e) < 300 && (Ve.AutoBreadPut.e && client.socket.send(JSON.stringify([22, 255, e.pid, e.id])),
                Ve.AutoBreadTake.e || Ve.AutoSteal.e) && client.socket.send(JSON.stringify([23, e.pid, e.id]))
            }
            ),
            (Ve.AutoBreadTake.e || Ve.AutoBreadPut.e || Ve.AutoSteal.e) && Fe.fast_units[Ye.uid] && Fe.units[xe.BREAD_OVEN].forEach(e=>{
                Jo(Fe.fast_units[Ye.uid], e) < 300 && (Ve.AutoBreadPut.e && (client.socket.send(JSON.stringify([25, 31, e.pid, e.id])),
                client.socket.send(JSON.stringify([24, 31, e.pid, e.id]))),
                Ve.AutoBreadTake.e || Ve.AutoSteal.e) && client.socket.send(JSON.stringify([26, e.pid, e.id]))
            }
            ),
            Math.floor(6 - (performance.now() - M0.GaugeTimer) / 1e3) < -1) {
                if (5e3 < Date.now() - window.Timers) {
                    window.Timers = Date.now();
                    for (const t of [Ge.PLANT, Ge.GARLIC, Ge.CRAB_STICK, Ge.PUMPKIN, Ge.TOMATO, Ge.CARROT, Ge.WATERMELON, Ge.BREAD, Ge.COOKED_MEAT, Ge.FOODFISH_COOKED, Ge.COOKIE, Ge.SANDWICH, Ge.CAKE, Ge.CRAB_LOOT])
                        if (t,
                        Ge.PLANT,
                        Ye.inv.n[t])
                            return client.select_inv(t, Ye.inv.find_item(t)),
                            client.new_alert("DDOS!!Ate a berry!!"),
                            void client.new_alert("ãƒ™ãƒªãƒ¼é£Ÿã¹ãŸï¼")
                }
                1e4 < Date.now() - window.Timers2 && Ye.gauges.t < .45 && Ye.inv.n[Ge.BOTTLE_FULL] && (client.select_inv(Ge.BOTTLE_FULL, Ye.inv.find_item(Ge.BOTTLE_FULL)),
                client.new_alert("Drank water for ddos"),
                client.new_alert("ã©ã™æ¥ã¦ã‚‹ã‹ã‚‰æ°´ã®ã‚€ã§ãƒ¼"))
            }
            var e;
            if (Ye.gauges.h < Ve.food / 100 && window.Caneat)
                for (const i of [Ge.PLANT, Ge.GARLIC, Ge.CRAB_STICK, Ge.PUMPKIN, Ge.TOMATO, Ge.CARROT, Ge.WATERMELON, Ge.BREAD, Ge.COOKED_MEAT, Ge.FOODFISH_COOKED, Ge.COOKIE, Ge.SANDWICH, Ge.CAKE, Ge.CRAB_LOOT])
                    if (i == Ge.PLANT) {
                        if (Ye.inv.n[i])
                            return client.select_inv(i, Ye.inv.find_item(i)),
                            client.select_inv(i, Ye.inv.find_item(i)),
                            r = r || workerTimers.setTimeout(()=>{
                                window.Caneat = !0,
                                r = null
                            }
                            , 1e3),
                            void (window.Caneat = !1)
                    } else if (Ye.inv.n[i])
                        return client.select_inv(i, Ye.inv.find_item(i)),
                        r = r || workerTimers.setTimeout(()=>{
                            window.Caneat = !0,
                            r = null
                        }
                        , 1e3),
                        void (window.Caneat = !1);
            if (Ye.gauges.t < .45 && !Ye.craft.crafting && window.Candrink && Ye.inv.n[Ge.BOTTLE_FULL] && (-1 < Math.floor(6 - (performance.now() - M0.GaugeTimer) / 1e3) && client.select_inv(Ge.BOTTLE_FULL, Ye.inv.find_item(Ge.BOTTLE_FULL)),
            o = o || workerTimers.setTimeout(()=>{
                window.Candrink = !0,
                o = null
            }
            , 1e4),
            window.Candrink = !1),
            Ve.AutoRecycle.e && Ye.gauges.h > Ve.food / 100 && .45 < Ye.gauges.t && 0 < Math.floor(6 - (performance.now() - M0.GaugeTimer) / 1e3) && client.socket.send(JSON.stringify([29, f0])),
            Ve.AutoCraft.e && Ye.gauges.h > Ve.food / 100 && .45 < Ye.gauges.t && 0 < Math.floor(6 - (performance.now() - M0.GaugeTimer) / 1e3) && (client.socket.send(JSON.stringify([5, 28])),
            client.socket.send(JSON.stringify([7, D0]))),
            Ve.maker && Ye.gauges.h > Ve.food / 100 && 0 < Math.floor(6 - (performance.now() - M0.GaugeTimer) / 1e3) && (client.socket.send(JSON.stringify([5, 28])),
            client.socket.send(JSON.stringify([7, E.REIDITE_SPIKE])),
            client.socket.send(JSON.stringify([7, E.REIDITE_WALL])),
            client.socket.send(JSON.stringify([7, E.AMETHYST_WALL])),
            client.socket.send(JSON.stringify([7, E.DIAMOND_WALL])),
            client.socket.send(JSON.stringify([7, E.GOLD_WALL])),
            client.socket.send(JSON.stringify([7, E.STONE_WALL])),
            client.socket.send(JSON.stringify([7, E.WALL]))),
            Ve.maker2 && Ye.gauges.h > Ve.food / 100 && 0 < Math.floor(6 - (performance.now() - M0.GaugeTimer) / 1e3) && (client.socket.send(JSON.stringify([5, 28])),
            client.socket.send(JSON.stringify([7, E.REIDITE_WALL])),
            client.socket.send(JSON.stringify([7, E.AMETHYST_WALL])),
            client.socket.send(JSON.stringify([7, E.DIAMOND_WALL])),
            client.socket.send(JSON.stringify([7, E.GOLD_WALL])),
            client.socket.send(JSON.stringify([7, E.STONE_WALL])),
            client.socket.send(JSON.stringify([7, E.WALL]))),
            Ve.afk && 40 < Math.floor(100 - 100 * Ye.gauges.wa) && Math.floor(200 * Ye.gauges.life.x) < 200 && client.socket.send(JSON.stringify([5, 136])),
            window.ThisTabMiniMized && (Je.update_connection(),
            Je.update_scene()),
            Ve.click.e && Fe.fast_units[Ye.uid] && (e = 2 * Math.PI,
            e = Math.floor((Fe.fast_units[Ye.uid].angle + e) % e * 255 / e),
            client.socket.send(JSON.stringify([4, e])),
            client.socket.send(JSON.stringify([14]))),
            Ve.AutoSeed && Ye.inv.n[_0])
                for (let e = 0; e < 256; e++)
                    client.socket.send(JSON.stringify([10, _0, e, 0])),
                    client.socket.send(JSON.stringify([10, _0, e, 1]))
        }
    }
    function Zo() {
        if (client.socket && Ye.alive && 1 === client.socket.readyState && N0 && Ve.BaseFixer.e && Fe.fast_units[Ye.uid] && 0 != Ve.BaseFixer.m && Ve.BaseFixer.x && Ve.BaseFixer.y) {
            Je.update_connection(),
            Je.update_scene();
            let e = 0;
            var t = {
                x: Ve.BaseFixer.m[window.FixArray][0],
                y: Ve.BaseFixer.m[window.FixArray][1]
            }
              , i = {
                x: Ve.BaseFixer.x,
                y: Ve.BaseFixer.y
            }
              , n = {
                x: Fe.fast_units[Ye.uid].r.x,
                y: Fe.fast_units[Ye.uid].r.y
            };
            Fe.time && window.bruh <= 2 || !Ve.BaseFixer.smart ? window.FixStop || (o = t.x,
            o -= r = n.x,
            r = t.y - n.y,
            Math.sqrt(r * r + o * o) < Number(Ve.sets1) ? (workerTimers.setTimeout(()=>{
                window.FixStop = !1
            }
            , 200),
            window.FixStop = !0,
            window.FixArray >= Ve.BaseFixer.m.length - 1 ? (window.FixArray = 0,
            window.bruh++) : window.FixArray++) : (e = Yo(n, t),
            client.send_move(e))) : (e = Yo(n, i),
            client.send_move(e))
        }
        var r, o
    }
    performance.now(),
    performance.now();
    let $o = performance.now();
    workerTimers.setTimeout(()=>{
        workerTimers.setInterval(jo, 25),
        workerTimers.setInterval(qo, 500),
        workerTimers.setInterval(Zo, 25)
    }
    , 3e3),
    "inline-block" == document.getElementById("trevda").style.display ? alert("Client Code Failed To Be Removed") : document.getElementsByClassName("grecaptcha-badge") && (document.getElementsByClassName("grecaptcha-badge")[0].style = "none"),
    document.addEventListener("visibilitychange", ()=>{
        "visible" === document.visibilityState ? window.ThisTabMiniMized = !1 : window.ThisTabMiniMized = !0
    }
    )
}
window.addEventListener("load", initScript);
